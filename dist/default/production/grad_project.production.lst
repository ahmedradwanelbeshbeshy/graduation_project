

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Sep 16 22:03:34 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  00FD0B                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _port_registers
    60  00FD0B  80                 	db	128
    61  00FD0C  0F                 	db	15
    62  00FD0D  81                 	db	129
    63  00FD0E  0F                 	db	15
    64  00FD0F  82                 	db	130
    65  00FD10  0F                 	db	15
    66  00FD11  83                 	db	131
    67  00FD12  0F                 	db	15
    68  00FD13  84                 	db	132
    69  00FD14  0F                 	db	15
    70                           
    71                           ;initializer for _lat_registers
    72  00FD15  89                 	db	137
    73  00FD16  0F                 	db	15
    74  00FD17  8A                 	db	138
    75  00FD18  0F                 	db	15
    76  00FD19  8B                 	db	139
    77  00FD1A  0F                 	db	15
    78  00FD1B  8C                 	db	140
    79  00FD1C  0F                 	db	15
    80  00FD1D  8D                 	db	141
    81  00FD1E  0F                 	db	15
    82                           
    83                           ;initializer for _tris_registers
    84  00FD1F  92                 	db	146
    85  00FD20  0F                 	db	15
    86  00FD21  93                 	db	147
    87  00FD22  0F                 	db	15
    88  00FD23  94                 	db	148
    89  00FD24  0F                 	db	15
    90  00FD25  95                 	db	149
    91  00FD26  0F                 	db	15
    92  00FD27  96                 	db	150
    93  00FD28  0F                 	db	15
    94                           
    95                           ;initializer for _PIN1
    96  00FD29  10                 	db	16
    97  0000                     _PORTE	set	3972
    98  0000                     _PORTD	set	3971
    99  0000                     _PORTC	set	3970
   100  0000                     _PORTB	set	3969
   101  0000                     _PORTA	set	3968
   102  0000                     _LATE	set	3981
   103  0000                     _LATD	set	3980
   104  0000                     _LATC	set	3979
   105  0000                     _LATB	set	3978
   106  0000                     _LATA	set	3977
   107  0000                     _TRISE	set	3990
   108  0000                     _TRISD	set	3989
   109  0000                     _TRISC	set	3988
   110  0000                     _TRISB	set	3987
   111  0000                     _TRISA	set	3986
   112                           
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116  00FD2A                     __pcinit:
   117                           	callstack 0
   118  00FD2A                     start_initialization:
   119                           	callstack 0
   120  00FD2A                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Initialize objects allocated to COMRAM (31 bytes)
   124                           ; load TBLPTR registers with __pidataCOMRAM
   125  00FD2A  0E0B               	movlw	low __pidataCOMRAM
   126  00FD2C  6EF6               	movwf	tblptrl,c
   127  00FD2E  0EFD               	movlw	high __pidataCOMRAM
   128  00FD30  6EF7               	movwf	tblptrh,c
   129  00FD32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   130  00FD34  6EF8               	movwf	tblptru,c
   131  00FD36  EE00  F001         	lfsr	0,__pdataCOMRAM
   132  00FD3A  EE10 F01F          	lfsr	1,31
   133  00FD3E                     copy_data0:
   134  00FD3E  0009               	tblrd		*+
   135  00FD40  CFF5 FFEE          	movff	tablat,postinc0
   136  00FD44  50E5               	movf	postdec1,w,c
   137  00FD46  50E1               	movf	fsr1l,w,c
   138  00FD48  E1FA               	bnz	copy_data0
   139  00FD4A                     end_of_initialization:
   140                           	callstack 0
   141  00FD4A                     __end_of__initialization:
   142                           	callstack 0
   143  00FD4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  00FD4C  6EF8               	movwf	tblptru,c
   145  00FD4E  0100               	movlb	0
   146  00FD50  EF78  F07E         	goto	_main	;jump to C main() function
   147                           
   148                           	psect	dataCOMRAM
   149  000001                     __pdataCOMRAM:
   150                           	callstack 0
   151  000001                     _port_registers:
   152                           	callstack 0
   153  000001                     	ds	10
   154  00000B                     _lat_registers:
   155                           	callstack 0
   156  00000B                     	ds	10
   157  000015                     _tris_registers:
   158                           	callstack 0
   159  000015                     	ds	10
   160  00001F                     _PIN1:
   161                           	callstack 0
   162  00001F                     	ds	1
   163                           
   164                           	psect	cstackCOMRAM
   165  000020                     __pcstackCOMRAM:
   166                           	callstack 0
   167  000020                     GPIO_Pin_Direction_Initialize@_pin_config:
   168                           	callstack 0
   169  000020                     GPIO_Pin_Write_Logic@_pin_config:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x0
   173  000020                     	ds	2
   174  000022                     ??_GPIO_Pin_Direction_Initialize:
   175  000022                     GPIO_Pin_Write_Logic@logic:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x2
   179  000022                     	ds	1
   180  000023                     ??_GPIO_Pin_Write_Logic:
   181                           
   182                           ; 1 bytes @ 0x3
   183  000023                     	ds	5
   184  000028                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x8
   188  000028                     	ds	1
   189  000029                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x9
   193  000029                     	ds	1
   194  00002A                     GPIO_Pin_Initialize@_pin_config:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0xA
   198  00002A                     	ds	2
   199  00002C                     GPIO_Pin_Initialize@ERRORSTATUS:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xC
   203  00002C                     	ds	1
   204  00002D                     
   205                           ; 1 bytes @ 0xD
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 16 in file "application.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;Total ram usage:        0 bytes
   230 ;; Hardware stack levels required when called:    3
   231 ;; This function calls:
   232 ;;		_application_intialize
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239  00FCF0                     __ptext0:
   240                           	callstack 0
   241  00FCF0                     _main:
   242                           	callstack 28
   243  00FCF0                     
   244                           ;application.c: 18:     application_intialize();
   245  00FCF0  EC7E  F07E         	call	_application_intialize	;wreg free
   246  00FCF4                     l124:
   247  00FCF4  EF7A  F07E         	goto	l124
   248  00FCF8  EF00  F000         	goto	start
   249  00FCFC                     __end_of_main:
   250                           	callstack 0
   251                           
   252 ;; *************** function _application_intialize *****************
   253 ;; Defined at:
   254 ;;		line 25 in file "application.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;Total ram usage:        0 bytes
   273 ;; Hardware stack levels used:    1
   274 ;; Hardware stack levels required when called:    2
   275 ;; This function calls:
   276 ;;		_GPIO_Pin_Initialize
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text1
   283  00FCFC                     __ptext1:
   284                           	callstack 0
   285  00FCFC                     _application_intialize:
   286                           	callstack 28
   287  00FCFC                     
   288                           ;application.c: 27: GPIO_Pin_Initialize(&PIN1);
   289  00FCFC  0E1F               	movlw	low _PIN1
   290  00FCFE  6E2A               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
   291  00FD00  0E00               	movlw	high _PIN1
   292  00FD02  6E2B               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
   293  00FD04  ECAA  F07E         	call	_GPIO_Pin_Initialize	;wreg free
   294  00FD08  0012               	return		;funcret
   295  00FD0A                     __end_of_application_intialize:
   296                           	callstack 0
   297                           
   298 ;; *************** function _GPIO_Pin_Initialize *****************
   299 ;; Defined at:
   300 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;  _pin_config     2   10[COMRAM] PTR const struct .
   303 ;;		 -> PIN1(1), 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  ERRORSTATUS     1   12[COMRAM] unsigned char 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      unsigned char 
   308 ;; Registers used:
   309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;Total ram usage:        3 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    1
   322 ;; This function calls:
   323 ;;		_GPIO_Pin_Direction_Initialize
   324 ;;		_GPIO_Pin_Write_Logic
   325 ;; This function is called by:
   326 ;;		_application_intialize
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           	psect	text2
   331  00FD54                     __ptext2:
   332                           	callstack 0
   333  00FD54                     _GPIO_Pin_Initialize:
   334                           	callstack 28
   335  00FD54                     
   336                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
   337  00FD54  502A               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
   338  00FD56  102B               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
   339  00FD58  A4D8               	btfss	status,2,c
   340  00FD5A  EFB1  F07E         	goto	u391
   341  00FD5E  EFB3  F07E         	goto	u390
   342  00FD62                     u391:
   343  00FD62  EFB5  F07E         	goto	l1022
   344  00FD66                     u390:
   345  00FD66                     
   346                           ;MCAL/GPIO/hal_gpio.c: 164:     }
   347  00FD66  EFCB  F07E         	goto	l84
   348  00FD6A                     l1022:
   349                           
   350                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
   351  00FD6A  C02A  F020         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
   352  00FD6E  C02B  F021         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
   353  00FD72  EC60  F07F         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   354  00FD76  6E2C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   355                           
   356                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
   357  00FD78  C02A  F020         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
   358  00FD7C  C02B  F021         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
   359  00FD80  C02A  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
   360  00FD84  C02B  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
   361  00FD88  0E00               	movlw	0
   362  00FD8A  BEDF               	btfsc	indf2,7,c
   363  00FD8C  0E01               	movlw	1
   364  00FD8E  6E22               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   365  00FD90  ECCC  F07E         	call	_GPIO_Pin_Write_Logic	;wreg free
   366  00FD94  6E2C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   367  00FD96                     l84:
   368  00FD96  0012               	return		;funcret
   369  00FD98                     __end_of_GPIO_Pin_Initialize:
   370                           	callstack 0
   371                           
   372 ;; *************** function _GPIO_Pin_Write_Logic *****************
   373 ;; Defined at:
   374 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   377 ;;		 -> PIN1(1), 
   378 ;;  logic           1    2[COMRAM] enum E2957
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  ERRORSTATUS     1    9[COMRAM] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      unsigned char 
   383 ;; Registers used:
   384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   390 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;Total ram usage:       10 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_GPIO_Pin_Initialize
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text3
   404  00FD98                     __ptext3:
   405                           	callstack 0
   406  00FD98                     _GPIO_Pin_Write_Logic:
   407                           	callstack 28
   408  00FD98                     
   409                           ;MCAL/GPIO/hal_gpio.c: 82: Std_returnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config,logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       St
      +                          d_returnType ERRORSTATUS =(Std_returnType) 0x01;
   410  00FD98  0E01               	movlw	1
   411  00FD9A  6E29               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
   412  00FD9C                     
   413                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
   414  00FD9C  5020               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
   415  00FD9E  1021               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
   416  00FDA0  B4D8               	btfsc	status,2,c
   417  00FDA2  EFD5  F07E         	goto	u351
   418  00FDA6  EFD7  F07E         	goto	u350
   419  00FDAA                     u351:
   420  00FDAA  EFE6  F07E         	goto	l998
   421  00FDAE                     u350:
   422  00FDAE  C020  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   423  00FDB2  C021  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   424  00FDB6  50DF               	movf	indf2,w,c
   425  00FDB8  0B07               	andlw	7
   426  00FDBA  6E23               	movwf	??_GPIO_Pin_Write_Logic^0,c
   427  00FDBC  0E07               	movlw	7
   428  00FDBE  6423               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
   429  00FDC0  EFE4  F07E         	goto	u361
   430  00FDC4  EFE6  F07E         	goto	u360
   431  00FDC8                     u361:
   432  00FDC8  EF49  F07F         	goto	l1006
   433  00FDCC                     u360:
   434  00FDCC                     l998:
   435                           
   436                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS=(Std_retu
      +                          rnType) 0x00;
   437  00FDCC  0E00               	movlw	0
   438  00FDCE  6E29               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
   439                           
   440                           ;MCAL/GPIO/hal_gpio.c: 88:     }
   441  00FDD0  EF5E  F07F         	goto	l1008
   442  00FDD4                     l1000:
   443                           
   444                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
   445  00FDD4  C020  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   446  00FDD8  C021  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   447  00FDDC  50DF               	movf	indf2,w,c
   448  00FDDE  0B07               	andlw	7
   449  00FDE0  6E23               	movwf	??_GPIO_Pin_Write_Logic^0,c
   450  00FDE2  0E01               	movlw	1
   451  00FDE4  6E24               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
   452  00FDE6  2A23               	incf	??_GPIO_Pin_Write_Logic^0,f,c
   453  00FDE8  EFF8  F07E         	goto	u374
   454  00FDEC                     u375:
   455  00FDEC  90D8               	bcf	status,0,c
   456  00FDEE  3624               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
   457  00FDF0                     u374:
   458  00FDF0  2E23               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
   459  00FDF2  EFF6  F07E         	goto	u375
   460  00FDF6  5024               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
   461  00FDF8  0AFF               	xorlw	255
   462  00FDFA  6E25               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
   463  00FDFC  C020  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   464  00FE00  C021  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   465  00FE04  30DF               	rrcf	indf2,w,c
   466  00FE06  32E8               	rrcf	wreg,f,c
   467  00FE08  32E8               	rrcf	wreg,f,c
   468  00FE0A  0B07               	andlw	7
   469  00FE0C  6E26               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
   470  00FE0E  5026               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
   471  00FE10  0D02               	mullw	2
   472  00FE12  0E0B               	movlw	low _lat_registers
   473  00FE14  24F3               	addwf	243,w,c
   474  00FE16  6ED9               	movwf	fsr2l,c
   475  00FE18  0E00               	movlw	high _lat_registers
   476  00FE1A  20F4               	addwfc	prodh,w,c
   477  00FE1C  6EDA               	movwf	fsr2h,c
   478  00FE1E  CFDE F027          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
   479  00FE22  CFDD F028          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
   480  00FE26  C027  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
   481  00FE2A  C028  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
   482  00FE2E  5025               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
   483  00FE30  16DF               	andwf	indf2,f,c
   484                           
   485                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
   486  00FE32  EF5E  F07F         	goto	l1008
   487  00FE36                     l1002:
   488                           
   489                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
   490  00FE36  C020  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   491  00FE3A  C021  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   492  00FE3E  50DF               	movf	indf2,w,c
   493  00FE40  0B07               	andlw	7
   494  00FE42  6E23               	movwf	??_GPIO_Pin_Write_Logic^0,c
   495  00FE44  0E01               	movlw	1
   496  00FE46  6E24               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
   497  00FE48  2A23               	incf	??_GPIO_Pin_Write_Logic^0,f,c
   498  00FE4A  EF29  F07F         	goto	u384
   499  00FE4E                     u385:
   500  00FE4E  90D8               	bcf	status,0,c
   501  00FE50  3624               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
   502  00FE52                     u384:
   503  00FE52  2E23               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
   504  00FE54  EF27  F07F         	goto	u385
   505  00FE58  C020  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   506  00FE5C  C021  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   507  00FE60  30DF               	rrcf	indf2,w,c
   508  00FE62  32E8               	rrcf	wreg,f,c
   509  00FE64  32E8               	rrcf	wreg,f,c
   510  00FE66  0B07               	andlw	7
   511  00FE68  6E25               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
   512  00FE6A  5025               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
   513  00FE6C  0D02               	mullw	2
   514  00FE6E  0E0B               	movlw	low _lat_registers
   515  00FE70  24F3               	addwf	243,w,c
   516  00FE72  6ED9               	movwf	fsr2l,c
   517  00FE74  0E00               	movlw	high _lat_registers
   518  00FE76  20F4               	addwfc	prodh,w,c
   519  00FE78  6EDA               	movwf	fsr2h,c
   520  00FE7A  CFDE F026          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
   521  00FE7E  CFDD F027          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
   522  00FE82  C026  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
   523  00FE86  C027  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
   524  00FE8A  5024               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
   525  00FE8C  12DF               	iorwf	indf2,f,c
   526                           
   527                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
   528  00FE8E  EF5E  F07F         	goto	l1008
   529  00FE92                     l1006:
   530  00FE92  5022               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
   531  00FE94  6E23               	movwf	??_GPIO_Pin_Write_Logic^0,c
   532  00FE96  6A24               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
   533                           
   534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   535                           ; Switch size 1, requested type "simple"
   536                           ; Number of cases is 1, Range of values is 0 to 0
   537                           ; switch strategies available:
   538                           ; Name         Instructions Cycles
   539                           ; simple_byte            4     3 (average)
   540                           ;	Chosen strategy is simple_byte
   541  00FE98  5024               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
   542  00FE9A  0A00               	xorlw	0	; case 0
   543  00FE9C  B4D8               	btfsc	status,2,c
   544  00FE9E  EF53  F07F         	goto	l1038
   545  00FEA2  EFE6  F07E         	goto	l998
   546  00FEA6                     l1038:
   547                           
   548                           ; Switch size 1, requested type "simple"
   549                           ; Number of cases is 2, Range of values is 0 to 1
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte            7     4 (average)
   553                           ;	Chosen strategy is simple_byte
   554  00FEA6  5023               	movf	??_GPIO_Pin_Write_Logic^0,w,c
   555  00FEA8  0A00               	xorlw	0	; case 0
   556  00FEAA  B4D8               	btfsc	status,2,c
   557  00FEAC  EFEA  F07E         	goto	l1000
   558  00FEB0  0A01               	xorlw	1	; case 1
   559  00FEB2  B4D8               	btfsc	status,2,c
   560  00FEB4  EF1B  F07F         	goto	l1002
   561  00FEB8  EFE6  F07E         	goto	l998
   562  00FEBC                     l1008:
   563                           
   564                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
   565  00FEBC  5029               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
   566  00FEBE  0012               	return		;funcret
   567  00FEC0                     __end_of_GPIO_Pin_Write_Logic:
   568                           	callstack 0
   569                           
   570 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
   571 ;; Defined at:
   572 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   575 ;;		 -> PIN1(1), 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  ERRORSTATUS     1    8[COMRAM] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      unsigned char 
   580 ;; Registers used:
   581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;Total ram usage:        9 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_GPIO_Pin_Initialize
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text4
   601  00FEC0                     __ptext4:
   602                           	callstack 0
   603  00FEC0                     _GPIO_Pin_Direction_Initialize:
   604                           	callstack 28
   605  00FEC0                     
   606                           ;MCAL/GPIO/hal_gpio.c: 25: Std_returnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_return
      +                          Type ERRORSTATUS =(Std_returnType) 0x01;
   607  00FEC0  0E01               	movlw	1
   608  00FEC2  6E28               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
   609  00FEC4                     
   610                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
   611  00FEC4  5020               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
   612  00FEC6  1021               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
   613  00FEC8  B4D8               	btfsc	status,2,c
   614  00FECA  EF69  F07F         	goto	u291
   615  00FECE  EF6B  F07F         	goto	u290
   616  00FED2                     u291:
   617  00FED2  EF7A  F07F         	goto	l974
   618  00FED6                     u290:
   619  00FED6  C020  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   620  00FEDA  C021  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   621  00FEDE  50DF               	movf	indf2,w,c
   622  00FEE0  0B07               	andlw	7
   623  00FEE2  6E22               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
   624  00FEE4  0E07               	movlw	7
   625  00FEE6  6422               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
   626  00FEE8  EF78  F07F         	goto	u301
   627  00FEEC  EF7A  F07F         	goto	u300
   628  00FEF0                     u301:
   629  00FEF0  EFDD  F07F         	goto	l982
   630  00FEF4                     u300:
   631  00FEF4                     l974:
   632                           
   633                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS=(Std_retu
      +                          rnType) 0x00;
   634  00FEF4  0E00               	movlw	0
   635  00FEF6  6E28               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
   636                           
   637                           ;MCAL/GPIO/hal_gpio.c: 31:     }
   638  00FEF8  EFFE  F07F         	goto	l984
   639  00FEFC                     l976:
   640                           
   641                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
   642  00FEFC  C020  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   643  00FF00  C021  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   644  00FF04  50DF               	movf	indf2,w,c
   645  00FF06  0B07               	andlw	7
   646  00FF08  6E22               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
   647  00FF0A  0E01               	movlw	1
   648  00FF0C  6E23               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
   649  00FF0E  2A22               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
   650  00FF10  EF8C  F07F         	goto	u314
   651  00FF14                     u315:
   652  00FF14  90D8               	bcf	status,0,c
   653  00FF16  3623               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
   654  00FF18                     u314:
   655  00FF18  2E22               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
   656  00FF1A  EF8A  F07F         	goto	u315
   657  00FF1E  5023               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
   658  00FF20  0AFF               	xorlw	255
   659  00FF22  6E24               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
   660  00FF24  C020  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   661  00FF28  C021  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   662  00FF2C  30DF               	rrcf	indf2,w,c
   663  00FF2E  32E8               	rrcf	wreg,f,c
   664  00FF30  32E8               	rrcf	wreg,f,c
   665  00FF32  0B07               	andlw	7
   666  00FF34  6E25               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
   667  00FF36  5025               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
   668  00FF38  0D02               	mullw	2
   669  00FF3A  0E15               	movlw	low _tris_registers
   670  00FF3C  24F3               	addwf	243,w,c
   671  00FF3E  6ED9               	movwf	fsr2l,c
   672  00FF40  0E00               	movlw	high _tris_registers
   673  00FF42  20F4               	addwfc	prodh,w,c
   674  00FF44  6EDA               	movwf	fsr2h,c
   675  00FF46  CFDE F026          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
   676  00FF4A  CFDD F027          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
   677  00FF4E  C026  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
   678  00FF52  C027  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
   679  00FF56  5024               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
   680  00FF58  16DF               	andwf	indf2,f,c
   681                           
   682                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
   683  00FF5A  EFFE  F07F         	goto	l984
   684  00FF5E                     l978:
   685                           
   686                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
   687  00FF5E  C020  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   688  00FF62  C021  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   689  00FF66  50DF               	movf	indf2,w,c
   690  00FF68  0B07               	andlw	7
   691  00FF6A  6E22               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
   692  00FF6C  0E01               	movlw	1
   693  00FF6E  6E23               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
   694  00FF70  2A22               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
   695  00FF72  EFBD  F07F         	goto	u324
   696  00FF76                     u325:
   697  00FF76  90D8               	bcf	status,0,c
   698  00FF78  3623               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
   699  00FF7A                     u324:
   700  00FF7A  2E22               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
   701  00FF7C  EFBB  F07F         	goto	u325
   702  00FF80  C020  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   703  00FF84  C021  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   704  00FF88  30DF               	rrcf	indf2,w,c
   705  00FF8A  32E8               	rrcf	wreg,f,c
   706  00FF8C  32E8               	rrcf	wreg,f,c
   707  00FF8E  0B07               	andlw	7
   708  00FF90  6E24               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
   709  00FF92  5024               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
   710  00FF94  0D02               	mullw	2
   711  00FF96  0E15               	movlw	low _tris_registers
   712  00FF98  24F3               	addwf	243,w,c
   713  00FF9A  6ED9               	movwf	fsr2l,c
   714  00FF9C  0E00               	movlw	high _tris_registers
   715  00FF9E  20F4               	addwfc	prodh,w,c
   716  00FFA0  6EDA               	movwf	fsr2h,c
   717  00FFA2  CFDE F025          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
   718  00FFA6  CFDD F026          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
   719  00FFAA  C025  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
   720  00FFAE  C026  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
   721  00FFB2  5023               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
   722  00FFB4  12DF               	iorwf	indf2,f,c
   723                           
   724                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
   725  00FFB6  EFFE  F07F         	goto	l984
   726  00FFBA                     l982:
   727  00FFBA  C020  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   728  00FFBE  C021  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   729  00FFC2  BCDF               	btfsc	indf2,6,c
   730  00FFC4  EFE6  F07F         	goto	u331
   731  00FFC8  EFE9  F07F         	goto	u330
   732  00FFCC                     u331:
   733  00FFCC  0E01               	movlw	1
   734  00FFCE  EFEA  F07F         	goto	u340
   735  00FFD2                     u330:
   736  00FFD2  0E00               	movlw	0
   737  00FFD4                     u340:
   738  00FFD4  6E22               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
   739  00FFD6  6A23               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
   740                           
   741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   742                           ; Switch size 1, requested type "simple"
   743                           ; Number of cases is 1, Range of values is 0 to 0
   744                           ; switch strategies available:
   745                           ; Name         Instructions Cycles
   746                           ; simple_byte            4     3 (average)
   747                           ;	Chosen strategy is simple_byte
   748  00FFD8  5023               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
   749  00FFDA  0A00               	xorlw	0	; case 0
   750  00FFDC  B4D8               	btfsc	status,2,c
   751  00FFDE  EFF3  F07F         	goto	l1040
   752  00FFE2  EF7A  F07F         	goto	l974
   753  00FFE6                     l1040:
   754                           
   755                           ; Switch size 1, requested type "simple"
   756                           ; Number of cases is 2, Range of values is 0 to 1
   757                           ; switch strategies available:
   758                           ; Name         Instructions Cycles
   759                           ; simple_byte            7     4 (average)
   760                           ;	Chosen strategy is simple_byte
   761  00FFE6  5022               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
   762  00FFE8  0A00               	xorlw	0	; case 0
   763  00FFEA  B4D8               	btfsc	status,2,c
   764  00FFEC  EF7E  F07F         	goto	l976
   765  00FFF0  0A01               	xorlw	1	; case 1
   766  00FFF2  B4D8               	btfsc	status,2,c
   767  00FFF4  EFAF  F07F         	goto	l978
   768  00FFF8  EF7A  F07F         	goto	l974
   769  00FFFC                     l984:
   770                           
   771                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
   772  00FFFC  5028               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
   773  00FFFE  0012               	return		;funcret
   774  010000                     __end_of_GPIO_Pin_Direction_Initialize:
   775                           	callstack 0
   776  0000                     
   777                           	psect	rparam
   778  0000                     
   779                           	psect	idloc
   780                           
   781                           ;Config register IDLOC0 @ 0x200000
   782                           ;	unspecified, using default values
   783  200000                     	org	2097152
   784  200000  FF                 	db	255
   785                           
   786                           ;Config register IDLOC1 @ 0x200001
   787                           ;	unspecified, using default values
   788  200001                     	org	2097153
   789  200001  FF                 	db	255
   790                           
   791                           ;Config register IDLOC2 @ 0x200002
   792                           ;	unspecified, using default values
   793  200002                     	org	2097154
   794  200002  FF                 	db	255
   795                           
   796                           ;Config register IDLOC3 @ 0x200003
   797                           ;	unspecified, using default values
   798  200003                     	org	2097155
   799  200003  FF                 	db	255
   800                           
   801                           ;Config register IDLOC4 @ 0x200004
   802                           ;	unspecified, using default values
   803  200004                     	org	2097156
   804  200004  FF                 	db	255
   805                           
   806                           ;Config register IDLOC5 @ 0x200005
   807                           ;	unspecified, using default values
   808  200005                     	org	2097157
   809  200005  FF                 	db	255
   810                           
   811                           ;Config register IDLOC6 @ 0x200006
   812                           ;	unspecified, using default values
   813  200006                     	org	2097158
   814  200006  FF                 	db	255
   815                           
   816                           ;Config register IDLOC7 @ 0x200007
   817                           ;	unspecified, using default values
   818  200007                     	org	2097159
   819  200007  FF                 	db	255
   820                           
   821                           	psect	config
   822                           
   823                           ; Padding undefined space
   824  300000                     	org	3145728
   825  300000  FF                 	db	255
   826                           
   827                           ;Config register CONFIG1H @ 0x300001
   828                           ;	Oscillator Selection bits
   829                           ;	OSC = HS, HS oscillator
   830                           ;	Fail-Safe Clock Monitor Enable bit
   831                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   832                           ;	Internal/External Oscillator Switchover bit
   833                           ;	IESO = OFF, Oscillator Switchover mode disabled
   834  300001                     	org	3145729
   835  300001  02                 	db	2
   836                           
   837                           ;Config register CONFIG2L @ 0x300002
   838                           ;	Power-up Timer Enable bit
   839                           ;	PWRT = OFF, PWRT disabled
   840                           ;	Brown-out Reset Enable bits
   841                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   842                           ;	Brown Out Reset Voltage bits
   843                           ;	BORV = 1, 
   844  300002                     	org	3145730
   845  300002  09                 	db	9
   846                           
   847                           ;Config register CONFIG2H @ 0x300003
   848                           ;	Watchdog Timer Enable bit
   849                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   850                           ;	Watchdog Timer Postscale Select bits
   851                           ;	WDTPS = 32768, 1:32768
   852  300003                     	org	3145731
   853  300003  1E                 	db	30
   854                           
   855                           ; Padding undefined space
   856  300004                     	org	3145732
   857  300004  FF                 	db	255
   858                           
   859                           ;Config register CONFIG3H @ 0x300005
   860                           ;	CCP2 MUX bit
   861                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   862                           ;	PORTB A/D Enable bit
   863                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   864                           ;	Low-Power Timer1 Oscillator Enable bit
   865                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   866                           ;	MCLR Pin Enable bit
   867                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   868  300005                     	org	3145733
   869  300005  81                 	db	129
   870                           
   871                           ;Config register CONFIG4L @ 0x300006
   872                           ;	Stack Full/Underflow Reset Enable bit
   873                           ;	STVREN = ON, Stack full/underflow will cause Reset
   874                           ;	Single-Supply ICSP Enable bit
   875                           ;	LVP = OFF, Single-Supply ICSP disabled
   876                           ;	Extended Instruction Set Enable bit
   877                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   878                           ;	Background Debugger Enable bit
   879                           ;	DEBUG = 0x1, unprogrammed default
   880  300006                     	org	3145734
   881  300006  81                 	db	129
   882                           
   883                           ; Padding undefined space
   884  300007                     	org	3145735
   885  300007  FF                 	db	255
   886                           
   887                           ;Config register CONFIG5L @ 0x300008
   888                           ;	Code Protection bit
   889                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   890                           ;	Code Protection bit
   891                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   892                           ;	Code Protection bit
   893                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   894                           ;	Code Protection bit
   895                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   896  300008                     	org	3145736
   897  300008  0F                 	db	15
   898                           
   899                           ;Config register CONFIG5H @ 0x300009
   900                           ;	Boot Block Code Protection bit
   901                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   902                           ;	Data EEPROM Code Protection bit
   903                           ;	CPD = OFF, Data EEPROM not code-protected
   904  300009                     	org	3145737
   905  300009  C0                 	db	192
   906                           
   907                           ;Config register CONFIG6L @ 0x30000A
   908                           ;	Write Protection bit
   909                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   910                           ;	Write Protection bit
   911                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   912                           ;	Write Protection bit
   913                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   914                           ;	Write Protection bit
   915                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   916  30000A                     	org	3145738
   917  30000A  0F                 	db	15
   918                           
   919                           ;Config register CONFIG6H @ 0x30000B
   920                           ;	Configuration Register Write Protection bit
   921                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   922                           ;	Boot Block Write Protection bit
   923                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   924                           ;	Data EEPROM Write Protection bit
   925                           ;	WRTD = OFF, Data EEPROM not write-protected
   926  30000B                     	org	3145739
   927  30000B  E0                 	db	224
   928                           
   929                           ;Config register CONFIG7L @ 0x30000C
   930                           ;	Table Read Protection bit
   931                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   932                           ;	Table Read Protection bit
   933                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   934                           ;	Table Read Protection bit
   935                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   936                           ;	Table Read Protection bit
   937                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   938  30000C                     	org	3145740
   939  30000C  0F                 	db	15
   940                           
   941                           ;Config register CONFIG7H @ 0x30000D
   942                           ;	Boot Block Table Read Protection bit
   943                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   944  30000D                     	org	3145741
   945  30000D  40                 	db	64
   946                           tosu	equ	0xFFF
   947                           tosh	equ	0xFFE
   948                           tosl	equ	0xFFD
   949                           stkptr	equ	0xFFC
   950                           pclatu	equ	0xFFB
   951                           pclath	equ	0xFFA
   952                           pcl	equ	0xFF9
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           prodh	equ	0xFF4
   958                           prodl	equ	0xFF3
   959                           indf0	equ	0xFEF
   960                           postinc0	equ	0xFEE
   961                           postdec0	equ	0xFED
   962                           preinc0	equ	0xFEC
   963                           plusw0	equ	0xFEB
   964                           fsr0h	equ	0xFEA
   965                           fsr0l	equ	0xFE9
   966                           wreg	equ	0xFE8
   967                           indf1	equ	0xFE7
   968                           postinc1	equ	0xFE6
   969                           postdec1	equ	0xFE5
   970                           preinc1	equ	0xFE4
   971                           plusw1	equ	0xFE3
   972                           fsr1h	equ	0xFE2
   973                           fsr1l	equ	0xFE1
   974                           bsr	equ	0xFE0
   975                           indf2	equ	0xFDF
   976                           postinc2	equ	0xFDE
   977                           postdec2	equ	0xFDD
   978                           preinc2	equ	0xFDC
   979                           plusw2	equ	0xFDB
   980                           fsr2h	equ	0xFDA
   981                           fsr2l	equ	0xFD9
   982                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        31
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> PIN1(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> PIN1(COMRAM[1]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> PIN1(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _application_intialize->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     760
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0     760
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Initialize                                  3     1      2     760
                                             10 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Write_Logic                                10     7      3     331
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Direction_Initialize                        9     7      2     255
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      2C       1       34.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      34        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Sep 16 22:03:34 2022

                                      l48 FFFE                                        l67 FEBE  
                                      l84 FD96                                       l130 FD08  
                                     l124 FCF4                                       l125 FCF4  
                                     l970 FEC4                                       l972 FED6  
                                     l982 FFBA                                       l974 FEF4  
                                     l976 FEFC                                       l984 FFFC  
                                     l968 FEC0                                       l992 FD98  
                                     l978 FF5E                                       l994 FD9C  
                                     l996 FDAE                                       l998 FDCC  
                                     u300 FEF4                                       u301 FEF0  
                                     u330 FFD2                                       u314 FF18  
                                     u331 FFCC                                       u315 FF14  
                                     u340 FFD4                                       u324 FF7A  
                                     u325 FF76                                       u350 FDAE  
                                     u351 FDAA                                       u360 FDCC  
                                     u361 FDC8                                       u290 FED6  
                                     u291 FED2                                       u374 FDF0  
                                     u390 FD66                                       u375 FDEC  
                                     u391 FD62                                       u384 FE52  
                                     u385 FE4E  GPIO_Pin_Direction_Initialize@ERRORSTATUS 0028  
                                     prod 000FF3                                       wreg 000FE8  
                  ??_GPIO_Pin_Write_Logic 0023                                      l1000 FDD4  
                                    l1002 FE36                                      l1020 FD66  
                                    l1006 FE92                                      l1022 FD6A  
                                    l1040 FFE6                                      l1008 FEBC  
                                    l1016 FD54                                      l1018 FD54  
                                    l1026 FCFC                                      l1028 FCF0  
                                    l1038 FEA6                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _PIN1 001F                   ??_application_intialize 002D  
                                    _main FCF0                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      prodl 000FF3  
                                    start 0000                              ___param_bank 000000  
                                   ?_main 0020                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     tablat 000FF5  
                                   status 000FD8                           __initialization FD2A  
                            __end_of_main FCFC                             _lat_registers 000B  
                                  ??_main 002D                             __activetblptr 000002  
         ??_GPIO_Pin_Direction_Initialize 0022               __end_of_GPIO_Pin_Initialize FD98  
                            __pdataCOMRAM 0001                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                              __accesstop 0080                   __end_of__initialization FD4A  
                           ___rparam_used 000001                            __pcstackCOMRAM 0020  
          __size_of_application_intialize 000E             __end_of_application_intialize FD0A  
   __end_of_GPIO_Pin_Direction_Initialize 0000    __size_of_GPIO_Pin_Direction_Initialize 0140  
           _GPIO_Pin_Direction_Initialize FEC0             __size_of_GPIO_Pin_Write_Logic 0128  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                                   __pcinit FD2A  
                                 __ramtop 1000                                   __ptext0 FCF0  
                                 __ptext1 FCFC                                   __ptext2 FD54  
                                 __ptext3 FD98                                   __ptext4 FEC0  
                    end_of_initialization FD4A                             __Lmediumconst 0000  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
          ?_GPIO_Pin_Direction_Initialize 0020                             __pidataCOMRAM FD0B  
            __size_of_GPIO_Pin_Initialize 0044                       start_initialization FD2A  
         GPIO_Pin_Write_Logic@_pin_config 0020            GPIO_Pin_Initialize@_pin_config 002A  
                   _application_intialize FCFC              __end_of_GPIO_Pin_Write_Logic FEC0  
         GPIO_Pin_Write_Logic@ERRORSTATUS 0029            GPIO_Pin_Initialize@ERRORSTATUS 002C  
                               copy_data0 FD3E                    ?_application_intialize 0020  
                     _GPIO_Pin_Initialize FD54                                  __Hrparam 0000  
                                __Lrparam 0000                 GPIO_Pin_Write_Logic@logic 0022  
                    ?_GPIO_Pin_Initialize 002A                      _GPIO_Pin_Write_Logic FD98  
                           __size_of_main 000C                     ??_GPIO_Pin_Initialize 002C  
                   ?_GPIO_Pin_Write_Logic 0020  GPIO_Pin_Direction_Initialize@_pin_config 0020  
                          _port_registers 0001  
