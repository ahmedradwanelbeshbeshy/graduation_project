

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 08 04:23:50 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K20 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  0015F4                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _lat_registers
    80  0015F4  89                 	db	137
    81  0015F5  0F                 	db	15
    82  0015F6  8A                 	db	138
    83  0015F7  0F                 	db	15
    84  0015F8  8B                 	db	139
    85  0015F9  0F                 	db	15
    86  0015FA  8C                 	db	140
    87  0015FB  0F                 	db	15
    88  0015FC  8D                 	db	141
    89  0015FD  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92  0015FE  92                 	db	146
    93  0015FF  0F                 	db	15
    94  001600  93                 	db	147
    95  001601  0F                 	db	15
    96  001602  94                 	db	148
    97  001603  0F                 	db	15
    98  001604  95                 	db	149
    99  001605  0F                 	db	15
   100  001606  96                 	db	150
   101  001607  0F                 	db	15
   102                           
   103                           ;initializer for _dir_pin1
   104  001608  12                 	db	18
   105                           
   106                           ;initializer for _step_pin1
   107  001609  11                 	db	17
   108                           
   109                           ;initializer for _flags
   110  00160A  0F                 	db	15
   111                           
   112                           ;initializer for _W2_W4_W6_Motor_Control
   113  00160B  1A                 	db	26
   114  00160C  1B                 	db	27
   115                           
   116                           ;initializer for _W1_W3_W5_Motor_Control
   117  00160D  18                 	db	24
   118  00160E  19                 	db	25
   119                           
   120                           ;initializer for _pinc0
   121  00160F  90                 	db	144
   122                           
   123                           	psect	idataBANK0
   124  0015D2                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _port_registers
   128  0015D2  80                 	db	128
   129  0015D3  0F                 	db	15
   130  0015D4  81                 	db	129
   131  0015D5  0F                 	db	15
   132  0015D6  82                 	db	130
   133  0015D7  0F                 	db	15
   134  0015D8  83                 	db	131
   135  0015D9  0F                 	db	15
   136  0015DA  84                 	db	132
   137  0015DB  0F                 	db	15
   138                           
   139                           ;initializer for _CCP2_Obj
   140  0015DC  01                 	db	1
   141  0015DD  02                 	db	2
   142  0015DE  00                 	db	0
   143  0015DF  11                 	db	17
   144  0015E0  00                 	db	0
   145  0015E1  01F4               	dw	500
   146  0015E3  0000               	dw	0
   147  0015E5  F9                 	db	249
   148  0015E6  00                 	db	0
   149  0015E7  0F                 	db	15
   150                           
   151                           ;initializer for _CCP1_Obj
   152  0015E8  00                 	db	0
   153  0015E9  02                 	db	2
   154  0015EA  00                 	db	0
   155  0015EB  12                 	db	18
   156  0015EC  00                 	db	0
   157  0015ED  01F4               	dw	500
   158  0015EF  0000               	dw	0
   159  0015F1  F9                 	db	249
   160  0015F2  00                 	db	0
   161  0015F3  0F                 	db	15
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _SSPSTATbits	set	4039
   164  0000                     _SSPADD	set	4040
   165  0000                     _SSPCON2bits	set	4037
   166  0000                     _SSPCON1bits	set	4038
   167  0000                     _SPBRGH	set	4016
   168  0000                     _SPBRG	set	4015
   169  0000                     _RCREG	set	4014
   170  0000                     _TXREG	set	4013
   171  0000                     _TRISCbits	set	3988
   172  0000                     _TXSTA1bits	set	4012
   173  0000                     _PR2	set	4043
   174  0000                     _ADCON1bits	set	4033
   175  0000                     _ADRESL	set	4035
   176  0000                     _ADRESH	set	4036
   177  0000                     _TRISD	set	3989
   178  0000                     _TRISB	set	3987
   179  0000                     _TRISE	set	3990
   180  0000                     _PORTDbits	set	3971
   181  0000                     _LATDbits	set	3980
   182  0000                     _TRISDbits	set	3989
   183  0000                     _TRISBbits	set	3987
   184  0000                     _PORTBbits	set	3969
   185  0000                     _RCSTA1bits	set	4011
   186  0000                     _TXSTAbits	set	4012
   187  0000                     _TRISC	set	3988
   188  0000                     _RX9D	set	32088
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON0bits	set	4034
   191  0000                     _PORTA	set	3968
   192  0000                     _LATA	set	3977
   193  0000                     _TRISA	set	3986
   194  0000                     _PIE1bits	set	3997
   195  0000                     _RCSTAbits	set	4011
   196  0000                     _T3CONbits	set	4017
   197  0000                     _CCP2CONbits	set	4026
   198  0000                     _CCP1CONbits	set	4029
   199  0000                     _CCPR1L	set	4030
   200  0000                     _CCPR2L	set	4027
   201  0000                     _RCONbits	set	4048
   202  0000                     _BAUDCONbits	set	4024
   203  0000                     _IPR2bits	set	4002
   204  0000                     _PIR2bits	set	4001
   205  0000                     _PIE2bits	set	4000
   206  0000                     _IPR1bits	set	3999
   207  0000                     _PIR1bits	set	3998
   208  0000                     _WDTCONbits	set	4049
   209  0000                     _T0CONbits	set	4053
   210  0000                     _INTCON3bits	set	4080
   211  0000                     _INTCONbits	set	4082
   212  0000                     _LATE	set	3981
   213  0000                     _LATD	set	3980
   214  0000                     _LATC	set	3979
   215  0000                     _LATB	set	3978
   216  0000                     _PORTE	set	3972
   217  0000                     _PORTD	set	3971
   218  0000                     _PORTC	set	3970
   219  0000                     _PORTB	set	3969
   220  0000                     _SSPBUF	set	4041
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223                           
   224                           	psect	smallconst
   225  001000                     __psmallconst:
   226                           	callstack 0
   227  001000  00                 	db	0
   228  001001  41                 	db	65	;'A'
   229  001002  54                 	db	84	;'T'
   230  001003  2B                 	db	43
   231  001004  55                 	db	85	;'U'
   232  001005  41                 	db	65	;'A'
   233  001006  52                 	db	82	;'R'
   234  001007  54                 	db	84	;'T'
   235  001008  3A                 	db	58	;':'
   236  001009  39                 	db	57	;'9'
   237  00100A  36                 	db	54	;'6'
   238  00100B  30                 	db	48	;'0'
   239  00100C  30                 	db	48	;'0'
   240  00100D  2C                 	db	44
   241  00100E  30                 	db	48	;'0'
   242  00100F  2C                 	db	44
   243  001010  30                 	db	48	;'0'
   244  001011  0D                 	db	13
   245  001012  0A                 	db	10
   246  001013  00                 	db	0
   247  001014  41                 	db	65	;'A'
   248  001015  54                 	db	84	;'T'
   249  001016  2B                 	db	43
   250  001017  52                 	db	82	;'R'
   251  001018  4E                 	db	78	;'N'
   252  001019  41                 	db	65	;'A'
   253  00101A  4D                 	db	77	;'M'
   254  00101B  45                 	db	69	;'E'
   255  00101C  3A                 	db	58	;':'
   256  00101D  52                 	db	82	;'R'
   257  00101E  6F                 	db	111	;'o'
   258  00101F  62                 	db	98	;'b'
   259  001020  6F                 	db	111	;'o'
   260  001021  74                 	db	116	;'t'
   261  001022  0D                 	db	13
   262  001023  0A                 	db	10
   263  001024  00                 	db	0
   264  001025  41                 	db	65	;'A'
   265  001026  54                 	db	84	;'T'
   266  001027  2B                 	db	43
   267  001028  50                 	db	80	;'P'
   268  001029  53                 	db	83	;'S'
   269  00102A  57                 	db	87	;'W'
   270  00102B  44                 	db	68	;'D'
   271  00102C  3A                 	db	58	;':'
   272  00102D  31                 	db	49	;'1'
   273  00102E  32                 	db	50	;'2'
   274  00102F  33                 	db	51	;'3'
   275  001030  34                 	db	52	;'4'
   276  001031  0D                 	db	13
   277  001032  0A                 	db	10
   278  001033  00                 	db	0
   279  001034  41                 	db	65	;'A'
   280  001035  54                 	db	84	;'T'
   281  001036  2B                 	db	43
   282  001037  52                 	db	82	;'R'
   283  001038  4F                 	db	79	;'O'
   284  001039  4C                 	db	76	;'L'
   285  00103A  45                 	db	69	;'E'
   286  00103B  3A                 	db	58	;':'
   287  00103C  30                 	db	48	;'0'
   288  00103D  0D                 	db	13
   289  00103E  0A                 	db	10
   290  00103F  00                 	db	0
   291  001040                     STR_9:
   292  001040  25                 	db	37
   293  001041  66                 	db	102	;'f'
   294  001042  00                 	db	0
   295  001043                     STR_5:
   296  001043  25                 	db	37
   297  001044  69                 	db	105	;'i'
   298  001045  00                 	db	0
   299  001046  00                 	db	0	; dummy byte at the end
   300  0000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304  0014D2                     __pcinit:
   305                           	callstack 0
   306  0014D2                     start_initialization:
   307                           	callstack 0
   308  0014D2                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK0 (34 bytes)
   312                           ; load TBLPTR registers with __pidataBANK0
   313  0014D2  0ED2               	movlw	low __pidataBANK0
   314  0014D4  6EF6               	movwf	tblptrl,c
   315  0014D6  0E15               	movlw	high __pidataBANK0
   316  0014D8  6EF7               	movwf	tblptrh,c
   317  0014DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   318  0014DC  6EF8               	movwf	tblptru,c
   319  0014DE  EE00  F060         	lfsr	0,__pdataBANK0
   320  0014E2  EE10 F022          	lfsr	1,34
   321  0014E6                     copy_data0:
   322  0014E6  0009               	tblrd		*+
   323  0014E8  CFF5 FFEE          	movff	tablat,postinc0
   324  0014EC  50E5               	movf	postdec1,w,c
   325  0014EE  50E1               	movf	fsr1l,w,c
   326  0014F0  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to COMRAM (28 bytes)
   329                           ; load TBLPTR registers with __pidataCOMRAM
   330  0014F2  0EF4               	movlw	low __pidataCOMRAM
   331  0014F4  6EF6               	movwf	tblptrl,c
   332  0014F6  0E15               	movlw	high __pidataCOMRAM
   333  0014F8  6EF7               	movwf	tblptrh,c
   334  0014FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   335  0014FC  6EF8               	movwf	tblptru,c
   336  0014FE  EE00  F02A         	lfsr	0,__pdataCOMRAM
   337  001502  EE10 F01C          	lfsr	1,28
   338  001506                     copy_data1:
   339  001506  0009               	tblrd		*+
   340  001508  CFF5 FFEE          	movff	tablat,postinc0
   341  00150C  50E5               	movf	postdec1,w,c
   342  00150E  50E1               	movf	fsr1l,w,c
   343  001510  E1FA               	bnz	copy_data1
   344                           
   345                           ; Clear objects allocated to BANK0 (15 bytes)
   346  001512  EE00  F082         	lfsr	0,__pbssBANK0
   347  001516  0E0F               	movlw	15
   348  001518                     clear_0:
   349  001518  6AEE               	clrf	postinc0,c
   350  00151A  06E8               	decf	wreg,f,c
   351  00151C  E1FD               	bnz	clear_0
   352                           
   353                           ; Clear objects allocated to COMRAM (41 bytes)
   354  00151E  EE00  F001         	lfsr	0,__pbssCOMRAM
   355  001522  0E29               	movlw	41
   356  001524                     clear_1:
   357  001524  6AEE               	clrf	postinc0,c
   358  001526  06E8               	decf	wreg,f,c
   359  001528  E1FD               	bnz	clear_1
   360  00152A                     end_of_initialization:
   361                           	callstack 0
   362  00152A                     __end_of__initialization:
   363                           	callstack 0
   364  00152A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   365  00152C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   366  00152E  0100               	movlb	0
   367  001530  EFB2  F009         	goto	_main	;jump to C main() function
   368                           
   369                           	psect	bssCOMRAM
   370  000001                     __pbssCOMRAM:
   371                           	callstack 0
   372  000001                     _counter:
   373                           	callstack 0
   374  000001                     	ds	2
   375  000003                     _preloaded_val:
   376                           	callstack 0
   377  000003                     	ds	2
   378  000005                     _RB7_InterruptHandler_LOW:
   379                           	callstack 0
   380  000005                     	ds	2
   381  000007                     _RB7_InterruptHandler_HIGH:
   382                           	callstack 0
   383  000007                     	ds	2
   384  000009                     _RB6_InterruptHandler_LOW:
   385                           	callstack 0
   386  000009                     	ds	2
   387  00000B                     _RB6_InterruptHandler_HIGH:
   388                           	callstack 0
   389  00000B                     	ds	2
   390  00000D                     _RB5_InterruptHandler_LOW:
   391                           	callstack 0
   392  00000D                     	ds	2
   393  00000F                     _RB5_InterruptHandler_HIGH:
   394                           	callstack 0
   395  00000F                     	ds	2
   396  000011                     _RB4_InterruptHandler_LOW:
   397                           	callstack 0
   398  000011                     	ds	2
   399  000013                     _RB4_InterruptHandler_HIGH:
   400                           	callstack 0
   401  000013                     	ds	2
   402  000015                     _INT2_InterruptHandler:
   403                           	callstack 0
   404  000015                     	ds	2
   405  000017                     _INT1_InterruptHandler:
   406                           	callstack 0
   407  000017                     	ds	2
   408  000019                     _INT0_InterruptHandler:
   409                           	callstack 0
   410  000019                     	ds	2
   411  00001B                     _I2C_Report_Write_Collision:
   412                           	callstack 0
   413  00001B                     	ds	2
   414  00001D                     _I2C_Report_Receive_Overflow:
   415                           	callstack 0
   416  00001D                     	ds	2
   417  00001F                     _I2C_DefaultInterruptHandler:
   418                           	callstack 0
   419  00001F                     	ds	2
   420  000021                     _eusart_frameerr_CallBack:
   421                           	callstack 0
   422  000021                     	ds	2
   423  000023                     _eusart_overrunerr_CallBack:
   424                           	callstack 0
   425  000023                     	ds	2
   426  000025                     _eusart_Rx_InterruptHandler:
   427                           	callstack 0
   428  000025                     	ds	2
   429  000027                     _Movement_State:
   430                           	callstack 0
   431  000027                     	ds	1
   432  000028                     _stepper1:
   433                           	callstack 0
   434  000028                     	ds	2
   435                           
   436                           	psect	dataCOMRAM
   437  00002A                     __pdataCOMRAM:
   438                           	callstack 0
   439  00002A                     _lat_registers:
   440                           	callstack 0
   441  00002A                     	ds	10
   442  000034                     _tris_registers:
   443                           	callstack 0
   444  000034                     	ds	10
   445  00003E                     _dir_pin1:
   446                           	callstack 0
   447  00003E                     	ds	1
   448  00003F                     _step_pin1:
   449                           	callstack 0
   450  00003F                     	ds	1
   451  000040                     _flags:
   452                           	callstack 0
   453  000040                     	ds	1
   454  000041                     _W2_W4_W6_Motor_Control:
   455                           	callstack 0
   456  000041                     	ds	2
   457  000043                     _W1_W3_W5_Motor_Control:
   458                           	callstack 0
   459  000043                     	ds	2
   460  000045                     _pinc0:
   461                           	callstack 0
   462  000045                     	ds	1
   463                           
   464                           	psect	bssBANK0
   465  000082                     __pbssBANK0:
   466                           	callstack 0
   467  000082                     	ds	9
   468  00008B                     	ds	6
   469                           
   470                           	psect	dataBANK0
   471  000060                     __pdataBANK0:
   472                           	callstack 0
   473  000060                     _port_registers:
   474                           	callstack 0
   475  000060                     	ds	10
   476  00006A                     _CCP2_Obj:
   477                           	callstack 0
   478  00006A                     	ds	12
   479  000076                     _CCP1_Obj:
   480                           	callstack 0
   481  000076                     	ds	12
   482                           
   483                           	psect	cstackCOMRAM
   484  000046                     __pcstackCOMRAM:
   485                           	callstack 0
   486  000046                     RB4_ISR@Handler_Select:
   487                           	callstack 0
   488  000046                     RB5_ISR@Handler_Select:
   489                           	callstack 0
   490  000046                     RB6_ISR@Handler_Select:
   491                           	callstack 0
   492  000046                     RB7_ISR@Handler_Select:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x0
   496  000046                     	ds	1
   497  000047                     ??_InterruptManagerLow:
   498                           
   499                           ; 1 bytes @ 0x1
   500  000047                     	ds	3
   501  00004A                     GPIO_Pin_Direction_Initialize@_pin_config:
   502                           	callstack 0
   503  00004A                     GPIO_Pin_Write_Logic@_pin_config:
   504                           	callstack 0
   505  00004A                     GPIO_Pin_Toggle_Logic@_pin_config:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x4
   509  00004A                     	ds	2
   510  00004C                     ??_GPIO_Pin_Direction_Initialize:
   511  00004C                     ??_GPIO_Pin_Toggle_Logic:
   512  00004C                     GPIO_Pin_Write_Logic@logic:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x6
   516  00004C                     	ds	1
   517  00004D                     ??_GPIO_Pin_Write_Logic:
   518                           
   519                           ; 1 bytes @ 0x7
   520  00004D                     	ds	5
   521  000052                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xC
   525  000052                     	ds	1
   526  000053                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0xD
   530  000053                     	ds	1
   531  000054                     Ecu_Stepper_Step@stepper:
   532                           	callstack 0
   533  000054                     GPIO_Pin_Initialize@_pin_config:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xE
   537  000054                     	ds	2
   538  000056                     ??_Ecu_Stepper_Step:
   539  000056                     GPIO_Pin_Initialize@ERRORSTATUS:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x10
   543  000056                     	ds	1
   544  000057                     Ecu_Stepper_Init@stepper:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x11
   548  000057                     	ds	2
   549  000059                     ??_main:
   550                           
   551                           ; 1 bytes @ 0x13
   552  000059                     	ds	2
   553                           
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 53 in file "application.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2  1722[None  ] int 
   566 ;; Registers used:
   567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels required when called: 8
   579 ;; This function calls:
   580 ;;		_Ecu_Stepper_Step
   581 ;;		_GPIO_Pin_Toggle_Logic
   582 ;;		_GPIO_Pin_Write_Logic
   583 ;;		_application_intialize
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  001364                     __ptext0:
   591                           	callstack 0
   592  001364                     _main:
   593                           	callstack 23
   594  001364                     
   595                           ;application.c: 55:     stepper1.step_pin = step_pin1 ;
   596  001364  C03F  F028         	movff	_step_pin1,_stepper1
   597                           
   598                           ;application.c: 56:     stepper1.dir_pin = dir_pin1 ;
   599  001368  C03E  F029         	movff	_dir_pin1,_stepper1+1
   600  00136C                     
   601                           ;application.c: 58:     application_intialize();
   602  00136C  EC08  F00B         	call	_application_intialize	;wreg free
   603                           
   604                           ;application.c: 59:     GPIO_Pin_Write_Logic(&pinc0,GPIO_HIGH);
   605  001370  0E45               	movlw	low _pinc0
   606  001372  6E4A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
   607  001374  0E00               	movlw	high _pinc0
   608  001376  6E4B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
   609  001378  0E01               	movlw	1
   610  00137A  6E4C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   611  00137C  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   612  001380                     
   613                           ;application.c: 60:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   614  001380  0E0B               	movlw	11
   615  001382  6E5A               	movwf	(??_main+1)^0,c
   616  001384  0E26               	movlw	38
   617  001386  6E59               	movwf	??_main^0,c
   618  001388  0E5E               	movlw	94
   619  00138A                     u5557:
   620  00138A  2EE8               	decfsz	wreg,f,c
   621  00138C  D7FE               	bra	u5557
   622  00138E  2E59               	decfsz	??_main^0,f,c
   623  001390  D7FC               	bra	u5557
   624  001392  2E5A               	decfsz	(??_main+1)^0,f,c
   625  001394  D7FA               	bra	u5557
   626  001396                     l6192:
   627                           
   628                           ;application.c: 62:     {;application.c: 63:        GPIO_Pin_Toggle_Logic(&pinc0);
   629  001396  0E45               	movlw	low _pinc0
   630  001398  6E4A               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
   631  00139A  0E00               	movlw	high _pinc0
   632  00139C  6E4B               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
   633  00139E  EC31  F00A         	call	_GPIO_Pin_Toggle_Logic	;wreg free
   634                           
   635                           ;application.c: 64:            _delay((unsigned long)((500)*(8000000/4000.0)));
   636  0013A2  0E06               	movlw	6
   637  0013A4  6E5A               	movwf	(??_main+1)^0,c
   638  0013A6  0E13               	movlw	19
   639  0013A8  6E59               	movwf	??_main^0,c
   640  0013AA  0EAE               	movlw	174
   641  0013AC                     u5567:
   642  0013AC  2EE8               	decfsz	wreg,f,c
   643  0013AE  D7FE               	bra	u5567
   644  0013B0  2E59               	decfsz	??_main^0,f,c
   645  0013B2  D7FC               	bra	u5567
   646  0013B4  2E5A               	decfsz	(??_main+1)^0,f,c
   647  0013B6  D7FA               	bra	u5567
   648  0013B8                     
   649                           ;application.c: 65:                for (counter = 0 ; counter < 200 ; counter++)
   650  0013B8  0E00               	movlw	0
   651  0013BA  6E02               	movwf	(_counter+1)^0,c
   652  0013BC  0E00               	movlw	0
   653  0013BE  6E01               	movwf	_counter^0,c
   654  0013C0                     l6200:
   655                           
   656                           ;application.c: 66:         Ecu_Stepper_Step(&stepper1);
   657  0013C0  0E28               	movlw	low _stepper1
   658  0013C2  6E54               	movwf	Ecu_Stepper_Step@stepper^0,c
   659  0013C4  0E00               	movlw	high _stepper1
   660  0013C6  6E55               	movwf	(Ecu_Stepper_Step@stepper+1)^0,c
   661  0013C8  EC9A  F00A         	call	_Ecu_Stepper_Step	;wreg free
   662  0013CC  4A01               	infsnz	_counter^0,f,c
   663  0013CE  2A02               	incf	(_counter+1)^0,f,c
   664  0013D0  5002               	movf	(_counter+1)^0,w,c
   665  0013D2  E109               	bnz	u4950
   666  0013D4  0EC8               	movlw	200
   667  0013D6  5C01               	subwf	_counter^0,w,c
   668  0013D8  A0D8               	btfss	status,0,c
   669  0013DA  EFF1  F009         	goto	u4951
   670  0013DE  EFF3  F009         	goto	u4950
   671  0013E2                     u4951:
   672  0013E2  EFE0  F009         	goto	l6200
   673  0013E6                     u4950:
   674  0013E6  EFCB  F009         	goto	l6192
   675  0013EA  EF43  F001         	goto	start
   676  0013EE                     __end_of_main:
   677                           	callstack 0
   678                           
   679 ;; *************** function _application_intialize *****************
   680 ;; Defined at:
   681 ;;		line 70 in file "application.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 7
   702 ;; This function calls:
   703 ;;		_Ecu_Stepper_Init
   704 ;;		_GPIO_Pin_Initialize
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711  001610                     __ptext1:
   712                           	callstack 0
   713  001610                     _application_intialize:
   714                           	callstack 23
   715  001610                     
   716                           ;application.c: 72:     Ecu_Stepper_Init(&stepper1);
   717  001610  0E28               	movlw	low _stepper1
   718  001612  6E57               	movwf	Ecu_Stepper_Init@stepper^0,c
   719  001614  0E00               	movlw	high _stepper1
   720  001616  6E58               	movwf	(Ecu_Stepper_Init@stepper+1)^0,c
   721  001618  ECF7  F009         	call	_Ecu_Stepper_Init	;wreg free
   722                           
   723                           ;application.c: 73:     GPIO_Pin_Initialize(&pinc0);
   724  00161C  0E45               	movlw	low _pinc0
   725  00161E  6E54               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
   726  001620  0E00               	movlw	high _pinc0
   727  001622  6E55               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
   728  001624  ECC4  F00A         	call	_GPIO_Pin_Initialize	;wreg free
   729  001628  0012               	return		;funcret
   730  00162A                     __end_of_application_intialize:
   731                           	callstack 0
   732                           
   733 ;; *************** function _Ecu_Stepper_Init *****************
   734 ;; Defined at:
   735 ;;		line 9 in file "ECU/stepper/ecu_stepper.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  stepper         2   17[COMRAM] PTR struct .
   738 ;;		 -> stepper1(2), 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;Total ram usage:        2 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 6
   757 ;; This function calls:
   758 ;;		_GPIO_Pin_Direction_Initialize
   759 ;;		_GPIO_Pin_Initialize
   760 ;;		_GPIO_Pin_Write_Logic
   761 ;; This function is called by:
   762 ;;		_application_intialize
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text2
   767  0013EE                     __ptext2:
   768                           	callstack 0
   769  0013EE                     _Ecu_Stepper_Init:
   770                           	callstack 23
   771  0013EE                     
   772                           ;ECU/stepper/ecu_stepper.c: 9: Std_ReturnType Ecu_Stepper_Init(stepper_config_st *steppe
      +                          r);ECU/stepper/ecu_stepper.c: 10: {;ECU/stepper/ecu_stepper.c: 11:     if(((void*)0) == 
      +                          stepper)
   773  0013EE  5057               	movf	Ecu_Stepper_Init@stepper^0,w,c
   774  0013F0  1058               	iorwf	(Ecu_Stepper_Init@stepper+1)^0,w,c
   775  0013F2  A4D8               	btfss	status,2,c
   776  0013F4  EFFE  F009         	goto	u3951
   777  0013F8  EF00  F00A         	goto	u3950
   778  0013FC                     u3951:
   779  0013FC  EF02  F00A         	goto	l5180
   780  001400                     u3950:
   781  001400  EF30  F00A         	goto	l325
   782  001404                     l5180:
   783                           
   784                           ;ECU/stepper/ecu_stepper.c: 16:     {;ECU/stepper/ecu_stepper.c: 17:         GPIO_Pin_In
      +                          itialize(&(stepper->step_pin));
   785  001404  C057  F054         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Initialize@_pin_config
   786  001408  C058  F055         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Initialize@_pin_config+1
   787  00140C  ECC4  F00A         	call	_GPIO_Pin_Initialize	;wreg free
   788                           
   789                           ;ECU/stepper/ecu_stepper.c: 18:         GPIO_Pin_Initialize(&(stepper->dir_pin));
   790  001410  0E01               	movlw	1
   791  001412  2457               	addwf	Ecu_Stepper_Init@stepper^0,w,c
   792  001414  6E54               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
   793  001416  0E00               	movlw	0
   794  001418  2058               	addwfc	(Ecu_Stepper_Init@stepper+1)^0,w,c
   795  00141A  6E55               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
   796  00141C  ECC4  F00A         	call	_GPIO_Pin_Initialize	;wreg free
   797                           
   798                           ;ECU/stepper/ecu_stepper.c: 19:         GPIO_Pin_Direction_Initialize(&(stepper->dir_pin
      +                          ));
   799  001420  0E01               	movlw	1
   800  001422  2457               	addwf	Ecu_Stepper_Init@stepper^0,w,c
   801  001424  6E4A               	movwf	GPIO_Pin_Direction_Initialize@_pin_config^0,c
   802  001426  0E00               	movlw	0
   803  001428  2058               	addwfc	(Ecu_Stepper_Init@stepper+1)^0,w,c
   804  00142A  6E4B               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,c
   805  00142C  EC24  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   806                           
   807                           ;ECU/stepper/ecu_stepper.c: 20:         GPIO_Pin_Direction_Initialize(&(stepper->step_pi
      +                          n));
   808  001430  C057  F04A         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Direction_Initialize@_pin_config
   809  001434  C058  F04B         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Direction_Initialize@_pin_config+1
   810  001438  EC24  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   811                           
   812                           ;ECU/stepper/ecu_stepper.c: 21:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , GPIO
      +                          _LOW);
   813  00143C  C057  F04A         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Write_Logic@_pin_config
   814  001440  C058  F04B         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
   815  001444  0E00               	movlw	0
   816  001446  6E4C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   817  001448  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   818                           
   819                           ;ECU/stepper/ecu_stepper.c: 22:         GPIO_Pin_Write_Logic(&(stepper->dir_pin) , GPIO_
      +                          LOW);
   820  00144C  0E01               	movlw	1
   821  00144E  2457               	addwf	Ecu_Stepper_Init@stepper^0,w,c
   822  001450  6E4A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
   823  001452  0E00               	movlw	0
   824  001454  2058               	addwfc	(Ecu_Stepper_Init@stepper+1)^0,w,c
   825  001456  6E4B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
   826  001458  0E00               	movlw	0
   827  00145A  6E4C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   828  00145C  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   829  001460                     l325:
   830  001460  0012               	return		;funcret
   831  001462                     __end_of_Ecu_Stepper_Init:
   832                           	callstack 0
   833                           
   834 ;; *************** function _GPIO_Pin_Initialize *****************
   835 ;; Defined at:
   836 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  _pin_config     2   14[COMRAM] PTR const struct .
   839 ;;		 -> pinc0(1), stepper1.dir_pin(1), stepper1.step_pin(1), stepper1(2), 
   840 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), 
   841 ;;		 -> W1_W3_W5_Motor_Control.dc_motor(2), W1_W3_W5_Motor_Control(2), 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  ERRORSTATUS     1   16[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      unsigned char 
   846 ;; Registers used:
   847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        3 bytes
   858 ;; Hardware stack levels used: 1
   859 ;; Hardware stack levels required when called: 5
   860 ;; This function calls:
   861 ;;		_GPIO_Pin_Direction_Initialize
   862 ;;		_GPIO_Pin_Write_Logic
   863 ;; This function is called by:
   864 ;;		_Ecu_Stepper_Init
   865 ;;		_application_intialize
   866 ;;		_ECU_DC_Motor_Init
   867 ;;		_IR_Sensor_Init
   868 ;;		_lcd_4bit_initialize
   869 ;;		_lcd_8bit_initialize
   870 ;;		_CCP_Init
   871 ;;		_Ultra_Sonic_Init
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text3
   876  001588                     __ptext3:
   877                           	callstack 0
   878  001588                     _GPIO_Pin_Initialize:
   879                           	callstack 24
   880  001588                     
   881                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
   882  001588  5054               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
   883  00158A  1055               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
   884  00158C  A4D8               	btfss	status,2,c
   885  00158E  EFCB  F00A         	goto	u3841
   886  001592  EFCD  F00A         	goto	u3840
   887  001596                     u3841:
   888  001596  EFD1  F00A         	goto	l5082
   889  00159A                     u3840:
   890  00159A                     
   891                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
   892  00159A  0E00               	movlw	0
   893  00159C  6E56               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   894                           
   895                           ;MCAL/GPIO/hal_gpio.c: 164:     }
   896  00159E  EFE7  F00A         	goto	l5084
   897  0015A2                     l5082:
   898                           
   899                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
   900  0015A2  C054  F04A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
   901  0015A6  C055  F04B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
   902  0015AA  EC24  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   903  0015AE  6E56               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   904                           
   905                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
   906  0015B0  C054  F04A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
   907  0015B4  C055  F04B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
   908  0015B8  C054  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
   909  0015BC  C055  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
   910  0015C0  0E00               	movlw	0
   911  0015C2  BEDF               	btfsc	indf2,7,c
   912  0015C4  0E01               	movlw	1
   913  0015C6  6E4C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   914  0015C8  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   915  0015CC  6E56               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   916  0015CE                     l5084:
   917                           
   918                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
   919  0015CE  5056               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
   920  0015D0  0012               	return		;funcret
   921  0015D2                     __end_of_GPIO_Pin_Initialize:
   922                           	callstack 0
   923                           
   924 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
   925 ;; Defined at:
   926 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  _pin_config     2    4[COMRAM] PTR const struct .
   929 ;;		 -> pinc0(1), stepper1.dir_pin(1), stepper1.step_pin(1), stepper1(2), 
   930 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), 
   931 ;;		 -> W1_W3_W5_Motor_Control.dc_motor(2), W1_W3_W5_Motor_Control(2), 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  ERRORSTATUS     1   12[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      unsigned char 
   936 ;; Registers used:
   937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:        9 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 4
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_Ecu_Stepper_Init
   954 ;;		_GPIO_Pin_Initialize
   955 ;;		_interrupt_RBx_pin_init
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text4
   960  001048                     __ptext4:
   961                           	callstack 0
   962  001048                     _GPIO_Pin_Direction_Initialize:
   963                           	callstack 24
   964  001048                     
   965                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
   966  001048  0E01               	movlw	1
   967  00104A  6E52               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
   968  00104C                     
   969                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
   970  00104C  504A               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
   971  00104E  104B               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
   972  001050  B4D8               	btfsc	status,2,c
   973  001052  EF2D  F008         	goto	u3781
   974  001056  EF2F  F008         	goto	u3780
   975  00105A                     u3781:
   976  00105A  EF3E  F008         	goto	l5058
   977  00105E                     u3780:
   978  00105E  C04A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
   979  001062  C04B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
   980  001066  50DF               	movf	223,w,c
   981  001068  0B07               	andlw	7
   982  00106A  6E4C               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
   983  00106C  0E07               	movlw	7
   984  00106E  644C               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
   985  001070  EF3C  F008         	goto	u3791
   986  001074  EF3E  F008         	goto	u3790
   987  001078                     u3791:
   988  001078  EFA1  F008         	goto	l5066
   989  00107C                     u3790:
   990  00107C                     l5058:
   991                           
   992                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
   993  00107C  0E00               	movlw	0
   994  00107E  6E52               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
   995                           
   996                           ;MCAL/GPIO/hal_gpio.c: 31:     }
   997  001080  EFC2  F008         	goto	l5068
   998  001084                     l5060:
   999                           
  1000                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  1001  001084  C04A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1002  001088  C04B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1003  00108C  50DF               	movf	223,w,c
  1004  00108E  0B07               	andlw	7
  1005  001090  6E4C               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1006  001092  0E01               	movlw	1
  1007  001094  6E4D               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  1008  001096  2A4C               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  1009  001098  EF50  F008         	goto	u3804
  1010  00109C                     u3805:
  1011  00109C  90D8               	bcf	status,0,c
  1012  00109E  364D               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  1013  0010A0                     u3804:
  1014  0010A0  2E4C               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  1015  0010A2  EF4E  F008         	goto	u3805
  1016  0010A6  504D               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  1017  0010A8  0AFF               	xorlw	255
  1018  0010AA  6E4E               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  1019  0010AC  C04A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1020  0010B0  C04B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1021  0010B4  30DF               	rrcf	223,w,c
  1022  0010B6  32E8               	rrcf	wreg,f,c
  1023  0010B8  32E8               	rrcf	wreg,f,c
  1024  0010BA  0B07               	andlw	7
  1025  0010BC  6E4F               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  1026  0010BE  504F               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  1027  0010C0  0D02               	mullw	2
  1028  0010C2  0E34               	movlw	low _tris_registers
  1029  0010C4  24F3               	addwf	243,w,c
  1030  0010C6  6ED9               	movwf	fsr2l,c
  1031  0010C8  0E00               	movlw	high _tris_registers
  1032  0010CA  20F4               	addwfc	prodh,w,c
  1033  0010CC  6EDA               	movwf	fsr2h,c
  1034  0010CE  CFDE F050          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  1035  0010D2  CFDD F051          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  1036  0010D6  C050  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  1037  0010DA  C051  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  1038  0010DE  504E               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  1039  0010E0  16DF               	andwf	indf2,f,c
  1040                           
  1041                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  1042  0010E2  EFC2  F008         	goto	l5068
  1043  0010E6                     l5062:
  1044                           
  1045                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  1046  0010E6  C04A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1047  0010EA  C04B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1048  0010EE  50DF               	movf	223,w,c
  1049  0010F0  0B07               	andlw	7
  1050  0010F2  6E4C               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1051  0010F4  0E01               	movlw	1
  1052  0010F6  6E4D               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  1053  0010F8  2A4C               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  1054  0010FA  EF81  F008         	goto	u3814
  1055  0010FE                     u3815:
  1056  0010FE  90D8               	bcf	status,0,c
  1057  001100  364D               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  1058  001102                     u3814:
  1059  001102  2E4C               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  1060  001104  EF7F  F008         	goto	u3815
  1061  001108  C04A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1062  00110C  C04B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1063  001110  30DF               	rrcf	223,w,c
  1064  001112  32E8               	rrcf	wreg,f,c
  1065  001114  32E8               	rrcf	wreg,f,c
  1066  001116  0B07               	andlw	7
  1067  001118  6E4E               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  1068  00111A  504E               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  1069  00111C  0D02               	mullw	2
  1070  00111E  0E34               	movlw	low _tris_registers
  1071  001120  24F3               	addwf	243,w,c
  1072  001122  6ED9               	movwf	fsr2l,c
  1073  001124  0E00               	movlw	high _tris_registers
  1074  001126  20F4               	addwfc	prodh,w,c
  1075  001128  6EDA               	movwf	fsr2h,c
  1076  00112A  CFDE F04F          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  1077  00112E  CFDD F050          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  1078  001132  C04F  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  1079  001136  C050  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  1080  00113A  504D               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  1081  00113C  12DF               	iorwf	indf2,f,c
  1082                           
  1083                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  1084  00113E  EFC2  F008         	goto	l5068
  1085  001142                     l5066:
  1086  001142  C04A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1087  001146  C04B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1088  00114A  BCDF               	btfsc	indf2,6,c
  1089  00114C  EFAA  F008         	goto	u3821
  1090  001150  EFAD  F008         	goto	u3820
  1091  001154                     u3821:
  1092  001154  0E01               	movlw	1
  1093  001156  EFAE  F008         	goto	u3830
  1094  00115A                     u3820:
  1095  00115A  0E00               	movlw	0
  1096  00115C                     u3830:
  1097  00115C  6E4C               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1098  00115E  6A4D               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  1099                           
  1100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1101                           ; Switch size 1, requested type "simple"
  1102                           ; Number of cases is 1, Range of values is 0 to 0
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte            4     3 (average)
  1106                           ;	Chosen strategy is simple_byte
  1107  001160  504D               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  1108  001162  0A00               	xorlw	0	; case 0
  1109  001164  B4D8               	btfsc	status,2,c
  1110  001166  EFB7  F008         	goto	l6572
  1111  00116A  EF3E  F008         	goto	l5058
  1112  00116E                     l6572:
  1113                           
  1114                           ; Switch size 1, requested type "simple"
  1115                           ; Number of cases is 2, Range of values is 0 to 1
  1116                           ; switch strategies available:
  1117                           ; Name         Instructions Cycles
  1118                           ; simple_byte            7     4 (average)
  1119                           ;	Chosen strategy is simple_byte
  1120  00116E  504C               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  1121  001170  0A00               	xorlw	0	; case 0
  1122  001172  B4D8               	btfsc	status,2,c
  1123  001174  EF42  F008         	goto	l5060
  1124  001178  0A01               	xorlw	1	; case 1
  1125  00117A  B4D8               	btfsc	status,2,c
  1126  00117C  EF73  F008         	goto	l5062
  1127  001180  EF3E  F008         	goto	l5058
  1128  001184                     l5068:
  1129                           
  1130                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  1131  001184  5052               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  1132  001186  0012               	return		;funcret
  1133  001188                     __end_of_GPIO_Pin_Direction_Initialize:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  1137 ;; Defined at:
  1138 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1141 ;;		 -> pinc0(1), 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  ERRORSTATUS     1    0        unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      unsigned char 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        7 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 4
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text5
  1168  001462                     __ptext5:
  1169                           	callstack 0
  1170  001462                     _GPIO_Pin_Toggle_Logic:
  1171                           	callstack 26
  1172  001462                     
  1173                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  1174  001462  504A               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  1175  001464  104B               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  1176  001466  A4D8               	btfss	status,2,c
  1177  001468  EF38  F00A         	goto	u4341
  1178  00146C  EF3A  F00A         	goto	u4340
  1179  001470                     u4341:
  1180  001470  EF3C  F00A         	goto	l5516
  1181  001474                     u4340:
  1182  001474                     
  1183                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  1184  001474  EF68  F00A         	goto	l907
  1185  001478                     l5516:
  1186                           
  1187                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  1188  001478  C04A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  1189  00147C  C04B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  1190  001480  50DF               	movf	223,w,c
  1191  001482  0B07               	andlw	7
  1192  001484  6E4C               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
  1193  001486  0E01               	movlw	1
  1194  001488  6E4D               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
  1195  00148A  2A4C               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
  1196  00148C  EF4A  F00A         	goto	u4354
  1197  001490                     u4355:
  1198  001490  90D8               	bcf	status,0,c
  1199  001492  364D               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
  1200  001494                     u4354:
  1201  001494  2E4C               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
  1202  001496  EF48  F00A         	goto	u4355
  1203  00149A  C04A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  1204  00149E  C04B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  1205  0014A2  30DF               	rrcf	223,w,c
  1206  0014A4  32E8               	rrcf	wreg,f,c
  1207  0014A6  32E8               	rrcf	wreg,f,c
  1208  0014A8  0B07               	andlw	7
  1209  0014AA  6E4E               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
  1210  0014AC  504E               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
  1211  0014AE  0D02               	mullw	2
  1212  0014B0  0E2A               	movlw	low _lat_registers
  1213  0014B2  24F3               	addwf	243,w,c
  1214  0014B4  6ED9               	movwf	fsr2l,c
  1215  0014B6  0E00               	movlw	high _lat_registers
  1216  0014B8  20F4               	addwfc	prodh,w,c
  1217  0014BA  6EDA               	movwf	fsr2h,c
  1218  0014BC  CFDE F04F          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  1219  0014C0  CFDD F050          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  1220  0014C4  C04F  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  1221  0014C8  C050  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  1222  0014CC  504D               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
  1223  0014CE  1ADF               	xorwf	indf2,f,c
  1224  0014D0                     l907:
  1225  0014D0  0012               	return		;funcret
  1226  0014D2                     __end_of_GPIO_Pin_Toggle_Logic:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _Ecu_Stepper_Step *****************
  1230 ;; Defined at:
  1231 ;;		line 25 in file "ECU/stepper/ecu_stepper.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  stepper         2   14[COMRAM] PTR struct .
  1234 ;;		 -> stepper1(2), 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      unsigned char 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;Total ram usage:        3 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 5
  1253 ;; This function calls:
  1254 ;;		_GPIO_Pin_Write_Logic
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text6
  1261  001534                     __ptext6:
  1262                           	callstack 0
  1263  001534                     _Ecu_Stepper_Step:
  1264                           	callstack 25
  1265  001534                     
  1266                           ;ECU/stepper/ecu_stepper.c: 25: Std_ReturnType Ecu_Stepper_Step(stepper_config_st *stepp
      +                          er);ECU/stepper/ecu_stepper.c: 26: {;ECU/stepper/ecu_stepper.c: 27:     if(((void*)0) ==
      +                           stepper)
  1267  001534  5054               	movf	Ecu_Stepper_Step@stepper^0,w,c
  1268  001536  1055               	iorwf	(Ecu_Stepper_Step@stepper+1)^0,w,c
  1269  001538  A4D8               	btfss	status,2,c
  1270  00153A  EFA1  F00A         	goto	u4211
  1271  00153E  EFA3  F00A         	goto	u4210
  1272  001542                     u4211:
  1273  001542  EFA5  F00A         	goto	l5432
  1274  001546                     u4210:
  1275  001546  EFC3  F00A         	goto	l330
  1276  00154A                     l5432:
  1277                           
  1278                           ;ECU/stepper/ecu_stepper.c: 32:     {;ECU/stepper/ecu_stepper.c: 33:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->step_pin) , 1);
  1279  00154A  C054  F04A         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  1280  00154E  C055  F04B         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  1281  001552  0E01               	movlw	1
  1282  001554  6E4C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1283  001556  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1284  00155A                     
  1285                           ;ECU/stepper/ecu_stepper.c: 34:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1286  00155A  0E03               	movlw	3
  1287  00155C  6E56               	movwf	??_Ecu_Stepper_Step^0,c
  1288  00155E  0E98               	movlw	152
  1289  001560                     u5577:
  1290  001560  2EE8               	decfsz	wreg,f,c
  1291  001562  D7FE               	bra	u5577
  1292  001564  2E56               	decfsz	??_Ecu_Stepper_Step^0,f,c
  1293  001566  D7FC               	bra	u5577
  1294  001568                     
  1295                           ;ECU/stepper/ecu_stepper.c: 35:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , 0);
  1296  001568  C054  F04A         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  1297  00156C  C055  F04B         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  1298  001570  0E00               	movlw	0
  1299  001572  6E4C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1300  001574  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1301                           
  1302                           ;ECU/stepper/ecu_stepper.c: 36:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1303  001578  0E03               	movlw	3
  1304  00157A  6E56               	movwf	??_Ecu_Stepper_Step^0,c
  1305  00157C  0E98               	movlw	152
  1306  00157E                     u5587:
  1307  00157E  2EE8               	decfsz	wreg,f,c
  1308  001580  D7FE               	bra	u5587
  1309  001582  2E56               	decfsz	??_Ecu_Stepper_Step^0,f,c
  1310  001584  D7FC               	bra	u5587
  1311  001586                     l330:
  1312  001586  0012               	return		;funcret
  1313  001588                     __end_of_Ecu_Stepper_Step:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _GPIO_Pin_Write_Logic *****************
  1317 ;; Defined at:
  1318 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1321 ;;		 -> pinc0(1), stepper1.dir_pin(1), stepper1.step_pin(1), stepper1(2), 
  1322 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), 
  1323 ;;		 -> W1_W3_W5_Motor_Control.dc_motor(2), W1_W3_W5_Motor_Control(2), 
  1324 ;;  logic           1    6[COMRAM] enum E3185
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  ERRORSTATUS     1   13[COMRAM] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      unsigned char 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1336 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;Total ram usage:       10 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; Hardware stack levels required when called: 4
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_Ecu_Stepper_Init
  1347 ;;		_Ecu_Stepper_Step
  1348 ;;		_GPIO_Pin_Initialize
  1349 ;;		_main
  1350 ;;		_ECU_DC_Motor_Run_Left
  1351 ;;		_ECU_DC_Motor_Run_Right
  1352 ;;		_ECU_DC_Motor_Stop
  1353 ;;		_lcd_4bit_send_command
  1354 ;;		_lcd_4bit_send_char_data
  1355 ;;		_lcd_8bit_send_command
  1356 ;;		_lcd_8bit_send_char_data
  1357 ;;		_lcd_4bits_send_enable_signal
  1358 ;;		_lcd_send_4bits
  1359 ;;		_lcd_8bits_send_enable_signal
  1360 ;;		_Ecu_Stepper_Change_Direction
  1361 ;;		_send_trig_pulse
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text7
  1366  001188                     __ptext7:
  1367                           	callstack 0
  1368  001188                     _GPIO_Pin_Write_Logic:
  1369                           	callstack 24
  1370  001188                     
  1371                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  1372  001188  0E01               	movlw	1
  1373  00118A  6E53               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  1374  00118C                     
  1375                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  1376  00118C  504A               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
  1377  00118E  104B               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  1378  001190  B4D8               	btfsc	status,2,c
  1379  001192  EFCD  F008         	goto	u3741
  1380  001196  EFCF  F008         	goto	u3740
  1381  00119A                     u3741:
  1382  00119A  EFDE  F008         	goto	l5034
  1383  00119E                     u3740:
  1384  00119E  C04A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1385  0011A2  C04B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1386  0011A6  50DF               	movf	223,w,c
  1387  0011A8  0B07               	andlw	7
  1388  0011AA  6E4D               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1389  0011AC  0E07               	movlw	7
  1390  0011AE  644D               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
  1391  0011B0  EFDC  F008         	goto	u3751
  1392  0011B4  EFDE  F008         	goto	u3750
  1393  0011B8                     u3751:
  1394  0011B8  EF41  F009         	goto	l5042
  1395  0011BC                     u3750:
  1396  0011BC                     l5034:
  1397                           
  1398                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  1399  0011BC  0E00               	movlw	0
  1400  0011BE  6E53               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  1401                           
  1402                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  1403  0011C0  EF56  F009         	goto	l5044
  1404  0011C4                     l5036:
  1405                           
  1406                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  1407  0011C4  C04A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1408  0011C8  C04B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1409  0011CC  50DF               	movf	223,w,c
  1410  0011CE  0B07               	andlw	7
  1411  0011D0  6E4D               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1412  0011D2  0E01               	movlw	1
  1413  0011D4  6E4E               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1414  0011D6  2A4D               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1415  0011D8  EFF0  F008         	goto	u3764
  1416  0011DC                     u3765:
  1417  0011DC  90D8               	bcf	status,0,c
  1418  0011DE  364E               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1419  0011E0                     u3764:
  1420  0011E0  2E4D               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1421  0011E2  EFEE  F008         	goto	u3765
  1422  0011E6  504E               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1423  0011E8  0AFF               	xorlw	255
  1424  0011EA  6E4F               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1425  0011EC  C04A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1426  0011F0  C04B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1427  0011F4  30DF               	rrcf	223,w,c
  1428  0011F6  32E8               	rrcf	wreg,f,c
  1429  0011F8  32E8               	rrcf	wreg,f,c
  1430  0011FA  0B07               	andlw	7
  1431  0011FC  6E50               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
  1432  0011FE  5050               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
  1433  001200  0D02               	mullw	2
  1434  001202  0E2A               	movlw	low _lat_registers
  1435  001204  24F3               	addwf	243,w,c
  1436  001206  6ED9               	movwf	fsr2l,c
  1437  001208  0E00               	movlw	high _lat_registers
  1438  00120A  20F4               	addwfc	prodh,w,c
  1439  00120C  6EDA               	movwf	fsr2h,c
  1440  00120E  CFDE F051          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  1441  001212  CFDD F052          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  1442  001216  C051  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  1443  00121A  C052  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  1444  00121E  504F               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1445  001220  16DF               	andwf	indf2,f,c
  1446                           
  1447                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  1448  001222  EF56  F009         	goto	l5044
  1449  001226                     l5038:
  1450                           
  1451                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  1452  001226  C04A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1453  00122A  C04B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1454  00122E  50DF               	movf	223,w,c
  1455  001230  0B07               	andlw	7
  1456  001232  6E4D               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1457  001234  0E01               	movlw	1
  1458  001236  6E4E               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1459  001238  2A4D               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1460  00123A  EF21  F009         	goto	u3774
  1461  00123E                     u3775:
  1462  00123E  90D8               	bcf	status,0,c
  1463  001240  364E               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1464  001242                     u3774:
  1465  001242  2E4D               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1466  001244  EF1F  F009         	goto	u3775
  1467  001248  C04A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1468  00124C  C04B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1469  001250  30DF               	rrcf	223,w,c
  1470  001252  32E8               	rrcf	wreg,f,c
  1471  001254  32E8               	rrcf	wreg,f,c
  1472  001256  0B07               	andlw	7
  1473  001258  6E4F               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1474  00125A  504F               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1475  00125C  0D02               	mullw	2
  1476  00125E  0E2A               	movlw	low _lat_registers
  1477  001260  24F3               	addwf	243,w,c
  1478  001262  6ED9               	movwf	fsr2l,c
  1479  001264  0E00               	movlw	high _lat_registers
  1480  001266  20F4               	addwfc	prodh,w,c
  1481  001268  6EDA               	movwf	fsr2h,c
  1482  00126A  CFDE F050          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  1483  00126E  CFDD F051          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  1484  001272  C050  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  1485  001276  C051  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  1486  00127A  504E               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1487  00127C  12DF               	iorwf	indf2,f,c
  1488                           
  1489                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  1490  00127E  EF56  F009         	goto	l5044
  1491  001282                     l5042:
  1492  001282  504C               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  1493  001284  6E4D               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1494  001286  6A4E               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1495                           
  1496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1497                           ; Switch size 1, requested type "simple"
  1498                           ; Number of cases is 1, Range of values is 0 to 0
  1499                           ; switch strategies available:
  1500                           ; Name         Instructions Cycles
  1501                           ; simple_byte            4     3 (average)
  1502                           ;	Chosen strategy is simple_byte
  1503  001288  504E               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1504  00128A  0A00               	xorlw	0	; case 0
  1505  00128C  B4D8               	btfsc	status,2,c
  1506  00128E  EF4B  F009         	goto	l6574
  1507  001292  EFDE  F008         	goto	l5034
  1508  001296                     l6574:
  1509                           
  1510                           ; Switch size 1, requested type "simple"
  1511                           ; Number of cases is 2, Range of values is 0 to 1
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte            7     4 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516  001296  504D               	movf	??_GPIO_Pin_Write_Logic^0,w,c
  1517  001298  0A00               	xorlw	0	; case 0
  1518  00129A  B4D8               	btfsc	status,2,c
  1519  00129C  EFE2  F008         	goto	l5036
  1520  0012A0  0A01               	xorlw	1	; case 1
  1521  0012A2  B4D8               	btfsc	status,2,c
  1522  0012A4  EF13  F009         	goto	l5038
  1523  0012A8  EFDE  F008         	goto	l5034
  1524  0012AC                     l5044:
  1525                           
  1526                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  1527  0012AC  5053               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  1528  0012AE  0012               	return		;funcret
  1529  0012B0                     __end_of_GPIO_Pin_Write_Logic:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _InterruptManagerLow *****************
  1533 ;; Defined at:
  1534 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;Total ram usage:        3 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 3
  1555 ;; This function calls:
  1556 ;;		_ADC_ISR
  1557 ;;		_INT1_ISR
  1558 ;;		_RB4_ISR
  1559 ;;		_RB5_ISR
  1560 ;;		_RB6_ISR
  1561 ;;		_RB7_ISR
  1562 ;; This function is called by:
  1563 ;;		Interrupt level 1
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	intcodelo
  1568  000018                     __pintcodelo:
  1569                           	callstack 0
  1570  000018                     _InterruptManagerLow:
  1571                           	callstack 23
  1572                           
  1573                           ;incstack = 0
  1574  000018  805B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1575  00001A  CFD8 F047          	movff	status,??_InterruptManagerLow
  1576  00001E  CFE8 F048          	movff	wreg,??_InterruptManagerLow+1
  1577  000022  CFE0 F049          	movff	bsr,??_InterruptManagerLow+2
  1578  000026                     
  1579                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  1580  000026  A6F0               	btfss	240,3,c	;volatile
  1581  000028  EF18  F000         	goto	i1u283_21
  1582  00002C  EF1A  F000         	goto	i1u283_20
  1583  000030                     i1u283_21:
  1584  000030  EF23  F000         	goto	i1l1176
  1585  000034                     i1u283_20:
  1586  000034  A0F0               	btfss	240,0,c	;volatile
  1587  000036  EF1F  F000         	goto	i1u284_21
  1588  00003A  EF21  F000         	goto	i1u284_20
  1589  00003E                     i1u284_21:
  1590  00003E  EF23  F000         	goto	i1l1176
  1591  000042                     i1u284_20:
  1592  000042                     
  1593                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  1594  000042  EC49  F00B         	call	_INT1_ISR	;wreg free
  1595  000046                     i1l1176:
  1596                           
  1597                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1598  000046  A6F2               	btfss	242,3,c	;volatile
  1599  000048  EF28  F000         	goto	i1u285_21
  1600  00004C  EF2A  F000         	goto	i1u285_20
  1601  000050                     i1u285_21:
  1602  000050  EF43  F000         	goto	i1l1178
  1603  000054                     i1u285_20:
  1604  000054  A0F2               	btfss	242,0,c	;volatile
  1605  000056  EF2F  F000         	goto	i1u286_21
  1606  00005A  EF31  F000         	goto	i1u286_20
  1607  00005E                     i1u286_21:
  1608  00005E  EF43  F000         	goto	i1l1178
  1609  000062                     i1u286_20:
  1610  000062  A881               	btfss	129,4,c	;volatile
  1611  000064  EF36  F000         	goto	i1u287_21
  1612  000068  EF38  F000         	goto	i1u287_20
  1613  00006C                     i1u287_21:
  1614  00006C  EF43  F000         	goto	i1l1178
  1615  000070                     i1u287_20:
  1616  000070  A040               	btfss	_flags^0,0,c	;volatile
  1617  000072  EF3D  F000         	goto	i1u288_21
  1618  000076  EF3F  F000         	goto	i1u288_20
  1619  00007A                     i1u288_21:
  1620  00007A  EF43  F000         	goto	i1l1178
  1621  00007E                     i1u288_20:
  1622  00007E                     
  1623                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  1624  00007E  9040               	bcf	_flags^0,0,c	;volatile
  1625  000080                     
  1626                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  1627  000080  0E01               	movlw	1
  1628  000082  EC3C  F00B         	call	_RB4_ISR
  1629  000086                     i1l1178:
  1630                           
  1631                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1632  000086  A6F2               	btfss	242,3,c	;volatile
  1633  000088  EF48  F000         	goto	i1u289_21
  1634  00008C  EF4A  F000         	goto	i1u289_20
  1635  000090                     i1u289_21:
  1636  000090  EF63  F000         	goto	i1l1180
  1637  000094                     i1u289_20:
  1638  000094  A0F2               	btfss	242,0,c	;volatile
  1639  000096  EF4F  F000         	goto	i1u290_21
  1640  00009A  EF51  F000         	goto	i1u290_20
  1641  00009E                     i1u290_21:
  1642  00009E  EF63  F000         	goto	i1l1180
  1643  0000A2                     i1u290_20:
  1644  0000A2  B881               	btfsc	129,4,c	;volatile
  1645  0000A4  EF56  F000         	goto	i1u291_21
  1646  0000A8  EF58  F000         	goto	i1u291_20
  1647  0000AC                     i1u291_21:
  1648  0000AC  EF63  F000         	goto	i1l1180
  1649  0000B0                     i1u291_20:
  1650  0000B0  B040               	btfsc	_flags^0,0,c	;volatile
  1651  0000B2  EF5D  F000         	goto	i1u292_21
  1652  0000B6  EF5F  F000         	goto	i1u292_20
  1653  0000BA                     i1u292_21:
  1654  0000BA  EF63  F000         	goto	i1l1180
  1655  0000BE                     i1u292_20:
  1656  0000BE                     
  1657                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  1658  0000BE  8040               	bsf	_flags^0,0,c	;volatile
  1659  0000C0                     
  1660                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  1661  0000C0  0E00               	movlw	0
  1662  0000C2  EC3C  F00B         	call	_RB4_ISR
  1663  0000C6                     i1l1180:
  1664                           
  1665                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1666  0000C6  A6F2               	btfss	242,3,c	;volatile
  1667  0000C8  EF68  F000         	goto	i1u293_21
  1668  0000CC  EF6A  F000         	goto	i1u293_20
  1669  0000D0                     i1u293_21:
  1670  0000D0  EF83  F000         	goto	i1l1182
  1671  0000D4                     i1u293_20:
  1672  0000D4  A0F2               	btfss	242,0,c	;volatile
  1673  0000D6  EF6F  F000         	goto	i1u294_21
  1674  0000DA  EF71  F000         	goto	i1u294_20
  1675  0000DE                     i1u294_21:
  1676  0000DE  EF83  F000         	goto	i1l1182
  1677  0000E2                     i1u294_20:
  1678  0000E2  AA81               	btfss	129,5,c	;volatile
  1679  0000E4  EF76  F000         	goto	i1u295_21
  1680  0000E8  EF78  F000         	goto	i1u295_20
  1681  0000EC                     i1u295_21:
  1682  0000EC  EF83  F000         	goto	i1l1182
  1683  0000F0                     i1u295_20:
  1684  0000F0  A240               	btfss	_flags^0,1,c	;volatile
  1685  0000F2  EF7D  F000         	goto	i1u296_21
  1686  0000F6  EF7F  F000         	goto	i1u296_20
  1687  0000FA                     i1u296_21:
  1688  0000FA  EF83  F000         	goto	i1l1182
  1689  0000FE                     i1u296_20:
  1690  0000FE                     
  1691                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  1692  0000FE  9240               	bcf	_flags^0,1,c	;volatile
  1693  000100                     
  1694                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  1695  000100  0E01               	movlw	1
  1696  000102  EC2F  F00B         	call	_RB5_ISR
  1697  000106                     i1l1182:
  1698                           
  1699                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1700  000106  A6F2               	btfss	242,3,c	;volatile
  1701  000108  EF88  F000         	goto	i1u297_21
  1702  00010C  EF8A  F000         	goto	i1u297_20
  1703  000110                     i1u297_21:
  1704  000110  EFA3  F000         	goto	i1l1184
  1705  000114                     i1u297_20:
  1706  000114  A0F2               	btfss	242,0,c	;volatile
  1707  000116  EF8F  F000         	goto	i1u298_21
  1708  00011A  EF91  F000         	goto	i1u298_20
  1709  00011E                     i1u298_21:
  1710  00011E  EFA3  F000         	goto	i1l1184
  1711  000122                     i1u298_20:
  1712  000122  BA81               	btfsc	129,5,c	;volatile
  1713  000124  EF96  F000         	goto	i1u299_21
  1714  000128  EF98  F000         	goto	i1u299_20
  1715  00012C                     i1u299_21:
  1716  00012C  EFA3  F000         	goto	i1l1184
  1717  000130                     i1u299_20:
  1718  000130  B240               	btfsc	_flags^0,1,c	;volatile
  1719  000132  EF9D  F000         	goto	i1u300_21
  1720  000136  EF9F  F000         	goto	i1u300_20
  1721  00013A                     i1u300_21:
  1722  00013A  EFA3  F000         	goto	i1l1184
  1723  00013E                     i1u300_20:
  1724  00013E                     
  1725                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  1726  00013E  8240               	bsf	_flags^0,1,c	;volatile
  1727  000140                     
  1728                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  1729  000140  0E00               	movlw	0
  1730  000142  EC2F  F00B         	call	_RB5_ISR
  1731  000146                     i1l1184:
  1732                           
  1733                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1734  000146  A6F2               	btfss	242,3,c	;volatile
  1735  000148  EFA8  F000         	goto	i1u301_21
  1736  00014C  EFAA  F000         	goto	i1u301_20
  1737  000150                     i1u301_21:
  1738  000150  EFC3  F000         	goto	i1l1186
  1739  000154                     i1u301_20:
  1740  000154  A0F2               	btfss	242,0,c	;volatile
  1741  000156  EFAF  F000         	goto	i1u302_21
  1742  00015A  EFB1  F000         	goto	i1u302_20
  1743  00015E                     i1u302_21:
  1744  00015E  EFC3  F000         	goto	i1l1186
  1745  000162                     i1u302_20:
  1746  000162  AC81               	btfss	129,6,c	;volatile
  1747  000164  EFB6  F000         	goto	i1u303_21
  1748  000168  EFB8  F000         	goto	i1u303_20
  1749  00016C                     i1u303_21:
  1750  00016C  EFC3  F000         	goto	i1l1186
  1751  000170                     i1u303_20:
  1752  000170  A440               	btfss	_flags^0,2,c	;volatile
  1753  000172  EFBD  F000         	goto	i1u304_21
  1754  000176  EFBF  F000         	goto	i1u304_20
  1755  00017A                     i1u304_21:
  1756  00017A  EFC3  F000         	goto	i1l1186
  1757  00017E                     i1u304_20:
  1758  00017E                     
  1759                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  1760  00017E  9440               	bcf	_flags^0,2,c	;volatile
  1761  000180                     
  1762                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  1763  000180  0E01               	movlw	1
  1764  000182  EC22  F00B         	call	_RB6_ISR
  1765  000186                     i1l1186:
  1766                           
  1767                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1768  000186  A6F2               	btfss	242,3,c	;volatile
  1769  000188  EFC8  F000         	goto	i1u305_21
  1770  00018C  EFCA  F000         	goto	i1u305_20
  1771  000190                     i1u305_21:
  1772  000190  EFE3  F000         	goto	i1l1188
  1773  000194                     i1u305_20:
  1774  000194  A0F2               	btfss	242,0,c	;volatile
  1775  000196  EFCF  F000         	goto	i1u306_21
  1776  00019A  EFD1  F000         	goto	i1u306_20
  1777  00019E                     i1u306_21:
  1778  00019E  EFE3  F000         	goto	i1l1188
  1779  0001A2                     i1u306_20:
  1780  0001A2  BC81               	btfsc	129,6,c	;volatile
  1781  0001A4  EFD6  F000         	goto	i1u307_21
  1782  0001A8  EFD8  F000         	goto	i1u307_20
  1783  0001AC                     i1u307_21:
  1784  0001AC  EFE3  F000         	goto	i1l1188
  1785  0001B0                     i1u307_20:
  1786  0001B0  B440               	btfsc	_flags^0,2,c	;volatile
  1787  0001B2  EFDD  F000         	goto	i1u308_21
  1788  0001B6  EFDF  F000         	goto	i1u308_20
  1789  0001BA                     i1u308_21:
  1790  0001BA  EFE3  F000         	goto	i1l1188
  1791  0001BE                     i1u308_20:
  1792  0001BE                     
  1793                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  1794  0001BE  8440               	bsf	_flags^0,2,c	;volatile
  1795  0001C0                     
  1796                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  1797  0001C0  0E00               	movlw	0
  1798  0001C2  EC22  F00B         	call	_RB6_ISR
  1799  0001C6                     i1l1188:
  1800                           
  1801                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1802  0001C6  A6F2               	btfss	242,3,c	;volatile
  1803  0001C8  EFE8  F000         	goto	i1u309_21
  1804  0001CC  EFEA  F000         	goto	i1u309_20
  1805  0001D0                     i1u309_21:
  1806  0001D0  EF03  F001         	goto	i1l1190
  1807  0001D4                     i1u309_20:
  1808  0001D4  A0F2               	btfss	242,0,c	;volatile
  1809  0001D6  EFEF  F000         	goto	i1u310_21
  1810  0001DA  EFF1  F000         	goto	i1u310_20
  1811  0001DE                     i1u310_21:
  1812  0001DE  EF03  F001         	goto	i1l1190
  1813  0001E2                     i1u310_20:
  1814  0001E2  AE81               	btfss	129,7,c	;volatile
  1815  0001E4  EFF6  F000         	goto	i1u311_21
  1816  0001E8  EFF8  F000         	goto	i1u311_20
  1817  0001EC                     i1u311_21:
  1818  0001EC  EF03  F001         	goto	i1l1190
  1819  0001F0                     i1u311_20:
  1820  0001F0  A640               	btfss	_flags^0,3,c	;volatile
  1821  0001F2  EFFD  F000         	goto	i1u312_21
  1822  0001F6  EFFF  F000         	goto	i1u312_20
  1823  0001FA                     i1u312_21:
  1824  0001FA  EF03  F001         	goto	i1l1190
  1825  0001FE                     i1u312_20:
  1826  0001FE                     
  1827                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  1828  0001FE  9640               	bcf	_flags^0,3,c	;volatile
  1829  000200                     
  1830                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  1831  000200  0E01               	movlw	1
  1832  000202  EC15  F00B         	call	_RB7_ISR
  1833  000206                     i1l1190:
  1834                           
  1835                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1836  000206  A6F2               	btfss	242,3,c	;volatile
  1837  000208  EF08  F001         	goto	i1u313_21
  1838  00020C  EF0A  F001         	goto	i1u313_20
  1839  000210                     i1u313_21:
  1840  000210  EF23  F001         	goto	i1l1192
  1841  000214                     i1u313_20:
  1842  000214  A0F2               	btfss	242,0,c	;volatile
  1843  000216  EF0F  F001         	goto	i1u314_21
  1844  00021A  EF11  F001         	goto	i1u314_20
  1845  00021E                     i1u314_21:
  1846  00021E  EF23  F001         	goto	i1l1192
  1847  000222                     i1u314_20:
  1848  000222  BE81               	btfsc	129,7,c	;volatile
  1849  000224  EF16  F001         	goto	i1u315_21
  1850  000228  EF18  F001         	goto	i1u315_20
  1851  00022C                     i1u315_21:
  1852  00022C  EF23  F001         	goto	i1l1192
  1853  000230                     i1u315_20:
  1854  000230  B640               	btfsc	_flags^0,3,c	;volatile
  1855  000232  EF1D  F001         	goto	i1u316_21
  1856  000236  EF1F  F001         	goto	i1u316_20
  1857  00023A                     i1u316_21:
  1858  00023A  EF23  F001         	goto	i1l1192
  1859  00023E                     i1u316_20:
  1860  00023E                     
  1861                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  1862  00023E  8640               	bsf	_flags^0,3,c	;volatile
  1863  000240                     
  1864                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  1865  000240  0E00               	movlw	0
  1866  000242  EC15  F00B         	call	_RB7_ISR
  1867  000246                     i1l1192:
  1868                           
  1869                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  1870  000246  AC9D               	btfss	157,6,c	;volatile
  1871  000248  EF28  F001         	goto	i1u317_21
  1872  00024C  EF2A  F001         	goto	i1u317_20
  1873  000250                     i1u317_21:
  1874  000250  EF33  F001         	goto	i1l1194
  1875  000254                     i1u317_20:
  1876  000254  AC9E               	btfss	158,6,c	;volatile
  1877  000256  EF2F  F001         	goto	i1u318_21
  1878  00025A  EF31  F001         	goto	i1u318_20
  1879  00025E                     i1u318_21:
  1880  00025E  EF33  F001         	goto	i1l1194
  1881  000262                     i1u318_20:
  1882  000262                     
  1883                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
  1884  000262  EC4B  F00B         	call	_ADC_ISR	;wreg free
  1885  000266                     i1l1194:
  1886                           
  1887                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  1888  000266  A09D               	btfss	157,0,c	;volatile
  1889  000268  EF38  F001         	goto	i1u319_21
  1890  00026C  EF3A  F001         	goto	i1u319_20
  1891  000270                     i1u319_21:
  1892  000270  EF3B  F001         	goto	i1l1197
  1893  000274                     i1u319_20:
  1894  000274  509E               	movf	158,w,c	;volatile
  1895  000276                     i1l1197:
  1896  000276  C049  FFE0         	movff	??_InterruptManagerLow+2,bsr
  1897  00027A  C048  FFE8         	movff	??_InterruptManagerLow+1,wreg
  1898  00027E  C047  FFD8         	movff	??_InterruptManagerLow,status
  1899  000282  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1900  000284  0010               	retfie	
  1901  000286                     __end_of_InterruptManagerLow:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _RB7_ISR *****************
  1905 ;; Defined at:
  1906 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  Handler_Sele    1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 2
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_InterruptManagerLow
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text9
  1935  00162A                     __ptext9:
  1936                           	callstack 0
  1937  00162A                     _RB7_ISR:
  1938                           	callstack 23
  1939                           
  1940                           ;incstack = 0
  1941                           ;RB7_ISR@Handler_Select stored from wreg
  1942  00162A  6E46               	movwf	RB7_ISR@Handler_Select^0,c
  1943  00162C                     
  1944                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  1945  00162C  90F2               	bcf	242,0,c	;volatile
  1946  00162E                     
  1947                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  1948  00162E  5046               	movf	RB7_ISR@Handler_Select^0,w,c
  1949  001630  B4D8               	btfsc	status,2,c
  1950  001632  EF1D  F00B         	goto	i1u97_21
  1951  001636  EF1F  F00B         	goto	i1u97_20
  1952  00163A                     i1u97_21:
  1953  00163A  EF21  F00B         	goto	i1l3094
  1954  00163E                     i1u97_20:
  1955  00163E  EF21  F00B         	goto	i1l1303
  1956  001642                     i1l3094:
  1957  001642                     i1l1303:
  1958  001642  0012               	return		;funcret
  1959  001644                     __end_of_RB7_ISR:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _RB6_ISR *****************
  1963 ;; Defined at:
  1964 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  Handler_Sele    1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_InterruptManagerLow
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text10
  1993  001644                     __ptext10:
  1994                           	callstack 0
  1995  001644                     _RB6_ISR:
  1996                           	callstack 23
  1997                           
  1998                           ;incstack = 0
  1999                           ;RB6_ISR@Handler_Select stored from wreg
  2000  001644  6E46               	movwf	RB6_ISR@Handler_Select^0,c
  2001  001646                     
  2002                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  2003  001646  90F2               	bcf	242,0,c	;volatile
  2004  001648                     
  2005                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  2006  001648  5046               	movf	RB6_ISR@Handler_Select^0,w,c
  2007  00164A  B4D8               	btfsc	status,2,c
  2008  00164C  EF2A  F00B         	goto	i1u96_21
  2009  001650  EF2C  F00B         	goto	i1u96_20
  2010  001654                     i1u96_21:
  2011  001654  EF2E  F00B         	goto	i1l3084
  2012  001658                     i1u96_20:
  2013  001658  EF2E  F00B         	goto	i1l1294
  2014  00165C                     i1l3084:
  2015  00165C                     i1l1294:
  2016  00165C  0012               	return		;funcret
  2017  00165E                     __end_of_RB6_ISR:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _RB5_ISR *****************
  2021 ;; Defined at:
  2022 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  Handler_Sele    1    wreg     unsigned char 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;Total ram usage:        1 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_InterruptManagerLow
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text11
  2051  00165E                     __ptext11:
  2052                           	callstack 0
  2053  00165E                     _RB5_ISR:
  2054                           	callstack 23
  2055                           
  2056                           ;incstack = 0
  2057                           ;RB5_ISR@Handler_Select stored from wreg
  2058  00165E  6E46               	movwf	RB5_ISR@Handler_Select^0,c
  2059  001660                     
  2060                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  2061  001660  90F2               	bcf	242,0,c	;volatile
  2062  001662                     
  2063                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  2064  001662  5046               	movf	RB5_ISR@Handler_Select^0,w,c
  2065  001664  B4D8               	btfsc	status,2,c
  2066  001666  EF37  F00B         	goto	i1u95_21
  2067  00166A  EF39  F00B         	goto	i1u95_20
  2068  00166E                     i1u95_21:
  2069  00166E  EF3B  F00B         	goto	i1l3074
  2070  001672                     i1u95_20:
  2071  001672  EF3B  F00B         	goto	i1l1285
  2072  001676                     i1l3074:
  2073  001676                     i1l1285:
  2074  001676  0012               	return		;funcret
  2075  001678                     __end_of_RB5_ISR:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _RB4_ISR *****************
  2079 ;; Defined at:
  2080 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  Handler_Sele    1    wreg     unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;Total ram usage:        1 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 2
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_InterruptManagerLow
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text12
  2109  001678                     __ptext12:
  2110                           	callstack 0
  2111  001678                     _RB4_ISR:
  2112                           	callstack 23
  2113                           
  2114                           ;incstack = 0
  2115                           ;RB4_ISR@Handler_Select stored from wreg
  2116  001678  6E46               	movwf	RB4_ISR@Handler_Select^0,c
  2117  00167A                     
  2118                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  2119  00167A  90F2               	bcf	242,0,c	;volatile
  2120  00167C                     
  2121                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  2122  00167C  5046               	movf	RB4_ISR@Handler_Select^0,w,c
  2123  00167E  B4D8               	btfsc	status,2,c
  2124  001680  EF44  F00B         	goto	i1u94_21
  2125  001684  EF46  F00B         	goto	i1u94_20
  2126  001688                     i1u94_21:
  2127  001688  EF48  F00B         	goto	i1l3064
  2128  00168C                     i1u94_20:
  2129  00168C  EF48  F00B         	goto	i1l1276
  2130  001690                     i1l3064:
  2131  001690                     i1l1276:
  2132  001690  0012               	return		;funcret
  2133  001692                     __end_of_RB4_ISR:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _INT1_ISR *****************
  2137 ;; Defined at:
  2138 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		None
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_InterruptManagerLow
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text13
  2167  001692                     __ptext13:
  2168                           	callstack 0
  2169  001692                     _INT1_ISR:
  2170                           	callstack 23
  2171  001692                     
  2172                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  2173  001692  90F0               	bcf	240,0,c	;volatile
  2174  001694  0012               	return		;funcret
  2175  001696                     __end_of_INT1_ISR:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _ADC_ISR *****************
  2179 ;; Defined at:
  2180 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		None
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 2
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_InterruptManagerLow
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text14
  2209  001696                     __ptext14:
  2210                           	callstack 0
  2211  001696                     _ADC_ISR:
  2212                           	callstack 23
  2213  001696  0012               	return		;funcret
  2214  001698                     __end_of_ADC_ISR:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _InterruptManagerHigh *****************
  2218 ;; Defined at:
  2219 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 1
  2240 ;; This function calls:
  2241 ;;		_EUSART_Rx_ISR
  2242 ;;		_EUSART_Tx_ISR
  2243 ;;		_TMR0_ISR
  2244 ;; This function is called by:
  2245 ;;		Interrupt level 2
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	intcode
  2250  000008                     __pintcode:
  2251                           	callstack 0
  2252  000008                     _InterruptManagerHigh:
  2253                           	callstack 23
  2254                           
  2255                           ;incstack = 0
  2256  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2257  00000A  EF58  F009         	goto	int_func
  2258                           
  2259                           	psect	intcode_body
  2260  0012B0                     __pintcode_body:
  2261                           	callstack 23
  2262  0012B0                     int_func:
  2263                           	callstack 23
  2264  0012B0                     
  2265                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  2266  0012B0  AAF2               	btfss	242,5,c	;volatile
  2267  0012B2  EF5D  F009         	goto	i2u272_41
  2268  0012B6  EF5F  F009         	goto	i2u272_40
  2269  0012BA                     i2u272_41:
  2270  0012BA  EF68  F009         	goto	i2l1155
  2271  0012BE                     i2u272_40:
  2272  0012BE  A4F2               	btfss	242,2,c	;volatile
  2273  0012C0  EF64  F009         	goto	i2u273_41
  2274  0012C4  EF66  F009         	goto	i2u273_40
  2275  0012C8                     i2u273_41:
  2276  0012C8  EF68  F009         	goto	i2l1155
  2277  0012CC                     i2u273_40:
  2278  0012CC                     
  2279                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  2280  0012CC  EC4C  F00B         	call	_TMR0_ISR	;wreg free
  2281  0012D0                     i2l1155:
  2282                           
  2283                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  2284  0012D0  A29D               	btfss	157,1,c	;volatile
  2285  0012D2  EF6D  F009         	goto	i2u274_41
  2286  0012D6  EF6F  F009         	goto	i2u274_40
  2287  0012DA                     i2u274_41:
  2288  0012DA  EF70  F009         	goto	i2l1157
  2289  0012DE                     i2u274_40:
  2290  0012DE  509E               	movf	158,w,c	;volatile
  2291  0012E0                     i2l1157:
  2292                           
  2293                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  2294  0012E0  A2A0               	btfss	160,1,c	;volatile
  2295  0012E2  EF75  F009         	goto	i2u275_41
  2296  0012E6  EF77  F009         	goto	i2u275_40
  2297  0012EA                     i2u275_41:
  2298  0012EA  EF78  F009         	goto	i2l1159
  2299  0012EE                     i2u275_40:
  2300  0012EE  50A1               	movf	161,w,c	;volatile
  2301  0012F0                     i2l1159:
  2302                           
  2303                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  2304  0012F0  A0A0               	btfss	160,0,c	;volatile
  2305  0012F2  EF7D  F009         	goto	i2u276_41
  2306  0012F6  EF7F  F009         	goto	i2u276_40
  2307  0012FA                     i2u276_41:
  2308  0012FA  EF80  F009         	goto	i2l1161
  2309  0012FE                     i2u276_40:
  2310  0012FE  50A1               	movf	161,w,c	;volatile
  2311  001300                     i2l1161:
  2312                           
  2313                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  2314  001300  AA9D               	btfss	157,5,c	;volatile
  2315  001302  EF85  F009         	goto	i2u277_41
  2316  001306  EF87  F009         	goto	i2u277_40
  2317  00130A                     i2u277_41:
  2318  00130A  EF90  F009         	goto	i2l1163
  2319  00130E                     i2u277_40:
  2320  00130E  AA9E               	btfss	158,5,c	;volatile
  2321  001310  EF8C  F009         	goto	i2u278_41
  2322  001314  EF8E  F009         	goto	i2u278_40
  2323  001318                     i2u278_41:
  2324  001318  EF90  F009         	goto	i2l1163
  2325  00131C                     i2u278_40:
  2326  00131C                     
  2327                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  2328  00131C  EC4E  F00B         	call	_EUSART_Rx_ISR	;wreg free
  2329  001320                     i2l1163:
  2330                           
  2331                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  2332  001320  A89D               	btfss	157,4,c	;volatile
  2333  001322  EF95  F009         	goto	i2u279_41
  2334  001326  EF97  F009         	goto	i2u279_40
  2335  00132A                     i2u279_41:
  2336  00132A  EFA0  F009         	goto	i2l1165
  2337  00132E                     i2u279_40:
  2338  00132E  A89E               	btfss	158,4,c	;volatile
  2339  001330  EF9C  F009         	goto	i2u280_41
  2340  001334  EF9E  F009         	goto	i2u280_40
  2341  001338                     i2u280_41:
  2342  001338  EFA0  F009         	goto	i2l1165
  2343  00133C                     i2u280_40:
  2344  00133C                     
  2345                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  2346  00133C  EC4D  F00B         	call	_EUSART_Tx_ISR	;wreg free
  2347  001340                     i2l1165:
  2348                           
  2349                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  2350  001340  A6A0               	btfss	160,3,c	;volatile
  2351  001342  EFA5  F009         	goto	i2u281_41
  2352  001346  EFA7  F009         	goto	i2u281_40
  2353  00134A                     i2u281_41:
  2354  00134A  EFA8  F009         	goto	i2l1167
  2355  00134E                     i2u281_40:
  2356  00134E  50A1               	movf	161,w,c	;volatile
  2357  001350                     i2l1167:
  2358                           
  2359                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  2360  001350  A69D               	btfss	157,3,c	;volatile
  2361  001352  EFAD  F009         	goto	i2u282_41
  2362  001356  EFAF  F009         	goto	i2u282_40
  2363  00135A                     i2u282_41:
  2364  00135A  EFB0  F009         	goto	i2l1170
  2365  00135E                     i2u282_40:
  2366  00135E  509E               	movf	158,w,c	;volatile
  2367  001360                     i2l1170:
  2368  001360  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2369  001362  0011               	retfie		f
  2370  001364                     __end_of_InterruptManagerHigh:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _TMR0_ISR *****************
  2374 ;; Defined at:
  2375 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		None
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_InterruptManagerHigh
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text16
  2403  001698                     __ptext16:
  2404                           	callstack 0
  2405  001698                     _TMR0_ISR:
  2406                           	callstack 23
  2407  001698  0012               	return		;funcret
  2408  00169A                     __end_of_TMR0_ISR:
  2409                           	callstack 0
  2410                           
  2411 ;; *************** function _EUSART_Tx_ISR *****************
  2412 ;; Defined at:
  2413 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      void 
  2420 ;; Registers used:
  2421 ;;		None
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:        0 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_InterruptManagerHigh
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text17
  2441  00169A                     __ptext17:
  2442                           	callstack 0
  2443  00169A                     _EUSART_Tx_ISR:
  2444                           	callstack 23
  2445  00169A  0012               	return		;funcret
  2446  00169C                     __end_of_EUSART_Tx_ISR:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _EUSART_Rx_ISR *****************
  2450 ;; Defined at:
  2451 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_InterruptManagerHigh
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text18
  2479  00169C                     __ptext18:
  2480                           	callstack 0
  2481  00169C                     _EUSART_Rx_ISR:
  2482                           	callstack 23
  2483  00169C  0012               	return		;funcret
  2484  00169E                     __end_of_EUSART_Rx_ISR:
  2485                           	callstack 0
  2486                           
  2487                           	psect	rparam
  2488  0000                     
  2489                           	psect	temp
  2490  00005B                     btemp:
  2491                           	callstack 0
  2492  00005B                     	ds	1
  2493  0000                     int$flags	set	btemp
  2494  0000                     wtemp8	set	btemp+1
  2495  0000                     ttemp5	set	btemp+1
  2496  0000                     ttemp6	set	btemp+4
  2497  0000                     ttemp7	set	btemp+8
  2498                           
  2499                           	psect	idloc
  2500                           
  2501                           ;Config register IDLOC0 @ 0x200000
  2502                           ;	unspecified, using default values
  2503  200000                     	org	2097152
  2504  200000  FF                 	db	255
  2505                           
  2506                           ;Config register IDLOC1 @ 0x200001
  2507                           ;	unspecified, using default values
  2508  200001                     	org	2097153
  2509  200001  FF                 	db	255
  2510                           
  2511                           ;Config register IDLOC2 @ 0x200002
  2512                           ;	unspecified, using default values
  2513  200002                     	org	2097154
  2514  200002  FF                 	db	255
  2515                           
  2516                           ;Config register IDLOC3 @ 0x200003
  2517                           ;	unspecified, using default values
  2518  200003                     	org	2097155
  2519  200003  FF                 	db	255
  2520                           
  2521                           ;Config register IDLOC4 @ 0x200004
  2522                           ;	unspecified, using default values
  2523  200004                     	org	2097156
  2524  200004  FF                 	db	255
  2525                           
  2526                           ;Config register IDLOC5 @ 0x200005
  2527                           ;	unspecified, using default values
  2528  200005                     	org	2097157
  2529  200005  FF                 	db	255
  2530                           
  2531                           ;Config register IDLOC6 @ 0x200006
  2532                           ;	unspecified, using default values
  2533  200006                     	org	2097158
  2534  200006  FF                 	db	255
  2535                           
  2536                           ;Config register IDLOC7 @ 0x200007
  2537                           ;	unspecified, using default values
  2538  200007                     	org	2097159
  2539  200007  FF                 	db	255
  2540                           
  2541                           	psect	config
  2542                           
  2543                           ; Padding undefined space
  2544  300000                     	org	3145728
  2545  300000  FF                 	db	255
  2546                           
  2547                           ;Config register CONFIG1H @ 0x300001
  2548                           ;	Oscillator Selection bits
  2549                           ;	FOSC = HS, HS oscillator
  2550                           ;	Fail-Safe Clock Monitor Enable bit
  2551                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2552                           ;	Internal/External Oscillator Switchover bit
  2553                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2554  300001                     	org	3145729
  2555  300001  02                 	db	2
  2556                           
  2557                           ;Config register CONFIG2L @ 0x300002
  2558                           ;	Power-up Timer Enable bit
  2559                           ;	PWRT = OFF, PWRT disabled
  2560                           ;	Brown-out Reset Enable bits
  2561                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2562                           ;	Brown Out Reset Voltage bits
  2563                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2564  300002                     	org	3145730
  2565  300002  19                 	db	25
  2566                           
  2567                           ;Config register CONFIG2H @ 0x300003
  2568                           ;	Watchdog Timer Enable bit
  2569                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2570                           ;	Watchdog Timer Postscale Select bits
  2571                           ;	WDTPS = 32768, 1:32768
  2572  300003                     	org	3145731
  2573  300003  1E                 	db	30
  2574                           
  2575                           ; Padding undefined space
  2576  300004                     	org	3145732
  2577  300004  FF                 	db	255
  2578                           
  2579                           ;Config register CONFIG3H @ 0x300005
  2580                           ;	CCP2 MUX bit
  2581                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2582                           ;	PORTB A/D Enable bit
  2583                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2584                           ;	Low-Power Timer1 Oscillator Enable bit
  2585                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2586                           ;	HFINTOSC Fast Start-up
  2587                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  2588                           ;	MCLR Pin Enable bit
  2589                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2590  300005                     	org	3145733
  2591  300005  81                 	db	129
  2592                           
  2593                           ;Config register CONFIG4L @ 0x300006
  2594                           ;	Stack Full/Underflow Reset Enable bit
  2595                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2596                           ;	Single-Supply ICSP Enable bit
  2597                           ;	LVP = OFF, Single-Supply ICSP disabled
  2598                           ;	Extended Instruction Set Enable bit
  2599                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2600                           ;	Background Debugger Enable bit
  2601                           ;	DEBUG = 0x1, unprogrammed default
  2602  300006                     	org	3145734
  2603  300006  81                 	db	129
  2604                           
  2605                           ; Padding undefined space
  2606  300007                     	org	3145735
  2607  300007  FF                 	db	255
  2608                           
  2609                           ;Config register CONFIG5L @ 0x300008
  2610                           ;	Code Protection Block 0
  2611                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2612                           ;	Code Protection Block 1
  2613                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2614                           ;	Code Protection Block 2
  2615                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2616                           ;	Code Protection Block 3
  2617                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2618  300008                     	org	3145736
  2619  300008  0F                 	db	15
  2620                           
  2621                           ;Config register CONFIG5H @ 0x300009
  2622                           ;	Boot Block Code Protection bit
  2623                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2624                           ;	Data EEPROM Code Protection bit
  2625                           ;	CPD = OFF, Data EEPROM not code-protected
  2626  300009                     	org	3145737
  2627  300009  C0                 	db	192
  2628                           
  2629                           ;Config register CONFIG6L @ 0x30000A
  2630                           ;	Write Protection Block 0
  2631                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2632                           ;	Write Protection Block 1
  2633                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2634                           ;	Write Protection Block 2
  2635                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2636                           ;	Write Protection Block 3
  2637                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2638  30000A                     	org	3145738
  2639  30000A  0F                 	db	15
  2640                           
  2641                           ;Config register CONFIG6H @ 0x30000B
  2642                           ;	Configuration Register Write Protection bit
  2643                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2644                           ;	Boot Block Write Protection bit
  2645                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2646                           ;	Data EEPROM Write Protection bit
  2647                           ;	WRTD = OFF, Data EEPROM not write-protected
  2648  30000B                     	org	3145739
  2649  30000B  E0                 	db	224
  2650                           
  2651                           ;Config register CONFIG7L @ 0x30000C
  2652                           ;	Table Read Protection Block 0
  2653                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2654                           ;	Table Read Protection Block 1
  2655                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2656                           ;	Table Read Protection Block 2
  2657                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2658                           ;	Table Read Protection Block 3
  2659                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2660  30000C                     	org	3145740
  2661  30000C  0F                 	db	15
  2662                           
  2663                           ;Config register CONFIG7H @ 0x30000D
  2664                           ;	Boot Block Table Read Protection bit
  2665                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2666  30000D                     	org	3145741
  2667  30000D  40                 	db	64
  2668                           tosu	equ	0xFFF
  2669                           tosh	equ	0xFFE
  2670                           tosl	equ	0xFFD
  2671                           stkptr	equ	0xFFC
  2672                           pclatu	equ	0xFFB
  2673                           pclath	equ	0xFFA
  2674                           pcl	equ	0xFF9
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           prodh	equ	0xFF4
  2680                           prodl	equ	0xFF3
  2681                           indf0	equ	0xFEF
  2682                           postinc0	equ	0xFEE
  2683                           postdec0	equ	0xFED
  2684                           preinc0	equ	0xFEC
  2685                           plusw0	equ	0xFEB
  2686                           fsr0h	equ	0xFEA
  2687                           fsr0l	equ	0xFE9
  2688                           wreg	equ	0xFE8
  2689                           indf1	equ	0xFE7
  2690                           postinc1	equ	0xFE6
  2691                           postdec1	equ	0xFE5
  2692                           preinc1	equ	0xFE4
  2693                           plusw1	equ	0xFE3
  2694                           fsr1h	equ	0xFE2
  2695                           fsr1l	equ	0xFE1
  2696                           bsr	equ	0xFE0
  2697                           indf2	equ	0xFDF
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           preinc2	equ	0xFDC
  2701                           plusw2	equ	0xFDB
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        62
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      90
    BANK0           160      0      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    Timer2_Init$0	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK0[12]), CCP1_Obj(BANK0[12]), 

    S4765$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4765$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3309$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3309$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3262$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S527$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), stepper1.dir_pin(COMRAM[1]), stepper1.step_pin(COMRAM[1]), stepper1(COMRAM[2]), 
		 -> CCP2_Obj(BANK0[12]), CCP1_Obj(BANK0[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pinc0(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), stepper1.dir_pin(COMRAM[1]), stepper1.step_pin(COMRAM[1]), stepper1(COMRAM[2]), 
		 -> CCP2_Obj(BANK0[12]), CCP1_Obj(BANK0[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), stepper1.dir_pin(COMRAM[1]), stepper1.step_pin(COMRAM[1]), stepper1(COMRAM[2]), 
		 -> CCP2_Obj(BANK0[12]), CCP1_Obj(BANK0[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), W1_W3_W5_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllh[1]), PORTD(BITBIGSFRllllh[1]), PORTC(BITBIGSFRllllh[1]), PORTB(BITBIGSFRllllh[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Ecu_Stepper_Step@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper1(COMRAM[2]), 

    Ecu_Stepper_Init@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper1(COMRAM[2]), 

    sp__memset	PTR void  size(2) Largest target is 0

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _application_intialize->_Ecu_Stepper_Init
    _Ecu_Stepper_Init->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28174
                                             19 COMRAM     2     2      0
                   _Ecu_Stepper_Step
              _GPIO_Pin_Toggle_Logic
               _GPIO_Pin_Write_Logic
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   18404
                   _Ecu_Stepper_Init
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Init                                     2     0      2   11928
                                             17 COMRAM     2     0      2
      _GPIO_Pin_Direction_Initialize
                _GPIO_Pin_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Initialize                                  3     1      2    6476
                                             14 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Direction_Initialize                        9     7      2     483
                                              4 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     150
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _Ecu_Stepper_Step                                     3     1      2    4881
                                             14 COMRAM     3     1      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Write_Logic                                10     7      3    4739
                                              4 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptManagerLow                                  3     3      0     120
                                              1 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (6) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerHigh                                 0     0      0       0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Tx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Rx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ecu_Stepper_Step
     _GPIO_Pin_Write_Logic
   _GPIO_Pin_Toggle_Logic
   _GPIO_Pin_Write_Logic
   _application_intialize
     _Ecu_Stepper_Init
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Initialize

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      31       5       30.6%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      5A       1       95.7%
BITBIGSFRlllll      20      0       0      49        0.0%
BITBIGSFRhhhhll     18      0       0      37        0.0%
BITBIGSFRhhhhh       D      0       0      36        0.0%
BITBIGSFRllhhll      8      0       0      45        0.0%
BITBIGSFRllhhll      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRllllh       4      0       0      48        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRhhhl        4      0       0      39        0.0%
BITBIGSFRhhhhll      3      0       0      38        0.0%
BITBIGSFRhhlhh       1      0       0      40        0.0%
BITBIGSFRllhhll      1      0       0      43        0.0%
BITBIGSFRllhhlh      1      0       0      42        0.0%
BITBIGSFRllhhh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B      50        0.0%
DATA                 0      0      8B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 08 04:23:50 2023

                             _SSPSTATbits 000FC7                                        bsr 000FE0  
                   ??_InterruptManagerLow 0047                                       l330 1586  
                                     l325 1460                                       l912 15D0  
                                     l907 14D0                                       l876 1186  
                                     l895 12AE                                       _PR2 000FCB  
                  ??_InterruptManagerHigh 0046                 _RB5_InterruptHandler_HIGH 000F  
                         __end_of_ADC_ISR 1698  GPIO_Pin_Direction_Initialize@ERRORSTATUS 0052  
                                     prod 000FF3                                       wreg 000FE8  
                              _TXSTA1bits 000FAC                    ??_GPIO_Pin_Write_Logic 004D  
                         __end_of_RB4_ISR 1692                           __end_of_RB5_ISR 1678  
                         __end_of_RB6_ISR 165E                           __end_of_RB7_ISR 1644  
                                    l1731 1628                                      l5030 118C  
                                    l5032 119E                                      l5042 1282  
                                    l5034 11BC                                      l5036 11C4  
                                    l5044 12AC                                      l5028 1188  
                                    l5060 1084                                      l5052 1048  
                                    l5038 1226                                      l5062 10E6  
                                    l5054 104C                                      l5056 105E  
                                    l5080 159A                                      l6200 13C0  
                                    l5066 1142                                      l5058 107C  
                                    l5082 15A2                                      l6202 13CC  
                                    l5068 1184                                      l5084 15CE  
                                    l5076 1588                                      l5180 1404  
                                    l6204 13D0                                      l5510 1462  
                                    l5078 1588                                      l5174 13EE  
                                    l5432 154A                                      l5512 1462  
                                    l5520 1610                                      l5434 155A  
                                    l5426 1534                                      l5514 1474  
                                    l5436 1568                                      l5516 1478  
                                    l6190 1380                                      l6192 1396  
                                    l6194 13B8                                      l6186 1364  
                                    l6188 136C                                      l6572 116E  
                                    l6574 1296                                      STR_1 1014  
                                    STR_2 1034                                      STR_3 1025  
                                    STR_4 1001                                      STR_5 1043  
                                    STR_9 1040                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u4210 1546                                      u4211 1542  
                                    u4340 1474                                      u4341 1470  
                                    u4354 1494                                      u4355 1490  
                                    u3740 119E                                      u3820 115A  
                                    u3804 10A0                                      u3741 119A  
                                    u3821 1154                                      u3805 109C  
                                    u3750 11BC                                      u3830 115C  
                                    u3814 1102                                      u3751 11B8  
                                    u3815 10FE                                      u3840 159A  
                                    u3841 1596                                      u3764 11E0  
                                    u3780 105E                                      u3765 11DC  
                                    u3781 105A                                      u3774 1242  
                                    u3790 107C                                      u3950 1400  
                                    u3775 123E                                      u3791 1078  
                                    u3951 13FC                                      u5557 138A  
                                    u4950 13E6                                      u4951 13E2  
                                    u5567 13AC                                      u5577 1560  
                                    u5587 157E                                      _RX9D 007D58  
                 ??_application_intialize 0059                  _RB4_InterruptHandler_LOW 0011  
                                    _main 1364                  _RB7_InterruptHandler_LOW 0005  
                                    fsr2h 000FDA                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005B                                      prodl 000FF3  
                                    start 0286          GPIO_Pin_Toggle_Logic@_pin_config 004A  
                            ___param_bank 000000                          __end_of_INT1_ISR 1696  
                                   ?_main 0046                                     i1l463 1696  
                                   i2l824 169A                                     i2l828 169C  
                                   _RCREG 000FAE                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _SPBRG 000FAF  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                             _EUSART_Rx_ISR 169C  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             _EUSART_Tx_ISR 169A  
                                   _TXREG 000FAD                          __end_of_TMR0_ISR 169A  
                                   _flags 0040                                     _pinc0 0045  
                                   tablat 000FF5                                     ttemp5 005C  
                                   ttemp6 005F                                     ttemp7 0063  
                                   status 000FD8                                     wtemp8 005C  
             _I2C_DefaultInterruptHandler 001F                           __initialization 14D2  
                            __end_of_main 13EE                _eusart_Rx_InterruptHandler 0025  
           __end_of_GPIO_Pin_Toggle_Logic 14D2                                 ??_ADC_ISR 0046  
                           _lat_registers 002A                                    ??_main 0059  
                           __activetblptr 000003                            ?_EUSART_Rx_ISR 0046  
                          ?_EUSART_Tx_ISR 0046                                 ??_RB4_ISR 0046  
                               ??_RB5_ISR 0046                                 ??_RB6_ISR 0046  
                               ??_RB7_ISR 0046                     RB5_ISR@Handler_Select 0046  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1L 000FBE                                    _CCPR2L 000FBB  
                __end_of_Ecu_Stepper_Init 1462                  __end_of_Ecu_Stepper_Step 1588  
                                  i1l1303 1642                                    i1l1180 00C6  
                                  i1l1190 0206                                    i1l1182 0106  
                                  i1l1263 1694                                    i1l1192 0246  
                                  i1l1184 0146                                    i1l1176 0046  
                                  i1l1194 0266                                    i1l1186 0186  
                                  i1l1178 0086                                    i1l1276 1690  
                                  i1l3060 167C                                    i1l1188 01C6  
                                  i1l1285 1676                                    i1l1197 0276  
                                  i1l3054 1692                                    i1l3070 1662  
                                  i1l1294 165C                                    i1l3064 1690  
                                  i1l3080 1648                                    i1l3058 167A  
                                  i1l3074 1676                                    i1l3090 162E  
                                  i1l3068 1660                                    i1l3084 165C  
                                  i1l3078 1646                                    i1l3094 1642  
                                  i1l3088 162C                                    i1l4400 00A2  
                                  i1l4410 00E2                                    i1l4402 00B0  
                                  i1l4420 0122                                    i1l4412 00F0  
                                  i1l4404 00BE                                    i1l4430 0162  
                                  i1l4422 0130                                    i1l4414 00FE  
                                  i1l4406 00C0                                    i1l4440 01A2  
                                  i1l4432 0170                                    i1l4424 013E  
                                  i1l4416 0100                                    i1l4408 00D4  
                                  i2l1161 1300                                    i2l1170 1360  
                                  i1l4450 01E2                                    i1l4442 01B0  
                                  i1l4434 017E                                    i1l4426 0140  
                                  i1l4418 0114                                    i2l1163 1320  
                                  i2l1155 12D0                                    i1l4460 0222  
                                  i1l4452 01F0                                    i1l4444 01BE  
                                  i1l4436 0180                                    i1l4428 0154  
                                  i2l1165 1340                                    i2l1157 12E0  
                                  i1l4470 0262                                    i1l4462 0230  
                                  i1l4454 01FE                                    i1l4446 01C0  
                                  i1l4438 0194                                    i1l4390 0062  
                                  i1l4382 0026                                    i2l1167 1350  
                                  i2l1159 12F0                                    i1l4472 0274  
                                  i1l4464 023E                                    i1l4456 0200  
                                  i1l4448 01D4                                    i1l4392 0070  
                                  i1l4384 0034                                    i2l3042 169C  
                                  i1l4466 0240                                    i1l4458 0214  
                                  i1l4394 007E                                    i1l4386 0042  
                                  i1l4468 0254                                    i1l4396 0080  
                                  i1l4388 0054                                    i1l4398 0094  
                                  i2l1553 1698                                    i2l4350 12BE  
                                  i2l4352 12CC                                    i2l4370 132E  
                                  i2l4362 12FE                                    i2l4354 12DE  
                                  i2l4372 133C                                    i2l4348 12B0  
                                  i2l4374 134E                                    i2l4366 130E  
                                  i2l4358 12EE                                    i2l4368 131C  
                                  i2l4378 135E                            _Movement_State 0027  
                                  _SPBRGH 000FB0                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                    _W1_W3_W5_Motor_Control 0043  
         ??_GPIO_Pin_Direction_Initialize 004C               __end_of_GPIO_Pin_Initialize 15D2  
                                  clear_0 1518                                    clear_1 1524  
                                  isa$std 000001                              __pdataCOMRAM 002A  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                              __accesstop 0060                   __end_of__initialization 152A  
                               ?_INT1_ISR 0046                             ___rparam_used 000001  
              _I2C_Report_Write_Collision 001B                            __pcstackCOMRAM 0046  
                            __pidataBANK0 15D2                                 ?_TMR0_ISR 0046  
                         ??_EUSART_Rx_ISR 0046                           ??_EUSART_Tx_ISR 0046  
                              __pbssBANK0 0082                     _INT0_InterruptHandler 0019  
                              ??_INT1_ISR 0046             __end_of_application_intialize 162A  
                _eusart_frameerr_CallBack 0021               __end_of_InterruptManagerLow 0286  
                              ??_TMR0_ISR 0046                                   _ADC_ISR 1696  
   __end_of_GPIO_Pin_Direction_Initialize 1188             _GPIO_Pin_Direction_Initialize 1048  
                                 _RB4_ISR 1678                                   _RB5_ISR 165E  
                                 _RB6_ISR 1644                                   _RB7_ISR 162A  
               _RB6_InterruptHandler_HIGH 000B                                   i1u94_20 168C  
                                 i1u94_21 1688                                   i1u95_20 1672  
                                 i1u95_21 166E                                   i1u96_20 1658  
                                 i1u96_21 1654                                   i1u97_20 163E  
                                 i1u97_21 163A                            _tris_registers 0034  
                _RB6_InterruptHandler_LOW 0009                                   __Hparam 0000  
              _eusart_overrunerr_CallBack 0023                                   __Lparam 0000  
                            __psmallconst 1000                                   __pcinit 14D2  
                                 __ramtop 1000                                   __ptext0 1364  
                                 __ptext1 1610                                   __ptext2 13EE  
                                 __ptext3 1588                                   __ptext4 1048  
                                 __ptext5 1462                                   __ptext6 1534  
                                 __ptext7 1188                                   __ptext9 162A  
                               _T0CONbits 000FD5                                   _counter 0001  
                               _T3CONbits 000FB1                            __pintcode_body 12B0  
                    end_of_initialization 152A                         ?_Ecu_Stepper_Init 0057  
                       ?_Ecu_Stepper_Step 0054                                   int_func 12B0  
                      ??_Ecu_Stepper_Init 0059                        ??_Ecu_Stepper_Step 0056  
                               _RCSTAbits 000FAB                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                     _INT1_InterruptHandler 0017  
                               _PORTBbits 000F81                     _GPIO_Pin_Toggle_Logic 1462  
                               _PORTDbits 000F83            ?_GPIO_Pin_Direction_Initialize 004A  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                     RB4_ISR@Handler_Select 0046  
                   RB7_ISR@Handler_Select 0046                   Ecu_Stepper_Init@stepper 0057  
                             _CCP1CONbits 000FBD                               _CCP2CONbits 000FBA  
                               _TXSTAbits 000FAC             convert_uint16_to_string@F3421 008B  
                             _BAUDCONbits 000FB8                             __pidataCOMRAM 15F4  
                     start_initialization 14D2           GPIO_Pin_Write_Logic@_pin_config 004A  
          GPIO_Pin_Initialize@_pin_config 0054                               __pdataBANK0 0060  
                                ?_ADC_ISR 0046                    ?_GPIO_Pin_Toggle_Logic 004A  
                   __end_of_EUSART_Rx_ISR 169E                     __end_of_EUSART_Tx_ISR 169C  
                                ?_RB4_ISR 0046                                  ?_RB5_ISR 0046  
                                ?_RB6_ISR 0046                                  ?_RB7_ISR 0046  
                             __pbssCOMRAM 0001                     _INT2_InterruptHandler 0015  
            __end_of_InterruptManagerHigh 1364                     _application_intialize 1610  
                               __pintcode 0008              __end_of_GPIO_Pin_Write_Logic 12B0  
         GPIO_Pin_Write_Logic@ERRORSTATUS 0053                               __pintcodelo 0018  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 0013  
                                _CCP1_Obj 0076                                  _CCP2_Obj 006A  
               _RB7_InterruptHandler_HIGH 0007            GPIO_Pin_Initialize@ERRORSTATUS 0056  
          convert_float32_to_string@F3432 0082                  _RB5_InterruptHandler_LOW 000D  
                                _INT1_ISR 1692                                  _LATDbits 000F8C  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                i1u300_20 013E                                  i1u300_21 013A  
                                i1u301_20 0154                                  i1u301_21 0150  
                                i1u310_20 01E2                                  i1u302_20 0162  
                                i1u310_21 01DE                                  i1u302_21 015E  
                                i1u311_20 01F0                                  i1u303_20 0170  
                                i1u311_21 01EC                                  i1u303_21 016C  
                                i1u312_20 01FE                                  i1u304_20 017E  
                                i1u312_21 01FA                                  i1u304_21 017A  
                                i1u313_20 0214                                  i1u305_20 0194  
                                i1u313_21 0210                                  i1u305_21 0190  
                                i1u314_20 0222                                  i1u306_20 01A2  
                                i1u314_21 021E                                  i1u306_21 019E  
                                i1u315_20 0230                                  i1u307_20 01B0  
                                i1u315_21 022C                                  i1u307_21 01AC  
                                i1u316_20 023E                                  i1u308_20 01BE  
                                i1u316_21 023A                                  i1u308_21 01BA  
                                i1u317_20 0254                                  i1u309_20 01D4  
                                i1u317_21 0250                                  i1u309_21 01D0  
                                i1u318_20 0262                                  i1u318_21 025E  
                                i1u319_20 0274                                  i1u319_21 0270  
                                i1u290_20 00A2                                  i1u290_21 009E  
                                i1u291_20 00B0                                  i1u283_20 0034  
                                i1u291_21 00AC                                  i1u283_21 0030  
                                i1u292_20 00BE                                  i1u284_20 0042  
                                i1u292_21 00BA                                  i1u284_21 003E  
                                i1u293_20 00D4                                  i1u285_20 0054  
                                i1u293_21 00D0                                  i1u285_21 0050  
                                i1u294_20 00E2                                  i1u286_20 0062  
                                i1u294_21 00DE                                  i1u286_21 005E  
                                i1u295_20 00F0                                  i1u287_20 0070  
                                i1u295_21 00EC                                  i1u287_21 006C  
                                i1u296_20 00FE                                  i1u288_20 007E  
                                i1u296_21 00FA                                  i1u288_21 007A  
                                i1u297_20 0114                                  i1u289_20 0094  
                                i1u297_21 0110                                  i1u289_21 0090  
                                i1u298_20 0122                                  i1u298_21 011E  
                                i1u299_20 0130                                  i1u299_21 012C  
                                i2u280_40 133C                                  i2u272_40 12BE  
                                i2u280_41 1338                                  i2u272_41 12BA  
                                i2u281_40 134E                                  i2u273_40 12CC  
                                i2u281_41 134A                                  i2u273_41 12C8  
                                _PIR1bits 000F9E                                  i2u282_40 135E  
                                i2u274_40 12DE                                  i2u282_41 135A  
                                i2u274_41 12DA                                  i2u275_40 12EE  
                                i2u275_41 12EA                                  _PIR2bits 000FA1  
                                i2u276_40 12FE                                  i2u276_41 12FA  
                                i2u277_40 130E                                  i2u277_41 130A  
                                i2u278_40 131C                                  i2u278_41 1318  
                                i2u279_40 132E                                  i2u279_41 132A  
                                _RCONbits 000FD0                                  _TMR0_ISR 1698  
             _I2C_Report_Receive_Overflow 001D                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
                               _step_pin1 003F                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 14E6  
                               copy_data1 1506                    ?_application_intialize 0046  
                     _GPIO_Pin_Initialize 1588                                  __Hrparam 0000  
                                __Lrparam 0000                 GPIO_Pin_Write_Logic@logic 004C  
                           _preloaded_val 0003                      ?_GPIO_Pin_Initialize 0054  
                   RB6_ISR@Handler_Select 0046                      _InterruptManagerHigh 0008  
                                __ptext10 1644                                  __ptext11 165E  
                                __ptext12 1678                                  __ptext13 1692  
                                __ptext14 1696                                  __ptext16 1698  
                                __ptext17 169A                                  __ptext18 169C  
                                _dir_pin1 003E                      _GPIO_Pin_Write_Logic 1188  
                 ??_GPIO_Pin_Toggle_Logic 004C                                  isa$xinst 000000  
                                int$flags 005B                                  _stepper1 0028  
                   ??_GPIO_Pin_Initialize 0056                                _INTCONbits 000FF2  
                 Ecu_Stepper_Step@stepper 0054                     ?_InterruptManagerHigh 0046  
                   ?_GPIO_Pin_Write_Logic 004A                                  intlevel1 0000  
                                intlevel2 0000                       _InterruptManagerLow 0018  
GPIO_Pin_Direction_Initialize@_pin_config 004A                                _RCSTA1bits 000FAB  
                        _Ecu_Stepper_Init 13EE                          _Ecu_Stepper_Step 1534  
                    ?_InterruptManagerLow 0046                            _port_registers 0060  
                  _W2_W4_W6_Motor_Control 0041                               _SSPCON1bits 000FC6  
                             _SSPCON2bits 000FC5                                _WDTCONbits 000FD1  
