

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Feb 26 03:46:11 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.40
    58                           ; Generated 17/11/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4620 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  002186                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _flags
    98  002186  0F                 	db	15
    99                           
   100                           ;initializer for _lcd1
   101  002187  18                 	db	24
   102  002188  19                 	db	25
   103  002189  1A                 	db	26
   104  00218A  1B                 	db	27
   105  00218B  1C                 	db	28
   106  00218C  1D                 	db	29
   107                           
   108                           ;initializer for _Timer0
   109  00218D  07                 	db	7
   110  00218E  85EE               	dw	34286
   111  002190  BE                 	db	low _Timer0_Handler
   112  002191  20                 	db	high _Timer0_Handler
   113  002192  01                 	db	1
   114                           
   115                           ;initializer for _W4_Motor_Control
   116  002193  1C                 	db	28
   117  002194  1D                 	db	29
   118                           
   119                           ;initializer for _W3_Motor_Control
   120  002195  1A                 	db	26
   121  002196  1B                 	db	27
   122                           
   123                           ;initializer for _W1_W5_W2_W6_Motor_Control
   124  002197  18                 	db	24
   125  002198  19                 	db	25
   126                           
   127                           ;initializer for _pinc0
   128  002199  90                 	db	144
   129                           
   130                           	psect	idataBANK0
   131  002060                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _port_registers
   135  002060  80                 	db	128
   136  002061  0F                 	db	15
   137  002062  81                 	db	129
   138  002063  0F                 	db	15
   139  002064  82                 	db	130
   140  002065  0F                 	db	15
   141  002066  83                 	db	131
   142  002067  0F                 	db	15
   143  002068  84                 	db	132
   144  002069  0F                 	db	15
   145                           
   146                           ;initializer for _lat_registers
   147  00206A  89                 	db	137
   148  00206B  0F                 	db	15
   149  00206C  8A                 	db	138
   150  00206D  0F                 	db	15
   151  00206E  8B                 	db	139
   152  00206F  0F                 	db	15
   153  002070  8C                 	db	140
   154  002071  0F                 	db	15
   155  002072  8D                 	db	141
   156  002073  0F                 	db	15
   157                           
   158                           ;initializer for _tris_registers
   159  002074  92                 	db	146
   160  002075  0F                 	db	15
   161  002076  93                 	db	147
   162  002077  0F                 	db	15
   163  002078  94                 	db	148
   164  002079  0F                 	db	15
   165  00207A  95                 	db	149
   166  00207B  0F                 	db	15
   167  00207C  96                 	db	150
   168  00207D  0F                 	db	15
   169                           
   170                           ;initializer for _CCP2_Obj
   171  00207E  01                 	db	1
   172  00207F  02                 	db	2
   173  002080  00                 	db	0
   174  002081  11                 	db	17
   175  002082  00                 	db	0
   176  002083  2710               	dw	10000
   177  002085  0000               	dw	0
   178  002087  11                 	db	17
   179                           
   180                           ;initializer for _CCP1_Obj
   181  002088  00                 	db	0
   182  002089  02                 	db	2
   183  00208A  00                 	db	0
   184  00208B  12                 	db	18
   185  00208C  00                 	db	0
   186  00208D  2710               	dw	10000
   187  00208F  0000               	dw	0
   188  002091  10                 	db	16
   189  0000                     _PORTDbits	set	3971
   190  0000                     _LATDbits	set	3980
   191  0000                     _TRISDbits	set	3989
   192  0000                     _WDTCONbits	set	4049
   193  0000                     _TMR0H	set	4055
   194  0000                     _TMR0L	set	4054
   195  0000                     _T0CONbits	set	4053
   196  0000                     _INTCON2bits	set	4081
   197  0000                     _TRISBbits	set	3987
   198  0000                     _PORTBbits	set	3969
   199  0000                     _INTCON3bits	set	4080
   200  0000                     _IPR2bits	set	4002
   201  0000                     _PIR2bits	set	4001
   202  0000                     _SSPBUF	set	4041
   203  0000                     _PIE2bits	set	4000
   204  0000                     _SSPSTATbits	set	4039
   205  0000                     _SSPADD	set	4040
   206  0000                     _SSPCON2bits	set	4037
   207  0000                     _SSPCON1bits	set	4038
   208  0000                     _SPBRGH	set	4016
   209  0000                     _SPBRG	set	4015
   210  0000                     _BAUDCONbits	set	4024
   211  0000                     _INTCONbits	set	4082
   212  0000                     _IPR1bits	set	3999
   213  0000                     _RCONbits	set	4048
   214  0000                     _RCSTA1bits	set	4011
   215  0000                     _RCREG	set	4014
   216  0000                     _PIR1bits	set	3998
   217  0000                     _TXREG	set	4013
   218  0000                     _TXSTAbits	set	4012
   219  0000                     _PIE1bits	set	3997
   220  0000                     _TRISCbits	set	3988
   221  0000                     _TXSTA1bits	set	4012
   222  0000                     _RCSTAbits	set	4011
   223  0000                     _T3CONbits	set	4017
   224  0000                     _CCPR2L	set	4027
   225  0000                     _CCPR1L	set	4030
   226  0000                     _CCP2CONbits	set	4026
   227  0000                     _CCP1CONbits	set	4029
   228  0000                     _ADCON1bits	set	4033
   229  0000                     _ADRESL	set	4035
   230  0000                     _ADRESH	set	4036
   231  0000                     _ADCON2bits	set	4032
   232  0000                     _ADCON0bits	set	4034
   233  0000                     _PORTE	set	3972
   234  0000                     _PORTD	set	3971
   235  0000                     _PORTC	set	3970
   236  0000                     _PORTB	set	3969
   237  0000                     _PORTA	set	3968
   238  0000                     _LATE	set	3981
   239  0000                     _LATD	set	3980
   240  0000                     _LATC	set	3979
   241  0000                     _LATB	set	3978
   242  0000                     _LATA	set	3977
   243  0000                     _TRISD	set	3989
   244  0000                     _TRISC	set	3988
   245  0000                     _PR2	set	4043
   246  0000                     _TRISB	set	3987
   247  0000                     _TRISE	set	3990
   248  0000                     _TRISA	set	3986
   249  0000                     _RX9D	set	32088
   250                           
   251                           	psect	smallconst
   252  001000                     __psmallconst:
   253                           	callstack 0
   254  001000  00                 	db	0
   255  001001  41                 	db	65	;'A'
   256  001002  54                 	db	84	;'T'
   257  001003  2B                 	db	43
   258  001004  55                 	db	85	;'U'
   259  001005  41                 	db	65	;'A'
   260  001006  52                 	db	82	;'R'
   261  001007  54                 	db	84	;'T'
   262  001008  3A                 	db	58	;':'
   263  001009  39                 	db	57	;'9'
   264  00100A  36                 	db	54	;'6'
   265  00100B  30                 	db	48	;'0'
   266  00100C  30                 	db	48	;'0'
   267  00100D  2C                 	db	44
   268  00100E  30                 	db	48	;'0'
   269  00100F  2C                 	db	44
   270  001010  30                 	db	48	;'0'
   271  001011  0D                 	db	13
   272  001012  0A                 	db	10
   273  001013  00                 	db	0
   274  001014  41                 	db	65	;'A'
   275  001015  54                 	db	84	;'T'
   276  001016  2B                 	db	43
   277  001017  52                 	db	82	;'R'
   278  001018  4E                 	db	78	;'N'
   279  001019  41                 	db	65	;'A'
   280  00101A  4D                 	db	77	;'M'
   281  00101B  45                 	db	69	;'E'
   282  00101C  3A                 	db	58	;':'
   283  00101D  52                 	db	82	;'R'
   284  00101E  6F                 	db	111	;'o'
   285  00101F  62                 	db	98	;'b'
   286  001020  6F                 	db	111	;'o'
   287  001021  74                 	db	116	;'t'
   288  001022  0D                 	db	13
   289  001023  0A                 	db	10
   290  001024  00                 	db	0
   291  001025                     STR_11:
   292  001025  20                 	db	32
   293  001026  20                 	db	32
   294  001027  20                 	db	32
   295  001028  20                 	db	32
   296  001029  20                 	db	32
   297  00102A  20                 	db	32
   298  00102B  20                 	db	32
   299  00102C  20                 	db	32
   300  00102D  20                 	db	32
   301  00102E  20                 	db	32
   302  00102F  20                 	db	32
   303  001030  20                 	db	32
   304  001031  20                 	db	32
   305  001032  20                 	db	32
   306  001033  00                 	db	0
   307  001034  41                 	db	65	;'A'
   308  001035  54                 	db	84	;'T'
   309  001036  2B                 	db	43
   310  001037  50                 	db	80	;'P'
   311  001038  53                 	db	83	;'S'
   312  001039  57                 	db	87	;'W'
   313  00103A  44                 	db	68	;'D'
   314  00103B  3A                 	db	58	;':'
   315  00103C  31                 	db	49	;'1'
   316  00103D  32                 	db	50	;'2'
   317  00103E  33                 	db	51	;'3'
   318  00103F  34                 	db	52	;'4'
   319  001040  0D                 	db	13
   320  001041  0A                 	db	10
   321  001042  00                 	db	0
   322  001043  41                 	db	65	;'A'
   323  001044  54                 	db	84	;'T'
   324  001045  2B                 	db	43
   325  001046  52                 	db	82	;'R'
   326  001047  4F                 	db	79	;'O'
   327  001048  4C                 	db	76	;'L'
   328  001049  45                 	db	69	;'E'
   329  00104A  3A                 	db	58	;':'
   330  00104B  30                 	db	48	;'0'
   331  00104C  0D                 	db	13
   332  00104D  0A                 	db	10
   333  00104E  00                 	db	0
   334  00104F                     STR_14:
   335  00104F  68                 	db	104	;'h'
   336  001050  75                 	db	117	;'u'
   337  001051  6D                 	db	109	;'m'
   338  001052  65                 	db	101	;'e'
   339  001053  3A                 	db	58	;':'
   340  001054  00                 	db	0
   341  001055                     STR_16:
   342  001055  74                 	db	116	;'t'
   343  001056  65                 	db	101	;'e'
   344  001057  6D                 	db	109	;'m'
   345  001058  70                 	db	112	;'p'
   346  001059  3A                 	db	58	;':'
   347  00105A  00                 	db	0
   348  00105B                     STR_13:
   349  00105B  2D                 	db	45
   350  00105C  3E                 	db	62	;'>'
   351  00105D  20                 	db	32
   352  00105E  00                 	db	0
   353  00105F                     STR_9:
   354  00105F  25                 	db	37
   355  001060  66                 	db	102	;'f'
   356  001061  00                 	db	0
   357  001062                     STR_5:
   358  001062  25                 	db	37
   359  001063  69                 	db	105	;'i'
   360  001064  00                 	db	0
   361  001065                     STR_15:
   362  001065  2E                 	db	46
   363  001066  00                 	db	0
   364  001067                     STR_19:
   365  001067  30                 	db	48	;'0'
   366  001068  00                 	db	0
   367  001069                     STR_18:
   368  001069  31                 	db	49	;'1'
   369  00106A  00                 	db	0
   370  00106B  00                 	db	0	; dummy byte at the end
   371  0000                     
   372                           ; #config settings
   373                           
   374                           	psect	cinit
   375  001EA2                     __pcinit:
   376                           	callstack 0
   377  001EA2                     start_initialization:
   378                           	callstack 0
   379  001EA2                     __initialization:
   380                           	callstack 0
   381                           
   382                           ; Initialize objects allocated to BANK0 (50 bytes)
   383                           ; load TBLPTR registers with __pidataBANK0
   384  001EA2  0E60               	movlw	low __pidataBANK0
   385  001EA4  6EF6               	movwf	tblptrl,c
   386  001EA6  0E20               	movlw	high __pidataBANK0
   387  001EA8  6EF7               	movwf	tblptrh,c
   388  001EAA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   389  001EAC  6EF8               	movwf	tblptru,c
   390  001EAE  EE00  F080         	lfsr	0,__pdataBANK0
   391  001EB2  EE10 F032          	lfsr	1,50
   392  001EB6                     copy_data0:
   393  001EB6  0009               	tblrd		*+
   394  001EB8  CFF5 FFEE          	movff	tablat,postinc0
   395  001EBC  50E5               	movf	postdec1,w,c
   396  001EBE  50E1               	movf	fsr1l,w,c
   397  001EC0  E1FA               	bnz	copy_data0
   398                           
   399                           ; Initialize objects allocated to COMRAM (20 bytes)
   400                           ; load TBLPTR registers with __pidataCOMRAM
   401  001EC2  0E86               	movlw	low __pidataCOMRAM
   402  001EC4  6EF6               	movwf	tblptrl,c
   403  001EC6  0E21               	movlw	high __pidataCOMRAM
   404  001EC8  6EF7               	movwf	tblptrh,c
   405  001ECA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   406  001ECC  6EF8               	movwf	tblptru,c
   407  001ECE  EE00  F052         	lfsr	0,__pdataCOMRAM
   408  001ED2  EE10 F014          	lfsr	1,20
   409  001ED6                     copy_data1:
   410  001ED6  0009               	tblrd		*+
   411  001ED8  CFF5 FFEE          	movff	tablat,postinc0
   412  001EDC  50E5               	movf	postdec1,w,c
   413  001EDE  50E1               	movf	fsr1l,w,c
   414  001EE0  E1FA               	bnz	copy_data1
   415                           
   416                           ; Clear objects allocated to BANK0 (15 bytes)
   417  001EE2  EE00  F0C9         	lfsr	0,__pbssBANK0
   418  001EE6  0E0F               	movlw	15
   419  001EE8                     clear_0:
   420  001EE8  6AEE               	clrf	postinc0,c
   421  001EEA  06E8               	decf	wreg,f,c
   422  001EEC  E1FD               	bnz	clear_0
   423                           
   424                           ; Clear objects allocated to COMRAM (44 bytes)
   425  001EEE  EE00  F001         	lfsr	0,__pbssCOMRAM
   426  001EF2  0E2C               	movlw	44
   427  001EF4                     clear_1:
   428  001EF4  6AEE               	clrf	postinc0,c
   429  001EF6  06E8               	decf	wreg,f,c
   430  001EF8  E1FD               	bnz	clear_1
   431  001EFA                     end_of_initialization:
   432                           	callstack 0
   433  001EFA                     __end_of__initialization:
   434                           	callstack 0
   435  001EFA  9066               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436  001EFC  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437  001EFE  0100               	movlb	0
   438  001F00  EF36  F008         	goto	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMRAM
   441  000001                     __pbssCOMRAM:
   442                           	callstack 0
   443  000001                     _preloaded_val:
   444                           	callstack 0
   445  000001                     	ds	2
   446  000003                     _tmr0_InterruptHandler:
   447                           	callstack 0
   448  000003                     	ds	2
   449  000005                     _RB7_InterruptHandler_LOW:
   450                           	callstack 0
   451  000005                     	ds	2
   452  000007                     _RB7_InterruptHandler_HIGH:
   453                           	callstack 0
   454  000007                     	ds	2
   455  000009                     _RB6_InterruptHandler_LOW:
   456                           	callstack 0
   457  000009                     	ds	2
   458  00000B                     _RB6_InterruptHandler_HIGH:
   459                           	callstack 0
   460  00000B                     	ds	2
   461  00000D                     _RB5_InterruptHandler_LOW:
   462                           	callstack 0
   463  00000D                     	ds	2
   464  00000F                     _RB5_InterruptHandler_HIGH:
   465                           	callstack 0
   466  00000F                     	ds	2
   467  000011                     _RB4_InterruptHandler_LOW:
   468                           	callstack 0
   469  000011                     	ds	2
   470  000013                     _RB4_InterruptHandler_HIGH:
   471                           	callstack 0
   472  000013                     	ds	2
   473  000015                     _INT2_InterruptHandler:
   474                           	callstack 0
   475  000015                     	ds	2
   476  000017                     _INT1_InterruptHandler:
   477                           	callstack 0
   478  000017                     	ds	2
   479  000019                     _INT0_InterruptHandler:
   480                           	callstack 0
   481  000019                     	ds	2
   482  00001B                     _I2C_Report_Write_Collision:
   483                           	callstack 0
   484  00001B                     	ds	2
   485  00001D                     _I2C_Report_Receive_Overflow:
   486                           	callstack 0
   487  00001D                     	ds	2
   488  00001F                     _I2C_DefaultInterruptHandler:
   489                           	callstack 0
   490  00001F                     	ds	2
   491  000021                     _eusart_frameerr_CallBack:
   492                           	callstack 0
   493  000021                     	ds	2
   494  000023                     _eusart_overrunerr_CallBack:
   495                           	callstack 0
   496  000023                     	ds	2
   497  000025                     _eusart_Rx_InterruptHandler:
   498                           	callstack 0
   499  000025                     	ds	2
   500  000027                     _Movement_State:
   501                           	callstack 0
   502  000027                     	ds	1
   503  000028                     _Checksum:
   504                           	callstack 0
   505  000028                     	ds	1
   506  000029                     _T_Integral:
   507                           	callstack 0
   508  000029                     	ds	1
   509  00002A                     _T_Decimal:
   510                           	callstack 0
   511  00002A                     	ds	1
   512  00002B                     _RH_Integral:
   513                           	callstack 0
   514  00002B                     	ds	1
   515  00002C                     _RH_Decimal:
   516                           	callstack 0
   517  00002C                     	ds	1
   518                           
   519                           	psect	dataCOMRAM
   520  000052                     __pdataCOMRAM:
   521                           	callstack 0
   522  000052                     _flags:
   523                           	callstack 0
   524  000052                     	ds	1
   525  000053                     _lcd1:
   526                           	callstack 0
   527  000053                     	ds	6
   528  000059                     _Timer0:
   529                           	callstack 0
   530  000059                     	ds	6
   531  00005F                     _W4_Motor_Control:
   532                           	callstack 0
   533  00005F                     	ds	2
   534  000061                     _W3_Motor_Control:
   535                           	callstack 0
   536  000061                     	ds	2
   537  000063                     _W1_W5_W2_W6_Motor_Control:
   538                           	callstack 0
   539  000063                     	ds	2
   540  000065                     _pinc0:
   541                           	callstack 0
   542  000065                     	ds	1
   543                           
   544                           	psect	bssBANK0
   545  0000C9                     __pbssBANK0:
   546                           	callstack 0
   547  0000C9                     	ds	9
   548  0000D2                     	ds	6
   549                           
   550                           	psect	dataBANK0
   551  000080                     __pdataBANK0:
   552                           	callstack 0
   553  000080                     _port_registers:
   554                           	callstack 0
   555  000080                     	ds	10
   556  00008A                     _lat_registers:
   557                           	callstack 0
   558  00008A                     	ds	10
   559  000094                     _tris_registers:
   560                           	callstack 0
   561  000094                     	ds	10
   562  00009E                     _CCP2_Obj:
   563                           	callstack 0
   564  00009E                     	ds	10
   565  0000A8                     _CCP1_Obj:
   566                           	callstack 0
   567  0000A8                     	ds	10
   568                           
   569                           	psect	cstackBANK0
   570  0000B2                     __pcstackBANK0:
   571                           	callstack 0
   572  0000B2                     GPIO_Pin_Initialize@ERRORSTATUS:
   573                           	callstack 0
   574  0000B2                     lcd_send_4bits@lcd:
   575                           	callstack 0
   576  0000B2                     Get_Temp_HUM@RH_Decimal:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x0
   580  0000B2                     	ds	2
   581  0000B4                     lcd_send_4bits@data_command:
   582                           	callstack 0
   583  0000B4                     Get_Temp_HUM@RH_Integral:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  0000B4                     	ds	1
   588  0000B5                     lcd_4bit_send_command@lcd:
   589                           	callstack 0
   590  0000B5                     lcd_4bit_send_char_data@lcd:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x3
   594  0000B5                     	ds	1
   595  0000B6                     Get_Temp_HUM@T_Decimal:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x4
   599  0000B6                     	ds	1
   600  0000B7                     lcd_4bit_send_command@command:
   601                           	callstack 0
   602  0000B7                     lcd_4bit_send_char_data@data:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x5
   606  0000B7                     	ds	1
   607  0000B8                     lcd_4bit_send_command@ERRORSTATUS:
   608                           	callstack 0
   609  0000B8                     Get_Temp_HUM@T_Integral:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613  0000B8                     	ds	1
   614  0000B9                     lcd_4bit_initialize@lcd:
   615                           	callstack 0
   616  0000B9                     lcd_4bits_set_courser@lcd:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x7
   620  0000B9                     	ds	1
   621  0000BA                     Get_Temp_HUM@Checksum:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x8
   625  0000BA                     	ds	1
   626  0000BB                     ??_lcd_4bit_initialize:
   627  0000BB                     lcd_4bits_set_courser@row:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x9
   631  0000BB                     	ds	1
   632  0000BC                     lcd_4bits_set_courser@colum:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0xA
   636  0000BC                     	ds	1
   637  0000BD                     ??_lcd_4bits_set_courser:
   638  0000BD                     lcd_4bit_initialize@pin_lcd_counter:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0xB
   642  0000BD                     	ds	3
   643  0000C0                     lcd_4bit_send_char_data_pos@lcd:
   644                           	callstack 0
   645  0000C0                     lcd_4bit_send_string_data_pos@lcd:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0xE
   649  0000C0                     	ds	2
   650  0000C2                     lcd_4bit_send_char_data_pos@row:
   651                           	callstack 0
   652  0000C2                     lcd_4bit_send_string_data_pos@row:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x10
   656  0000C2                     	ds	1
   657  0000C3                     lcd_4bit_send_char_data_pos@colum:
   658                           	callstack 0
   659  0000C3                     lcd_4bit_send_string_data_pos@colum:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x11
   663  0000C3                     	ds	1
   664  0000C4                     lcd_4bit_send_char_data_pos@data:
   665                           	callstack 0
   666  0000C4                     lcd_4bit_send_string_data_pos@str:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x12
   670  0000C4                     	ds	3
   671  0000C7                     ??_main:
   672                           
   673                           ; 1 bytes @ 0x15
   674  0000C7                     	ds	2
   675                           
   676                           	psect	cstackCOMRAM
   677  00002D                     __pcstackCOMRAM:
   678                           	callstack 0
   679  00002D                     i2GPIO_Pin_Write_Logic@_pin_config:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x0
   683  00002D                     	ds	2
   684  00002F                     i2GPIO_Pin_Write_Logic@logic:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x2
   688  00002F                     	ds	1
   689  000030                     ??i2_GPIO_Pin_Write_Logic:
   690                           
   691                           ; 1 bytes @ 0x3
   692  000030                     	ds	7
   693  000037                     ECU_DC_Motor_Stop@dc_motor:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0xA
   697  000037                     	ds	2
   698  000039                     
   699                           ; 1 bytes @ 0xC
   700  000039                     	ds	1
   701  00003A                     ??_TMR0_ISR:
   702  00003A                     
   703                           ; 1 bytes @ 0xD
   704  00003A                     	ds	2
   705  00003C                     ??_InterruptManagerHigh:
   706                           
   707                           ; 1 bytes @ 0xF
   708  00003C                     	ds	6
   709  000042                     RB4_ISR@Handler_Select:
   710                           	callstack 0
   711  000042                     RB5_ISR@Handler_Select:
   712                           	callstack 0
   713  000042                     RB6_ISR@Handler_Select:
   714                           	callstack 0
   715  000042                     RB7_ISR@Handler_Select:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x15
   719  000042                     	ds	1
   720  000043                     ??_InterruptManagerLow:
   721                           
   722                           ; 1 bytes @ 0x16
   723  000043                     	ds	3
   724  000046                     ??_DHT11_Start:
   725  000046                     ?___awdiv:
   726                           	callstack 0
   727  000046                     ?___awmod:
   728                           	callstack 0
   729  000046                     GPIO_Pin_Direction_Initialize@_pin_config:
   730                           	callstack 0
   731  000046                     GPIO_Pin_Write_Logic@_pin_config:
   732                           	callstack 0
   733  000046                     GPIO_Pin_Toggle_Logic@_pin_config:
   734                           	callstack 0
   735  000046                     DHT11_Read_Data@data:
   736                           	callstack 0
   737  000046                     ___awdiv@dividend:
   738                           	callstack 0
   739  000046                     ___awmod@dividend:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x19
   743  000046                     	ds	2
   744  000048                     ??_DHT11_Read_Data:
   745  000048                     ??_GPIO_Pin_Direction_Initialize:
   746  000048                     ??_GPIO_Pin_Toggle_Logic:
   747  000048                     GPIO_Pin_Write_Logic@logic:
   748                           	callstack 0
   749  000048                     ___awdiv@divisor:
   750                           	callstack 0
   751  000048                     ___awmod@divisor:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1B
   755  000048                     	ds	1
   756  000049                     ??_GPIO_Pin_Write_Logic:
   757  000049                     DHT11_Read_Data@i:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x1C
   761  000049                     	ds	1
   762  00004A                     ___awdiv@counter:
   763                           	callstack 0
   764  00004A                     ___awmod@counter:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x1D
   768  00004A                     	ds	1
   769  00004B                     ___awdiv@sign:
   770                           	callstack 0
   771  00004B                     ___awmod@sign:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x1E
   775  00004B                     	ds	1
   776  00004C                     ___awdiv@quotient:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1F
   780  00004C                     	ds	2
   781  00004E                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x21
   785  00004E                     	ds	1
   786  00004F                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x22
   790  00004F                     	ds	1
   791  000050                     lcd_4bits_send_enable_signal@lcd:
   792                           	callstack 0
   793  000050                     GPIO_Pin_Initialize@_pin_config:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x23
   797  000050                     	ds	2
   798  000052                     
   799                           ; 1 bytes @ 0x25
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   802 ;;
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 57 in file "application.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2  1736[None  ] int 
   812 ;; Registers used:
   813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;Total ram usage:        2 bytes
   824 ;; Hardware stack levels required when called:   12
   825 ;; This function calls:
   826 ;;		_GPIO_Pin_Toggle_Logic
   827 ;;		_GPIO_Pin_Write_Logic
   828 ;;		_Get_Temp_HUM
   829 ;;		___awdiv
   830 ;;		___awmod
   831 ;;		_application_intialize
   832 ;;		_lcd_4bit_send_char_data_pos
   833 ;;		_lcd_4bit_send_string_data_pos
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text0
   840  00106C                     __ptext0:
   841                           	callstack 0
   842  00106C                     _main:
   843                           	callstack 19
   844  00106C                     
   845                           ;application.c: 60:     application_intialize();
   846  00106C  EC81  F010         	call	_application_intialize	;wreg free
   847  001070                     
   848                           ;application.c: 61:     lcd_4bit_send_string_data_pos(&lcd1,1,1,"              ");
   849  001070  0E53               	movlw	low _lcd1
   850  001072  0100               	movlb	0	; () banked
   851  001074  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   852  001076  0E00               	movlw	high _lcd1
   853  001078  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   854  00107A  0E01               	movlw	1
   855  00107C  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   856  00107E  0E01               	movlw	1
   857  001080  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   858  001082  0E25               	movlw	low STR_11
   859  001084  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   860  001086  0E10               	movlw	high STR_11
   861  001088  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   862  00108A  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
   863  00108E                     
   864                           ;application.c: 62:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"              ");
   865  00108E  0E53               	movlw	low _lcd1
   866  001090  0100               	movlb	0	; () banked
   867  001092  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   868  001094  0E00               	movlw	high _lcd1
   869  001096  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   870  001098  0E02               	movlw	2
   871  00109A  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   872  00109C  0E01               	movlw	1
   873  00109E  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   874  0010A0  0E25               	movlw	low STR_11
   875  0010A2  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   876  0010A4  0E10               	movlw	high STR_11
   877  0010A6  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   878  0010A8  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
   879  0010AC                     
   880                           ;application.c: 63:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-> ");
   881  0010AC  0E53               	movlw	low _lcd1
   882  0010AE  0100               	movlb	0	; () banked
   883  0010B0  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   884  0010B2  0E00               	movlw	high _lcd1
   885  0010B4  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   886  0010B6  0E02               	movlw	2
   887  0010B8  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   888  0010BA  0E01               	movlw	1
   889  0010BC  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   890  0010BE  0E5B               	movlw	low STR_13
   891  0010C0  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   892  0010C2  0E10               	movlw	high STR_13
   893  0010C4  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   894  0010C6  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
   895  0010CA                     
   896                           ;application.c: 64:     GPIO_Pin_Write_Logic(&pinc0,GPIO_HIGH);
   897  0010CA  0E65               	movlw	low _pinc0
   898  0010CC  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
   899  0010CE  0E00               	movlw	high _pinc0
   900  0010D0  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
   901  0010D2  0E01               	movlw	1
   902  0010D4  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   903  0010D6  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
   904  0010DA                     
   905                           ;application.c: 65:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   906  0010DA  0E0B               	movlw	11
   907  0010DC  0100               	movlb	0	; () banked
   908  0010DE  6FC8               	movwf	(??_main+1)& (0+255),b
   909  0010E0  0E26               	movlw	38
   910  0010E2  6FC7               	movwf	??_main& (0+255),b
   911  0010E4  0E5D               	movlw	93
   912  0010E6                     u7917:
   913  0010E6  2EE8               	decfsz	wreg,f,c
   914  0010E8  D7FE               	bra	u7917
   915  0010EA  2FC7               	decfsz	??_main& (0+255),f,b
   916  0010EC  D7FC               	bra	u7917
   917  0010EE  2FC8               	decfsz	(??_main+1)& (0+255),f,b
   918  0010F0  D7FA               	bra	u7917
   919  0010F2  D000               	nop2	
   920  0010F4                     l8378:
   921                           
   922                           ;application.c: 67:     {;application.c: 68:         GPIO_Pin_Toggle_Logic(&pinc0);
   923  0010F4  0E65               	movlw	low _pinc0
   924  0010F6  6E46               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
   925  0010F8  0E00               	movlw	high _pinc0
   926  0010FA  6E47               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
   927  0010FC  ECE6  F00E         	call	_GPIO_Pin_Toggle_Logic	;wreg free
   928  001100                     
   929                           ;application.c: 69:         _delay((unsigned long)((500)*(8000000/4000.0)));
   930  001100  0E06               	movlw	6
   931  001102  0100               	movlb	0	; () banked
   932  001104  6FC8               	movwf	(??_main+1)& (0+255),b
   933  001106  0E13               	movlw	19
   934  001108  6FC7               	movwf	??_main& (0+255),b
   935  00110A  0EAD               	movlw	173
   936  00110C                     u7927:
   937  00110C  2EE8               	decfsz	wreg,f,c
   938  00110E  D7FE               	bra	u7927
   939  001110  2FC7               	decfsz	??_main& (0+255),f,b
   940  001112  D7FC               	bra	u7927
   941  001114  2FC8               	decfsz	(??_main+1)& (0+255),f,b
   942  001116  D7FA               	bra	u7927
   943  001118  D000               	nop2	
   944  00111A                     
   945                           ;application.c: 70:         Get_Temp_HUM(& RH_Decimal,& RH_Integral,& T_Decimal,& T_Inte
      +                          gral,& Checksum);
   946  00111A  0E2C               	movlw	low _RH_Decimal
   947  00111C  0100               	movlb	0	; () banked
   948  00111E  6FB2               	movwf	Get_Temp_HUM@RH_Decimal& (0+255),b
   949  001120  0E00               	movlw	high _RH_Decimal
   950  001122  6FB3               	movwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),b
   951  001124  0E2B               	movlw	low _RH_Integral
   952  001126  6FB4               	movwf	Get_Temp_HUM@RH_Integral& (0+255),b
   953  001128  0E00               	movlw	high _RH_Integral
   954  00112A  6FB5               	movwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),b
   955  00112C  0E2A               	movlw	low _T_Decimal
   956  00112E  6FB6               	movwf	Get_Temp_HUM@T_Decimal& (0+255),b
   957  001130  0E00               	movlw	high _T_Decimal
   958  001132  6FB7               	movwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),b
   959  001134  0E29               	movlw	low _T_Integral
   960  001136  6FB8               	movwf	Get_Temp_HUM@T_Integral& (0+255),b
   961  001138  0E00               	movlw	high _T_Integral
   962  00113A  6FB9               	movwf	(Get_Temp_HUM@T_Integral+1)& (0+255),b
   963  00113C  0E28               	movlw	low _Checksum
   964  00113E  6FBA               	movwf	Get_Temp_HUM@Checksum& (0+255),b
   965  001140  0E00               	movlw	high _Checksum
   966  001142  6FBB               	movwf	(Get_Temp_HUM@Checksum+1)& (0+255),b
   967  001144  EC91  F00D         	call	_Get_Temp_HUM	;wreg free
   968  001148                     
   969                           ;application.c: 72:        lcd_4bit_send_string_data_pos(&lcd1,1,1,"hume:");
   970  001148  0E53               	movlw	low _lcd1
   971  00114A  0100               	movlb	0	; () banked
   972  00114C  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   973  00114E  0E00               	movlw	high _lcd1
   974  001150  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   975  001152  0E01               	movlw	1
   976  001154  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   977  001156  0E01               	movlw	1
   978  001158  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   979  00115A  0E4F               	movlw	low STR_14
   980  00115C  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   981  00115E  0E10               	movlw	high STR_14
   982  001160  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   983  001162  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
   984  001166                     
   985                           ;application.c: 73:        lcd_4bit_send_char_data_pos(&lcd1,1,6,48+RH_Decimal/10);
   986  001166  0E53               	movlw	low _lcd1
   987  001168  0100               	movlb	0	; () banked
   988  00116A  6FC0               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
   989  00116C  0E00               	movlw	high _lcd1
   990  00116E  6FC1               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
   991  001170  0E01               	movlw	1
   992  001172  6FC2               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
   993  001174  0E06               	movlw	6
   994  001176  6FC3               	movwf	lcd_4bit_send_char_data_pos@colum& (0+255),b
   995  001178  C02C  F046         	movff	_RH_Decimal,___awdiv@dividend
   996  00117C  6A47               	clrf	(___awdiv@dividend+1)^0,c
   997  00117E  0E00               	movlw	0
   998  001180  6E49               	movwf	(___awdiv@divisor+1)^0,c
   999  001182  0E0A               	movlw	10
  1000  001184  6E48               	movwf	___awdiv@divisor^0,c
  1001  001186  EC7E  F00C         	call	___awdiv	;wreg free
  1002  00118A  5046               	movf	?___awdiv^0,w,c
  1003  00118C  0F30               	addlw	48
  1004  00118E  0100               	movlb	0	; () banked
  1005  001190  6FC4               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
  1006  001192  ECF3  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1007  001196                     
  1008                           ;application.c: 74:        lcd_4bit_send_char_data_pos(&lcd1,1,7,48+RH_Decimal%10);
  1009  001196  0E53               	movlw	low _lcd1
  1010  001198  0100               	movlb	0	; () banked
  1011  00119A  6FC0               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
  1012  00119C  0E00               	movlw	high _lcd1
  1013  00119E  6FC1               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
  1014  0011A0  0E01               	movlw	1
  1015  0011A2  6FC2               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
  1016  0011A4  0E07               	movlw	7
  1017  0011A6  6FC3               	movwf	lcd_4bit_send_char_data_pos@colum& (0+255),b
  1018  0011A8  C02C  F046         	movff	_RH_Decimal,___awmod@dividend
  1019  0011AC  6A47               	clrf	(___awmod@dividend+1)^0,c
  1020  0011AE  0E00               	movlw	0
  1021  0011B0  6E49               	movwf	(___awmod@divisor+1)^0,c
  1022  0011B2  0E0A               	movlw	10
  1023  0011B4  6E48               	movwf	___awmod@divisor^0,c
  1024  0011B6  EC39  F00D         	call	___awmod	;wreg free
  1025  0011BA  5046               	movf	?___awmod^0,w,c
  1026  0011BC  0F30               	addlw	48
  1027  0011BE  0100               	movlb	0	; () banked
  1028  0011C0  6FC4               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
  1029  0011C2  ECF3  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1030  0011C6                     
  1031                           ;application.c: 75:        lcd_4bit_send_string_data_pos(&lcd1,1,8,".");
  1032  0011C6  0E53               	movlw	low _lcd1
  1033  0011C8  0100               	movlb	0	; () banked
  1034  0011CA  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1035  0011CC  0E00               	movlw	high _lcd1
  1036  0011CE  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1037  0011D0  0E01               	movlw	1
  1038  0011D2  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1039  0011D4  0E08               	movlw	8
  1040  0011D6  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1041  0011D8  0E65               	movlw	low STR_15
  1042  0011DA  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1043  0011DC  0E10               	movlw	high STR_15
  1044  0011DE  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1045  0011E0  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1046  0011E4                     
  1047                           ;application.c: 76:        lcd_4bit_send_char_data_pos(&lcd1,1,9,48+RH_Integral/10);
  1048  0011E4  0E53               	movlw	low _lcd1
  1049  0011E6  0100               	movlb	0	; () banked
  1050  0011E8  6FC0               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
  1051  0011EA  0E00               	movlw	high _lcd1
  1052  0011EC  6FC1               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
  1053  0011EE  0E01               	movlw	1
  1054  0011F0  6FC2               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
  1055  0011F2  0E09               	movlw	9
  1056  0011F4  6FC3               	movwf	lcd_4bit_send_char_data_pos@colum& (0+255),b
  1057  0011F6  C02B  F046         	movff	_RH_Integral,___awdiv@dividend
  1058  0011FA  6A47               	clrf	(___awdiv@dividend+1)^0,c
  1059  0011FC  0E00               	movlw	0
  1060  0011FE  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1061  001200  0E0A               	movlw	10
  1062  001202  6E48               	movwf	___awdiv@divisor^0,c
  1063  001204  EC7E  F00C         	call	___awdiv	;wreg free
  1064  001208  5046               	movf	?___awdiv^0,w,c
  1065  00120A  0F30               	addlw	48
  1066  00120C  0100               	movlb	0	; () banked
  1067  00120E  6FC4               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
  1068  001210  ECF3  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1069  001214                     
  1070                           ;application.c: 78:        lcd_4bit_send_string_data_pos(&lcd1,2,1,"temp:");
  1071  001214  0E53               	movlw	low _lcd1
  1072  001216  0100               	movlb	0	; () banked
  1073  001218  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1074  00121A  0E00               	movlw	high _lcd1
  1075  00121C  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1076  00121E  0E02               	movlw	2
  1077  001220  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1078  001222  0E01               	movlw	1
  1079  001224  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1080  001226  0E55               	movlw	low STR_16
  1081  001228  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1082  00122A  0E10               	movlw	high STR_16
  1083  00122C  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1084  00122E  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1085  001232                     
  1086                           ;application.c: 79:        lcd_4bit_send_char_data_pos(&lcd1,2,6,48+T_Decimal/10);
  1087  001232  0E53               	movlw	low _lcd1
  1088  001234  0100               	movlb	0	; () banked
  1089  001236  6FC0               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
  1090  001238  0E00               	movlw	high _lcd1
  1091  00123A  6FC1               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
  1092  00123C  0E02               	movlw	2
  1093  00123E  6FC2               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
  1094  001240  0E06               	movlw	6
  1095  001242  6FC3               	movwf	lcd_4bit_send_char_data_pos@colum& (0+255),b
  1096  001244  C02A  F046         	movff	_T_Decimal,___awdiv@dividend
  1097  001248  6A47               	clrf	(___awdiv@dividend+1)^0,c
  1098  00124A  0E00               	movlw	0
  1099  00124C  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1100  00124E  0E0A               	movlw	10
  1101  001250  6E48               	movwf	___awdiv@divisor^0,c
  1102  001252  EC7E  F00C         	call	___awdiv	;wreg free
  1103  001256  5046               	movf	?___awdiv^0,w,c
  1104  001258  0F30               	addlw	48
  1105  00125A  0100               	movlb	0	; () banked
  1106  00125C  6FC4               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
  1107  00125E  ECF3  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1108  001262                     
  1109                           ;application.c: 80:        lcd_4bit_send_char_data_pos(&lcd1,2,7,48+T_Decimal%10);
  1110  001262  0E53               	movlw	low _lcd1
  1111  001264  0100               	movlb	0	; () banked
  1112  001266  6FC0               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
  1113  001268  0E00               	movlw	high _lcd1
  1114  00126A  6FC1               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
  1115  00126C  0E02               	movlw	2
  1116  00126E  6FC2               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
  1117  001270  0E07               	movlw	7
  1118  001272  6FC3               	movwf	lcd_4bit_send_char_data_pos@colum& (0+255),b
  1119  001274  C02A  F046         	movff	_T_Decimal,___awmod@dividend
  1120  001278  6A47               	clrf	(___awmod@dividend+1)^0,c
  1121  00127A  0E00               	movlw	0
  1122  00127C  6E49               	movwf	(___awmod@divisor+1)^0,c
  1123  00127E  0E0A               	movlw	10
  1124  001280  6E48               	movwf	___awmod@divisor^0,c
  1125  001282  EC39  F00D         	call	___awmod	;wreg free
  1126  001286  5046               	movf	?___awmod^0,w,c
  1127  001288  0F30               	addlw	48
  1128  00128A  0100               	movlb	0	; () banked
  1129  00128C  6FC4               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
  1130  00128E  ECF3  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1131  001292                     
  1132                           ;application.c: 81:        lcd_4bit_send_string_data_pos(&lcd1,2,8,".");
  1133  001292  0E53               	movlw	low _lcd1
  1134  001294  0100               	movlb	0	; () banked
  1135  001296  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1136  001298  0E00               	movlw	high _lcd1
  1137  00129A  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1138  00129C  0E02               	movlw	2
  1139  00129E  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1140  0012A0  0E08               	movlw	8
  1141  0012A2  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1142  0012A4  0E65               	movlw	low STR_15
  1143  0012A6  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1144  0012A8  0E10               	movlw	high STR_15
  1145  0012AA  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1146  0012AC  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1147  0012B0                     
  1148                           ;application.c: 82:        lcd_4bit_send_char_data_pos(&lcd1,2,9,48+T_Integral/10);
  1149  0012B0  0E53               	movlw	low _lcd1
  1150  0012B2  0100               	movlb	0	; () banked
  1151  0012B4  6FC0               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
  1152  0012B6  0E00               	movlw	high _lcd1
  1153  0012B8  6FC1               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
  1154  0012BA  0E02               	movlw	2
  1155  0012BC  6FC2               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
  1156  0012BE  0E09               	movlw	9
  1157  0012C0  6FC3               	movwf	lcd_4bit_send_char_data_pos@colum& (0+255),b
  1158  0012C2  C029  F046         	movff	_T_Integral,___awdiv@dividend
  1159  0012C6  6A47               	clrf	(___awdiv@dividend+1)^0,c
  1160  0012C8  0E00               	movlw	0
  1161  0012CA  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1162  0012CC  0E0A               	movlw	10
  1163  0012CE  6E48               	movwf	___awdiv@divisor^0,c
  1164  0012D0  EC7E  F00C         	call	___awdiv	;wreg free
  1165  0012D4  5046               	movf	?___awdiv^0,w,c
  1166  0012D6  0F30               	addlw	48
  1167  0012D8  0100               	movlb	0	; () banked
  1168  0012DA  6FC4               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
  1169  0012DC  ECF3  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1170  0012E0                     
  1171                           ;application.c: 83:        if (Checksum==((RH_Decimal+RH_Integral+T_Decimal+T_Integral)&
      +                          0xff))
  1172  0012E0  502B               	movf	_RH_Integral^0,w,c
  1173  0012E2  C02C  F0C7         	movff	_RH_Decimal,??_main
  1174  0012E6  0100               	movlb	0	; () banked
  1175  0012E8  6BC8               	clrf	(??_main+1)& (0+255),b
  1176  0012EA  27C7               	addwf	??_main& (0+255),f,b
  1177  0012EC  0E00               	movlw	0
  1178  0012EE  23C8               	addwfc	(??_main+1)& (0+255),f,b
  1179  0012F0  502A               	movf	_T_Decimal^0,w,c
  1180  0012F2  27C7               	addwf	??_main& (0+255),f,b
  1181  0012F4  0E00               	movlw	0
  1182  0012F6  23C8               	addwfc	(??_main+1)& (0+255),f,b
  1183  0012F8  5029               	movf	_T_Integral^0,w,c
  1184  0012FA  27C7               	addwf	??_main& (0+255),f,b
  1185  0012FC  0E00               	movlw	0
  1186  0012FE  23C8               	addwfc	(??_main+1)& (0+255),f,b
  1187  001300  51C7               	movf	??_main& (0+255),w,b
  1188  001302  1828               	xorwf	_Checksum^0,w,c
  1189  001304  A4D8               	btfss	status,2,c
  1190  001306  EF87  F009         	goto	u7901
  1191  00130A  EF89  F009         	goto	u7900
  1192  00130E                     u7901:
  1193  00130E  EF99  F009         	goto	l8408
  1194  001312                     u7900:
  1195  001312                     
  1196                           ; BSR set to: 0
  1197                           ;application.c: 84:        {;application.c: 85:            lcd_4bit_send_string_data_pos
      +                          (&lcd1,2,13,"1");
  1198  001312  0E53               	movlw	low _lcd1
  1199  001314  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1200  001316  0E00               	movlw	high _lcd1
  1201  001318  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1202  00131A  0E02               	movlw	2
  1203  00131C  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1204  00131E  0E0D               	movlw	13
  1205  001320  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1206  001322  0E69               	movlw	low STR_18
  1207  001324  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1208  001326  0E10               	movlw	high STR_18
  1209  001328  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1210  00132A  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1211                           
  1212                           ;application.c: 86:        }
  1213  00132E  EF7A  F008         	goto	l8378
  1214  001332                     l8408:
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;application.c: 88:        {;application.c: 89:            lcd_4bit_send_string_data_pos
      +                          (&lcd1,2,13,"0");
  1218  001332  0E53               	movlw	low _lcd1
  1219  001334  6FC0               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1220  001336  0E00               	movlw	high _lcd1
  1221  001338  6FC1               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1222  00133A  0E02               	movlw	2
  1223  00133C  6FC2               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1224  00133E  0E0D               	movlw	13
  1225  001340  6FC3               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1226  001342  0E67               	movlw	low STR_19
  1227  001344  6FC4               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1228  001346  0E10               	movlw	high STR_19
  1229  001348  6FC5               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1230  00134A  EC2B  F00E         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1231  00134E  EF7A  F008         	goto	l8378
  1232  001352  EF43  F001         	goto	start
  1233  001356                     __end_of_main:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _lcd_4bit_send_string_data_pos *****************
  1237 ;; Defined at:
  1238 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1241 ;;		 -> lcd1(6), 
  1242 ;;  row             1   16[BANK0 ] unsigned char 
  1243 ;;  colum           1   17[BANK0 ] unsigned char 
  1244 ;;  str             2   18[BANK0 ] PTR unsigned char 
  1245 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(6), 
  1246 ;;		 -> STR_15(2), STR_14(6), STR_13(4), STR_12(15), 
  1247 ;;		 -> STR_11(15), 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  ERRORSTATUS     1    0        unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      unsigned char 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1259 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;Total ram usage:        7 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:   11
  1266 ;; This function calls:
  1267 ;;		_lcd_4bit_send_char_data
  1268 ;;		_lcd_4bits_set_courser
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text1
  1275  001C56                     __ptext1:
  1276                           	callstack 0
  1277  001C56                     _lcd_4bit_send_string_data_pos:
  1278                           	callstack 19
  1279  001C56                     
  1280                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
  1281  001C56  0100               	movlb	0	; () banked
  1282  001C58  51C0               	movf	lcd_4bit_send_string_data_pos@lcd& (0+255),w,b
  1283  001C5A  11C1               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),w,b
  1284  001C5C  B4D8               	btfsc	status,2,c
  1285  001C5E  EF33  F00E         	goto	u7341
  1286  001C62  EF35  F00E         	goto	u7340
  1287  001C66                     u7341:
  1288  001C66  EF3E  F00E         	goto	l7810
  1289  001C6A                     u7340:
  1290  001C6A                     
  1291                           ; BSR set to: 0
  1292  001C6A  51C4               	movf	lcd_4bit_send_string_data_pos@str& (0+255),w,b
  1293  001C6C  11C5               	iorwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),w,b
  1294  001C6E  A4D8               	btfss	status,2,c
  1295  001C70  EF3C  F00E         	goto	u7351
  1296  001C74  EF3E  F00E         	goto	u7350
  1297  001C78                     u7351:
  1298  001C78  EF40  F00E         	goto	l7812
  1299  001C7C                     u7350:
  1300  001C7C                     l7810:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
  1304  001C7C  EF6C  F00E         	goto	l155
  1305  001C80                     l7812:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
  1309  001C80  C0C0  F0B9         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
  1310  001C84  C0C1  F0BA         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  1311  001C88  C0C2  F0BB         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
  1312  001C8C  C0C3  F0BC         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
  1313  001C90  ECE0  F00C         	call	_lcd_4bits_set_courser	;wreg free
  1314                           
  1315                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  1316  001C94  EF5D  F00E         	goto	l7818
  1317  001C98                     l7814:
  1318                           
  1319                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
  1320  001C98  C0C0  F0B5         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1321  001C9C  C0C1  F0B6         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1322  001CA0  C0C4  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  1323  001CA4  C0C5  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  1324  001CA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1325  001CA8  6AF8               	clrf	tblptru,c
  1326  001CAA                     	endif
  1327  001CAA                     	if	0	;tblptru may be non-zero
  1328  001CAA                     	endif
  1329  001CAA  0008               	tblrd		*
  1330  001CAC  CFF5 F0B7          	movff	tablat,lcd_4bit_send_char_data@data
  1331  001CB0  EC1E  F00F         	call	_lcd_4bit_send_char_data	;wreg free
  1332  001CB4  0100               	movlb	0	; () banked
  1333  001CB6  4BC4               	infsnz	lcd_4bit_send_string_data_pos@str& (0+255),f,b
  1334  001CB8  2BC5               	incf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),f,b
  1335  001CBA                     l7818:
  1336                           
  1337                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  1338  001CBA  C0C4  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  1339  001CBE  C0C5  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  1340  001CC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1341  001CC2  6AF8               	clrf	tblptru,c
  1342  001CC4                     	endif
  1343  001CC4                     	if	0	;tblptru may be non-zero
  1344  001CC4                     	endif
  1345  001CC4  0008               	tblrd		*
  1346  001CC6  50F5               	movf	tablat,w,c
  1347  001CC8  0900               	iorlw	0
  1348  001CCA  A4D8               	btfss	status,2,c
  1349  001CCC  EF6A  F00E         	goto	u7361
  1350  001CD0  EF6C  F00E         	goto	u7360
  1351  001CD4                     u7361:
  1352  001CD4  EF4C  F00E         	goto	l7814
  1353  001CD8                     u7360:
  1354  001CD8                     l155:
  1355  001CD8  0012               	return		;funcret
  1356  001CDA                     __end_of_lcd_4bit_send_string_data_pos:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1360 ;; Defined at:
  1361 ;;		line 117 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1364 ;;		 -> lcd1(6), 
  1365 ;;  row             1   16[BANK0 ] unsigned char 
  1366 ;;  colum           1   17[BANK0 ] unsigned char 
  1367 ;;  data            1   18[BANK0 ] unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  ERRORSTATUS     1    0        unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      unsigned char 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:        6 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:   11
  1386 ;; This function calls:
  1387 ;;		_lcd_4bit_send_char_data
  1388 ;;		_lcd_4bits_set_courser
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;;		_lcd_4bit_send_custom_char
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text2
  1396  001FE6                     __ptext2:
  1397                           	callstack 0
  1398  001FE6                     _lcd_4bit_send_char_data_pos:
  1399                           	callstack 19
  1400  001FE6                     
  1401                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 120:     if ( ((void*)0)==lcd)
  1402  001FE6  0100               	movlb	0	; () banked
  1403  001FE8  51C0               	movf	lcd_4bit_send_char_data_pos@lcd& (0+255),w,b
  1404  001FEA  11C1               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),w,b
  1405  001FEC  A4D8               	btfss	status,2,c
  1406  001FEE  EFFB  F00F         	goto	u7331
  1407  001FF2  EFFD  F00F         	goto	u7330
  1408  001FF6                     u7331:
  1409  001FF6  EFFF  F00F         	goto	l7800
  1410  001FFA                     u7330:
  1411  001FFA                     
  1412                           ; BSR set to: 0
  1413                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 123:     }
  1414  001FFA  EF11  F010         	goto	l135
  1415  001FFE                     l7800:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 125:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 12
      +                          6:        lcd_4bits_set_courser(lcd,row,colum);
  1419  001FFE  C0C0  F0B9         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bits_set_courser@lcd
  1420  002002  C0C1  F0BA         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  1421  002006  C0C2  F0BB         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bits_set_courser@row
  1422  00200A  C0C3  F0BC         	movff	lcd_4bit_send_char_data_pos@colum,lcd_4bits_set_courser@colum
  1423  00200E  ECE0  F00C         	call	_lcd_4bits_set_courser	;wreg free
  1424                           
  1425                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 127:        lcd_4bit_send_char_data(lcd,data);
  1426  002012  C0C0  F0B5         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1427  002016  C0C1  F0B6         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1428  00201A  C0C4  F0B7         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1429  00201E  EC1E  F00F         	call	_lcd_4bit_send_char_data	;wreg free
  1430  002022                     l135:
  1431  002022  0012               	return		;funcret
  1432  002024                     __end_of_lcd_4bit_send_char_data_pos:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _lcd_4bits_set_courser *****************
  1436 ;; Defined at:
  1437 ;;		line 591 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  lcd             2    7[BANK0 ] PTR const struct .
  1440 ;;		 -> lcd1(6), 
  1441 ;;  row             1    9[BANK0 ] unsigned char 
  1442 ;;  colum           1   10[BANK0 ] unsigned char 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  ERRORSTATUS     1    0        unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        7 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:   10
  1461 ;; This function calls:
  1462 ;;		_lcd_4bit_send_command
  1463 ;; This function is called by:
  1464 ;;		_lcd_4bit_send_char_data_pos
  1465 ;;		_lcd_4bit_send_string_data_pos
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text3
  1470  0019C0                     __ptext3:
  1471                           	callstack 0
  1472  0019C0                     _lcd_4bits_set_courser:
  1473                           	callstack 19
  1474  0019C0                     
  1475                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 594:         if ( ((void*)0)==lcd)
  1476  0019C0  0100               	movlb	0	; () banked
  1477  0019C2  51B9               	movf	lcd_4bits_set_courser@lcd& (0+255),w,b
  1478  0019C4  11BA               	iorwf	(lcd_4bits_set_courser@lcd+1)& (0+255),w,b
  1479  0019C6  A4D8               	btfss	status,2,c
  1480  0019C8  EFE8  F00C         	goto	u7251
  1481  0019CC  EFEA  F00C         	goto	u7250
  1482  0019D0                     u7251:
  1483  0019D0  EFEC  F00C         	goto	l7706
  1484  0019D4                     u7250:
  1485  0019D4                     
  1486                           ; BSR set to: 0
  1487                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 597:     }
  1488  0019D4  EF38  F00D         	goto	l281
  1489  0019D8                     l7706:
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 599:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 60
      +                          0:             colum--;
  1493  0019D8  07BC               	decf	lcd_4bits_set_courser@colum& (0+255),f,b
  1494                           
  1495                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 601:             switch (row)
  1496  0019DA  EF1B  F00D         	goto	l7718
  1497  0019DE                     l7708:
  1498                           
  1499                           ; BSR set to: 0
  1500  0019DE  C0B9  F0B5         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1501  0019E2  C0BA  F0B6         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1502  0019E6  51BC               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1503  0019E8  0F80               	addlw	128
  1504  0019EA  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1505  0019EC  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1506  0019F0  EF38  F00D         	goto	l281
  1507  0019F4                     l7710:
  1508                           
  1509                           ; BSR set to: 0
  1510  0019F4  C0B9  F0B5         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1511  0019F8  C0BA  F0B6         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1512  0019FC  51BC               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1513  0019FE  0FC0               	addlw	192
  1514  001A00  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1515  001A02  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1516  001A06  EF38  F00D         	goto	l281
  1517  001A0A                     l7712:
  1518                           
  1519                           ; BSR set to: 0
  1520  001A0A  C0B9  F0B5         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1521  001A0E  C0BA  F0B6         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1522  001A12  51BC               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1523  001A14  0F94               	addlw	148
  1524  001A16  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1525  001A18  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1526  001A1C  EF38  F00D         	goto	l281
  1527  001A20                     l7714:
  1528                           
  1529                           ; BSR set to: 0
  1530  001A20  C0B9  F0B5         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1531  001A24  C0BA  F0B6         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1532  001A28  51BC               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1533  001A2A  0FD4               	addlw	212
  1534  001A2C  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1535  001A2E  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1536  001A32  EF38  F00D         	goto	l281
  1537  001A36                     l7718:
  1538                           
  1539                           ; BSR set to: 0
  1540  001A36  51BB               	movf	lcd_4bits_set_courser@row& (0+255),w,b
  1541  001A38  6FBD               	movwf	??_lcd_4bits_set_courser& (0+255),b
  1542  001A3A  6BBE               	clrf	(??_lcd_4bits_set_courser+1)& (0+255),b
  1543                           
  1544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1545                           ; Switch size 1, requested type "simple"
  1546                           ; Number of cases is 1, Range of values is 0 to 0
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte            4     3 (average)
  1550                           ;	Chosen strategy is simple_byte
  1551  001A3C  51BE               	movf	(??_lcd_4bits_set_courser+1)& (0+255),w,b
  1552  001A3E  0A00               	xorlw	0	; case 0
  1553  001A40  B4D8               	btfsc	status,2,c
  1554  001A42  EF25  F00D         	goto	l8490
  1555  001A46  EF38  F00D         	goto	l281
  1556  001A4A                     l8490:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ; Switch size 1, requested type "simple"
  1560                           ; Number of cases is 4, Range of values is 1 to 4
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte           13     7 (average)
  1564                           ;	Chosen strategy is simple_byte
  1565  001A4A  51BD               	movf	??_lcd_4bits_set_courser& (0+255),w,b
  1566  001A4C  0A01               	xorlw	1	; case 1
  1567  001A4E  B4D8               	btfsc	status,2,c
  1568  001A50  EFEF  F00C         	goto	l7708
  1569  001A54  0A03               	xorlw	3	; case 2
  1570  001A56  B4D8               	btfsc	status,2,c
  1571  001A58  EFFA  F00C         	goto	l7710
  1572  001A5C  0A01               	xorlw	1	; case 3
  1573  001A5E  B4D8               	btfsc	status,2,c
  1574  001A60  EF05  F00D         	goto	l7712
  1575  001A64  0A07               	xorlw	7	; case 4
  1576  001A66  B4D8               	btfsc	status,2,c
  1577  001A68  EF10  F00D         	goto	l7714
  1578  001A6C  EF38  F00D         	goto	l281
  1579  001A70                     l281:
  1580  001A70  0012               	return		;funcret
  1581  001A72                     __end_of_lcd_4bits_set_courser:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _lcd_4bit_send_char_data *****************
  1585 ;; Defined at:
  1586 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  lcd             2    3[BANK0 ] PTR const struct .
  1589 ;;		 -> lcd1(6), 
  1590 ;;  data            1    5[BANK0 ] unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  ERRORSTATUS     1    0        unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      unsigned char 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1602 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;Total ram usage:        4 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    9
  1609 ;; This function calls:
  1610 ;;		_GPIO_Pin_Write_Logic
  1611 ;;		_lcd_4bits_send_enable_signal
  1612 ;;		_lcd_send_4bits
  1613 ;; This function is called by:
  1614 ;;		_lcd_4bit_send_char_data_pos
  1615 ;;		_lcd_4bit_send_string_data_pos
  1616 ;;		_lcd_4bit_send_string_data
  1617 ;;		_lcd_4bit_send_custom_char
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text4
  1622  001E3C                     __ptext4:
  1623                           	callstack 0
  1624  001E3C                     _lcd_4bit_send_char_data:
  1625                           	callstack 20
  1626  001E3C                     
  1627                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  1628  001E3C  0100               	movlb	0	; () banked
  1629  001E3E  51B5               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  1630  001E40  11B6               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  1631  001E42  A4D8               	btfss	status,2,c
  1632  001E44  EF26  F00F         	goto	u7241
  1633  001E48  EF28  F00F         	goto	u7240
  1634  001E4C                     u7241:
  1635  001E4C  EF2A  F00F         	goto	l7696
  1636  001E50                     u7240:
  1637  001E50                     
  1638                           ; BSR set to: 0
  1639                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  1640  001E50  EF50  F00F         	goto	l130
  1641  001E54                     l7696:
  1642                           
  1643                           ; BSR set to: 0
  1644  001E54  C0B5  F046         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  1645  001E58  C0B6  F047         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1646  001E5C  0E01               	movlw	1
  1647  001E5E  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1648  001E60  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  1649                           
  1650                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  1651  001E64  C0B5  F0B2         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1652  001E68  C0B6  F0B3         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1653  001E6C  0100               	movlb	0	; () banked
  1654  001E6E  39B7               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  1655  001E70  0B0F               	andlw	15
  1656  001E72  6FB4               	movwf	lcd_send_4bits@data_command& (0+255),b
  1657  001E74  EC6D  F00E         	call	_lcd_send_4bits	;wreg free
  1658                           
  1659                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  1660  001E78  C0B5  F050         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1661  001E7C  C0B6  F051         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1662  001E80  ECCF  F00F         	call	_lcd_4bits_send_enable_signal	;wreg free
  1663                           
  1664                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  1665  001E84  C0B5  F0B2         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1666  001E88  C0B6  F0B3         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1667  001E8C  C0B7  F0B4         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1668  001E90  EC6D  F00E         	call	_lcd_send_4bits	;wreg free
  1669                           
  1670                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  1671  001E94  C0B5  F050         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1672  001E98  C0B6  F051         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1673  001E9C  ECCF  F00F         	call	_lcd_4bits_send_enable_signal	;wreg free
  1674  001EA0                     l130:
  1675  001EA0  0012               	return		;funcret
  1676  001EA2                     __end_of_lcd_4bit_send_char_data:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _application_intialize *****************
  1680 ;; Defined at:
  1681 ;;		line 96 in file "application.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:   11
  1702 ;; This function calls:
  1703 ;;		_GPIO_Pin_Initialize
  1704 ;;		_lcd_4bit_initialize
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text5
  1711  002102                     __ptext5:
  1712                           	callstack 0
  1713  002102                     _application_intialize:
  1714                           	callstack 19
  1715  002102                     
  1716                           ;application.c: 98:     GPIO_Pin_Initialize(&pinc0);
  1717  002102  0E65               	movlw	low _pinc0
  1718  002104  6E50               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1719  002106  0E00               	movlw	high _pinc0
  1720  002108  6E51               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1721  00210A  EC82  F00F         	call	_GPIO_Pin_Initialize	;wreg free
  1722                           
  1723                           ;application.c: 99:     lcd_4bit_initialize(&lcd1);
  1724  00210E  0E53               	movlw	low _lcd1
  1725  002110  0100               	movlb	0	; () banked
  1726  002112  6FB9               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  1727  002114  0E00               	movlw	high _lcd1
  1728  002116  6FBA               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  1729  002118  EC4B  F00A         	call	_lcd_4bit_initialize	;wreg free
  1730  00211C  0012               	return		;funcret
  1731  00211E                     __end_of_application_intialize:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _lcd_4bit_initialize *****************
  1735 ;; Defined at:
  1736 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  lcd             2    7[BANK0 ] PTR const struct .
  1739 ;;		 -> lcd1(6), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  pin_lcd_coun    1   11[BANK0 ] unsigned char 
  1742 ;;  ERRORSTATUS     1    0        unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      unsigned char 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        6 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:   10
  1759 ;; This function calls:
  1760 ;;		_GPIO_Pin_Initialize
  1761 ;;		_lcd_4bit_send_command
  1762 ;; This function is called by:
  1763 ;;		_application_intialize
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text6
  1768  001496                     __ptext6:
  1769                           	callstack 0
  1770  001496                     _lcd_4bit_initialize:
  1771                           	callstack 19
  1772  001496                     
  1773                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  1774  001496  0100               	movlb	0	; () banked
  1775  001498  51B9               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  1776  00149A  11BA               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1777  00149C  A4D8               	btfss	status,2,c
  1778  00149E  EF53  F00A         	goto	u7221
  1779  0014A2  EF55  F00A         	goto	u7220
  1780  0014A6                     u7221:
  1781  0014A6  EF57  F00A         	goto	l7650
  1782  0014AA                     u7220:
  1783  0014AA                     
  1784                           ; BSR set to: 0
  1785                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  1786  0014AA  EFE7  F00A         	goto	l120
  1787  0014AE                     l7650:
  1788  0014AE                     
  1789                           ; BSR set to: 0
  1790  0014AE  C0B9  F050         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  1791  0014B2  C0BA  F051         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  1792  0014B6  EC82  F00F         	call	_GPIO_Pin_Initialize	;wreg free
  1793  0014BA  0E01               	movlw	1
  1794  0014BC  0100               	movlb	0	; () banked
  1795  0014BE  25B9               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1796  0014C0  6E50               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1797  0014C2  0E00               	movlw	0
  1798  0014C4  21BA               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1799  0014C6  6E51               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1800  0014C8  EC82  F00F         	call	_GPIO_Pin_Initialize	;wreg free
  1801                           
  1802                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  1803  0014CC  0E00               	movlw	0
  1804  0014CE  0100               	movlb	0	; () banked
  1805  0014D0  6FBD               	movwf	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  1806  0014D2                     l7660:
  1807                           
  1808                           ; BSR set to: 0
  1809  0014D2  51BD               	movf	lcd_4bit_initialize@pin_lcd_counter& (0+255),w,b
  1810  0014D4  25B9               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1811  0014D6  6FBB               	movwf	??_lcd_4bit_initialize& (0+255),b
  1812  0014D8  0E00               	movlw	0
  1813  0014DA  21BA               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1814  0014DC  6FBC               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  1815  0014DE  0E02               	movlw	2
  1816  0014E0  25BB               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  1817  0014E2  6E50               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1818  0014E4  0E00               	movlw	0
  1819  0014E6  21BC               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  1820  0014E8  6E51               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1821  0014EA  EC82  F00F         	call	_GPIO_Pin_Initialize	;wreg free
  1822  0014EE                     
  1823                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  1824  0014EE  0100               	movlb	0	; () banked
  1825  0014F0  2BBD               	incf	lcd_4bit_initialize@pin_lcd_counter& (0+255),f,b
  1826  0014F2                     
  1827                           ; BSR set to: 0
  1828  0014F2  0E03               	movlw	3
  1829  0014F4  65BD               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  1830  0014F6  EF7F  F00A         	goto	u7231
  1831  0014FA  EF81  F00A         	goto	u7230
  1832  0014FE                     u7231:
  1833  0014FE  EF69  F00A         	goto	l7660
  1834  001502                     u7230:
  1835  001502                     
  1836                           ; BSR set to: 0
  1837                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(8000000/4
      +                          000.0)));
  1838  001502  0E34               	movlw	52
  1839  001504  0100               	movlb	0	; () banked
  1840  001506  6FBB               	movwf	??_lcd_4bit_initialize& (0+255),b
  1841  001508  0EF1               	movlw	241
  1842  00150A                     u7937:
  1843  00150A  2EE8               	decfsz	wreg,f,c
  1844  00150C  D7FE               	bra	u7937
  1845  00150E  2FBB               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  1846  001510  D7FC               	bra	u7937
  1847  001512  D000               	nop2	
  1848  001514  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1849  001518  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1850  00151C  0E38               	movlw	56
  1851  00151E  0100               	movlb	0	; () banked
  1852  001520  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1853  001522  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1854  001526                     
  1855                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(8000000/40
      +                          00.0)));
  1856  001526  0E0D               	movlw	13
  1857  001528  0100               	movlb	0	; () banked
  1858  00152A  6FBB               	movwf	??_lcd_4bit_initialize& (0+255),b
  1859  00152C  0EFB               	movlw	251
  1860  00152E                     u7947:
  1861  00152E  2EE8               	decfsz	wreg,f,c
  1862  001530  D7FE               	bra	u7947
  1863  001532  2FBB               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  1864  001534  D7FC               	bra	u7947
  1865  001536  D000               	nop2	
  1866  001538  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1867  00153C  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1868  001540  0E38               	movlw	56
  1869  001542  0100               	movlb	0	; () banked
  1870  001544  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1871  001546  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1872  00154A                     
  1873                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(8000000/
      +                          4000000.0)));
  1874  00154A  0E64               	movlw	100
  1875  00154C                     u7957:
  1876  00154C  2EE8               	decfsz	wreg,f,c
  1877  00154E  D7FE               	bra	u7957
  1878  001550  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1879  001554  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1880  001558  0E38               	movlw	56
  1881  00155A  0100               	movlb	0	; () banked
  1882  00155C  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1883  00155E  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1884  001562  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1885  001566  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1886  00156A  0E01               	movlw	1
  1887  00156C  0100               	movlb	0	; () banked
  1888  00156E  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1889  001570  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1890  001574  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1891  001578  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1892  00157C  0E02               	movlw	2
  1893  00157E  0100               	movlb	0	; () banked
  1894  001580  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1895  001582  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1896  001586  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1897  00158A  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1898  00158E  0E06               	movlw	6
  1899  001590  0100               	movlb	0	; () banked
  1900  001592  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1901  001594  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1902  001598  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1903  00159C  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1904  0015A0  0E0D               	movlw	13
  1905  0015A2  0100               	movlb	0	; () banked
  1906  0015A4  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1907  0015A6  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1908  0015AA  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1909  0015AE  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1910  0015B2  0E28               	movlw	40
  1911  0015B4  0100               	movlb	0	; () banked
  1912  0015B6  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1913  0015B8  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1914  0015BC  C0B9  F0B5         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1915  0015C0  C0BA  F0B6         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1916  0015C4  0E80               	movlw	128
  1917  0015C6  0100               	movlb	0	; () banked
  1918  0015C8  6FB7               	movwf	lcd_4bit_send_command@command& (0+255),b
  1919  0015CA  ECAE  F00E         	call	_lcd_4bit_send_command	;wreg free
  1920  0015CE                     l120:
  1921  0015CE  0012               	return		;funcret
  1922  0015D0                     __end_of_lcd_4bit_initialize:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _lcd_4bit_send_command *****************
  1926 ;; Defined at:
  1927 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  lcd             2    3[BANK0 ] PTR const struct .
  1930 ;;		 -> lcd1(6), 
  1931 ;;  command         1    5[BANK0 ] unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  ERRORSTATUS     1    6[BANK0 ] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      unsigned char 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        4 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    9
  1950 ;; This function calls:
  1951 ;;		_GPIO_Pin_Write_Logic
  1952 ;;		_lcd_4bits_send_enable_signal
  1953 ;;		_lcd_send_4bits
  1954 ;; This function is called by:
  1955 ;;		_lcd_4bit_initialize
  1956 ;;		_lcd_4bits_set_courser
  1957 ;;		_lcd_4bit_send_custom_char
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text7
  1962  001D5C                     __ptext7:
  1963                           	callstack 0
  1964  001D5C                     _lcd_4bit_send_command:
  1965                           	callstack 19
  1966  001D5C                     
  1967                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  1968  001D5C  0100               	movlb	0	; () banked
  1969  001D5E  51B5               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  1970  001D60  11B6               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  1971  001D62  A4D8               	btfss	status,2,c
  1972  001D64  EFB6  F00E         	goto	u7211
  1973  001D68  EFB8  F00E         	goto	u7210
  1974  001D6C                     u7211:
  1975  001D6C  EFBC  F00E         	goto	l7638
  1976  001D70                     u7210:
  1977  001D70                     
  1978                           ; BSR set to: 0
  1979                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
  1980  001D70  0E00               	movlw	0
  1981  001D72  6FB8               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
  1982                           
  1983                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  1984  001D74  EFE3  F00E         	goto	l7640
  1985  001D78                     l7638:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
  1989  001D78  C0B5  F046         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
  1990  001D7C  C0B6  F047         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1991  001D80  0E00               	movlw	0
  1992  001D82  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1993  001D84  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  1994  001D88  0100               	movlb	0	; () banked
  1995  001D8A  6FB8               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
  1996                           
  1997                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  1998  001D8C  C0B5  F0B2         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1999  001D90  C0B6  F0B3         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  2000  001D94  39B7               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  2001  001D96  0B0F               	andlw	15
  2002  001D98  6FB4               	movwf	lcd_send_4bits@data_command& (0+255),b
  2003  001D9A  EC6D  F00E         	call	_lcd_send_4bits	;wreg free
  2004                           
  2005                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  2006  001D9E  C0B5  F050         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2007  001DA2  C0B6  F051         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2008  001DA6  ECCF  F00F         	call	_lcd_4bits_send_enable_signal	;wreg free
  2009                           
  2010                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  2011  001DAA  C0B5  F0B2         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2012  001DAE  C0B6  F0B3         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  2013  001DB2  C0B7  F0B4         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  2014  001DB6  EC6D  F00E         	call	_lcd_send_4bits	;wreg free
  2015                           
  2016                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  2017  001DBA  C0B5  F050         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2018  001DBE  C0B6  F051         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2019  001DC2  ECCF  F00F         	call	_lcd_4bits_send_enable_signal	;wreg free
  2020  001DC6                     l7640:
  2021                           
  2022                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
  2023  001DC6  0100               	movlb	0	; () banked
  2024  001DC8  51B8               	movf	lcd_4bit_send_command@ERRORSTATUS& (0+255),w,b
  2025  001DCA                     
  2026                           ; BSR set to: 0
  2027  001DCA  0012               	return		;funcret
  2028  001DCC                     __end_of_lcd_4bit_send_command:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _lcd_send_4bits *****************
  2032 ;; Defined at:
  2033 ;;		line 529 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  lcd             2    0[BANK0 ] PTR const struct .
  2036 ;;		 -> lcd1(6), 
  2037 ;;  data_command    1    2[BANK0 ] unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  ERRORSTATUS     1    0        unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      unsigned char 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2049 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    8
  2056 ;; This function calls:
  2057 ;;		_GPIO_Pin_Write_Logic
  2058 ;; This function is called by:
  2059 ;;		_lcd_4bit_send_command
  2060 ;;		_lcd_4bit_send_char_data
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text8
  2065  001CDA                     __ptext8:
  2066                           	callstack 0
  2067  001CDA                     _lcd_send_4bits:
  2068                           	callstack 19
  2069  001CDA                     
  2070                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 532:         if ( ((void*)0)==lcd)
  2071  001CDA  0100               	movlb	0	; () banked
  2072  001CDC  51B2               	movf	lcd_send_4bits@lcd& (0+255),w,b
  2073  001CDE  11B3               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2074  001CE0  A4D8               	btfss	status,2,c
  2075  001CE2  EF75  F00E         	goto	u7121
  2076  001CE6  EF77  F00E         	goto	u7120
  2077  001CEA                     u7121:
  2078  001CEA  EF79  F00E         	goto	l7578
  2079  001CEE                     u7120:
  2080  001CEE                     
  2081                           ; BSR set to: 0
  2082                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 535:     }
  2083  001CEE  EFAD  F00E         	goto	l252
  2084  001CF2                     l7578:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 537:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 53
      +                          8:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  2088  001CF2  0E02               	movlw	2
  2089  001CF4  25B2               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2090  001CF6  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2091  001CF8  0E00               	movlw	0
  2092  001CFA  21B3               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2093  001CFC  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2094  001CFE  51B4               	movf	lcd_send_4bits@data_command& (0+255),w,b
  2095  001D00  0B01               	andlw	1
  2096  001D02  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2097  001D04  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2098                           
  2099                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 539:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  2100  001D08  0E03               	movlw	3
  2101  001D0A  0100               	movlb	0	; () banked
  2102  001D0C  25B2               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2103  001D0E  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2104  001D10  0E00               	movlw	0
  2105  001D12  21B3               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2106  001D14  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2107  001D16  90D8               	bcf	status,0,c
  2108  001D18  31B4               	rrcf	lcd_send_4bits@data_command& (0+255),w,b
  2109  001D1A  0B01               	andlw	1
  2110  001D1C  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2111  001D1E  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2112                           
  2113                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 540:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  2114  001D22  0E04               	movlw	4
  2115  001D24  0100               	movlb	0	; () banked
  2116  001D26  25B2               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2117  001D28  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2118  001D2A  0E00               	movlw	0
  2119  001D2C  21B3               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2120  001D2E  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2121  001D30  41B4               	rrncf	lcd_send_4bits@data_command& (0+255),w,b
  2122  001D32  42E8               	rrncf	wreg,f,c
  2123  001D34  0B3F               	andlw	63
  2124  001D36  0B01               	andlw	1
  2125  001D38  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2126  001D3A  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2127                           
  2128                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 541:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  2129  001D3E  0E05               	movlw	5
  2130  001D40  0100               	movlb	0	; () banked
  2131  001D42  25B2               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2132  001D44  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2133  001D46  0E00               	movlw	0
  2134  001D48  21B3               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2135  001D4A  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2136  001D4C  39B4               	swapf	lcd_send_4bits@data_command& (0+255),w,b
  2137  001D4E  46E8               	rlncf	wreg,f,c
  2138  001D50  0B1F               	andlw	31
  2139  001D52  0B01               	andlw	1
  2140  001D54  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2141  001D56  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2142  001D5A                     l252:
  2143  001D5A  0012               	return		;funcret
  2144  001D5C                     __end_of_lcd_send_4bits:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2148 ;; Defined at:
  2149 ;;		line 512 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  lcd             2   35[COMRAM] PTR const struct .
  2152 ;;		 -> lcd1(6), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  ERRORSTATUS     1    0        unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        3 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    8
  2171 ;; This function calls:
  2172 ;;		_GPIO_Pin_Write_Logic
  2173 ;; This function is called by:
  2174 ;;		_lcd_4bit_send_command
  2175 ;;		_lcd_4bit_send_char_data
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text9
  2180  001F9E                     __ptext9:
  2181                           	callstack 0
  2182  001F9E                     _lcd_4bits_send_enable_signal:
  2183                           	callstack 19
  2184  001F9E                     
  2185                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:         if ( ((void*)0)==lcd)
  2186  001F9E  5050               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2187  001FA0  1051               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  2188  001FA2  A4D8               	btfss	status,2,c
  2189  001FA4  EFD6  F00F         	goto	u7131
  2190  001FA8  EFD8  F00F         	goto	u7130
  2191  001FAC                     u7131:
  2192  001FAC  EFDA  F00F         	goto	l7588
  2193  001FB0                     u7130:
  2194  001FB0                     
  2195                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 518:     }
  2196  001FB0  EFF2  F00F         	goto	l247
  2197  001FB4                     l7588:
  2198                           
  2199                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 520:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 52
      +                          1:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  2200  001FB4  0E01               	movlw	1
  2201  001FB6  2450               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2202  001FB8  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2203  001FBA  0E00               	movlw	0
  2204  001FBC  2051               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  2205  001FBE  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2206  001FC0  0E01               	movlw	1
  2207  001FC2  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2208  001FC4  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2209  001FC8                     
  2210                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 522:             _delay((unsigned long)((5)*(80000
      +                          00/4000000.0)));
  2211  001FC8  0E03               	movlw	3
  2212  001FCA                     u7967:
  2213  001FCA  2EE8               	decfsz	wreg,f,c
  2214  001FCC  D7FE               	bra	u7967
  2215  001FCE  F000               	nop	
  2216  001FD0                     
  2217                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 523:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  2218  001FD0  0E01               	movlw	1
  2219  001FD2  2450               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2220  001FD4  6E46               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2221  001FD6  0E00               	movlw	0
  2222  001FD8  2051               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  2223  001FDA  6E47               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2224  001FDC  0E00               	movlw	0
  2225  001FDE  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2226  001FE0  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2227  001FE4                     l247:
  2228  001FE4  0012               	return		;funcret
  2229  001FE6                     __end_of_lcd_4bits_send_enable_signal:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _GPIO_Pin_Initialize *****************
  2233 ;; Defined at:
  2234 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  _pin_config     2   35[COMRAM] PTR const struct .
  2237 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), 
  2238 ;;		 -> CCP1_Obj(10), W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), 
  2239 ;;		 -> W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  ERRORSTATUS     1    0[BANK0 ] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      unsigned char 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:        3 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    8
  2258 ;; This function calls:
  2259 ;;		_GPIO_Pin_Direction_Initialize
  2260 ;;		_GPIO_Pin_Write_Logic
  2261 ;; This function is called by:
  2262 ;;		_lcd_4bit_initialize
  2263 ;;		_application_intialize
  2264 ;;		_ECU_DC_Motor_Init
  2265 ;;		_IR_Sensor_Init
  2266 ;;		_lcd_8bit_initialize
  2267 ;;		_CCP_Init
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text10
  2272  001F04                     __ptext10:
  2273                           	callstack 0
  2274  001F04                     _GPIO_Pin_Initialize:
  2275                           	callstack 20
  2276  001F04                     
  2277                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  2278  001F04  5050               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
  2279  001F06  1051               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
  2280  001F08  A4D8               	btfss	status,2,c
  2281  001F0A  EF89  F00F         	goto	u7201
  2282  001F0E  EF8B  F00F         	goto	u7200
  2283  001F12                     u7201:
  2284  001F12  EF90  F00F         	goto	l7626
  2285  001F16                     u7200:
  2286  001F16                     
  2287                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  2288  001F16  0E00               	movlw	0
  2289  001F18  0100               	movlb	0	; () banked
  2290  001F1A  6FB2               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2291                           
  2292                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  2293  001F1C  EFA8  F00F         	goto	l7628
  2294  001F20                     l7626:
  2295                           
  2296                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  2297  001F20  C050  F046         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  2298  001F24  C051  F047         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  2299  001F28  ECAB  F009         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  2300  001F2C  0100               	movlb	0	; () banked
  2301  001F2E  6FB2               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2302                           
  2303                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  2304  001F30  C050  F046         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  2305  001F34  C051  F047         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  2306  001F38  C050  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  2307  001F3C  C051  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  2308  001F40  0E00               	movlw	0
  2309  001F42  BEDF               	btfsc	indf2,7,c
  2310  001F44  0E01               	movlw	1
  2311  001F46  6E48               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2312  001F48  ECE8  F00A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2313  001F4C  0100               	movlb	0	; () banked
  2314  001F4E  6FB2               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2315  001F50                     l7628:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  2319  001F50  51B2               	movf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),w,b
  2320  001F52                     
  2321                           ; BSR set to: 0
  2322  001F52  0012               	return		;funcret
  2323  001F54                     __end_of_GPIO_Pin_Initialize:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _GPIO_Pin_Write_Logic *****************
  2327 ;; Defined at:
  2328 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  2331 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), 
  2332 ;;		 -> CCP1_Obj(10), W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), 
  2333 ;;		 -> W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
  2334 ;;  logic           1   27[COMRAM] enum E2958
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  ERRORSTATUS     1   34[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      unsigned char 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:       10 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    7
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_lcd_4bit_send_command
  2357 ;;		_lcd_4bit_send_char_data
  2358 ;;		_lcd_4bits_send_enable_signal
  2359 ;;		_lcd_send_4bits
  2360 ;;		_GPIO_Pin_Initialize
  2361 ;;		_main
  2362 ;;		_ECU_DC_Motor_Run_Left
  2363 ;;		_ECU_DC_Motor_Run_Right
  2364 ;;		_lcd_8bit_send_command
  2365 ;;		_lcd_8bit_send_char_data
  2366 ;;		_lcd_8bits_send_enable_signal
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text11
  2371  0015D0                     __ptext11:
  2372                           	callstack 0
  2373  0015D0                     _GPIO_Pin_Write_Logic:
  2374                           	callstack 19
  2375  0015D0                     
  2376                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  2377  0015D0  0E01               	movlw	1
  2378  0015D2  6E4F               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  2379  0015D4                     
  2380                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  2381  0015D4  5046               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
  2382  0015D6  1047               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  2383  0015D8  B4D8               	btfsc	status,2,c
  2384  0015DA  EFF1  F00A         	goto	u7081
  2385  0015DE  EFF3  F00A         	goto	u7080
  2386  0015E2                     u7081:
  2387  0015E2  EF02  F00B         	goto	l7554
  2388  0015E6                     u7080:
  2389  0015E6  C046  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2390  0015EA  C047  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2391  0015EE  50DF               	movf	indf2,w,c
  2392  0015F0  0B07               	andlw	7
  2393  0015F2  6E49               	movwf	??_GPIO_Pin_Write_Logic^0,c
  2394  0015F4  0E07               	movlw	7
  2395  0015F6  6449               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
  2396  0015F8  EF00  F00B         	goto	u7091
  2397  0015FC  EF02  F00B         	goto	u7090
  2398  001600                     u7091:
  2399  001600  EF65  F00B         	goto	l7562
  2400  001604                     u7090:
  2401  001604                     l7554:
  2402                           
  2403                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2404  001604  0E00               	movlw	0
  2405  001606  6E4F               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  2406                           
  2407                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  2408  001608  EF7A  F00B         	goto	l7564
  2409  00160C                     l7556:
  2410                           
  2411                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  2412  00160C  C046  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2413  001610  C047  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2414  001614  50DF               	movf	indf2,w,c
  2415  001616  0B07               	andlw	7
  2416  001618  6E49               	movwf	??_GPIO_Pin_Write_Logic^0,c
  2417  00161A  0E01               	movlw	1
  2418  00161C  6E4A               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  2419  00161E  2A49               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  2420  001620  EF14  F00B         	goto	u7104
  2421  001624                     u7105:
  2422  001624  90D8               	bcf	status,0,c
  2423  001626  364A               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  2424  001628                     u7104:
  2425  001628  2E49               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  2426  00162A  EF12  F00B         	goto	u7105
  2427  00162E  504A               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  2428  001630  0AFF               	xorlw	255
  2429  001632  6E4B               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  2430  001634  C046  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2431  001638  C047  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2432  00163C  30DF               	rrcf	indf2,w,c
  2433  00163E  32E8               	rrcf	wreg,f,c
  2434  001640  32E8               	rrcf	wreg,f,c
  2435  001642  0B07               	andlw	7
  2436  001644  6E4C               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
  2437  001646  504C               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
  2438  001648  0D02               	mullw	2
  2439  00164A  0E8A               	movlw	low _lat_registers
  2440  00164C  24F3               	addwf	243,w,c
  2441  00164E  6ED9               	movwf	fsr2l,c
  2442  001650  0E00               	movlw	high _lat_registers
  2443  001652  20F4               	addwfc	prodh,w,c
  2444  001654  6EDA               	movwf	fsr2h,c
  2445  001656  CFDE F04D          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  2446  00165A  CFDD F04E          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  2447  00165E  C04D  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  2448  001662  C04E  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  2449  001666  504B               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  2450  001668  16DF               	andwf	indf2,f,c
  2451                           
  2452                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  2453  00166A  EF7A  F00B         	goto	l7564
  2454  00166E                     l7558:
  2455                           
  2456                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  2457  00166E  C046  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2458  001672  C047  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2459  001676  50DF               	movf	indf2,w,c
  2460  001678  0B07               	andlw	7
  2461  00167A  6E49               	movwf	??_GPIO_Pin_Write_Logic^0,c
  2462  00167C  0E01               	movlw	1
  2463  00167E  6E4A               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  2464  001680  2A49               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  2465  001682  EF45  F00B         	goto	u7114
  2466  001686                     u7115:
  2467  001686  90D8               	bcf	status,0,c
  2468  001688  364A               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  2469  00168A                     u7114:
  2470  00168A  2E49               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  2471  00168C  EF43  F00B         	goto	u7115
  2472  001690  C046  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2473  001694  C047  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2474  001698  30DF               	rrcf	indf2,w,c
  2475  00169A  32E8               	rrcf	wreg,f,c
  2476  00169C  32E8               	rrcf	wreg,f,c
  2477  00169E  0B07               	andlw	7
  2478  0016A0  6E4B               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  2479  0016A2  504B               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  2480  0016A4  0D02               	mullw	2
  2481  0016A6  0E8A               	movlw	low _lat_registers
  2482  0016A8  24F3               	addwf	243,w,c
  2483  0016AA  6ED9               	movwf	fsr2l,c
  2484  0016AC  0E00               	movlw	high _lat_registers
  2485  0016AE  20F4               	addwfc	prodh,w,c
  2486  0016B0  6EDA               	movwf	fsr2h,c
  2487  0016B2  CFDE F04C          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  2488  0016B6  CFDD F04D          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  2489  0016BA  C04C  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  2490  0016BE  C04D  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  2491  0016C2  504A               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  2492  0016C4  12DF               	iorwf	indf2,f,c
  2493                           
  2494                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  2495  0016C6  EF7A  F00B         	goto	l7564
  2496  0016CA                     l7562:
  2497  0016CA  5048               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  2498  0016CC  6E49               	movwf	??_GPIO_Pin_Write_Logic^0,c
  2499  0016CE  6A4A               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
  2500                           
  2501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2502                           ; Switch size 1, requested type "simple"
  2503                           ; Number of cases is 1, Range of values is 0 to 0
  2504                           ; switch strategies available:
  2505                           ; Name         Instructions Cycles
  2506                           ; simple_byte            4     3 (average)
  2507                           ;	Chosen strategy is simple_byte
  2508  0016D0  504A               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  2509  0016D2  0A00               	xorlw	0	; case 0
  2510  0016D4  B4D8               	btfsc	status,2,c
  2511  0016D6  EF6F  F00B         	goto	l8492
  2512  0016DA  EF02  F00B         	goto	l7554
  2513  0016DE                     l8492:
  2514                           
  2515                           ; Switch size 1, requested type "simple"
  2516                           ; Number of cases is 2, Range of values is 0 to 1
  2517                           ; switch strategies available:
  2518                           ; Name         Instructions Cycles
  2519                           ; simple_byte            7     4 (average)
  2520                           ;	Chosen strategy is simple_byte
  2521  0016DE  5049               	movf	??_GPIO_Pin_Write_Logic^0,w,c
  2522  0016E0  0A00               	xorlw	0	; case 0
  2523  0016E2  B4D8               	btfsc	status,2,c
  2524  0016E4  EF06  F00B         	goto	l7556
  2525  0016E8  0A01               	xorlw	1	; case 1
  2526  0016EA  B4D8               	btfsc	status,2,c
  2527  0016EC  EF37  F00B         	goto	l7558
  2528  0016F0  EF02  F00B         	goto	l7554
  2529  0016F4                     l7564:
  2530                           
  2531                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  2532  0016F4  504F               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  2533  0016F6  0012               	return		;funcret
  2534  0016F8                     __end_of_GPIO_Pin_Write_Logic:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  2538 ;; Defined at:
  2539 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  2542 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), 
  2543 ;;		 -> CCP1_Obj(10), W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), 
  2544 ;;		 -> W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  ERRORSTATUS     1   33[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      unsigned char 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:        9 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    7
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_GPIO_Pin_Initialize
  2567 ;;		_interrupt_RBx_pin_init
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text12
  2572  001356                     __ptext12:
  2573                           	callstack 0
  2574  001356                     _GPIO_Pin_Direction_Initialize:
  2575                           	callstack 20
  2576  001356                     
  2577                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  2578  001356  0E01               	movlw	1
  2579  001358  6E4E               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2580  00135A                     
  2581                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  2582  00135A  5046               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  2583  00135C  1047               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  2584  00135E  B4D8               	btfsc	status,2,c
  2585  001360  EFB4  F009         	goto	u7141
  2586  001364  EFB6  F009         	goto	u7140
  2587  001368                     u7141:
  2588  001368  EFC5  F009         	goto	l7602
  2589  00136C                     u7140:
  2590  00136C  C046  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2591  001370  C047  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2592  001374  50DF               	movf	indf2,w,c
  2593  001376  0B07               	andlw	7
  2594  001378  6E48               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2595  00137A  0E07               	movlw	7
  2596  00137C  6448               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
  2597  00137E  EFC3  F009         	goto	u7151
  2598  001382  EFC5  F009         	goto	u7150
  2599  001386                     u7151:
  2600  001386  EF28  F00A         	goto	l7610
  2601  00138A                     u7150:
  2602  00138A                     l7602:
  2603                           
  2604                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2605  00138A  0E00               	movlw	0
  2606  00138C  6E4E               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2607                           
  2608                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  2609  00138E  EF49  F00A         	goto	l7612
  2610  001392                     l7604:
  2611                           
  2612                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  2613  001392  C046  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2614  001396  C047  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2615  00139A  50DF               	movf	indf2,w,c
  2616  00139C  0B07               	andlw	7
  2617  00139E  6E48               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2618  0013A0  0E01               	movlw	1
  2619  0013A2  6E49               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2620  0013A4  2A48               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  2621  0013A6  EFD7  F009         	goto	u7164
  2622  0013AA                     u7165:
  2623  0013AA  90D8               	bcf	status,0,c
  2624  0013AC  3649               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  2625  0013AE                     u7164:
  2626  0013AE  2E48               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  2627  0013B0  EFD5  F009         	goto	u7165
  2628  0013B4  5049               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2629  0013B6  0AFF               	xorlw	255
  2630  0013B8  6E4A               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  2631  0013BA  C046  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2632  0013BE  C047  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2633  0013C2  30DF               	rrcf	indf2,w,c
  2634  0013C4  32E8               	rrcf	wreg,f,c
  2635  0013C6  32E8               	rrcf	wreg,f,c
  2636  0013C8  0B07               	andlw	7
  2637  0013CA  6E4B               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  2638  0013CC  504B               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  2639  0013CE  0D02               	mullw	2
  2640  0013D0  0E94               	movlw	low _tris_registers
  2641  0013D2  24F3               	addwf	243,w,c
  2642  0013D4  6ED9               	movwf	fsr2l,c
  2643  0013D6  0E00               	movlw	high _tris_registers
  2644  0013D8  20F4               	addwfc	prodh,w,c
  2645  0013DA  6EDA               	movwf	fsr2h,c
  2646  0013DC  CFDE F04C          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  2647  0013E0  CFDD F04D          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  2648  0013E4  C04C  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  2649  0013E8  C04D  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  2650  0013EC  504A               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  2651  0013EE  16DF               	andwf	indf2,f,c
  2652                           
  2653                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  2654  0013F0  EF49  F00A         	goto	l7612
  2655  0013F4                     l7606:
  2656                           
  2657                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  2658  0013F4  C046  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2659  0013F8  C047  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2660  0013FC  50DF               	movf	indf2,w,c
  2661  0013FE  0B07               	andlw	7
  2662  001400  6E48               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2663  001402  0E01               	movlw	1
  2664  001404  6E49               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2665  001406  2A48               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  2666  001408  EF08  F00A         	goto	u7174
  2667  00140C                     u7175:
  2668  00140C  90D8               	bcf	status,0,c
  2669  00140E  3649               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  2670  001410                     u7174:
  2671  001410  2E48               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  2672  001412  EF06  F00A         	goto	u7175
  2673  001416  C046  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2674  00141A  C047  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2675  00141E  30DF               	rrcf	indf2,w,c
  2676  001420  32E8               	rrcf	wreg,f,c
  2677  001422  32E8               	rrcf	wreg,f,c
  2678  001424  0B07               	andlw	7
  2679  001426  6E4A               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  2680  001428  504A               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  2681  00142A  0D02               	mullw	2
  2682  00142C  0E94               	movlw	low _tris_registers
  2683  00142E  24F3               	addwf	243,w,c
  2684  001430  6ED9               	movwf	fsr2l,c
  2685  001432  0E00               	movlw	high _tris_registers
  2686  001434  20F4               	addwfc	prodh,w,c
  2687  001436  6EDA               	movwf	fsr2h,c
  2688  001438  CFDE F04B          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  2689  00143C  CFDD F04C          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  2690  001440  C04B  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  2691  001444  C04C  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  2692  001448  5049               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2693  00144A  12DF               	iorwf	indf2,f,c
  2694                           
  2695                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  2696  00144C  EF49  F00A         	goto	l7612
  2697  001450                     l7610:
  2698  001450  C046  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2699  001454  C047  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2700  001458  BCDF               	btfsc	indf2,6,c
  2701  00145A  EF31  F00A         	goto	u7181
  2702  00145E  EF34  F00A         	goto	u7180
  2703  001462                     u7181:
  2704  001462  0E01               	movlw	1
  2705  001464  EF35  F00A         	goto	u7190
  2706  001468                     u7180:
  2707  001468  0E00               	movlw	0
  2708  00146A                     u7190:
  2709  00146A  6E48               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2710  00146C  6A49               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2711                           
  2712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2713                           ; Switch size 1, requested type "simple"
  2714                           ; Number of cases is 1, Range of values is 0 to 0
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte            4     3 (average)
  2718                           ;	Chosen strategy is simple_byte
  2719  00146E  5049               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2720  001470  0A00               	xorlw	0	; case 0
  2721  001472  B4D8               	btfsc	status,2,c
  2722  001474  EF3E  F00A         	goto	l8494
  2723  001478  EFC5  F009         	goto	l7602
  2724  00147C                     l8494:
  2725                           
  2726                           ; Switch size 1, requested type "simple"
  2727                           ; Number of cases is 2, Range of values is 0 to 1
  2728                           ; switch strategies available:
  2729                           ; Name         Instructions Cycles
  2730                           ; simple_byte            7     4 (average)
  2731                           ;	Chosen strategy is simple_byte
  2732  00147C  5048               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  2733  00147E  0A00               	xorlw	0	; case 0
  2734  001480  B4D8               	btfsc	status,2,c
  2735  001482  EFC9  F009         	goto	l7604
  2736  001486  0A01               	xorlw	1	; case 1
  2737  001488  B4D8               	btfsc	status,2,c
  2738  00148A  EFFA  F009         	goto	l7606
  2739  00148E  EFC5  F009         	goto	l7602
  2740  001492                     l7612:
  2741                           
  2742                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  2743  001492  504E               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  2744  001494  0012               	return		;funcret
  2745  001496                     __end_of_GPIO_Pin_Direction_Initialize:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function ___awmod *****************
  2749 ;; Defined at:
  2750 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  dividend        2   25[COMRAM] int 
  2753 ;;  divisor         2   27[COMRAM] int 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  sign            1   30[COMRAM] unsigned char 
  2756 ;;  counter         1   29[COMRAM] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  2   25[COMRAM] int 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;Total ram usage:        6 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    7
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text13
  2781  001A72                     __ptext13:
  2782                           	callstack 0
  2783  001A72                     ___awmod:
  2784                           	callstack 23
  2785  001A72  0E00               	movlw	0
  2786  001A74  6E4B               	movwf	___awmod@sign^0,c
  2787  001A76  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2788  001A78  EF42  F00D         	goto	u5530
  2789  001A7C  EF40  F00D         	goto	u5531
  2790  001A80                     u5531:
  2791  001A80  EF48  F00D         	goto	l6316
  2792  001A84                     u5530:
  2793  001A84  6C46               	negf	___awmod@dividend^0,c
  2794  001A86  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2795  001A88  B0D8               	btfsc	status,0,c
  2796  001A8A  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2797  001A8C  0E01               	movlw	1
  2798  001A8E  6E4B               	movwf	___awmod@sign^0,c
  2799  001A90                     l6316:
  2800  001A90  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2801  001A92  EF4F  F00D         	goto	u5540
  2802  001A96  EF4D  F00D         	goto	u5541
  2803  001A9A                     u5541:
  2804  001A9A  EF53  F00D         	goto	l6320
  2805  001A9E                     u5540:
  2806  001A9E  6C48               	negf	___awmod@divisor^0,c
  2807  001AA0  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2808  001AA2  B0D8               	btfsc	status,0,c
  2809  001AA4  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2810  001AA6                     l6320:
  2811  001AA6  5048               	movf	___awmod@divisor^0,w,c
  2812  001AA8  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2813  001AAA  B4D8               	btfsc	status,2,c
  2814  001AAC  EF5A  F00D         	goto	u5551
  2815  001AB0  EF5C  F00D         	goto	u5550
  2816  001AB4                     u5551:
  2817  001AB4  EF80  F00D         	goto	l6336
  2818  001AB8                     u5550:
  2819  001AB8  0E01               	movlw	1
  2820  001ABA  6E4A               	movwf	___awmod@counter^0,c
  2821  001ABC  EF64  F00D         	goto	l6326
  2822  001AC0                     l6324:
  2823  001AC0  90D8               	bcf	status,0,c
  2824  001AC2  3648               	rlcf	___awmod@divisor^0,f,c
  2825  001AC4  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  2826  001AC6  2A4A               	incf	___awmod@counter^0,f,c
  2827  001AC8                     l6326:
  2828  001AC8  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  2829  001ACA  EF69  F00D         	goto	u5561
  2830  001ACE  EF6B  F00D         	goto	u5560
  2831  001AD2                     u5561:
  2832  001AD2  EF60  F00D         	goto	l6324
  2833  001AD6                     u5560:
  2834  001AD6                     l6328:
  2835  001AD6  5048               	movf	___awmod@divisor^0,w,c
  2836  001AD8  5C46               	subwf	___awmod@dividend^0,w,c
  2837  001ADA  5049               	movf	(___awmod@divisor+1)^0,w,c
  2838  001ADC  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  2839  001ADE  A0D8               	btfss	status,0,c
  2840  001AE0  EF74  F00D         	goto	u5571
  2841  001AE4  EF76  F00D         	goto	u5570
  2842  001AE8                     u5571:
  2843  001AE8  EF7A  F00D         	goto	l6332
  2844  001AEC                     u5570:
  2845  001AEC  5048               	movf	___awmod@divisor^0,w,c
  2846  001AEE  5E46               	subwf	___awmod@dividend^0,f,c
  2847  001AF0  5049               	movf	(___awmod@divisor+1)^0,w,c
  2848  001AF2  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  2849  001AF4                     l6332:
  2850  001AF4  90D8               	bcf	status,0,c
  2851  001AF6  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  2852  001AF8  3248               	rrcf	___awmod@divisor^0,f,c
  2853  001AFA  2E4A               	decfsz	___awmod@counter^0,f,c
  2854  001AFC  EF6B  F00D         	goto	l6328
  2855  001B00                     l6336:
  2856  001B00  504B               	movf	___awmod@sign^0,w,c
  2857  001B02  B4D8               	btfsc	status,2,c
  2858  001B04  EF86  F00D         	goto	u5581
  2859  001B08  EF88  F00D         	goto	u5580
  2860  001B0C                     u5581:
  2861  001B0C  EF8C  F00D         	goto	l6340
  2862  001B10                     u5580:
  2863  001B10  6C46               	negf	___awmod@dividend^0,c
  2864  001B12  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2865  001B14  B0D8               	btfsc	status,0,c
  2866  001B16  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2867  001B18                     l6340:
  2868  001B18  C046  F046         	movff	___awmod@dividend,?___awmod
  2869  001B1C  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  2870  001B20  0012               	return		;funcret
  2871  001B22                     __end_of___awmod:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function ___awdiv *****************
  2875 ;; Defined at:
  2876 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  dividend        2   25[COMRAM] int 
  2879 ;;  divisor         2   27[COMRAM] int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  quotient        2   31[COMRAM] int 
  2882 ;;  sign            1   30[COMRAM] unsigned char 
  2883 ;;  counter         1   29[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   25[COMRAM] int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:        8 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    7
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text14
  2908  0018FC                     __ptext14:
  2909                           	callstack 0
  2910  0018FC                     ___awdiv:
  2911                           	callstack 23
  2912  0018FC  0E00               	movlw	0
  2913  0018FE  6E4B               	movwf	___awdiv@sign^0,c
  2914  001900  BE49               	btfsc	(___awdiv@divisor+1)^0,7,c
  2915  001902  EF87  F00C         	goto	u5470
  2916  001906  EF85  F00C         	goto	u5471
  2917  00190A                     u5471:
  2918  00190A  EF8D  F00C         	goto	l6272
  2919  00190E                     u5470:
  2920  00190E  6C48               	negf	___awdiv@divisor^0,c
  2921  001910  1E49               	comf	(___awdiv@divisor+1)^0,f,c
  2922  001912  B0D8               	btfsc	status,0,c
  2923  001914  2A49               	incf	(___awdiv@divisor+1)^0,f,c
  2924  001916  0E01               	movlw	1
  2925  001918  6E4B               	movwf	___awdiv@sign^0,c
  2926  00191A                     l6272:
  2927  00191A  BE47               	btfsc	(___awdiv@dividend+1)^0,7,c
  2928  00191C  EF94  F00C         	goto	u5480
  2929  001920  EF92  F00C         	goto	u5481
  2930  001924                     u5481:
  2931  001924  EF9A  F00C         	goto	l6278
  2932  001928                     u5480:
  2933  001928  6C46               	negf	___awdiv@dividend^0,c
  2934  00192A  1E47               	comf	(___awdiv@dividend+1)^0,f,c
  2935  00192C  B0D8               	btfsc	status,0,c
  2936  00192E  2A47               	incf	(___awdiv@dividend+1)^0,f,c
  2937  001930  0E01               	movlw	1
  2938  001932  1A4B               	xorwf	___awdiv@sign^0,f,c
  2939  001934                     l6278:
  2940  001934  0E00               	movlw	0
  2941  001936  6E4D               	movwf	(___awdiv@quotient+1)^0,c
  2942  001938  0E00               	movlw	0
  2943  00193A  6E4C               	movwf	___awdiv@quotient^0,c
  2944  00193C  5048               	movf	___awdiv@divisor^0,w,c
  2945  00193E  1049               	iorwf	(___awdiv@divisor+1)^0,w,c
  2946  001940  B4D8               	btfsc	status,2,c
  2947  001942  EFA5  F00C         	goto	u5491
  2948  001946  EFA7  F00C         	goto	u5490
  2949  00194A                     u5491:
  2950  00194A  EFCF  F00C         	goto	l6300
  2951  00194E                     u5490:
  2952  00194E  0E01               	movlw	1
  2953  001950  6E4A               	movwf	___awdiv@counter^0,c
  2954  001952  EFAF  F00C         	goto	l6286
  2955  001956                     l6284:
  2956  001956  90D8               	bcf	status,0,c
  2957  001958  3648               	rlcf	___awdiv@divisor^0,f,c
  2958  00195A  3649               	rlcf	(___awdiv@divisor+1)^0,f,c
  2959  00195C  2A4A               	incf	___awdiv@counter^0,f,c
  2960  00195E                     l6286:
  2961  00195E  AE49               	btfss	(___awdiv@divisor+1)^0,7,c
  2962  001960  EFB4  F00C         	goto	u5501
  2963  001964  EFB6  F00C         	goto	u5500
  2964  001968                     u5501:
  2965  001968  EFAB  F00C         	goto	l6284
  2966  00196C                     u5500:
  2967  00196C                     l6288:
  2968  00196C  90D8               	bcf	status,0,c
  2969  00196E  364C               	rlcf	___awdiv@quotient^0,f,c
  2970  001970  364D               	rlcf	(___awdiv@quotient+1)^0,f,c
  2971  001972  5048               	movf	___awdiv@divisor^0,w,c
  2972  001974  5C46               	subwf	___awdiv@dividend^0,w,c
  2973  001976  5049               	movf	(___awdiv@divisor+1)^0,w,c
  2974  001978  5847               	subwfb	(___awdiv@dividend+1)^0,w,c
  2975  00197A  A0D8               	btfss	status,0,c
  2976  00197C  EFC2  F00C         	goto	u5511
  2977  001980  EFC4  F00C         	goto	u5510
  2978  001984                     u5511:
  2979  001984  EFC9  F00C         	goto	l6296
  2980  001988                     u5510:
  2981  001988  5048               	movf	___awdiv@divisor^0,w,c
  2982  00198A  5E46               	subwf	___awdiv@dividend^0,f,c
  2983  00198C  5049               	movf	(___awdiv@divisor+1)^0,w,c
  2984  00198E  5A47               	subwfb	(___awdiv@dividend+1)^0,f,c
  2985  001990  804C               	bsf	___awdiv@quotient^0,0,c
  2986  001992                     l6296:
  2987  001992  90D8               	bcf	status,0,c
  2988  001994  3249               	rrcf	(___awdiv@divisor+1)^0,f,c
  2989  001996  3248               	rrcf	___awdiv@divisor^0,f,c
  2990  001998  2E4A               	decfsz	___awdiv@counter^0,f,c
  2991  00199A  EFB6  F00C         	goto	l6288
  2992  00199E                     l6300:
  2993  00199E  504B               	movf	___awdiv@sign^0,w,c
  2994  0019A0  B4D8               	btfsc	status,2,c
  2995  0019A2  EFD5  F00C         	goto	u5521
  2996  0019A6  EFD7  F00C         	goto	u5520
  2997  0019AA                     u5521:
  2998  0019AA  EFDB  F00C         	goto	l6304
  2999  0019AE                     u5520:
  3000  0019AE  6C4C               	negf	___awdiv@quotient^0,c
  3001  0019B0  1E4D               	comf	(___awdiv@quotient+1)^0,f,c
  3002  0019B2  B0D8               	btfsc	status,0,c
  3003  0019B4  2A4D               	incf	(___awdiv@quotient+1)^0,f,c
  3004  0019B6                     l6304:
  3005  0019B6  C04C  F046         	movff	___awdiv@quotient,?___awdiv
  3006  0019BA  C04D  F047         	movff	___awdiv@quotient+1,?___awdiv+1
  3007  0019BE  0012               	return		;funcret
  3008  0019C0                     __end_of___awdiv:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _Get_Temp_HUM *****************
  3012 ;; Defined at:
  3013 ;;		line 13 in file "Robot/sensors/DHT11/DHT.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  RH_Decimal      2    0[BANK0 ] PTR unsigned char 
  3016 ;;		 -> RH_Decimal(1), 
  3017 ;;  RH_Integral     2    2[BANK0 ] PTR unsigned char 
  3018 ;;		 -> RH_Integral(1), 
  3019 ;;  T_Decimal       2    4[BANK0 ] PTR unsigned char 
  3020 ;;		 -> T_Decimal(1), 
  3021 ;;  T_Integral      2    6[BANK0 ] PTR unsigned char 
  3022 ;;		 -> T_Integral(1), 
  3023 ;;  Checksum        2    8[BANK0 ] PTR unsigned char 
  3024 ;;		 -> Checksum(1), 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  ERRORSTATUS     1    0        unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      unsigned char 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:       11 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    8
  3043 ;; This function calls:
  3044 ;;		_DHT11_Check_Response
  3045 ;;		_DHT11_Read_Data
  3046 ;;		_DHT11_Start
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text15
  3053  001B22                     __ptext15:
  3054                           	callstack 0
  3055  001B22                     _Get_Temp_HUM:
  3056                           	callstack 22
  3057  001B22                     
  3058                           ;Robot/sensors/DHT11/DHT.c: 16:     if ( ((void*)0)==RH_Decimal||((void*)0)==RH_Integral
      +                          ||((void*)0)==T_Decimal||((void*)0)==T_Integral||((void*)0)==Checksum)
  3059  001B22  0100               	movlb	0	; () banked
  3060  001B24  51B2               	movf	Get_Temp_HUM@RH_Decimal& (0+255),w,b
  3061  001B26  11B3               	iorwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),w,b
  3062  001B28  B4D8               	btfsc	status,2,c
  3063  001B2A  EF99  F00D         	goto	u7501
  3064  001B2E  EF9B  F00D         	goto	u7500
  3065  001B32                     u7501:
  3066  001B32  EFBF  F00D         	goto	l7918
  3067  001B36                     u7500:
  3068  001B36                     
  3069                           ; BSR set to: 0
  3070  001B36  51B4               	movf	Get_Temp_HUM@RH_Integral& (0+255),w,b
  3071  001B38  11B5               	iorwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),w,b
  3072  001B3A  B4D8               	btfsc	status,2,c
  3073  001B3C  EFA2  F00D         	goto	u7511
  3074  001B40  EFA4  F00D         	goto	u7510
  3075  001B44                     u7511:
  3076  001B44  EFBF  F00D         	goto	l7918
  3077  001B48                     u7510:
  3078  001B48                     
  3079                           ; BSR set to: 0
  3080  001B48  51B6               	movf	Get_Temp_HUM@T_Decimal& (0+255),w,b
  3081  001B4A  11B7               	iorwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),w,b
  3082  001B4C  B4D8               	btfsc	status,2,c
  3083  001B4E  EFAB  F00D         	goto	u7521
  3084  001B52  EFAD  F00D         	goto	u7520
  3085  001B56                     u7521:
  3086  001B56  EFBF  F00D         	goto	l7918
  3087  001B5A                     u7520:
  3088  001B5A                     
  3089                           ; BSR set to: 0
  3090  001B5A  51B8               	movf	Get_Temp_HUM@T_Integral& (0+255),w,b
  3091  001B5C  11B9               	iorwf	(Get_Temp_HUM@T_Integral+1)& (0+255),w,b
  3092  001B5E  B4D8               	btfsc	status,2,c
  3093  001B60  EFB4  F00D         	goto	u7531
  3094  001B64  EFB6  F00D         	goto	u7530
  3095  001B68                     u7531:
  3096  001B68  EFBF  F00D         	goto	l7918
  3097  001B6C                     u7530:
  3098  001B6C                     
  3099                           ; BSR set to: 0
  3100  001B6C  51BA               	movf	Get_Temp_HUM@Checksum& (0+255),w,b
  3101  001B6E  11BB               	iorwf	(Get_Temp_HUM@Checksum+1)& (0+255),w,b
  3102  001B70  A4D8               	btfss	status,2,c
  3103  001B72  EFBD  F00D         	goto	u7541
  3104  001B76  EFBF  F00D         	goto	u7540
  3105  001B7A                     u7541:
  3106  001B7A  EFC1  F00D         	goto	l7920
  3107  001B7E                     u7540:
  3108  001B7E                     l7918:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;Robot/sensors/DHT11/DHT.c: 19:     }
  3112  001B7E  EFE3  F00D         	goto	l1672
  3113  001B82                     l7920:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;Robot/sensors/DHT11/DHT.c: 21:     {;Robot/sensors/DHT11/DHT.c: 22:        DHT11_Start(
      +                          );
  3117  001B82  EC72  F010         	call	_DHT11_Start	;wreg free
  3118  001B86                     
  3119                           ;Robot/sensors/DHT11/DHT.c: 23:        DHT11_Check_Response();
  3120  001B86  EC49  F010         	call	_DHT11_Check_Response	;wreg free
  3121  001B8A                     
  3122                           ;Robot/sensors/DHT11/DHT.c: 24:        DHT11_Read_Data(RH_Decimal);
  3123  001B8A  C0B2  F046         	movff	Get_Temp_HUM@RH_Decimal,DHT11_Read_Data@data
  3124  001B8E  C0B3  F047         	movff	Get_Temp_HUM@RH_Decimal+1,DHT11_Read_Data@data+1
  3125  001B92  ECE4  F00D         	call	_DHT11_Read_Data	;wreg free
  3126  001B96                     
  3127                           ;Robot/sensors/DHT11/DHT.c: 25:        DHT11_Read_Data(RH_Integral);
  3128  001B96  C0B4  F046         	movff	Get_Temp_HUM@RH_Integral,DHT11_Read_Data@data
  3129  001B9A  C0B5  F047         	movff	Get_Temp_HUM@RH_Integral+1,DHT11_Read_Data@data+1
  3130  001B9E  ECE4  F00D         	call	_DHT11_Read_Data	;wreg free
  3131  001BA2                     
  3132                           ;Robot/sensors/DHT11/DHT.c: 26:        DHT11_Read_Data(T_Decimal);
  3133  001BA2  C0B6  F046         	movff	Get_Temp_HUM@T_Decimal,DHT11_Read_Data@data
  3134  001BA6  C0B7  F047         	movff	Get_Temp_HUM@T_Decimal+1,DHT11_Read_Data@data+1
  3135  001BAA  ECE4  F00D         	call	_DHT11_Read_Data	;wreg free
  3136  001BAE                     
  3137                           ;Robot/sensors/DHT11/DHT.c: 27:        DHT11_Read_Data(T_Integral);
  3138  001BAE  C0B8  F046         	movff	Get_Temp_HUM@T_Integral,DHT11_Read_Data@data
  3139  001BB2  C0B9  F047         	movff	Get_Temp_HUM@T_Integral+1,DHT11_Read_Data@data+1
  3140  001BB6  ECE4  F00D         	call	_DHT11_Read_Data	;wreg free
  3141  001BBA                     
  3142                           ;Robot/sensors/DHT11/DHT.c: 28:        DHT11_Read_Data(Checksum);
  3143  001BBA  C0BA  F046         	movff	Get_Temp_HUM@Checksum,DHT11_Read_Data@data
  3144  001BBE  C0BB  F047         	movff	Get_Temp_HUM@Checksum+1,DHT11_Read_Data@data+1
  3145  001BC2  ECE4  F00D         	call	_DHT11_Read_Data	;wreg free
  3146  001BC6                     l1672:
  3147  001BC6  0012               	return		;funcret
  3148  001BC8                     __end_of_Get_Temp_HUM:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _DHT11_Start *****************
  3152 ;; Defined at:
  3153 ;;		line 32 in file "Robot/sensors/DHT11/DHT.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        1 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    7
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_Get_Temp_HUM
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text16
  3182  0020E4                     __ptext16:
  3183                           	callstack 0
  3184  0020E4                     _DHT11_Start:
  3185                           	callstack 22
  3186  0020E4                     
  3187                           ;Robot/sensors/DHT11/DHT.c: 34:     TRISDbits.TRISD7=GPIO_DIRECTION_OUTPUT;
  3188  0020E4  9E95               	bcf	149,7,c	;volatile
  3189                           
  3190                           ;Robot/sensors/DHT11/DHT.c: 35:     LATDbits.LATD7=GPIO_LOW;
  3191  0020E6  9E8C               	bcf	140,7,c	;volatile
  3192  0020E8                     
  3193                           ;Robot/sensors/DHT11/DHT.c: 36:     _delay((unsigned long)((18)*(8000000/4000.0)));
  3194  0020E8  0E2F               	movlw	47
  3195  0020EA  6E46               	movwf	??_DHT11_Start^0,c
  3196  0020EC  0EC0               	movlw	192
  3197  0020EE                     u7977:
  3198  0020EE  2EE8               	decfsz	wreg,f,c
  3199  0020F0  D7FE               	bra	u7977
  3200  0020F2  2E46               	decfsz	??_DHT11_Start^0,f,c
  3201  0020F4  D7FC               	bra	u7977
  3202  0020F6                     
  3203                           ;Robot/sensors/DHT11/DHT.c: 37:     LATDbits.LATD7=GPIO_HIGH;
  3204  0020F6  8E8C               	bsf	140,7,c	;volatile
  3205                           
  3206                           ;Robot/sensors/DHT11/DHT.c: 38:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  3207  0020F8  0E14               	movlw	20
  3208  0020FA                     u7987:
  3209  0020FA  2EE8               	decfsz	wreg,f,c
  3210  0020FC  D7FE               	bra	u7987
  3211  0020FE                     
  3212                           ;Robot/sensors/DHT11/DHT.c: 39:     TRISDbits.TRISD7=GPIO_DIRECTION_INPUT;
  3213  0020FE  8E95               	bsf	149,7,c	;volatile
  3214  002100  0012               	return		;funcret
  3215  002102                     __end_of_DHT11_Start:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _DHT11_Read_Data *****************
  3219 ;; Defined at:
  3220 ;;		line 47 in file "Robot/sensors/DHT11/DHT.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  data            2   25[COMRAM] PTR unsigned char 
  3223 ;;		 -> Checksum(1), T_Integral(1), T_Decimal(1), RH_Integral(1), 
  3224 ;;		 -> RH_Decimal(1), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  i               1   28[COMRAM] unsigned char 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;Total ram usage:        4 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    7
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_Get_Temp_HUM
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text17
  3251  001BC8                     __ptext17:
  3252                           	callstack 0
  3253  001BC8                     _DHT11_Read_Data:
  3254                           	callstack 22
  3255  001BC8                     
  3256                           ;Robot/sensors/DHT11/DHT.c: 47: static void DHT11_Read_Data(uint8* data);Robot/sensors/D
      +                          HT11/DHT.c: 48: {;Robot/sensors/DHT11/DHT.c: 49:   uint8 i;;Robot/sensors/DHT11/DHT.c: 5
      +                          0:   *data = 0;
  3257  001BC8  C046  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  3258  001BCC  C047  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  3259  001BD0  0E00               	movlw	0
  3260  001BD2  6EDF               	movwf	indf2,c
  3261  001BD4                     
  3262                           ;Robot/sensors/DHT11/DHT.c: 51:     for(i=0;i<8;i++)
  3263  001BD4  0E00               	movlw	0
  3264  001BD6  6E49               	movwf	DHT11_Read_Data@i^0,c
  3265  001BD8                     l1692:
  3266  001BD8  AE83               	btfss	131,7,c	;volatile
  3267  001BDA  EFF1  F00D         	goto	u4561
  3268  001BDE  EFF3  F00D         	goto	u4560
  3269  001BE2                     u4561:
  3270  001BE2  EFEC  F00D         	goto	l1692
  3271  001BE6                     u4560:
  3272  001BE6                     
  3273                           ;Robot/sensors/DHT11/DHT.c: 54:         _delay((unsigned long)((40)*(8000000/4000000.0))
      +                          );
  3274  001BE6  0E1A               	movlw	26
  3275  001BE8                     u7997:
  3276  001BE8  2EE8               	decfsz	wreg,f,c
  3277  001BEA  D7FE               	bra	u7997
  3278  001BEC  D000               	nop2	
  3279  001BEE                     
  3280                           ;Robot/sensors/DHT11/DHT.c: 55:         if(PORTDbits.RD7 & 1)
  3281  001BEE  AE83               	btfss	131,7,c	;volatile
  3282  001BF0  EFFC  F00D         	goto	u4571
  3283  001BF4  EFFE  F00D         	goto	u4570
  3284  001BF8                     u4571:
  3285  001BF8  EF0D  F00E         	goto	l5748
  3286  001BFC                     u4570:
  3287  001BFC                     
  3288                           ;Robot/sensors/DHT11/DHT.c: 56:         {;Robot/sensors/DHT11/DHT.c: 57:             *da
      +                          ta = (((*data)<<1)|1);
  3289  001BFC  C046  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  3290  001C00  C047  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  3291  001C04  50DF               	movf	indf2,w,c
  3292  001C06  6E48               	movwf	??_DHT11_Read_Data^0,c
  3293  001C08  80D8               	bsf	status,0,c
  3294  001C0A  3448               	rlcf	??_DHT11_Read_Data^0,w,c
  3295  001C0C  C046  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  3296  001C10  C047  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  3297  001C14  6EDF               	movwf	indf2,c
  3298                           
  3299                           ;Robot/sensors/DHT11/DHT.c: 59:         }
  3300  001C16  EF1A  F00E         	goto	l1697
  3301  001C1A                     l5748:
  3302                           
  3303                           ;Robot/sensors/DHT11/DHT.c: 61:         {;Robot/sensors/DHT11/DHT.c: 62:             *da
      +                          ta = ((*data)<<1);
  3304  001C1A  C046  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  3305  001C1E  C047  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  3306  001C22  50DF               	movf	indf2,w,c
  3307  001C24  6E48               	movwf	??_DHT11_Read_Data^0,c
  3308  001C26  90D8               	bcf	status,0,c
  3309  001C28  3448               	rlcf	??_DHT11_Read_Data^0,w,c
  3310  001C2A  C046  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  3311  001C2E  C047  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  3312  001C32  6EDF               	movwf	indf2,c
  3313  001C34                     l1697:
  3314  001C34  BE83               	btfsc	131,7,c	;volatile
  3315  001C36  EF1F  F00E         	goto	u4581
  3316  001C3A  EF21  F00E         	goto	u4580
  3317  001C3E                     u4581:
  3318  001C3E  EF1A  F00E         	goto	l1697
  3319  001C42                     u4580:
  3320  001C42                     
  3321                           ;Robot/sensors/DHT11/DHT.c: 66:     }
  3322  001C42  2A49               	incf	DHT11_Read_Data@i^0,f,c
  3323  001C44  0E07               	movlw	7
  3324  001C46  6449               	cpfsgt	DHT11_Read_Data@i^0,c
  3325  001C48  EF28  F00E         	goto	u4591
  3326  001C4C  EF2A  F00E         	goto	u4590
  3327  001C50                     u4591:
  3328  001C50  EFEC  F00D         	goto	l1692
  3329  001C54                     u4590:
  3330  001C54  0012               	return		;funcret
  3331  001C56                     __end_of_DHT11_Read_Data:
  3332                           	callstack 0
  3333                           
  3334 ;; *************** function _DHT11_Check_Response *****************
  3335 ;; Defined at:
  3336 ;;		line 41 in file "Robot/sensors/DHT11/DHT.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		None
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    7
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_Get_Temp_HUM
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text18
  3365  002092                     __ptext18:
  3366                           	callstack 0
  3367  002092                     _DHT11_Check_Response:
  3368                           	callstack 22
  3369  002092                     l1678:
  3370  002092  BE83               	btfsc	131,7,c	;volatile
  3371  002094  EF4E  F010         	goto	u571
  3372  002098  EF50  F010         	goto	u570
  3373  00209C                     u571:
  3374  00209C  EF49  F010         	goto	l1678
  3375  0020A0                     u570:
  3376  0020A0                     l1681:
  3377  0020A0  AE83               	btfss	131,7,c	;volatile
  3378  0020A2  EF55  F010         	goto	u581
  3379  0020A6  EF57  F010         	goto	u580
  3380  0020AA                     u581:
  3381  0020AA  EF50  F010         	goto	l1681
  3382  0020AE                     u580:
  3383  0020AE                     l1684:
  3384  0020AE  BE83               	btfsc	131,7,c	;volatile
  3385  0020B0  EF5C  F010         	goto	u591
  3386  0020B4  EF5E  F010         	goto	u590
  3387  0020B8                     u591:
  3388  0020B8  EF57  F010         	goto	l1684
  3389  0020BC                     u590:
  3390  0020BC  0012               	return		;funcret
  3391  0020BE                     __end_of_DHT11_Check_Response:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  3395 ;; Defined at:
  3396 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  3399 ;;		 -> pinc0(1), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  ERRORSTATUS     1    0        unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      unsigned char 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        8 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    7
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text19
  3426  001DCC                     __ptext19:
  3427                           	callstack 0
  3428  001DCC                     _GPIO_Pin_Toggle_Logic:
  3429                           	callstack 23
  3430  001DCC                     
  3431                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  3432  001DCC  5046               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  3433  001DCE  1047               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  3434  001DD0  A4D8               	btfss	status,2,c
  3435  001DD2  EFED  F00E         	goto	u4871
  3436  001DD6  EFEF  F00E         	goto	u4870
  3437  001DDA                     u4871:
  3438  001DDA  EFF1  F00E         	goto	l5958
  3439  001DDE                     u4870:
  3440  001DDE                     
  3441                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  3442  001DDE  EF1D  F00F         	goto	l880
  3443  001DE2                     l5958:
  3444                           
  3445                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  3446  001DE2  C046  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  3447  001DE6  C047  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  3448  001DEA  50DF               	movf	indf2,w,c
  3449  001DEC  0B07               	andlw	7
  3450  001DEE  6E48               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
  3451  001DF0  0E01               	movlw	1
  3452  001DF2  6E49               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
  3453  001DF4  2A48               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
  3454  001DF6  EFFF  F00E         	goto	u4884
  3455  001DFA                     u4885:
  3456  001DFA  90D8               	bcf	status,0,c
  3457  001DFC  3649               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
  3458  001DFE                     u4884:
  3459  001DFE  2E48               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
  3460  001E00  EFFD  F00E         	goto	u4885
  3461  001E04  C046  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  3462  001E08  C047  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  3463  001E0C  30DF               	rrcf	indf2,w,c
  3464  001E0E  32E8               	rrcf	wreg,f,c
  3465  001E10  32E8               	rrcf	wreg,f,c
  3466  001E12  0B07               	andlw	7
  3467  001E14  6E4A               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
  3468  001E16  504A               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
  3469  001E18  0D02               	mullw	2
  3470  001E1A  0E8A               	movlw	low _lat_registers
  3471  001E1C  24F3               	addwf	243,w,c
  3472  001E1E  6ED9               	movwf	fsr2l,c
  3473  001E20  0E00               	movlw	high _lat_registers
  3474  001E22  20F4               	addwfc	prodh,w,c
  3475  001E24  6EDA               	movwf	fsr2h,c
  3476  001E26  CFDE F04B          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  3477  001E2A  CFDD F04C          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  3478  001E2E  C04B  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  3479  001E32  C04C  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  3480  001E36  5049               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
  3481  001E38  1ADF               	xorwf	indf2,f,c
  3482  001E3A                     l880:
  3483  001E3A  0012               	return		;funcret
  3484  001E3C                     __end_of_GPIO_Pin_Toggle_Logic:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _InterruptManagerLow *****************
  3488 ;; Defined at:
  3489 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;Total ram usage:        3 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    6
  3510 ;; This function calls:
  3511 ;;		_ADC_ISR
  3512 ;;		_INT1_ISR
  3513 ;;		_RB4_ISR
  3514 ;;		_RB5_ISR
  3515 ;;		_RB6_ISR
  3516 ;;		_RB7_ISR
  3517 ;; This function is called by:
  3518 ;;		Interrupt level 1
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	intcodelo
  3523  000018                     __pintcodelo:
  3524                           	callstack 0
  3525  000018                     _InterruptManagerLow:
  3526                           	callstack 19
  3527                           
  3528                           ;incstack = 0
  3529  000018  8066               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3530  00001A  CFD8 F043          	movff	status,??_InterruptManagerLow
  3531  00001E  CFE8 F044          	movff	wreg,??_InterruptManagerLow+1
  3532  000022  CFE0 F045          	movff	bsr,??_InterruptManagerLow+2
  3533  000026                     
  3534                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  3535  000026  A6F0               	btfss	240,3,c	;volatile
  3536  000028  EF18  F000         	goto	i1u309_21
  3537  00002C  EF1A  F000         	goto	i1u309_20
  3538  000030                     i1u309_21:
  3539  000030  EF23  F000         	goto	i1l1149
  3540  000034                     i1u309_20:
  3541  000034  A0F0               	btfss	240,0,c	;volatile
  3542  000036  EF1F  F000         	goto	i1u310_21
  3543  00003A  EF21  F000         	goto	i1u310_20
  3544  00003E                     i1u310_21:
  3545  00003E  EF23  F000         	goto	i1l1149
  3546  000042                     i1u310_20:
  3547  000042                     
  3548                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  3549  000042  ECCD  F010         	call	_INT1_ISR	;wreg free
  3550  000046                     i1l1149:
  3551                           
  3552                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3553  000046  A6F2               	btfss	242,3,c	;volatile
  3554  000048  EF28  F000         	goto	i1u311_21
  3555  00004C  EF2A  F000         	goto	i1u311_20
  3556  000050                     i1u311_21:
  3557  000050  EF43  F000         	goto	i1l1151
  3558  000054                     i1u311_20:
  3559  000054  A0F2               	btfss	242,0,c	;volatile
  3560  000056  EF2F  F000         	goto	i1u312_21
  3561  00005A  EF31  F000         	goto	i1u312_20
  3562  00005E                     i1u312_21:
  3563  00005E  EF43  F000         	goto	i1l1151
  3564  000062                     i1u312_20:
  3565  000062  A881               	btfss	129,4,c	;volatile
  3566  000064  EF36  F000         	goto	i1u313_21
  3567  000068  EF38  F000         	goto	i1u313_20
  3568  00006C                     i1u313_21:
  3569  00006C  EF43  F000         	goto	i1l1151
  3570  000070                     i1u313_20:
  3571  000070  A052               	btfss	_flags^0,0,c	;volatile
  3572  000072  EF3D  F000         	goto	i1u314_21
  3573  000076  EF3F  F000         	goto	i1u314_20
  3574  00007A                     i1u314_21:
  3575  00007A  EF43  F000         	goto	i1l1151
  3576  00007E                     i1u314_20:
  3577  00007E                     
  3578                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  3579  00007E  9052               	bcf	_flags^0,0,c	;volatile
  3580  000080                     
  3581                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  3582  000080  0E01               	movlw	1
  3583  000082  ECB6  F010         	call	_RB4_ISR
  3584  000086                     i1l1151:
  3585                           
  3586                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3587  000086  A6F2               	btfss	242,3,c	;volatile
  3588  000088  EF48  F000         	goto	i1u315_21
  3589  00008C  EF4A  F000         	goto	i1u315_20
  3590  000090                     i1u315_21:
  3591  000090  EF63  F000         	goto	i1l1153
  3592  000094                     i1u315_20:
  3593  000094  A0F2               	btfss	242,0,c	;volatile
  3594  000096  EF4F  F000         	goto	i1u316_21
  3595  00009A  EF51  F000         	goto	i1u316_20
  3596  00009E                     i1u316_21:
  3597  00009E  EF63  F000         	goto	i1l1153
  3598  0000A2                     i1u316_20:
  3599  0000A2  B881               	btfsc	129,4,c	;volatile
  3600  0000A4  EF56  F000         	goto	i1u317_21
  3601  0000A8  EF58  F000         	goto	i1u317_20
  3602  0000AC                     i1u317_21:
  3603  0000AC  EF63  F000         	goto	i1l1153
  3604  0000B0                     i1u317_20:
  3605  0000B0  B052               	btfsc	_flags^0,0,c	;volatile
  3606  0000B2  EF5D  F000         	goto	i1u318_21
  3607  0000B6  EF5F  F000         	goto	i1u318_20
  3608  0000BA                     i1u318_21:
  3609  0000BA  EF63  F000         	goto	i1l1153
  3610  0000BE                     i1u318_20:
  3611  0000BE                     
  3612                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  3613  0000BE  8052               	bsf	_flags^0,0,c	;volatile
  3614  0000C0                     
  3615                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  3616  0000C0  0E00               	movlw	0
  3617  0000C2  ECB6  F010         	call	_RB4_ISR
  3618  0000C6                     i1l1153:
  3619                           
  3620                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3621  0000C6  A6F2               	btfss	242,3,c	;volatile
  3622  0000C8  EF68  F000         	goto	i1u319_21
  3623  0000CC  EF6A  F000         	goto	i1u319_20
  3624  0000D0                     i1u319_21:
  3625  0000D0  EF83  F000         	goto	i1l1155
  3626  0000D4                     i1u319_20:
  3627  0000D4  A0F2               	btfss	242,0,c	;volatile
  3628  0000D6  EF6F  F000         	goto	i1u320_21
  3629  0000DA  EF71  F000         	goto	i1u320_20
  3630  0000DE                     i1u320_21:
  3631  0000DE  EF83  F000         	goto	i1l1155
  3632  0000E2                     i1u320_20:
  3633  0000E2  AA81               	btfss	129,5,c	;volatile
  3634  0000E4  EF76  F000         	goto	i1u321_21
  3635  0000E8  EF78  F000         	goto	i1u321_20
  3636  0000EC                     i1u321_21:
  3637  0000EC  EF83  F000         	goto	i1l1155
  3638  0000F0                     i1u321_20:
  3639  0000F0  A252               	btfss	_flags^0,1,c	;volatile
  3640  0000F2  EF7D  F000         	goto	i1u322_21
  3641  0000F6  EF7F  F000         	goto	i1u322_20
  3642  0000FA                     i1u322_21:
  3643  0000FA  EF83  F000         	goto	i1l1155
  3644  0000FE                     i1u322_20:
  3645  0000FE                     
  3646                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  3647  0000FE  9252               	bcf	_flags^0,1,c	;volatile
  3648  000100                     
  3649                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  3650  000100  0E01               	movlw	1
  3651  000102  ECA9  F010         	call	_RB5_ISR
  3652  000106                     i1l1155:
  3653                           
  3654                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3655  000106  A6F2               	btfss	242,3,c	;volatile
  3656  000108  EF88  F000         	goto	i1u323_21
  3657  00010C  EF8A  F000         	goto	i1u323_20
  3658  000110                     i1u323_21:
  3659  000110  EFA3  F000         	goto	i1l1157
  3660  000114                     i1u323_20:
  3661  000114  A0F2               	btfss	242,0,c	;volatile
  3662  000116  EF8F  F000         	goto	i1u324_21
  3663  00011A  EF91  F000         	goto	i1u324_20
  3664  00011E                     i1u324_21:
  3665  00011E  EFA3  F000         	goto	i1l1157
  3666  000122                     i1u324_20:
  3667  000122  BA81               	btfsc	129,5,c	;volatile
  3668  000124  EF96  F000         	goto	i1u325_21
  3669  000128  EF98  F000         	goto	i1u325_20
  3670  00012C                     i1u325_21:
  3671  00012C  EFA3  F000         	goto	i1l1157
  3672  000130                     i1u325_20:
  3673  000130  B252               	btfsc	_flags^0,1,c	;volatile
  3674  000132  EF9D  F000         	goto	i1u326_21
  3675  000136  EF9F  F000         	goto	i1u326_20
  3676  00013A                     i1u326_21:
  3677  00013A  EFA3  F000         	goto	i1l1157
  3678  00013E                     i1u326_20:
  3679  00013E                     
  3680                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  3681  00013E  8252               	bsf	_flags^0,1,c	;volatile
  3682  000140                     
  3683                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  3684  000140  0E00               	movlw	0
  3685  000142  ECA9  F010         	call	_RB5_ISR
  3686  000146                     i1l1157:
  3687                           
  3688                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3689  000146  A6F2               	btfss	242,3,c	;volatile
  3690  000148  EFA8  F000         	goto	i1u327_21
  3691  00014C  EFAA  F000         	goto	i1u327_20
  3692  000150                     i1u327_21:
  3693  000150  EFC3  F000         	goto	i1l1159
  3694  000154                     i1u327_20:
  3695  000154  A0F2               	btfss	242,0,c	;volatile
  3696  000156  EFAF  F000         	goto	i1u328_21
  3697  00015A  EFB1  F000         	goto	i1u328_20
  3698  00015E                     i1u328_21:
  3699  00015E  EFC3  F000         	goto	i1l1159
  3700  000162                     i1u328_20:
  3701  000162  AC81               	btfss	129,6,c	;volatile
  3702  000164  EFB6  F000         	goto	i1u329_21
  3703  000168  EFB8  F000         	goto	i1u329_20
  3704  00016C                     i1u329_21:
  3705  00016C  EFC3  F000         	goto	i1l1159
  3706  000170                     i1u329_20:
  3707  000170  A452               	btfss	_flags^0,2,c	;volatile
  3708  000172  EFBD  F000         	goto	i1u330_21
  3709  000176  EFBF  F000         	goto	i1u330_20
  3710  00017A                     i1u330_21:
  3711  00017A  EFC3  F000         	goto	i1l1159
  3712  00017E                     i1u330_20:
  3713  00017E                     
  3714                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  3715  00017E  9452               	bcf	_flags^0,2,c	;volatile
  3716  000180                     
  3717                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  3718  000180  0E01               	movlw	1
  3719  000182  EC9C  F010         	call	_RB6_ISR
  3720  000186                     i1l1159:
  3721                           
  3722                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3723  000186  A6F2               	btfss	242,3,c	;volatile
  3724  000188  EFC8  F000         	goto	i1u331_21
  3725  00018C  EFCA  F000         	goto	i1u331_20
  3726  000190                     i1u331_21:
  3727  000190  EFE3  F000         	goto	i1l1161
  3728  000194                     i1u331_20:
  3729  000194  A0F2               	btfss	242,0,c	;volatile
  3730  000196  EFCF  F000         	goto	i1u332_21
  3731  00019A  EFD1  F000         	goto	i1u332_20
  3732  00019E                     i1u332_21:
  3733  00019E  EFE3  F000         	goto	i1l1161
  3734  0001A2                     i1u332_20:
  3735  0001A2  BC81               	btfsc	129,6,c	;volatile
  3736  0001A4  EFD6  F000         	goto	i1u333_21
  3737  0001A8  EFD8  F000         	goto	i1u333_20
  3738  0001AC                     i1u333_21:
  3739  0001AC  EFE3  F000         	goto	i1l1161
  3740  0001B0                     i1u333_20:
  3741  0001B0  B452               	btfsc	_flags^0,2,c	;volatile
  3742  0001B2  EFDD  F000         	goto	i1u334_21
  3743  0001B6  EFDF  F000         	goto	i1u334_20
  3744  0001BA                     i1u334_21:
  3745  0001BA  EFE3  F000         	goto	i1l1161
  3746  0001BE                     i1u334_20:
  3747  0001BE                     
  3748                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  3749  0001BE  8452               	bsf	_flags^0,2,c	;volatile
  3750  0001C0                     
  3751                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  3752  0001C0  0E00               	movlw	0
  3753  0001C2  EC9C  F010         	call	_RB6_ISR
  3754  0001C6                     i1l1161:
  3755                           
  3756                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3757  0001C6  A6F2               	btfss	242,3,c	;volatile
  3758  0001C8  EFE8  F000         	goto	i1u335_21
  3759  0001CC  EFEA  F000         	goto	i1u335_20
  3760  0001D0                     i1u335_21:
  3761  0001D0  EF03  F001         	goto	i1l1163
  3762  0001D4                     i1u335_20:
  3763  0001D4  A0F2               	btfss	242,0,c	;volatile
  3764  0001D6  EFEF  F000         	goto	i1u336_21
  3765  0001DA  EFF1  F000         	goto	i1u336_20
  3766  0001DE                     i1u336_21:
  3767  0001DE  EF03  F001         	goto	i1l1163
  3768  0001E2                     i1u336_20:
  3769  0001E2  AE81               	btfss	129,7,c	;volatile
  3770  0001E4  EFF6  F000         	goto	i1u337_21
  3771  0001E8  EFF8  F000         	goto	i1u337_20
  3772  0001EC                     i1u337_21:
  3773  0001EC  EF03  F001         	goto	i1l1163
  3774  0001F0                     i1u337_20:
  3775  0001F0  A652               	btfss	_flags^0,3,c	;volatile
  3776  0001F2  EFFD  F000         	goto	i1u338_21
  3777  0001F6  EFFF  F000         	goto	i1u338_20
  3778  0001FA                     i1u338_21:
  3779  0001FA  EF03  F001         	goto	i1l1163
  3780  0001FE                     i1u338_20:
  3781  0001FE                     
  3782                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  3783  0001FE  9652               	bcf	_flags^0,3,c	;volatile
  3784  000200                     
  3785                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  3786  000200  0E01               	movlw	1
  3787  000202  EC8F  F010         	call	_RB7_ISR
  3788  000206                     i1l1163:
  3789                           
  3790                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3791  000206  A6F2               	btfss	242,3,c	;volatile
  3792  000208  EF08  F001         	goto	i1u339_21
  3793  00020C  EF0A  F001         	goto	i1u339_20
  3794  000210                     i1u339_21:
  3795  000210  EF23  F001         	goto	i1l1165
  3796  000214                     i1u339_20:
  3797  000214  A0F2               	btfss	242,0,c	;volatile
  3798  000216  EF0F  F001         	goto	i1u340_21
  3799  00021A  EF11  F001         	goto	i1u340_20
  3800  00021E                     i1u340_21:
  3801  00021E  EF23  F001         	goto	i1l1165
  3802  000222                     i1u340_20:
  3803  000222  BE81               	btfsc	129,7,c	;volatile
  3804  000224  EF16  F001         	goto	i1u341_21
  3805  000228  EF18  F001         	goto	i1u341_20
  3806  00022C                     i1u341_21:
  3807  00022C  EF23  F001         	goto	i1l1165
  3808  000230                     i1u341_20:
  3809  000230  B652               	btfsc	_flags^0,3,c	;volatile
  3810  000232  EF1D  F001         	goto	i1u342_21
  3811  000236  EF1F  F001         	goto	i1u342_20
  3812  00023A                     i1u342_21:
  3813  00023A  EF23  F001         	goto	i1l1165
  3814  00023E                     i1u342_20:
  3815  00023E                     
  3816                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  3817  00023E  8652               	bsf	_flags^0,3,c	;volatile
  3818  000240                     
  3819                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  3820  000240  0E00               	movlw	0
  3821  000242  EC8F  F010         	call	_RB7_ISR
  3822  000246                     i1l1165:
  3823                           
  3824                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  3825  000246  AC9D               	btfss	157,6,c	;volatile
  3826  000248  EF28  F001         	goto	i1u343_21
  3827  00024C  EF2A  F001         	goto	i1u343_20
  3828  000250                     i1u343_21:
  3829  000250  EF33  F001         	goto	i1l1167
  3830  000254                     i1u343_20:
  3831  000254  AC9E               	btfss	158,6,c	;volatile
  3832  000256  EF2F  F001         	goto	i1u344_21
  3833  00025A  EF31  F001         	goto	i1u344_20
  3834  00025E                     i1u344_21:
  3835  00025E  EF33  F001         	goto	i1l1167
  3836  000262                     i1u344_20:
  3837  000262                     
  3838                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
  3839  000262  ECCF  F010         	call	_ADC_ISR	;wreg free
  3840  000266                     i1l1167:
  3841                           
  3842                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  3843  000266  A09D               	btfss	157,0,c	;volatile
  3844  000268  EF38  F001         	goto	i1u345_21
  3845  00026C  EF3A  F001         	goto	i1u345_20
  3846  000270                     i1u345_21:
  3847  000270  EF3B  F001         	goto	i1l1170
  3848  000274                     i1u345_20:
  3849  000274  509E               	movf	158,w,c	;volatile
  3850  000276                     i1l1170:
  3851  000276  C045  FFE0         	movff	??_InterruptManagerLow+2,bsr
  3852  00027A  C044  FFE8         	movff	??_InterruptManagerLow+1,wreg
  3853  00027E  C043  FFD8         	movff	??_InterruptManagerLow,status
  3854  000282  9066               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3855  000284  0010               	retfie	
  3856  000286                     __end_of_InterruptManagerLow:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _RB7_ISR *****************
  3860 ;; Defined at:
  3861 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  Handler_Sele    1    wreg     unsigned char 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  Handler_Sele    1   21[COMRAM] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;Total ram usage:        1 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    5
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_InterruptManagerLow
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text21
  3890  00211E                     __ptext21:
  3891                           	callstack 0
  3892  00211E                     _RB7_ISR:
  3893                           	callstack 19
  3894                           
  3895                           ;incstack = 0
  3896                           ;RB7_ISR@Handler_Select stored from wreg
  3897  00211E  6E42               	movwf	RB7_ISR@Handler_Select^0,c
  3898  002120                     
  3899                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  3900  002120  90F2               	bcf	242,0,c	;volatile
  3901  002122                     
  3902                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  3903  002122  5042               	movf	RB7_ISR@Handler_Select^0,w,c
  3904  002124  B4D8               	btfsc	status,2,c
  3905  002126  EF97  F010         	goto	i1u121_21
  3906  00212A  EF99  F010         	goto	i1u121_20
  3907  00212E                     i1u121_21:
  3908  00212E  EF9B  F010         	goto	i1l3282
  3909  002132                     i1u121_20:
  3910  002132  EF9B  F010         	goto	i1l1276
  3911  002136                     i1l3282:
  3912  002136                     i1l1276:
  3913  002136  0012               	return		;funcret
  3914  002138                     __end_of_RB7_ISR:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _RB6_ISR *****************
  3918 ;; Defined at:
  3919 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  Handler_Sele    1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  Handler_Sele    1   21[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        1 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    5
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_InterruptManagerLow
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text22
  3948  002138                     __ptext22:
  3949                           	callstack 0
  3950  002138                     _RB6_ISR:
  3951                           	callstack 19
  3952                           
  3953                           ;incstack = 0
  3954                           ;RB6_ISR@Handler_Select stored from wreg
  3955  002138  6E42               	movwf	RB6_ISR@Handler_Select^0,c
  3956  00213A                     
  3957                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  3958  00213A  90F2               	bcf	242,0,c	;volatile
  3959  00213C                     
  3960                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  3961  00213C  5042               	movf	RB6_ISR@Handler_Select^0,w,c
  3962  00213E  B4D8               	btfsc	status,2,c
  3963  002140  EFA4  F010         	goto	i1u120_21
  3964  002144  EFA6  F010         	goto	i1u120_20
  3965  002148                     i1u120_21:
  3966  002148  EFA8  F010         	goto	i1l3272
  3967  00214C                     i1u120_20:
  3968  00214C  EFA8  F010         	goto	i1l1267
  3969  002150                     i1l3272:
  3970  002150                     i1l1267:
  3971  002150  0012               	return		;funcret
  3972  002152                     __end_of_RB6_ISR:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function _RB5_ISR *****************
  3976 ;; Defined at:
  3977 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  Handler_Sele    1    wreg     unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  Handler_Sele    1   21[COMRAM] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        1 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    5
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_InterruptManagerLow
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text23
  4006  002152                     __ptext23:
  4007                           	callstack 0
  4008  002152                     _RB5_ISR:
  4009                           	callstack 19
  4010                           
  4011                           ;incstack = 0
  4012                           ;RB5_ISR@Handler_Select stored from wreg
  4013  002152  6E42               	movwf	RB5_ISR@Handler_Select^0,c
  4014  002154                     
  4015                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  4016  002154  90F2               	bcf	242,0,c	;volatile
  4017  002156                     
  4018                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  4019  002156  5042               	movf	RB5_ISR@Handler_Select^0,w,c
  4020  002158  B4D8               	btfsc	status,2,c
  4021  00215A  EFB1  F010         	goto	i1u119_21
  4022  00215E  EFB3  F010         	goto	i1u119_20
  4023  002162                     i1u119_21:
  4024  002162  EFB5  F010         	goto	i1l3262
  4025  002166                     i1u119_20:
  4026  002166  EFB5  F010         	goto	i1l1258
  4027  00216A                     i1l3262:
  4028  00216A                     i1l1258:
  4029  00216A  0012               	return		;funcret
  4030  00216C                     __end_of_RB5_ISR:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _RB4_ISR *****************
  4034 ;; Defined at:
  4035 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  Handler_Sele    1    wreg     unsigned char 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  Handler_Sele    1   21[COMRAM] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;Total ram usage:        1 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    5
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_InterruptManagerLow
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text24
  4064  00216C                     __ptext24:
  4065                           	callstack 0
  4066  00216C                     _RB4_ISR:
  4067                           	callstack 19
  4068                           
  4069                           ;incstack = 0
  4070                           ;RB4_ISR@Handler_Select stored from wreg
  4071  00216C  6E42               	movwf	RB4_ISR@Handler_Select^0,c
  4072  00216E                     
  4073                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  4074  00216E  90F2               	bcf	242,0,c	;volatile
  4075  002170                     
  4076                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  4077  002170  5042               	movf	RB4_ISR@Handler_Select^0,w,c
  4078  002172  B4D8               	btfsc	status,2,c
  4079  002174  EFBE  F010         	goto	i1u118_21
  4080  002178  EFC0  F010         	goto	i1u118_20
  4081  00217C                     i1u118_21:
  4082  00217C  EFC2  F010         	goto	i1l3252
  4083  002180                     i1u118_20:
  4084  002180  EFC2  F010         	goto	i1l1249
  4085  002184                     i1l3252:
  4086  002184                     i1l1249:
  4087  002184  0012               	return		;funcret
  4088  002186                     __end_of_RB4_ISR:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _INT1_ISR *****************
  4092 ;; Defined at:
  4093 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		None
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    5
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_InterruptManagerLow
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text25
  4122  00219A                     __ptext25:
  4123                           	callstack 0
  4124  00219A                     _INT1_ISR:
  4125                           	callstack 19
  4126  00219A                     
  4127                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  4128  00219A  90F0               	bcf	240,0,c	;volatile
  4129  00219C  0012               	return		;funcret
  4130  00219E                     __end_of_INT1_ISR:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _ADC_ISR *****************
  4134 ;; Defined at:
  4135 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		None
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    5
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_InterruptManagerLow
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text26
  4164  00219E                     __ptext26:
  4165                           	callstack 0
  4166  00219E                     _ADC_ISR:
  4167                           	callstack 19
  4168  00219E  0012               	return		;funcret
  4169  0021A0                     __end_of_ADC_ISR:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _InterruptManagerHigh *****************
  4173 ;; Defined at:
  4174 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;Total ram usage:        6 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    4
  4195 ;; This function calls:
  4196 ;;		_EUSART_Rx_ISR
  4197 ;;		_EUSART_Tx_ISR
  4198 ;;		_TMR0_ISR
  4199 ;; This function is called by:
  4200 ;;		Interrupt level 2
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	intcode
  4205  000008                     __pintcode:
  4206                           	callstack 0
  4207  000008                     _InterruptManagerHigh:
  4208                           	callstack 19
  4209                           
  4210                           ;incstack = 0
  4211  000008  8266               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4212  00000A  ED0B  F00C         	call	int_func,f	;refresh shadow registers
  4213                           
  4214                           	psect	intcode_body
  4215  001816                     __pintcode_body:
  4216                           	callstack 19
  4217  001816                     int_func:
  4218                           	callstack 19
  4219  001816  0006               	pop		; remove dummy address from shadow register refresh
  4220  001818  CFFA F03C          	movff	pclath,??_InterruptManagerHigh
  4221  00181C  CFFB F03D          	movff	pclatu,??_InterruptManagerHigh+1
  4222  001820  CFD9 F03E          	movff	fsr2l,??_InterruptManagerHigh+2
  4223  001824  CFDA F03F          	movff	fsr2h,??_InterruptManagerHigh+3
  4224  001828  CFF3 F040          	movff	prodl,??_InterruptManagerHigh+4
  4225  00182C  CFF4 F041          	movff	prodh,??_InterruptManagerHigh+5
  4226  001830                     
  4227                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  4228  001830  AAF2               	btfss	242,5,c	;volatile
  4229  001832  EF1D  F00C         	goto	i2u615_41
  4230  001836  EF1F  F00C         	goto	i2u615_40
  4231  00183A                     i2u615_41:
  4232  00183A  EF28  F00C         	goto	i2l1128
  4233  00183E                     i2u615_40:
  4234  00183E  A4F2               	btfss	242,2,c	;volatile
  4235  001840  EF24  F00C         	goto	i2u616_41
  4236  001844  EF26  F00C         	goto	i2u616_40
  4237  001848                     i2u616_41:
  4238  001848  EF28  F00C         	goto	i2l1128
  4239  00184C                     i2u616_40:
  4240  00184C                     
  4241                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  4242  00184C  ECAA  F00F         	call	_TMR0_ISR	;wreg free
  4243  001850                     i2l1128:
  4244                           
  4245                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  4246  001850  A29D               	btfss	157,1,c	;volatile
  4247  001852  EF2D  F00C         	goto	i2u617_41
  4248  001856  EF2F  F00C         	goto	i2u617_40
  4249  00185A                     i2u617_41:
  4250  00185A  EF30  F00C         	goto	i2l1130
  4251  00185E                     i2u617_40:
  4252  00185E  509E               	movf	158,w,c	;volatile
  4253  001860                     i2l1130:
  4254                           
  4255                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  4256  001860  A2A0               	btfss	160,1,c	;volatile
  4257  001862  EF35  F00C         	goto	i2u618_41
  4258  001866  EF37  F00C         	goto	i2u618_40
  4259  00186A                     i2u618_41:
  4260  00186A  EF38  F00C         	goto	i2l1132
  4261  00186E                     i2u618_40:
  4262  00186E  50A1               	movf	161,w,c	;volatile
  4263  001870                     i2l1132:
  4264                           
  4265                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  4266  001870  A0A0               	btfss	160,0,c	;volatile
  4267  001872  EF3D  F00C         	goto	i2u619_41
  4268  001876  EF3F  F00C         	goto	i2u619_40
  4269  00187A                     i2u619_41:
  4270  00187A  EF40  F00C         	goto	i2l1134
  4271  00187E                     i2u619_40:
  4272  00187E  50A1               	movf	161,w,c	;volatile
  4273  001880                     i2l1134:
  4274                           
  4275                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  4276  001880  AA9D               	btfss	157,5,c	;volatile
  4277  001882  EF45  F00C         	goto	i2u620_41
  4278  001886  EF47  F00C         	goto	i2u620_40
  4279  00188A                     i2u620_41:
  4280  00188A  EF50  F00C         	goto	i2l1136
  4281  00188E                     i2u620_40:
  4282  00188E  AA9E               	btfss	158,5,c	;volatile
  4283  001890  EF4C  F00C         	goto	i2u621_41
  4284  001894  EF4E  F00C         	goto	i2u621_40
  4285  001898                     i2u621_41:
  4286  001898  EF50  F00C         	goto	i2l1136
  4287  00189C                     i2u621_40:
  4288  00189C                     
  4289                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  4290  00189C  ECD1  F010         	call	_EUSART_Rx_ISR	;wreg free
  4291  0018A0                     i2l1136:
  4292                           
  4293                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  4294  0018A0  A89D               	btfss	157,4,c	;volatile
  4295  0018A2  EF55  F00C         	goto	i2u622_41
  4296  0018A6  EF57  F00C         	goto	i2u622_40
  4297  0018AA                     i2u622_41:
  4298  0018AA  EF60  F00C         	goto	i2l1138
  4299  0018AE                     i2u622_40:
  4300  0018AE  A89E               	btfss	158,4,c	;volatile
  4301  0018B0  EF5C  F00C         	goto	i2u623_41
  4302  0018B4  EF5E  F00C         	goto	i2u623_40
  4303  0018B8                     i2u623_41:
  4304  0018B8  EF60  F00C         	goto	i2l1138
  4305  0018BC                     i2u623_40:
  4306  0018BC                     
  4307                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  4308  0018BC  ECD0  F010         	call	_EUSART_Tx_ISR	;wreg free
  4309  0018C0                     i2l1138:
  4310                           
  4311                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  4312  0018C0  A6A0               	btfss	160,3,c	;volatile
  4313  0018C2  EF65  F00C         	goto	i2u624_41
  4314  0018C6  EF67  F00C         	goto	i2u624_40
  4315  0018CA                     i2u624_41:
  4316  0018CA  EF68  F00C         	goto	i2l1140
  4317  0018CE                     i2u624_40:
  4318  0018CE  50A1               	movf	161,w,c	;volatile
  4319  0018D0                     i2l1140:
  4320                           
  4321                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  4322  0018D0  A69D               	btfss	157,3,c	;volatile
  4323  0018D2  EF6D  F00C         	goto	i2u625_41
  4324  0018D6  EF6F  F00C         	goto	i2u625_40
  4325  0018DA                     i2u625_41:
  4326  0018DA  EF70  F00C         	goto	i2l1143
  4327  0018DE                     i2u625_40:
  4328  0018DE  509E               	movf	158,w,c	;volatile
  4329  0018E0                     i2l1143:
  4330  0018E0  C041  FFF4         	movff	??_InterruptManagerHigh+5,prodh
  4331  0018E4  C040  FFF3         	movff	??_InterruptManagerHigh+4,prodl
  4332  0018E8  C03F  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  4333  0018EC  C03E  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  4334  0018F0  C03D  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  4335  0018F4  C03C  FFFA         	movff	??_InterruptManagerHigh,pclath
  4336  0018F8  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4337  0018FA  0011               	retfie		f
  4338  0018FC                     __end_of_InterruptManagerHigh:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _TMR0_ISR *****************
  4342 ;; Defined at:
  4343 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;Total ram usage:        2 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    3
  4364 ;; This function calls:
  4365 ;;		Absolute function
  4366 ;;		_Timer0_Handler
  4367 ;; This function is called by:
  4368 ;;		_InterruptManagerHigh
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text28
  4373  001F54                     __ptext28:
  4374                           	callstack 0
  4375  001F54                     _TMR0_ISR:
  4376                           	callstack 19
  4377  001F54                     
  4378                           ;MCAL/Timer0/hal_timer0.c: 220:     (INTCONbits.TMR0IF = 0);
  4379  001F54  94F2               	bcf	242,2,c	;volatile
  4380  001F56                     
  4381                           ;MCAL/Timer0/hal_timer0.c: 228:     TMR0H = (uint8_t) (( (preloaded_val + 2) >> 8));
  4382  001F56  0E02               	movlw	2
  4383  001F58  2401               	addwf	_preloaded_val^0,w,c
  4384  001F5A  6E3A               	movwf	??_TMR0_ISR^0,c
  4385  001F5C  0E00               	movlw	0
  4386  001F5E  2002               	addwfc	(_preloaded_val+1)^0,w,c
  4387  001F60  6E3B               	movwf	(??_TMR0_ISR+1)^0,c
  4388  001F62  C03B  F03A         	movff	??_TMR0_ISR+1,??_TMR0_ISR
  4389  001F66  6A3B               	clrf	(??_TMR0_ISR+1)^0,c
  4390  001F68  503A               	movf	??_TMR0_ISR^0,w,c
  4391  001F6A  6ED7               	movwf	215,c	;volatile
  4392                           
  4393                           ;MCAL/Timer0/hal_timer0.c: 229:     TMR0L = (uint8_t) ((preloaded_val + 2) & 0x00ff);
  4394  001F6C  5001               	movf	_preloaded_val^0,w,c
  4395  001F6E  0F02               	addlw	2
  4396  001F70  6ED6               	movwf	214,c	;volatile
  4397                           
  4398                           ;MCAL/Timer0/hal_timer0.c: 231:     if(tmr0_InterruptHandler)
  4399  001F72  5003               	movf	_tmr0_InterruptHandler^0,w,c
  4400  001F74  1004               	iorwf	(_tmr0_InterruptHandler+1)^0,w,c
  4401  001F76  B4D8               	btfsc	status,2,c
  4402  001F78  EFC0  F00F         	goto	i2u489_41
  4403  001F7C  EFC2  F00F         	goto	i2u489_40
  4404  001F80                     i2u489_41:
  4405  001F80  EFCE  F00F         	goto	i2l1543
  4406  001F84                     i2u489_40:
  4407  001F84                     
  4408                           ;MCAL/Timer0/hal_timer0.c: 232:     {;MCAL/Timer0/hal_timer0.c: 233:         tmr0_Interr
      +                          uptHandler();
  4409  001F84  D802               	call	i2u490_48
  4410  001F86  EFCE  F00F         	goto	i2u490_49
  4411  001F8A                     i2u490_48:
  4412  001F8A  0005               	push	
  4413  001F8C  6EFA               	movwf	pclath,c
  4414  001F8E  5003               	movf	_tmr0_InterruptHandler^0,w,c
  4415  001F90  6EFD               	movwf	tosl,c
  4416  001F92  5004               	movf	(_tmr0_InterruptHandler+1)^0,w,c
  4417  001F94  6EFE               	movwf	tosh,c
  4418  001F96  6AFF               	clrf	tosu,c
  4419  001F98  50FA               	movf	pclath,w,c
  4420  001F9A  0012               	return		;indir
  4421  001F9C                     i2u490_49:
  4422  001F9C                     i2l1543:
  4423  001F9C  0012               	return		;funcret
  4424  001F9E                     __end_of_TMR0_ISR:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _Timer0_Handler *****************
  4428 ;; Defined at:
  4429 ;;		line 249 in file "Robot/Navigation/robot_navigation.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    2
  4450 ;; This function calls:
  4451 ;;		_ECU_DC_Motor_Stop
  4452 ;; This function is called by:
  4453 ;;		_TMR0_ISR
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text29
  4458  0020BE                     __ptext29:
  4459                           	callstack 0
  4460  0020BE                     _Timer0_Handler:
  4461                           	callstack 19
  4462  0020BE                     
  4463                           ;Robot/Navigation/robot_navigation.c: 251:     ECU_DC_Motor_Stop(&W1_W5_W2_W6_Motor_Cont
      +                          rol);
  4464  0020BE  0E63               	movlw	low _W1_W5_W2_W6_Motor_Control
  4465  0020C0  6E37               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  4466  0020C2  0E00               	movlw	high _W1_W5_W2_W6_Motor_Control
  4467  0020C4  6E38               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  4468  0020C6  EC12  F010         	call	_ECU_DC_Motor_Stop	;wreg free
  4469                           
  4470                           ;Robot/Navigation/robot_navigation.c: 252:     ECU_DC_Motor_Stop(&W3_Motor_Control);
  4471  0020CA  0E61               	movlw	low _W3_Motor_Control
  4472  0020CC  6E37               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  4473  0020CE  0E00               	movlw	high _W3_Motor_Control
  4474  0020D0  6E38               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  4475  0020D2  EC12  F010         	call	_ECU_DC_Motor_Stop	;wreg free
  4476                           
  4477                           ;Robot/Navigation/robot_navigation.c: 253:     ECU_DC_Motor_Stop(&W4_Motor_Control);
  4478  0020D6  0E5F               	movlw	low _W4_Motor_Control
  4479  0020D8  6E37               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  4480  0020DA  0E00               	movlw	high _W4_Motor_Control
  4481  0020DC  6E38               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  4482  0020DE  EC12  F010         	call	_ECU_DC_Motor_Stop	;wreg free
  4483  0020E2  0012               	return		;funcret
  4484  0020E4                     __end_of_Timer0_Handler:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _ECU_DC_Motor_Stop *****************
  4488 ;; Defined at:
  4489 ;;		line 82 in file "ECU/DC_Motor/ecu_dc_motor.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  dc_motor        2   10[COMRAM] PTR const struct .
  4492 ;;		 -> W4_Motor_Control(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control(2), 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  ret_value       1    0        unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      unsigned char 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:        3 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    1
  4511 ;; This function calls:
  4512 ;;		i2_GPIO_Pin_Write_Logic
  4513 ;; This function is called by:
  4514 ;;		_Timer0_Handler
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text30
  4519  002024                     __ptext30:
  4520                           	callstack 0
  4521  002024                     _ECU_DC_Motor_Stop:
  4522                           	callstack 19
  4523  002024                     
  4524                           ;ECU/DC_Motor/ecu_dc_motor.c: 85:     if(((void*)0) == dc_motor)
  4525  002024  5037               	movf	ECU_DC_Motor_Stop@dc_motor^0,w,c
  4526  002026  1038               	iorwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
  4527  002028  A4D8               	btfss	status,2,c
  4528  00202A  EF19  F010         	goto	i2u425_41
  4529  00202E  EF1B  F010         	goto	i2u425_40
  4530  002032                     i2u425_41:
  4531  002032  EF1D  F010         	goto	i2l5420
  4532  002036                     i2u425_40:
  4533  002036                     
  4534                           ;ECU/DC_Motor/ecu_dc_motor.c: 88:     }
  4535  002036  EF2F  F010         	goto	i2l70
  4536  00203A                     i2l5420:
  4537                           
  4538                           ;ECU/DC_Motor/ecu_dc_motor.c: 90:     {;ECU/DC_Motor/ecu_dc_motor.c: 91:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor[0x01U]) , GPIO_LOW );
  4539  00203A  0E01               	movlw	1
  4540  00203C  2437               	addwf	ECU_DC_Motor_Stop@dc_motor^0,w,c
  4541  00203E  6E2D               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  4542  002040  0E00               	movlw	0
  4543  002042  2038               	addwfc	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
  4544  002044  6E2E               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  4545  002046  0E00               	movlw	0
  4546  002048  6E2F               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  4547  00204A  EC7C  F00B         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  4548                           
  4549                           ;ECU/DC_Motor/ecu_dc_motor.c: 92:         GPIO_Pin_Write_Logic(&(dc_motor->dc_motor[0x00
      +                          U]) , GPIO_LOW );
  4550  00204E  C037  F02D         	movff	ECU_DC_Motor_Stop@dc_motor,i2GPIO_Pin_Write_Logic@_pin_config
  4551  002052  C038  F02E         	movff	ECU_DC_Motor_Stop@dc_motor+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  4552  002056  0E00               	movlw	0
  4553  002058  6E2F               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  4554  00205A  EC7C  F00B         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  4555  00205E                     i2l70:
  4556  00205E  0012               	return		;funcret
  4557  002060                     __end_of_ECU_DC_Motor_Stop:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function i2_GPIO_Pin_Write_Logic *****************
  4561 ;; Defined at:
  4562 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  4565 ;;		 -> pinc0(1), lcd1(6), CCP2_Obj(10), CCP1_Obj(10), 
  4566 ;;		 -> W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), 
  4567 ;;		 -> W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
  4568 ;;  logic           1    2[COMRAM] enum E2958
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  ERRORSTATUS     1    0        unsigned char 
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      unsigned char 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4580 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;Total ram usage:       10 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_ECU_DC_Motor_Stop
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text31
  4594  0016F8                     __ptext31:
  4595                           	callstack 0
  4596  0016F8                     i2_GPIO_Pin_Write_Logic:
  4597                           	callstack 19
  4598  0016F8                     
  4599                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  4600  0016F8  502D               	movf	i2GPIO_Pin_Write_Logic@_pin_config^0,w,c
  4601  0016FA  102E               	iorwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  4602  0016FC  B4D8               	btfsc	status,2,c
  4603  0016FE  EF83  F00B         	goto	i2u420_41
  4604  001702  EF85  F00B         	goto	i2u420_40
  4605  001706                     i2u420_41:
  4606  001706  EF94  F00B         	goto	i2l5388
  4607  00170A                     i2u420_40:
  4608  00170A  C02D  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  4609  00170E  C02E  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  4610  001712  50DF               	movf	indf2,w,c
  4611  001714  0B07               	andlw	7
  4612  001716  6E30               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  4613  001718  0E07               	movlw	7
  4614  00171A  6430               	cpfsgt	??i2_GPIO_Pin_Write_Logic^0,c
  4615  00171C  EF92  F00B         	goto	i2u421_41
  4616  001720  EF94  F00B         	goto	i2u421_40
  4617  001724                     i2u421_41:
  4618  001724  EFF5  F00B         	goto	i2l5396
  4619  001728                     i2u421_40:
  4620  001728                     i2l5388:
  4621                           
  4622                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  4623  001728  EF0A  F00C         	goto	i2l868
  4624  00172C                     i2l5390:
  4625                           
  4626                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  4627  00172C  C02D  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  4628  001730  C02E  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  4629  001734  50DF               	movf	indf2,w,c
  4630  001736  0B07               	andlw	7
  4631  001738  6E30               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  4632  00173A  0E01               	movlw	1
  4633  00173C  6E31               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  4634  00173E  2A30               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
  4635  001740  EFA4  F00B         	goto	i2u422_44
  4636  001744                     i2u422_45:
  4637  001744  90D8               	bcf	status,0,c
  4638  001746  3631               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
  4639  001748                     i2u422_44:
  4640  001748  2E30               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
  4641  00174A  EFA2  F00B         	goto	i2u422_45
  4642  00174E  5031               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  4643  001750  0AFF               	xorlw	255
  4644  001752  6E32               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
  4645  001754  C02D  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  4646  001758  C02E  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  4647  00175C  30DF               	rrcf	indf2,w,c
  4648  00175E  32E8               	rrcf	wreg,f,c
  4649  001760  32E8               	rrcf	wreg,f,c
  4650  001762  0B07               	andlw	7
  4651  001764  6E33               	movwf	(??i2_GPIO_Pin_Write_Logic+3)^0,c
  4652  001766  5033               	movf	(??i2_GPIO_Pin_Write_Logic+3)^0,w,c
  4653  001768  0D02               	mullw	2
  4654  00176A  0E8A               	movlw	low _lat_registers
  4655  00176C  24F3               	addwf	243,w,c
  4656  00176E  6ED9               	movwf	fsr2l,c
  4657  001770  0E00               	movlw	high _lat_registers
  4658  001772  20F4               	addwfc	prodh,w,c
  4659  001774  6EDA               	movwf	fsr2h,c
  4660  001776  CFDE F034          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+4
  4661  00177A  CFDD F035          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+5
  4662  00177E  C034  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2l
  4663  001782  C035  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+5,fsr2h
  4664  001786  5032               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
  4665  001788  16DF               	andwf	indf2,f,c
  4666                           
  4667                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  4668  00178A  EF0A  F00C         	goto	i2l868
  4669  00178E                     i2l5392:
  4670                           
  4671                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  4672  00178E  C02D  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  4673  001792  C02E  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  4674  001796  50DF               	movf	indf2,w,c
  4675  001798  0B07               	andlw	7
  4676  00179A  6E30               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  4677  00179C  0E01               	movlw	1
  4678  00179E  6E31               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  4679  0017A0  2A30               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
  4680  0017A2  EFD5  F00B         	goto	i2u423_44
  4681  0017A6                     i2u423_45:
  4682  0017A6  90D8               	bcf	status,0,c
  4683  0017A8  3631               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
  4684  0017AA                     i2u423_44:
  4685  0017AA  2E30               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
  4686  0017AC  EFD3  F00B         	goto	i2u423_45
  4687  0017B0  C02D  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  4688  0017B4  C02E  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  4689  0017B8  30DF               	rrcf	indf2,w,c
  4690  0017BA  32E8               	rrcf	wreg,f,c
  4691  0017BC  32E8               	rrcf	wreg,f,c
  4692  0017BE  0B07               	andlw	7
  4693  0017C0  6E32               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
  4694  0017C2  5032               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
  4695  0017C4  0D02               	mullw	2
  4696  0017C6  0E8A               	movlw	low _lat_registers
  4697  0017C8  24F3               	addwf	243,w,c
  4698  0017CA  6ED9               	movwf	fsr2l,c
  4699  0017CC  0E00               	movlw	high _lat_registers
  4700  0017CE  20F4               	addwfc	prodh,w,c
  4701  0017D0  6EDA               	movwf	fsr2h,c
  4702  0017D2  CFDE F033          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+3
  4703  0017D6  CFDD F034          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+4
  4704  0017DA  C033  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+3,fsr2l
  4705  0017DE  C034  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2h
  4706  0017E2  5031               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  4707  0017E4  12DF               	iorwf	indf2,f,c
  4708                           
  4709                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  4710  0017E6  EF0A  F00C         	goto	i2l868
  4711  0017EA                     i2l5396:
  4712  0017EA  502F               	movf	i2GPIO_Pin_Write_Logic@logic^0,w,c
  4713  0017EC  6E30               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  4714  0017EE  6A31               	clrf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  4715                           
  4716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4717                           ; Switch size 1, requested type "simple"
  4718                           ; Number of cases is 1, Range of values is 0 to 0
  4719                           ; switch strategies available:
  4720                           ; Name         Instructions Cycles
  4721                           ; simple_byte            4     3 (average)
  4722                           ;	Chosen strategy is simple_byte
  4723  0017F0  5031               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  4724  0017F2  0A00               	xorlw	0	; case 0
  4725  0017F4  B4D8               	btfsc	status,2,c
  4726  0017F6  EFFF  F00B         	goto	i2l8496
  4727  0017FA  EF94  F00B         	goto	i2l5388
  4728  0017FE                     i2l8496:
  4729                           
  4730                           ; Switch size 1, requested type "simple"
  4731                           ; Number of cases is 2, Range of values is 0 to 1
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; simple_byte            7     4 (average)
  4735                           ;	Chosen strategy is simple_byte
  4736  0017FE  5030               	movf	??i2_GPIO_Pin_Write_Logic^0,w,c
  4737  001800  0A00               	xorlw	0	; case 0
  4738  001802  B4D8               	btfsc	status,2,c
  4739  001804  EF96  F00B         	goto	i2l5390
  4740  001808  0A01               	xorlw	1	; case 1
  4741  00180A  B4D8               	btfsc	status,2,c
  4742  00180C  EFC7  F00B         	goto	i2l5392
  4743  001810  EF94  F00B         	goto	i2l5388
  4744  001814                     i2l868:
  4745  001814  0012               	return		;funcret
  4746  001816                     __end_ofi2_GPIO_Pin_Write_Logic:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _EUSART_Tx_ISR *****************
  4750 ;; Defined at:
  4751 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		None
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_InterruptManagerHigh
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text32
  4779  0021A0                     __ptext32:
  4780                           	callstack 0
  4781  0021A0                     _EUSART_Tx_ISR:
  4782                           	callstack 22
  4783  0021A0  0012               	return		;funcret
  4784  0021A2                     __end_of_EUSART_Tx_ISR:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _EUSART_Rx_ISR *****************
  4788 ;; Defined at:
  4789 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_InterruptManagerHigh
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text33
  4817  0021A2                     __ptext33:
  4818                           	callstack 0
  4819  0021A2                     _EUSART_Rx_ISR:
  4820                           	callstack 22
  4821  0021A2  0012               	return		;funcret
  4822  0021A4                     __end_of_EUSART_Rx_ISR:
  4823                           	callstack 0
  4824                           
  4825                           	psect	text34
  4826  000000                     __ptext34:
  4827                           	callstack 0
  4828  000000                     
  4829                           	psect	rparam
  4830  0000                     
  4831                           	psect	temp
  4832  000066                     btemp:
  4833                           	callstack 0
  4834  000066                     	ds	1
  4835  0000                     int$flags	set	btemp
  4836  0000                     wtemp8	set	btemp+1
  4837  0000                     ttemp5	set	btemp+1
  4838  0000                     ttemp6	set	btemp+4
  4839  0000                     ttemp7	set	btemp+8
  4840                           
  4841                           	psect	idloc
  4842                           
  4843                           ;Config register IDLOC0 @ 0x200000
  4844                           ;	unspecified, using default values
  4845  200000                     	org	2097152
  4846  200000  FF                 	db	255
  4847                           
  4848                           ;Config register IDLOC1 @ 0x200001
  4849                           ;	unspecified, using default values
  4850  200001                     	org	2097153
  4851  200001  FF                 	db	255
  4852                           
  4853                           ;Config register IDLOC2 @ 0x200002
  4854                           ;	unspecified, using default values
  4855  200002                     	org	2097154
  4856  200002  FF                 	db	255
  4857                           
  4858                           ;Config register IDLOC3 @ 0x200003
  4859                           ;	unspecified, using default values
  4860  200003                     	org	2097155
  4861  200003  FF                 	db	255
  4862                           
  4863                           ;Config register IDLOC4 @ 0x200004
  4864                           ;	unspecified, using default values
  4865  200004                     	org	2097156
  4866  200004  FF                 	db	255
  4867                           
  4868                           ;Config register IDLOC5 @ 0x200005
  4869                           ;	unspecified, using default values
  4870  200005                     	org	2097157
  4871  200005  FF                 	db	255
  4872                           
  4873                           ;Config register IDLOC6 @ 0x200006
  4874                           ;	unspecified, using default values
  4875  200006                     	org	2097158
  4876  200006  FF                 	db	255
  4877                           
  4878                           ;Config register IDLOC7 @ 0x200007
  4879                           ;	unspecified, using default values
  4880  200007                     	org	2097159
  4881  200007  FF                 	db	255
  4882                           
  4883                           	psect	config
  4884                           
  4885                           ; Padding undefined space
  4886  300000                     	org	3145728
  4887  300000  FF                 	db	255
  4888                           
  4889                           ;Config register CONFIG1H @ 0x300001
  4890                           ;	Oscillator Selection bits
  4891                           ;	OSC = HS, HS oscillator
  4892                           ;	Fail-Safe Clock Monitor Enable bit
  4893                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4894                           ;	Internal/External Oscillator Switchover bit
  4895                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4896  300001                     	org	3145729
  4897  300001  02                 	db	2
  4898                           
  4899                           ;Config register CONFIG2L @ 0x300002
  4900                           ;	Power-up Timer Enable bit
  4901                           ;	PWRT = OFF, PWRT disabled
  4902                           ;	Brown-out Reset Enable bits
  4903                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4904                           ;	Brown Out Reset Voltage bits
  4905                           ;	BORV = 1, 
  4906  300002                     	org	3145730
  4907  300002  09                 	db	9
  4908                           
  4909                           ;Config register CONFIG2H @ 0x300003
  4910                           ;	Watchdog Timer Enable bit
  4911                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4912                           ;	Watchdog Timer Postscale Select bits
  4913                           ;	WDTPS = 512, 1:512
  4914  300003                     	org	3145731
  4915  300003  12                 	db	18
  4916                           
  4917                           ; Padding undefined space
  4918  300004                     	org	3145732
  4919  300004  FF                 	db	255
  4920                           
  4921                           ;Config register CONFIG3H @ 0x300005
  4922                           ;	CCP2 MUX bit
  4923                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4924                           ;	PORTB A/D Enable bit
  4925                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4926                           ;	Low-Power Timer1 Oscillator Enable bit
  4927                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4928                           ;	MCLR Pin Enable bit
  4929                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4930  300005                     	org	3145733
  4931  300005  81                 	db	129
  4932                           
  4933                           ;Config register CONFIG4L @ 0x300006
  4934                           ;	Stack Full/Underflow Reset Enable bit
  4935                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4936                           ;	Single-Supply ICSP Enable bit
  4937                           ;	LVP = OFF, Single-Supply ICSP disabled
  4938                           ;	Extended Instruction Set Enable bit
  4939                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4940                           ;	Background Debugger Enable bit
  4941                           ;	DEBUG = 0x1, unprogrammed default
  4942  300006                     	org	3145734
  4943  300006  81                 	db	129
  4944                           
  4945                           ; Padding undefined space
  4946  300007                     	org	3145735
  4947  300007  FF                 	db	255
  4948                           
  4949                           ;Config register CONFIG5L @ 0x300008
  4950                           ;	Code Protection bit
  4951                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4952                           ;	Code Protection bit
  4953                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4954                           ;	Code Protection bit
  4955                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4956                           ;	Code Protection bit
  4957                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4958  300008                     	org	3145736
  4959  300008  0F                 	db	15
  4960                           
  4961                           ;Config register CONFIG5H @ 0x300009
  4962                           ;	Boot Block Code Protection bit
  4963                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4964                           ;	Data EEPROM Code Protection bit
  4965                           ;	CPD = OFF, Data EEPROM not code-protected
  4966  300009                     	org	3145737
  4967  300009  C0                 	db	192
  4968                           
  4969                           ;Config register CONFIG6L @ 0x30000A
  4970                           ;	Write Protection bit
  4971                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4972                           ;	Write Protection bit
  4973                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4974                           ;	Write Protection bit
  4975                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4976                           ;	Write Protection bit
  4977                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4978  30000A                     	org	3145738
  4979  30000A  0F                 	db	15
  4980                           
  4981                           ;Config register CONFIG6H @ 0x30000B
  4982                           ;	Configuration Register Write Protection bit
  4983                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4984                           ;	Boot Block Write Protection bit
  4985                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4986                           ;	Data EEPROM Write Protection bit
  4987                           ;	WRTD = OFF, Data EEPROM not write-protected
  4988  30000B                     	org	3145739
  4989  30000B  E0                 	db	224
  4990                           
  4991                           ;Config register CONFIG7L @ 0x30000C
  4992                           ;	Table Read Protection bit
  4993                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4994                           ;	Table Read Protection bit
  4995                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4996                           ;	Table Read Protection bit
  4997                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4998                           ;	Table Read Protection bit
  4999                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5000  30000C                     	org	3145740
  5001  30000C  0F                 	db	15
  5002                           
  5003                           ;Config register CONFIG7H @ 0x30000D
  5004                           ;	Boot Block Table Read Protection bit
  5005                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5006  30000D                     	org	3145741
  5007  30000D  40                 	db	64
  5008                           tosu	equ	0xFFF
  5009                           tosh	equ	0xFFE
  5010                           tosl	equ	0xFFD
  5011                           stkptr	equ	0xFFC
  5012                           pclatu	equ	0xFFB
  5013                           pclath	equ	0xFFA
  5014                           pcl	equ	0xFF9
  5015                           tblptru	equ	0xFF8
  5016                           tblptrh	equ	0xFF7
  5017                           tblptrl	equ	0xFF6
  5018                           tablat	equ	0xFF5
  5019                           prodh	equ	0xFF4
  5020                           prodl	equ	0xFF3
  5021                           indf0	equ	0xFEF
  5022                           postinc0	equ	0xFEE
  5023                           postdec0	equ	0xFED
  5024                           preinc0	equ	0xFEC
  5025                           plusw0	equ	0xFEB
  5026                           fsr0h	equ	0xFEA
  5027                           fsr0l	equ	0xFE9
  5028                           wreg	equ	0xFE8
  5029                           indf1	equ	0xFE7
  5030                           postinc1	equ	0xFE6
  5031                           postdec1	equ	0xFE5
  5032                           preinc1	equ	0xFE4
  5033                           plusw1	equ	0xFE3
  5034                           fsr1h	equ	0xFE2
  5035                           fsr1l	equ	0xFE1
  5036                           bsr	equ	0xFE0
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           preinc2	equ	0xFDC
  5041                           plusw2	equ	0xFDB
  5042                           fsr2h	equ	0xFDA
  5043                           fsr2l	equ	0xFD9
  5044                           status	equ	0xFD8

Data Sizes:
    Strings     106
    Constant    0
    Data        70
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     37     101
    BANK0           128     23      88
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S4723_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 9
		 -> convert_float32_to_string@temp_string(COMRAM[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> convert_float32_to_string@temp_string(COMRAM[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    DHT11_Read_Data@data	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), T_Integral(COMRAM[1]), T_Decimal(COMRAM[1]), RH_Integral(COMRAM[1]), 
		 -> RH_Decimal(COMRAM[1]), 

    Get_Temp_HUM@Checksum	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), 

    Get_Temp_HUM@T_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> T_Integral(COMRAM[1]), 

    Get_Temp_HUM@T_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> T_Decimal(COMRAM[1]), 

    Get_Temp_HUM@RH_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Integral(COMRAM[1]), 

    Get_Temp_HUM@RH_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Decimal(COMRAM[1]), 

    Timer0.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Write_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Read_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    tmr0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), Absolute function(), 

    S3566$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Init@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3171$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3171$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3124$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S527$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[10]), 
		 -> CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pinc0(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[10]), 
		 -> CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[10]), 
		 -> CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), TRISE(SFR[1]), 
		 -> TRISA(SFR[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[6]), 
		 -> STR_15(CODE[2]), STR_14(CODE[6]), STR_13(CODE[4]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    ECU_DC_Motor_Stop@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _lcd_4bit_send_char_data->_lcd_4bits_send_enable_signal
    _application_intialize->_GPIO_Pin_Initialize
    _lcd_4bit_initialize->_GPIO_Pin_Initialize
    _lcd_4bit_send_command->_lcd_4bits_send_enable_signal
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _Get_Temp_HUM->_DHT11_Read_Data

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _InterruptManagerHigh->_TMR0_ISR
    _Timer0_Handler->_ECU_DC_Motor_Stop
    _ECU_DC_Motor_Stop->i2_GPIO_Pin_Write_Logic

Critical Paths under _main in BANK0

    _main->_lcd_4bit_send_string_data_pos
    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bit_send_char_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  105922
                                             21 BANK0      2     2      0
              _GPIO_Pin_Toggle_Logic
               _GPIO_Pin_Write_Logic
                       _Get_Temp_HUM
                            ___awdiv
                            ___awmod
              _application_intialize
        _lcd_4bit_send_char_data_pos
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   35580
                                             14 BANK0      7     1      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   34795
                                             14 BANK0      6     1      5
                            ___awdiv (ARG)
                            ___awmod (ARG)
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   17383
                                              7 BANK0      7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   14693
                                              3 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   28503
                _GPIO_Pin_Initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   22832
                                              7 BANK0      6     4      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   16517
                                              3 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5089
                                             35 COMRAM     1     1      0
                                              0 BANK0      3     0      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    4543
                                             35 COMRAM     2     0      2
                                              0 BANK0      1     1      0
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    5671
                                             35 COMRAM     2     0      2
                                              0 BANK0      1     1      0
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    4077
                                             25 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     437
                                             25 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     908
                                             25 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Get_Temp_HUM                                        11     1     10    1309
                                             29 COMRAM     1     1      0
                                              0 BANK0     10     0     10
               _DHT11_Check_Response
                    _DHT11_Read_Data
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Data                                      4     2      2     536
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Check_Response                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     150
                                             25 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManagerLow                                  3     3      0     120
                                             22 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      30
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptManagerHigh                                 6     6      0     569
                                             15 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             2     2      0     569
                                             13 COMRAM     2     2      0
                   Absolute function *
                     _Timer0_Handler *
 ---------------------------------------------------------------------------------
 (10) _Timer0_Handler                                      0     0      0     569
                  _ECU_DC_Motor_Stop
 ---------------------------------------------------------------------------------
 (11) _ECU_DC_Motor_Stop                                   3     1      2     569
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Write_Logic                             10     7      3     267
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Tx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Rx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPIO_Pin_Write_Logic
   _Get_Temp_HUM
     _DHT11_Check_Response
     _DHT11_Read_Data
     _DHT11_Start
   ___awdiv
   ___awmod
   _application_intialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _lcd_4bit_send_char_data_pos
     ___awdiv (ARG)
     ___awmod (ARG)
     _lcd_4bit_send_char_data (ARG)
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
         _GPIO_Pin_Write_Logic
       _lcd_send_4bits
         _GPIO_Pin_Write_Logic
     _lcd_4bits_set_courser (ARG)
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
         _GPIO_Pin_Write_Logic
       _lcd_send_4bits
         _GPIO_Pin_Write_Logic
     _lcd_4bits_set_courser
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _Timer0_Handler *
       _ECU_DC_Motor_Stop
         i2_GPIO_Pin_Write_Logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     17      58       5       68.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     25      65       1       80.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      34        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Feb 26 03:46:11 2023

                             _RH_Integral 002B                           ?_lcd_send_4bits 00B2  
        lcd_4bit_send_command@ERRORSTATUS 00B8                               _SSPSTATbits 000FC7  
                            ___awdiv@sign 004B                                        bsr 000FE0  
                   ??_InterruptManagerLow 0043                                       l120 15CE  
                                     l130 1EA0                                       l125 1DCA  
                                     l135 2022                                       l155 1CD8  
                                     l252 1D5A                                       l247 1FE4  
                                     l281 1A70                                       l880 1E3A  
                                     l849 1494                                       l868 16F6  
                                     l885 1F52                                       _PR2 000FCB  
                                     u570 20A0                                       u571 209C  
                                     u580 20AE                                       u581 20AA  
                                     u590 20BC                                       u591 20B8  
    __end_of_lcd_4bits_send_enable_signal 1FE6     __size_of_lcd_4bits_send_enable_signal 0048  
            _lcd_4bits_send_enable_signal 1F9E                    ??_InterruptManagerHigh 003C  
               _RB5_InterruptHandler_HIGH 000F                           __end_of_ADC_ISR 21A0  
                            ___awmod@sign 004B          lcd_4bit_send_char_data_pos@colum 00C3  
GPIO_Pin_Direction_Initialize@ERRORSTATUS 004E                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                              _TXSTA1bits 000FAC                    ??_GPIO_Pin_Write_Logic 0049  
              __size_of_ECU_DC_Motor_Stop 003C                           __end_of_RB4_ISR 2186  
                         __end_of_RB5_ISR 216C                           __end_of_RB6_ISR 2152  
                         __end_of_RB7_ISR 2138                                      l1700 1C54  
                                    l1672 1BC6                                      l1681 20A0  
                                    l1745 211C                                      l1675 2100  
                                    l1684 20AE                                      l1692 1BD8  
                                    l1678 2092                                      l1687 20BC  
                                    l1697 1C34                                      l6300 199E  
                                    l6302 19AE                                      l6310 1A76  
                                    l6304 19B6                                      l1992 1B20  
                                    l6320 1AA6                                      l6312 1A84  
                                    l2890 20F6                                      l6330 1AEC  
                                    l6322 1AB8                                      l6314 1A8C  
                                    l1979 19BE                                      l2892 20FE  
                                    l6340 1B18                                      l6332 1AF4  
                                    l6324 1AC0                                      l6316 1A90  
                                    l6308 1A72                                      l2894 2092  
                                    l2886 20E4                                      l6270 1916  
                                    l6334 1AFA                                      l6326 1AC8  
                                    l6318 1A9E                                      l2888 20E8  
                                    l6280 193C                                      l6272 191A  
                                    l6264 18FC                                      l6328 1AD6  
                                    l6336 1B00                                      l6290 1972  
                                    l6282 194E                                      l6274 1928  
                                    l6266 1900                                      l6338 1B10  
                                    l6292 1988                                      l6284 1956  
                                    l6276 1930                                      l6268 190E  
                                    l5750 1C42                                      l5742 1BE6  
                                    l5734 1BC8                                      l6294 1990  
                                    l6286 195E                                      l6278 1934  
                                    l5752 1C44                                      l5744 1BEE  
                                    l5736 1BD4                                      l6296 1992  
                                    l6288 196C                                      l7600 136C  
                                    l8400 1292                                      l5746 1BFC  
                                    l6298 1998                                      l7610 1450  
                                    l7602 138A                                      l8402 12B0  
                                    l5748 1C1A                                      l7604 1392  
                                    l7612 1492                                      l7620 1F04  
                                    l7700 19C0                                      l8404 12E0  
                                    l7606 13F4                                      l7550 15D4  
                                    l7622 1F04                                      l7710 19F4  
                                    l7702 19C0                                      l8406 1312  
                                    l5952 1DCC                                      l7552 15E6  
                                    l7624 1F16                                      l7640 1DC6  
                                    l7632 1D5C                                      l7712 1A0A  
                                    l7704 19D4                                      l7800 1FFE  
                                    l8408 1332                                      l5954 1DCC  
                                    l7562 16CA                                      l7554 1604  
                                    l7626 1F20                                      l7634 1D5C  
                                    l7650 14AE                                      l7714 1A20  
                                    l7706 19D8                                      l7810 1C7C  
                                    l8370 108E                                      l5956 1DDE  
                                    l7556 160C                                      l7564 16F4  
                                    l7548 15D0                                      l7628 1F50  
                                    l7572 1CDA                                      l7636 1D70  
                                    l7660 14D2                                      l7652 14AE  
                                    l7644 1496                                      l7708 19DE  
                                    l7812 1C80                                      l7804 1C56  
                                    l8380 1100                                      l8372 10AC  
                                    l5958 1DE2                                      l7910 1B36  
                                    l7558 166E                                      l7590 1FC8  
                                    l7582 1F9E                                      l7574 1CDA  
                                    l7638 1D78                                      l7670 1526  
                                    l7662 14EE                                      l7654 14BA  
                                    l7646 1496                                      l7718 1A36  
                                    l7814 1C98                                      l7806 1C56  
                                    l8390 11C6                                      l8382 111A  
                                    l8374 10CA                                      l8366 106C  
                                    l7920 1B82                                      l7912 1B48  
                                    l7592 1FD0                                      l7584 1F9E  
                                    l7576 1CEE                                      l7680 1586  
                                    l7672 154A                                      l7664 14F2  
                                    l7648 14AA                                      l7816 1CB4  
                                    l7808 1C6A                                      l8392 11E4  
                                    l8384 1148                                      l8376 10DA  
                                    l8368 1070                                      l7930 1BAE  
                                    l7922 1B86                                      l7914 1B5A  
                                    l7906 1B22                                      l7586 1FB0  
                                    l7578 1CF2                                      l7682 1598  
                                    l7674 1550                                      l7666 1502  
                                    l7690 1E3C                                      l8490 1A4A  
                                    l7818 1CBA                                      l8394 1214  
                                    l8386 1166                                      l8378 10F4  
                                    l7932 1BBA                                      l7924 1B8A  
                                    l7916 1B6C                                      l7908 1B22  
                                    l7596 1356                                      l8492 16DE  
                                    l7588 1FB4                                      l7684 15AA  
                                    l7676 1562                                      l7668 1514  
                                    l7692 1E3C                                      l8396 1232  
                                    l8388 1196                                      l7926 1B96  
                                    l7918 1B7E                                      l8494 147C  
                                    l7598 135A                                      l7686 15BC  
                                    l7678 1574                                      l7694 1E50  
                                    l8398 1262                                      l7928 1BA2  
                                    l7936 2102                                      l7696 1E54  
                                    l7794 1FE6                                      l7796 1FE6  
                                    l7798 1FFA                                      STR_1 1014  
                                    STR_2 1043                                      STR_3 1034  
                                    STR_4 1001                                      STR_5 1062  
                                    STR_9 105F                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u5500 196C                                      u5501 1968  
                                    u5510 1988                                      u5511 1984  
                                    u4560 1BE6                                      u5520 19AE  
                                    u7104 1628                                      u7200 1F16  
                                    u7120 1CEE                                      u4561 1BE2  
                                    u5521 19AA                                      u7105 1624  
                                    u7201 1F12                                      u7121 1CEA  
                                    u4570 1BFC                                      u5530 1A84  
                                    u7114 168A                                      u7130 1FB0  
                                    u7210 1D70                                      u4571 1BF8  
                                    u5531 1A80                                      u7115 1686  
                                    u7131 1FAC                                      u7211 1D6C  
                                    u4580 1C42                                      u5540 1A9E  
                                    u7140 136C                                      u7220 14AA  
                                    u4581 1C3E                                      u5541 1A9A  
                                    u7141 1368                                      u7221 14A6  
                                    u4590 1C54                                      u5470 190E  
                                    u5550 1AB8                                      u7150 138A  
                                    u7230 1502                                      u4591 1C50  
                                    u5471 190A                                      u5551 1AB4  
                                    u7151 1386                                      u7231 14FE  
                                    u5480 1928                                      u5560 1AD6  
                                    u7080 15E6                                      u7240 1E50  
                                    u5481 1924                                      u5561 1AD2  
                                    u7081 15E2                                      u7241 1E4C  
                                    u5490 194E                                      u5570 1AEC  
                                    u7090 1604                                      u7250 19D4  
                                    u7330 1FFA                                      u5491 194A  
                                    u5571 1AE8                                      u7091 1600  
                                    u7251 19D0                                      u7331 1FF6  
                                    u7500 1B36                                      u5580 1B10  
                                    u7180 1468                                      u7164 13AE  
                                    u7340 1C6A                                      u7501 1B32  
                                    u5581 1B0C                                      u7181 1462  
                                    u7165 13AA                                      u7341 1C66  
                                    i2l70 205E                                      u4870 1DDE  
                                    u7510 1B48                                      u7190 146A  
                                    u7174 1410                                      u7350 1C7C  
                                    u4871 1DDA                                      u7511 1B44  
                                    u7175 140C                                      u7351 1C78  
                                    u7520 1B5A                                      u7360 1CD8  
                                    u7521 1B56                                      u7361 1CD4  
                                    u7530 1B6C                                      u7531 1B68  
                                    u4884 1DFE                                      u7540 1B7E  
                                    u4885 1DFA                                      u7541 1B7A  
                                    u7900 1312                                      u7901 130E  
                                    u7917 10E6                                      u7927 110C  
                                    u7937 150A                                      u7947 152E  
                                    u7957 154C                                      u7967 1FCA  
                                    u7977 20EE                                      u7987 20FA  
                                    u7997 1BE8                                      _RX9D 007D58  
                 ??_application_intialize 0052                  _RB4_InterruptHandler_LOW 0011  
                                    _lcd1 0053                                      _main 106C  
                _RB7_InterruptHandler_LOW 0005                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0066  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0286          GPIO_Pin_Toggle_Logic@_pin_config 0046  
                    __size_of_DHT11_Start 001E                              ___param_bank 000000  
        __size_of_lcd_4bit_send_char_data 0066                     _lcd_4bit_send_command 1D5C  
                        __end_of_INT1_ISR 219E                                     ?_main 002D  
                         __end_of___awdiv 19C0                                     STR_11 1025  
                                   STR_12 1025                                     STR_13 105B  
                                   STR_14 104F                                     STR_15 1065  
                                   STR_16 1055                                     STR_17 1065  
                                   STR_18 1069                                     STR_19 1067  
                         __end_of___awmod 1B22                           ___awdiv@divisor 0048  
                    __end_of_Get_Temp_HUM 1BC8                                     i1l438 219E  
                                   i2l801 21A2                                     i2l868 1814  
                         ___awdiv@counter 004A                                     i2l797 21A0  
                                   _RCREG 000FAE                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _SPBRG 000FAF  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                             _EUSART_Rx_ISR 21A2  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             _EUSART_Tx_ISR 21A0  
                                   _TXREG 000FAD             ?_lcd_4bits_send_enable_signal 0050  
                        __end_of_TMR0_ISR 1F9E                                     _flags 0052  
                                   _pinc0 0065                                _T_Integral 0029  
                  ?_lcd_4bits_set_courser 00B9                                     pclath 000FFA  
                                   tablat 000FF5                lcd_4bits_set_courser@colum 00BC  
   __end_of_lcd_4bit_send_string_data_pos 1CDA    __size_of_lcd_4bit_send_string_data_pos 0084  
           _lcd_4bit_send_string_data_pos 1C56                                     ttemp5 0067  
                                   ttemp6 006A                                     ttemp7 006E  
                                   status 000FD8                                     wtemp8 0067  
                       ??_DHT11_Read_Data 0048               _I2C_DefaultInterruptHandler 001F  
                         __initialization 1EA2                              __end_of_main 1356  
              _eusart_Rx_InterruptHandler 0025            __size_of_GPIO_Pin_Toggle_Logic 0070  
           __end_of_GPIO_Pin_Toggle_Logic 1E3C                                 ??_ADC_ISR 0042  
                           _lat_registers 008A                                    ??_main 00C7  
                           __activetblptr 000003                            ?_EUSART_Rx_ISR 002D  
                     DHT11_Read_Data@data 0046                            ?_EUSART_Tx_ISR 002D  
                               ??_RB4_ISR 0042                                 ??_RB5_ISR 0042  
                               ??_RB6_ISR 0042                                 ??_RB7_ISR 0042  
                   Get_Temp_HUM@T_Decimal 00B6                            _Timer0_Handler 20BE  
                   RB5_ISR@Handler_Select 0042                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1L 000FBE  
                                  _CCPR2L 000FBB                          ___awdiv@dividend 0046  
                                  i1l1151 0086                                    i1l1161 01C6  
                                  i1l1153 00C6                                    i1l1170 0276  
                                  i1l1163 0206                                    i1l1155 0106  
                                  i1l1236 219C                                    i1l1165 0246  
                                  i1l1157 0146                                    i1l1149 0046  
                                  i1l1167 0266                                    i1l1159 0186  
                                  i1l1249 2184                                    i1l1258 216A  
                                  i1l1267 2150                                    i1l1276 2136  
                                  i1l3242 219A                                    i1l3252 2184  
                                  i1l3246 216E                                    i1l3262 216A  
                                  i1l3248 2170                                    i1l3256 2154  
                                  i1l3272 2150                                    i2l1130 1860  
                                  i1l3258 2156                                    i1l3266 213A  
                                  i1l3282 2136                                    i2l1140 18D0  
                                  i2l1132 1870                                    i1l3268 213C  
                                  i1l3276 2120                                    i2l1134 1880  
                                  i1l3278 2122                                    i2l1143 18E0  
                                  i2l1136 18A0                                    i2l1128 1850  
                                  i1l4600 01FE                                    i2l1138 18C0  
                                  i1l4610 023E                                    i1l4602 0200  
                                  i1l4530 0034                                    i1l4612 0240  
                                  i1l4604 0214                                    i1l4540 007E  
                                  i1l4532 0042                                    i1l4614 0254  
                                  i1l4606 0222                                    i1l4550 00BE  
                                  i1l4542 0080                                    i1l4534 0054  
                                  i1l4616 0262                                    i1l4608 0230  
                                  i1l4560 00FE                                    i1l4552 00C0  
                                  i1l4544 0094                                    i1l4536 0062  
                                  i1l4528 0026                                    i1l4618 0274  
                                  i1l4570 013E                                    i1l4562 0100  
                                  i1l4554 00D4                                    i1l4546 00A2  
                                  i1l4538 0070                                    i1l4580 017E  
                                  i1l4572 0140                                    i1l4564 0114  
                                  i1l4556 00E2                                    i1l4548 00B0  
                                  i1l4590 01BE                                    i1l4582 0180  
                                  i1l4574 0154                                    i1l4566 0122  
                                  i1l4558 00F0                                    i2l1543 1F9C  
                                  i2l3224 21A2                                    i1l4592 01C0  
                                  i1l4584 0194                                    i1l4576 0162  
                                  i1l4568 0130                                    i1l4594 01D4  
                                  i1l4586 01A2                                    i1l4578 0170  
                                  i2l1651 20E2                                    i1l4596 01E2  
                                  i1l4588 01B0                                    i1l4598 01F0  
                                  i2l5420 203A                                    i2l5414 2024  
                                  i2l5416 2024                                    i2l5418 2036  
                                  i2l5390 172C                                    i2l5382 16F8  
                                  i2l5392 178E                                    i2l5384 16F8  
                                  i2l5386 170A                                    i2l5396 17EA  
                                  i2l5388 1728                                    i2l5732 20BE  
                                  i2l6822 1830                                    i2l6840 188E  
                                  i2l6832 186E                                    i2l6824 183E  
                                  i2l5962 1F54                                    i2l6842 189C  
                                  i2l6826 184C                                    i2l5964 1F56  
                                  i2l6852 18DE                                    i2l6844 18AE  
                                  i2l6836 187E                                    i2l6828 185E  
                                  i2l5966 1F84                                    i2l6846 18BC  
                                  i2l6848 18CE                                    i2l8496 17FE  
            __end_of_DHT11_Check_Response 20BE                            _Movement_State 0027  
                                  _SPBRGH 000FB0                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9        lcd_4bit_send_string_data_pos@colum 00C3  
                                  _Timer0 0059                    ?_lcd_4bit_send_command 00B5  
         ??_GPIO_Pin_Direction_Initialize 0048                                 ??___awdiv 004A  
                ??i2_GPIO_Pin_Write_Logic 0030                                 ??___awmod 004A  
             __end_of_GPIO_Pin_Initialize 1F54                                    clear_0 1EE8  
                                  clear_1 1EF4                          ___awdiv@quotient 004C  
                         ___awmod@divisor 0048                           ___awmod@counter 004A  
                  __end_of_Timer0_Handler 20E4                              __pdataCOMRAM 0052  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  Get_Temp_HUM@RH_Decimal 00B2              __size_of_lcd_4bit_initialize 013A  
                              __accesstop 0080                   __end_of__initialization 1EFA  
                               ?_INT1_ISR 002D                             ___rparam_used 000001  
                        ??_lcd_send_4bits 0050                _I2C_Report_Write_Collision 001B  
                 _lcd_4bit_send_char_data 1E3C            ?_lcd_4bit_send_string_data_pos 00C0  
                          __pcstackCOMRAM 002D                              __pidataBANK0 2060  
                               ?_TMR0_ISR 002D                     __size_of_Get_Temp_HUM 00A6  
             i2GPIO_Pin_Write_Logic@logic 002F                           ??_EUSART_Rx_ISR 002D  
                         ??_EUSART_Tx_ISR 002D                  lcd_4bit_send_command@lcd 00B5  
                         ?_Timer0_Handler 002D              ?_lcd_4bit_send_char_data_pos 00C0  
                              __pbssBANK0 00C9                     _INT0_InterruptHandler 0019  
                              ??_INT1_ISR 0042           lcd_4bits_send_enable_signal@lcd 0050  
          __size_of_application_intialize 001C             __end_of_application_intialize 211E  
                            _Get_Temp_HUM 1B22                  _eusart_frameerr_CallBack 0021  
             __end_of_InterruptManagerLow 0286        lcd_4bit_initialize@pin_lcd_counter 00BD  
                              ??_TMR0_ISR 003A           __size_ofi2_GPIO_Pin_Write_Logic 011E  
                                 _ADC_ISR 219E     __end_of_GPIO_Pin_Direction_Initialize 1496  
  __size_of_GPIO_Pin_Direction_Initialize 0140             _GPIO_Pin_Direction_Initialize 1356  
                   _tmr0_InterruptHandler 0003                      _DHT11_Check_Response 2092  
                                 _RB4_ISR 216C                                   _RB5_ISR 2152  
                                 _RB6_ISR 2138                    Get_Temp_HUM@T_Integral 00B8  
                                 _RB7_ISR 211E                 _RB6_InterruptHandler_HIGH 000B  
                 ??_lcd_4bits_set_courser 00BD             __size_of_InterruptManagerHigh 18F4  
                         _DHT11_Read_Data 1BC8                 ECU_DC_Motor_Stop@dc_motor 0037  
           __size_of_GPIO_Pin_Write_Logic 0128                            _tris_registers 0094  
                           ??_DHT11_Start 0046                  _RB6_InterruptHandler_LOW 0009  
               ??_lcd_4bit_send_char_data 0052                                   __Hparam 0000  
              _eusart_overrunerr_CallBack 0023                                   __Lparam 0000  
                                 ___awdiv 18FC                                   ___awmod 1A72  
                            __psmallconst 1000                                   __pcinit 1EA2  
                                 __ramtop 1000                     ?_DHT11_Check_Response 002D  
                                 __ptext0 106C                                   __ptext1 1C56  
                                 __ptext2 1FE6                                   __ptext3 19C0  
                                 __ptext4 1E3C                                   __ptext5 2102  
                                 __ptext6 1496                                   __ptext7 1D5C  
                                 __ptext8 1CDA                                   __ptext9 1F9E  
                               _T0CONbits 000FD5                                 _T3CONbits 000FB1  
                        ___awmod@dividend 0046                    i2_GPIO_Pin_Write_Logic 16F8  
                          __pintcode_body 1816                      end_of_initialization 1EFA  
                       lcd_send_4bits@lcd 00B2                                   int_func 1816  
                 ??_lcd_4bit_send_command 0052                                 _RCSTAbits 000FAB  
                        _W3_Motor_Control 0061                       __end_of_DHT11_Start 2102  
                                 postdec1 000FE5                                   postdec2 000FDD  
    __size_of_lcd_4bit_send_char_data_pos 003E                                   postinc0 000FEE  
                                 postinc2 000FDE                       _lcd_4bit_initialize 1496  
         __end_of_lcd_4bit_send_char_data 1EA2                     _INT1_InterruptHandler 0017  
                               _PORTBbits 000F81                     _GPIO_Pin_Toggle_Logic 1DCC  
                               _PORTDbits 000F83                   __end_of_DHT11_Read_Data 1C56  
              lcd_4bit_send_char_data@lcd 00B5            ?_GPIO_Pin_Direction_Initialize 0046  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                     RB4_ISR@Handler_Select 0042  
                   RB7_ISR@Handler_Select 0042                   Get_Temp_HUM@RH_Integral 00B4  
         lcd_4bit_send_char_data_pos@data 00C4                      ?_lcd_4bit_initialize 00B9  
                             _CCP1CONbits 000FBD                               _CCP2CONbits 000FBA  
                               _TXSTAbits 000FAC                         __size_of_INT1_ISR 0004  
                               _T_Decimal 002A             convert_uint16_to_string@F3194 00D2  
                        ??_Timer0_Handler 003A                    ??_DHT11_Check_Response 0046  
                             _BAUDCONbits 000FB8                             __pidataCOMRAM 2186  
                       __size_of_TMR0_ISR 004A              __size_of_GPIO_Pin_Initialize 0050  
                     start_initialization 1EA2           GPIO_Pin_Write_Logic@_pin_config 0046  
       i2GPIO_Pin_Write_Logic@_pin_config 002D                      Get_Temp_HUM@Checksum 00BA  
                   ??_lcd_4bit_initialize 00BB                               _DHT11_Start 20E4  
          GPIO_Pin_Initialize@_pin_config 0050                               __pdataBANK0 0080  
                                ?_ADC_ISR 002D                    ?_GPIO_Pin_Toggle_Logic 0046  
            lcd_4bit_send_command@command 00B7                     __end_of_EUSART_Rx_ISR 21A4  
                        ?_DHT11_Read_Data 0046                     __end_of_EUSART_Tx_ISR 21A2  
                                ?_RB4_ISR 002D                                  ?_RB5_ISR 002D  
                                ?_RB6_ISR 002D                                  ?_RB7_ISR 002D  
                             __pbssCOMRAM 0001                             __pcstackBANK0 00B2  
          __size_of_lcd_4bits_set_courser 00B2             __end_of_lcd_4bits_set_courser 1A72  
                        DHT11_Read_Data@i 0049                     _INT2_InterruptHandler 0015  
          ??_lcd_4bits_send_enable_signal 0052              __end_of_InterruptManagerHigh 18FC  
               _W1_W5_W2_W6_Motor_Control 0063                     _application_intialize 2102  
                               __pintcode 0008              __end_of_GPIO_Pin_Write_Logic 16F8  
                                ?___awdiv 0046                                  ?___awmod 0046  
         GPIO_Pin_Write_Logic@ERRORSTATUS 004F                               __pintcodelo 0018  
            __size_of_InterruptManagerLow 026E                   __size_of_lcd_send_4bits 0082  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 0013  
                                _CCP1_Obj 00A8                                  _CCP2_Obj 009E  
                 ?i2_GPIO_Pin_Write_Logic 002D                 _RB7_InterruptHandler_HIGH 0007  
          GPIO_Pin_Initialize@ERRORSTATUS 00B2            convert_float32_to_string@F3205 00C9  
                _RB5_InterruptHandler_LOW 000D                                  _INT1_ISR 219A  
              lcd_send_4bits@data_command 00B4                                  _LATDbits 000F8C  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                i1u120_20 214C                                  i1u120_21 2148  
                                i1u121_20 2132                                  i1u121_21 212E  
                                i1u118_20 2180                                  i1u310_20 0042  
                                i1u118_21 217C                                  i1u310_21 003E  
                                i1u119_20 2166                                  i1u311_20 0054  
                                i1u119_21 2162                                  i1u311_21 0050  
                                i1u320_20 00E2                                  i1u312_20 0062  
                                i1u320_21 00DE                                  i1u312_21 005E  
          __size_of_lcd_4bit_send_command 0070                                  i1u321_20 00F0  
                                i1u313_20 0070                                  i1u321_21 00EC  
                                i1u313_21 006C                                  i1u330_20 017E  
                                i1u322_20 00FE                                  i1u314_20 007E  
                                i1u330_21 017A                                  i1u322_21 00FA  
                                i1u314_21 007A                                  i1u331_20 0194  
                                i1u323_20 0114                                  i1u315_20 0094  
                                i1u331_21 0190                                  i1u323_21 0110  
                                i1u315_21 0090                                  i1u340_20 0222  
                                i1u332_20 01A2                                  i1u324_20 0122  
                                i1u316_20 00A2                                  i1u340_21 021E  
                                i1u332_21 019E                                  i1u324_21 011E  
                                i1u316_21 009E                                  i1u341_20 0230  
                                i1u333_20 01B0                                  i1u325_20 0130  
                                i1u317_20 00B0                                  i1u309_20 0034  
                                i1u341_21 022C                                  i1u333_21 01AC  
                                i1u325_21 012C                                  i1u317_21 00AC  
                                i1u309_21 0030                                  i1u342_20 023E  
                                i1u334_20 01BE                                  i1u326_20 013E  
                                i1u318_20 00BE                                  i1u342_21 023A  
                                i1u334_21 01BA                                  i1u326_21 013A  
                                i1u318_21 00BA                                  i1u343_20 0254  
                                i1u335_20 01D4                                  i1u327_20 0154  
                                i1u319_20 00D4                                  i1u343_21 0250  
                                i1u335_21 01D0                                  i1u327_21 0150  
                                i1u319_21 00D0                                  i1u344_20 0262  
                                i1u336_20 01E2                                  i1u328_20 0162  
                                i1u344_21 025E                                  i1u336_21 01DE  
                                i1u328_21 015E                                  i1u345_20 0274  
                                i1u337_20 01F0                                  i1u329_20 0170  
                                i1u345_21 0270                                  i1u337_21 01EC  
                                i1u329_21 016C                                  i1u338_20 01FE  
                                i1u338_21 01FA                                  i1u339_20 0214  
                                i1u339_21 0210             __end_of_lcd_4bit_send_command 1DCC  
                                i2u420_40 170A                                  i2u420_41 1706  
                                i2u421_40 1728                                  i2u421_41 1724  
                                i2u422_44 1748                                  i2u422_45 1744  
                                i2u423_44 17AA                                  i2u423_45 17A6  
                                i2u425_40 2036                                  i2u425_41 2032  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u620_40 188E                                  i2u620_41 188A  
                                i2u621_40 189C                                  i2u621_41 1898  
                                i2u622_40 18AE                                  i2u622_41 18AA  
                                i2u623_40 18BC                                  i2u615_40 183E  
                                i2u623_41 18B8                                  i2u615_41 183A  
                                i2u624_40 18CE                                  i2u616_40 184C  
                                i2u624_41 18CA                                  i2u616_41 1848  
                                i2u625_40 18DE                                  i2u617_40 185E  
                                i2u625_41 18DA                                  i2u617_41 185A  
                                i2u618_40 186E                                  i2u618_41 186A  
                                i2u490_48 1F8A                                  i2u619_40 187E  
                                i2u490_49 1F9C                                  i2u619_41 187A  
                                i2u489_40 1F84                                  i2u489_41 1F80  
                                _RCONbits 000FD0                                  _TMR0_ISR 1F54  
                        _W4_Motor_Control 005F               _I2C_Report_Receive_Overflow 001D  
                        __size_of_ADC_ISR 0002                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
          __end_ofi2_GPIO_Pin_Write_Logic 1816            lcd_4bit_send_char_data_pos@lcd 00C0  
          lcd_4bit_send_char_data_pos@row 00C2                                  _Checksum 0028  
                        __size_of_RB4_ISR 001A                          __size_of_RB5_ISR 001A  
                        __size_of_RB6_ISR 001A                          __size_of_RB7_ISR 001A  
     __end_of_lcd_4bit_send_char_data_pos 2024               _lcd_4bit_send_char_data_pos 1FE6  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                ?_lcd_4bit_send_char_data 00B5                                 copy_data0 1EB6  
                               copy_data1 1ED6             ??_lcd_4bit_send_char_data_pos 0052  
                  ?_application_intialize 002D                       _GPIO_Pin_Initialize 1F04  
                                __Hrparam 0000          lcd_4bit_send_string_data_pos@lcd 00C0  
        lcd_4bit_send_string_data_pos@row 00C2          lcd_4bit_send_string_data_pos@str 00C4  
                                __Lrparam 0000                          __size_of___awdiv 00C4  
                        __size_of___awmod 00B0                 GPIO_Pin_Write_Logic@logic 0048  
                           _preloaded_val 0001                      ?_GPIO_Pin_Initialize 0050  
                   RB6_ISR@Handler_Select 0042                      _InterruptManagerHigh 0008  
                lcd_4bits_set_courser@lcd 00B9                  lcd_4bits_set_courser@row 00BB  
                                __ptext10 1F04                                  __ptext11 15D0  
                                __ptext12 1356                                  __ptext21 211E  
                                __ptext13 1A72                                  __ptext30 2024  
                                __ptext22 2138                                  __ptext14 18FC  
                                __ptext31 16F8                                  __ptext23 2152  
                                __ptext15 1B22                                  __ptext32 21A0  
                                __ptext24 216C                                  __ptext16 20E4  
                                __ptext33 21A2                                  __ptext25 219A  
                                __ptext17 1BC8                                  __ptext34 0000  
                                __ptext26 219E                                  __ptext18 2092  
                                __ptext19 1DCC                                  __ptext28 1F54  
                                __ptext29 20BE                      _GPIO_Pin_Write_Logic 15D0  
                       _ECU_DC_Motor_Stop 2024                             __size_of_main 02EA  
                            ?_DHT11_Start 002D                        ?_ECU_DC_Motor_Stop 0037  
                           ?_Get_Temp_HUM 00B2                   ??_GPIO_Pin_Toggle_Logic 0048  
                     ??_ECU_DC_Motor_Stop 0039                                  int$flags 0066  
                          _lcd_send_4bits 1CDA             __size_of_DHT11_Check_Response 002C  
                   ??_GPIO_Pin_Initialize 0052                                _INTCONbits 000FF2  
             __end_of_lcd_4bit_initialize 15D0                     ?_InterruptManagerHigh 002D  
               __end_of_ECU_DC_Motor_Stop 2060                     ?_GPIO_Pin_Write_Logic 0046  
                                intlevel1 0000                                  intlevel2 0000  
                     _InterruptManagerLow 0018                            ??_Get_Temp_HUM 004A  
GPIO_Pin_Direction_Initialize@_pin_config 0046                                _RCSTA1bits 000FAB  
                  __end_of_lcd_send_4bits 1D5C                      ?_InterruptManagerLow 002D  
                          _port_registers 0080                               _SSPCON1bits 000FC6  
                             _SSPCON2bits 000FC5                   __size_of_Timer0_Handler 0026  
                              _WDTCONbits 000FD1                         fp__Timer0_Handler 0000  
         ??_lcd_4bit_send_string_data_pos 0052                  __size_of_DHT11_Read_Data 008E  
                   _lcd_4bits_set_courser 19C0                                _RH_Decimal 002C  
             lcd_4bit_send_char_data@data 00B7                    __size_of_EUSART_Rx_ISR 0002  
                  __size_of_EUSART_Tx_ISR 0002                    lcd_4bit_initialize@lcd 00B9  
