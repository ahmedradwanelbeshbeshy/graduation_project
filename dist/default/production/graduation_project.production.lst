

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 24 08:02:31 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   124                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   125  0000                     
   126                           ; Version 2.20
   127                           ; Generated 05/05/2020 GMT
   128                           ; 
   129                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F46K20 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161                           	psect	idataCOMRAM
   162  005D3A                     __pidataCOMRAM:
   163                           	callstack 0
   164                           
   165                           ;initializer for _datasend
   166  005D3A  77                 	db	119
   167                           
   168                           ;initializer for _blue
   169  005D3B  01                 	db	1
   170                           
   171                           ;initializer for _gps
   172  005D3C  01                 	db	1
   173                           
   174                           ;initializer for _flags
   175  005D3D  0F                 	db	15
   176                           
   177                           ;initializer for _selector
   178  005D3E  9C                 	db	156
   179                           
   180                           	psect	idataBANK0
   181  005C8A                     __pidataBANK0:
   182                           	callstack 0
   183                           
   184                           ;initializer for _lat_registers
   185  005C8A  89                 	db	137
   186  005C8B  0F                 	db	15
   187  005C8C  8A                 	db	138
   188  005C8D  0F                 	db	15
   189  005C8E  8B                 	db	139
   190  005C8F  0F                 	db	15
   191  005C90  8C                 	db	140
   192  005C91  0F                 	db	15
   193  005C92  8D                 	db	141
   194  005C93  0F                 	db	15
   195                           
   196                           ;initializer for _battery_volt_f
   197  005C94  0000               	dw	0
   198  005C96  4140               	dw	16704
   199                           
   200                           ;initializer for _i2c_obj
   201  005C98  86A0               	dw	34464
   202  005C9A  0001               	dw	1
   203  005C9C  08                 	db	8
   204  005C9D  00                 	db	0
   205  005C9E  03                 	db	3
   206                           
   207                           ;initializer for _servo_driver_obj
   208  005C9F  80                 	db	128
   209  005CA0  79                 	db	121
   210  005CA1  21                 	db	33
   211  005CA2  04                 	db	4
   212                           
   213                           ;initializer for _ultrasonic
   214  005CA3  0B                 	db	11
   215  005CA4  4A                 	db	74
   216                           
   217                           ;initializer for _stepper_base
   218  005CA5  1B                 	db	27
   219  005CA6  1A                 	db	26
   220                           
   221                           ;initializer for _T_Decimal
   222  005CA7  13                 	db	19
   223                           
   224                           ;initializer for _RH_Decimal
   225  005CA8  4D                 	db	77
   226                           
   227                           ;initializer for _driller_PIN
   228  005CA9  82                 	db	130
   229                           
   230                           ;initializer for _TEST_PIN
   231  005CAA  10                 	db	16
   232                           
   233                           ;initializer for _W2_W4_W6_Motor_Control
   234  005CAB  19                 	db	25
   235                           
   236                           ;initializer for _W1_W3_W5_Motor_Control
   237  005CAC  18                 	db	24
   238                           
   239                           	psect	idataBANK1
   240  005952                     __pidataBANK1:
   241                           	callstack 0
   242                           
   243                           ;initializer for _port_registers
   244  005952  80                 	db	128
   245  005953  0F                 	db	15
   246  005954  81                 	db	129
   247  005955  0F                 	db	15
   248  005956  82                 	db	130
   249  005957  0F                 	db	15
   250  005958  83                 	db	131
   251  005959  0F                 	db	15
   252  00595A  84                 	db	132
   253  00595B  0F                 	db	15
   254                           
   255                           ;initializer for _tris_registers
   256  00595C  92                 	db	146
   257  00595D  0F                 	db	15
   258  00595E  93                 	db	147
   259  00595F  0F                 	db	15
   260  005960  94                 	db	148
   261  005961  0F                 	db	15
   262  005962  95                 	db	149
   263  005963  0F                 	db	15
   264  005964  96                 	db	150
   265  005965  0F                 	db	15
   266                           
   267                           ;initializer for __uart_obj
   268  005966  2580               	dw	9600
   269  005968  04                 	db	4
   270  005969  6C                 	db	low _usart_isr
   271  00596A  5A                 	db	high _usart_isr
   272  00596B  00                 	db	0
   273  00596C  00                 	db	0
   274  00596D  00                 	db	0
   275  00596E  00                 	db	0
   276  00596F  09                 	db	9
   277  005970  00                 	db	0
   278  005971  00                 	db	0
   279                           
   280                           ;initializer for _CCP2_Obj
   281  005972  01                 	db	1
   282  005973  02                 	db	2
   283  005974  00                 	db	0
   284  005975  11                 	db	17
   285  005976  00                 	db	0
   286  005977  01F4               	dw	500
   287  005979  0000               	dw	0
   288  00597B  F9                 	db	249
   289  00597C  00                 	db	0
   290  00597D  0F                 	db	15
   291                           
   292                           ;initializer for _CCP1_Obj
   293  00597E  00                 	db	0
   294  00597F  02                 	db	2
   295  005980  00                 	db	0
   296  005981  12                 	db	18
   297  005982  00                 	db	0
   298  005983  01F4               	dw	500
   299  005985  0000               	dw	0
   300  005987  F9                 	db	249
   301  005988  00                 	db	0
   302  005989  0F                 	db	15
   303                           
   304                           ;initializer for _battery_adc
   305  00598A  00                 	db	0
   306  00598B  05                 	db	5
   307  00598C  02                 	db	2
   308  00598D  01                 	db	1
   309  00598E  00                 	db	0
   310  0000                     _TMR2	set	4044
   311  0000                     _T2CONbits	set	4042
   312  0000                     _TMR1L	set	4046
   313  0000                     _TMR1H	set	4047
   314  0000                     _T1CONbits	set	4045
   315  0000                     _INTCON2bits	set	4081
   316  0000                     _SSPBUF	set	4041
   317  0000                     _SSPSTATbits	set	4039
   318  0000                     _SSPADD	set	4040
   319  0000                     _SSPCON2bits	set	4037
   320  0000                     _SSPCON1bits	set	4038
   321  0000                     _SPBRGH	set	4016
   322  0000                     _SPBRG	set	4015
   323  0000                     _RCONbits	set	4048
   324  0000                     _RCREG	set	4014
   325  0000                     _TXREG	set	4013
   326  0000                     _TRISCbits	set	3988
   327  0000                     _TXSTA1bits	set	4012
   328  0000                     _PR2	set	4043
   329  0000                     _ADCON1bits	set	4033
   330  0000                     _ADRESL	set	4035
   331  0000                     _ADRESH	set	4036
   332  0000                     _TRISD	set	3989
   333  0000                     _TRISB	set	3987
   334  0000                     _TRISE	set	3990
   335  0000                     _PORTDbits	set	3971
   336  0000                     _LATDbits	set	3980
   337  0000                     _TRISDbits	set	3989
   338  0000                     _TRISBbits	set	3987
   339  0000                     _PORTBbits	set	3969
   340  0000                     _RCSTA1bits	set	4011
   341  0000                     _TXSTAbits	set	4012
   342  0000                     _TRISC	set	3988
   343  0000                     _RX9D	set	32088
   344  0000                     _ADCON2bits	set	4032
   345  0000                     _ADCON0bits	set	4034
   346  0000                     _PORTA	set	3968
   347  0000                     _LATA	set	3977
   348  0000                     _TRISA	set	3986
   349  0000                     _PIE1bits	set	3997
   350  0000                     _RCSTAbits	set	4011
   351  0000                     _T3CONbits	set	4017
   352  0000                     _CCP2CONbits	set	4026
   353  0000                     _CCP1CONbits	set	4029
   354  0000                     _CCPR1L	set	4030
   355  0000                     _CCPR2L	set	4027
   356  0000                     _BAUDCONbits	set	4024
   357  0000                     _PIR2bits	set	4001
   358  0000                     _PIE2bits	set	4000
   359  0000                     _IPR1bits	set	3999
   360  0000                     _PIR1bits	set	3998
   361  0000                     _WDTCONbits	set	4049
   362  0000                     _T0CONbits	set	4053
   363  0000                     _INTCON3bits	set	4080
   364  0000                     _INTCONbits	set	4082
   365  0000                     _LATE	set	3981
   366  0000                     _LATD	set	3980
   367  0000                     _LATC	set	3979
   368  0000                     _LATB	set	3978
   369  0000                     _PORTE	set	3972
   370  0000                     _PORTD	set	3971
   371  0000                     _PORTC	set	3970
   372  0000                     _PORTB	set	3969
   373  0000                     _TMR0H	set	4055
   374  0000                     _TMR0L	set	4054
   375                           
   376                           	psect	smallconst
   377  001000                     __psmallconst:
   378                           	callstack 0
   379  001000  00                 	db	0
   380  001001  41                 	db	65	;'A'
   381  001002  54                 	db	84	;'T'
   382  001003  2B                 	db	43
   383  001004  55                 	db	85	;'U'
   384  001005  41                 	db	65	;'A'
   385  001006  52                 	db	82	;'R'
   386  001007  54                 	db	84	;'T'
   387  001008  3A                 	db	58	;':'
   388  001009  39                 	db	57	;'9'
   389  00100A  36                 	db	54	;'6'
   390  00100B  30                 	db	48	;'0'
   391  00100C  30                 	db	48	;'0'
   392  00100D  2C                 	db	44
   393  00100E  30                 	db	48	;'0'
   394  00100F  2C                 	db	44
   395  001010  30                 	db	48	;'0'
   396  001011  0D                 	db	13
   397  001012  0A                 	db	10
   398  001013  00                 	db	0
   399  001014  41                 	db	65	;'A'
   400  001015  54                 	db	84	;'T'
   401  001016  2B                 	db	43
   402  001017  52                 	db	82	;'R'
   403  001018  4E                 	db	78	;'N'
   404  001019  41                 	db	65	;'A'
   405  00101A  4D                 	db	77	;'M'
   406  00101B  45                 	db	69	;'E'
   407  00101C  3A                 	db	58	;':'
   408  00101D  52                 	db	82	;'R'
   409  00101E  6F                 	db	111	;'o'
   410  00101F  62                 	db	98	;'b'
   411  001020  6F                 	db	111	;'o'
   412  001021  74                 	db	116	;'t'
   413  001022  0D                 	db	13
   414  001023  0A                 	db	10
   415  001024  00                 	db	0
   416  001025  41                 	db	65	;'A'
   417  001026  54                 	db	84	;'T'
   418  001027  2B                 	db	43
   419  001028  50                 	db	80	;'P'
   420  001029  53                 	db	83	;'S'
   421  00102A  57                 	db	87	;'W'
   422  00102B  44                 	db	68	;'D'
   423  00102C  3A                 	db	58	;':'
   424  00102D  31                 	db	49	;'1'
   425  00102E  32                 	db	50	;'2'
   426  00102F  33                 	db	51	;'3'
   427  001030  34                 	db	52	;'4'
   428  001031  0D                 	db	13
   429  001032  0A                 	db	10
   430  001033  00                 	db	0
   431  001034  41                 	db	65	;'A'
   432  001035  54                 	db	84	;'T'
   433  001036  2B                 	db	43
   434  001037  52                 	db	82	;'R'
   435  001038  4F                 	db	79	;'O'
   436  001039  4C                 	db	76	;'L'
   437  00103A  45                 	db	69	;'E'
   438  00103B  3A                 	db	58	;':'
   439  00103C  30                 	db	48	;'0'
   440  00103D  0D                 	db	13
   441  00103E  0A                 	db	10
   442  00103F  00                 	db	0
   443  001040                     STR_9:
   444  001040  25                 	db	37
   445  001041  66                 	db	102	;'f'
   446  001042  00                 	db	0
   447  001043                     STR_5:
   448  001043  25                 	db	37
   449  001044  69                 	db	105	;'i'
   450  001045  00                 	db	0
   451  001046  00                 	db	0	; dummy byte at the end
   452  0000                     
   453                           ; #config settings
   454                           
   455                           	psect	cinit
   456  004EEA                     __pcinit:
   457                           	callstack 0
   458  004EEA                     start_initialization:
   459                           	callstack 0
   460  004EEA                     __initialization:
   461                           	callstack 0
   462                           
   463                           ; Initialize objects allocated to BANK1 (61 bytes)
   464                           ; load TBLPTR registers with __pidataBANK1
   465  004EEA  0E52               	movlw	low __pidataBANK1
   466  004EEC  6EF6               	movwf	tblptrl,c
   467  004EEE  0E59               	movlw	high __pidataBANK1
   468  004EF0  6EF7               	movwf	tblptrh,c
   469  004EF2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   470  004EF4  6EF8               	movwf	tblptru,c
   471  004EF6  EE01  F000         	lfsr	0,__pdataBANK1
   472  004EFA  EE10 F03D          	lfsr	1,61
   473  004EFE                     copy_data0:
   474  004EFE  0009               	tblrd		*+
   475  004F00  CFF5 FFEE          	movff	tablat,postinc0
   476  004F04  50E5               	movf	postdec1,w,c
   477  004F06  50E1               	movf	fsr1l,w,c
   478  004F08  E1FA               	bnz	copy_data0
   479                           
   480                           ; Initialize objects allocated to BANK0 (35 bytes)
   481                           ; load TBLPTR registers with __pidataBANK0
   482  004F0A  0E8A               	movlw	low __pidataBANK0
   483  004F0C  6EF6               	movwf	tblptrl,c
   484  004F0E  0E5C               	movlw	high __pidataBANK0
   485  004F10  6EF7               	movwf	tblptrh,c
   486  004F12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   487  004F14  6EF8               	movwf	tblptru,c
   488  004F16  EE00  F0DD         	lfsr	0,__pdataBANK0
   489  004F1A  EE10 F023          	lfsr	1,35
   490  004F1E                     copy_data1:
   491  004F1E  0009               	tblrd		*+
   492  004F20  CFF5 FFEE          	movff	tablat,postinc0
   493  004F24  50E5               	movf	postdec1,w,c
   494  004F26  50E1               	movf	fsr1l,w,c
   495  004F28  E1FA               	bnz	copy_data1
   496                           
   497                           ; Initialize objects allocated to COMRAM (5 bytes)
   498                           ; load TBLPTR registers with __pidataCOMRAM
   499  004F2A  0E3A               	movlw	low __pidataCOMRAM
   500  004F2C  6EF6               	movwf	tblptrl,c
   501  004F2E  0E5D               	movlw	high __pidataCOMRAM
   502  004F30  6EF7               	movwf	tblptrh,c
   503  004F32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   504  004F34  6EF8               	movwf	tblptru,c
   505  004F36  EE00  F03D         	lfsr	0,__pdataCOMRAM
   506  004F3A  EE10 F005          	lfsr	1,5
   507  004F3E                     copy_data2:
   508  004F3E  0009               	tblrd		*+
   509  004F40  CFF5 FFEE          	movff	tablat,postinc0
   510  004F44  50E5               	movf	postdec1,w,c
   511  004F46  50E1               	movf	fsr1l,w,c
   512  004F48  E1FA               	bnz	copy_data2
   513                           
   514                           ; Clear objects allocated to BANK1 (41 bytes)
   515  004F4A  EE01  F03D         	lfsr	0,__pbssBANK1
   516  004F4E  0E29               	movlw	41
   517  004F50                     clear_0:
   518  004F50  6AEE               	clrf	postinc0,c
   519  004F52  06E8               	decf	wreg,f,c
   520  004F54  E1FD               	bnz	clear_0
   521                           
   522                           ; Clear objects allocated to BANK0 (42 bytes)
   523  004F56  EE00  F0B3         	lfsr	0,__pbssBANK0
   524  004F5A  0E2A               	movlw	42
   525  004F5C                     clear_1:
   526  004F5C  6AEE               	clrf	postinc0,c
   527  004F5E  06E8               	decf	wreg,f,c
   528  004F60  E1FD               	bnz	clear_1
   529                           
   530                           ; Clear objects allocated to COMRAM (23 bytes)
   531  004F62  EE00  F026         	lfsr	0,__pbssCOMRAM
   532  004F66  0E17               	movlw	23
   533  004F68                     clear_2:
   534  004F68  6AEE               	clrf	postinc0,c
   535  004F6A  06E8               	decf	wreg,f,c
   536  004F6C  E1FD               	bnz	clear_2
   537  004F6E                     end_of_initialization:
   538                           	callstack 0
   539  004F6E                     __end_of__initialization:
   540                           	callstack 0
   541  004F6E  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   542  004F70  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   543  004F72  0100               	movlb	0
   544  004F74  EF24  F008         	goto	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMRAM
   547  000026                     __pbssCOMRAM:
   548                           	callstack 0
   549  000026                     _Timer1_PreLoaded_Value_Store:
   550                           	callstack 0
   551  000026                     	ds	2
   552  000028                     _RB6_InterruptHandler_HIGH:
   553                           	callstack 0
   554  000028                     	ds	2
   555  00002A                     _RB5_InterruptHandler_LOW:
   556                           	callstack 0
   557  00002A                     	ds	2
   558  00002C                     _RB5_InterruptHandler_HIGH:
   559                           	callstack 0
   560  00002C                     	ds	2
   561  00002E                     _RB4_InterruptHandler_LOW:
   562                           	callstack 0
   563  00002E                     	ds	2
   564  000030                     _RB4_InterruptHandler_HIGH:
   565                           	callstack 0
   566  000030                     	ds	2
   567  000032                     _INT1_InterruptHandler:
   568                           	callstack 0
   569  000032                     	ds	2
   570  000034                     _eusart_Rx_InterruptHandler:
   571                           	callstack 0
   572  000034                     	ds	2
   573  000036                     _i:
   574                           	callstack 0
   575  000036                     	ds	1
   576  000037                     _counter:
   577                           	callstack 0
   578  000037                     	ds	1
   579  000038                     _stepper_pos:
   580                           	callstack 0
   581  000038                     	ds	1
   582  000039                     _Timer2_PreLoaded_Value_Store:
   583                           	callstack 0
   584  000039                     	ds	1
   585  00003A                     _battery_volt_adc_read:
   586                           	callstack 0
   587  00003A                     	ds	2
   588  00003C                     _gpstemp:
   589                           	callstack 0
   590  00003C                     	ds	1
   591                           
   592                           	psect	dataCOMRAM
   593  00003D                     __pdataCOMRAM:
   594                           	callstack 0
   595  00003D                     _datasend:
   596                           	callstack 0
   597  00003D                     	ds	1
   598  00003E                     _blue:
   599                           	callstack 0
   600  00003E                     	ds	1
   601  00003F                     _gps:
   602                           	callstack 0
   603  00003F                     	ds	1
   604  000040                     _flags:
   605                           	callstack 0
   606  000040                     	ds	1
   607  000041                     _selector:
   608                           	callstack 0
   609  000041                     	ds	1
   610                           
   611                           	psect	bssBANK0
   612  0000B3                     __pbssBANK0:
   613                           	callstack 0
   614  0000B3                     _Timer1_Interrupt_Handler:
   615                           	callstack 0
   616  0000B3                     	ds	2
   617  0000B5                     _preloaded_val:
   618                           	callstack 0
   619  0000B5                     	ds	2
   620  0000B7                     _RB7_InterruptHandler_LOW:
   621                           	callstack 0
   622  0000B7                     	ds	2
   623  0000B9                     _RB7_InterruptHandler_HIGH:
   624                           	callstack 0
   625  0000B9                     	ds	2
   626  0000BB                     _RB6_InterruptHandler_LOW:
   627                           	callstack 0
   628  0000BB                     	ds	2
   629  0000BD                     _INT2_InterruptHandler:
   630                           	callstack 0
   631  0000BD                     	ds	2
   632  0000BF                     _INT0_InterruptHandler:
   633                           	callstack 0
   634  0000BF                     	ds	2
   635  0000C1                     	ds	2
   636  0000C3                     	ds	2
   637  0000C5                     	ds	2
   638  0000C7                     _eusart_frameerr_CallBack:
   639                           	callstack 0
   640  0000C7                     	ds	2
   641  0000C9                     _eusart_overrunerr_CallBack:
   642                           	callstack 0
   643  0000C9                     	ds	2
   644  0000CB                     _servo4Pos:
   645                           	callstack 0
   646  0000CB                     	ds	1
   647  0000CC                     _servo3Pos:
   648                           	callstack 0
   649  0000CC                     	ds	1
   650  0000CD                     _servo2Pos:
   651                           	callstack 0
   652  0000CD                     	ds	1
   653  0000CE                     _servo1Pos:
   654                           	callstack 0
   655  0000CE                     	ds	1
   656  0000CF                     _Movement_State:
   657                           	callstack 0
   658  0000CF                     	ds	1
   659  0000D0                     _timer0:
   660                           	callstack 0
   661  0000D0                     	ds	4
   662  0000D4                     _distance:
   663                           	callstack 0
   664  0000D4                     	ds	4
   665  0000D8                     _datarecive:
   666                           	callstack 0
   667  0000D8                     	ds	2
   668  0000DA                     _Checksum:
   669                           	callstack 0
   670  0000DA                     	ds	1
   671  0000DB                     _T_Integral:
   672                           	callstack 0
   673  0000DB                     	ds	1
   674  0000DC                     _RH_Integral:
   675                           	callstack 0
   676  0000DC                     	ds	1
   677                           
   678                           	psect	dataBANK0
   679  0000DD                     __pdataBANK0:
   680                           	callstack 0
   681  0000DD                     _lat_registers:
   682                           	callstack 0
   683  0000DD                     	ds	10
   684  0000E7                     _battery_volt_f:
   685                           	callstack 0
   686  0000E7                     	ds	4
   687  0000EB                     _i2c_obj:
   688                           	callstack 0
   689  0000EB                     	ds	7
   690  0000F2                     _servo_driver_obj:
   691                           	callstack 0
   692  0000F2                     	ds	4
   693  0000F6                     _ultrasonic:
   694                           	callstack 0
   695  0000F6                     	ds	2
   696  0000F8                     _stepper_base:
   697                           	callstack 0
   698  0000F8                     	ds	2
   699  0000FA                     _T_Decimal:
   700                           	callstack 0
   701  0000FA                     	ds	1
   702  0000FB                     _RH_Decimal:
   703                           	callstack 0
   704  0000FB                     	ds	1
   705  0000FC                     _driller_PIN:
   706                           	callstack 0
   707  0000FC                     	ds	1
   708  0000FD                     _TEST_PIN:
   709                           	callstack 0
   710  0000FD                     	ds	1
   711  0000FE                     _W2_W4_W6_Motor_Control:
   712                           	callstack 0
   713  0000FE                     	ds	1
   714  0000FF                     _W1_W3_W5_Motor_Control:
   715                           	callstack 0
   716  0000FF                     	ds	1
   717                           
   718                           	psect	bssBANK1
   719  00013D                     __pbssBANK1:
   720                           	callstack 0
   721  00013D                     	ds	9
   722  000146                     	ds	6
   723  00014C                     _longtude:
   724                           	callstack 0
   725  00014C                     	ds	13
   726  000159                     _latitude:
   727                           	callstack 0
   728  000159                     	ds	13
   729                           
   730                           	psect	dataBANK1
   731  000100                     __pdataBANK1:
   732                           	callstack 0
   733  000100                     _port_registers:
   734                           	callstack 0
   735  000100                     	ds	10
   736  00010A                     _tris_registers:
   737                           	callstack 0
   738  00010A                     	ds	10
   739  000114                     __uart_obj:
   740                           	callstack 0
   741  000114                     	ds	12
   742  000120                     _CCP2_Obj:
   743                           	callstack 0
   744  000120                     	ds	12
   745  00012C                     _CCP1_Obj:
   746                           	callstack 0
   747  00012C                     	ds	12
   748  000138                     _battery_adc:
   749                           	callstack 0
   750  000138                     	ds	5
   751                           
   752                           	psect	cstackBANK1
   753  000166                     __pcstackBANK1:
   754                           	callstack 0
   755  000166                     ?___fltol:
   756                           	callstack 0
   757  000166                     ___fltol@f1:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x0
   761  000166                     	ds	4
   762  00016A                     ??___fltol:
   763                           
   764                           ; 1 bytes @ 0x4
   765  00016A                     	ds	4
   766  00016E                     ??_async_config_baud_rate_gen:
   767  00016E                     ??_CCP_PWM_Set_Duty:
   768  00016E                     ?___awmod:
   769                           	callstack 0
   770  00016E                     Servo_SetAngle@i2c_obj:
   771                           	callstack 0
   772  00016E                     MSSP_I2C_Init@i2c_obj:
   773                           	callstack 0
   774  00016E                     ___awmod@dividend:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x8
   778  00016E                     	ds	2
   779  000170                     async_config_baud_rate_gen@ret_val:
   780                           	callstack 0
   781  000170                     ServoDriver_Init@i2c_obj:
   782                           	callstack 0
   783  000170                     Servo_SetAngle@servo_driver_obj:
   784                           	callstack 0
   785  000170                     ___awmod@divisor:
   786                           	callstack 0
   787  000170                     _CCP_PWM_Set_Duty$5827:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0xA
   791  000170                     	ds	1
   792  000171                     async_config_baud_rate_gen@Baudrate_temp:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0xB
   796  000171                     	ds	1
   797  000172                     ?___awdiv:
   798                           	callstack 0
   799  000172                     Servo_SetAngle@servo_no:
   800                           	callstack 0
   801  000172                     ServoDriver_Init@servo_driver_obj:
   802                           	callstack 0
   803  000172                     ___awdiv@dividend:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0xC
   807  000172                     	ds	1
   808  000173                     Servo_SetAngle@angle:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0xD
   812  000173                     	ds	1
   813  000174                     CCP_PWM_Set_Duty@l_duty_temp:
   814                           	callstack 0
   815  000174                     ___awdiv@divisor:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0xE
   819  000174                     	ds	1
   820  000175                     _async_config_baud_rate_gen$5828:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0xF
   824  000175                     	ds	1
   825  000176                     ___awdiv@counter:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x10
   829  000176                     	ds	1
   830  000177                     ___awdiv@sign:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x11
   834  000177                     	ds	1
   835  000178                     ___awdiv@quotient:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x12
   839  000178                     	ds	1
   840  000179                     EUSART_Async_Init@_eusart_obj:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x13
   844  000179                     	ds	1
   845  00017A                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x14
   849  00017A                     	ds	1
   850  00017B                     ??_application_intialize:
   851                           
   852                           ; 1 bytes @ 0x15
   853  00017B                     	ds	1
   854  00017C                     Bluetooth_Send_Data_Non_Blocking@data:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x16
   858  00017C                     	ds	1
   859  00017D                     ??_main:
   860                           
   861                           ; 1 bytes @ 0x17
   862  00017D                     	ds	2
   863  00017F                     _main$5829:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x19
   867  00017F                     	ds	2
   868                           
   869                           	psect	cstackBANK0
   870  000060                     __pcstackBANK0:
   871                           	callstack 0
   872  000060                     ??_GPIO_Pin_Write_Logic:
   873  000060                     ??_GPIO_Pin_Read_Logic:
   874  000060                     ??_ADC_Get_Conversion_Results:
   875  000060                     ?___xxtofl:
   876                           	callstack 0
   877  000060                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   878                           	callstack 0
   879  000060                     HAL_Timer0_Read_Val@l_high_byte:
   880                           	callstack 0
   881  000060                     PCA_Write_Reg@i2c_obj:
   882                           	callstack 0
   883  000060                     EUSART_Async_Transmit_Data@_eusart_obj:
   884                           	callstack 0
   885  000060                     EUSART_Async_Read_Data@_eusart_obj:
   886                           	callstack 0
   887  000060                     Get_Temp_HUM@RH_Decimal:
   888                           	callstack 0
   889  000060                     ___xxtofl@val:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x0
   893  000060                     	ds	1
   894  000061                     HAL_Timer0_Read_Val@l_low_byte:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x1
   898  000061                     	ds	1
   899  000062                     PCA_Write_Reg@slave_address:
   900                           	callstack 0
   901  000062                     EUSART_Async_Transmit_Data@data:
   902                           	callstack 0
   903  000062                     EUSART_Async_Read_Data@data:
   904                           	callstack 0
   905  000062                     Get_Temp_HUM@RH_Integral:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x2
   909  000062                     	ds	1
   910  000063                     PCA_Write_Reg@reg_address:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x3
   914  000063                     	ds	1
   915  000064                     ??___xxtofl:
   916  000064                     PCA_Write_Reg@data:
   917                           	callstack 0
   918  000064                     _EUSART_Async_Read_Data$2030:
   919                           	callstack 0
   920  000064                     Get_Temp_HUM@T_Decimal:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x4
   924  000064                     	ds	1
   925  000065                     ADC_Get_Conversion_Blocking@_adc:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x5
   929  000065                     	ds	1
   930  000066                     _EUSART_Async_Read_Data$2031:
   931                           	callstack 0
   932  000066                     GPIO_Pin_Initialize@_pin_config:
   933                           	callstack 0
   934  000066                     Get_Temp_HUM@T_Integral:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x6
   938  000066                     	ds	1
   939  000067                     ADC_Get_Conversion_Blocking@_channel:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x7
   943  000067                     	ds	1
   944  000068                     GPIO_Pin_Initialize@ERRORSTATUS:
   945                           	callstack 0
   946  000068                     ___xxtofl@sign:
   947                           	callstack 0
   948  000068                     ADC_Get_Conversion_Blocking@_result:
   949                           	callstack 0
   950  000068                     _EUSART_Async_Read_Data$2032:
   951                           	callstack 0
   952  000068                     Get_Temp_HUM@Checksum:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x8
   956  000068                     	ds	1
   957  000069                     ___xxtofl@exp:
   958                           	callstack 0
   959  000069                     ECU_DC_Motor_Init@dc_motor:
   960                           	callstack 0
   961  000069                     Ecu_Stepper_Init@stepper:
   962                           	callstack 0
   963  000069                     CCP_Init@_ccp_obj:
   964                           	callstack 0
   965  000069                     Ultra_Sonic_Init@ultrasonic_object:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x9
   969  000069                     	ds	1
   970  00006A                     ??_ADC_Get_Conversion_Blocking:
   971  00006A                     EUSART_Async_Read_Data@l_temp_data:
   972                           	callstack 0
   973  00006A                     ___xxtofl@arg:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0xA
   977  00006A                     	ds	1
   978  00006B                     ADC_Get_Conversion_Blocking@ERRORSTATUS:
   979                           	callstack 0
   980  00006B                     Ultra_Sonic_Init@_tmr0_config:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0xB
   984  00006B                     	ds	1
   985  00006C                     EUSART_Async_Read_Data_Blocking@_eusart_obj:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0xC
   989  00006C                     	ds	2
   990  00006E                     ?___fldiv:
   991                           	callstack 0
   992  00006E                     EUSART_Async_Read_Data_Blocking@data:
   993                           	callstack 0
   994  00006E                     ___fldiv@b:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0xE
   998  00006E                     	ds	2
   999  000070                     ??_GPS_Service:
  1000                           
  1001                           ; 1 bytes @ 0x10
  1002  000070                     	ds	2
  1003  000072                     ___fldiv@a:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x12
  1007  000072                     	ds	4
  1008  000076                     ??___fldiv:
  1009                           
  1010                           ; 1 bytes @ 0x16
  1011  000076                     	ds	4
  1012  00007A                     ___fldiv@rem:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x1A
  1016  00007A                     	ds	4
  1017  00007E                     ___fldiv@sign:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x1E
  1021  00007E                     	ds	1
  1022  00007F                     ___fldiv@new_exp:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x1F
  1026  00007F                     	ds	2
  1027  000081                     ___fldiv@grs:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x21
  1031  000081                     	ds	4
  1032  000085                     ___fldiv@bexp:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x25
  1036  000085                     	ds	1
  1037  000086                     ___fldiv@aexp:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x26
  1041  000086                     	ds	1
  1042  000087                     ?___flmul:
  1043                           	callstack 0
  1044  000087                     Get_Distance@ultrasonic_object:
  1045                           	callstack 0
  1046  000087                     ___flmul@b:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x27
  1050  000087                     	ds	2
  1051  000089                     Get_Distance@_tmr0_config:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x29
  1055  000089                     	ds	2
  1056  00008B                     Get_Distance@distance:
  1057                           	callstack 0
  1058  00008B                     ___flmul@a:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x2B
  1062  00008B                     	ds	2
  1063  00008D                     Get_Distance@timer_val:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x2D
  1067  00008D                     	ds	2
  1068  00008F                     ??___flmul:
  1069  00008F                     Get_Distance@logic:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x2F
  1073  00008F                     	ds	4
  1074  000093                     ___flmul@sign:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x33
  1078  000093                     	ds	1
  1079  000094                     ___flmul@aexp:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x34
  1083  000094                     	ds	1
  1084  000095                     ___flmul@grs:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x35
  1088  000095                     	ds	4
  1089  000099                     ___flmul@bexp:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x39
  1093  000099                     	ds	1
  1094  00009A                     ___flmul@prod:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x3A
  1098  00009A                     	ds	4
  1099  00009E                     ___flmul@temp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x3E
  1103  00009E                     	ds	2
  1104  0000A0                     ?___fladd:
  1105                           	callstack 0
  1106  0000A0                     ___fladd@b:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x40
  1110  0000A0                     	ds	4
  1111  0000A4                     ___fladd@a:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x44
  1115  0000A4                     	ds	4
  1116  0000A8                     ??___fladd:
  1117                           
  1118                           ; 1 bytes @ 0x48
  1119  0000A8                     	ds	4
  1120  0000AC                     ___fladd@signs:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x4C
  1124  0000AC                     	ds	1
  1125  0000AD                     ___fladd@aexp:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x4D
  1129  0000AD                     	ds	1
  1130  0000AE                     ___fladd@bexp:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x4E
  1134  0000AE                     	ds	1
  1135  0000AF                     ___fladd@grs:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x4F
  1139  0000AF                     	ds	1
  1140  0000B0                     ___awmod@counter:
  1141                           	callstack 0
  1142  0000B0                     Servo_SetAngle@angle_in_reg:
  1143                           	callstack 0
  1144  0000B0                     CCP_PWM_Set_Duty@_ccp_obj:
  1145                           	callstack 0
  1146  0000B0                     async_config_baud_rate_gen@_eusart_obj:
  1147                           	callstack 0
  1148  0000B0                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x50
  1152  0000B0                     	ds	1
  1153  0000B1                     ___awmod@sign:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x51
  1157  0000B1                     	ds	1
  1158  0000B2                     ??_I2C_Master_Mode_Clock_Configurations:
  1159  0000B2                     Servo_SetAngle@reg_addrees:
  1160                           	callstack 0
  1161  0000B2                     CCP_PWM_Set_Duty@_duty:
  1162                           	callstack 0
  1163  0000B2                     EUSART_Async_Init@ret_val:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x52
  1167  0000B2                     	ds	1
  1168                           
  1169                           	psect	cstackCOMRAM
  1170  000001                     __pcstackCOMRAM:
  1171                           	callstack 0
  1172  000001                     ??i2_calc_parity_odd:
  1173  000001                     ??i2_calc_parity_even:
  1174  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x0
  1178  000001                     	ds	2
  1179  000003                     ??i2_GPIO_Pin_Toggle_Logic:
  1180  000003                     i2calc_parity_odd@data:
  1181                           	callstack 0
  1182  000003                     i2calc_parity_even@data:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x2
  1186  000003                     	ds	1
  1187  000004                     i2calc_parity_odd@number_of_ones:
  1188                           	callstack 0
  1189  000004                     i2calc_parity_even@number_of_ones:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x3
  1193  000004                     	ds	1
  1194  000005                     i2calc_parity_odd@l_counter:
  1195                           	callstack 0
  1196  000005                     i2calc_parity_even@l_counter:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x4
  1200  000005                     	ds	1
  1201  000006                     i2EUSART_Async_Transmit_Data@_eusart_obj:
  1202                           	callstack 0
  1203  000006                     i2EUSART_Async_Read_Data@_eusart_obj:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x5
  1207  000006                     	ds	2
  1208  000008                     i2EUSART_Async_Transmit_Data@data:
  1209                           	callstack 0
  1210  000008                     i2EUSART_Async_Read_Data@data:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x7
  1214  000008                     	ds	2
  1215  00000A                     ??i2_EUSART_Async_Transmit_Data:
  1216  00000A                     ??i2_EUSART_Async_Read_Data:
  1217                           
  1218                           ; 1 bytes @ 0x9
  1219  00000A                     	ds	2
  1220  00000C                     i2Bluetooth_Send_Data_Non_Blocking@_uart_obj:
  1221                           	callstack 0
  1222  00000C                     i2_EUSART_Async_Read_Data$2030:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0xB
  1226  00000C                     	ds	2
  1227  00000E                     i2Bluetooth_Send_Data_Non_Blocking@data:
  1228                           	callstack 0
  1229  00000E                     i2_EUSART_Async_Read_Data$2031:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0xD
  1233  00000E                     	ds	1
  1234  00000F                     
  1235                           ; 1 bytes @ 0xE
  1236  00000F                     	ds	1
  1237  000010                     i2_EUSART_Async_Read_Data$2032:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0xF
  1241  000010                     	ds	2
  1242  000012                     i2EUSART_Async_Read_Data@l_temp_data:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x11
  1246  000012                     	ds	2
  1247  000014                     ??_InterruptManagerHigh:
  1248                           
  1249                           ; 1 bytes @ 0x13
  1250  000014                     	ds	6
  1251  00001A                     RB4_ISR@Handler_Select:
  1252                           	callstack 0
  1253  00001A                     RB5_ISR@Handler_Select:
  1254                           	callstack 0
  1255  00001A                     RB6_ISR@Handler_Select:
  1256                           	callstack 0
  1257  00001A                     RB7_ISR@Handler_Select:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x19
  1261  00001A                     	ds	1
  1262  00001B                     ??_InterruptManagerLow:
  1263                           
  1264                           ; 1 bytes @ 0x1A
  1265  00001B                     	ds	3
  1266  00001E                     ??_adc_channel_pin_config_as_input:
  1267  00001E                     ??_calc_parity_even:
  1268  00001E                     ??_calc_parity_odd:
  1269  00001E                     ??_DHT11_Start:
  1270  00001E                     ?___wmul:
  1271                           	callstack 0
  1272  00001E                     ADC_Start_Conversion@_adc:
  1273                           	callstack 0
  1274  00001E                     ADC_Get_Conversion_Results@_adc:
  1275                           	callstack 0
  1276  00001E                     adc_select_result_formate@_adc:
  1277                           	callstack 0
  1278  00001E                     adc_select_voltage_reference@_adc:
  1279                           	callstack 0
  1280  00001E                     CCP_PWM_Start@_ccp_obj:
  1281                           	callstack 0
  1282  00001E                     CCP_Interrupt_Config@_ccp_obj:
  1283                           	callstack 0
  1284  00001E                     CCP_Mode_Timer_Select@_ccp_obj:
  1285                           	callstack 0
  1286  00001E                     async_Tx_config@_tx_obj:
  1287                           	callstack 0
  1288  00001E                     Rx_config_interrupt@_rx_obj:
  1289                           	callstack 0
  1290  00001E                     GPIO_Pin_Direction_Initialize@_pin_config:
  1291                           	callstack 0
  1292  00001E                     GPIO_Pin_Write_Logic@_pin_config:
  1293                           	callstack 0
  1294  00001E                     GPIO_Pin_Read_Logic@_pin_config:
  1295                           	callstack 0
  1296  00001E                     GPIO_Pin_Toggle_Logic@_pin_config:
  1297                           	callstack 0
  1298  00001E                     MSSP_I2C_Master_Send_Start@i2c_obj:
  1299                           	callstack 0
  1300  00001E                     MSSP_I2C_Master_Send_Stop@i2c_obj:
  1301                           	callstack 0
  1302  00001E                     MSSP_I2C_Master_Write_Blocking@i2c_obj:
  1303                           	callstack 0
  1304  00001E                     I2C_Slave_Mode_Clock_Configurations@i2c_obj:
  1305                           	callstack 0
  1306  00001E                     HAL_Timer0_Read_Val@_tmr0_config:
  1307                           	callstack 0
  1308  00001E                     HAL_Timer0_Write_Val@_tmr0_config:
  1309                           	callstack 0
  1310  00001E                     Timer2_Init@_timer2:
  1311                           	callstack 0
  1312  00001E                     DHT11_Read_Data@data:
  1313                           	callstack 0
  1314  00001E                     ___wmul@multiplier:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x1D
  1318  00001E                     	ds	2
  1319  000020                     ??_GPIO_Pin_Direction_Initialize:
  1320  000020                     ??_Timer2_Init:
  1321  000020                     ??_I2C_Slave_Mode_Clock_Configurations:
  1322  000020                     ??_DHT11_Read_Data:
  1323  000020                     ??_GPIO_Pin_Toggle_Logic:
  1324  000020                     ADC_Start_Conversion@ERRORSTATUS:
  1325                           	callstack 0
  1326  000020                     adc_channel_pin_config_as_input@_channel:
  1327                           	callstack 0
  1328  000020                     async_Tx_config@ret_val:
  1329                           	callstack 0
  1330  000020                     Rx_config_interrupt@ret_val:
  1331                           	callstack 0
  1332  000020                     calc_parity_odd@data:
  1333                           	callstack 0
  1334  000020                     calc_parity_even@data:
  1335                           	callstack 0
  1336  000020                     GPIO_Pin_Write_Logic@logic:
  1337                           	callstack 0
  1338  000020                     MSSP_I2C_Master_Write_Blocking@i2c_data:
  1339                           	callstack 0
  1340  000020                     ADC_Get_Conversion_Results@_result:
  1341                           	callstack 0
  1342  000020                     GPIO_Pin_Read_Logic@logic:
  1343                           	callstack 0
  1344  000020                     HAL_Timer0_Read_Val@result:
  1345                           	callstack 0
  1346  000020                     HAL_Timer0_Write_Val@val:
  1347                           	callstack 0
  1348  000020                     ___wmul@multiplicand:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x1F
  1352  000020                     	ds	1
  1353  000021                     calc_parity_odd@number_of_ones:
  1354                           	callstack 0
  1355  000021                     calc_parity_even@number_of_ones:
  1356                           	callstack 0
  1357  000021                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1358                           	callstack 0
  1359  000021                     DHT11_Read_Data@i:
  1360                           	callstack 0
  1361  000021                     ADC_Init@_adc:
  1362                           	callstack 0
  1363  000021                     ADC_select_channel@_adc:
  1364                           	callstack 0
  1365  000021                     CCP_PWM_Mode_Config@_ccp_obj:
  1366                           	callstack 0
  1367  000021                     CCP_Capture_Mode_Config@_ccp_obj:
  1368                           	callstack 0
  1369  000021                     CCP_Compare_Mode_Config@_ccp_obj:
  1370                           	callstack 0
  1371  000021                     async_Rx_config@_rx_obj:
  1372                           	callstack 0
  1373  000021                     MSSP_I2C_Master_Write_Blocking@_ack:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x20
  1377  000021                     	ds	1
  1378  000022                     ??_HAL_Timer0_Read_Val:
  1379  000022                     ADC_Get_Conversion_Results@ERRORSTATUS:
  1380                           	callstack 0
  1381  000022                     calc_parity_odd@l_counter:
  1382                           	callstack 0
  1383  000022                     calc_parity_even@l_counter:
  1384                           	callstack 0
  1385  000022                     HAL_Timer0_Write_Val@ret_value:
  1386                           	callstack 0
  1387  000022                     ECU_DC_Motor_Run_Left@dc_motor:
  1388                           	callstack 0
  1389  000022                     ECU_DC_Motor_Run_Right@dc_motor:
  1390                           	callstack 0
  1391  000022                     stepper_move_one_deg_cw@stepper:
  1392                           	callstack 0
  1393  000022                     stepper_move_one_deg_ccw@stepper:
  1394                           	callstack 0
  1395  000022                     send_trig_pulse@ultrasonic_object:
  1396                           	callstack 0
  1397  000022                     ___wmul@product:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x21
  1401  000022                     	ds	1
  1402  000023                     ??_EUSART_Async_Transmit_Data:
  1403  000023                     ??_EUSART_Async_Read_Data:
  1404  000023                     ??_CCP_Capture_Mode_Config:
  1405  000023                     ??_CCP_Compare_Mode_Config:
  1406  000023                     ??_ADC_Init:
  1407  000023                     PCA_Write_Reg@ack:
  1408                           	callstack 0
  1409  000023                     ADC_select_channel@_channel:
  1410                           	callstack 0
  1411  000023                     async_Rx_config@ret_val:
  1412                           	callstack 0
  1413  000023                     HAL_Timer0_Init@_tmr0_config:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x22
  1417  000023                     	ds	1
  1418  000024                     ??_ADC_select_channel:
  1419  000024                     ___fltol@sign1:
  1420                           	callstack 0
  1421  000024                     stepper_move_one_deg_cw@i:
  1422                           	callstack 0
  1423  000024                     stepper_move_one_deg_ccw@i:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x23
  1427  000024                     	ds	1
  1428  000025                     ??_HAL_Timer0_Init:
  1429  000025                     ADC_select_channel@ERRORSTATUS:
  1430                           	callstack 0
  1431  000025                     CCP_Capture_Mode_Config@ret:
  1432                           	callstack 0
  1433  000025                     CCP_Compare_Mode_Config@ret:
  1434                           	callstack 0
  1435  000025                     GPS_Service@key:
  1436                           	callstack 0
  1437  000025                     ___fltol@exp1:
  1438                           	callstack 0
  1439                           
  1440                           ; 1 bytes @ 0x24
  1441  000025                     	ds	1
  1442  000026                     
  1443                           ; 1 bytes @ 0x25
  1444 ;;
  1445 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1446 ;;
  1447 ;; *************** function _main *****************
  1448 ;; Defined at:
  1449 ;;		line 219 in file "application.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2  1950[None  ] int 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:        4 bytes
  1468 ;; Hardware stack levels required when called: 14
  1469 ;; This function calls:
  1470 ;;		_Bluetooth_Send_Data_Non_Blocking
  1471 ;;		_GPIO_Pin_Toggle_Logic
  1472 ;;		_GPS_Service
  1473 ;;		_Get_Distance
  1474 ;;		_Get_Temp_HUM
  1475 ;;		_Robot_Move_Backward
  1476 ;;		_Robot_Move_Forward
  1477 ;;		_Robot_Steer_Left
  1478 ;;		_Robot_Steer_Left_Backward
  1479 ;;		_Robot_Steer_Left_Forward
  1480 ;;		_Robot_Steer_Right
  1481 ;;		_Robot_Steer_Right_Backward
  1482 ;;		_Robot_Steer_Right_Forward
  1483 ;;		_Robot_Steer_Stop
  1484 ;;		_Servo_SetAngle
  1485 ;;		___awdiv
  1486 ;;		___awmod
  1487 ;;		___fldiv
  1488 ;;		___fltol
  1489 ;;		_application_intialize
  1490 ;;		_battery_level
  1491 ;;		_stepper_move_one_deg_ccw
  1492 ;;		_stepper_move_one_deg_cw
  1493 ;; This function is called by:
  1494 ;;		Startup code after reset
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text0
  1499  001048                     __ptext0:
  1500                           	callstack 0
  1501  001048                     _main:
  1502                           	callstack 17
  1503  001048                     
  1504                           ;application.c: 221:     application_intialize();
  1505  001048  EC08  F015         	call	_application_intialize	;wreg free
  1506                           
  1507                           ;application.c: 222:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
  1508  00104C  0EFD               	movlw	low _TEST_PIN
  1509  00104E  6E1E               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1510  001050  0E00               	movlw	high _TEST_PIN
  1511  001052  6E1F               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1512  001054  EC82  F029         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1513  001058  EF58  F00A         	goto	l13275
  1514  00105C                     l13109:
  1515                           
  1516                           ; BSR set to: 1
  1517                           ;application.c: 233:                 Robot_Steer_Stop();
  1518  00105C  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  1519  001060                     l13111:
  1520                           
  1521                           ;application.c: 234:                 datarecive=100;
  1522  001060  0E00               	movlw	0
  1523  001062  0100               	movlb	0	; () banked
  1524  001064  6FD9               	movwf	(_datarecive+1)& (0+255),b	;volatile
  1525  001066  0E64               	movlw	100
  1526  001068  6FD8               	movwf	_datarecive& (0+255),b	;volatile
  1527                           
  1528                           ;application.c: 235:                 break;
  1529  00106A  EF58  F00A         	goto	l13275
  1530  00106E                     l13113:
  1531                           
  1532                           ; BSR set to: 1
  1533                           ;application.c: 238:                 Robot_Steer_Left_Forward();
  1534  00106E  ECAA  F021         	call	_Robot_Steer_Left_Forward	;wreg free
  1535  001072  EF30  F008         	goto	l13111
  1536  001076                     l13117:
  1537                           
  1538                           ; BSR set to: 1
  1539                           ;application.c: 243:                 Robot_Move_Forward();
  1540  001076  EC6A  F022         	call	_Robot_Move_Forward	;wreg free
  1541  00107A  EF30  F008         	goto	l13111
  1542  00107E                     l13121:
  1543                           
  1544                           ; BSR set to: 1
  1545                           ;application.c: 248:                 Robot_Steer_Right_Forward();
  1546  00107E  ECEA  F020         	call	_Robot_Steer_Right_Forward	;wreg free
  1547  001082  EF30  F008         	goto	l13111
  1548  001086                     l13125:
  1549                           
  1550                           ; BSR set to: 1
  1551                           ;application.c: 254:                  Robot_Steer_Left();
  1552  001086  EC0A  F022         	call	_Robot_Steer_Left	;wreg free
  1553  00108A  EF30  F008         	goto	l13111
  1554  00108E                     l13129:
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;application.c: 259:                 Robot_Steer_Right();
  1558  00108E  EC4A  F021         	call	_Robot_Steer_Right	;wreg free
  1559  001092  EF30  F008         	goto	l13111
  1560  001096                     l13133:
  1561                           
  1562                           ; BSR set to: 1
  1563                           ;application.c: 264:                 Robot_Steer_Left_Backward();
  1564  001096  ECE6  F023         	call	_Robot_Steer_Left_Backward	;wreg free
  1565  00109A  EF30  F008         	goto	l13111
  1566  00109E                     l13137:
  1567                           
  1568                           ; BSR set to: 1
  1569                           ;application.c: 269:                 Robot_Move_Backward();
  1570  00109E  ECCA  F022         	call	_Robot_Move_Backward	;wreg free
  1571  0010A2  EF30  F008         	goto	l13111
  1572  0010A6                     l13141:
  1573                           
  1574                           ; BSR set to: 1
  1575                           ;application.c: 274:                 Robot_Steer_Right_Backward();
  1576  0010A6  EC89  F023         	call	_Robot_Steer_Right_Backward	;wreg free
  1577  0010AA  EF30  F008         	goto	l13111
  1578  0010AE                     l13147:
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;application.c: 283:                 GPIO_Pin_Toggle_Logic(&driller_PIN);
  1582  0010AE  0EFC               	movlw	low _driller_PIN
  1583  0010B0  6E1E               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1584  0010B2  0E00               	movlw	high _driller_PIN
  1585  0010B4  6E1F               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1586  0010B6  EC82  F029         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1587                           
  1588                           ;application.c: 285:                  break;
  1589  0010BA  EF58  F00A         	goto	l13275
  1590  0010BE                     l13149:
  1591                           
  1592                           ; BSR set to: 1
  1593                           ;application.c: 289:                  stepper_move_one_deg_cw(&stepper_base);
  1594  0010BE  0EF8               	movlw	low _stepper_base
  1595  0010C0  6E22               	movwf	stepper_move_one_deg_cw@stepper^0,c
  1596  0010C2  0E00               	movlw	high _stepper_base
  1597  0010C4  6E23               	movwf	(stepper_move_one_deg_cw@stepper+1)^0,c
  1598  0010C6  EC47  F028         	call	_stepper_move_one_deg_cw	;wreg free
  1599                           
  1600                           ;application.c: 290:                  break;
  1601  0010CA  EF58  F00A         	goto	l13275
  1602  0010CE                     l13151:
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;application.c: 294:                 stepper_move_one_deg_ccw(&stepper_base);
  1606  0010CE  0EF8               	movlw	low _stepper_base
  1607  0010D0  6E22               	movwf	stepper_move_one_deg_ccw@stepper^0,c
  1608  0010D2  0E00               	movlw	high _stepper_base
  1609  0010D4  6E23               	movwf	(stepper_move_one_deg_ccw@stepper+1)^0,c
  1610  0010D6  EC8B  F028         	call	_stepper_move_one_deg_ccw	;wreg free
  1611                           
  1612                           ;application.c: 295:                 break;
  1613  0010DA  EF58  F00A         	goto	l13275
  1614  0010DE                     l13153:
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;application.c: 299:                   servo1Pos--;
  1618  0010DE  0100               	movlb	0	; () banked
  1619  0010E0  07CE               	decf	_servo1Pos& (0+255),f,b
  1620  0010E2                     
  1621                           ; BSR set to: 0
  1622                           ;application.c: 300:                   if(servo1Pos<1)
  1623  0010E2  51CE               	movf	_servo1Pos& (0+255),w,b
  1624  0010E4  A4D8               	btfss	status,2,c
  1625  0010E6  EF77  F008         	goto	u13771
  1626  0010EA  EF79  F008         	goto	u13770
  1627  0010EE                     u13771:
  1628  0010EE  EF7B  F008         	goto	l13159
  1629  0010F2                     u13770:
  1630  0010F2                     
  1631                           ; BSR set to: 0
  1632                           ;application.c: 301:                   {;application.c: 302:                     servo1P
      +                          os=1;
  1633  0010F2  0E01               	movlw	1
  1634  0010F4  6FCE               	movwf	_servo1Pos& (0+255),b
  1635  0010F6                     l13159:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;application.c: 304:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_9 , servo1Pos );
  1639  0010F6  0EEB               	movlw	low _i2c_obj
  1640  0010F8  0101               	movlb	1	; () banked
  1641  0010FA  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1642  0010FC  0E00               	movlw	high _i2c_obj
  1643  0010FE  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1644  001100  0EF2               	movlw	low _servo_driver_obj
  1645  001102  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1646  001104  0E00               	movlw	high _servo_driver_obj
  1647  001106  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1648  001108  0E08               	movlw	8
  1649  00110A  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1650  00110C  C0CE  F173         	movff	_servo1Pos,Servo_SetAngle@angle
  1651  001110  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  1652  001114                     l13161:
  1653                           
  1654                           ;application.c: 305:                   _delay((unsigned long)((30)*(8000000/4000.0)));
  1655  001114  0E4E               	movlw	78
  1656  001116  0101               	movlb	1	; () banked
  1657  001118  6F7D               	movwf	??_main& (0+255),b
  1658  00111A  0EEB               	movlw	235
  1659  00111C                     u13857:
  1660  00111C  2EE8               	decfsz	wreg,f,c
  1661  00111E  D7FE               	bra	u13857
  1662  001120  2F7D               	decfsz	??_main& (0+255),f,b
  1663  001122  D7FC               	bra	u13857
  1664                           
  1665                           ;application.c: 308:                   break;
  1666  001124  EF58  F00A         	goto	l13275
  1667  001128                     l13163:
  1668                           
  1669                           ; BSR set to: 1
  1670                           ;application.c: 312:                  servo1Pos++;
  1671  001128  0100               	movlb	0	; () banked
  1672  00112A  2BCE               	incf	_servo1Pos& (0+255),f,b
  1673  00112C                     
  1674                           ; BSR set to: 0
  1675                           ;application.c: 313:                  if(servo1Pos>180)
  1676  00112C  0EB4               	movlw	180
  1677  00112E  65CE               	cpfsgt	_servo1Pos& (0+255),b
  1678  001130  EF9C  F008         	goto	u13781
  1679  001134  EF9E  F008         	goto	u13780
  1680  001138                     u13781:
  1681  001138  EF7B  F008         	goto	l13159
  1682  00113C                     u13780:
  1683  00113C                     
  1684                           ; BSR set to: 0
  1685                           ;application.c: 314:                  {;application.c: 315:                    servo1Pos
      +                          =180;
  1686  00113C  0EB4               	movlw	180
  1687  00113E  6FCE               	movwf	_servo1Pos& (0+255),b
  1688  001140  EF7B  F008         	goto	l13159
  1689  001144                     l13173:
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;application.c: 324:                   servo2Pos--;
  1693  001144  0100               	movlb	0	; () banked
  1694  001146  07CD               	decf	_servo2Pos& (0+255),f,b
  1695  001148                     
  1696                           ; BSR set to: 0
  1697                           ;application.c: 325:                   if(servo2Pos<1)
  1698  001148  51CD               	movf	_servo2Pos& (0+255),w,b
  1699  00114A  A4D8               	btfss	status,2,c
  1700  00114C  EFAA  F008         	goto	u13791
  1701  001150  EFAC  F008         	goto	u13790
  1702  001154                     u13791:
  1703  001154  EFAE  F008         	goto	l13179
  1704  001158                     u13790:
  1705  001158                     
  1706                           ; BSR set to: 0
  1707                           ;application.c: 326:                   {;application.c: 327:                     servo2P
      +                          os=1;
  1708  001158  0E01               	movlw	1
  1709  00115A  6FCD               	movwf	_servo2Pos& (0+255),b
  1710  00115C                     l13179:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;application.c: 329:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_10 , servo2Pos );
  1714  00115C  0EEB               	movlw	low _i2c_obj
  1715  00115E  0101               	movlb	1	; () banked
  1716  001160  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1717  001162  0E00               	movlw	high _i2c_obj
  1718  001164  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1719  001166  0EF2               	movlw	low _servo_driver_obj
  1720  001168  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1721  00116A  0E00               	movlw	high _servo_driver_obj
  1722  00116C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1723  00116E  0E09               	movlw	9
  1724  001170  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1725  001172  C0CD  F173         	movff	_servo2Pos,Servo_SetAngle@angle
  1726  001176  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  1727  00117A  EF8A  F008         	goto	l13161
  1728  00117E                     l13183:
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;application.c: 335:                   servo2Pos++;
  1732  00117E  0100               	movlb	0	; () banked
  1733  001180  2BCD               	incf	_servo2Pos& (0+255),f,b
  1734  001182                     
  1735                           ; BSR set to: 0
  1736                           ;application.c: 336:                   if(servo2Pos>180)
  1737  001182  0EB4               	movlw	180
  1738  001184  65CD               	cpfsgt	_servo2Pos& (0+255),b
  1739  001186  EFC7  F008         	goto	u13801
  1740  00118A  EFC9  F008         	goto	u13800
  1741  00118E                     u13801:
  1742  00118E  EFAE  F008         	goto	l13179
  1743  001192                     u13800:
  1744  001192                     
  1745                           ; BSR set to: 0
  1746                           ;application.c: 337:                   {;application.c: 338:                     servo2P
      +                          os=180;
  1747  001192  0EB4               	movlw	180
  1748  001194  6FCD               	movwf	_servo2Pos& (0+255),b
  1749  001196  EFAE  F008         	goto	l13179
  1750  00119A                     l13193:
  1751                           
  1752                           ; BSR set to: 1
  1753                           ;application.c: 346:                   servo3Pos--;
  1754  00119A  0100               	movlb	0	; () banked
  1755  00119C  07CC               	decf	_servo3Pos& (0+255),f,b
  1756  00119E                     
  1757                           ; BSR set to: 0
  1758                           ;application.c: 347:                   if(servo3Pos<1)
  1759  00119E  51CC               	movf	_servo3Pos& (0+255),w,b
  1760  0011A0  A4D8               	btfss	status,2,c
  1761  0011A2  EFD5  F008         	goto	u13811
  1762  0011A6  EFD7  F008         	goto	u13810
  1763  0011AA                     u13811:
  1764  0011AA  EFD9  F008         	goto	l13199
  1765  0011AE                     u13810:
  1766  0011AE                     
  1767                           ; BSR set to: 0
  1768                           ;application.c: 348:                   {;application.c: 349:                     servo3P
      +                          os=1;
  1769  0011AE  0E01               	movlw	1
  1770  0011B0  6FCC               	movwf	_servo3Pos& (0+255),b
  1771  0011B2                     l13199:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;application.c: 351:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_11 , servo3Pos );
  1775  0011B2  0EEB               	movlw	low _i2c_obj
  1776  0011B4  0101               	movlb	1	; () banked
  1777  0011B6  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1778  0011B8  0E00               	movlw	high _i2c_obj
  1779  0011BA  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1780  0011BC  0EF2               	movlw	low _servo_driver_obj
  1781  0011BE  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1782  0011C0  0E00               	movlw	high _servo_driver_obj
  1783  0011C2  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1784  0011C4  0E0A               	movlw	10
  1785  0011C6  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1786  0011C8  C0CC  F173         	movff	_servo3Pos,Servo_SetAngle@angle
  1787  0011CC  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  1788  0011D0  EF8A  F008         	goto	l13161
  1789  0011D4                     l13203:
  1790                           
  1791                           ; BSR set to: 1
  1792                           ;application.c: 357:                   servo3Pos++;
  1793  0011D4  0100               	movlb	0	; () banked
  1794  0011D6  2BCC               	incf	_servo3Pos& (0+255),f,b
  1795  0011D8                     
  1796                           ; BSR set to: 0
  1797                           ;application.c: 358:                   if(servo3Pos>180)
  1798  0011D8  0EB4               	movlw	180
  1799  0011DA  65CC               	cpfsgt	_servo3Pos& (0+255),b
  1800  0011DC  EFF2  F008         	goto	u13821
  1801  0011E0  EFF4  F008         	goto	u13820
  1802  0011E4                     u13821:
  1803  0011E4  EFD9  F008         	goto	l13199
  1804  0011E8                     u13820:
  1805  0011E8                     
  1806                           ; BSR set to: 0
  1807                           ;application.c: 359:                   {;application.c: 360:                     servo3P
      +                          os=180;
  1808  0011E8  0EB4               	movlw	180
  1809  0011EA  6FCC               	movwf	_servo3Pos& (0+255),b
  1810  0011EC  EFD9  F008         	goto	l13199
  1811  0011F0                     l13213:
  1812                           
  1813                           ; BSR set to: 1
  1814                           ;application.c: 368:                   servo4Pos--;
  1815  0011F0  0100               	movlb	0	; () banked
  1816  0011F2  07CB               	decf	_servo4Pos& (0+255),f,b
  1817  0011F4                     
  1818                           ; BSR set to: 0
  1819                           ;application.c: 369:                   if(servo4Pos<1)
  1820  0011F4  51CB               	movf	_servo4Pos& (0+255),w,b
  1821  0011F6  A4D8               	btfss	status,2,c
  1822  0011F8  EF00  F009         	goto	u13831
  1823  0011FC  EF02  F009         	goto	u13830
  1824  001200                     u13831:
  1825  001200  EF04  F009         	goto	l13219
  1826  001204                     u13830:
  1827  001204                     
  1828                           ; BSR set to: 0
  1829                           ;application.c: 370:                   {;application.c: 371:                     servo4P
      +                          os=1;
  1830  001204  0E01               	movlw	1
  1831  001206  6FCB               	movwf	_servo4Pos& (0+255),b
  1832  001208                     l13219:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;application.c: 373:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_12 , servo4Pos );
  1836  001208  0EEB               	movlw	low _i2c_obj
  1837  00120A  0101               	movlb	1	; () banked
  1838  00120C  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1839  00120E  0E00               	movlw	high _i2c_obj
  1840  001210  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1841  001212  0EF2               	movlw	low _servo_driver_obj
  1842  001214  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1843  001216  0E00               	movlw	high _servo_driver_obj
  1844  001218  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1845  00121A  0E0B               	movlw	11
  1846  00121C  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1847  00121E  C0CB  F173         	movff	_servo4Pos,Servo_SetAngle@angle
  1848  001222  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  1849  001226  EF8A  F008         	goto	l13161
  1850  00122A                     l13223:
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;application.c: 379:                   servo4Pos++;
  1854  00122A  0100               	movlb	0	; () banked
  1855  00122C  2BCB               	incf	_servo4Pos& (0+255),f,b
  1856  00122E                     
  1857                           ; BSR set to: 0
  1858                           ;application.c: 380:                   if(servo4Pos>180)
  1859  00122E  0EB4               	movlw	180
  1860  001230  65CB               	cpfsgt	_servo4Pos& (0+255),b
  1861  001232  EF1D  F009         	goto	u13841
  1862  001236  EF1F  F009         	goto	u13840
  1863  00123A                     u13841:
  1864  00123A  EF04  F009         	goto	l13219
  1865  00123E                     u13840:
  1866  00123E                     
  1867                           ; BSR set to: 0
  1868                           ;application.c: 381:                   {;application.c: 382:                     servo4P
      +                          os=180;
  1869  00123E  0EB4               	movlw	180
  1870  001240  6FCB               	movwf	_servo4Pos& (0+255),b
  1871  001242  EF04  F009         	goto	l13219
  1872  001246                     l13233:
  1873                           
  1874                           ; BSR set to: 1
  1875                           ;application.c: 390:                  Get_Temp_HUM(&RH_Decimal, &RH_Integral, &T_Decimal
      +                          , &T_Integral, &Checksum);
  1876  001246  0EFB               	movlw	low _RH_Decimal
  1877  001248  0100               	movlb	0	; () banked
  1878  00124A  6F60               	movwf	Get_Temp_HUM@RH_Decimal& (0+255),b
  1879  00124C  0E00               	movlw	high _RH_Decimal
  1880  00124E  6F61               	movwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),b
  1881  001250  0EDC               	movlw	low _RH_Integral
  1882  001252  6F62               	movwf	Get_Temp_HUM@RH_Integral& (0+255),b
  1883  001254  0E00               	movlw	high _RH_Integral
  1884  001256  6F63               	movwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),b
  1885  001258  0EFA               	movlw	low _T_Decimal
  1886  00125A  6F64               	movwf	Get_Temp_HUM@T_Decimal& (0+255),b
  1887  00125C  0E00               	movlw	high _T_Decimal
  1888  00125E  6F65               	movwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),b
  1889  001260  0EDB               	movlw	low _T_Integral
  1890  001262  6F66               	movwf	Get_Temp_HUM@T_Integral& (0+255),b
  1891  001264  0E00               	movlw	high _T_Integral
  1892  001266  6F67               	movwf	(Get_Temp_HUM@T_Integral+1)& (0+255),b
  1893  001268  0EDA               	movlw	low _Checksum
  1894  00126A  6F68               	movwf	Get_Temp_HUM@Checksum& (0+255),b
  1895  00126C  0E00               	movlw	high _Checksum
  1896  00126E  6F69               	movwf	(Get_Temp_HUM@Checksum+1)& (0+255),b
  1897  001270  ECA5  F025         	call	_Get_Temp_HUM	;wreg free
  1898                           
  1899                           ;application.c: 391:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(T_Decimal/10)));
  1900  001274  0E14               	movlw	low __uart_obj
  1901  001276  0101               	movlb	1	; () banked
  1902  001278  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  1903  00127A  0E01               	movlw	high __uart_obj
  1904  00127C  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  1905  00127E  C0FA  F172         	movff	_T_Decimal,___awdiv@dividend
  1906  001282  6B73               	clrf	(___awdiv@dividend+1)& (0+255),b
  1907  001284  0E00               	movlw	0
  1908  001286  6F75               	movwf	(___awdiv@divisor+1)& (0+255),b
  1909  001288  0E0A               	movlw	10
  1910  00128A  6F74               	movwf	___awdiv@divisor& (0+255),b
  1911  00128C  EC87  F020         	call	___awdiv	;wreg free
  1912  001290  0101               	movlb	1	; () banked
  1913  001292  5172               	movf	?___awdiv& (0+255),w,b
  1914  001294  0F30               	addlw	48
  1915  001296  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  1916  001298  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  1917  00129C                     
  1918                           ;application.c: 392:                  _delay((unsigned long)((5)*(8000000/4000.0)));
  1919  00129C  0E0D               	movlw	13
  1920  00129E  0101               	movlb	1	; () banked
  1921  0012A0  6F7D               	movwf	??_main& (0+255),b
  1922  0012A2  0EFB               	movlw	251
  1923  0012A4                     u13867:
  1924  0012A4  2EE8               	decfsz	wreg,f,c
  1925  0012A6  D7FE               	bra	u13867
  1926  0012A8  2F7D               	decfsz	??_main& (0+255),f,b
  1927  0012AA  D7FC               	bra	u13867
  1928  0012AC  F000 F000          	nop2	
  1929  0012B0                     
  1930                           ;application.c: 393:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(T_Decimal%10)));
  1931  0012B0  0E14               	movlw	low __uart_obj
  1932  0012B2  0101               	movlb	1	; () banked
  1933  0012B4  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  1934  0012B6  0E01               	movlw	high __uart_obj
  1935  0012B8  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  1936  0012BA  C0FA  F16E         	movff	_T_Decimal,___awmod@dividend
  1937  0012BE  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  1938  0012C0  0E00               	movlw	0
  1939  0012C2  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1940  0012C4  0E0A               	movlw	10
  1941  0012C6  6F70               	movwf	___awmod@divisor& (0+255),b
  1942  0012C8  EC24  F020         	call	___awmod	;wreg free
  1943  0012CC  0101               	movlb	1	; () banked
  1944  0012CE  516E               	movf	?___awmod& (0+255),w,b
  1945  0012D0  0F30               	addlw	48
  1946  0012D2  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  1947  0012D4  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  1948  0012D8  EF30  F008         	goto	l13111
  1949  0012DC                     l13241:
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;application.c: 398:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(RH_Decimal/10)));
  1953  0012DC  0E14               	movlw	low __uart_obj
  1954  0012DE  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  1955  0012E0  0E01               	movlw	high __uart_obj
  1956  0012E2  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  1957  0012E4  C0FB  F172         	movff	_RH_Decimal,___awdiv@dividend
  1958  0012E8  6B73               	clrf	(___awdiv@dividend+1)& (0+255),b
  1959  0012EA  0E00               	movlw	0
  1960  0012EC  6F75               	movwf	(___awdiv@divisor+1)& (0+255),b
  1961  0012EE  0E0A               	movlw	10
  1962  0012F0  6F74               	movwf	___awdiv@divisor& (0+255),b
  1963  0012F2  EC87  F020         	call	___awdiv	;wreg free
  1964  0012F6  0101               	movlb	1	; () banked
  1965  0012F8  5172               	movf	?___awdiv& (0+255),w,b
  1966  0012FA  0F30               	addlw	48
  1967  0012FC  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  1968  0012FE  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  1969  001302                     
  1970                           ;application.c: 399:                   _delay((unsigned long)((5)*(8000000/4000.0)));
  1971  001302  0E0D               	movlw	13
  1972  001304  0101               	movlb	1	; () banked
  1973  001306  6F7D               	movwf	??_main& (0+255),b
  1974  001308  0EFB               	movlw	251
  1975  00130A                     u13877:
  1976  00130A  2EE8               	decfsz	wreg,f,c
  1977  00130C  D7FE               	bra	u13877
  1978  00130E  2F7D               	decfsz	??_main& (0+255),f,b
  1979  001310  D7FC               	bra	u13877
  1980  001312  F000 F000          	nop2	
  1981  001316                     
  1982                           ;application.c: 400:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(RH_Decimal%10)));
  1983  001316  0E14               	movlw	low __uart_obj
  1984  001318  0101               	movlb	1	; () banked
  1985  00131A  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  1986  00131C  0E01               	movlw	high __uart_obj
  1987  00131E  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  1988  001320  C0FB  F16E         	movff	_RH_Decimal,___awmod@dividend
  1989  001324  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  1990  001326  0E00               	movlw	0
  1991  001328  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1992  00132A  0E0A               	movlw	10
  1993  00132C  6F70               	movwf	___awmod@divisor& (0+255),b
  1994  00132E  EC24  F020         	call	___awmod	;wreg free
  1995  001332  0101               	movlb	1	; () banked
  1996  001334  516E               	movf	?___awmod& (0+255),w,b
  1997  001336  0F30               	addlw	48
  1998  001338  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  1999  00133A  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  2000  00133E  EF30  F008         	goto	l13111
  2001  001342                     l13249:
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;application.c: 406:                  Get_Distance(&ultrasonic,&timer0,&distance);
  2005  001342  0EF6               	movlw	low _ultrasonic
  2006  001344  0100               	movlb	0	; () banked
  2007  001346  6F87               	movwf	Get_Distance@ultrasonic_object& (0+255),b
  2008  001348  0E00               	movlw	high _ultrasonic
  2009  00134A  6F88               	movwf	(Get_Distance@ultrasonic_object+1)& (0+255),b
  2010  00134C  0ED0               	movlw	low _timer0
  2011  00134E  6F89               	movwf	Get_Distance@_tmr0_config& (0+255),b
  2012  001350  0E00               	movlw	high _timer0
  2013  001352  6F8A               	movwf	(Get_Distance@_tmr0_config+1)& (0+255),b
  2014  001354  0ED4               	movlw	low _distance
  2015  001356  6F8B               	movwf	Get_Distance@distance& (0+255),b
  2016  001358  0E00               	movlw	high _distance
  2017  00135A  6F8C               	movwf	(Get_Distance@distance+1)& (0+255),b
  2018  00135C  EC7F  F01B         	call	_Get_Distance	;wreg free
  2019  001360                     
  2020                           ;application.c: 407:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(distance/100)));
  2021  001360  0E14               	movlw	low __uart_obj
  2022  001362  0101               	movlb	1	; () banked
  2023  001364  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  2024  001366  0E01               	movlw	high __uart_obj
  2025  001368  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  2026  00136A  0E00               	movlw	0
  2027  00136C  0100               	movlb	0	; () banked
  2028  00136E  6F72               	movwf	___fldiv@a& (0+255),b
  2029  001370  0E00               	movlw	0
  2030  001372  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  2031  001374  0EC8               	movlw	200
  2032  001376  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  2033  001378  0E42               	movlw	66
  2034  00137A  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  2035  00137C  C0D4  F06E         	movff	_distance,___fldiv@b
  2036  001380  C0D5  F06F         	movff	_distance+1,___fldiv@b+1
  2037  001384  C0D6  F070         	movff	_distance+2,___fldiv@b+2
  2038  001388  C0D7  F071         	movff	_distance+3,___fldiv@b+3
  2039  00138C  EC2D  F011         	call	___fldiv	;wreg free
  2040  001390  C06E  F166         	movff	?___fldiv,___fltol@f1
  2041  001394  C06F  F167         	movff	?___fldiv+1,___fltol@f1+1
  2042  001398  C070  F168         	movff	?___fldiv+2,___fltol@f1+2
  2043  00139C  C071  F169         	movff	?___fldiv+3,___fltol@f1+3
  2044  0013A0  EC07  F01C         	call	___fltol	;wreg free
  2045  0013A4  0101               	movlb	1	; () banked
  2046  0013A6  5166               	movf	?___fltol& (0+255),w,b
  2047  0013A8  0F30               	addlw	48
  2048  0013AA  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  2049  0013AC  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  2050  0013B0                     
  2051                           ;application.c: 408:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(((uint8)distance%100)/10)));
  2052  0013B0  0E14               	movlw	low __uart_obj
  2053  0013B2  0101               	movlb	1	; () banked
  2054  0013B4  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  2055  0013B6  0E01               	movlw	high __uart_obj
  2056  0013B8  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  2057  0013BA  0E00               	movlw	0
  2058  0013BC  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  2059  0013BE  0E64               	movlw	100
  2060  0013C0  6F70               	movwf	___awmod@divisor& (0+255),b
  2061  0013C2  C0D4  F166         	movff	_distance,___fltol@f1
  2062  0013C6  C0D5  F167         	movff	_distance+1,___fltol@f1+1
  2063  0013CA  C0D6  F168         	movff	_distance+2,___fltol@f1+2
  2064  0013CE  C0D7  F169         	movff	_distance+3,___fltol@f1+3
  2065  0013D2  EC07  F01C         	call	___fltol	;wreg free
  2066  0013D6  0101               	movlb	1	; () banked
  2067  0013D8  5166               	movf	?___fltol& (0+255),w,b
  2068  0013DA  6F6E               	movwf	___awmod@dividend& (0+255),b
  2069  0013DC  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  2070  0013DE  EC24  F020         	call	___awmod	;wreg free
  2071  0013E2  C16E  F172         	movff	?___awmod,___awdiv@dividend
  2072  0013E6  C16F  F173         	movff	?___awmod+1,___awdiv@dividend+1
  2073  0013EA  0E00               	movlw	0
  2074  0013EC  0101               	movlb	1	; () banked
  2075  0013EE  6F75               	movwf	(___awdiv@divisor+1)& (0+255),b
  2076  0013F0  0E0A               	movlw	10
  2077  0013F2  6F74               	movwf	___awdiv@divisor& (0+255),b
  2078  0013F4  EC87  F020         	call	___awdiv	;wreg free
  2079  0013F8  0101               	movlb	1	; () banked
  2080  0013FA  5172               	movf	?___awdiv& (0+255),w,b
  2081  0013FC  0F30               	addlw	48
  2082  0013FE  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  2083  001400  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  2084  001404                     
  2085                           ;application.c: 409:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(((uint8)distance%100)%10)));
  2086  001404  0E00               	movlw	0
  2087  001406  0101               	movlb	1	; () banked
  2088  001408  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  2089  00140A  0E64               	movlw	100
  2090  00140C  6F70               	movwf	___awmod@divisor& (0+255),b
  2091  00140E  C0D4  F166         	movff	_distance,___fltol@f1
  2092  001412  C0D5  F167         	movff	_distance+1,___fltol@f1+1
  2093  001416  C0D6  F168         	movff	_distance+2,___fltol@f1+2
  2094  00141A  C0D7  F169         	movff	_distance+3,___fltol@f1+3
  2095  00141E  EC07  F01C         	call	___fltol	;wreg free
  2096  001422  0101               	movlb	1	; () banked
  2097  001424  5166               	movf	?___fltol& (0+255),w,b
  2098  001426  6F6E               	movwf	___awmod@dividend& (0+255),b
  2099  001428  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  2100  00142A  EC24  F020         	call	___awmod	;wreg free
  2101  00142E  C16E  F17F         	movff	?___awmod,_main$5829
  2102  001432  C16F  F180         	movff	?___awmod+1,_main$5829+1
  2103  001436                     
  2104                           ;application.c: 409:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,48+((u
      +                          int8)(((uint8)distance%100)%10)));
  2105  001436  0E14               	movlw	low __uart_obj
  2106  001438  0101               	movlb	1	; () banked
  2107  00143A  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  2108  00143C  0E01               	movlw	high __uart_obj
  2109  00143E  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  2110  001440  C17F  F16E         	movff	_main$5829,___awmod@dividend
  2111  001444  C180  F16F         	movff	_main$5829+1,___awmod@dividend+1
  2112  001448  0E00               	movlw	0
  2113  00144A  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  2114  00144C  0E0A               	movlw	10
  2115  00144E  6F70               	movwf	___awmod@divisor& (0+255),b
  2116  001450  EC24  F020         	call	___awmod	;wreg free
  2117  001454  0101               	movlb	1	; () banked
  2118  001456  516E               	movf	?___awmod& (0+255),w,b
  2119  001458  0F30               	addlw	48
  2120  00145A  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  2121  00145C  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  2122  001460  EF30  F008         	goto	l13111
  2123  001464                     l13261:
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;application.c: 416:                  GPS_Service();
  2127  001464  EC53  F018         	call	_GPS_Service	;wreg free
  2128  001468  EF30  F008         	goto	l13111
  2129  00146C                     l13265:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;application.c: 421:                  battery_level();
  2133  00146C  EC0D  F029         	call	_battery_level	;wreg free
  2134  001470                     
  2135                           ;application.c: 422:                  _delay((unsigned long)((5)*(8000000/4000.0)));
  2136  001470  0E0D               	movlw	13
  2137  001472  0101               	movlb	1	; () banked
  2138  001474  6F7D               	movwf	??_main& (0+255),b
  2139  001476  0EFB               	movlw	251
  2140  001478                     u13887:
  2141  001478  2EE8               	decfsz	wreg,f,c
  2142  00147A  D7FE               	bra	u13887
  2143  00147C  2F7D               	decfsz	??_main& (0+255),f,b
  2144  00147E  D7FC               	bra	u13887
  2145  001480  F000 F000          	nop2	
  2146  001484                     
  2147                           ;application.c: 423:                  Bluetooth_Send_Data_Non_Blocking(&_uart_obj,(uint8
      +                          )battery_volt_f);
  2148  001484  0E14               	movlw	low __uart_obj
  2149  001486  0101               	movlb	1	; () banked
  2150  001488  6F7A               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),b
  2151  00148A  0E01               	movlw	high __uart_obj
  2152  00148C  6F7B               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),b
  2153  00148E  C0E7  F166         	movff	_battery_volt_f,___fltol@f1
  2154  001492  C0E8  F167         	movff	_battery_volt_f+1,___fltol@f1+1
  2155  001496  C0E9  F168         	movff	_battery_volt_f+2,___fltol@f1+2
  2156  00149A  C0EA  F169         	movff	_battery_volt_f+3,___fltol@f1+3
  2157  00149E  EC07  F01C         	call	___fltol	;wreg free
  2158  0014A2  0101               	movlb	1	; () banked
  2159  0014A4  5166               	movf	?___fltol& (0+255),w,b
  2160  0014A6  6F7C               	movwf	Bluetooth_Send_Data_Non_Blocking@data& (0+255),b
  2161  0014A8  EC4F  F02D         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  2162  0014AC  EF30  F008         	goto	l13111
  2163  0014B0                     l1952:
  2164  0014B0                     l13275:
  2165  0014B0  C0D8  F17D         	movff	_datarecive,??_main	;volatile
  2166  0014B4  C0D9  F17E         	movff	_datarecive+1,??_main+1	;volatile
  2167                           
  2168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2169                           ; Switch size 1, requested type "simple"
  2170                           ; Number of cases is 1, Range of values is 0 to 0
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte            4     3 (average)
  2174                           ;	Chosen strategy is simple_byte
  2175  0014B8  0101               	movlb	1	; () banked
  2176  0014BA  517E               	movf	(??_main+1)& (0+255),w,b
  2177  0014BC  0A00               	xorlw	0	; case 0
  2178  0014BE  B4D8               	btfsc	status,2,c
  2179  0014C0  EF64  F00A         	goto	l13483
  2180  0014C4  EF58  F00A         	goto	l1952
  2181  0014C8                     l13483:
  2182                           
  2183                           ; BSR set to: 1
  2184                           ; Switch size 1, requested type "simple"
  2185                           ; Number of cases is 26, Range of values is 0 to 80
  2186                           ; switch strategies available:
  2187                           ; Name         Instructions Cycles
  2188                           ; simple_byte           79    40 (average)
  2189                           ;	Chosen strategy is simple_byte
  2190  0014C8  517D               	movf	??_main& (0+255),w,b
  2191  0014CA  0A00               	xorlw	0	; case 0
  2192  0014CC  B4D8               	btfsc	status,2,c
  2193  0014CE  EF2E  F008         	goto	l13109
  2194  0014D2  0A01               	xorlw	1	; case 1
  2195  0014D4  B4D8               	btfsc	status,2,c
  2196  0014D6  EF37  F008         	goto	l13113
  2197  0014DA  0A03               	xorlw	3	; case 2
  2198  0014DC  B4D8               	btfsc	status,2,c
  2199  0014DE  EF3B  F008         	goto	l13117
  2200  0014E2  0A01               	xorlw	1	; case 3
  2201  0014E4  B4D8               	btfsc	status,2,c
  2202  0014E6  EF3F  F008         	goto	l13121
  2203  0014EA  0A07               	xorlw	7	; case 4
  2204  0014EC  B4D8               	btfsc	status,2,c
  2205  0014EE  EF43  F008         	goto	l13125
  2206  0014F2  0A01               	xorlw	1	; case 5
  2207  0014F4  B4D8               	btfsc	status,2,c
  2208  0014F6  EF47  F008         	goto	l13129
  2209  0014FA  0A03               	xorlw	3	; case 6
  2210  0014FC  B4D8               	btfsc	status,2,c
  2211  0014FE  EF4B  F008         	goto	l13133
  2212  001502  0A01               	xorlw	1	; case 7
  2213  001504  B4D8               	btfsc	status,2,c
  2214  001506  EF4F  F008         	goto	l13137
  2215  00150A  0A0F               	xorlw	15	; case 8
  2216  00150C  B4D8               	btfsc	status,2,c
  2217  00150E  EF53  F008         	goto	l13141
  2218  001512  0A01               	xorlw	1	; case 9
  2219  001514  B4D8               	btfsc	status,2,c
  2220  001516  EF30  F008         	goto	l13111
  2221  00151A  0A03               	xorlw	3	; case 10
  2222  00151C  B4D8               	btfsc	status,2,c
  2223  00151E  EF57  F008         	goto	l13147
  2224  001522  0A1A               	xorlw	26	; case 16
  2225  001524  B4D8               	btfsc	status,2,c
  2226  001526  EF5F  F008         	goto	l13149
  2227  00152A  0A01               	xorlw	1	; case 17
  2228  00152C  B4D8               	btfsc	status,2,c
  2229  00152E  EF67  F008         	goto	l13151
  2230  001532  0A03               	xorlw	3	; case 18
  2231  001534  B4D8               	btfsc	status,2,c
  2232  001536  EF6F  F008         	goto	l13153
  2233  00153A  0A01               	xorlw	1	; case 19
  2234  00153C  B4D8               	btfsc	status,2,c
  2235  00153E  EF94  F008         	goto	l13163
  2236  001542  0A07               	xorlw	7	; case 20
  2237  001544  B4D8               	btfsc	status,2,c
  2238  001546  EFA2  F008         	goto	l13173
  2239  00154A  0A01               	xorlw	1	; case 21
  2240  00154C  B4D8               	btfsc	status,2,c
  2241  00154E  EFBF  F008         	goto	l13183
  2242  001552  0A03               	xorlw	3	; case 22
  2243  001554  B4D8               	btfsc	status,2,c
  2244  001556  EFCD  F008         	goto	l13193
  2245  00155A  0A01               	xorlw	1	; case 23
  2246  00155C  B4D8               	btfsc	status,2,c
  2247  00155E  EFEA  F008         	goto	l13203
  2248  001562  0A0F               	xorlw	15	; case 24
  2249  001564  B4D8               	btfsc	status,2,c
  2250  001566  EFF8  F008         	goto	l13213
  2251  00156A  0A01               	xorlw	1	; case 25
  2252  00156C  B4D8               	btfsc	status,2,c
  2253  00156E  EF15  F009         	goto	l13223
  2254  001572  0A55               	xorlw	85	; case 76
  2255  001574  B4D8               	btfsc	status,2,c
  2256  001576  EF23  F009         	goto	l13233
  2257  00157A  0A01               	xorlw	1	; case 77
  2258  00157C  B4D8               	btfsc	status,2,c
  2259  00157E  EF6E  F009         	goto	l13241
  2260  001582  0A03               	xorlw	3	; case 78
  2261  001584  B4D8               	btfsc	status,2,c
  2262  001586  EFA1  F009         	goto	l13249
  2263  00158A  0A01               	xorlw	1	; case 79
  2264  00158C  B4D8               	btfsc	status,2,c
  2265  00158E  EF32  F00A         	goto	l13261
  2266  001592  0A1F               	xorlw	31	; case 80
  2267  001594  B4D8               	btfsc	status,2,c
  2268  001596  EF36  F00A         	goto	l13265
  2269  00159A  EF58  F00A         	goto	l1952
  2270  00159E  EF43  F001         	goto	start
  2271  0015A2                     __end_of_main:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _stepper_move_one_deg_cw *****************
  2275 ;; Defined at:
  2276 ;;		line 61 in file "ECU/stepper/ecu_stepper.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  stepper         2   33[COMRAM] PTR struct .
  2279 ;;		 -> stepper_base(2), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  i               2   35[COMRAM] int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      unsigned char 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;Total ram usage:        4 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 9
  2298 ;; This function calls:
  2299 ;;		_GPIO_Pin_Write_Logic
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text1
  2306  00508E                     __ptext1:
  2307                           	callstack 0
  2308  00508E                     _stepper_move_one_deg_cw:
  2309                           	callstack 21
  2310  00508E                     
  2311                           ;ECU/stepper/ecu_stepper.c: 61: Std_ReturnType stepper_move_one_deg_cw(stepper_config_st
      +                           *stepper);ECU/stepper/ecu_stepper.c: 62: {;ECU/stepper/ecu_stepper.c: 63:     if(((void
      +                          *)0) == stepper)
  2312  00508E  5022               	movf	stepper_move_one_deg_cw@stepper^0,w,c
  2313  005090  1023               	iorwf	(stepper_move_one_deg_cw@stepper+1)^0,w,c
  2314  005092  A4D8               	btfss	status,2,c
  2315  005094  EF4E  F028         	goto	u13071
  2316  005098  EF50  F028         	goto	u13070
  2317  00509C                     u13071:
  2318  00509C  EF52  F028         	goto	l12277
  2319  0050A0                     u13070:
  2320  0050A0  EF8A  F028         	goto	l342
  2321  0050A4                     l12277:
  2322                           
  2323                           ;ECU/stepper/ecu_stepper.c: 68:     {;ECU/stepper/ecu_stepper.c: 69:        GPIO_Pin_Wri
      +                          te_Logic(&(stepper->dir_pin) , GPIO_HIGH);
  2324  0050A4  0E01               	movlw	1
  2325  0050A6  2422               	addwf	stepper_move_one_deg_cw@stepper^0,w,c
  2326  0050A8  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2327  0050AA  0E00               	movlw	0
  2328  0050AC  2023               	addwfc	(stepper_move_one_deg_cw@stepper+1)^0,w,c
  2329  0050AE  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2330  0050B0  0E01               	movlw	1
  2331  0050B2  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2332  0050B4  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2333  0050B8                     
  2334                           ;ECU/stepper/ecu_stepper.c: 70:         for(int i=0; i<= 9; i++)
  2335  0050B8  0E00               	movlw	0
  2336  0050BA  6E25               	movwf	(stepper_move_one_deg_cw@i+1)^0,c
  2337  0050BC  0E00               	movlw	0
  2338  0050BE  6E24               	movwf	stepper_move_one_deg_cw@i^0,c
  2339  0050C0                     l12285:
  2340                           
  2341                           ;ECU/stepper/ecu_stepper.c: 71:         {;ECU/stepper/ecu_stepper.c: 72:             GPI
      +                          O_Pin_Write_Logic(&(stepper->step_pin) , GPIO_HIGH);
  2342  0050C0  C022  F01E         	movff	stepper_move_one_deg_cw@stepper,GPIO_Pin_Write_Logic@_pin_config
  2343  0050C4  C023  F01F         	movff	stepper_move_one_deg_cw@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2344  0050C8  0E01               	movlw	1
  2345  0050CA  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2346  0050CC  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2347  0050D0                     
  2348                           ;ECU/stepper/ecu_stepper.c: 73:             _delay((unsigned long)((500)*(8000000/400000
      +                          0.0)));
  2349  0050D0  0EC8               	movlw	200
  2350  0050D2                     u13897:
  2351  0050D2  F000 F000          	nop2	
  2352  0050D6  2EE8               	decfsz	wreg,f,c
  2353  0050D8  D7FC               	bra	u13897
  2354  0050DA                     
  2355                           ;ECU/stepper/ecu_stepper.c: 74:             GPIO_Pin_Write_Logic(&(stepper->step_pin) , 
      +                          GPIO_LOW);
  2356  0050DA  C022  F01E         	movff	stepper_move_one_deg_cw@stepper,GPIO_Pin_Write_Logic@_pin_config
  2357  0050DE  C023  F01F         	movff	stepper_move_one_deg_cw@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2358  0050E2  0E00               	movlw	0
  2359  0050E4  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2360  0050E6  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2361                           
  2362                           ;ECU/stepper/ecu_stepper.c: 75:            _delay((unsigned long)((500)*(8000000/4000000
      +                          .0)));
  2363  0050EA  0EC8               	movlw	200
  2364  0050EC                     u13907:
  2365  0050EC  F000 F000          	nop2	
  2366  0050F0  2EE8               	decfsz	wreg,f,c
  2367  0050F2  D7FC               	bra	u13907
  2368  0050F4                     
  2369                           ;ECU/stepper/ecu_stepper.c: 76:         }
  2370  0050F4  4A24               	infsnz	stepper_move_one_deg_cw@i^0,f,c
  2371  0050F6  2A25               	incf	(stepper_move_one_deg_cw@i+1)^0,f,c
  2372  0050F8  BE25               	btfsc	(stepper_move_one_deg_cw@i+1)^0,7,c
  2373  0050FA  EF88  F028         	goto	u13081
  2374  0050FE  5025               	movf	(stepper_move_one_deg_cw@i+1)^0,w,c
  2375  005100  E109               	bnz	u13080
  2376  005102  0E0A               	movlw	10
  2377  005104  5C24               	subwf	stepper_move_one_deg_cw@i^0,w,c
  2378  005106  A0D8               	btfss	status,0,c
  2379  005108  EF88  F028         	goto	u13081
  2380  00510C  EF8A  F028         	goto	u13080
  2381  005110                     u13081:
  2382  005110  EF60  F028         	goto	l12285
  2383  005114                     u13080:
  2384  005114                     l342:
  2385  005114  0012               	return		;funcret
  2386  005116                     __end_of_stepper_move_one_deg_cw:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _stepper_move_one_deg_ccw *****************
  2390 ;; Defined at:
  2391 ;;		line 80 in file "ECU/stepper/ecu_stepper.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  stepper         2   33[COMRAM] PTR struct .
  2394 ;;		 -> stepper_base(2), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  i               2   35[COMRAM] int 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      unsigned char 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;Total ram usage:        4 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 9
  2413 ;; This function calls:
  2414 ;;		_GPIO_Pin_Write_Logic
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text2
  2421  005116                     __ptext2:
  2422                           	callstack 0
  2423  005116                     _stepper_move_one_deg_ccw:
  2424                           	callstack 21
  2425  005116                     
  2426                           ;ECU/stepper/ecu_stepper.c: 80: Std_ReturnType stepper_move_one_deg_ccw(stepper_config_s
      +                          t *stepper);ECU/stepper/ecu_stepper.c: 81: {;ECU/stepper/ecu_stepper.c: 82:     if(((voi
      +                          d*)0) == stepper)
  2427  005116  5022               	movf	stepper_move_one_deg_ccw@stepper^0,w,c
  2428  005118  1023               	iorwf	(stepper_move_one_deg_ccw@stepper+1)^0,w,c
  2429  00511A  A4D8               	btfss	status,2,c
  2430  00511C  EF92  F028         	goto	u13091
  2431  005120  EF94  F028         	goto	u13090
  2432  005124                     u13091:
  2433  005124  EF96  F028         	goto	l12299
  2434  005128                     u13090:
  2435  005128  EFCE  F028         	goto	l349
  2436  00512C                     l12299:
  2437                           
  2438                           ;ECU/stepper/ecu_stepper.c: 87:     {;ECU/stepper/ecu_stepper.c: 88:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->dir_pin) , GPIO_LOW);
  2439  00512C  0E01               	movlw	1
  2440  00512E  2422               	addwf	stepper_move_one_deg_ccw@stepper^0,w,c
  2441  005130  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2442  005132  0E00               	movlw	0
  2443  005134  2023               	addwfc	(stepper_move_one_deg_ccw@stepper+1)^0,w,c
  2444  005136  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2445  005138  0E00               	movlw	0
  2446  00513A  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2447  00513C  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2448  005140                     
  2449                           ;ECU/stepper/ecu_stepper.c: 89:         for(int i=0; i<= 9; i++)
  2450  005140  0E00               	movlw	0
  2451  005142  6E25               	movwf	(stepper_move_one_deg_ccw@i+1)^0,c
  2452  005144  0E00               	movlw	0
  2453  005146  6E24               	movwf	stepper_move_one_deg_ccw@i^0,c
  2454  005148                     l12307:
  2455                           
  2456                           ;ECU/stepper/ecu_stepper.c: 90:         {;ECU/stepper/ecu_stepper.c: 91:             GPI
      +                          O_Pin_Write_Logic(&(stepper->step_pin) , GPIO_HIGH);
  2457  005148  C022  F01E         	movff	stepper_move_one_deg_ccw@stepper,GPIO_Pin_Write_Logic@_pin_config
  2458  00514C  C023  F01F         	movff	stepper_move_one_deg_ccw@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2459  005150  0E01               	movlw	1
  2460  005152  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2461  005154  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2462  005158                     
  2463                           ;ECU/stepper/ecu_stepper.c: 92:             _delay((unsigned long)((500)*(8000000/400000
      +                          0.0)));
  2464  005158  0EC8               	movlw	200
  2465  00515A                     u13917:
  2466  00515A  F000 F000          	nop2	
  2467  00515E  2EE8               	decfsz	wreg,f,c
  2468  005160  D7FC               	bra	u13917
  2469  005162                     
  2470                           ;ECU/stepper/ecu_stepper.c: 93:             GPIO_Pin_Write_Logic(&(stepper->step_pin) , 
      +                          GPIO_LOW);
  2471  005162  C022  F01E         	movff	stepper_move_one_deg_ccw@stepper,GPIO_Pin_Write_Logic@_pin_config
  2472  005166  C023  F01F         	movff	stepper_move_one_deg_ccw@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2473  00516A  0E00               	movlw	0
  2474  00516C  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2475  00516E  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  2476                           
  2477                           ;ECU/stepper/ecu_stepper.c: 94:            _delay((unsigned long)((500)*(8000000/4000000
      +                          .0)));
  2478  005172  0EC8               	movlw	200
  2479  005174                     u13927:
  2480  005174  F000 F000          	nop2	
  2481  005178  2EE8               	decfsz	wreg,f,c
  2482  00517A  D7FC               	bra	u13927
  2483  00517C                     
  2484                           ;ECU/stepper/ecu_stepper.c: 95:         }
  2485  00517C  4A24               	infsnz	stepper_move_one_deg_ccw@i^0,f,c
  2486  00517E  2A25               	incf	(stepper_move_one_deg_ccw@i+1)^0,f,c
  2487  005180  BE25               	btfsc	(stepper_move_one_deg_ccw@i+1)^0,7,c
  2488  005182  EFCC  F028         	goto	u13101
  2489  005186  5025               	movf	(stepper_move_one_deg_ccw@i+1)^0,w,c
  2490  005188  E109               	bnz	u13100
  2491  00518A  0E0A               	movlw	10
  2492  00518C  5C24               	subwf	stepper_move_one_deg_ccw@i^0,w,c
  2493  00518E  A0D8               	btfss	status,0,c
  2494  005190  EFCC  F028         	goto	u13101
  2495  005194  EFCE  F028         	goto	u13100
  2496  005198                     u13101:
  2497  005198  EFA4  F028         	goto	l12307
  2498  00519C                     u13100:
  2499  00519C                     l349:
  2500  00519C  0012               	return		;funcret
  2501  00519E                     __end_of_stepper_move_one_deg_ccw:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _battery_level *****************
  2505 ;; Defined at:
  2506 ;;		line 536 in file "application.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;Total ram usage:        0 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 11
  2527 ;; This function calls:
  2528 ;;		_ADC_Get_Conversion_Blocking
  2529 ;;		___fldiv
  2530 ;;		___wmul
  2531 ;;		___xxtofl
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text3
  2538  00521A                     __ptext3:
  2539                           	callstack 0
  2540  00521A                     _battery_level:
  2541                           	callstack 19
  2542  00521A                     
  2543                           ;application.c: 538:         ADC_Get_Conversion_Blocking(&battery_adc,ADC_CHANEL_AN0,&ba
      +                          ttery_volt_adc_read);
  2544  00521A  0E38               	movlw	low _battery_adc
  2545  00521C  0100               	movlb	0	; () banked
  2546  00521E  6F65               	movwf	ADC_Get_Conversion_Blocking@_adc& (0+255),b
  2547  005220  0E01               	movlw	high _battery_adc
  2548  005222  6F66               	movwf	(ADC_Get_Conversion_Blocking@_adc+1)& (0+255),b
  2549  005224  0E00               	movlw	0
  2550  005226  6F67               	movwf	ADC_Get_Conversion_Blocking@_channel& (0+255),b
  2551  005228  0E3A               	movlw	low _battery_volt_adc_read
  2552  00522A  6F68               	movwf	ADC_Get_Conversion_Blocking@_result& (0+255),b
  2553  00522C  0E00               	movlw	high _battery_volt_adc_read
  2554  00522E  6F69               	movwf	(ADC_Get_Conversion_Blocking@_result+1)& (0+255),b
  2555  005230  EC02  F028         	call	_ADC_Get_Conversion_Blocking	;wreg free
  2556  005234                     
  2557                           ;application.c: 539:         battery_volt_f=(float32)(battery_volt_adc_read*13)/1024;
  2558  005234  C03A  F01E         	movff	_battery_volt_adc_read,___wmul@multiplier
  2559  005238  C03B  F01F         	movff	_battery_volt_adc_read+1,___wmul@multiplier+1
  2560  00523C  0E00               	movlw	0
  2561  00523E  6E21               	movwf	(___wmul@multiplicand+1)^0,c
  2562  005240  0E0D               	movlw	13
  2563  005242  6E20               	movwf	___wmul@multiplicand^0,c
  2564  005244  ECFA  F02D         	call	___wmul	;wreg free
  2565  005248  C01E  F060         	movff	?___wmul,___xxtofl@val
  2566  00524C  C01F  F061         	movff	?___wmul+1,___xxtofl@val+1
  2567  005250  0100               	movlb	0	; () banked
  2568  005252  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2569  005254  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2570  005256  0E00               	movlw	0
  2571  005258  ECFF  F015         	call	___xxtofl
  2572  00525C  C060  F06E         	movff	?___xxtofl,___fldiv@b
  2573  005260  C061  F06F         	movff	?___xxtofl+1,___fldiv@b+1
  2574  005264  C062  F070         	movff	?___xxtofl+2,___fldiv@b+2
  2575  005268  C063  F071         	movff	?___xxtofl+3,___fldiv@b+3
  2576  00526C  0E00               	movlw	0
  2577  00526E  0100               	movlb	0	; () banked
  2578  005270  6F72               	movwf	___fldiv@a& (0+255),b
  2579  005272  0E00               	movlw	0
  2580  005274  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  2581  005276  0E80               	movlw	128
  2582  005278  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  2583  00527A  0E44               	movlw	68
  2584  00527C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  2585  00527E  EC2D  F011         	call	___fldiv	;wreg free
  2586  005282  C06E  F0E7         	movff	?___fldiv,_battery_volt_f
  2587  005286  C06F  F0E8         	movff	?___fldiv+1,_battery_volt_f+1
  2588  00528A  C070  F0E9         	movff	?___fldiv+2,_battery_volt_f+2
  2589  00528E  C071  F0EA         	movff	?___fldiv+3,_battery_volt_f+3
  2590  005292  0012               	return		;funcret
  2591  005294                     __end_of_battery_level:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function ___wmul *****************
  2595 ;; Defined at:
  2596 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  multiplier      2   29[COMRAM] unsigned int 
  2599 ;;  multiplicand    2   31[COMRAM] unsigned int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  product         2   33[COMRAM] unsigned int 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2   29[COMRAM] unsigned int 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, prodl, prodh
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;Total ram usage:        6 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 8
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_battery_level
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text4
  2626  005BF4                     __ptext4:
  2627                           	callstack 0
  2628  005BF4                     ___wmul:
  2629                           	callstack 21
  2630  005BF4  501E               	movf	___wmul@multiplier^0,w,c
  2631  005BF6  0220               	mulwf	___wmul@multiplicand^0,c
  2632  005BF8  CFF3 F022          	movff	prodl,___wmul@product
  2633  005BFC  CFF4 F023          	movff	prodh,___wmul@product+1
  2634  005C00  501E               	movf	___wmul@multiplier^0,w,c
  2635  005C02  0221               	mulwf	(___wmul@multiplicand+1)^0,c
  2636  005C04  50F3               	movf	243,w,c
  2637  005C06  2623               	addwf	(___wmul@product+1)^0,f,c
  2638  005C08  501F               	movf	(___wmul@multiplier+1)^0,w,c
  2639  005C0A  0220               	mulwf	___wmul@multiplicand^0,c
  2640  005C0C  50F3               	movf	243,w,c
  2641  005C0E  2623               	addwf	(___wmul@product+1)^0,f,c
  2642  005C10  C022  F01E         	movff	___wmul@product,?___wmul
  2643  005C14  C023  F01F         	movff	___wmul@product+1,?___wmul+1
  2644  005C18  0012               	return		;funcret
  2645  005C1A                     __end_of___wmul:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _ADC_Get_Conversion_Blocking *****************
  2649 ;; Defined at:
  2650 ;;		line 223 in file "MCAL/ADC/mcal_adc.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  _adc            2    5[BANK0 ] PTR const struct .
  2653 ;;		 -> battery_adc(5), 
  2654 ;;  _channel        1    7[BANK0 ] enum E3254
  2655 ;;  _result         2    8[BANK0 ] PTR unsigned short 
  2656 ;;		 -> battery_volt_adc_read(2), 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  ERRORSTATUS     1   11[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      unsigned char 
  2661 ;; Registers used:
  2662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2668 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;Total ram usage:        7 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 10
  2675 ;; This function calls:
  2676 ;;		_ADC_Get_Conversion_Results
  2677 ;;		_ADC_Start_Conversion
  2678 ;;		_ADC_select_channel
  2679 ;; This function is called by:
  2680 ;;		_battery_level
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text5
  2685  005004                     __ptext5:
  2686                           	callstack 0
  2687  005004                     _ADC_Get_Conversion_Blocking:
  2688                           	callstack 19
  2689  005004                     
  2690                           ;MCAL/ADC/mcal_adc.c: 226:     if ((((void*)0)==_adc)||(((void*)0)==_result))
  2691  005004  0100               	movlb	0	; () banked
  2692  005006  5165               	movf	ADC_Get_Conversion_Blocking@_adc& (0+255),w,b
  2693  005008  1166               	iorwf	(ADC_Get_Conversion_Blocking@_adc+1)& (0+255),w,b
  2694  00500A  B4D8               	btfsc	status,2,c
  2695  00500C  EF0A  F028         	goto	u12791
  2696  005010  EF0C  F028         	goto	u12790
  2697  005014                     u12791:
  2698  005014  EF15  F028         	goto	l12055
  2699  005018                     u12790:
  2700  005018                     
  2701                           ; BSR set to: 0
  2702  005018  5168               	movf	ADC_Get_Conversion_Blocking@_result& (0+255),w,b
  2703  00501A  1169               	iorwf	(ADC_Get_Conversion_Blocking@_result+1)& (0+255),w,b
  2704  00501C  A4D8               	btfss	status,2,c
  2705  00501E  EF13  F028         	goto	u12801
  2706  005022  EF15  F028         	goto	u12800
  2707  005026                     u12801:
  2708  005026  EF17  F028         	goto	l12057
  2709  00502A                     u12800:
  2710  00502A                     l12055:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;MCAL/ADC/mcal_adc.c: 229:     }
  2714  00502A  EF46  F028         	goto	l427
  2715  00502E                     l12057:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;MCAL/ADC/mcal_adc.c: 231:     {;MCAL/ADC/mcal_adc.c: 234:           ERRORSTATUS= ADC_se
      +                          lect_channel(_adc,_channel);
  2719  00502E  C065  F021         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_select_channel@_adc
  2720  005032  C066  F022         	movff	ADC_Get_Conversion_Blocking@_adc+1,ADC_select_channel@_adc+1
  2721  005036  C067  F023         	movff	ADC_Get_Conversion_Blocking@_channel,ADC_select_channel@_channel
  2722  00503A  ECC8  F02C         	call	_ADC_select_channel	;wreg free
  2723  00503E  0100               	movlb	0	; () banked
  2724  005040  6F6B               	movwf	ADC_Get_Conversion_Blocking@ERRORSTATUS& (0+255),b
  2725                           
  2726                           ;MCAL/ADC/mcal_adc.c: 236:           ERRORSTATUS= ADC_Start_Conversion(_adc);
  2727  005042  C065  F01E         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Start_Conversion@_adc
  2728  005046  C066  F01F         	movff	ADC_Get_Conversion_Blocking@_adc+1,ADC_Start_Conversion@_adc+1
  2729  00504A  EC33  F02E         	call	_ADC_Start_Conversion	;wreg free
  2730  00504E  0100               	movlb	0	; () banked
  2731  005050  6F6B               	movwf	ADC_Get_Conversion_Blocking@ERRORSTATUS& (0+255),b
  2732                           
  2733                           ;MCAL/ADC/mcal_adc.c: 238:           while((ADCON0bits.GO_nDONE))
  2734  005052  EF35  F028         	goto	l12061
  2735  005056                     l12059:
  2736  005056  C065  F01E         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Get_Conversion_Results@_adc
  2737  00505A  C066  F01F         	movff	ADC_Get_Conversion_Blocking@_adc+1,ADC_Get_Conversion_Results@_adc+1
  2738  00505E  C068  F020         	movff	ADC_Get_Conversion_Blocking@_result,ADC_Get_Conversion_Results@_result
  2739  005062  C069  F021         	movff	ADC_Get_Conversion_Blocking@_result+1,ADC_Get_Conversion_Results@_result+1
  2740  005066  EC2A  F023         	call	_ADC_Get_Conversion_Results	;wreg free
  2741  00506A                     l12061:
  2742                           
  2743                           ;MCAL/ADC/mcal_adc.c: 238:           while((ADCON0bits.GO_nDONE))
  2744  00506A  B2C2               	btfsc	194,1,c	;volatile
  2745  00506C  EF3A  F028         	goto	u12811
  2746  005070  EF3C  F028         	goto	u12810
  2747  005074                     u12811:
  2748  005074  EF2B  F028         	goto	l12059
  2749  005078                     u12810:
  2750  005078                     
  2751                           ;MCAL/ADC/mcal_adc.c: 241:           _delay((unsigned long)((20)*(8000000/4000.0)));
  2752  005078  0E34               	movlw	52
  2753  00507A  0100               	movlb	0	; () banked
  2754  00507C  6F6A               	movwf	??_ADC_Get_Conversion_Blocking& (0+255),b
  2755  00507E  0EF1               	movlw	241
  2756  005080                     u13937:
  2757  005080  2EE8               	decfsz	wreg,f,c
  2758  005082  D7FE               	bra	u13937
  2759  005084  2F6A               	decfsz	??_ADC_Get_Conversion_Blocking& (0+255),f,b
  2760  005086  D7FC               	bra	u13937
  2761  005088  F000 F000          	nop2	
  2762  00508C                     l427:
  2763  00508C  0012               	return		;funcret
  2764  00508E                     __end_of_ADC_Get_Conversion_Blocking:
  2765                           	callstack 0
  2766                           
  2767 ;; *************** function _ADC_select_channel *****************
  2768 ;; Defined at:
  2769 ;;		line 121 in file "MCAL/ADC/mcal_adc.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  _adc            2   32[COMRAM] PTR const struct .
  2772 ;;		 -> battery_adc(5), 
  2773 ;;  _channel        1   34[COMRAM] enum E3254
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  ERRORSTATUS     1   36[COMRAM] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2785 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;Total ram usage:        5 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 9
  2792 ;; This function calls:
  2793 ;;		_adc_channel_pin_config_as_input
  2794 ;; This function is called by:
  2795 ;;		_ADC_Get_Conversion_Blocking
  2796 ;;		_ADC_Get_Conversion_Interrupt
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text6
  2801  005990                     __ptext6:
  2802                           	callstack 0
  2803  005990                     _ADC_select_channel:
  2804                           	callstack 19
  2805  005990                     
  2806                           ;MCAL/ADC/mcal_adc.c: 121: Std_ReturnType ADC_select_channel(const adc_config_st* _adc,a
      +                          dc_channel_select_et _channel);MCAL/ADC/mcal_adc.c: 122: {;MCAL/ADC/mcal_adc.c: 123:    
      +                           Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
  2807  005990  0E01               	movlw	1
  2808  005992  6E25               	movwf	ADC_select_channel@ERRORSTATUS^0,c
  2809  005994                     
  2810                           ;MCAL/ADC/mcal_adc.c: 124:     if (((void*)0)==_adc)
  2811  005994  5021               	movf	ADC_select_channel@_adc^0,w,c
  2812  005996  1022               	iorwf	(ADC_select_channel@_adc+1)^0,w,c
  2813  005998  A4D8               	btfss	status,2,c
  2814  00599A  EFD1  F02C         	goto	u12121
  2815  00599E  EFD3  F02C         	goto	u12120
  2816  0059A2                     u12121:
  2817  0059A2  EFD7  F02C         	goto	l11599
  2818  0059A6                     u12120:
  2819  0059A6                     
  2820                           ;MCAL/ADC/mcal_adc.c: 125:     {;MCAL/ADC/mcal_adc.c: 126:         ERRORSTATUS=(Std_Retu
      +                          rnType) 0x00;
  2821  0059A6  0E00               	movlw	0
  2822  0059A8  6E25               	movwf	ADC_select_channel@ERRORSTATUS^0,c
  2823                           
  2824                           ;MCAL/ADC/mcal_adc.c: 127:     }
  2825  0059AA  EFE3  F02C         	goto	l11603
  2826  0059AE                     l11599:
  2827                           
  2828                           ;MCAL/ADC/mcal_adc.c: 129:     {;MCAL/ADC/mcal_adc.c: 131:        ADCON0bits.CHS=_channe
      +                          l;
  2829  0059AE  C023  F024         	movff	ADC_select_channel@_channel,??_ADC_select_channel
  2830  0059B2  4624               	rlncf	??_ADC_select_channel^0,f,c
  2831  0059B4  4624               	rlncf	??_ADC_select_channel^0,f,c
  2832  0059B6  50C2               	movf	194,w,c	;volatile
  2833  0059B8  1824               	xorwf	??_ADC_select_channel^0,w,c
  2834  0059BA  0BC3               	andlw	-61
  2835  0059BC  1824               	xorwf	??_ADC_select_channel^0,w,c
  2836  0059BE  6EC2               	movwf	194,c	;volatile
  2837  0059C0                     
  2838                           ;MCAL/ADC/mcal_adc.c: 134:        adc_channel_pin_config_as_input(_channel);
  2839  0059C0  5023               	movf	ADC_select_channel@_channel^0,w,c
  2840  0059C2  EC51  F01F         	call	_adc_channel_pin_config_as_input
  2841  0059C6                     l11603:
  2842                           
  2843                           ;MCAL/ADC/mcal_adc.c: 136:     return ERRORSTATUS;
  2844  0059C6  5025               	movf	ADC_select_channel@ERRORSTATUS^0,w,c
  2845  0059C8  0012               	return		;funcret
  2846  0059CA                     __end_of_ADC_select_channel:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _ADC_Start_Conversion *****************
  2850 ;; Defined at:
  2851 ;;		line 145 in file "MCAL/ADC/mcal_adc.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  _adc            2   29[COMRAM] PTR const struct .
  2854 ;;		 -> battery_adc(5), 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  ERRORSTATUS     1   31[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      unsigned char 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;Total ram usage:        3 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 8
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_ADC_Get_Conversion_Blocking
  2877 ;;		_ADC_Get_Conversion_Interrupt
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text7
  2882  005C66                     __ptext7:
  2883                           	callstack 0
  2884  005C66                     _ADC_Start_Conversion:
  2885                           	callstack 20
  2886  005C66                     
  2887                           ;MCAL/ADC/mcal_adc.c: 145: Std_ReturnType ADC_Start_Conversion(const adc_config_st* _adc
      +                          );MCAL/ADC/mcal_adc.c: 146: {;MCAL/ADC/mcal_adc.c: 147:     Std_ReturnType ERRORSTATUS =
      +                          (Std_ReturnType) 0x01;
  2888  005C66  0E01               	movlw	1
  2889  005C68  6E20               	movwf	ADC_Start_Conversion@ERRORSTATUS^0,c
  2890  005C6A                     
  2891                           ;MCAL/ADC/mcal_adc.c: 148:     if (((void*)0)==_adc)
  2892  005C6A  501E               	movf	ADC_Start_Conversion@_adc^0,w,c
  2893  005C6C  101F               	iorwf	(ADC_Start_Conversion@_adc+1)^0,w,c
  2894  005C6E  A4D8               	btfss	status,2,c
  2895  005C70  EF3C  F02E         	goto	u12131
  2896  005C74  EF3E  F02E         	goto	u12130
  2897  005C78                     u12131:
  2898  005C78  EF42  F02E         	goto	l397
  2899  005C7C                     u12130:
  2900  005C7C                     
  2901                           ;MCAL/ADC/mcal_adc.c: 149:     {;MCAL/ADC/mcal_adc.c: 150:         ERRORSTATUS=(Std_Retu
      +                          rnType) 0x00;
  2902  005C7C  0E00               	movlw	0
  2903  005C7E  6E20               	movwf	ADC_Start_Conversion@ERRORSTATUS^0,c
  2904                           
  2905                           ;MCAL/ADC/mcal_adc.c: 151:     }
  2906  005C80  EF43  F02E         	goto	l11613
  2907  005C84                     l397:
  2908                           
  2909                           ;MCAL/ADC/mcal_adc.c: 153:     {;MCAL/ADC/mcal_adc.c: 154:         (ADCON0bits.GODONE=1)
      +                          ;
  2910  005C84  82C2               	bsf	194,1,c	;volatile
  2911  005C86                     l11613:
  2912                           
  2913                           ;MCAL/ADC/mcal_adc.c: 156:     return ERRORSTATUS;
  2914  005C86  5020               	movf	ADC_Start_Conversion@ERRORSTATUS^0,w,c
  2915  005C88  0012               	return		;funcret
  2916  005C8A                     __end_of_ADC_Start_Conversion:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _ADC_Get_Conversion_Results *****************
  2920 ;; Defined at:
  2921 ;;		line 189 in file "MCAL/ADC/mcal_adc.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  _adc            2   29[COMRAM] PTR const struct .
  2924 ;;		 -> battery_adc(5), 
  2925 ;;  _result         2   31[COMRAM] PTR unsigned short 
  2926 ;;		 -> battery_volt_adc_read(2), 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  ERRORSTATUS     1   33[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      unsigned char 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;Total ram usage:       10 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 8
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_ADC_Get_Conversion_Blocking
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text8
  2953  004654                     __ptext8:
  2954                           	callstack 0
  2955  004654                     _ADC_Get_Conversion_Results:
  2956                           	callstack 20
  2957  004654                     
  2958                           ;MCAL/ADC/mcal_adc.c: 189: Std_ReturnType ADC_Get_Conversion_Results(const adc_config_st
      +                          * _adc,adc_result_t*_result);MCAL/ADC/mcal_adc.c: 190: {;MCAL/ADC/mcal_adc.c: 191:     S
      +                          td_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
  2959  004654  0E01               	movlw	1
  2960  004656  6E22               	movwf	ADC_Get_Conversion_Results@ERRORSTATUS^0,c
  2961  004658                     
  2962                           ;MCAL/ADC/mcal_adc.c: 192:     if ((((void*)0)==_adc)||(((void*)0)==_result))
  2963  004658  501E               	movf	ADC_Get_Conversion_Results@_adc^0,w,c
  2964  00465A  101F               	iorwf	(ADC_Get_Conversion_Results@_adc+1)^0,w,c
  2965  00465C  B4D8               	btfsc	status,2,c
  2966  00465E  EF33  F023         	goto	u12141
  2967  004662  EF35  F023         	goto	u12140
  2968  004666                     u12141:
  2969  004666  EF3E  F023         	goto	l11623
  2970  00466A                     u12140:
  2971  00466A  5020               	movf	ADC_Get_Conversion_Results@_result^0,w,c
  2972  00466C  1021               	iorwf	(ADC_Get_Conversion_Results@_result+1)^0,w,c
  2973  00466E  A4D8               	btfss	status,2,c
  2974  004670  EF3C  F023         	goto	u12151
  2975  004674  EF3E  F023         	goto	u12150
  2976  004678                     u12151:
  2977  004678  EF42  F023         	goto	l11625
  2978  00467C                     u12150:
  2979  00467C                     l11623:
  2980                           
  2981                           ;MCAL/ADC/mcal_adc.c: 193:     {;MCAL/ADC/mcal_adc.c: 194:         ERRORSTATUS=(Std_Retu
      +                          rnType) 0x00;
  2982  00467C  0E00               	movlw	0
  2983  00467E  6E22               	movwf	ADC_Get_Conversion_Results@ERRORSTATUS^0,c
  2984                           
  2985                           ;MCAL/ADC/mcal_adc.c: 195:     }
  2986  004680  EF87  F023         	goto	l11635
  2987  004684                     l11625:
  2988                           
  2989                           ;MCAL/ADC/mcal_adc.c: 197:     {;MCAL/ADC/mcal_adc.c: 198:         if(ADC_RESULT_LEFT==_
      +                          adc->result_format)
  2990  004684  EE20 F003          	lfsr	2,3
  2991  004688  501E               	movf	ADC_Get_Conversion_Results@_adc^0,w,c
  2992  00468A  26D9               	addwf	fsr2l,f,c
  2993  00468C  501F               	movf	(ADC_Get_Conversion_Results@_adc+1)^0,w,c
  2994  00468E  22DA               	addwfc	fsr2h,f,c
  2995  004690  50DF               	movf	indf2,w,c
  2996  004692  A4D8               	btfss	status,2,c
  2997  004694  EF4E  F023         	goto	u12161
  2998  004698  EF50  F023         	goto	u12160
  2999  00469C                     u12161:
  3000  00469C  EF74  F023         	goto	l11629
  3001  0046A0                     u12160:
  3002  0046A0                     
  3003                           ;MCAL/ADC/mcal_adc.c: 199:          {;MCAL/ADC/mcal_adc.c: 200:              *_result =(
      +                          adc_result_t)(((ADRESH<<8)+(ADRESL<<6))>>6);
  3004  0046A0  50C3               	movf	195,w,c	;volatile
  3005  0046A2  0100               	movlb	0	; () banked
  3006  0046A4  6F60               	movwf	??_ADC_Get_Conversion_Results& (0+255),b
  3007  0046A6  6B61               	clrf	(??_ADC_Get_Conversion_Results+1)& (0+255),b
  3008  0046A8  0E06               	movlw	6
  3009  0046AA                     u12175:
  3010  0046AA  90D8               	bcf	status,0,c
  3011  0046AC  3760               	rlcf	??_ADC_Get_Conversion_Results& (0+255),f,b
  3012  0046AE  3761               	rlcf	(??_ADC_Get_Conversion_Results+1)& (0+255),f,b
  3013  0046B0  2EE8               	decfsz	wreg,f,c
  3014  0046B2  EF55  F023         	goto	u12175
  3015  0046B6  50C4               	movf	196,w,c	;volatile
  3016  0046B8  6F63               	movwf	(??_ADC_Get_Conversion_Results+3)& (0+255),b
  3017  0046BA  6B62               	clrf	(??_ADC_Get_Conversion_Results+2)& (0+255),b
  3018  0046BC  5160               	movf	??_ADC_Get_Conversion_Results& (0+255),w,b
  3019  0046BE  2762               	addwf	(??_ADC_Get_Conversion_Results+2)& (0+255),f,b
  3020  0046C0  5161               	movf	(??_ADC_Get_Conversion_Results+1)& (0+255),w,b
  3021  0046C2  2363               	addwfc	(??_ADC_Get_Conversion_Results+3)& (0+255),f,b
  3022  0046C4  0E06               	movlw	6
  3023  0046C6  6F64               	movwf	(??_ADC_Get_Conversion_Results+4)& (0+255),b
  3024  0046C8                     u12185:
  3025  0046C8  3563               	rlcf	(??_ADC_Get_Conversion_Results+3)& (0+255),w,b
  3026  0046CA  3363               	rrcf	(??_ADC_Get_Conversion_Results+3)& (0+255),f,b
  3027  0046CC  3362               	rrcf	(??_ADC_Get_Conversion_Results+2)& (0+255),f,b
  3028  0046CE  2F64               	decfsz	(??_ADC_Get_Conversion_Results+4)& (0+255),f,b
  3029  0046D0  EF64  F023         	goto	u12185
  3030  0046D4  C020  FFD9         	movff	ADC_Get_Conversion_Results@_result,fsr2l
  3031  0046D8  C021  FFDA         	movff	ADC_Get_Conversion_Results@_result+1,fsr2h
  3032  0046DC  C062  FFDE         	movff	??_ADC_Get_Conversion_Results+2,postinc2
  3033  0046E0  C063  FFDD         	movff	??_ADC_Get_Conversion_Results+3,postdec2
  3034                           
  3035                           ;MCAL/ADC/mcal_adc.c: 201:          }
  3036  0046E4  EF87  F023         	goto	l11635
  3037  0046E8                     l11629:
  3038  0046E8                     
  3039                           ;MCAL/ADC/mcal_adc.c: 203:          {;MCAL/ADC/mcal_adc.c: 204:              *_result =(
      +                          adc_result_t)((ADRESH<<8)+ADRESL);
  3040  0046E8  50C3               	movf	195,w,c	;volatile
  3041  0046EA  CFC4 F060          	movff	4036,??_ADC_Get_Conversion_Results	;volatile
  3042  0046EE  0100               	movlb	0	; () banked
  3043  0046F0  6B61               	clrf	(??_ADC_Get_Conversion_Results+1)& (0+255),b
  3044  0046F2  C060  F061         	movff	??_ADC_Get_Conversion_Results,??_ADC_Get_Conversion_Results+1
  3045  0046F6  6B60               	clrf	??_ADC_Get_Conversion_Results& (0+255),b
  3046  0046F8  2760               	addwf	??_ADC_Get_Conversion_Results& (0+255),f,b
  3047  0046FA  0E00               	movlw	0
  3048  0046FC  2361               	addwfc	(??_ADC_Get_Conversion_Results+1)& (0+255),f,b
  3049  0046FE  C020  FFD9         	movff	ADC_Get_Conversion_Results@_result,fsr2l
  3050  004702  C021  FFDA         	movff	ADC_Get_Conversion_Results@_result+1,fsr2h
  3051  004706  C060  FFDE         	movff	??_ADC_Get_Conversion_Results,postinc2
  3052  00470A  C061  FFDD         	movff	??_ADC_Get_Conversion_Results+1,postdec2
  3053  00470E                     l11635:
  3054                           
  3055                           ;MCAL/ADC/mcal_adc.c: 212:     return ERRORSTATUS;
  3056  00470E  5022               	movf	ADC_Get_Conversion_Results@ERRORSTATUS^0,w,c
  3057  004710  0012               	return		;funcret
  3058  004712                     __end_of_ADC_Get_Conversion_Results:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _application_intialize *****************
  3062 ;; Defined at:
  3063 ;;		line 433 in file "application.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;Total ram usage:        1 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 13
  3084 ;; This function calls:
  3085 ;;		_ADC_Init
  3086 ;;		_EUSART_Async_Init
  3087 ;;		_Ecu_Stepper_Init
  3088 ;;		_GPIO_Pin_Initialize
  3089 ;;		_Robot_Nav_Init
  3090 ;;		_Servo_SetAngle
  3091 ;;		_Ultra_Sonic_Init
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text9
  3098  002A10                     __ptext9:
  3099                           	callstack 0
  3100  002A10                     _application_intialize:
  3101                           	callstack 17
  3102  002A10                     
  3103                           ;application.c: 437:     GPIO_Pin_Initialize(&TEST_PIN);
  3104  002A10  0EFD               	movlw	low _TEST_PIN
  3105  002A12  0100               	movlb	0	; () banked
  3106  002A14  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  3107  002A16  0E00               	movlw	high _TEST_PIN
  3108  002A18  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  3109  002A1A  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  3110                           
  3111                           ;application.c: 438:     GPIO_Pin_Initialize(&selector);
  3112  002A1E  0E41               	movlw	low _selector
  3113  002A20  0100               	movlb	0	; () banked
  3114  002A22  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  3115  002A24  0E00               	movlw	high _selector
  3116  002A26  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  3117  002A28  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  3118                           
  3119                           ;application.c: 439:     GPIO_Pin_Initialize(&driller_PIN);
  3120  002A2C  0EFC               	movlw	low _driller_PIN
  3121  002A2E  0100               	movlb	0	; () banked
  3122  002A30  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  3123  002A32  0E00               	movlw	high _driller_PIN
  3124  002A34  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  3125  002A36  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  3126                           
  3127                           ;application.c: 443:     Ecu_Stepper_Init(&stepper_base);
  3128  002A3A  0EF8               	movlw	low _stepper_base
  3129  002A3C  0100               	movlb	0	; () banked
  3130  002A3E  6F69               	movwf	Ecu_Stepper_Init@stepper& (0+255),b
  3131  002A40  0E00               	movlw	high _stepper_base
  3132  002A42  6F6A               	movwf	(Ecu_Stepper_Init@stepper+1)& (0+255),b
  3133  002A44  ECCF  F028         	call	_Ecu_Stepper_Init	;wreg free
  3134                           
  3135                           ;application.c: 447:     Robot_Nav_Init();
  3136  002A48  ECBC  F027         	call	_Robot_Nav_Init	;wreg free
  3137                           
  3138                           ;application.c: 451:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 0 , 90 );
  3139  002A4C  0EEB               	movlw	low _i2c_obj
  3140  002A4E  0101               	movlb	1	; () banked
  3141  002A50  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3142  002A52  0E00               	movlw	high _i2c_obj
  3143  002A54  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3144  002A56  0EF2               	movlw	low _servo_driver_obj
  3145  002A58  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3146  002A5A  0E00               	movlw	high _servo_driver_obj
  3147  002A5C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3148  002A5E  0E00               	movlw	0
  3149  002A60  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3150  002A62  0E5A               	movlw	90
  3151  002A64  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3152  002A66  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3153  002A6A                     
  3154                           ;application.c: 452:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3155  002A6A  0E1A               	movlw	26
  3156  002A6C  0101               	movlb	1	; () banked
  3157  002A6E  6F7B               	movwf	??_application_intialize& (0+255),b
  3158  002A70  0EF8               	movlw	248
  3159  002A72                     u13947:
  3160  002A72  2EE8               	decfsz	wreg,f,c
  3161  002A74  D7FE               	bra	u13947
  3162  002A76  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3163  002A78  D7FC               	bra	u13947
  3164  002A7A  F000               	nop	
  3165  002A7C                     
  3166                           ;application.c: 453:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 1 , 90 );
  3167  002A7C  0EEB               	movlw	low _i2c_obj
  3168  002A7E  0101               	movlb	1	; () banked
  3169  002A80  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3170  002A82  0E00               	movlw	high _i2c_obj
  3171  002A84  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3172  002A86  0EF2               	movlw	low _servo_driver_obj
  3173  002A88  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3174  002A8A  0E00               	movlw	high _servo_driver_obj
  3175  002A8C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3176  002A8E  0E01               	movlw	1
  3177  002A90  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3178  002A92  0E5A               	movlw	90
  3179  002A94  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3180  002A96  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3181                           
  3182                           ;application.c: 454:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3183  002A9A  0E1A               	movlw	26
  3184  002A9C  0101               	movlb	1	; () banked
  3185  002A9E  6F7B               	movwf	??_application_intialize& (0+255),b
  3186  002AA0  0EF8               	movlw	248
  3187  002AA2                     u13957:
  3188  002AA2  2EE8               	decfsz	wreg,f,c
  3189  002AA4  D7FE               	bra	u13957
  3190  002AA6  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3191  002AA8  D7FC               	bra	u13957
  3192  002AAA  F000               	nop	
  3193  002AAC                     
  3194                           ;application.c: 455:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 2 , 90 );
  3195  002AAC  0EEB               	movlw	low _i2c_obj
  3196  002AAE  0101               	movlb	1	; () banked
  3197  002AB0  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3198  002AB2  0E00               	movlw	high _i2c_obj
  3199  002AB4  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3200  002AB6  0EF2               	movlw	low _servo_driver_obj
  3201  002AB8  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3202  002ABA  0E00               	movlw	high _servo_driver_obj
  3203  002ABC  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3204  002ABE  0E02               	movlw	2
  3205  002AC0  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3206  002AC2  0E5A               	movlw	90
  3207  002AC4  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3208  002AC6  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3209  002ACA                     
  3210                           ;application.c: 456:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3211  002ACA  0E1A               	movlw	26
  3212  002ACC  0101               	movlb	1	; () banked
  3213  002ACE  6F7B               	movwf	??_application_intialize& (0+255),b
  3214  002AD0  0EF8               	movlw	248
  3215  002AD2                     u13967:
  3216  002AD2  2EE8               	decfsz	wreg,f,c
  3217  002AD4  D7FE               	bra	u13967
  3218  002AD6  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3219  002AD8  D7FC               	bra	u13967
  3220  002ADA  F000               	nop	
  3221                           
  3222                           ;application.c: 457:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 3 , 90 );
  3223  002ADC  0EEB               	movlw	low _i2c_obj
  3224  002ADE  0101               	movlb	1	; () banked
  3225  002AE0  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3226  002AE2  0E00               	movlw	high _i2c_obj
  3227  002AE4  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3228  002AE6  0EF2               	movlw	low _servo_driver_obj
  3229  002AE8  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3230  002AEA  0E00               	movlw	high _servo_driver_obj
  3231  002AEC  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3232  002AEE  0E03               	movlw	3
  3233  002AF0  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3234  002AF2  0E5A               	movlw	90
  3235  002AF4  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3236  002AF6  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3237  002AFA                     
  3238                           ;application.c: 458:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3239  002AFA  0E1A               	movlw	26
  3240  002AFC  0101               	movlb	1	; () banked
  3241  002AFE  6F7B               	movwf	??_application_intialize& (0+255),b
  3242  002B00  0EF8               	movlw	248
  3243  002B02                     u13977:
  3244  002B02  2EE8               	decfsz	wreg,f,c
  3245  002B04  D7FE               	bra	u13977
  3246  002B06  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3247  002B08  D7FC               	bra	u13977
  3248  002B0A  F000               	nop	
  3249  002B0C                     
  3250                           ;application.c: 461:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 8 , 0);
  3251  002B0C  0EEB               	movlw	low _i2c_obj
  3252  002B0E  0101               	movlb	1	; () banked
  3253  002B10  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3254  002B12  0E00               	movlw	high _i2c_obj
  3255  002B14  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3256  002B16  0EF2               	movlw	low _servo_driver_obj
  3257  002B18  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3258  002B1A  0E00               	movlw	high _servo_driver_obj
  3259  002B1C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3260  002B1E  0E08               	movlw	8
  3261  002B20  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3262  002B22  0E00               	movlw	0
  3263  002B24  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3264  002B26  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3265                           
  3266                           ;application.c: 462:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3267  002B2A  0E1A               	movlw	26
  3268  002B2C  0101               	movlb	1	; () banked
  3269  002B2E  6F7B               	movwf	??_application_intialize& (0+255),b
  3270  002B30  0EF8               	movlw	248
  3271  002B32                     u13987:
  3272  002B32  2EE8               	decfsz	wreg,f,c
  3273  002B34  D7FE               	bra	u13987
  3274  002B36  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3275  002B38  D7FC               	bra	u13987
  3276  002B3A  F000               	nop	
  3277  002B3C                     
  3278                           ;application.c: 463:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 9 , 0);
  3279  002B3C  0EEB               	movlw	low _i2c_obj
  3280  002B3E  0101               	movlb	1	; () banked
  3281  002B40  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3282  002B42  0E00               	movlw	high _i2c_obj
  3283  002B44  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3284  002B46  0EF2               	movlw	low _servo_driver_obj
  3285  002B48  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3286  002B4A  0E00               	movlw	high _servo_driver_obj
  3287  002B4C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3288  002B4E  0E09               	movlw	9
  3289  002B50  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3290  002B52  0E00               	movlw	0
  3291  002B54  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3292  002B56  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3293  002B5A                     
  3294                           ;application.c: 464:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3295  002B5A  0E1A               	movlw	26
  3296  002B5C  0101               	movlb	1	; () banked
  3297  002B5E  6F7B               	movwf	??_application_intialize& (0+255),b
  3298  002B60  0EF8               	movlw	248
  3299  002B62                     u13997:
  3300  002B62  2EE8               	decfsz	wreg,f,c
  3301  002B64  D7FE               	bra	u13997
  3302  002B66  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3303  002B68  D7FC               	bra	u13997
  3304  002B6A  F000               	nop	
  3305                           
  3306                           ;application.c: 465:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 10 , 0);
  3307  002B6C  0EEB               	movlw	low _i2c_obj
  3308  002B6E  0101               	movlb	1	; () banked
  3309  002B70  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3310  002B72  0E00               	movlw	high _i2c_obj
  3311  002B74  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3312  002B76  0EF2               	movlw	low _servo_driver_obj
  3313  002B78  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3314  002B7A  0E00               	movlw	high _servo_driver_obj
  3315  002B7C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3316  002B7E  0E0A               	movlw	10
  3317  002B80  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3318  002B82  0E00               	movlw	0
  3319  002B84  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3320  002B86  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3321  002B8A                     
  3322                           ;application.c: 466:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3323  002B8A  0E1A               	movlw	26
  3324  002B8C  0101               	movlb	1	; () banked
  3325  002B8E  6F7B               	movwf	??_application_intialize& (0+255),b
  3326  002B90  0EF8               	movlw	248
  3327  002B92                     u14007:
  3328  002B92  2EE8               	decfsz	wreg,f,c
  3329  002B94  D7FE               	bra	u14007
  3330  002B96  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3331  002B98  D7FC               	bra	u14007
  3332  002B9A  F000               	nop	
  3333  002B9C                     
  3334                           ;application.c: 467:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 11 , 0);
  3335  002B9C  0EEB               	movlw	low _i2c_obj
  3336  002B9E  0101               	movlb	1	; () banked
  3337  002BA0  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  3338  002BA2  0E00               	movlw	high _i2c_obj
  3339  002BA4  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  3340  002BA6  0EF2               	movlw	low _servo_driver_obj
  3341  002BA8  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  3342  002BAA  0E00               	movlw	high _servo_driver_obj
  3343  002BAC  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  3344  002BAE  0E0B               	movlw	11
  3345  002BB0  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  3346  002BB2  0E00               	movlw	0
  3347  002BB4  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  3348  002BB6  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  3349                           
  3350                           ;application.c: 468:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3351  002BBA  0E1A               	movlw	26
  3352  002BBC  0101               	movlb	1	; () banked
  3353  002BBE  6F7B               	movwf	??_application_intialize& (0+255),b
  3354  002BC0  0EF8               	movlw	248
  3355  002BC2                     u14017:
  3356  002BC2  2EE8               	decfsz	wreg,f,c
  3357  002BC4  D7FE               	bra	u14017
  3358  002BC6  2F7B               	decfsz	??_application_intialize& (0+255),f,b
  3359  002BC8  D7FC               	bra	u14017
  3360  002BCA  F000               	nop	
  3361  002BCC                     
  3362                           ;application.c: 470:     Ultra_Sonic_Init(&ultrasonic,&timer0);
  3363  002BCC  0EF6               	movlw	low _ultrasonic
  3364  002BCE  0100               	movlb	0	; () banked
  3365  002BD0  6F69               	movwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),b
  3366  002BD2  0E00               	movlw	high _ultrasonic
  3367  002BD4  6F6A               	movwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),b
  3368  002BD6  0ED0               	movlw	low _timer0
  3369  002BD8  6F6B               	movwf	Ultra_Sonic_Init@_tmr0_config& (0+255),b
  3370  002BDA  0E00               	movlw	high _timer0
  3371  002BDC  6F6C               	movwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),b
  3372  002BDE  EC56  F02C         	call	_Ultra_Sonic_Init	;wreg free
  3373  002BE2                     
  3374                           ;application.c: 473:     EUSART_Async_Init(&_uart_obj);
  3375  002BE2  0E14               	movlw	low __uart_obj
  3376  002BE4  0101               	movlb	1	; () banked
  3377  002BE6  6F79               	movwf	EUSART_Async_Init@_eusart_obj& (0+255),b
  3378  002BE8  0E01               	movlw	high __uart_obj
  3379  002BEA  6F7A               	movwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),b
  3380  002BEC  ECC9  F02B         	call	_EUSART_Async_Init	;wreg free
  3381  002BF0                     
  3382                           ;application.c: 477:    ADC_Init(&battery_adc);
  3383  002BF0  0E38               	movlw	low _battery_adc
  3384  002BF2  6E21               	movwf	ADC_Init@_adc^0,c
  3385  002BF4  0E01               	movlw	high _battery_adc
  3386  002BF6  6E22               	movwf	(ADC_Init@_adc+1)^0,c
  3387  002BF8  EC9A  F026         	call	_ADC_Init	;wreg free
  3388  002BFC  0012               	return		;funcret
  3389  002BFE                     __end_of_application_intialize:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _Ultra_Sonic_Init *****************
  3393 ;; Defined at:
  3394 ;;		line 9 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  ultrasonic_o    2    9[BANK0 ] PTR const struct .
  3397 ;;		 -> ultrasonic(2), 
  3398 ;;  _tmr0_config    2   11[BANK0 ] PTR const struct .
  3399 ;;		 -> timer0(4), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  ERRORSTATUS     1    0        unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      unsigned char 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        4 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 10
  3418 ;; This function calls:
  3419 ;;		_GPIO_Pin_Initialize
  3420 ;;		_HAL_Timer0_Init
  3421 ;; This function is called by:
  3422 ;;		_application_intialize
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text10
  3427  0058AC                     __ptext10:
  3428                           	callstack 0
  3429  0058AC                     _Ultra_Sonic_Init:
  3430                           	callstack 19
  3431  0058AC                     
  3432                           ;Robot/sensors/ultrasonic/ultrasonic.c: 12:     if ( ((void*)0)==ultrasonic_object||((vo
      +                          id*)0)==_tmr0_config)
  3433  0058AC  0100               	movlb	0	; () banked
  3434  0058AE  5169               	movf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  3435  0058B0  116A               	iorwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  3436  0058B2  B4D8               	btfsc	status,2,c
  3437  0058B4  EF5E  F02C         	goto	u12931
  3438  0058B8  EF60  F02C         	goto	u12930
  3439  0058BC                     u12931:
  3440  0058BC  EF69  F02C         	goto	l12157
  3441  0058C0                     u12930:
  3442  0058C0                     
  3443                           ; BSR set to: 0
  3444  0058C0  516B               	movf	Ultra_Sonic_Init@_tmr0_config& (0+255),w,b
  3445  0058C2  116C               	iorwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),w,b
  3446  0058C4  A4D8               	btfss	status,2,c
  3447  0058C6  EF67  F02C         	goto	u12941
  3448  0058CA  EF69  F02C         	goto	u12940
  3449  0058CE                     u12941:
  3450  0058CE  EF6B  F02C         	goto	l12159
  3451  0058D2                     u12940:
  3452  0058D2                     l12157:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;Robot/sensors/ultrasonic/ultrasonic.c: 15:     }
  3456  0058D2  EF80  F02C         	goto	l1798
  3457  0058D6                     l12159:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;Robot/sensors/ultrasonic/ultrasonic.c: 17:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           18:         GPIO_Pin_Initialize(&(ultrasonic_object->trig_pin));
  3461  0058D6  C069  F066         	movff	Ultra_Sonic_Init@ultrasonic_object,GPIO_Pin_Initialize@_pin_config
  3462  0058DA  C06A  F067         	movff	Ultra_Sonic_Init@ultrasonic_object+1,GPIO_Pin_Initialize@_pin_config+1
  3463  0058DE  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  3464                           
  3465                           ;Robot/sensors/ultrasonic/ultrasonic.c: 19:         GPIO_Pin_Initialize(&(ultrasonic_obj
      +                          ect->echo_pin));
  3466  0058E2  0E01               	movlw	1
  3467  0058E4  0100               	movlb	0	; () banked
  3468  0058E6  2569               	addwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  3469  0058E8  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  3470  0058EA  0E00               	movlw	0
  3471  0058EC  216A               	addwfc	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  3472  0058EE  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  3473  0058F0  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  3474  0058F4                     
  3475                           ;Robot/sensors/ultrasonic/ultrasonic.c: 20:         HAL_Timer0_Init(_tmr0_config);
  3476  0058F4  C06B  F023         	movff	Ultra_Sonic_Init@_tmr0_config,HAL_Timer0_Init@_tmr0_config
  3477  0058F8  C06C  F024         	movff	Ultra_Sonic_Init@_tmr0_config+1,HAL_Timer0_Init@_tmr0_config+1
  3478  0058FC  EC8B  F01C         	call	_HAL_Timer0_Init	;wreg free
  3479  005900                     l1798:
  3480  005900  0012               	return		;funcret
  3481  005902                     __end_of_Ultra_Sonic_Init:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _HAL_Timer0_Init *****************
  3485 ;; Defined at:
  3486 ;;		line 25 in file "MCAL/Timer0/hal_timer0.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  _tmr0_config    2   34[COMRAM] PTR const struct .
  3489 ;;		 -> timer0(4), 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  ret_value       1    0        unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      unsigned char 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;Total ram usage:        3 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 9
  3508 ;; This function calls:
  3509 ;;		_HAL_Timer0_Write_Val
  3510 ;; This function is called by:
  3511 ;;		_Ultra_Sonic_Init
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text11
  3516  003916                     __ptext11:
  3517                           	callstack 0
  3518  003916                     _HAL_Timer0_Init:
  3519                           	callstack 19
  3520  003916                     
  3521                           ;MCAL/Timer0/hal_timer0.c: 29:     if(((void*)0) == _tmr0_config)
  3522  003916  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3523  003918  1024               	iorwf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3524  00391A  A4D8               	btfss	status,2,c
  3525  00391C  EF92  F01C         	goto	u12421
  3526  003920  EF94  F01C         	goto	u12420
  3527  003924                     u12421:
  3528  003924  EF96  F01C         	goto	l1510
  3529  003928                     u12420:
  3530  003928                     
  3531                           ;MCAL/Timer0/hal_timer0.c: 32:     }
  3532  003928  EF0A  F01D         	goto	l1517
  3533  00392C                     l1510:
  3534                           
  3535                           ;MCAL/Timer0/hal_timer0.c: 34:     {;MCAL/Timer0/hal_timer0.c: 36:         (T0CONbits.TM
      +                          R0ON = 0 );
  3536  00392C  9ED5               	bcf	213,7,c	;volatile
  3537  00392E                     
  3538                           ;MCAL/Timer0/hal_timer0.c: 38:         (T0CONbits.T08BIT = _tmr0_config->reg_bit_size);
  3539  00392E  EE20 F003          	lfsr	2,3
  3540  003932  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3541  003934  26D9               	addwf	fsr2l,f,c
  3542  003936  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3543  003938  22DA               	addwfc	fsr2h,f,c
  3544  00393A  A2DF               	btfss	indf2,1,c
  3545  00393C  D002               	bra	u12435
  3546  00393E  8CD5               	bsf	213,6,c	;volatile
  3547  003940  D001               	bra	u12437
  3548  003942                     u12435:
  3549  003942  9CD5               	bcf	213,6,c	;volatile
  3550  003944                     u12437:
  3551                           
  3552                           ;MCAL/Timer0/hal_timer0.c: 40:         if(0x00U == _tmr0_config->prescaler_enable )
  3553  003944  EE20 F003          	lfsr	2,3
  3554  003948  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3555  00394A  26D9               	addwf	fsr2l,f,c
  3556  00394C  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3557  00394E  22DA               	addwfc	fsr2h,f,c
  3558  003950  B4DF               	btfsc	indf2,2,c
  3559  003952  EFAD  F01C         	goto	u12441
  3560  003956  EFAF  F01C         	goto	u12440
  3561  00395A                     u12441:
  3562  00395A  EFBD  F01C         	goto	l11819
  3563  00395E                     u12440:
  3564  00395E                     
  3565                           ;MCAL/Timer0/hal_timer0.c: 41:         {;MCAL/Timer0/hal_timer0.c: 42:             (T0CO
      +                          Nbits.T0PS = _tmr0_config->prescalar_value );
  3566  00395E  C023  FFD9         	movff	HAL_Timer0_Init@_tmr0_config,fsr2l
  3567  003962  C024  FFDA         	movff	HAL_Timer0_Init@_tmr0_config+1,fsr2h
  3568  003966  50DF               	movf	indf2,w,c
  3569  003968  6E25               	movwf	??_HAL_Timer0_Init^0,c
  3570  00396A  50D5               	movf	213,w,c	;volatile
  3571  00396C  1825               	xorwf	??_HAL_Timer0_Init^0,w,c
  3572  00396E  0BF8               	andlw	-8
  3573  003970  1825               	xorwf	??_HAL_Timer0_Init^0,w,c
  3574  003972  6ED5               	movwf	213,c	;volatile
  3575  003974                     
  3576                           ;MCAL/Timer0/hal_timer0.c: 43:             (T0CONbits.PSA = 0 );
  3577  003974  96D5               	bcf	213,3,c	;volatile
  3578                           
  3579                           ;MCAL/Timer0/hal_timer0.c: 44:         }
  3580  003976  EFCB  F01C         	goto	l11823
  3581  00397A                     l11819:
  3582  00397A  EE20 F003          	lfsr	2,3
  3583  00397E  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3584  003980  26D9               	addwf	fsr2l,f,c
  3585  003982  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3586  003984  22DA               	addwfc	fsr2h,f,c
  3587  003986  A4DF               	btfss	indf2,2,c
  3588  003988  EFC8  F01C         	goto	u12451
  3589  00398C  EFCA  F01C         	goto	u12450
  3590  003990                     u12451:
  3591  003990  EFCB  F01C         	goto	l11823
  3592  003994                     u12450:
  3593  003994                     
  3594                           ;MCAL/Timer0/hal_timer0.c: 46:         {;MCAL/Timer0/hal_timer0.c: 47:             (T0CO
      +                          Nbits.PSA = 1 );
  3595  003994  86D5               	bsf	213,3,c	;volatile
  3596  003996                     l11823:
  3597                           
  3598                           ;MCAL/Timer0/hal_timer0.c: 52:         if( 0x01U == _tmr0_config->timer_mode)
  3599  003996  EE20 F003          	lfsr	2,3
  3600  00399A  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3601  00399C  26D9               	addwf	fsr2l,f,c
  3602  00399E  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3603  0039A0  22DA               	addwfc	fsr2h,f,c
  3604  0039A2  A0DF               	btfss	indf2,0,c
  3605  0039A4  EFD6  F01C         	goto	u12461
  3606  0039A8  EFD8  F01C         	goto	u12460
  3607  0039AC                     u12461:
  3608  0039AC  EFE4  F01C         	goto	l11829
  3609  0039B0                     u12460:
  3610  0039B0                     
  3611                           ;MCAL/Timer0/hal_timer0.c: 53:         {;MCAL/Timer0/hal_timer0.c: 55:              (T0C
      +                          ONbits.T0SE = _tmr0_config->edge);
  3612  0039B0  EE20 F003          	lfsr	2,3
  3613  0039B4  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3614  0039B6  26D9               	addwf	fsr2l,f,c
  3615  0039B8  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3616  0039BA  22DA               	addwfc	fsr2h,f,c
  3617  0039BC  A6DF               	btfss	indf2,3,c
  3618  0039BE  D002               	bra	u12475
  3619  0039C0  88D5               	bsf	213,4,c	;volatile
  3620  0039C2  D001               	bra	u12477
  3621  0039C4                     u12475:
  3622  0039C4  98D5               	bcf	213,4,c	;volatile
  3623  0039C6                     u12477:
  3624  0039C6                     
  3625                           ;MCAL/Timer0/hal_timer0.c: 58:             (TRISA|=( (uint8)1<<GPIO_PIN4 ));
  3626  0039C6  8892               	bsf	146,4,c	;volatile
  3627  0039C8                     l11829:
  3628                           
  3629                           ;MCAL/Timer0/hal_timer0.c: 60:         (T0CONbits.T0CS = _tmr0_config->timer_mode);
  3630  0039C8  EE20 F003          	lfsr	2,3
  3631  0039CC  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3632  0039CE  26D9               	addwf	fsr2l,f,c
  3633  0039D0  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3634  0039D2  22DA               	addwfc	fsr2h,f,c
  3635  0039D4  A0DF               	btfss	indf2,0,c
  3636  0039D6  D002               	bra	u12485
  3637  0039D8  8AD5               	bsf	213,5,c	;volatile
  3638  0039DA  D001               	bra	u12487
  3639  0039DC                     u12485:
  3640  0039DC  9AD5               	bcf	213,5,c	;volatile
  3641  0039DE                     u12487:
  3642  0039DE  C023  F01E         	movff	HAL_Timer0_Init@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
  3643  0039E2  C024  F01F         	movff	HAL_Timer0_Init@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
  3644  0039E6  EE20 F001          	lfsr	2,1
  3645  0039EA  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3646  0039EC  26D9               	addwf	fsr2l,f,c
  3647  0039EE  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3648  0039F0  22DA               	addwfc	fsr2h,f,c
  3649  0039F2  CFDE F020          	movff	postinc2,HAL_Timer0_Write_Val@val
  3650  0039F6  CFDD F021          	movff	postdec2,HAL_Timer0_Write_Val@val+1
  3651  0039FA  ECA8  F02D         	call	_HAL_Timer0_Write_Val	;wreg free
  3652  0039FE                     
  3653                           ;MCAL/Timer0/hal_timer0.c: 64:         preloaded_val = _tmr0_config->preloaded_value ;
  3654  0039FE  EE20 F001          	lfsr	2,1
  3655  003A02  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  3656  003A04  26D9               	addwf	fsr2l,f,c
  3657  003A06  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  3658  003A08  22DA               	addwfc	fsr2h,f,c
  3659  003A0A  CFDE F0B5          	movff	postinc2,_preloaded_val
  3660  003A0E  CFDD F0B6          	movff	postdec2,_preloaded_val+1
  3661  003A12                     
  3662                           ;MCAL/Timer0/hal_timer0.c: 97:         (T0CONbits.TMR0ON = 1 );
  3663  003A12  8ED5               	bsf	213,7,c	;volatile
  3664  003A14                     l1517:
  3665  003A14  0012               	return		;funcret
  3666  003A16                     __end_of_HAL_Timer0_Init:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _Robot_Nav_Init *****************
  3670 ;; Defined at:
  3671 ;;		line 38 in file "Robot/Navigation/robot_navigation.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  ret_val         1    0        unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      unsigned char 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 12
  3692 ;; This function calls:
  3693 ;;		_CCP_Init
  3694 ;;		_CCP_PWM_Set_Duty
  3695 ;;		_CCP_PWM_Start
  3696 ;;		_ECU_DC_Motor_Init
  3697 ;;		_ServoDriver_Init
  3698 ;; This function is called by:
  3699 ;;		_application_intialize
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text12
  3704  004F78                     __ptext12:
  3705                           	callstack 0
  3706  004F78                     _Robot_Nav_Init:
  3707                           	callstack 17
  3708  004F78                     
  3709                           ;Robot/Navigation/robot_navigation.c: 44:         ECU_DC_Motor_Init(&W1_W3_W5_Motor_Cont
      +                          rol);
  3710  004F78  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  3711  004F7A  0100               	movlb	0	; () banked
  3712  004F7C  6F69               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  3713  004F7E  0E00               	movlw	high _W1_W3_W5_Motor_Control
  3714  004F80  6F6A               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  3715  004F82  EC0D  F02E         	call	_ECU_DC_Motor_Init	;wreg free
  3716  004F86                     
  3717                           ;Robot/Navigation/robot_navigation.c: 45:         ECU_DC_Motor_Init(&W2_W4_W6_Motor_Cont
      +                          rol);
  3718  004F86  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  3719  004F88  0100               	movlb	0	; () banked
  3720  004F8A  6F69               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  3721  004F8C  0E00               	movlw	high _W2_W4_W6_Motor_Control
  3722  004F8E  6F6A               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  3723  004F90  EC0D  F02E         	call	_ECU_DC_Motor_Init	;wreg free
  3724  004F94                     
  3725                           ;Robot/Navigation/robot_navigation.c: 48:         CCP_Init(&CCP1_Obj);
  3726  004F94  0E2C               	movlw	low _CCP1_Obj
  3727  004F96  0100               	movlb	0	; () banked
  3728  004F98  6F69               	movwf	CCP_Init@_ccp_obj& (0+255),b
  3729  004F9A  0E01               	movlw	high _CCP1_Obj
  3730  004F9C  6F6A               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  3731  004F9E  EC0B  F01D         	call	_CCP_Init	;wreg free
  3732  004FA2                     
  3733                           ;Robot/Navigation/robot_navigation.c: 49:         CCP_Init(&CCP2_Obj);
  3734  004FA2  0E20               	movlw	low _CCP2_Obj
  3735  004FA4  0100               	movlb	0	; () banked
  3736  004FA6  6F69               	movwf	CCP_Init@_ccp_obj& (0+255),b
  3737  004FA8  0E01               	movlw	high _CCP2_Obj
  3738  004FAA  6F6A               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  3739  004FAC  EC0B  F01D         	call	_CCP_Init	;wreg free
  3740  004FB0                     
  3741                           ;Robot/Navigation/robot_navigation.c: 50:         CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  3742  004FB0  0E2C               	movlw	low _CCP1_Obj
  3743  004FB2  0100               	movlb	0	; () banked
  3744  004FB4  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  3745  004FB6  0E01               	movlw	high _CCP1_Obj
  3746  004FB8  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  3747  004FBA  0E00               	movlw	0
  3748  004FBC  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  3749  004FBE  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  3750  004FC2                     
  3751                           ;Robot/Navigation/robot_navigation.c: 51:         CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  3752  004FC2  0E20               	movlw	low _CCP2_Obj
  3753  004FC4  0100               	movlb	0	; () banked
  3754  004FC6  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  3755  004FC8  0E01               	movlw	high _CCP2_Obj
  3756  004FCA  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  3757  004FCC  0E00               	movlw	0
  3758  004FCE  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  3759  004FD0  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  3760  004FD4                     
  3761                           ;Robot/Navigation/robot_navigation.c: 52:         CCP_PWM_Start(&CCP1_Obj);
  3762  004FD4  0E2C               	movlw	low _CCP1_Obj
  3763  004FD6  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  3764  004FD8  0E01               	movlw	high _CCP1_Obj
  3765  004FDA  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  3766  004FDC  EC28  F02C         	call	_CCP_PWM_Start	;wreg free
  3767  004FE0                     
  3768                           ;Robot/Navigation/robot_navigation.c: 53:         CCP_PWM_Start(&CCP2_Obj);
  3769  004FE0  0E20               	movlw	low _CCP2_Obj
  3770  004FE2  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  3771  004FE4  0E01               	movlw	high _CCP2_Obj
  3772  004FE6  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  3773  004FE8  EC28  F02C         	call	_CCP_PWM_Start	;wreg free
  3774  004FEC                     
  3775                           ;Robot/Navigation/robot_navigation.c: 57:         ServoDriver_Init(&i2c_obj,&servo_drive
      +                          r_obj);
  3776  004FEC  0EEB               	movlw	low _i2c_obj
  3777  004FEE  0101               	movlb	1	; () banked
  3778  004FF0  6F70               	movwf	ServoDriver_Init@i2c_obj& (0+255),b
  3779  004FF2  0E00               	movlw	high _i2c_obj
  3780  004FF4  6F71               	movwf	(ServoDriver_Init@i2c_obj+1)& (0+255),b
  3781  004FF6  0EF2               	movlw	low _servo_driver_obj
  3782  004FF8  6F72               	movwf	ServoDriver_Init@servo_driver_obj& (0+255),b
  3783  004FFA  0E00               	movlw	high _servo_driver_obj
  3784  004FFC  6F73               	movwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),b
  3785  004FFE  ECBD  F01F         	call	_ServoDriver_Init	;wreg free
  3786  005002  0012               	return		;funcret
  3787  005004                     __end_of_Robot_Nav_Init:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _ServoDriver_Init *****************
  3791 ;; Defined at:
  3792 ;;		line 13 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  i2c_obj         2   10[BANK1 ] PTR const struct .
  3795 ;;		 -> i2c_obj(7), 
  3796 ;;  servo_driver    2   12[BANK1 ] PTR const struct .
  3797 ;;		 -> servo_driver_obj(4), 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  ERRORSTATUS     1    0        unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      unsigned char 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        4 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; Hardware stack levels required when called: 11
  3816 ;; This function calls:
  3817 ;;		_MSSP_I2C_Init
  3818 ;;		_PCA_Write_Reg
  3819 ;; This function is called by:
  3820 ;;		_Robot_Nav_Init
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text13
  3825  003F7A                     __ptext13:
  3826                           	callstack 0
  3827  003F7A                     _ServoDriver_Init:
  3828                           	callstack 17
  3829  003F7A                     
  3830                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 16:     if ((((void*)0)==i2c_obj)
      +                          ||(((void*)0)==servo_driver_obj))
  3831  003F7A  0101               	movlb	1	; () banked
  3832  003F7C  5170               	movf	ServoDriver_Init@i2c_obj& (0+255),w,b
  3833  003F7E  1171               	iorwf	(ServoDriver_Init@i2c_obj+1)& (0+255),w,b
  3834  003F80  B4D8               	btfsc	status,2,c
  3835  003F82  EFC5  F01F         	goto	u12041
  3836  003F86  EFC7  F01F         	goto	u12040
  3837  003F8A                     u12041:
  3838  003F8A  EFD0  F01F         	goto	l11563
  3839  003F8E                     u12040:
  3840  003F8E                     
  3841                           ; BSR set to: 1
  3842  003F8E  5172               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  3843  003F90  1173               	iorwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  3844  003F92  A4D8               	btfss	status,2,c
  3845  003F94  EFCE  F01F         	goto	u12051
  3846  003F98  EFD0  F01F         	goto	u12050
  3847  003F9C                     u12051:
  3848  003F9C  EFD2  F01F         	goto	l11565
  3849  003FA0                     u12050:
  3850  003FA0                     l11563:
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 19:     }
  3854  003FA0  EF23  F020         	goto	l300
  3855  003FA4                     l11565:
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 21:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 22:      MSSP_I2C_Init(i2c_obj);
  3859  003FA4  C170  F16E         	movff	ServoDriver_Init@i2c_obj,MSSP_I2C_Init@i2c_obj
  3860  003FA8  C171  F16F         	movff	ServoDriver_Init@i2c_obj+1,MSSP_I2C_Init@i2c_obj+1
  3861  003FAC  EC49  F01A         	call	_MSSP_I2C_Init	;wreg free
  3862                           
  3863                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 23:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0xFE,servo_driver_obj->frequancy);
  3864  003FB0  C170  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  3865  003FB4  C171  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  3866  003FB8  C172  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  3867  003FBC  C173  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  3868  003FC0  50DF               	movf	indf2,w,c
  3869  003FC2  0100               	movlb	0	; () banked
  3870  003FC4  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  3871  003FC6  0EFE               	movlw	254
  3872  003FC8  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  3873  003FCA  0101               	movlb	1	; () banked
  3874  003FCC  EE20 F001          	lfsr	2,1
  3875  003FD0  5172               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  3876  003FD2  26D9               	addwf	fsr2l,f,c
  3877  003FD4  5173               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  3878  003FD6  22DA               	addwfc	fsr2h,f,c
  3879  003FD8  50DF               	movf	indf2,w,c
  3880  003FDA  0100               	movlb	0	; () banked
  3881  003FDC  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  3882  003FDE  EC64  F02B         	call	_PCA_Write_Reg	;wreg free
  3883                           
  3884                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 24:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x00,servo_driver_obj->mode_1_cfg);
  3885  003FE2  C170  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  3886  003FE6  C171  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  3887  003FEA  C172  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  3888  003FEE  C173  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  3889  003FF2  50DF               	movf	indf2,w,c
  3890  003FF4  0100               	movlb	0	; () banked
  3891  003FF6  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  3892  003FF8  0E00               	movlw	0
  3893  003FFA  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  3894  003FFC  0101               	movlb	1	; () banked
  3895  003FFE  EE20 F002          	lfsr	2,2
  3896  004002  5172               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  3897  004004  26D9               	addwf	fsr2l,f,c
  3898  004006  5173               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  3899  004008  22DA               	addwfc	fsr2h,f,c
  3900  00400A  50DF               	movf	indf2,w,c
  3901  00400C  0100               	movlb	0	; () banked
  3902  00400E  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  3903  004010  EC64  F02B         	call	_PCA_Write_Reg	;wreg free
  3904                           
  3905                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 25:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x01,servo_driver_obj->mode_2_cfg);
  3906  004014  C170  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  3907  004018  C171  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  3908  00401C  C172  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  3909  004020  C173  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  3910  004024  50DF               	movf	indf2,w,c
  3911  004026  0100               	movlb	0	; () banked
  3912  004028  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  3913  00402A  0E01               	movlw	1
  3914  00402C  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  3915  00402E  0101               	movlb	1	; () banked
  3916  004030  EE20 F003          	lfsr	2,3
  3917  004034  5172               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  3918  004036  26D9               	addwf	fsr2l,f,c
  3919  004038  5173               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  3920  00403A  22DA               	addwfc	fsr2h,f,c
  3921  00403C  50DF               	movf	indf2,w,c
  3922  00403E  0100               	movlb	0	; () banked
  3923  004040  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  3924  004042  EC64  F02B         	call	_PCA_Write_Reg	;wreg free
  3925  004046                     l300:
  3926  004046  0012               	return		;funcret
  3927  004048                     __end_of_ServoDriver_Init:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _MSSP_I2C_Init *****************
  3931 ;; Defined at:
  3932 ;;		line 23 in file "MCAL/I2C/mcal_i2c.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  i2c_obj         2    8[BANK1 ] PTR const struct .
  3935 ;;		 -> i2c_obj(7), 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  ERRORSTATUS     1    0        unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      unsigned char 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:        2 bytes
  3952 ;; Hardware stack levels used: 1
  3953 ;; Hardware stack levels required when called: 10
  3954 ;; This function calls:
  3955 ;;		_I2C_Master_Mode_Clock_Configurations
  3956 ;;		_I2C_Pin_Configurations
  3957 ;;		_I2C_Slave_Mode_Clock_Configurations
  3958 ;; This function is called by:
  3959 ;;		_ServoDriver_Init
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text14
  3964  003492                     __ptext14:
  3965                           	callstack 0
  3966  003492                     _MSSP_I2C_Init:
  3967                           	callstack 17
  3968  003492                     
  3969                           ;MCAL/I2C/mcal_i2c.c: 26:     if (((void*)0)==i2c_obj)
  3970  003492  0101               	movlb	1	; () banked
  3971  003494  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3972  003496  116F               	iorwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3973  003498  A4D8               	btfss	status,2,c
  3974  00349A  EF51  F01A         	goto	u11401
  3975  00349E  EF53  F01A         	goto	u11400
  3976  0034A2                     u11401:
  3977  0034A2  EF55  F01A         	goto	l984
  3978  0034A6                     u11400:
  3979  0034A6                     
  3980                           ; BSR set to: 1
  3981                           ;MCAL/I2C/mcal_i2c.c: 29:     }
  3982  0034A6  EFE7  F01A         	goto	l1002
  3983  0034AA                     l984:
  3984                           
  3985                           ; BSR set to: 1
  3986                           ;MCAL/I2C/mcal_i2c.c: 31:     {;MCAL/I2C/mcal_i2c.c: 33:         (SSPCON1bits.SSPEN = 0)
      +                          ;
  3987  0034AA  9AC6               	bcf	198,5,c	;volatile
  3988  0034AC                     
  3989                           ; BSR set to: 1
  3990                           ;MCAL/I2C/mcal_i2c.c: 35:         if(1==i2c_obj->i2c_cfg.i2c_mode)
  3991  0034AC  EE20 F006          	lfsr	2,6
  3992  0034B0  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3993  0034B2  26D9               	addwf	fsr2l,f,c
  3994  0034B4  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3995  0034B6  22DA               	addwfc	fsr2h,f,c
  3996  0034B8  A0DF               	btfss	indf2,0,c
  3997  0034BA  EF61  F01A         	goto	u11411
  3998  0034BE  EF63  F01A         	goto	u11410
  3999  0034C2                     u11411:
  4000  0034C2  EF6B  F01A         	goto	l11075
  4001  0034C6                     u11410:
  4002  0034C6                     
  4003                           ; BSR set to: 1
  4004                           ;MCAL/I2C/mcal_i2c.c: 36:         {;MCAL/I2C/mcal_i2c.c: 38:            I2C_Master_Mode_
      +                          Clock_Configurations(i2c_obj);
  4005  0034C6  C16E  F0B0         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  4006  0034CA  C16F  F0B1         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  4007  0034CE  EC43  F024         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  4008                           
  4009                           ;MCAL/I2C/mcal_i2c.c: 39:         }
  4010  0034D2  EFA7  F01A         	goto	l11089
  4011  0034D6                     l11075:
  4012                           
  4013                           ; BSR set to: 1
  4014  0034D6  EE20 F006          	lfsr	2,6
  4015  0034DA  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4016  0034DC  26D9               	addwf	fsr2l,f,c
  4017  0034DE  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4018  0034E0  22DA               	addwfc	fsr2h,f,c
  4019  0034E2  B0DF               	btfsc	indf2,0,c
  4020  0034E4  EF76  F01A         	goto	u11421
  4021  0034E8  EF78  F01A         	goto	u11420
  4022  0034EC                     u11421:
  4023  0034EC  EFA7  F01A         	goto	l11089
  4024  0034F0                     u11420:
  4025  0034F0                     
  4026                           ; BSR set to: 1
  4027                           ;MCAL/I2C/mcal_i2c.c: 41:         {;MCAL/I2C/mcal_i2c.c: 43:             if(1==i2c_obj->
      +                          i2c_cfg.i2c_general_call)
  4028  0034F0  EE20 F006          	lfsr	2,6
  4029  0034F4  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4030  0034F6  26D9               	addwf	fsr2l,f,c
  4031  0034F8  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4032  0034FA  22DA               	addwfc	fsr2h,f,c
  4033  0034FC  A6DF               	btfss	indf2,3,c
  4034  0034FE  EF83  F01A         	goto	u11431
  4035  003502  EF85  F01A         	goto	u11430
  4036  003506                     u11431:
  4037  003506  EF88  F01A         	goto	l11081
  4038  00350A                     u11430:
  4039  00350A                     
  4040                           ; BSR set to: 1
  4041                           ;MCAL/I2C/mcal_i2c.c: 44:             {;MCAL/I2C/mcal_i2c.c: 45:                 (SSPCON
      +                          2bits.GCEN = 1);
  4042  00350A  8EC5               	bsf	197,7,c	;volatile
  4043                           
  4044                           ;MCAL/I2C/mcal_i2c.c: 46:             }
  4045  00350C  EF96  F01A         	goto	l990
  4046  003510                     l11081:
  4047                           
  4048                           ; BSR set to: 1
  4049  003510  EE20 F006          	lfsr	2,6
  4050  003514  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4051  003516  26D9               	addwf	fsr2l,f,c
  4052  003518  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4053  00351A  22DA               	addwfc	fsr2h,f,c
  4054  00351C  B6DF               	btfsc	indf2,3,c
  4055  00351E  EF93  F01A         	goto	u11441
  4056  003522  EF95  F01A         	goto	u11440
  4057  003526                     u11441:
  4058  003526  EF96  F01A         	goto	l990
  4059  00352A                     u11440:
  4060  00352A                     
  4061                           ; BSR set to: 1
  4062                           ;MCAL/I2C/mcal_i2c.c: 48:             {;MCAL/I2C/mcal_i2c.c: 49:                 (SSPCON
      +                          2bits.GCEN = 0);
  4063  00352A  9EC5               	bcf	197,7,c	;volatile
  4064  00352C                     l990:
  4065                           
  4066                           ; BSR set to: 1
  4067                           ;MCAL/I2C/mcal_i2c.c: 53:              SSPCON1bits.WCOL=0;
  4068  00352C  9EC6               	bcf	198,7,c	;volatile
  4069                           
  4070                           ;MCAL/I2C/mcal_i2c.c: 55:              SSPCON1bits.SSPOV=0;
  4071  00352E  9CC6               	bcf	198,6,c	;volatile
  4072                           
  4073                           ;MCAL/I2C/mcal_i2c.c: 57:              SSPCON1bits.CKP=1;
  4074  003530  88C6               	bsf	198,4,c	;volatile
  4075  003532                     
  4076                           ; BSR set to: 1
  4077                           ;MCAL/I2C/mcal_i2c.c: 59:              SSPADD=i2c_obj->i2c_cfg.i2c_slave_address;
  4078  003532  EE20 F005          	lfsr	2,5
  4079  003536  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4080  003538  26D9               	addwf	fsr2l,f,c
  4081  00353A  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4082  00353C  22DA               	addwfc	fsr2h,f,c
  4083  00353E  50DF               	movf	indf2,w,c
  4084  003540  6EC8               	movwf	200,c	;volatile
  4085  003542                     
  4086                           ; BSR set to: 1
  4087                           ;MCAL/I2C/mcal_i2c.c: 61:              I2C_Slave_Mode_Clock_Configurations(i2c_obj);
  4088  003542  C16E  F01E         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Clock_Configurations@i2c_obj
  4089  003546  C16F  F01F         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Clock_Configurations@i2c_obj+1
  4090  00354A  EC1D  F02D         	call	_I2C_Slave_Mode_Clock_Configurations	;wreg free
  4091  00354E                     l11089:
  4092                           
  4093                           ;MCAL/I2C/mcal_i2c.c: 65:         I2C_Pin_Configurations();
  4094  00354E  EC9A  F02E         	call	_I2C_Pin_Configurations	;wreg free
  4095  003552                     
  4096                           ;MCAL/I2C/mcal_i2c.c: 67:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  4097  003552  0101               	movlb	1	; () banked
  4098  003554  EE20 F006          	lfsr	2,6
  4099  003558  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4100  00355A  26D9               	addwf	fsr2l,f,c
  4101  00355C  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4102  00355E  22DA               	addwfc	fsr2h,f,c
  4103  003560  A2DF               	btfss	indf2,1,c
  4104  003562  EFB5  F01A         	goto	u11451
  4105  003566  EFB7  F01A         	goto	u11450
  4106  00356A                     u11451:
  4107  00356A  EFBA  F01A         	goto	l11095
  4108  00356E                     u11450:
  4109  00356E                     
  4110                           ; BSR set to: 1
  4111                           ;MCAL/I2C/mcal_i2c.c: 68:             (SSPSTATbits.SMP = 1);
  4112  00356E  8EC7               	bsf	199,7,c	;volatile
  4113                           
  4114                           ;MCAL/I2C/mcal_i2c.c: 69:         }
  4115  003570  EFC8  F01A         	goto	l11099
  4116  003574                     l11095:
  4117                           
  4118                           ; BSR set to: 1
  4119  003574  EE20 F006          	lfsr	2,6
  4120  003578  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4121  00357A  26D9               	addwf	fsr2l,f,c
  4122  00357C  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4123  00357E  22DA               	addwfc	fsr2h,f,c
  4124  003580  B2DF               	btfsc	indf2,1,c
  4125  003582  EFC5  F01A         	goto	u11461
  4126  003586  EFC7  F01A         	goto	u11460
  4127  00358A                     u11461:
  4128  00358A  EFC8  F01A         	goto	l11099
  4129  00358E                     u11460:
  4130  00358E                     
  4131                           ; BSR set to: 1
  4132                           ;MCAL/I2C/mcal_i2c.c: 71:             (SSPSTATbits.SMP = 0);
  4133  00358E  9EC7               	bcf	199,7,c	;volatile
  4134  003590                     l11099:
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;MCAL/I2C/mcal_i2c.c: 75:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  4138  003590  EE20 F006          	lfsr	2,6
  4139  003594  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4140  003596  26D9               	addwf	fsr2l,f,c
  4141  003598  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4142  00359A  22DA               	addwfc	fsr2h,f,c
  4143  00359C  A4DF               	btfss	indf2,2,c
  4144  00359E  EFD3  F01A         	goto	u11471
  4145  0035A2  EFD5  F01A         	goto	u11470
  4146  0035A6                     u11471:
  4147  0035A6  EFD8  F01A         	goto	l11103
  4148  0035AA                     u11470:
  4149  0035AA                     
  4150                           ; BSR set to: 1
  4151                           ;MCAL/I2C/mcal_i2c.c: 76:             (SSPSTATbits.CKE = 1);
  4152  0035AA  8CC7               	bsf	199,6,c	;volatile
  4153                           
  4154                           ;MCAL/I2C/mcal_i2c.c: 77:         }
  4155  0035AC  EFE6  F01A         	goto	l999
  4156  0035B0                     l11103:
  4157                           
  4158                           ; BSR set to: 1
  4159  0035B0  EE20 F006          	lfsr	2,6
  4160  0035B4  516E               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  4161  0035B6  26D9               	addwf	fsr2l,f,c
  4162  0035B8  516F               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  4163  0035BA  22DA               	addwfc	fsr2h,f,c
  4164  0035BC  B4DF               	btfsc	indf2,2,c
  4165  0035BE  EFE3  F01A         	goto	u11481
  4166  0035C2  EFE5  F01A         	goto	u11480
  4167  0035C6                     u11481:
  4168  0035C6  EFE6  F01A         	goto	l999
  4169  0035CA                     u11480:
  4170  0035CA                     
  4171                           ; BSR set to: 1
  4172                           ;MCAL/I2C/mcal_i2c.c: 79:             (SSPSTATbits.CKE = 0);
  4173  0035CA  9CC7               	bcf	199,6,c	;volatile
  4174  0035CC                     l999:
  4175                           
  4176                           ; BSR set to: 1
  4177                           ;MCAL/I2C/mcal_i2c.c: 89:         (SSPCON1bits.SSPEN = 1);
  4178  0035CC  8AC6               	bsf	198,5,c	;volatile
  4179  0035CE                     l1002:
  4180                           
  4181                           ; BSR set to: 1
  4182  0035CE  0012               	return		;funcret
  4183  0035D0                     __end_of_MSSP_I2C_Init:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _I2C_Slave_Mode_Clock_Configurations *****************
  4187 ;; Defined at:
  4188 ;;		line 325 in file "MCAL/I2C/mcal_i2c.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  4191 ;;		 -> i2c_obj(7), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  ERRORSTATUS     1    0        unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:        3 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 8
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_MSSP_I2C_Init
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text15
  4218  005A3A                     __ptext15:
  4219                           	callstack 0
  4220  005A3A                     _I2C_Slave_Mode_Clock_Configurations:
  4221                           	callstack 18
  4222  005A3A                     
  4223                           ;MCAL/I2C/mcal_i2c.c: 328:     if (((void*)0)==i2c_obj)
  4224  005A3A  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  4225  005A3C  101F               	iorwf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  4226  005A3E  A4D8               	btfss	status,2,c
  4227  005A40  EF24  F02D         	goto	u11381
  4228  005A44  EF26  F02D         	goto	u11380
  4229  005A48                     u11381:
  4230  005A48  EF28  F02D         	goto	l11049
  4231  005A4C                     u11380:
  4232  005A4C                     
  4233                           ;MCAL/I2C/mcal_i2c.c: 331:     }
  4234  005A4C  EF35  F02D         	goto	l1097
  4235  005A50                     l11049:
  4236                           
  4237                           ;MCAL/I2C/mcal_i2c.c: 333:     {;MCAL/I2C/mcal_i2c.c: 335:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  4238  005A50  EE20 F004          	lfsr	2,4
  4239  005A54  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  4240  005A56  26D9               	addwf	fsr2l,f,c
  4241  005A58  501F               	movf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  4242  005A5A  22DA               	addwfc	fsr2h,f,c
  4243  005A5C  50DF               	movf	indf2,w,c
  4244  005A5E  6E20               	movwf	??_I2C_Slave_Mode_Clock_Configurations^0,c
  4245  005A60  50C6               	movf	198,w,c	;volatile
  4246  005A62  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  4247  005A64  0BF0               	andlw	-16
  4248  005A66  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  4249  005A68  6EC6               	movwf	198,c	;volatile
  4250  005A6A                     l1097:
  4251  005A6A  0012               	return		;funcret
  4252  005A6C                     __end_of_I2C_Slave_Mode_Clock_Configurations:
  4253                           	callstack 0
  4254                           
  4255 ;; *************** function _I2C_Pin_Configurations *****************
  4256 ;; Defined at:
  4257 ;;		line 339 in file "MCAL/I2C/mcal_i2c.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		None
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;Total ram usage:        0 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; Hardware stack levels required when called: 8
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_MSSP_I2C_Init
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text16
  4286  005D34                     __ptext16:
  4287                           	callstack 0
  4288  005D34                     _I2C_Pin_Configurations:
  4289                           	callstack 18
  4290  005D34                     
  4291                           ;MCAL/I2C/mcal_i2c.c: 341:     TRISCbits.RC3=1;
  4292  005D34  8694               	bsf	148,3,c	;volatile
  4293                           
  4294                           ;MCAL/I2C/mcal_i2c.c: 342:     TRISCbits.RC4=1;
  4295  005D36  8894               	bsf	148,4,c	;volatile
  4296  005D38  0012               	return		;funcret
  4297  005D3A                     __end_of_I2C_Pin_Configurations:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  4301 ;; Defined at:
  4302 ;;		line 310 in file "MCAL/I2C/mcal_i2c.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  i2c_obj         2   80[BANK0 ] PTR const struct .
  4305 ;;		 -> i2c_obj(7), 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  ERRORSTATUS     1    0        unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;Total ram usage:        3 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 9
  4324 ;; This function calls:
  4325 ;;		___fladd
  4326 ;;		___fldiv
  4327 ;;		___fltol
  4328 ;;		___xxtofl
  4329 ;; This function is called by:
  4330 ;;		_MSSP_I2C_Init
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text17
  4335  004886                     __ptext17:
  4336                           	callstack 0
  4337  004886                     _I2C_Master_Mode_Clock_Configurations:
  4338                           	callstack 17
  4339  004886                     
  4340                           ;MCAL/I2C/mcal_i2c.c: 313:     if (((void*)0)==i2c_obj)
  4341  004886  0100               	movlb	0	; () banked
  4342  004888  51B0               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  4343  00488A  11B1               	iorwf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  4344  00488C  A4D8               	btfss	status,2,c
  4345  00488E  EF4B  F024         	goto	u11371
  4346  004892  EF4D  F024         	goto	u11370
  4347  004896                     u11371:
  4348  004896  EF4F  F024         	goto	l11039
  4349  00489A                     u11370:
  4350  00489A                     
  4351                           ; BSR set to: 0
  4352                           ;MCAL/I2C/mcal_i2c.c: 316:     }
  4353  00489A  EF9D  F024         	goto	l1092
  4354  00489E                     l11039:
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;MCAL/I2C/mcal_i2c.c: 318:     {;MCAL/I2C/mcal_i2c.c: 320:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  4358  00489E  EE20 F004          	lfsr	2,4
  4359  0048A2  51B0               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  4360  0048A4  26D9               	addwf	fsr2l,f,c
  4361  0048A6  51B1               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  4362  0048A8  22DA               	addwfc	fsr2h,f,c
  4363  0048AA  50DF               	movf	indf2,w,c
  4364  0048AC  6FB2               	movwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),b
  4365  0048AE  50C6               	movf	198,w,c	;volatile
  4366  0048B0  19B2               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  4367  0048B2  0BF0               	andlw	-16
  4368  0048B4  19B2               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  4369  0048B6  6EC6               	movwf	198,c	;volatile
  4370  0048B8                     
  4371                           ; BSR set to: 0
  4372                           ;MCAL/I2C/mcal_i2c.c: 321:         SSPADD=(uint8)(((8000000/4.0)/i2c_obj->i2c_clock)-1);
  4373  0048B8  0E00               	movlw	0
  4374  0048BA  6FA4               	movwf	___fladd@a& (0+255),b
  4375  0048BC  0E00               	movlw	0
  4376  0048BE  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  4377  0048C0  0E80               	movlw	128
  4378  0048C2  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  4379  0048C4  0EBF               	movlw	191
  4380  0048C6  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  4381  0048C8  C0B0  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  4382  0048CC  C0B1  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  4383  0048D0  CFDE F060          	movff	postinc2,___xxtofl@val
  4384  0048D4  CFDE F061          	movff	postinc2,___xxtofl@val+1
  4385  0048D8  CFDE F062          	movff	postinc2,___xxtofl@val+2
  4386  0048DC  CFDE F063          	movff	postinc2,___xxtofl@val+3
  4387  0048E0  0E00               	movlw	0
  4388  0048E2  ECFF  F015         	call	___xxtofl
  4389  0048E6  C060  F072         	movff	?___xxtofl,___fldiv@a
  4390  0048EA  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  4391  0048EE  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  4392  0048F2  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  4393  0048F6  0E00               	movlw	0
  4394  0048F8  0100               	movlb	0	; () banked
  4395  0048FA  6F6E               	movwf	___fldiv@b& (0+255),b
  4396  0048FC  0E24               	movlw	36
  4397  0048FE  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  4398  004900  0EF4               	movlw	244
  4399  004902  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  4400  004904  0E49               	movlw	73
  4401  004906  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  4402  004908  EC2D  F011         	call	___fldiv	;wreg free
  4403  00490C  C06E  F0A0         	movff	?___fldiv,___fladd@b
  4404  004910  C06F  F0A1         	movff	?___fldiv+1,___fladd@b+1
  4405  004914  C070  F0A2         	movff	?___fldiv+2,___fladd@b+2
  4406  004918  C071  F0A3         	movff	?___fldiv+3,___fladd@b+3
  4407  00491C  ECD1  F00A         	call	___fladd	;wreg free
  4408  004920  C0A0  F166         	movff	?___fladd,___fltol@f1
  4409  004924  C0A1  F167         	movff	?___fladd+1,___fltol@f1+1
  4410  004928  C0A2  F168         	movff	?___fladd+2,___fltol@f1+2
  4411  00492C  C0A3  F169         	movff	?___fladd+3,___fltol@f1+3
  4412  004930  EC07  F01C         	call	___fltol	;wreg free
  4413  004934  0101               	movlb	1	; () banked
  4414  004936  5166               	movf	?___fltol& (0+255),w,b
  4415  004938  6EC8               	movwf	200,c	;volatile
  4416  00493A                     l1092:
  4417  00493A  0012               	return		;funcret
  4418  00493C                     __end_of_I2C_Master_Mode_Clock_Configurations:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _ECU_DC_Motor_Init *****************
  4422 ;; Defined at:
  4423 ;;		line 19 in file "ECU/DC_Motor/ecu_dc_motor.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  dc_motor        2    9[BANK0 ] PTR const struct .
  4426 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  ret_value       1    0        unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      unsigned char 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:        2 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 10
  4445 ;; This function calls:
  4446 ;;		_GPIO_Pin_Initialize
  4447 ;; This function is called by:
  4448 ;;		_Robot_Nav_Init
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text18
  4453  005C1A                     __ptext18:
  4454                           	callstack 0
  4455  005C1A                     _ECU_DC_Motor_Init:
  4456                           	callstack 18
  4457  005C1A                     
  4458                           ;ECU/DC_Motor/ecu_dc_motor.c: 22:     if(((void*)0) == dc_motor)
  4459  005C1A  0100               	movlb	0	; () banked
  4460  005C1C  5169               	movf	ECU_DC_Motor_Init@dc_motor& (0+255),w,b
  4461  005C1E  116A               	iorwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),w,b
  4462  005C20  A4D8               	btfss	status,2,c
  4463  005C22  EF15  F02E         	goto	u12031
  4464  005C26  EF17  F02E         	goto	u12030
  4465  005C2A                     u12031:
  4466  005C2A  EF19  F02E         	goto	l11553
  4467  005C2E                     u12030:
  4468  005C2E                     
  4469                           ; BSR set to: 0
  4470                           ;ECU/DC_Motor/ecu_dc_motor.c: 25:     }
  4471  005C2E  EF1F  F02E         	goto	l55
  4472  005C32                     l11553:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;ECU/DC_Motor/ecu_dc_motor.c: 27:     {;ECU/DC_Motor/ecu_dc_motor.c: 28:         GPIO_Pi
      +                          n_Initialize(&(dc_motor->dc_motor));
  4476  005C32  C069  F066         	movff	ECU_DC_Motor_Init@dc_motor,GPIO_Pin_Initialize@_pin_config
  4477  005C36  C06A  F067         	movff	ECU_DC_Motor_Init@dc_motor+1,GPIO_Pin_Initialize@_pin_config+1
  4478  005C3A  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  4479  005C3E                     l55:
  4480  005C3E  0012               	return		;funcret
  4481  005C40                     __end_of_ECU_DC_Motor_Init:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function _CCP_PWM_Start *****************
  4485 ;; Defined at:
  4486 ;;		line 202 in file "MCAL/CCP/hal_ccp.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  4489 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  ret             1    0        unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      unsigned char 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        3 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 8
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_Robot_Nav_Init
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text19
  4516  005850                     __ptext19:
  4517                           	callstack 0
  4518  005850                     _CCP_PWM_Start:
  4519                           	callstack 20
  4520  005850                     
  4521                           ;MCAL/CCP/hal_ccp.c: 205:     if(((void*)0) == _ccp_obj){
  4522  005850  501E               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  4523  005852  101F               	iorwf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  4524  005854  A4D8               	btfss	status,2,c
  4525  005856  EF2F  F02C         	goto	u12281
  4526  00585A  EF31  F02C         	goto	u12280
  4527  00585E                     u12281:
  4528  00585E  EF33  F02C         	goto	l11699
  4529  005862                     u12280:
  4530  005862                     
  4531                           ;MCAL/CCP/hal_ccp.c: 207:     }
  4532  005862  EF55  F02C         	goto	l543
  4533  005866                     l11699:
  4534                           
  4535                           ;MCAL/CCP/hal_ccp.c: 209:         if(CCP1_INST == _ccp_obj->ccp_inst){
  4536  005866  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  4537  00586A  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  4538  00586E  50DF               	movf	indf2,w,c
  4539  005870  A4D8               	btfss	status,2,c
  4540  005872  EF3D  F02C         	goto	u12291
  4541  005876  EF3F  F02C         	goto	u12290
  4542  00587A                     u12291:
  4543  00587A  EF45  F02C         	goto	l11703
  4544  00587E                     u12290:
  4545  00587E                     
  4546                           ;MCAL/CCP/hal_ccp.c: 210:             CCP1CONbits.CCP1M = ((uint8)0x0C);
  4547  00587E  50BD               	movf	189,w,c	;volatile
  4548  005880  0BF0               	andlw	-16
  4549  005882  090C               	iorlw	12
  4550  005884  6EBD               	movwf	189,c	;volatile
  4551                           
  4552                           ;MCAL/CCP/hal_ccp.c: 211:         }
  4553  005886  EF55  F02C         	goto	l11707
  4554  00588A                     l11703:
  4555  00588A  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  4556  00588E  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  4557  005892  04DE               	decf	postinc2,w,c
  4558  005894  A4D8               	btfss	status,2,c
  4559  005896  EF4F  F02C         	goto	u12301
  4560  00589A  EF51  F02C         	goto	u12300
  4561  00589E                     u12301:
  4562  00589E  EF55  F02C         	goto	l11707
  4563  0058A2                     u12300:
  4564  0058A2                     
  4565                           ;MCAL/CCP/hal_ccp.c: 213:             CCP2CONbits.CCP2M = ((uint8)0x0C);
  4566  0058A2  50BA               	movf	186,w,c	;volatile
  4567  0058A4  0BF0               	andlw	-16
  4568  0058A6  090C               	iorlw	12
  4569  0058A8  6EBA               	movwf	186,c	;volatile
  4570  0058AA                     l11707:
  4571  0058AA                     l543:
  4572  0058AA  0012               	return		;funcret
  4573  0058AC                     __end_of_CCP_PWM_Start:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _CCP_Init *****************
  4577 ;; Defined at:
  4578 ;;		line 24 in file "MCAL/CCP/hal_ccp.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  _ccp_obj        2    9[BANK0 ] PTR const struct .
  4581 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  ret             1    0        unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;Total ram usage:        3 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 10
  4600 ;; This function calls:
  4601 ;;		_CCP_Capture_Mode_Config
  4602 ;;		_CCP_Compare_Mode_Config
  4603 ;;		_CCP_Interrupt_Config
  4604 ;;		_CCP_PWM_Mode_Config
  4605 ;;		_GPIO_Pin_Initialize
  4606 ;; This function is called by:
  4607 ;;		_Robot_Nav_Init
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text20
  4612  003A16                     __ptext20:
  4613                           	callstack 0
  4614  003A16                     _CCP_Init:
  4615                           	callstack 18
  4616  003A16                     
  4617                           ;MCAL/CCP/hal_ccp.c: 26:     if(((void*)0) == _ccp_obj){
  4618  003A16  0100               	movlb	0	; () banked
  4619  003A18  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  4620  003A1A  116A               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  4621  003A1C  A4D8               	btfss	status,2,c
  4622  003A1E  EF13  F01D         	goto	u12191
  4623  003A22  EF15  F01D         	goto	u12190
  4624  003A26                     u12191:
  4625  003A26  EF17  F01D         	goto	l11645
  4626  003A2A                     u12190:
  4627  003A2A                     
  4628                           ; BSR set to: 0
  4629                           ;MCAL/CCP/hal_ccp.c: 28:     }
  4630  003A2A  EF87  F01D         	goto	l516
  4631  003A2E                     l11645:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;MCAL/CCP/hal_ccp.c: 31:         if(CCP1_INST == _ccp_obj->ccp_inst){
  4635  003A2E  C069  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  4636  003A32  C06A  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  4637  003A36  50DF               	movf	indf2,w,c
  4638  003A38  A4D8               	btfss	status,2,c
  4639  003A3A  EF21  F01D         	goto	u12201
  4640  003A3E  EF23  F01D         	goto	u12200
  4641  003A42                     u12201:
  4642  003A42  EF27  F01D         	goto	l11649
  4643  003A46                     u12200:
  4644  003A46                     
  4645                           ; BSR set to: 0
  4646                           ;MCAL/CCP/hal_ccp.c: 32:             (CCP1CONbits.CCP1M = ((uint8)0x00));
  4647  003A46  0EF0               	movlw	-16
  4648  003A48  16BD               	andwf	189,f,c	;volatile
  4649                           
  4650                           ;MCAL/CCP/hal_ccp.c: 33:         }
  4651  003A4A  EF35  F01D         	goto	l11653
  4652  003A4E                     l11649:
  4653                           
  4654                           ; BSR set to: 0
  4655  003A4E  C069  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  4656  003A52  C06A  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  4657  003A56  04DE               	decf	postinc2,w,c
  4658  003A58  A4D8               	btfss	status,2,c
  4659  003A5A  EF31  F01D         	goto	u12211
  4660  003A5E  EF33  F01D         	goto	u12210
  4661  003A62                     u12211:
  4662  003A62  EF35  F01D         	goto	l11653
  4663  003A66                     u12210:
  4664  003A66                     
  4665                           ; BSR set to: 0
  4666                           ;MCAL/CCP/hal_ccp.c: 35:             (CCP2CONbits.CCP2M = ((uint8)0x00));
  4667  003A66  0EF0               	movlw	-16
  4668  003A68  16BA               	andwf	186,f,c	;volatile
  4669  003A6A                     l11653:
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;MCAL/CCP/hal_ccp.c: 40:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mode){
  4673  003A6A  EE20 F001          	lfsr	2,1
  4674  003A6E  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  4675  003A70  26D9               	addwf	fsr2l,f,c
  4676  003A72  516A               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  4677  003A74  22DA               	addwfc	fsr2h,f,c
  4678  003A76  50DF               	movf	indf2,w,c
  4679  003A78  A4D8               	btfss	status,2,c
  4680  003A7A  EF41  F01D         	goto	u12221
  4681  003A7E  EF43  F01D         	goto	u12220
  4682  003A82                     u12221:
  4683  003A82  EF4B  F01D         	goto	l11657
  4684  003A86                     u12220:
  4685  003A86                     
  4686                           ; BSR set to: 0
  4687  003A86  C069  F021         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Config@_ccp_obj
  4688  003A8A  C06A  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Config@_ccp_obj+1
  4689  003A8E  ECA9  F019         	call	_CCP_Capture_Mode_Config	;wreg free
  4690                           
  4691                           ;MCAL/CCP/hal_ccp.c: 42:         }
  4692  003A92  EF78  F01D         	goto	l11665
  4693  003A96                     l11657:
  4694                           
  4695                           ; BSR set to: 0
  4696  003A96  EE20 F001          	lfsr	2,1
  4697  003A9A  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  4698  003A9C  26D9               	addwf	fsr2l,f,c
  4699  003A9E  516A               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  4700  003AA0  22DA               	addwfc	fsr2h,f,c
  4701  003AA2  04DE               	decf	postinc2,w,c
  4702  003AA4  A4D8               	btfss	status,2,c
  4703  003AA6  EF57  F01D         	goto	u12231
  4704  003AAA  EF59  F01D         	goto	u12230
  4705  003AAE                     u12231:
  4706  003AAE  EF61  F01D         	goto	l11661
  4707  003AB2                     u12230:
  4708  003AB2                     
  4709                           ; BSR set to: 0
  4710  003AB2  C069  F021         	movff	CCP_Init@_ccp_obj,CCP_Compare_Mode_Config@_ccp_obj
  4711  003AB6  C06A  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Compare_Mode_Config@_ccp_obj+1
  4712  003ABA  EC9F  F017         	call	_CCP_Compare_Mode_Config	;wreg free
  4713                           
  4714                           ;MCAL/CCP/hal_ccp.c: 46:         }
  4715  003ABE  EF78  F01D         	goto	l11665
  4716  003AC2                     l11661:
  4717                           
  4718                           ; BSR set to: 0
  4719  003AC2  EE20 F001          	lfsr	2,1
  4720  003AC6  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  4721  003AC8  26D9               	addwf	fsr2l,f,c
  4722  003ACA  516A               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  4723  003ACC  22DA               	addwfc	fsr2h,f,c
  4724  003ACE  0E02               	movlw	2
  4725  003AD0  18DE               	xorwf	postinc2,w,c
  4726  003AD2  A4D8               	btfss	status,2,c
  4727  003AD4  EF6E  F01D         	goto	u12241
  4728  003AD8  EF70  F01D         	goto	u12240
  4729  003ADC                     u12241:
  4730  003ADC  EF78  F01D         	goto	l513
  4731  003AE0                     u12240:
  4732  003AE0                     
  4733                           ; BSR set to: 0
  4734                           ;MCAL/CCP/hal_ccp.c: 50:             CCP_PWM_Mode_Config(_ccp_obj);
  4735  003AE0  C069  F021         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Config@_ccp_obj
  4736  003AE4  C06A  F022         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Config@_ccp_obj+1
  4737  003AE8  ECF8  F025         	call	_CCP_PWM_Mode_Config	;wreg free
  4738                           
  4739                           ;MCAL/CCP/hal_ccp.c: 51:         }
  4740  003AEC  EF78  F01D         	goto	l11665
  4741  003AF0                     l513:
  4742  003AF0                     l11665:
  4743  003AF0  0E03               	movlw	3
  4744  003AF2  0100               	movlb	0	; () banked
  4745  003AF4  2569               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  4746  003AF6  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  4747  003AF8  0E00               	movlw	0
  4748  003AFA  216A               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  4749  003AFC  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  4750  003AFE  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  4751  003B02                     
  4752                           ;MCAL/CCP/hal_ccp.c: 58:         CCP_Interrupt_Config(_ccp_obj);
  4753  003B02  C069  F01E         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Config@_ccp_obj
  4754  003B06  C06A  F01F         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Config@_ccp_obj+1
  4755  003B0A  ECA2  F02E         	call	_CCP_Interrupt_Config	;wreg free
  4756  003B0E                     l516:
  4757  003B0E  0012               	return		;funcret
  4758  003B10                     __end_of_CCP_Init:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _CCP_PWM_Mode_Config *****************
  4762 ;; Defined at:
  4763 ;;		line 264 in file "MCAL/CCP/hal_ccp.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  4766 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        3 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 9
  4785 ;; This function calls:
  4786 ;;		_Timer2_Init
  4787 ;; This function is called by:
  4788 ;;		_CCP_Init
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text21
  4793  004BF0                     __ptext21:
  4794                           	callstack 0
  4795  004BF0                     _CCP_PWM_Mode_Config:
  4796                           	callstack 18
  4797  004BF0                     
  4798                           ;MCAL/CCP/hal_ccp.c: 269:     PR2 = _ccp_obj->timer2.timer2_preload_value ;
  4799  004BF0  EE20 F009          	lfsr	2,9
  4800  004BF4  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  4801  004BF6  26D9               	addwf	fsr2l,f,c
  4802  004BF8  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  4803  004BFA  22DA               	addwfc	fsr2h,f,c
  4804  004BFC  50DF               	movf	indf2,w,c
  4805  004BFE  6ECB               	movwf	203,c	;volatile
  4806  004C00                     
  4807                           ;MCAL/CCP/hal_ccp.c: 270:     Timer2_Init(&(_ccp_obj->timer2));
  4808  004C00  0E09               	movlw	9
  4809  004C02  2421               	addwf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  4810  004C04  6E1E               	movwf	Timer2_Init@_timer2^0,c
  4811  004C06  0E00               	movlw	0
  4812  004C08  2022               	addwfc	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  4813  004C0A  6E1F               	movwf	(Timer2_Init@_timer2+1)^0,c
  4814  004C0C  ECF2  F029         	call	_Timer2_Init	;wreg free
  4815  004C10                     
  4816                           ;MCAL/CCP/hal_ccp.c: 271:     if(CCP1_INST == _ccp_obj->ccp_inst){
  4817  004C10  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  4818  004C14  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  4819  004C18  50DF               	movf	indf2,w,c
  4820  004C1A  A4D8               	btfss	status,2,c
  4821  004C1C  EF12  F026         	goto	u11531
  4822  004C20  EF14  F026         	goto	u11530
  4823  004C24                     u11531:
  4824  004C24  EF29  F026         	goto	l11265
  4825  004C28                     u11530:
  4826  004C28                     
  4827                           ;MCAL/CCP/hal_ccp.c: 272:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  4828  004C28  EE20 F002          	lfsr	2,2
  4829  004C2C  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  4830  004C2E  26D9               	addwf	fsr2l,f,c
  4831  004C30  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  4832  004C32  22DA               	addwfc	fsr2h,f,c
  4833  004C34  0E0C               	movlw	12
  4834  004C36  18DE               	xorwf	postinc2,w,c
  4835  004C38  A4D8               	btfss	status,2,c
  4836  004C3A  EF21  F026         	goto	u11541
  4837  004C3E  EF23  F026         	goto	u11540
  4838  004C42                     u11541:
  4839  004C42  EF48  F026         	goto	l563
  4840  004C46                     u11540:
  4841  004C46                     
  4842                           ;MCAL/CCP/hal_ccp.c: 273:             (CCP1CONbits.CCP1M = ((uint8)0x0C));
  4843  004C46  50BD               	movf	189,w,c	;volatile
  4844  004C48  0BF0               	andlw	-16
  4845  004C4A  090C               	iorlw	12
  4846  004C4C  6EBD               	movwf	189,c	;volatile
  4847                           
  4848                           ;MCAL/CCP/hal_ccp.c: 274:         }
  4849  004C4E  EF48  F026         	goto	l563
  4850  004C52                     l11265:
  4851  004C52  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  4852  004C56  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  4853  004C5A  04DE               	decf	postinc2,w,c
  4854  004C5C  A4D8               	btfss	status,2,c
  4855  004C5E  EF33  F026         	goto	u11551
  4856  004C62  EF35  F026         	goto	u11550
  4857  004C66                     u11551:
  4858  004C66  EF48  F026         	goto	l563
  4859  004C6A                     u11550:
  4860  004C6A                     
  4861                           ;MCAL/CCP/hal_ccp.c: 278:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  4862  004C6A  EE20 F002          	lfsr	2,2
  4863  004C6E  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  4864  004C70  26D9               	addwf	fsr2l,f,c
  4865  004C72  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  4866  004C74  22DA               	addwfc	fsr2h,f,c
  4867  004C76  0E0C               	movlw	12
  4868  004C78  18DE               	xorwf	postinc2,w,c
  4869  004C7A  A4D8               	btfss	status,2,c
  4870  004C7C  EF42  F026         	goto	u11561
  4871  004C80  EF44  F026         	goto	u11560
  4872  004C84                     u11561:
  4873  004C84  EF48  F026         	goto	l563
  4874  004C88                     u11560:
  4875  004C88                     
  4876                           ;MCAL/CCP/hal_ccp.c: 279:             (CCP2CONbits.CCP2M = ((uint8)0x0C));
  4877  004C88  50BA               	movf	186,w,c	;volatile
  4878  004C8A  0BF0               	andlw	-16
  4879  004C8C  090C               	iorlw	12
  4880  004C8E  6EBA               	movwf	186,c	;volatile
  4881  004C90                     l563:
  4882  004C90  0012               	return		;funcret
  4883  004C92                     __end_of_CCP_PWM_Mode_Config:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _Timer2_Init *****************
  4887 ;; Defined at:
  4888 ;;		line 15 in file "MCAL/TIMER2/mcal_timer2.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  _timer2         2   29[COMRAM] PTR const struct .
  4891 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  ERRORSTATUS     1    0        unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      unsigned char 
  4896 ;; Registers used:
  4897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;Total ram usage:        3 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; Hardware stack levels required when called: 8
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_CCP_PWM_Mode_Config
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text22
  4918  0053E4                     __ptext22:
  4919                           	callstack 0
  4920  0053E4                     _Timer2_Init:
  4921                           	callstack 18
  4922  0053E4                     
  4923                           ;MCAL/TIMER2/mcal_timer2.c: 17:   if (((void*)0) == _timer2) {
  4924  0053E4  501E               	movf	Timer2_Init@_timer2^0,w,c
  4925  0053E6  101F               	iorwf	(Timer2_Init@_timer2+1)^0,w,c
  4926  0053E8  A4D8               	btfss	status,2,c
  4927  0053EA  EFF9  F029         	goto	u11331
  4928  0053EE  EFFB  F029         	goto	u11330
  4929  0053F2                     u11331:
  4930  0053F2  EFFD  F029         	goto	l1632
  4931  0053F6                     u11330:
  4932  0053F6                     
  4933                           ;MCAL/TIMER2/mcal_timer2.c: 19:   } else {
  4934  0053F6  EF28  F02A         	goto	l1634
  4935  0053FA                     l1632:
  4936                           
  4937                           ;MCAL/TIMER2/mcal_timer2.c: 21:     (T2CONbits.TMR2ON=0);
  4938  0053FA  94CA               	bcf	202,2,c	;volatile
  4939  0053FC                     
  4940                           ;MCAL/TIMER2/mcal_timer2.c: 23:     (T2CONbits.T2CKPS=_timer2->timer2_prescaler_value);
  4941  0053FC  EE20 F001          	lfsr	2,1
  4942  005400  501E               	movf	Timer2_Init@_timer2^0,w,c
  4943  005402  26D9               	addwf	fsr2l,f,c
  4944  005404  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  4945  005406  22DA               	addwfc	fsr2h,f,c
  4946  005408  50DF               	movf	indf2,w,c
  4947  00540A  6E20               	movwf	??_Timer2_Init^0,c
  4948  00540C  50CA               	movf	202,w,c	;volatile
  4949  00540E  1820               	xorwf	??_Timer2_Init^0,w,c
  4950  005410  0BFC               	andlw	-4
  4951  005412  1820               	xorwf	??_Timer2_Init^0,w,c
  4952  005414  6ECA               	movwf	202,c	;volatile
  4953                           
  4954                           ;MCAL/TIMER2/mcal_timer2.c: 25:     (T2CONbits.T2OUTPS=_timer2->timer2_postscaler_value)
      +                          ;
  4955  005416  EE20 F002          	lfsr	2,2
  4956  00541A  501E               	movf	Timer2_Init@_timer2^0,w,c
  4957  00541C  26D9               	addwf	fsr2l,f,c
  4958  00541E  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  4959  005420  22DA               	addwfc	fsr2h,f,c
  4960  005422  50DF               	movf	indf2,w,c
  4961  005424  6E20               	movwf	??_Timer2_Init^0,c
  4962  005426  4620               	rlncf	??_Timer2_Init^0,f,c
  4963  005428  4620               	rlncf	??_Timer2_Init^0,f,c
  4964  00542A  4620               	rlncf	??_Timer2_Init^0,f,c
  4965  00542C  50CA               	movf	202,w,c	;volatile
  4966  00542E  1820               	xorwf	??_Timer2_Init^0,w,c
  4967  005430  0B87               	andlw	-121
  4968  005432  1820               	xorwf	??_Timer2_Init^0,w,c
  4969  005434  6ECA               	movwf	202,c	;volatile
  4970  005436                     
  4971                           ;MCAL/TIMER2/mcal_timer2.c: 27:     TMR2 = _timer2->timer2_preload_value;
  4972  005436  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  4973  00543A  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  4974  00543E  50DF               	movf	indf2,w,c
  4975  005440  6ECC               	movwf	204,c	;volatile
  4976  005442                     
  4977                           ;MCAL/TIMER2/mcal_timer2.c: 28:     Timer2_PreLoaded_Value_Store = _timer2->timer2_prelo
      +                          ad_value;
  4978  005442  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  4979  005446  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  4980  00544A  50DF               	movf	indf2,w,c
  4981  00544C  6E39               	movwf	_Timer2_PreLoaded_Value_Store^0,c
  4982  00544E                     
  4983                           ;MCAL/TIMER2/mcal_timer2.c: 53:     (T2CONbits.TMR2ON=1);
  4984  00544E  84CA               	bsf	202,2,c	;volatile
  4985  005450                     l1634:
  4986  005450  0012               	return		;funcret
  4987  005452                     __end_of_Timer2_Init:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _CCP_Interrupt_Config *****************
  4991 ;; Defined at:
  4992 ;;		line 287 in file "MCAL/CCP/hal_ccp.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  4995 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		None
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 8
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_CCP_Init
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text23
  5022  005D44                     __ptext23:
  5023                           	callstack 0
  5024  005D44                     _CCP_Interrupt_Config:
  5025                           	callstack 19
  5026  005D44  0012               	return		;funcret
  5027  005D46                     __end_of_CCP_Interrupt_Config:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _CCP_Compare_Mode_Config *****************
  5031 ;; Defined at:
  5032 ;;		line 406 in file "MCAL/CCP/hal_ccp.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  5035 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  ret             1   36[COMRAM] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      unsigned char 
  5040 ;; Registers used:
  5041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;Total ram usage:        5 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 9
  5054 ;; This function calls:
  5055 ;;		_CCP_Mode_Timer_Select
  5056 ;; This function is called by:
  5057 ;;		_CCP_Init
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text24
  5062  002F3E                     __ptext24:
  5063                           	callstack 0
  5064  002F3E                     _CCP_Compare_Mode_Config:
  5065                           	callstack 18
  5066  002F3E                     
  5067                           ;MCAL/CCP/hal_ccp.c: 407:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  5068  002F3E  0E01               	movlw	1
  5069  002F40  6E25               	movwf	CCP_Compare_Mode_Config@ret^0,c
  5070  002F42                     
  5071                           ;MCAL/CCP/hal_ccp.c: 409:     if(CCP1_INST == _ccp_obj->ccp_inst){
  5072  002F42  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  5073  002F46  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  5074  002F4A  50DF               	movf	indf2,w,c
  5075  002F4C  A4D8               	btfss	status,2,c
  5076  002F4E  EFAB  F017         	goto	u11511
  5077  002F52  EFAD  F017         	goto	u11510
  5078  002F56                     u11511:
  5079  002F56  EFF8  F017         	goto	l11223
  5080  002F5A                     u11510:
  5081  002F5A  EFD1  F017         	goto	l11221
  5082  002F5E                     l11209:
  5083                           
  5084                           ;MCAL/CCP/hal_ccp.c: 413:                 (CCP1CONbits.CCP1M = ((uint8)0x08));
  5085  002F5E  50BD               	movf	189,w,c	;volatile
  5086  002F60  0BF0               	andlw	-16
  5087  002F62  0908               	iorlw	8
  5088  002F64  6EBD               	movwf	189,c	;volatile
  5089                           
  5090                           ;MCAL/CCP/hal_ccp.c: 414:                 break;
  5091  002F66  EF4B  F018         	goto	l11241
  5092  002F6A                     l11211:
  5093                           
  5094                           ;MCAL/CCP/hal_ccp.c: 416:                 (CCP1CONbits.CCP1M = ((uint8)0x09));
  5095  002F6A  50BD               	movf	189,w,c	;volatile
  5096  002F6C  0BF0               	andlw	-16
  5097  002F6E  0909               	iorlw	9
  5098  002F70  6EBD               	movwf	189,c	;volatile
  5099                           
  5100                           ;MCAL/CCP/hal_ccp.c: 417:                 break;
  5101  002F72  EF4B  F018         	goto	l11241
  5102  002F76                     l11213:
  5103                           
  5104                           ;MCAL/CCP/hal_ccp.c: 419:                 (CCP1CONbits.CCP1M = ((uint8)0x02));
  5105  002F76  50BD               	movf	189,w,c	;volatile
  5106  002F78  0BF0               	andlw	-16
  5107  002F7A  0902               	iorlw	2
  5108  002F7C  6EBD               	movwf	189,c	;volatile
  5109                           
  5110                           ;MCAL/CCP/hal_ccp.c: 420:                 break;
  5111  002F7E  EF4B  F018         	goto	l11241
  5112  002F82                     l11215:
  5113                           
  5114                           ;MCAL/CCP/hal_ccp.c: 422:                 (CCP1CONbits.CCP1M = ((uint8)0x0A));
  5115  002F82  50BD               	movf	189,w,c	;volatile
  5116  002F84  0BF0               	andlw	-16
  5117  002F86  090A               	iorlw	10
  5118  002F88  6EBD               	movwf	189,c	;volatile
  5119                           
  5120                           ;MCAL/CCP/hal_ccp.c: 423:                 break;
  5121  002F8A  EF4B  F018         	goto	l11241
  5122  002F8E                     l11217:
  5123                           
  5124                           ;MCAL/CCP/hal_ccp.c: 425:                 (CCP1CONbits.CCP1M = ((uint8)0x0B));
  5125  002F8E  50BD               	movf	189,w,c	;volatile
  5126  002F90  0BF0               	andlw	-16
  5127  002F92  090B               	iorlw	11
  5128  002F94  6EBD               	movwf	189,c	;volatile
  5129                           
  5130                           ;MCAL/CCP/hal_ccp.c: 426:                 break;
  5131  002F96  EF4B  F018         	goto	l11241
  5132  002F9A                     l11219:
  5133  002F9A  0E00               	movlw	0
  5134  002F9C  6E25               	movwf	CCP_Compare_Mode_Config@ret^0,c
  5135                           
  5136                           ;MCAL/CCP/hal_ccp.c: 428:         }
  5137  002F9E  EF4B  F018         	goto	l11241
  5138  002FA2                     l11221:
  5139  002FA2  EE20 F002          	lfsr	2,2
  5140  002FA6  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  5141  002FA8  26D9               	addwf	fsr2l,f,c
  5142  002FAA  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  5143  002FAC  22DA               	addwfc	fsr2h,f,c
  5144  002FAE  50DF               	movf	indf2,w,c
  5145  002FB0  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  5146  002FB2  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  5147                           
  5148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5149                           ; Switch size 1, requested type "simple"
  5150                           ; Number of cases is 1, Range of values is 0 to 0
  5151                           ; switch strategies available:
  5152                           ; Name         Instructions Cycles
  5153                           ; simple_byte            4     3 (average)
  5154                           ;	Chosen strategy is simple_byte
  5155  002FB4  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  5156  002FB6  0A00               	xorlw	0	; case 0
  5157  002FB8  B4D8               	btfsc	status,2,c
  5158  002FBA  EFE1  F017         	goto	l13485
  5159  002FBE  EFCD  F017         	goto	l11219
  5160  002FC2                     l13485:
  5161                           
  5162                           ; Switch size 1, requested type "simple"
  5163                           ; Number of cases is 5, Range of values is 2 to 11
  5164                           ; switch strategies available:
  5165                           ; Name         Instructions Cycles
  5166                           ; simple_byte           16     9 (average)
  5167                           ;	Chosen strategy is simple_byte
  5168  002FC2  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  5169  002FC4  0A02               	xorlw	2	; case 2
  5170  002FC6  B4D8               	btfsc	status,2,c
  5171  002FC8  EFBB  F017         	goto	l11213
  5172  002FCC  0A0A               	xorlw	10	; case 8
  5173  002FCE  B4D8               	btfsc	status,2,c
  5174  002FD0  EFAF  F017         	goto	l11209
  5175  002FD4  0A01               	xorlw	1	; case 9
  5176  002FD6  B4D8               	btfsc	status,2,c
  5177  002FD8  EFB5  F017         	goto	l11211
  5178  002FDC  0A03               	xorlw	3	; case 10
  5179  002FDE  B4D8               	btfsc	status,2,c
  5180  002FE0  EFC1  F017         	goto	l11215
  5181  002FE4  0A01               	xorlw	1	; case 11
  5182  002FE6  B4D8               	btfsc	status,2,c
  5183  002FE8  EFC7  F017         	goto	l11217
  5184  002FEC  EFCD  F017         	goto	l11219
  5185  002FF0                     l11223:
  5186  002FF0  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  5187  002FF4  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  5188  002FF8  04DE               	decf	postinc2,w,c
  5189  002FFA  A4D8               	btfss	status,2,c
  5190  002FFC  EF02  F018         	goto	u11521
  5191  003000  EF04  F018         	goto	u11520
  5192  003004                     u11521:
  5193  003004  EF4B  F018         	goto	l11241
  5194  003008                     u11520:
  5195  003008  EF24  F018         	goto	l11239
  5196  00300C                     l11227:
  5197                           
  5198                           ;MCAL/CCP/hal_ccp.c: 434:                 (CCP2CONbits.CCP2M = ((uint8)0x08));
  5199  00300C  50BA               	movf	186,w,c	;volatile
  5200  00300E  0BF0               	andlw	-16
  5201  003010  0908               	iorlw	8
  5202  003012  6EBA               	movwf	186,c	;volatile
  5203                           
  5204                           ;MCAL/CCP/hal_ccp.c: 435:                 break;
  5205  003014  EF4B  F018         	goto	l11241
  5206  003018                     l11229:
  5207                           
  5208                           ;MCAL/CCP/hal_ccp.c: 437:                 (CCP2CONbits.CCP2M = ((uint8)0x09));
  5209  003018  50BA               	movf	186,w,c	;volatile
  5210  00301A  0BF0               	andlw	-16
  5211  00301C  0909               	iorlw	9
  5212  00301E  6EBA               	movwf	186,c	;volatile
  5213                           
  5214                           ;MCAL/CCP/hal_ccp.c: 438:                 break;
  5215  003020  EF4B  F018         	goto	l11241
  5216  003024                     l11231:
  5217                           
  5218                           ;MCAL/CCP/hal_ccp.c: 440:                 (CCP2CONbits.CCP2M = ((uint8)0x02));
  5219  003024  50BA               	movf	186,w,c	;volatile
  5220  003026  0BF0               	andlw	-16
  5221  003028  0902               	iorlw	2
  5222  00302A  6EBA               	movwf	186,c	;volatile
  5223                           
  5224                           ;MCAL/CCP/hal_ccp.c: 441:                 break;
  5225  00302C  EF4B  F018         	goto	l11241
  5226  003030                     l11233:
  5227                           
  5228                           ;MCAL/CCP/hal_ccp.c: 443:                 (CCP2CONbits.CCP2M = ((uint8)0x0A));
  5229  003030  50BA               	movf	186,w,c	;volatile
  5230  003032  0BF0               	andlw	-16
  5231  003034  090A               	iorlw	10
  5232  003036  6EBA               	movwf	186,c	;volatile
  5233                           
  5234                           ;MCAL/CCP/hal_ccp.c: 444:                 break;
  5235  003038  EF4B  F018         	goto	l11241
  5236  00303C                     l11235:
  5237                           
  5238                           ;MCAL/CCP/hal_ccp.c: 446:                 (CCP2CONbits.CCP2M = ((uint8)0x0B));
  5239  00303C  50BA               	movf	186,w,c	;volatile
  5240  00303E  0BF0               	andlw	-16
  5241  003040  090B               	iorlw	11
  5242  003042  6EBA               	movwf	186,c	;volatile
  5243                           
  5244                           ;MCAL/CCP/hal_ccp.c: 447:                 break;
  5245  003044  EF4B  F018         	goto	l11241
  5246  003048                     l11239:
  5247  003048  EE20 F002          	lfsr	2,2
  5248  00304C  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  5249  00304E  26D9               	addwf	fsr2l,f,c
  5250  003050  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  5251  003052  22DA               	addwfc	fsr2h,f,c
  5252  003054  50DF               	movf	indf2,w,c
  5253  003056  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  5254  003058  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  5255                           
  5256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5257                           ; Switch size 1, requested type "simple"
  5258                           ; Number of cases is 1, Range of values is 0 to 0
  5259                           ; switch strategies available:
  5260                           ; Name         Instructions Cycles
  5261                           ; simple_byte            4     3 (average)
  5262                           ;	Chosen strategy is simple_byte
  5263  00305A  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  5264  00305C  0A00               	xorlw	0	; case 0
  5265  00305E  B4D8               	btfsc	status,2,c
  5266  003060  EF34  F018         	goto	l13487
  5267  003064  EFCD  F017         	goto	l11219
  5268  003068                     l13487:
  5269                           
  5270                           ; Switch size 1, requested type "simple"
  5271                           ; Number of cases is 5, Range of values is 2 to 11
  5272                           ; switch strategies available:
  5273                           ; Name         Instructions Cycles
  5274                           ; simple_byte           16     9 (average)
  5275                           ;	Chosen strategy is simple_byte
  5276  003068  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  5277  00306A  0A02               	xorlw	2	; case 2
  5278  00306C  B4D8               	btfsc	status,2,c
  5279  00306E  EF12  F018         	goto	l11231
  5280  003072  0A0A               	xorlw	10	; case 8
  5281  003074  B4D8               	btfsc	status,2,c
  5282  003076  EF06  F018         	goto	l11227
  5283  00307A  0A01               	xorlw	1	; case 9
  5284  00307C  B4D8               	btfsc	status,2,c
  5285  00307E  EF0C  F018         	goto	l11229
  5286  003082  0A03               	xorlw	3	; case 10
  5287  003084  B4D8               	btfsc	status,2,c
  5288  003086  EF18  F018         	goto	l11233
  5289  00308A  0A01               	xorlw	1	; case 11
  5290  00308C  B4D8               	btfsc	status,2,c
  5291  00308E  EF1E  F018         	goto	l11235
  5292  003092  EFCD  F017         	goto	l11219
  5293  003096                     l11241:
  5294                           
  5295                           ;MCAL/CCP/hal_ccp.c: 453:     CCP_Mode_Timer_Select(_ccp_obj);
  5296  003096  C021  F01E         	movff	CCP_Compare_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  5297  00309A  C022  F01F         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  5298  00309E  EC4A  F029         	call	_CCP_Mode_Timer_Select	;wreg free
  5299  0030A2                     
  5300                           ;MCAL/CCP/hal_ccp.c: 455:     return ret;
  5301  0030A2  5025               	movf	CCP_Compare_Mode_Config@ret^0,w,c
  5302  0030A4  0012               	return		;funcret
  5303  0030A6                     __end_of_CCP_Compare_Mode_Config:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _CCP_Capture_Mode_Config *****************
  5307 ;; Defined at:
  5308 ;;		line 359 in file "MCAL/CCP/hal_ccp.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  5311 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  ret             1   36[COMRAM] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      unsigned char 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;Total ram usage:        5 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 9
  5330 ;; This function calls:
  5331 ;;		_CCP_Mode_Timer_Select
  5332 ;; This function is called by:
  5333 ;;		_CCP_Init
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text25
  5338  003352                     __ptext25:
  5339                           	callstack 0
  5340  003352                     _CCP_Capture_Mode_Config:
  5341                           	callstack 18
  5342  003352                     
  5343                           ;MCAL/CCP/hal_ccp.c: 360:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  5344  003352  0E01               	movlw	1
  5345  003354  6E25               	movwf	CCP_Capture_Mode_Config@ret^0,c
  5346  003356                     
  5347                           ;MCAL/CCP/hal_ccp.c: 362:     if(CCP1_INST == _ccp_obj->ccp_inst){
  5348  003356  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  5349  00335A  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  5350  00335E  50DF               	movf	indf2,w,c
  5351  003360  A4D8               	btfss	status,2,c
  5352  003362  EFB5  F019         	goto	u11491
  5353  003366  EFB7  F019         	goto	u11490
  5354  00336A                     u11491:
  5355  00336A  EFF8  F019         	goto	l11173
  5356  00336E                     u11490:
  5357  00336E  EFD5  F019         	goto	l11171
  5358  003372                     l11161:
  5359                           
  5360                           ;MCAL/CCP/hal_ccp.c: 366:                 (CCP1CONbits.CCP1M = ((uint8)0x04));
  5361  003372  50BD               	movf	189,w,c	;volatile
  5362  003374  0BF0               	andlw	-16
  5363  003376  0904               	iorlw	4
  5364  003378  6EBD               	movwf	189,c	;volatile
  5365                           
  5366                           ;MCAL/CCP/hal_ccp.c: 367:                 break;
  5367  00337A  EF41  F01A         	goto	l11189
  5368  00337E                     l11163:
  5369                           
  5370                           ;MCAL/CCP/hal_ccp.c: 369:                 (CCP1CONbits.CCP1M = ((uint8)0x05));
  5371  00337E  50BD               	movf	189,w,c	;volatile
  5372  003380  0BF0               	andlw	-16
  5373  003382  0905               	iorlw	5
  5374  003384  6EBD               	movwf	189,c	;volatile
  5375                           
  5376                           ;MCAL/CCP/hal_ccp.c: 370:                 break;
  5377  003386  EF41  F01A         	goto	l11189
  5378  00338A                     l11165:
  5379                           
  5380                           ;MCAL/CCP/hal_ccp.c: 372:                 (CCP1CONbits.CCP1M = ((uint8)0x06));
  5381  00338A  50BD               	movf	189,w,c	;volatile
  5382  00338C  0BF0               	andlw	-16
  5383  00338E  0906               	iorlw	6
  5384  003390  6EBD               	movwf	189,c	;volatile
  5385                           
  5386                           ;MCAL/CCP/hal_ccp.c: 373:                 break;
  5387  003392  EF41  F01A         	goto	l11189
  5388  003396                     l11167:
  5389                           
  5390                           ;MCAL/CCP/hal_ccp.c: 375:                 (CCP1CONbits.CCP1M = ((uint8)0x07));
  5391  003396  50BD               	movf	189,w,c	;volatile
  5392  003398  0BF0               	andlw	-16
  5393  00339A  0907               	iorlw	7
  5394  00339C  6EBD               	movwf	189,c	;volatile
  5395                           
  5396                           ;MCAL/CCP/hal_ccp.c: 376:                 break;
  5397  00339E  EF41  F01A         	goto	l11189
  5398  0033A2                     l11169:
  5399  0033A2  0E00               	movlw	0
  5400  0033A4  6E25               	movwf	CCP_Capture_Mode_Config@ret^0,c
  5401                           
  5402                           ;MCAL/CCP/hal_ccp.c: 378:         }
  5403  0033A6  EF41  F01A         	goto	l11189
  5404  0033AA                     l11171:
  5405  0033AA  EE20 F002          	lfsr	2,2
  5406  0033AE  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  5407  0033B0  26D9               	addwf	fsr2l,f,c
  5408  0033B2  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  5409  0033B4  22DA               	addwfc	fsr2h,f,c
  5410  0033B6  50DF               	movf	indf2,w,c
  5411  0033B8  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  5412  0033BA  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  5413                           
  5414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5415                           ; Switch size 1, requested type "simple"
  5416                           ; Number of cases is 1, Range of values is 0 to 0
  5417                           ; switch strategies available:
  5418                           ; Name         Instructions Cycles
  5419                           ; simple_byte            4     3 (average)
  5420                           ;	Chosen strategy is simple_byte
  5421  0033BC  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  5422  0033BE  0A00               	xorlw	0	; case 0
  5423  0033C0  B4D8               	btfsc	status,2,c
  5424  0033C2  EFE5  F019         	goto	l13489
  5425  0033C6  EFD1  F019         	goto	l11169
  5426  0033CA                     l13489:
  5427                           
  5428                           ; Switch size 1, requested type "simple"
  5429                           ; Number of cases is 4, Range of values is 4 to 7
  5430                           ; switch strategies available:
  5431                           ; Name         Instructions Cycles
  5432                           ; simple_byte           13     7 (average)
  5433                           ;	Chosen strategy is simple_byte
  5434  0033CA  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  5435  0033CC  0A04               	xorlw	4	; case 4
  5436  0033CE  B4D8               	btfsc	status,2,c
  5437  0033D0  EFB9  F019         	goto	l11161
  5438  0033D4  0A01               	xorlw	1	; case 5
  5439  0033D6  B4D8               	btfsc	status,2,c
  5440  0033D8  EFBF  F019         	goto	l11163
  5441  0033DC  0A03               	xorlw	3	; case 6
  5442  0033DE  B4D8               	btfsc	status,2,c
  5443  0033E0  EFC5  F019         	goto	l11165
  5444  0033E4  0A01               	xorlw	1	; case 7
  5445  0033E6  B4D8               	btfsc	status,2,c
  5446  0033E8  EFCB  F019         	goto	l11167
  5447  0033EC  EFD1  F019         	goto	l11169
  5448  0033F0                     l11173:
  5449  0033F0  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  5450  0033F4  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  5451  0033F8  04DE               	decf	postinc2,w,c
  5452  0033FA  A4D8               	btfss	status,2,c
  5453  0033FC  EF02  F01A         	goto	u11501
  5454  003400  EF04  F01A         	goto	u11500
  5455  003404                     u11501:
  5456  003404  EF41  F01A         	goto	l11189
  5457  003408                     u11500:
  5458  003408  EF1E  F01A         	goto	l11187
  5459  00340C                     l11177:
  5460                           
  5461                           ;MCAL/CCP/hal_ccp.c: 384:                 (CCP2CONbits.CCP2M = ((uint8)0x04));
  5462  00340C  50BA               	movf	186,w,c	;volatile
  5463  00340E  0BF0               	andlw	-16
  5464  003410  0904               	iorlw	4
  5465  003412  6EBA               	movwf	186,c	;volatile
  5466                           
  5467                           ;MCAL/CCP/hal_ccp.c: 385:             break;
  5468  003414  EF41  F01A         	goto	l11189
  5469  003418                     l11179:
  5470                           
  5471                           ;MCAL/CCP/hal_ccp.c: 387:                 (CCP2CONbits.CCP2M = ((uint8)0x05));
  5472  003418  50BA               	movf	186,w,c	;volatile
  5473  00341A  0BF0               	andlw	-16
  5474  00341C  0905               	iorlw	5
  5475  00341E  6EBA               	movwf	186,c	;volatile
  5476                           
  5477                           ;MCAL/CCP/hal_ccp.c: 388:                 break;
  5478  003420  EF41  F01A         	goto	l11189
  5479  003424                     l11181:
  5480                           
  5481                           ;MCAL/CCP/hal_ccp.c: 390:                 (CCP2CONbits.CCP2M = ((uint8)0x06));
  5482  003424  50BA               	movf	186,w,c	;volatile
  5483  003426  0BF0               	andlw	-16
  5484  003428  0906               	iorlw	6
  5485  00342A  6EBA               	movwf	186,c	;volatile
  5486                           
  5487                           ;MCAL/CCP/hal_ccp.c: 391:                 break;
  5488  00342C  EF41  F01A         	goto	l11189
  5489  003430                     l11183:
  5490                           
  5491                           ;MCAL/CCP/hal_ccp.c: 393:                 (CCP2CONbits.CCP2M = ((uint8)0x07));
  5492  003430  50BA               	movf	186,w,c	;volatile
  5493  003432  0BF0               	andlw	-16
  5494  003434  0907               	iorlw	7
  5495  003436  6EBA               	movwf	186,c	;volatile
  5496                           
  5497                           ;MCAL/CCP/hal_ccp.c: 394:                 break;
  5498  003438  EF41  F01A         	goto	l11189
  5499  00343C                     l11187:
  5500  00343C  EE20 F002          	lfsr	2,2
  5501  003440  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  5502  003442  26D9               	addwf	fsr2l,f,c
  5503  003444  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  5504  003446  22DA               	addwfc	fsr2h,f,c
  5505  003448  50DF               	movf	indf2,w,c
  5506  00344A  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  5507  00344C  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  5508                           
  5509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5510                           ; Switch size 1, requested type "simple"
  5511                           ; Number of cases is 1, Range of values is 0 to 0
  5512                           ; switch strategies available:
  5513                           ; Name         Instructions Cycles
  5514                           ; simple_byte            4     3 (average)
  5515                           ;	Chosen strategy is simple_byte
  5516  00344E  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  5517  003450  0A00               	xorlw	0	; case 0
  5518  003452  B4D8               	btfsc	status,2,c
  5519  003454  EF2E  F01A         	goto	l13491
  5520  003458  EFD1  F019         	goto	l11169
  5521  00345C                     l13491:
  5522                           
  5523                           ; Switch size 1, requested type "simple"
  5524                           ; Number of cases is 4, Range of values is 4 to 7
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; simple_byte           13     7 (average)
  5528                           ;	Chosen strategy is simple_byte
  5529  00345C  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  5530  00345E  0A04               	xorlw	4	; case 4
  5531  003460  B4D8               	btfsc	status,2,c
  5532  003462  EF06  F01A         	goto	l11177
  5533  003466  0A01               	xorlw	1	; case 5
  5534  003468  B4D8               	btfsc	status,2,c
  5535  00346A  EF0C  F01A         	goto	l11179
  5536  00346E  0A03               	xorlw	3	; case 6
  5537  003470  B4D8               	btfsc	status,2,c
  5538  003472  EF12  F01A         	goto	l11181
  5539  003476  0A01               	xorlw	1	; case 7
  5540  003478  B4D8               	btfsc	status,2,c
  5541  00347A  EF18  F01A         	goto	l11183
  5542  00347E  EFD1  F019         	goto	l11169
  5543  003482                     l11189:
  5544                           
  5545                           ;MCAL/CCP/hal_ccp.c: 401:     CCP_Mode_Timer_Select(_ccp_obj);
  5546  003482  C021  F01E         	movff	CCP_Capture_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  5547  003486  C022  F01F         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  5548  00348A  EC4A  F029         	call	_CCP_Mode_Timer_Select	;wreg free
  5549  00348E                     
  5550                           ;MCAL/CCP/hal_ccp.c: 403:     return ret;
  5551  00348E  5025               	movf	CCP_Capture_Mode_Config@ret^0,w,c
  5552  003490  0012               	return		;funcret
  5553  003492                     __end_of_CCP_Capture_Mode_Config:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _CCP_Mode_Timer_Select *****************
  5557 ;; Defined at:
  5558 ;;		line 339 in file "MCAL/CCP/hal_ccp.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  5561 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        3 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 8
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_CCP_Capture_Mode_Config
  5584 ;;		_CCP_Compare_Mode_Config
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text26
  5589  005294                     __ptext26:
  5590                           	callstack 0
  5591  005294                     _CCP_Mode_Timer_Select:
  5592                           	callstack 18
  5593  005294                     
  5594                           ;MCAL/CCP/hal_ccp.c: 340:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
  5595  005294  EE20 F004          	lfsr	2,4
  5596  005298  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  5597  00529A  26D9               	addwf	fsr2l,f,c
  5598  00529C  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  5599  00529E  22DA               	addwfc	fsr2h,f,c
  5600  0052A0  50DF               	movf	indf2,w,c
  5601  0052A2  A4D8               	btfss	status,2,c
  5602  0052A4  EF56  F029         	goto	u11341
  5603  0052A8  EF58  F029         	goto	u11340
  5604  0052AC                     u11341:
  5605  0052AC  EF5C  F029         	goto	l11025
  5606  0052B0                     u11340:
  5607  0052B0                     
  5608                           ;MCAL/CCP/hal_ccp.c: 342:         T3CONbits.T3CCP1 = 0;
  5609  0052B0  96B1               	bcf	177,3,c	;volatile
  5610                           
  5611                           ;MCAL/CCP/hal_ccp.c: 343:         T3CONbits.T3CCP2 = 1;
  5612  0052B2  8CB1               	bsf	177,6,c	;volatile
  5613                           
  5614                           ;MCAL/CCP/hal_ccp.c: 344:     }
  5615  0052B4  EF81  F029         	goto	l575
  5616  0052B8                     l11025:
  5617  0052B8  EE20 F004          	lfsr	2,4
  5618  0052BC  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  5619  0052BE  26D9               	addwf	fsr2l,f,c
  5620  0052C0  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  5621  0052C2  22DA               	addwfc	fsr2h,f,c
  5622  0052C4  04DE               	decf	postinc2,w,c
  5623  0052C6  A4D8               	btfss	status,2,c
  5624  0052C8  EF68  F029         	goto	u11351
  5625  0052CC  EF6A  F029         	goto	u11350
  5626  0052D0                     u11351:
  5627  0052D0  EF6E  F029         	goto	l11029
  5628  0052D4                     u11350:
  5629  0052D4                     
  5630                           ;MCAL/CCP/hal_ccp.c: 348:         T3CONbits.T3CCP1 = 1;
  5631  0052D4  86B1               	bsf	177,3,c	;volatile
  5632                           
  5633                           ;MCAL/CCP/hal_ccp.c: 349:         T3CONbits.T3CCP2 = 0;
  5634  0052D6  9CB1               	bcf	177,6,c	;volatile
  5635                           
  5636                           ;MCAL/CCP/hal_ccp.c: 350:     }
  5637  0052D8  EF81  F029         	goto	l575
  5638  0052DC                     l11029:
  5639  0052DC  EE20 F004          	lfsr	2,4
  5640  0052E0  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  5641  0052E2  26D9               	addwf	fsr2l,f,c
  5642  0052E4  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  5643  0052E6  22DA               	addwfc	fsr2h,f,c
  5644  0052E8  0E02               	movlw	2
  5645  0052EA  18DE               	xorwf	postinc2,w,c
  5646  0052EC  A4D8               	btfss	status,2,c
  5647  0052EE  EF7B  F029         	goto	u11361
  5648  0052F2  EF7D  F029         	goto	u11360
  5649  0052F6                     u11361:
  5650  0052F6  EF81  F029         	goto	l572
  5651  0052FA                     u11360:
  5652  0052FA                     
  5653                           ;MCAL/CCP/hal_ccp.c: 353:         T3CONbits.T3CCP1 = 0;
  5654  0052FA  96B1               	bcf	177,3,c	;volatile
  5655                           
  5656                           ;MCAL/CCP/hal_ccp.c: 354:         T3CONbits.T3CCP2 = 0;
  5657  0052FC  9CB1               	bcf	177,6,c	;volatile
  5658                           
  5659                           ;MCAL/CCP/hal_ccp.c: 355:     }
  5660  0052FE  EF81  F029         	goto	l575
  5661  005302                     l572:
  5662  005302                     l575:
  5663  005302  0012               	return		;funcret
  5664  005304                     __end_of_CCP_Mode_Timer_Select:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _Ecu_Stepper_Init *****************
  5668 ;; Defined at:
  5669 ;;		line 9 in file "ECU/stepper/ecu_stepper.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  stepper         2    9[BANK0 ] PTR struct .
  5672 ;;		 -> stepper_base(2), 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      unsigned char 
  5677 ;; Registers used:
  5678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        2 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; Hardware stack levels required when called: 10
  5691 ;; This function calls:
  5692 ;;		_GPIO_Pin_Direction_Initialize
  5693 ;;		_GPIO_Pin_Initialize
  5694 ;;		_GPIO_Pin_Write_Logic
  5695 ;; This function is called by:
  5696 ;;		_application_intialize
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text27
  5701  00519E                     __ptext27:
  5702                           	callstack 0
  5703  00519E                     _Ecu_Stepper_Init:
  5704                           	callstack 19
  5705  00519E                     
  5706                           ;ECU/stepper/ecu_stepper.c: 9: Std_ReturnType Ecu_Stepper_Init(stepper_config_st *steppe
      +                          r);ECU/stepper/ecu_stepper.c: 10: {;ECU/stepper/ecu_stepper.c: 11:     if(((void*)0) == 
      +                          stepper)
  5707  00519E  0100               	movlb	0	; () banked
  5708  0051A0  5169               	movf	Ecu_Stepper_Init@stepper& (0+255),w,b
  5709  0051A2  116A               	iorwf	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  5710  0051A4  A4D8               	btfss	status,2,c
  5711  0051A6  EFD7  F028         	goto	u12771
  5712  0051AA  EFD9  F028         	goto	u12770
  5713  0051AE                     u12771:
  5714  0051AE  EFDB  F028         	goto	l12027
  5715  0051B2                     u12770:
  5716  0051B2  EF0C  F029         	goto	l325
  5717  0051B6                     l12027:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;ECU/stepper/ecu_stepper.c: 16:     {;ECU/stepper/ecu_stepper.c: 17:         GPIO_Pin_In
      +                          itialize(&(stepper->step_pin));
  5721  0051B6  C069  F066         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Initialize@_pin_config
  5722  0051BA  C06A  F067         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Initialize@_pin_config+1
  5723  0051BE  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  5724                           
  5725                           ;ECU/stepper/ecu_stepper.c: 18:         GPIO_Pin_Initialize(&(stepper->dir_pin));
  5726  0051C2  0E01               	movlw	1
  5727  0051C4  0100               	movlb	0	; () banked
  5728  0051C6  2569               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  5729  0051C8  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  5730  0051CA  0E00               	movlw	0
  5731  0051CC  216A               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  5732  0051CE  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  5733  0051D0  EC81  F02C         	call	_GPIO_Pin_Initialize	;wreg free
  5734                           
  5735                           ;ECU/stepper/ecu_stepper.c: 19:         GPIO_Pin_Direction_Initialize(&(stepper->dir_pin
      +                          ));
  5736  0051D4  0E01               	movlw	1
  5737  0051D6  0100               	movlb	0	; () banked
  5738  0051D8  2569               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  5739  0051DA  6E1E               	movwf	GPIO_Pin_Direction_Initialize@_pin_config^0,c
  5740  0051DC  0E00               	movlw	0
  5741  0051DE  216A               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  5742  0051E0  6E1F               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,c
  5743  0051E2  EC07  F019         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  5744                           
  5745                           ;ECU/stepper/ecu_stepper.c: 20:         GPIO_Pin_Direction_Initialize(&(stepper->step_pi
      +                          n));
  5746  0051E6  C069  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Direction_Initialize@_pin_config
  5747  0051EA  C06A  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  5748  0051EE  EC07  F019         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  5749                           
  5750                           ;ECU/stepper/ecu_stepper.c: 21:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , GPIO
      +                          _LOW);
  5751  0051F2  C069  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Write_Logic@_pin_config
  5752  0051F6  C06A  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  5753  0051FA  0E00               	movlw	0
  5754  0051FC  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  5755  0051FE  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  5756                           
  5757                           ;ECU/stepper/ecu_stepper.c: 22:         GPIO_Pin_Write_Logic(&(stepper->dir_pin) , GPIO_
      +                          LOW);
  5758  005202  0E01               	movlw	1
  5759  005204  0100               	movlb	0	; () banked
  5760  005206  2569               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  5761  005208  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  5762  00520A  0E00               	movlw	0
  5763  00520C  216A               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  5764  00520E  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  5765  005210  0E00               	movlw	0
  5766  005212  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  5767  005214  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  5768  005218                     l325:
  5769  005218  0012               	return		;funcret
  5770  00521A                     __end_of_Ecu_Stepper_Init:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _GPIO_Pin_Initialize *****************
  5774 ;; Defined at:
  5775 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  _pin_config     2    6[BANK0 ] PTR const struct .
  5778 ;;		 -> selector(1), driller_PIN(1), TEST_PIN(1), ultrasonic(2), 
  5779 ;;		 -> stepper_base.dir_pin(1), stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), 
  5780 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  ERRORSTATUS     1    8[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      unsigned char 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;Total ram usage:        3 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 9
  5799 ;; This function calls:
  5800 ;;		_GPIO_Pin_Direction_Initialize
  5801 ;;		_GPIO_Pin_Write_Logic
  5802 ;; This function is called by:
  5803 ;;		_ECU_DC_Motor_Init
  5804 ;;		_Ecu_Stepper_Init
  5805 ;;		_CCP_Init
  5806 ;;		_Ultra_Sonic_Init
  5807 ;;		_application_intialize
  5808 ;;		_IR_Sensor_Init
  5809 ;;		_lcd_4bit_initialize
  5810 ;;		_lcd_8bit_initialize
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text28
  5815  005902                     __ptext28:
  5816                           	callstack 0
  5817  005902                     _GPIO_Pin_Initialize:
  5818                           	callstack 19
  5819  005902                     
  5820                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  5821  005902  0100               	movlb	0	; () banked
  5822  005904  5166               	movf	GPIO_Pin_Initialize@_pin_config& (0+255),w,b
  5823  005906  1167               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),w,b
  5824  005908  A4D8               	btfss	status,2,c
  5825  00590A  EF89  F02C         	goto	u11391
  5826  00590E  EF8B  F02C         	goto	u11390
  5827  005912                     u11391:
  5828  005912  EF8F  F02C         	goto	l11059
  5829  005916                     u11390:
  5830  005916                     
  5831                           ; BSR set to: 0
  5832                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  5833  005916  0E00               	movlw	0
  5834  005918  6F68               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  5835                           
  5836                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  5837  00591A  EFA7  F02C         	goto	l11061
  5838  00591E                     l11059:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  5842  00591E  C066  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  5843  005922  C067  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  5844  005926  EC07  F019         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  5845  00592A  0100               	movlb	0	; () banked
  5846  00592C  6F68               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  5847                           
  5848                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  5849  00592E  C066  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  5850  005932  C067  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  5851  005936  C066  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  5852  00593A  C067  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  5853  00593E  0E00               	movlw	0
  5854  005940  BEDF               	btfsc	indf2,7,c
  5855  005942  0E01               	movlw	1
  5856  005944  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  5857  005946  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  5858  00594A  0100               	movlb	0	; () banked
  5859  00594C  6F68               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  5860  00594E                     l11061:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  5864  00594E  5168               	movf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),w,b
  5865  005950                     
  5866                           ; BSR set to: 0
  5867  005950  0012               	return		;funcret
  5868  005952                     __end_of_GPIO_Pin_Initialize:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  5872 ;; Defined at:
  5873 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  _pin_config     2   29[COMRAM] PTR const struct .
  5876 ;;		 -> selector(1), driller_PIN(1), TEST_PIN(1), ultrasonic(2), 
  5877 ;;		 -> stepper_base.dir_pin(1), stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), 
  5878 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  ERRORSTATUS     1    0[BANK0 ] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      unsigned char 
  5883 ;; Registers used:
  5884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;Total ram usage:        9 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 8
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_Ecu_Stepper_Init
  5901 ;;		_GPIO_Pin_Initialize
  5902 ;;		_interrupt_RBx_pin_init
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text29
  5907  00320E                     __ptext29:
  5908                           	callstack 0
  5909  00320E                     _GPIO_Pin_Direction_Initialize:
  5910                           	callstack 19
  5911  00320E                     
  5912                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  5913  00320E  0E01               	movlw	1
  5914  003210  0100               	movlb	0	; () banked
  5915  003212  6F60               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),b
  5916  003214                     
  5917                           ; BSR set to: 0
  5918                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  5919  003214  501E               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  5920  003216  101F               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  5921  003218  B4D8               	btfsc	status,2,c
  5922  00321A  EF11  F019         	goto	u11271
  5923  00321E  EF13  F019         	goto	u11270
  5924  003222                     u11271:
  5925  003222  EF22  F019         	goto	l10987
  5926  003226                     u11270:
  5927  003226                     
  5928                           ; BSR set to: 0
  5929  003226  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  5930  00322A  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  5931  00322E  50DF               	movf	223,w,c
  5932  003230  0B07               	andlw	7
  5933  003232  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  5934  003234  0E07               	movlw	7
  5935  003236  6420               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
  5936  003238  EF20  F019         	goto	u11281
  5937  00323C  EF22  F019         	goto	u11280
  5938  003240                     u11281:
  5939  003240  EF85  F019         	goto	l10995
  5940  003244                     u11280:
  5941  003244                     l10987:
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  5945  003244  0E00               	movlw	0
  5946  003246  6F60               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),b
  5947                           
  5948                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  5949  003248  EFA6  F019         	goto	l10997
  5950  00324C                     l10989:
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  5954  00324C  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  5955  003250  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  5956  003254  50DF               	movf	223,w,c
  5957  003256  0B07               	andlw	7
  5958  003258  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  5959  00325A  0E01               	movlw	1
  5960  00325C  6E21               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  5961  00325E  2A20               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  5962  003260  EF34  F019         	goto	u11294
  5963  003264                     u11295:
  5964  003264  90D8               	bcf	status,0,c
  5965  003266  3621               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  5966  003268                     u11294:
  5967  003268  2E20               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  5968  00326A  EF32  F019         	goto	u11295
  5969  00326E  5021               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  5970  003270  0AFF               	xorlw	255
  5971  003272  6E22               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  5972  003274  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  5973  003278  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  5974  00327C  30DF               	rrcf	223,w,c
  5975  00327E  32E8               	rrcf	wreg,f,c
  5976  003280  32E8               	rrcf	wreg,f,c
  5977  003282  0B07               	andlw	7
  5978  003284  6E23               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  5979  003286  5023               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  5980  003288  0D02               	mullw	2
  5981  00328A  0E0A               	movlw	low _tris_registers
  5982  00328C  24F3               	addwf	243,w,c
  5983  00328E  6ED9               	movwf	fsr2l,c
  5984  003290  0E01               	movlw	high _tris_registers
  5985  003292  20F4               	addwfc	prodh,w,c
  5986  003294  6EDA               	movwf	fsr2h,c
  5987  003296  CFDE F024          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  5988  00329A  CFDD F025          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  5989  00329E  C024  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  5990  0032A2  C025  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  5991  0032A6  5022               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  5992  0032A8  16DF               	andwf	indf2,f,c
  5993                           
  5994                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  5995  0032AA  EFA6  F019         	goto	l10997
  5996  0032AE                     l10991:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  6000  0032AE  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  6001  0032B2  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  6002  0032B6  50DF               	movf	223,w,c
  6003  0032B8  0B07               	andlw	7
  6004  0032BA  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  6005  0032BC  0E01               	movlw	1
  6006  0032BE  6E21               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  6007  0032C0  2A20               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  6008  0032C2  EF65  F019         	goto	u11304
  6009  0032C6                     u11305:
  6010  0032C6  90D8               	bcf	status,0,c
  6011  0032C8  3621               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  6012  0032CA                     u11304:
  6013  0032CA  2E20               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  6014  0032CC  EF63  F019         	goto	u11305
  6015  0032D0  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  6016  0032D4  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  6017  0032D8  30DF               	rrcf	223,w,c
  6018  0032DA  32E8               	rrcf	wreg,f,c
  6019  0032DC  32E8               	rrcf	wreg,f,c
  6020  0032DE  0B07               	andlw	7
  6021  0032E0  6E22               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  6022  0032E2  5022               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  6023  0032E4  0D02               	mullw	2
  6024  0032E6  0E0A               	movlw	low _tris_registers
  6025  0032E8  24F3               	addwf	243,w,c
  6026  0032EA  6ED9               	movwf	fsr2l,c
  6027  0032EC  0E01               	movlw	high _tris_registers
  6028  0032EE  20F4               	addwfc	prodh,w,c
  6029  0032F0  6EDA               	movwf	fsr2h,c
  6030  0032F2  CFDE F023          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  6031  0032F6  CFDD F024          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  6032  0032FA  C023  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  6033  0032FE  C024  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  6034  003302  5021               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  6035  003304  12DF               	iorwf	indf2,f,c
  6036                           
  6037                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  6038  003306  EFA6  F019         	goto	l10997
  6039  00330A                     l10995:
  6040                           
  6041                           ; BSR set to: 0
  6042  00330A  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  6043  00330E  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  6044  003312  BCDF               	btfsc	indf2,6,c
  6045  003314  EF8E  F019         	goto	u11311
  6046  003318  EF91  F019         	goto	u11310
  6047  00331C                     u11311:
  6048  00331C  0E01               	movlw	1
  6049  00331E  EF92  F019         	goto	u11320
  6050  003322                     u11310:
  6051  003322  0E00               	movlw	0
  6052  003324                     u11320:
  6053  003324  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  6054  003326  6A21               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  6055                           
  6056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6057                           ; Switch size 1, requested type "simple"
  6058                           ; Number of cases is 1, Range of values is 0 to 0
  6059                           ; switch strategies available:
  6060                           ; Name         Instructions Cycles
  6061                           ; simple_byte            4     3 (average)
  6062                           ;	Chosen strategy is simple_byte
  6063  003328  5021               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  6064  00332A  0A00               	xorlw	0	; case 0
  6065  00332C  B4D8               	btfsc	status,2,c
  6066  00332E  EF9B  F019         	goto	l13493
  6067  003332  EF22  F019         	goto	l10987
  6068  003336                     l13493:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ; Switch size 1, requested type "simple"
  6072                           ; Number of cases is 2, Range of values is 0 to 1
  6073                           ; switch strategies available:
  6074                           ; Name         Instructions Cycles
  6075                           ; simple_byte            7     4 (average)
  6076                           ;	Chosen strategy is simple_byte
  6077  003336  5020               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  6078  003338  0A00               	xorlw	0	; case 0
  6079  00333A  B4D8               	btfsc	status,2,c
  6080  00333C  EF26  F019         	goto	l10989
  6081  003340  0A01               	xorlw	1	; case 1
  6082  003342  B4D8               	btfsc	status,2,c
  6083  003344  EF57  F019         	goto	l10991
  6084  003348  EF22  F019         	goto	l10987
  6085  00334C                     l10997:
  6086                           
  6087                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  6088  00334C  0100               	movlb	0	; () banked
  6089  00334E  5160               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),w,b
  6090  003350                     
  6091                           ; BSR set to: 0
  6092  003350  0012               	return		;funcret
  6093  003352                     __end_of_GPIO_Pin_Direction_Initialize:
  6094                           	callstack 0
  6095                           
  6096 ;; *************** function _EUSART_Async_Init *****************
  6097 ;; Defined at:
  6098 ;;		line 42 in file "MCAL/EUSART/mcal_EUSART.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  _eusart_obj     2   19[BANK1 ] PTR const struct .
  6101 ;;		 -> _uart_obj(12), 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  ret_val         1   82[BANK0 ] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  1    wreg      unsigned char 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6113 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;Total ram usage:        3 bytes
  6118 ;; Hardware stack levels used: 1
  6119 ;; Hardware stack levels required when called: 10
  6120 ;; This function calls:
  6121 ;;		_async_Rx_config
  6122 ;;		_async_Tx_config
  6123 ;;		_async_config_baud_rate_gen
  6124 ;; This function is called by:
  6125 ;;		_application_intialize
  6126 ;;		_Bluetooth_Init
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text30
  6131  005792                     __ptext30:
  6132                           	callstack 0
  6133  005792                     _EUSART_Async_Init:
  6134                           	callstack 19
  6135  005792                     
  6136                           ;MCAL/EUSART/mcal_EUSART.c: 46:     if(((void*)0) == _eusart_obj)
  6137  005792  0101               	movlb	1	; () banked
  6138  005794  5179               	movf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  6139  005796  117A               	iorwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  6140  005798  A4D8               	btfss	status,2,c
  6141  00579A  EFD1  F02B         	goto	u12491
  6142  00579E  EFD3  F02B         	goto	u12490
  6143  0057A2                     u12491:
  6144  0057A2  EFD5  F02B         	goto	l672
  6145  0057A6                     u12490:
  6146  0057A6                     
  6147                           ; BSR set to: 1
  6148                           ;MCAL/EUSART/mcal_EUSART.c: 49:     }
  6149  0057A6  EFF8  F02B         	goto	l674
  6150  0057AA                     l672:
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;MCAL/EUSART/mcal_EUSART.c: 51:     {;MCAL/EUSART/mcal_EUSART.c: 53:         (RCSTAbits.
      +                          SPEN = 0 );
  6154  0057AA  9EAB               	bcf	171,7,c	;volatile
  6155  0057AC                     
  6156                           ; BSR set to: 1
  6157                           ;MCAL/EUSART/mcal_EUSART.c: 56:         ret_val = async_config_baud_rate_gen(_eusart_obj
      +                          );
  6158  0057AC  C179  F0B0         	movff	EUSART_Async_Init@_eusart_obj,async_config_baud_rate_gen@_eusart_obj
  6159  0057B0  C17A  F0B1         	movff	EUSART_Async_Init@_eusart_obj+1,async_config_baud_rate_gen@_eusart_obj+1
  6160  0057B4  EC48  F00F         	call	_async_config_baud_rate_gen	;wreg free
  6161  0057B8  0100               	movlb	0	; () banked
  6162  0057BA  6FB2               	movwf	EUSART_Async_Init@ret_val& (0+255),b
  6163  0057BC                     
  6164                           ; BSR set to: 0
  6165                           ;MCAL/EUSART/mcal_EUSART.c: 59:         (TXSTA1bits.SYNC = 0);
  6166  0057BC  98AC               	bcf	172,4,c	;volatile
  6167  0057BE                     
  6168                           ; BSR set to: 0
  6169                           ;MCAL/EUSART/mcal_EUSART.c: 62:         TRISCbits.RC6 = GPIO_DIRECTION_INPUT ;
  6170  0057BE  8C94               	bsf	148,6,c	;volatile
  6171                           
  6172                           ;MCAL/EUSART/mcal_EUSART.c: 64:         ret_val &= async_Tx_config(&(_eusart_obj->tx_con
      +                          fig));
  6173  0057C0  0E02               	movlw	2
  6174  0057C2  0101               	movlb	1	; () banked
  6175  0057C4  2579               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  6176  0057C6  6E1E               	movwf	async_Tx_config@_tx_obj^0,c
  6177  0057C8  0E00               	movlw	0
  6178  0057CA  217A               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  6179  0057CC  6E1F               	movwf	(async_Tx_config@_tx_obj+1)^0,c
  6180  0057CE  ECE5  F026         	call	_async_Tx_config	;wreg free
  6181  0057D2  0100               	movlb	0	; () banked
  6182  0057D4  17B2               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  6183  0057D6                     
  6184                           ; BSR set to: 0
  6185                           ;MCAL/EUSART/mcal_EUSART.c: 67:         TRISCbits.RC7 = GPIO_DIRECTION_INPUT ;
  6186  0057D6  8E94               	bsf	148,7,c	;volatile
  6187                           
  6188                           ;MCAL/EUSART/mcal_EUSART.c: 69:         ret_val &= async_Rx_config(&(_eusart_obj->rx_con
      +                          fig));
  6189  0057D8  0E03               	movlw	3
  6190  0057DA  0101               	movlb	1	; () banked
  6191  0057DC  2579               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  6192  0057DE  6E21               	movwf	async_Rx_config@_rx_obj^0,c
  6193  0057E0  0E00               	movlw	0
  6194  0057E2  217A               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  6195  0057E4  6E22               	movwf	(async_Rx_config@_rx_obj+1)^0,c
  6196  0057E6  ECF7  F024         	call	_async_Rx_config	;wreg free
  6197  0057EA  0100               	movlb	0	; () banked
  6198  0057EC  17B2               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  6199  0057EE                     
  6200                           ; BSR set to: 0
  6201                           ;MCAL/EUSART/mcal_EUSART.c: 72:         (RCSTAbits.SPEN = 1 );
  6202  0057EE  8EAB               	bsf	171,7,c	;volatile
  6203  0057F0                     l674:
  6204  0057F0  0012               	return		;funcret
  6205  0057F2                     __end_of_EUSART_Async_Init:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _async_config_baud_rate_gen *****************
  6209 ;; Defined at:
  6210 ;;		line 564 in file "MCAL/EUSART/mcal_EUSART.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  _eusart_obj     2   80[BANK0 ] PTR const struct .
  6213 ;;		 -> _uart_obj(12), 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  Baudrate_tem    4   11[BANK1 ] float 
  6216 ;;  ret_val         1   10[BANK1 ] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      unsigned char 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Totals:         0       2      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;Total ram usage:       13 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 9
  6233 ;; This function calls:
  6234 ;;		___fladd
  6235 ;;		___fldiv
  6236 ;;		___fltol
  6237 ;;		___xxtofl
  6238 ;; This function is called by:
  6239 ;;		_EUSART_Async_Init
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text31
  6244  001E90                     __ptext31:
  6245                           	callstack 0
  6246  001E90                     _async_config_baud_rate_gen:
  6247                           	callstack 19
  6248  001E90                     
  6249                           ;MCAL/EUSART/mcal_EUSART.c: 564: static __attribute__((inline)) Std_ReturnType async_con
      +                          fig_baud_rate_gen(const uart_config_st *_eusart_obj);MCAL/EUSART/mcal_EUSART.c: 565: {;M
      +                          CAL/EUSART/mcal_EUSART.c: 567:     Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  6250  001E90  0E01               	movlw	1
  6251  001E92  0101               	movlb	1	; () banked
  6252  001E94  6F70               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  6253  001E96                     
  6254                           ; BSR set to: 1
  6255                           ;MCAL/EUSART/mcal_EUSART.c: 569:     if(((void*)0) == _eusart_obj)
  6256  001E96  0100               	movlb	0	; () banked
  6257  001E98  51B0               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  6258  001E9A  11B1               	iorwf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  6259  001E9C  A4D8               	btfss	status,2,c
  6260  001E9E  EF53  F00F         	goto	u12311
  6261  001EA2  EF55  F00F         	goto	u12310
  6262  001EA6                     u12311:
  6263  001EA6  EF5A  F00F         	goto	l11717
  6264  001EAA                     u12310:
  6265  001EAA                     
  6266                           ; BSR set to: 0
  6267                           ;MCAL/EUSART/mcal_EUSART.c: 570:     {;MCAL/EUSART/mcal_EUSART.c: 571:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  6268  001EAA  0E00               	movlw	0
  6269  001EAC  0101               	movlb	1	; () banked
  6270  001EAE  6F70               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  6271                           
  6272                           ;MCAL/EUSART/mcal_EUSART.c: 572:     }
  6273  001EB0  EF2B  F011         	goto	l11743
  6274  001EB4                     l11717:
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;MCAL/EUSART/mcal_EUSART.c: 574:     {;MCAL/EUSART/mcal_EUSART.c: 575:         float32 B
      +                          audrate_temp=0;
  6278  001EB4  0E00               	movlw	0
  6279  001EB6  0101               	movlb	1	; () banked
  6280  001EB8  6F71               	movwf	async_config_baud_rate_gen@Baudrate_temp& (0+255),b
  6281  001EBA  0E00               	movlw	0
  6282  001EBC  6F72               	movwf	(async_config_baud_rate_gen@Baudrate_temp+1)& (0+255),b
  6283  001EBE  0E00               	movlw	0
  6284  001EC0  6F73               	movwf	(async_config_baud_rate_gen@Baudrate_temp+2)& (0+255),b
  6285  001EC2  0E00               	movlw	0
  6286  001EC4  6F74               	movwf	(async_config_baud_rate_gen@Baudrate_temp+3)& (0+255),b
  6287                           
  6288                           ;MCAL/EUSART/mcal_EUSART.c: 576:         switch(_eusart_obj->baud_rate_config)
  6289  001EC6  EFE5  F010         	goto	l11739
  6290  001ECA                     l815:
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;MCAL/EUSART/mcal_EUSART.c: 579:                 TXSTAbits.BRGH = 0 ;
  6294  001ECA  94AC               	bcf	172,2,c	;volatile
  6295                           
  6296                           ;MCAL/EUSART/mcal_EUSART.c: 580:                 BAUDCONbits.BRG16 = 0 ;
  6297  001ECC  96B8               	bcf	184,3,c	;volatile
  6298  001ECE                     
  6299                           ; BSR set to: 1
  6300                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  6301  001ECE  C0B0  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  6302  001ED2  C0B1  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  6303  001ED6  CFDE F16E          	movff	postinc2,??_async_config_baud_rate_gen
  6304  001EDA  CFDD F16F          	movff	postdec2,??_async_config_baud_rate_gen+1
  6305  001EDE  C16E  F060         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  6306  001EE2  C16F  F061         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  6307  001EE6  0100               	movlb	0	; () banked
  6308  001EE8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  6309  001EEA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  6310  001EEC  0E00               	movlw	0
  6311  001EEE  ECFF  F015         	call	___xxtofl
  6312  001EF2  C060  F072         	movff	?___xxtofl,___fldiv@a
  6313  001EF6  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  6314  001EFA  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  6315  001EFE  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  6316  001F02  0E00               	movlw	0
  6317  001F04  0100               	movlb	0	; () banked
  6318  001F06  6F6E               	movwf	___fldiv@b& (0+255),b
  6319  001F08  0E24               	movlw	36
  6320  001F0A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  6321  001F0C  0EF4               	movlw	244
  6322  001F0E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  6323  001F10  0E4A               	movlw	74
  6324  001F12  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  6325  001F14  EC2D  F011         	call	___fldiv	;wreg free
  6326  001F18  C06E  F175         	movff	?___fldiv,_async_config_baud_rate_gen$5828
  6327  001F1C  C06F  F176         	movff	?___fldiv+1,_async_config_baud_rate_gen$5828+1
  6328  001F20  C070  F177         	movff	?___fldiv+2,_async_config_baud_rate_gen$5828+2
  6329  001F24  C071  F178         	movff	?___fldiv+3,_async_config_baud_rate_gen$5828+3
  6330  001F28                     
  6331                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  6332  001F28  0E00               	movlw	0
  6333  001F2A  0100               	movlb	0	; () banked
  6334  001F2C  6F72               	movwf	___fldiv@a& (0+255),b
  6335  001F2E  0E00               	movlw	0
  6336  001F30  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  6337  001F32  0E80               	movlw	128
  6338  001F34  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  6339  001F36  0E42               	movlw	66
  6340  001F38  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  6341  001F3A  C175  F06E         	movff	_async_config_baud_rate_gen$5828,___fldiv@b
  6342  001F3E  C176  F06F         	movff	_async_config_baud_rate_gen$5828+1,___fldiv@b+1
  6343  001F42  C177  F070         	movff	_async_config_baud_rate_gen$5828+2,___fldiv@b+2
  6344  001F46  C178  F071         	movff	_async_config_baud_rate_gen$5828+3,___fldiv@b+3
  6345  001F4A  EC2D  F011         	call	___fldiv	;wreg free
  6346  001F4E  C06E  F0A0         	movff	?___fldiv,___fladd@b
  6347  001F52  C06F  F0A1         	movff	?___fldiv+1,___fladd@b+1
  6348  001F56  C070  F0A2         	movff	?___fldiv+2,___fladd@b+2
  6349  001F5A  C071  F0A3         	movff	?___fldiv+3,___fladd@b+3
  6350  001F5E  0E00               	movlw	0
  6351  001F60  0100               	movlb	0	; () banked
  6352  001F62  6FA4               	movwf	___fladd@a& (0+255),b
  6353  001F64  0E00               	movlw	0
  6354  001F66  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  6355  001F68  0E80               	movlw	128
  6356  001F6A  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  6357  001F6C  0EBF               	movlw	191
  6358  001F6E  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  6359  001F70  ECD1  F00A         	call	___fladd	;wreg free
  6360  001F74  C0A0  F171         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  6361  001F78  C0A1  F172         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  6362  001F7C  C0A2  F173         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  6363  001F80  C0A3  F174         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  6364                           
  6365                           ;MCAL/EUSART/mcal_EUSART.c: 582:                 break;
  6366  001F84  EF0A  F011         	goto	l11741
  6367  001F88                     l817:
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;MCAL/EUSART/mcal_EUSART.c: 584:                 TXSTAbits.BRGH = 1 ;
  6371  001F88  84AC               	bsf	172,2,c	;volatile
  6372                           
  6373                           ;MCAL/EUSART/mcal_EUSART.c: 585:                 BAUDCONbits.BRG16 = 0 ;
  6374  001F8A  96B8               	bcf	184,3,c	;volatile
  6375  001F8C                     
  6376                           ; BSR set to: 1
  6377                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  6378  001F8C  C0B0  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  6379  001F90  C0B1  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  6380  001F94  CFDE F16E          	movff	postinc2,??_async_config_baud_rate_gen
  6381  001F98  CFDD F16F          	movff	postdec2,??_async_config_baud_rate_gen+1
  6382  001F9C  C16E  F060         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  6383  001FA0  C16F  F061         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  6384  001FA4  0100               	movlb	0	; () banked
  6385  001FA6  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  6386  001FA8  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  6387  001FAA  0E00               	movlw	0
  6388  001FAC  ECFF  F015         	call	___xxtofl
  6389  001FB0  C060  F072         	movff	?___xxtofl,___fldiv@a
  6390  001FB4  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  6391  001FB8  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  6392  001FBC  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  6393  001FC0  0E00               	movlw	0
  6394  001FC2  0100               	movlb	0	; () banked
  6395  001FC4  6F6E               	movwf	___fldiv@b& (0+255),b
  6396  001FC6  0E24               	movlw	36
  6397  001FC8  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  6398  001FCA  0EF4               	movlw	244
  6399  001FCC  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  6400  001FCE  0E4A               	movlw	74
  6401  001FD0  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  6402  001FD2  EC2D  F011         	call	___fldiv	;wreg free
  6403  001FD6  C06E  F175         	movff	?___fldiv,_async_config_baud_rate_gen$5828
  6404  001FDA  C06F  F176         	movff	?___fldiv+1,_async_config_baud_rate_gen$5828+1
  6405  001FDE  C070  F177         	movff	?___fldiv+2,_async_config_baud_rate_gen$5828+2
  6406  001FE2  C071  F178         	movff	?___fldiv+3,_async_config_baud_rate_gen$5828+3
  6407  001FE6                     
  6408                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  6409  001FE6  0E00               	movlw	0
  6410  001FE8  0100               	movlb	0	; () banked
  6411  001FEA  6F72               	movwf	___fldiv@a& (0+255),b
  6412  001FEC  0E00               	movlw	0
  6413  001FEE  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  6414  001FF0  0E80               	movlw	128
  6415  001FF2  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  6416  001FF4  0E41               	movlw	65
  6417  001FF6  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  6418  001FF8  C175  F06E         	movff	_async_config_baud_rate_gen$5828,___fldiv@b
  6419  001FFC  C176  F06F         	movff	_async_config_baud_rate_gen$5828+1,___fldiv@b+1
  6420  002000  C177  F070         	movff	_async_config_baud_rate_gen$5828+2,___fldiv@b+2
  6421  002004  C178  F071         	movff	_async_config_baud_rate_gen$5828+3,___fldiv@b+3
  6422  002008  EC2D  F011         	call	___fldiv	;wreg free
  6423  00200C  C06E  F0A0         	movff	?___fldiv,___fladd@b
  6424  002010  C06F  F0A1         	movff	?___fldiv+1,___fladd@b+1
  6425  002014  C070  F0A2         	movff	?___fldiv+2,___fladd@b+2
  6426  002018  C071  F0A3         	movff	?___fldiv+3,___fladd@b+3
  6427  00201C  0E00               	movlw	0
  6428  00201E  0100               	movlb	0	; () banked
  6429  002020  6FA4               	movwf	___fladd@a& (0+255),b
  6430  002022  0E00               	movlw	0
  6431  002024  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  6432  002026  0E80               	movlw	128
  6433  002028  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  6434  00202A  0EBF               	movlw	191
  6435  00202C  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  6436  00202E  ECD1  F00A         	call	___fladd	;wreg free
  6437  002032  C0A0  F171         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  6438  002036  C0A1  F172         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  6439  00203A  C0A2  F173         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  6440  00203E  C0A3  F174         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  6441                           
  6442                           ;MCAL/EUSART/mcal_EUSART.c: 587:                 break ;
  6443  002042  EF0A  F011         	goto	l11741
  6444  002046                     l818:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;MCAL/EUSART/mcal_EUSART.c: 589:                 TXSTAbits.BRGH = 0 ;
  6448  002046  94AC               	bcf	172,2,c	;volatile
  6449                           
  6450                           ;MCAL/EUSART/mcal_EUSART.c: 590:                 BAUDCONbits.BRG16 = 1 ;
  6451  002048  86B8               	bsf	184,3,c	;volatile
  6452  00204A                     
  6453                           ; BSR set to: 1
  6454                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  6455  00204A  C0B0  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  6456  00204E  C0B1  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  6457  002052  CFDE F16E          	movff	postinc2,??_async_config_baud_rate_gen
  6458  002056  CFDD F16F          	movff	postdec2,??_async_config_baud_rate_gen+1
  6459  00205A  C16E  F060         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  6460  00205E  C16F  F061         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  6461  002062  0100               	movlb	0	; () banked
  6462  002064  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  6463  002066  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  6464  002068  0E00               	movlw	0
  6465  00206A  ECFF  F015         	call	___xxtofl
  6466  00206E  C060  F072         	movff	?___xxtofl,___fldiv@a
  6467  002072  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  6468  002076  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  6469  00207A  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  6470  00207E  0E00               	movlw	0
  6471  002080  0100               	movlb	0	; () banked
  6472  002082  6F6E               	movwf	___fldiv@b& (0+255),b
  6473  002084  0E24               	movlw	36
  6474  002086  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  6475  002088  0EF4               	movlw	244
  6476  00208A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  6477  00208C  0E4A               	movlw	74
  6478  00208E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  6479  002090  EC2D  F011         	call	___fldiv	;wreg free
  6480  002094  C06E  F175         	movff	?___fldiv,_async_config_baud_rate_gen$5828
  6481  002098  C06F  F176         	movff	?___fldiv+1,_async_config_baud_rate_gen$5828+1
  6482  00209C  C070  F177         	movff	?___fldiv+2,_async_config_baud_rate_gen$5828+2
  6483  0020A0  C071  F178         	movff	?___fldiv+3,_async_config_baud_rate_gen$5828+3
  6484  0020A4                     
  6485                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  6486  0020A4  0E00               	movlw	0
  6487  0020A6  0100               	movlb	0	; () banked
  6488  0020A8  6F72               	movwf	___fldiv@a& (0+255),b
  6489  0020AA  0E00               	movlw	0
  6490  0020AC  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  6491  0020AE  0E80               	movlw	128
  6492  0020B0  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  6493  0020B2  0E41               	movlw	65
  6494  0020B4  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  6495  0020B6  C175  F06E         	movff	_async_config_baud_rate_gen$5828,___fldiv@b
  6496  0020BA  C176  F06F         	movff	_async_config_baud_rate_gen$5828+1,___fldiv@b+1
  6497  0020BE  C177  F070         	movff	_async_config_baud_rate_gen$5828+2,___fldiv@b+2
  6498  0020C2  C178  F071         	movff	_async_config_baud_rate_gen$5828+3,___fldiv@b+3
  6499  0020C6  EC2D  F011         	call	___fldiv	;wreg free
  6500  0020CA  C06E  F0A0         	movff	?___fldiv,___fladd@b
  6501  0020CE  C06F  F0A1         	movff	?___fldiv+1,___fladd@b+1
  6502  0020D2  C070  F0A2         	movff	?___fldiv+2,___fladd@b+2
  6503  0020D6  C071  F0A3         	movff	?___fldiv+3,___fladd@b+3
  6504  0020DA  0E00               	movlw	0
  6505  0020DC  0100               	movlb	0	; () banked
  6506  0020DE  6FA4               	movwf	___fladd@a& (0+255),b
  6507  0020E0  0E00               	movlw	0
  6508  0020E2  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  6509  0020E4  0E80               	movlw	128
  6510  0020E6  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  6511  0020E8  0EBF               	movlw	191
  6512  0020EA  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  6513  0020EC  ECD1  F00A         	call	___fladd	;wreg free
  6514  0020F0  C0A0  F171         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  6515  0020F4  C0A1  F172         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  6516  0020F8  C0A2  F173         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  6517  0020FC  C0A3  F174         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  6518                           
  6519                           ;MCAL/EUSART/mcal_EUSART.c: 592:                 break ;
  6520  002100  EF0A  F011         	goto	l11741
  6521  002104                     l819:
  6522                           
  6523                           ; BSR set to: 1
  6524                           ;MCAL/EUSART/mcal_EUSART.c: 594:                 TXSTAbits.BRGH = 1 ;
  6525  002104  84AC               	bsf	172,2,c	;volatile
  6526                           
  6527                           ;MCAL/EUSART/mcal_EUSART.c: 595:                 BAUDCONbits.BRG16 = 1 ;
  6528  002106  86B8               	bsf	184,3,c	;volatile
  6529  002108                     
  6530                           ; BSR set to: 1
  6531                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  6532  002108  C0B0  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  6533  00210C  C0B1  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  6534  002110  CFDE F16E          	movff	postinc2,??_async_config_baud_rate_gen
  6535  002114  CFDD F16F          	movff	postdec2,??_async_config_baud_rate_gen+1
  6536  002118  C16E  F060         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  6537  00211C  C16F  F061         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  6538  002120  0100               	movlb	0	; () banked
  6539  002122  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  6540  002124  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  6541  002126  0E00               	movlw	0
  6542  002128  ECFF  F015         	call	___xxtofl
  6543  00212C  C060  F072         	movff	?___xxtofl,___fldiv@a
  6544  002130  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  6545  002134  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  6546  002138  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  6547  00213C  0E00               	movlw	0
  6548  00213E  0100               	movlb	0	; () banked
  6549  002140  6F6E               	movwf	___fldiv@b& (0+255),b
  6550  002142  0E24               	movlw	36
  6551  002144  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  6552  002146  0EF4               	movlw	244
  6553  002148  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  6554  00214A  0E4A               	movlw	74
  6555  00214C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  6556  00214E  EC2D  F011         	call	___fldiv	;wreg free
  6557  002152  C06E  F175         	movff	?___fldiv,_async_config_baud_rate_gen$5828
  6558  002156  C06F  F176         	movff	?___fldiv+1,_async_config_baud_rate_gen$5828+1
  6559  00215A  C070  F177         	movff	?___fldiv+2,_async_config_baud_rate_gen$5828+2
  6560  00215E  C071  F178         	movff	?___fldiv+3,_async_config_baud_rate_gen$5828+3
  6561  002162                     
  6562                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  6563  002162  0E00               	movlw	0
  6564  002164  0100               	movlb	0	; () banked
  6565  002166  6F72               	movwf	___fldiv@a& (0+255),b
  6566  002168  0E00               	movlw	0
  6567  00216A  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  6568  00216C  0E80               	movlw	128
  6569  00216E  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  6570  002170  0E40               	movlw	64
  6571  002172  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  6572  002174  C175  F06E         	movff	_async_config_baud_rate_gen$5828,___fldiv@b
  6573  002178  C176  F06F         	movff	_async_config_baud_rate_gen$5828+1,___fldiv@b+1
  6574  00217C  C177  F070         	movff	_async_config_baud_rate_gen$5828+2,___fldiv@b+2
  6575  002180  C178  F071         	movff	_async_config_baud_rate_gen$5828+3,___fldiv@b+3
  6576  002184  EC2D  F011         	call	___fldiv	;wreg free
  6577  002188  C06E  F0A0         	movff	?___fldiv,___fladd@b
  6578  00218C  C06F  F0A1         	movff	?___fldiv+1,___fladd@b+1
  6579  002190  C070  F0A2         	movff	?___fldiv+2,___fladd@b+2
  6580  002194  C071  F0A3         	movff	?___fldiv+3,___fladd@b+3
  6581  002198  0E00               	movlw	0
  6582  00219A  0100               	movlb	0	; () banked
  6583  00219C  6FA4               	movwf	___fladd@a& (0+255),b
  6584  00219E  0E00               	movlw	0
  6585  0021A0  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  6586  0021A2  0E80               	movlw	128
  6587  0021A4  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  6588  0021A6  0EBF               	movlw	191
  6589  0021A8  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  6590  0021AA  ECD1  F00A         	call	___fladd	;wreg free
  6591  0021AE  C0A0  F171         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  6592  0021B2  C0A1  F172         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  6593  0021B6  C0A2  F173         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  6594  0021BA  C0A3  F174         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  6595                           
  6596                           ;MCAL/EUSART/mcal_EUSART.c: 597:                 break ;
  6597  0021BE  EF0A  F011         	goto	l11741
  6598  0021C2                     l11735:
  6599                           
  6600                           ; BSR set to: 1
  6601                           ;MCAL/EUSART/mcal_EUSART.c: 599:                 ret_val = (Std_ReturnType) 0x00 ;
  6602  0021C2  0E00               	movlw	0
  6603  0021C4  6F70               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  6604                           
  6605                           ;MCAL/EUSART/mcal_EUSART.c: 600:                 break ;
  6606  0021C6  EF0A  F011         	goto	l11741
  6607  0021CA                     l11739:
  6608                           
  6609                           ; BSR set to: 1
  6610  0021CA  0100               	movlb	0	; () banked
  6611  0021CC  EE20 F00B          	lfsr	2,11
  6612  0021D0  51B0               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  6613  0021D2  26D9               	addwf	fsr2l,f,c
  6614  0021D4  51B1               	movf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  6615  0021D6  22DA               	addwfc	fsr2h,f,c
  6616  0021D8  50DF               	movf	indf2,w,c
  6617  0021DA  0101               	movlb	1	; () banked
  6618  0021DC  6F6E               	movwf	??_async_config_baud_rate_gen& (0+255),b
  6619  0021DE  6B6F               	clrf	(??_async_config_baud_rate_gen+1)& (0+255),b
  6620                           
  6621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6622                           ; Switch size 1, requested type "simple"
  6623                           ; Number of cases is 1, Range of values is 0 to 0
  6624                           ; switch strategies available:
  6625                           ; Name         Instructions Cycles
  6626                           ; simple_byte            4     3 (average)
  6627                           ;	Chosen strategy is simple_byte
  6628  0021E0  516F               	movf	(??_async_config_baud_rate_gen+1)& (0+255),w,b
  6629  0021E2  0A00               	xorlw	0	; case 0
  6630  0021E4  B4D8               	btfsc	status,2,c
  6631  0021E6  EFF7  F010         	goto	l13495
  6632  0021EA  EFE1  F010         	goto	l11735
  6633  0021EE                     l13495:
  6634                           
  6635                           ; BSR set to: 1
  6636                           ; Switch size 1, requested type "simple"
  6637                           ; Number of cases is 4, Range of values is 0 to 3
  6638                           ; switch strategies available:
  6639                           ; Name         Instructions Cycles
  6640                           ; simple_byte           13     7 (average)
  6641                           ;	Chosen strategy is simple_byte
  6642  0021EE  516E               	movf	??_async_config_baud_rate_gen& (0+255),w,b
  6643  0021F0  0A00               	xorlw	0	; case 0
  6644  0021F2  B4D8               	btfsc	status,2,c
  6645  0021F4  EF65  F00F         	goto	l815
  6646  0021F8  0A01               	xorlw	1	; case 1
  6647  0021FA  B4D8               	btfsc	status,2,c
  6648  0021FC  EFC4  F00F         	goto	l817
  6649  002200  0A03               	xorlw	3	; case 2
  6650  002202  B4D8               	btfsc	status,2,c
  6651  002204  EF23  F010         	goto	l818
  6652  002208  0A01               	xorlw	1	; case 3
  6653  00220A  B4D8               	btfsc	status,2,c
  6654  00220C  EF82  F010         	goto	l819
  6655  002210  EFE1  F010         	goto	l11735
  6656  002214                     l11741:
  6657                           
  6658                           ;MCAL/EUSART/mcal_EUSART.c: 604:         SPBRG=(uint8)((uint32)Baudrate_temp);
  6659  002214  C171  F166         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  6660  002218  C172  F167         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  6661  00221C  C173  F168         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  6662  002220  C174  F169         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  6663  002224  EC07  F01C         	call	___fltol	;wreg free
  6664  002228  0101               	movlb	1	; () banked
  6665  00222A  5166               	movf	?___fltol& (0+255),w,b
  6666  00222C  6EAF               	movwf	175,c	;volatile
  6667                           
  6668                           ;MCAL/EUSART/mcal_EUSART.c: 605:         SPBRGH=(uint8)(((uint32)Baudrate_temp)>>8);
  6669  00222E  C171  F166         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  6670  002232  C172  F167         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  6671  002236  C173  F168         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  6672  00223A  C174  F169         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  6673  00223E  EC07  F01C         	call	___fltol	;wreg free
  6674  002242  0101               	movlb	1	; () banked
  6675  002244  C167  F166         	movff	?___fltol+1,?___fltol
  6676  002248  C168  F167         	movff	?___fltol+2,?___fltol+1
  6677  00224C  C169  F168         	movff	?___fltol+3,?___fltol+2
  6678  002250  6B69               	clrf	(?___fltol+3)& (0+255),b
  6679  002252  5166               	movf	?___fltol& (0+255),w,b
  6680  002254  6EB0               	movwf	176,c	;volatile
  6681  002256                     l11743:
  6682                           
  6683                           ; BSR set to: 1
  6684                           ;MCAL/EUSART/mcal_EUSART.c: 608:     return ret_val ;
  6685  002256  5170               	movf	async_config_baud_rate_gen@ret_val& (0+255),w,b
  6686  002258                     
  6687                           ; BSR set to: 1
  6688  002258  0012               	return		;funcret
  6689  00225A                     __end_of_async_config_baud_rate_gen:
  6690                           	callstack 0
  6691                           
  6692 ;; *************** function _async_Tx_config *****************
  6693 ;; Defined at:
  6694 ;;		line 386 in file "MCAL/EUSART/mcal_EUSART.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  _tx_obj         2   29[COMRAM] PTR const struct .
  6697 ;;		 -> _uart_obj(12), 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  ret_val         1   31[COMRAM] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      unsigned char 
  6702 ;; Registers used:
  6703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;Total ram usage:        3 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 8
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_EUSART_Async_Init
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text32
  6724  004DCA                     __ptext32:
  6725                           	callstack 0
  6726  004DCA                     _async_Tx_config:
  6727                           	callstack 20
  6728  004DCA                     
  6729                           ;MCAL/EUSART/mcal_EUSART.c: 386: static Std_ReturnType async_Tx_config(const uart_tx_con
      +                          fig_st *_tx_obj );MCAL/EUSART/mcal_EUSART.c: 387: {;MCAL/EUSART/mcal_EUSART.c: 388:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  6730  004DCA  0E01               	movlw	1
  6731  004DCC  6E20               	movwf	async_Tx_config@ret_val^0,c
  6732  004DCE                     
  6733                           ;MCAL/EUSART/mcal_EUSART.c: 390:     if(((void*)0) == _tx_obj)
  6734  004DCE  501E               	movf	async_Tx_config@_tx_obj^0,w,c
  6735  004DD0  101F               	iorwf	(async_Tx_config@_tx_obj+1)^0,w,c
  6736  004DD2  A4D8               	btfss	status,2,c
  6737  004DD4  EFEE  F026         	goto	u12321
  6738  004DD8  EFF0  F026         	goto	u12320
  6739  004DDC                     u12321:
  6740  004DDC  EFF4  F026         	goto	l11759
  6741  004DE0                     u12320:
  6742  004DE0                     
  6743                           ;MCAL/EUSART/mcal_EUSART.c: 391:     {;MCAL/EUSART/mcal_EUSART.c: 392:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  6744  004DE0  0E00               	movlw	0
  6745  004DE2  6E20               	movwf	async_Tx_config@ret_val^0,c
  6746                           
  6747                           ;MCAL/EUSART/mcal_EUSART.c: 393:     }
  6748  004DE4  EF2B  F027         	goto	l11775
  6749  004DE8                     l11759:
  6750                           
  6751                           ;MCAL/EUSART/mcal_EUSART.c: 395:     {;MCAL/EUSART/mcal_EUSART.c: 396:         if(1 == _
      +                          tx_obj->tx_enable)
  6752  004DE8  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  6753  004DEC  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  6754  004DF0  A4DF               	btfss	indf2,2,c
  6755  004DF2  EFFD  F026         	goto	u12331
  6756  004DF6  EFFF  F026         	goto	u12330
  6757  004DFA                     u12331:
  6758  004DFA  EF1D  F027         	goto	l11771
  6759  004DFE                     u12330:
  6760  004DFE                     
  6761                           ;MCAL/EUSART/mcal_EUSART.c: 397:         {;MCAL/EUSART/mcal_EUSART.c: 400:             (
      +                          TXSTAbits.TXEN = 0);
  6762  004DFE  9AAC               	bcf	172,5,c	;volatile
  6763  004E00                     
  6764                           ;MCAL/EUSART/mcal_EUSART.c: 406:             if(1 == _tx_obj->tx_9th_bit_en )
  6765  004E00  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  6766  004E04  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  6767  004E08  A6DF               	btfss	indf2,3,c
  6768  004E0A  EF09  F027         	goto	u12341
  6769  004E0E  EF0B  F027         	goto	u12340
  6770  004E12                     u12341:
  6771  004E12  EF0E  F027         	goto	l11767
  6772  004E16                     u12340:
  6773  004E16                     
  6774                           ;MCAL/EUSART/mcal_EUSART.c: 407:             {;MCAL/EUSART/mcal_EUSART.c: 408:          
      +                                 TXSTAbits.TX9 = 1 ;
  6775  004E16  8CAC               	bsf	172,6,c	;volatile
  6776                           
  6777                           ;MCAL/EUSART/mcal_EUSART.c: 409:             }
  6778  004E18  EF1A  F027         	goto	l776
  6779  004E1C                     l11767:
  6780  004E1C  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  6781  004E20  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  6782  004E24  B6DF               	btfsc	indf2,3,c
  6783  004E26  EF17  F027         	goto	u12351
  6784  004E2A  EF19  F027         	goto	u12350
  6785  004E2E                     u12351:
  6786  004E2E  EF1A  F027         	goto	l776
  6787  004E32                     u12350:
  6788  004E32                     
  6789                           ;MCAL/EUSART/mcal_EUSART.c: 411:             {;MCAL/EUSART/mcal_EUSART.c: 412:          
      +                                 TXSTAbits.TX9 = 0 ;
  6790  004E32  9CAC               	bcf	172,6,c	;volatile
  6791  004E34                     l776:
  6792                           
  6793                           ;MCAL/EUSART/mcal_EUSART.c: 417:             (TXSTAbits.TXEN = 1);
  6794  004E34  8AAC               	bsf	172,5,c	;volatile
  6795                           
  6796                           ;MCAL/EUSART/mcal_EUSART.c: 418:         }
  6797  004E36  EF2B  F027         	goto	l11775
  6798  004E3A                     l11771:
  6799  004E3A  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  6800  004E3E  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  6801  004E42  B4DF               	btfsc	indf2,2,c
  6802  004E44  EF26  F027         	goto	u12361
  6803  004E48  EF28  F027         	goto	u12360
  6804  004E4C                     u12361:
  6805  004E4C  EF2B  F027         	goto	l779
  6806  004E50                     u12360:
  6807  004E50                     
  6808                           ;MCAL/EUSART/mcal_EUSART.c: 420:         {;MCAL/EUSART/mcal_EUSART.c: 422:             (
      +                          TXSTAbits.TXEN = 0);
  6809  004E50  9AAC               	bcf	172,5,c	;volatile
  6810                           
  6811                           ;MCAL/EUSART/mcal_EUSART.c: 423:         }
  6812  004E52  EF2B  F027         	goto	l11775
  6813  004E56                     l779:
  6814  004E56                     l11775:
  6815                           
  6816                           ;MCAL/EUSART/mcal_EUSART.c: 428:     return ret_val ;
  6817  004E56  5020               	movf	async_Tx_config@ret_val^0,w,c
  6818  004E58  0012               	return		;funcret
  6819  004E5A                     __end_of_async_Tx_config:
  6820                           	callstack 0
  6821                           
  6822 ;; *************** function _async_Rx_config *****************
  6823 ;; Defined at:
  6824 ;;		line 431 in file "MCAL/EUSART/mcal_EUSART.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  _rx_obj         2   32[COMRAM] PTR const struct .
  6827 ;;		 -> _uart_obj(12), 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  ret_val         1   34[COMRAM] unsigned char 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      unsigned char 
  6832 ;; Registers used:
  6833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;Total ram usage:        3 bytes
  6844 ;; Hardware stack levels used: 1
  6845 ;; Hardware stack levels required when called: 9
  6846 ;; This function calls:
  6847 ;;		_Rx_config_interrupt
  6848 ;; This function is called by:
  6849 ;;		_EUSART_Async_Init
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text33
  6854  0049EE                     __ptext33:
  6855                           	callstack 0
  6856  0049EE                     _async_Rx_config:
  6857                           	callstack 19
  6858  0049EE                     
  6859                           ;MCAL/EUSART/mcal_EUSART.c: 431: static Std_ReturnType async_Rx_config(const uart_rx_con
      +                          fig_st *_rx_obj );MCAL/EUSART/mcal_EUSART.c: 432: {;MCAL/EUSART/mcal_EUSART.c: 433:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  6860  0049EE  0E01               	movlw	1
  6861  0049F0  6E23               	movwf	async_Rx_config@ret_val^0,c
  6862  0049F2                     
  6863                           ;MCAL/EUSART/mcal_EUSART.c: 435:     if(((void*)0) == _rx_obj)
  6864  0049F2  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  6865  0049F4  1022               	iorwf	(async_Rx_config@_rx_obj+1)^0,w,c
  6866  0049F6  A4D8               	btfss	status,2,c
  6867  0049F8  EF00  F025         	goto	u12371
  6868  0049FC  EF02  F025         	goto	u12370
  6869  004A00                     u12371:
  6870  004A00  EF06  F025         	goto	l11785
  6871  004A04                     u12370:
  6872  004A04                     
  6873                           ;MCAL/EUSART/mcal_EUSART.c: 436:     {;MCAL/EUSART/mcal_EUSART.c: 437:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  6874  004A04  0E00               	movlw	0
  6875  004A06  6E23               	movwf	async_Rx_config@ret_val^0,c
  6876                           
  6877                           ;MCAL/EUSART/mcal_EUSART.c: 438:     }
  6878  004A08  EF4C  F025         	goto	l11803
  6879  004A0C                     l11785:
  6880                           
  6881                           ;MCAL/EUSART/mcal_EUSART.c: 440:     {;MCAL/EUSART/mcal_EUSART.c: 441:         if(1 == _
      +                          rx_obj->rx_enable)
  6882  004A0C  EE20 F006          	lfsr	2,6
  6883  004A10  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  6884  004A12  26D9               	addwf	fsr2l,f,c
  6885  004A14  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  6886  004A16  22DA               	addwfc	fsr2h,f,c
  6887  004A18  A6DF               	btfss	indf2,3,c
  6888  004A1A  EF11  F025         	goto	u12381
  6889  004A1E  EF13  F025         	goto	u12380
  6890  004A22                     u12381:
  6891  004A22  EF3C  F025         	goto	l11799
  6892  004A26                     u12380:
  6893  004A26                     
  6894                           ;MCAL/EUSART/mcal_EUSART.c: 442:         {;MCAL/EUSART/mcal_EUSART.c: 444:             (
      +                          RCSTAbits.CREN = 0);
  6895  004A26  98AB               	bcf	171,4,c	;volatile
  6896  004A28                     
  6897                           ;MCAL/EUSART/mcal_EUSART.c: 447:             ret_val = Rx_config_interrupt(_rx_obj);
  6898  004A28  C021  F01E         	movff	async_Rx_config@_rx_obj,Rx_config_interrupt@_rx_obj
  6899  004A2C  C022  F01F         	movff	async_Rx_config@_rx_obj+1,Rx_config_interrupt@_rx_obj+1
  6900  004A30  EC49  F026         	call	_Rx_config_interrupt	;wreg free
  6901  004A34  6E23               	movwf	async_Rx_config@ret_val^0,c
  6902  004A36                     
  6903                           ;MCAL/EUSART/mcal_EUSART.c: 450:             if(1 == _rx_obj->rx_9th_bit_en )
  6904  004A36  EE20 F006          	lfsr	2,6
  6905  004A3A  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  6906  004A3C  26D9               	addwf	fsr2l,f,c
  6907  004A3E  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  6908  004A40  22DA               	addwfc	fsr2h,f,c
  6909  004A42  A8DF               	btfss	indf2,4,c
  6910  004A44  EF26  F025         	goto	u12391
  6911  004A48  EF28  F025         	goto	u12390
  6912  004A4C                     u12391:
  6913  004A4C  EF2B  F025         	goto	l11795
  6914  004A50                     u12390:
  6915  004A50                     
  6916                           ;MCAL/EUSART/mcal_EUSART.c: 451:             {;MCAL/EUSART/mcal_EUSART.c: 452:          
      +                                 RCSTAbits.RX9 = 1 ;
  6917  004A50  8CAB               	bsf	171,6,c	;volatile
  6918                           
  6919                           ;MCAL/EUSART/mcal_EUSART.c: 453:             }
  6920  004A52  EF39  F025         	goto	l789
  6921  004A56                     l11795:
  6922  004A56  EE20 F006          	lfsr	2,6
  6923  004A5A  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  6924  004A5C  26D9               	addwf	fsr2l,f,c
  6925  004A5E  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  6926  004A60  22DA               	addwfc	fsr2h,f,c
  6927  004A62  B8DF               	btfsc	indf2,4,c
  6928  004A64  EF36  F025         	goto	u12401
  6929  004A68  EF38  F025         	goto	u12400
  6930  004A6C                     u12401:
  6931  004A6C  EF39  F025         	goto	l789
  6932  004A70                     u12400:
  6933  004A70                     
  6934                           ;MCAL/EUSART/mcal_EUSART.c: 455:             {;MCAL/EUSART/mcal_EUSART.c: 456:          
      +                                 RCSTAbits.RX9 = 0 ;
  6935  004A70  9CAB               	bcf	171,6,c	;volatile
  6936  004A72                     l789:
  6937                           
  6938                           ;MCAL/EUSART/mcal_EUSART.c: 461:             (RCSTAbits.CREN = 1);
  6939  004A72  88AB               	bsf	171,4,c	;volatile
  6940                           
  6941                           ;MCAL/EUSART/mcal_EUSART.c: 462:         }
  6942  004A74  EF4C  F025         	goto	l11803
  6943  004A78                     l11799:
  6944  004A78  EE20 F006          	lfsr	2,6
  6945  004A7C  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  6946  004A7E  26D9               	addwf	fsr2l,f,c
  6947  004A80  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  6948  004A82  22DA               	addwfc	fsr2h,f,c
  6949  004A84  B6DF               	btfsc	indf2,3,c
  6950  004A86  EF47  F025         	goto	u12411
  6951  004A8A  EF49  F025         	goto	u12410
  6952  004A8E                     u12411:
  6953  004A8E  EF4C  F025         	goto	l792
  6954  004A92                     u12410:
  6955  004A92                     
  6956                           ;MCAL/EUSART/mcal_EUSART.c: 464:         {;MCAL/EUSART/mcal_EUSART.c: 466:             (
      +                          RCSTAbits.CREN = 0);
  6957  004A92  98AB               	bcf	171,4,c	;volatile
  6958                           
  6959                           ;MCAL/EUSART/mcal_EUSART.c: 467:         }
  6960  004A94  EF4C  F025         	goto	l11803
  6961  004A98                     l792:
  6962  004A98                     l11803:
  6963                           
  6964                           ;MCAL/EUSART/mcal_EUSART.c: 472:     return ret_val ;
  6965  004A98  5023               	movf	async_Rx_config@ret_val^0,w,c
  6966  004A9A  0012               	return		;funcret
  6967  004A9C                     __end_of_async_Rx_config:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function _Rx_config_interrupt *****************
  6971 ;; Defined at:
  6972 ;;		line 518 in file "MCAL/EUSART/mcal_EUSART.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  _rx_obj         2   29[COMRAM] PTR const struct .
  6975 ;;		 -> _uart_obj(12), 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  ret_val         1   31[COMRAM] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      unsigned char 
  6980 ;; Registers used:
  6981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;Total ram usage:        3 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 8
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_async_Rx_config
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text34
  7002  004C92                     __ptext34:
  7003                           	callstack 0
  7004  004C92                     _Rx_config_interrupt:
  7005                           	callstack 19
  7006  004C92                     
  7007                           ;MCAL/EUSART/mcal_EUSART.c: 518: static __attribute__((inline)) Std_ReturnType Rx_config
      +                          _interrupt(const uart_rx_config_st *_rx_obj);MCAL/EUSART/mcal_EUSART.c: 519: {;MCAL/EUSA
      +                          RT/mcal_EUSART.c: 521:      Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  7008  004C92  0E01               	movlw	1
  7009  004C94  6E20               	movwf	Rx_config_interrupt@ret_val^0,c
  7010  004C96                     
  7011                           ;MCAL/EUSART/mcal_EUSART.c: 523:     if(((void*)0) == _rx_obj)
  7012  004C96  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  7013  004C98  101F               	iorwf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  7014  004C9A  A4D8               	btfss	status,2,c
  7015  004C9C  EF52  F026         	goto	u11651
  7016  004CA0  EF54  F026         	goto	u11650
  7017  004CA4                     u11651:
  7018  004CA4  EF58  F026         	goto	l803
  7019  004CA8                     u11650:
  7020  004CA8                     
  7021                           ;MCAL/EUSART/mcal_EUSART.c: 524:     {;MCAL/EUSART/mcal_EUSART.c: 525:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  7022  004CA8  0E00               	movlw	0
  7023  004CAA  6E20               	movwf	Rx_config_interrupt@ret_val^0,c
  7024                           
  7025                           ;MCAL/EUSART/mcal_EUSART.c: 526:     }
  7026  004CAC  EF98  F026         	goto	l11341
  7027  004CB0                     l803:
  7028                           
  7029                           ;MCAL/EUSART/mcal_EUSART.c: 528:     {;MCAL/EUSART/mcal_EUSART.c: 530:         (PIE1bits
      +                          .RCIE = 0);
  7030  004CB0  9A9D               	bcf	157,5,c	;volatile
  7031  004CB2                     
  7032                           ;MCAL/EUSART/mcal_EUSART.c: 531:         eusart_Rx_InterruptHandler = _rx_obj->rx_Interr
      +                          uptHandler ;
  7033  004CB2  C01E  FFD9         	movff	Rx_config_interrupt@_rx_obj,fsr2l
  7034  004CB6  C01F  FFDA         	movff	Rx_config_interrupt@_rx_obj+1,fsr2h
  7035  004CBA  CFDE F034          	movff	postinc2,_eusart_Rx_InterruptHandler
  7036  004CBE  CFDD F035          	movff	postdec2,_eusart_Rx_InterruptHandler+1
  7037  004CC2                     
  7038                           ;MCAL/EUSART/mcal_EUSART.c: 532:         eusart_frameerr_CallBack = _rx_obj->ferr_Interr
      +                          uptHandler ;
  7039  004CC2  EE20 F004          	lfsr	2,4
  7040  004CC6  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  7041  004CC8  26D9               	addwf	fsr2l,f,c
  7042  004CCA  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  7043  004CCC  22DA               	addwfc	fsr2h,f,c
  7044  004CCE  CFDE F0C7          	movff	postinc2,_eusart_frameerr_CallBack
  7045  004CD2  CFDD F0C8          	movff	postdec2,_eusart_frameerr_CallBack+1
  7046  004CD6                     
  7047                           ;MCAL/EUSART/mcal_EUSART.c: 533:         eusart_overrunerr_CallBack = _rx_obj->oerr_Inte
      +                          rruptHandler ;
  7048  004CD6  EE20 F002          	lfsr	2,2
  7049  004CDA  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  7050  004CDC  26D9               	addwf	fsr2l,f,c
  7051  004CDE  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  7052  004CE0  22DA               	addwfc	fsr2h,f,c
  7053  004CE2  CFDE F0C9          	movff	postinc2,_eusart_overrunerr_CallBack
  7054  004CE6  CFDD F0CA          	movff	postdec2,_eusart_overrunerr_CallBack+1
  7055  004CEA                     
  7056                           ;MCAL/EUSART/mcal_EUSART.c: 536:                 (RCONbits.IPEN = 1 );
  7057  004CEA  8ED0               	bsf	208,7,c	;volatile
  7058  004CEC                     
  7059                           ;MCAL/EUSART/mcal_EUSART.c: 537:                 if(1 == _rx_obj->uart_rx_priority)
  7060  004CEC  EE20 F006          	lfsr	2,6
  7061  004CF0  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  7062  004CF2  26D9               	addwf	fsr2l,f,c
  7063  004CF4  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  7064  004CF6  22DA               	addwfc	fsr2h,f,c
  7065  004CF8  A0DF               	btfss	indf2,0,c
  7066  004CFA  EF81  F026         	goto	u11661
  7067  004CFE  EF83  F026         	goto	u11660
  7068  004D02                     u11661:
  7069  004D02  EF87  F026         	goto	l11337
  7070  004D06                     u11660:
  7071  004D06                     
  7072                           ;MCAL/EUSART/mcal_EUSART.c: 538:                 {;MCAL/EUSART/mcal_EUSART.c: 539:      
      +                                         (IPR1bits.RCIP = 1);
  7073  004D06  8A9F               	bsf	159,5,c	;volatile
  7074                           
  7075                           ;MCAL/EUSART/mcal_EUSART.c: 540:                     (INTCONbits.GIEH = 1);
  7076  004D08  8EF2               	bsf	242,7,c	;volatile
  7077                           
  7078                           ;MCAL/EUSART/mcal_EUSART.c: 542:                 }
  7079  004D0A  EF97  F026         	goto	l806
  7080  004D0E                     l11337:
  7081  004D0E  EE20 F006          	lfsr	2,6
  7082  004D12  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  7083  004D14  26D9               	addwf	fsr2l,f,c
  7084  004D16  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  7085  004D18  22DA               	addwfc	fsr2h,f,c
  7086  004D1A  B0DF               	btfsc	indf2,0,c
  7087  004D1C  EF92  F026         	goto	u11671
  7088  004D20  EF94  F026         	goto	u11670
  7089  004D24                     u11671:
  7090  004D24  EF97  F026         	goto	l806
  7091  004D28                     u11670:
  7092  004D28                     
  7093                           ;MCAL/EUSART/mcal_EUSART.c: 544:                 {;MCAL/EUSART/mcal_EUSART.c: 545:      
      +                                         (IPR1bits.RCIP = 0);
  7094  004D28  9A9F               	bcf	159,5,c	;volatile
  7095                           
  7096                           ;MCAL/EUSART/mcal_EUSART.c: 546:                     (INTCONbits.GIEH = 1);
  7097  004D2A  8EF2               	bsf	242,7,c	;volatile
  7098                           
  7099                           ;MCAL/EUSART/mcal_EUSART.c: 547:                     (INTCONbits.GIEL = 1);
  7100  004D2C  8CF2               	bsf	242,6,c	;volatile
  7101  004D2E                     l806:
  7102                           
  7103                           ;MCAL/EUSART/mcal_EUSART.c: 555:         (PIE1bits.RCIE = 1);
  7104  004D2E  8A9D               	bsf	157,5,c	;volatile
  7105  004D30                     l11341:
  7106                           
  7107                           ;MCAL/EUSART/mcal_EUSART.c: 560:     return ret_val ;
  7108  004D30  5020               	movf	Rx_config_interrupt@ret_val^0,w,c
  7109  004D32  0012               	return		;funcret
  7110  004D34                     __end_of_Rx_config_interrupt:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function _ADC_Init *****************
  7114 ;; Defined at:
  7115 ;;		line 23 in file "MCAL/ADC/mcal_adc.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  _adc            2   32[COMRAM] PTR const struct .
  7118 ;;		 -> battery_adc(5), 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  ERRORSTATUS     1    0        unsigned char 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      unsigned char 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;Total ram usage:        3 bytes
  7135 ;; Hardware stack levels used: 1
  7136 ;; Hardware stack levels required when called: 9
  7137 ;; This function calls:
  7138 ;;		_adc_channel_pin_config_as_input
  7139 ;;		_adc_select_result_formate
  7140 ;;		_adc_select_voltage_reference
  7141 ;; This function is called by:
  7142 ;;		_application_intialize
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text35
  7147  004D34                     __ptext35:
  7148                           	callstack 0
  7149  004D34                     _ADC_Init:
  7150                           	callstack 20
  7151  004D34                     
  7152                           ;MCAL/ADC/mcal_adc.c: 26:     if (((void*)0)==_adc)
  7153  004D34  5021               	movf	ADC_Init@_adc^0,w,c
  7154  004D36  1022               	iorwf	(ADC_Init@_adc+1)^0,w,c
  7155  004D38  A4D8               	btfss	status,2,c
  7156  004D3A  EFA1  F026         	goto	u12781
  7157  004D3E  EFA3  F026         	goto	u12780
  7158  004D42                     u12781:
  7159  004D42  EFA5  F026         	goto	l382
  7160  004D46                     u12780:
  7161  004D46                     
  7162                           ;MCAL/ADC/mcal_adc.c: 29:     }
  7163  004D46  EFE4  F026         	goto	l384
  7164  004D4A                     l382:
  7165                           
  7166                           ;MCAL/ADC/mcal_adc.c: 31:     {;MCAL/ADC/mcal_adc.c: 33:           (ADCON0bits.ADON=0);
  7167  004D4A  90C2               	bcf	194,0,c	;volatile
  7168  004D4C                     
  7169                           ;MCAL/ADC/mcal_adc.c: 39:          ADCON2bits.ACQT=_adc->acquisition_time;
  7170  004D4C  EE20 F001          	lfsr	2,1
  7171  004D50  5021               	movf	ADC_Init@_adc^0,w,c
  7172  004D52  26D9               	addwf	fsr2l,f,c
  7173  004D54  5022               	movf	(ADC_Init@_adc+1)^0,w,c
  7174  004D56  22DA               	addwfc	fsr2h,f,c
  7175  004D58  50DF               	movf	indf2,w,c
  7176  004D5A  6E23               	movwf	??_ADC_Init^0,c
  7177  004D5C  4623               	rlncf	??_ADC_Init^0,f,c
  7178  004D5E  4623               	rlncf	??_ADC_Init^0,f,c
  7179  004D60  4623               	rlncf	??_ADC_Init^0,f,c
  7180  004D62  50C0               	movf	192,w,c	;volatile
  7181  004D64  1823               	xorwf	??_ADC_Init^0,w,c
  7182  004D66  0BC7               	andlw	-57
  7183  004D68  1823               	xorwf	??_ADC_Init^0,w,c
  7184  004D6A  6EC0               	movwf	192,c	;volatile
  7185                           
  7186                           ;MCAL/ADC/mcal_adc.c: 42:          ADCON2bits.ADCS=_adc->conversion_clock;
  7187  004D6C  EE20 F002          	lfsr	2,2
  7188  004D70  5021               	movf	ADC_Init@_adc^0,w,c
  7189  004D72  26D9               	addwf	fsr2l,f,c
  7190  004D74  5022               	movf	(ADC_Init@_adc+1)^0,w,c
  7191  004D76  22DA               	addwfc	fsr2h,f,c
  7192  004D78  50DF               	movf	indf2,w,c
  7193  004D7A  6E23               	movwf	??_ADC_Init^0,c
  7194  004D7C  50C0               	movf	192,w,c	;volatile
  7195  004D7E  1823               	xorwf	??_ADC_Init^0,w,c
  7196  004D80  0BF8               	andlw	-8
  7197  004D82  1823               	xorwf	??_ADC_Init^0,w,c
  7198  004D84  6EC0               	movwf	192,c	;volatile
  7199                           
  7200                           ;MCAL/ADC/mcal_adc.c: 45:          ADCON0bits.CHS=_adc->adc_channel;
  7201  004D86  C021  FFD9         	movff	ADC_Init@_adc,fsr2l
  7202  004D8A  C022  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  7203  004D8E  50DF               	movf	indf2,w,c
  7204  004D90  6E23               	movwf	??_ADC_Init^0,c
  7205  004D92  4623               	rlncf	??_ADC_Init^0,f,c
  7206  004D94  4623               	rlncf	??_ADC_Init^0,f,c
  7207  004D96  50C2               	movf	194,w,c	;volatile
  7208  004D98  1823               	xorwf	??_ADC_Init^0,w,c
  7209  004D9A  0BC3               	andlw	-61
  7210  004D9C  1823               	xorwf	??_ADC_Init^0,w,c
  7211  004D9E  6EC2               	movwf	194,c	;volatile
  7212  004DA0                     
  7213                           ;MCAL/ADC/mcal_adc.c: 48:         adc_channel_pin_config_as_input(_adc->adc_channel);
  7214  004DA0  C021  FFD9         	movff	ADC_Init@_adc,fsr2l
  7215  004DA4  C022  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  7216  004DA8  50DF               	movf	indf2,w,c
  7217  004DAA  EC51  F01F         	call	_adc_channel_pin_config_as_input
  7218  004DAE                     
  7219                           ;MCAL/ADC/mcal_adc.c: 51:          adc_select_result_formate(_adc);
  7220  004DAE  C021  F01E         	movff	ADC_Init@_adc,adc_select_result_formate@_adc
  7221  004DB2  C022  F01F         	movff	ADC_Init@_adc+1,adc_select_result_formate@_adc+1
  7222  004DB6  ECF9  F02B         	call	_adc_select_result_formate	;wreg free
  7223  004DBA                     
  7224                           ;MCAL/ADC/mcal_adc.c: 54:          adc_select_voltage_reference(_adc);
  7225  004DBA  C021  F01E         	movff	ADC_Init@_adc,adc_select_voltage_reference@_adc
  7226  004DBE  C022  F01F         	movff	ADC_Init@_adc+1,adc_select_voltage_reference@_adc+1
  7227  004DC2  EC97  F02B         	call	_adc_select_voltage_reference	;wreg free
  7228  004DC6                     
  7229                           ;MCAL/ADC/mcal_adc.c: 83:          (ADCON0bits.ADON=1);
  7230  004DC6  80C2               	bsf	194,0,c	;volatile
  7231  004DC8                     l384:
  7232  004DC8  0012               	return		;funcret
  7233  004DCA                     __end_of_ADC_Init:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function _adc_select_voltage_reference *****************
  7237 ;; Defined at:
  7238 ;;		line 315 in file "MCAL/ADC/mcal_adc.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  _adc            2   29[COMRAM] PTR const struct .
  7241 ;;		 -> battery_adc(5), 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  ERRORSTATUS     1    0        unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      unsigned char 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7256 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;Total ram usage:        3 bytes
  7258 ;; Hardware stack levels used: 1
  7259 ;; Hardware stack levels required when called: 8
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_ADC_Init
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text36
  7268  00572E                     __ptext36:
  7269                           	callstack 0
  7270  00572E                     _adc_select_voltage_reference:
  7271                           	callstack 20
  7272  00572E                     
  7273                           ;MCAL/ADC/mcal_adc.c: 318:     if (((void*)0)==_adc)
  7274  00572E  501E               	movf	adc_select_voltage_reference@_adc^0,w,c
  7275  005730  101F               	iorwf	(adc_select_voltage_reference@_adc+1)^0,w,c
  7276  005732  A4D8               	btfss	status,2,c
  7277  005734  EF9E  F02B         	goto	u12091
  7278  005738  EFA0  F02B         	goto	u12090
  7279  00573C                     u12091:
  7280  00573C  EFA2  F02B         	goto	l11589
  7281  005740                     u12090:
  7282  005740                     
  7283                           ;MCAL/ADC/mcal_adc.c: 321:     }
  7284  005740  EFC8  F02B         	goto	l474
  7285  005744                     l11589:
  7286                           
  7287                           ;MCAL/ADC/mcal_adc.c: 323:     {;MCAL/ADC/mcal_adc.c: 324:          if(ADC_VOLTAGE_REFER
      +                          ANCE_INTERNAL==_adc->voltage_referance)
  7288  005744  EE20 F004          	lfsr	2,4
  7289  005748  501E               	movf	adc_select_voltage_reference@_adc^0,w,c
  7290  00574A  26D9               	addwf	fsr2l,f,c
  7291  00574C  501F               	movf	(adc_select_voltage_reference@_adc+1)^0,w,c
  7292  00574E  22DA               	addwfc	fsr2h,f,c
  7293  005750  50DF               	movf	indf2,w,c
  7294  005752  A4D8               	btfss	status,2,c
  7295  005754  EFAE  F02B         	goto	u12101
  7296  005758  EFB0  F02B         	goto	u12100
  7297  00575C                     u12101:
  7298  00575C  EFB4  F02B         	goto	l11591
  7299  005760                     u12100:
  7300  005760  9AC1               	bcf	193,5,c	;volatile
  7301  005762  98C1               	bcf	193,4,c	;volatile
  7302  005764  EFC8  F02B         	goto	l474
  7303  005768                     l11591:
  7304  005768  EE20 F004          	lfsr	2,4
  7305  00576C  501E               	movf	adc_select_voltage_reference@_adc^0,w,c
  7306  00576E  26D9               	addwf	fsr2l,f,c
  7307  005770  501F               	movf	(adc_select_voltage_reference@_adc+1)^0,w,c
  7308  005772  22DA               	addwfc	fsr2h,f,c
  7309  005774  04DE               	decf	postinc2,w,c
  7310  005776  A4D8               	btfss	status,2,c
  7311  005778  EFC0  F02B         	goto	u12111
  7312  00577C  EFC2  F02B         	goto	u12110
  7313  005780                     u12111:
  7314  005780  EFC6  F02B         	goto	l472
  7315  005784                     u12110:
  7316  005784  8AC1               	bsf	193,5,c	;volatile
  7317  005786  88C1               	bsf	193,4,c	;volatile
  7318  005788  EFC8  F02B         	goto	l474
  7319  00578C                     l472:
  7320  00578C  9AC1               	bcf	193,5,c	;volatile
  7321  00578E  98C1               	bcf	193,4,c	;volatile
  7322  005790                     l474:
  7323  005790  0012               	return		;funcret
  7324  005792                     __end_of_adc_select_voltage_reference:
  7325                           	callstack 0
  7326                           
  7327 ;; *************** function _adc_select_result_formate *****************
  7328 ;; Defined at:
  7329 ;;		line 291 in file "MCAL/ADC/mcal_adc.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  _adc            2   29[COMRAM] PTR const struct .
  7332 ;;		 -> battery_adc(5), 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  ERRORSTATUS     1    0        unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      unsigned char 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;Total ram usage:        3 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 8
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_ADC_Init
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text37
  7359  0057F2                     __ptext37:
  7360                           	callstack 0
  7361  0057F2                     _adc_select_result_formate:
  7362                           	callstack 20
  7363  0057F2                     
  7364                           ;MCAL/ADC/mcal_adc.c: 294:     if (((void*)0)==_adc)
  7365  0057F2  501E               	movf	adc_select_result_formate@_adc^0,w,c
  7366  0057F4  101F               	iorwf	(adc_select_result_formate@_adc+1)^0,w,c
  7367  0057F6  A4D8               	btfss	status,2,c
  7368  0057F8  EF00  F02C         	goto	u12061
  7369  0057FC  EF02  F02C         	goto	u12060
  7370  005800                     u12061:
  7371  005800  EF04  F02C         	goto	l11575
  7372  005804                     u12060:
  7373  005804                     
  7374                           ;MCAL/ADC/mcal_adc.c: 297:     }
  7375  005804  EF27  F02C         	goto	l459
  7376  005808                     l11575:
  7377                           
  7378                           ;MCAL/ADC/mcal_adc.c: 299:     {;MCAL/ADC/mcal_adc.c: 300:          if(ADC_RESULT_LEFT==
      +                          _adc->result_format)
  7379  005808  EE20 F003          	lfsr	2,3
  7380  00580C  501E               	movf	adc_select_result_formate@_adc^0,w,c
  7381  00580E  26D9               	addwf	fsr2l,f,c
  7382  005810  501F               	movf	(adc_select_result_formate@_adc+1)^0,w,c
  7383  005812  22DA               	addwfc	fsr2h,f,c
  7384  005814  50DF               	movf	indf2,w,c
  7385  005816  A4D8               	btfss	status,2,c
  7386  005818  EF10  F02C         	goto	u12071
  7387  00581C  EF12  F02C         	goto	u12070
  7388  005820                     u12071:
  7389  005820  EF15  F02C         	goto	l11579
  7390  005824                     u12070:
  7391  005824                     
  7392                           ;MCAL/ADC/mcal_adc.c: 301:          {;MCAL/ADC/mcal_adc.c: 302:              (ADCON2bits
      +                          .ADFM=0);
  7393  005824  9EC0               	bcf	192,7,c	;volatile
  7394                           
  7395                           ;MCAL/ADC/mcal_adc.c: 303:          }
  7396  005826  EF27  F02C         	goto	l459
  7397  00582A                     l11579:
  7398  00582A  EE20 F003          	lfsr	2,3
  7399  00582E  501E               	movf	adc_select_result_formate@_adc^0,w,c
  7400  005830  26D9               	addwf	fsr2l,f,c
  7401  005832  501F               	movf	(adc_select_result_formate@_adc+1)^0,w,c
  7402  005834  22DA               	addwfc	fsr2h,f,c
  7403  005836  04DE               	decf	postinc2,w,c
  7404  005838  A4D8               	btfss	status,2,c
  7405  00583A  EF21  F02C         	goto	u12081
  7406  00583E  EF23  F02C         	goto	u12080
  7407  005842                     u12081:
  7408  005842  EF26  F02C         	goto	l457
  7409  005846                     u12080:
  7410  005846                     
  7411                           ;MCAL/ADC/mcal_adc.c: 305:          {;MCAL/ADC/mcal_adc.c: 306:              (ADCON2bits
      +                          .ADFM=1);
  7412  005846  8EC0               	bsf	192,7,c	;volatile
  7413                           
  7414                           ;MCAL/ADC/mcal_adc.c: 307:          }
  7415  005848  EF27  F02C         	goto	l459
  7416  00584C                     l457:
  7417                           
  7418                           ;MCAL/ADC/mcal_adc.c: 309:          {;MCAL/ADC/mcal_adc.c: 310:              (ADCON2bits
      +                          .ADFM=1);
  7419  00584C  8EC0               	bsf	192,7,c	;volatile
  7420  00584E                     l459:
  7421  00584E  0012               	return		;funcret
  7422  005850                     __end_of_adc_select_result_formate:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _adc_channel_pin_config_as_input *****************
  7426 ;; Defined at:
  7427 ;;		line 269 in file "MCAL/ADC/mcal_adc.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  _channel        1    wreg     const enum E3254
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  _channel        1   31[COMRAM] const enum E3254
  7432 ;;  ERRORSTATUS     1    0        unsigned char 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      unsigned char 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;Total ram usage:        3 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 8
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_ADC_Init
  7453 ;;		_ADC_select_channel
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text38
  7458  003EA2                     __ptext38:
  7459                           	callstack 0
  7460  003EA2                     _adc_channel_pin_config_as_input:
  7461                           	callstack 19
  7462                           
  7463                           ;incstack = 0
  7464                           ;adc_channel_pin_config_as_input@_channel stored from wreg
  7465  003EA2  6E20               	movwf	adc_channel_pin_config_as_input@_channel^0,c
  7466  003EA4                     
  7467                           ;MCAL/ADC/mcal_adc.c: 272:        switch (_channel)
  7468  003EA4  EF7B  F01F         	goto	l11149
  7469  003EA8                     l11121:
  7470  003EA8  8092               	bsf	146,0,c	;volatile
  7471  003EAA  EFBC  F01F         	goto	l450
  7472  003EAE                     l11123:
  7473  003EAE  8292               	bsf	146,1,c	;volatile
  7474  003EB0  EFBC  F01F         	goto	l450
  7475  003EB4                     l11125:
  7476  003EB4  8492               	bsf	146,2,c	;volatile
  7477  003EB6  EFBC  F01F         	goto	l450
  7478  003EBA                     l11127:
  7479  003EBA  8692               	bsf	146,3,c	;volatile
  7480  003EBC  EFBC  F01F         	goto	l450
  7481  003EC0                     l11129:
  7482  003EC0  8A92               	bsf	146,5,c	;volatile
  7483  003EC2  EFBC  F01F         	goto	l450
  7484  003EC6                     l11131:
  7485  003EC6  8096               	bsf	150,0,c	;volatile
  7486  003EC8  EFBC  F01F         	goto	l450
  7487  003ECC                     l11133:
  7488  003ECC  8296               	bsf	150,1,c	;volatile
  7489  003ECE  EFBC  F01F         	goto	l450
  7490  003ED2                     l11135:
  7491  003ED2  8496               	bsf	150,2,c	;volatile
  7492  003ED4  EFBC  F01F         	goto	l450
  7493  003ED8                     l11137:
  7494  003ED8  8493               	bsf	147,2,c	;volatile
  7495  003EDA  EFBC  F01F         	goto	l450
  7496  003EDE                     l11139:
  7497  003EDE  8693               	bsf	147,3,c	;volatile
  7498  003EE0  EFBC  F01F         	goto	l450
  7499  003EE4                     l11141:
  7500  003EE4  8293               	bsf	147,1,c	;volatile
  7501  003EE6  EFBC  F01F         	goto	l450
  7502  003EEA                     l11143:
  7503  003EEA  8893               	bsf	147,4,c	;volatile
  7504  003EEC  EFBC  F01F         	goto	l450
  7505  003EF0                     l11145:
  7506  003EF0  8093               	bsf	147,0,c	;volatile
  7507  003EF2  EFBC  F01F         	goto	l450
  7508  003EF6                     l11149:
  7509  003EF6  5020               	movf	adc_channel_pin_config_as_input@_channel^0,w,c
  7510  003EF8  6E1E               	movwf	??_adc_channel_pin_config_as_input^0,c
  7511  003EFA  6A1F               	clrf	(??_adc_channel_pin_config_as_input+1)^0,c
  7512                           
  7513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7514                           ; Switch size 1, requested type "simple"
  7515                           ; Number of cases is 1, Range of values is 0 to 0
  7516                           ; switch strategies available:
  7517                           ; Name         Instructions Cycles
  7518                           ; simple_byte            4     3 (average)
  7519                           ;	Chosen strategy is simple_byte
  7520  003EFC  501F               	movf	(??_adc_channel_pin_config_as_input+1)^0,w,c
  7521  003EFE  0A00               	xorlw	0	; case 0
  7522  003F00  B4D8               	btfsc	status,2,c
  7523  003F02  EF85  F01F         	goto	l13497
  7524  003F06  EFBC  F01F         	goto	l450
  7525  003F0A                     l13497:
  7526                           
  7527                           ; Switch size 1, requested type "simple"
  7528                           ; Number of cases is 13, Range of values is 0 to 12
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte           40    21 (average)
  7532                           ;	Chosen strategy is simple_byte
  7533  003F0A  501E               	movf	??_adc_channel_pin_config_as_input^0,w,c
  7534  003F0C  0A00               	xorlw	0	; case 0
  7535  003F0E  B4D8               	btfsc	status,2,c
  7536  003F10  EF54  F01F         	goto	l11121
  7537  003F14  0A01               	xorlw	1	; case 1
  7538  003F16  B4D8               	btfsc	status,2,c
  7539  003F18  EF57  F01F         	goto	l11123
  7540  003F1C  0A03               	xorlw	3	; case 2
  7541  003F1E  B4D8               	btfsc	status,2,c
  7542  003F20  EF5A  F01F         	goto	l11125
  7543  003F24  0A01               	xorlw	1	; case 3
  7544  003F26  B4D8               	btfsc	status,2,c
  7545  003F28  EF5D  F01F         	goto	l11127
  7546  003F2C  0A07               	xorlw	7	; case 4
  7547  003F2E  B4D8               	btfsc	status,2,c
  7548  003F30  EF60  F01F         	goto	l11129
  7549  003F34  0A01               	xorlw	1	; case 5
  7550  003F36  B4D8               	btfsc	status,2,c
  7551  003F38  EF63  F01F         	goto	l11131
  7552  003F3C  0A03               	xorlw	3	; case 6
  7553  003F3E  B4D8               	btfsc	status,2,c
  7554  003F40  EF66  F01F         	goto	l11133
  7555  003F44  0A01               	xorlw	1	; case 7
  7556  003F46  B4D8               	btfsc	status,2,c
  7557  003F48  EF69  F01F         	goto	l11135
  7558  003F4C  0A0F               	xorlw	15	; case 8
  7559  003F4E  B4D8               	btfsc	status,2,c
  7560  003F50  EF6C  F01F         	goto	l11137
  7561  003F54  0A01               	xorlw	1	; case 9
  7562  003F56  B4D8               	btfsc	status,2,c
  7563  003F58  EF6F  F01F         	goto	l11139
  7564  003F5C  0A03               	xorlw	3	; case 10
  7565  003F5E  B4D8               	btfsc	status,2,c
  7566  003F60  EF72  F01F         	goto	l11141
  7567  003F64  0A01               	xorlw	1	; case 11
  7568  003F66  B4D8               	btfsc	status,2,c
  7569  003F68  EF75  F01F         	goto	l11143
  7570  003F6C  0A07               	xorlw	7	; case 12
  7571  003F6E  B4D8               	btfsc	status,2,c
  7572  003F70  EF78  F01F         	goto	l11145
  7573  003F74  EFBC  F01F         	goto	l450
  7574  003F78                     l450:
  7575  003F78  0012               	return		;funcret
  7576  003F7A                     __end_of_adc_channel_pin_config_as_input:
  7577                           	callstack 0
  7578                           
  7579 ;; *************** function ___awmod *****************
  7580 ;; Defined at:
  7581 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  dividend        2    8[BANK1 ] int 
  7584 ;;  divisor         2   10[BANK1 ] int 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  sign            1   81[BANK0 ] unsigned char 
  7587 ;;  counter         1   80[BANK0 ] unsigned char 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  2    8[BANK1 ] int 
  7590 ;; Registers used:
  7591 ;;		wreg, status,2, status,0
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7597 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;Total ram usage:        6 bytes
  7602 ;; Hardware stack levels used: 1
  7603 ;; Hardware stack levels required when called: 8
  7604 ;; This function calls:
  7605 ;;		Nothing
  7606 ;; This function is called by:
  7607 ;;		_main
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text39
  7612  004048                     __ptext39:
  7613                           	callstack 0
  7614  004048                     ___awmod:
  7615                           	callstack 22
  7616  004048  0E00               	movlw	0
  7617  00404A  0100               	movlb	0	; () banked
  7618  00404C  6FB1               	movwf	___awmod@sign& (0+255),b
  7619  00404E                     
  7620                           ; BSR set to: 0
  7621  00404E  0101               	movlb	1	; () banked
  7622  004050  BF6F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  7623  004052  EF2F  F020         	goto	u13350
  7624  004056  EF2D  F020         	goto	u13351
  7625  00405A                     u13351:
  7626  00405A  EF36  F020         	goto	l12687
  7627  00405E                     u13350:
  7628  00405E                     
  7629                           ; BSR set to: 1
  7630  00405E  6D6E               	negf	___awmod@dividend& (0+255),b
  7631  004060  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  7632  004062  B0D8               	btfsc	status,0,c
  7633  004064  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  7634  004066                     
  7635                           ; BSR set to: 1
  7636  004066  0E01               	movlw	1
  7637  004068  0100               	movlb	0	; () banked
  7638  00406A  6FB1               	movwf	___awmod@sign& (0+255),b
  7639  00406C                     l12687:
  7640  00406C  0101               	movlb	1	; () banked
  7641  00406E  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7642  004070  EF3E  F020         	goto	u13360
  7643  004074  EF3C  F020         	goto	u13361
  7644  004078                     u13361:
  7645  004078  EF42  F020         	goto	l12691
  7646  00407C                     u13360:
  7647  00407C                     
  7648                           ; BSR set to: 1
  7649  00407C  6D70               	negf	___awmod@divisor& (0+255),b
  7650  00407E  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  7651  004080  B0D8               	btfsc	status,0,c
  7652  004082  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  7653  004084                     l12691:
  7654                           
  7655                           ; BSR set to: 1
  7656  004084  5170               	movf	___awmod@divisor& (0+255),w,b
  7657  004086  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7658  004088  B4D8               	btfsc	status,2,c
  7659  00408A  EF49  F020         	goto	u13371
  7660  00408E  EF4B  F020         	goto	u13370
  7661  004092                     u13371:
  7662  004092  EF74  F020         	goto	l12707
  7663  004096                     u13370:
  7664  004096                     
  7665                           ; BSR set to: 1
  7666  004096  0E01               	movlw	1
  7667  004098  0100               	movlb	0	; () banked
  7668  00409A  6FB0               	movwf	___awmod@counter& (0+255),b
  7669  00409C  EF55  F020         	goto	l12697
  7670  0040A0                     l12695:
  7671                           
  7672                           ; BSR set to: 1
  7673  0040A0  90D8               	bcf	status,0,c
  7674  0040A2  3770               	rlcf	___awmod@divisor& (0+255),f,b
  7675  0040A4  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7676  0040A6  0100               	movlb	0	; () banked
  7677  0040A8  2BB0               	incf	___awmod@counter& (0+255),f,b
  7678  0040AA                     l12697:
  7679                           
  7680                           ; BSR set to: 0
  7681  0040AA  0101               	movlb	1	; () banked
  7682  0040AC  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7683  0040AE  EF5B  F020         	goto	u13381
  7684  0040B2  EF5D  F020         	goto	u13380
  7685  0040B6                     u13381:
  7686  0040B6  EF50  F020         	goto	l12695
  7687  0040BA                     u13380:
  7688  0040BA                     l12699:
  7689  0040BA  0101               	movlb	1	; () banked
  7690  0040BC  5170               	movf	___awmod@divisor& (0+255),w,b
  7691  0040BE  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  7692  0040C0  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  7693  0040C2  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7694  0040C4  A0D8               	btfss	status,0,c
  7695  0040C6  EF67  F020         	goto	u13391
  7696  0040CA  EF69  F020         	goto	u13390
  7697  0040CE                     u13391:
  7698  0040CE  EF6D  F020         	goto	l12703
  7699  0040D2                     u13390:
  7700  0040D2                     
  7701                           ; BSR set to: 1
  7702  0040D2  5170               	movf	___awmod@divisor& (0+255),w,b
  7703  0040D4  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  7704  0040D6  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  7705  0040D8  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7706  0040DA                     l12703:
  7707                           
  7708                           ; BSR set to: 1
  7709  0040DA  90D8               	bcf	status,0,c
  7710  0040DC  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7711  0040DE  3370               	rrcf	___awmod@divisor& (0+255),f,b
  7712  0040E0                     
  7713                           ; BSR set to: 1
  7714  0040E0  0100               	movlb	0	; () banked
  7715  0040E2  2FB0               	decfsz	___awmod@counter& (0+255),f,b
  7716  0040E4  EF5D  F020         	goto	l12699
  7717  0040E8                     l12707:
  7718  0040E8  0100               	movlb	0	; () banked
  7719  0040EA  51B1               	movf	___awmod@sign& (0+255),w,b
  7720  0040EC  B4D8               	btfsc	status,2,c
  7721  0040EE  EF7B  F020         	goto	u13401
  7722  0040F2  EF7D  F020         	goto	u13400
  7723  0040F6                     u13401:
  7724  0040F6  EF82  F020         	goto	l12711
  7725  0040FA                     u13400:
  7726  0040FA                     
  7727                           ; BSR set to: 0
  7728  0040FA  0101               	movlb	1	; () banked
  7729  0040FC  6D6E               	negf	___awmod@dividend& (0+255),b
  7730  0040FE  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  7731  004100  B0D8               	btfsc	status,0,c
  7732  004102  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  7733  004104                     l12711:
  7734  004104  C16E  F16E         	movff	___awmod@dividend,?___awmod
  7735  004108  C16F  F16F         	movff	___awmod@dividend+1,?___awmod+1
  7736  00410C  0012               	return		;funcret
  7737  00410E                     __end_of___awmod:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function ___awdiv *****************
  7741 ;; Defined at:
  7742 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  dividend        2   12[BANK1 ] int 
  7745 ;;  divisor         2   14[BANK1 ] int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  quotient        2   18[BANK1 ] int 
  7748 ;;  sign            1   17[BANK1 ] unsigned char 
  7749 ;;  counter         1   16[BANK1 ] unsigned char 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  2   12[BANK1 ] int 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7759 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;Total ram usage:        8 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 8
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_main
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text40
  7774  00410E                     __ptext40:
  7775                           	callstack 0
  7776  00410E                     ___awdiv:
  7777                           	callstack 22
  7778  00410E  0E00               	movlw	0
  7779  004110  0101               	movlb	1	; () banked
  7780  004112  6F77               	movwf	___awdiv@sign& (0+255),b
  7781  004114                     
  7782                           ; BSR set to: 1
  7783  004114  BF75               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7784  004116  EF91  F020         	goto	u13290
  7785  00411A  EF8F  F020         	goto	u13291
  7786  00411E                     u13291:
  7787  00411E  EF97  F020         	goto	l12643
  7788  004122                     u13290:
  7789  004122                     
  7790                           ; BSR set to: 1
  7791  004122  6D74               	negf	___awdiv@divisor& (0+255),b
  7792  004124  1F75               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7793  004126  B0D8               	btfsc	status,0,c
  7794  004128  2B75               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7795  00412A                     
  7796                           ; BSR set to: 1
  7797  00412A  0E01               	movlw	1
  7798  00412C  6F77               	movwf	___awdiv@sign& (0+255),b
  7799  00412E                     l12643:
  7800                           
  7801                           ; BSR set to: 1
  7802  00412E  BF73               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7803  004130  EF9E  F020         	goto	u13300
  7804  004134  EF9C  F020         	goto	u13301
  7805  004138                     u13301:
  7806  004138  EFA4  F020         	goto	l12649
  7807  00413C                     u13300:
  7808  00413C                     
  7809                           ; BSR set to: 1
  7810  00413C  6D72               	negf	___awdiv@dividend& (0+255),b
  7811  00413E  1F73               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7812  004140  B0D8               	btfsc	status,0,c
  7813  004142  2B73               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7814  004144                     
  7815                           ; BSR set to: 1
  7816  004144  0E01               	movlw	1
  7817  004146  1B77               	xorwf	___awdiv@sign& (0+255),f,b
  7818  004148                     l12649:
  7819                           
  7820                           ; BSR set to: 1
  7821  004148  0E00               	movlw	0
  7822  00414A  6F79               	movwf	(___awdiv@quotient+1)& (0+255),b
  7823  00414C  0E00               	movlw	0
  7824  00414E  6F78               	movwf	___awdiv@quotient& (0+255),b
  7825  004150                     
  7826                           ; BSR set to: 1
  7827  004150  5174               	movf	___awdiv@divisor& (0+255),w,b
  7828  004152  1175               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7829  004154  B4D8               	btfsc	status,2,c
  7830  004156  EFAF  F020         	goto	u13311
  7831  00415A  EFB1  F020         	goto	u13310
  7832  00415E                     u13311:
  7833  00415E  EFD9  F020         	goto	l12671
  7834  004162                     u13310:
  7835  004162                     
  7836                           ; BSR set to: 1
  7837  004162  0E01               	movlw	1
  7838  004164  6F76               	movwf	___awdiv@counter& (0+255),b
  7839  004166  EFB9  F020         	goto	l12657
  7840  00416A                     l12655:
  7841                           
  7842                           ; BSR set to: 1
  7843  00416A  90D8               	bcf	status,0,c
  7844  00416C  3774               	rlcf	___awdiv@divisor& (0+255),f,b
  7845  00416E  3775               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7846  004170  2B76               	incf	___awdiv@counter& (0+255),f,b
  7847  004172                     l12657:
  7848                           
  7849                           ; BSR set to: 1
  7850  004172  AF75               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7851  004174  EFBE  F020         	goto	u13321
  7852  004178  EFC0  F020         	goto	u13320
  7853  00417C                     u13321:
  7854  00417C  EFB5  F020         	goto	l12655
  7855  004180                     u13320:
  7856  004180                     l12659:
  7857                           
  7858                           ; BSR set to: 1
  7859  004180  90D8               	bcf	status,0,c
  7860  004182  3778               	rlcf	___awdiv@quotient& (0+255),f,b
  7861  004184  3779               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7862  004186                     
  7863                           ; BSR set to: 1
  7864  004186  5174               	movf	___awdiv@divisor& (0+255),w,b
  7865  004188  5D72               	subwf	___awdiv@dividend& (0+255),w,b
  7866  00418A  5175               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7867  00418C  5973               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7868  00418E  A0D8               	btfss	status,0,c
  7869  004190  EFCC  F020         	goto	u13331
  7870  004194  EFCE  F020         	goto	u13330
  7871  004198                     u13331:
  7872  004198  EFD3  F020         	goto	l12667
  7873  00419C                     u13330:
  7874  00419C                     
  7875                           ; BSR set to: 1
  7876  00419C  5174               	movf	___awdiv@divisor& (0+255),w,b
  7877  00419E  5F72               	subwf	___awdiv@dividend& (0+255),f,b
  7878  0041A0  5175               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7879  0041A2  5B73               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7880  0041A4                     
  7881                           ; BSR set to: 1
  7882  0041A4  8178               	bsf	___awdiv@quotient& (0+255),0,b
  7883  0041A6                     l12667:
  7884                           
  7885                           ; BSR set to: 1
  7886  0041A6  90D8               	bcf	status,0,c
  7887  0041A8  3375               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7888  0041AA  3374               	rrcf	___awdiv@divisor& (0+255),f,b
  7889  0041AC                     
  7890                           ; BSR set to: 1
  7891  0041AC  2F76               	decfsz	___awdiv@counter& (0+255),f,b
  7892  0041AE  EFC0  F020         	goto	l12659
  7893  0041B2                     l12671:
  7894                           
  7895                           ; BSR set to: 1
  7896  0041B2  5177               	movf	___awdiv@sign& (0+255),w,b
  7897  0041B4  B4D8               	btfsc	status,2,c
  7898  0041B6  EFDF  F020         	goto	u13341
  7899  0041BA  EFE1  F020         	goto	u13340
  7900  0041BE                     u13341:
  7901  0041BE  EFE5  F020         	goto	l12675
  7902  0041C2                     u13340:
  7903  0041C2                     
  7904                           ; BSR set to: 1
  7905  0041C2  6D78               	negf	___awdiv@quotient& (0+255),b
  7906  0041C4  1F79               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7907  0041C6  B0D8               	btfsc	status,0,c
  7908  0041C8  2B79               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7909  0041CA                     l12675:
  7910                           
  7911                           ; BSR set to: 1
  7912  0041CA  C178  F172         	movff	___awdiv@quotient,?___awdiv
  7913  0041CE  C179  F173         	movff	___awdiv@quotient+1,?___awdiv+1
  7914  0041D2                     
  7915                           ; BSR set to: 1
  7916  0041D2  0012               	return		;funcret
  7917  0041D4                     __end_of___awdiv:
  7918                           	callstack 0
  7919                           
  7920 ;; *************** function _Robot_Steer_Right_Forward *****************
  7921 ;; Defined at:
  7922 ;;		line 108 in file "Robot/Navigation/robot_navigation.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  ret_val         1    0        unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      unsigned char 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used: 1
  7942 ;; Hardware stack levels required when called: 11
  7943 ;; This function calls:
  7944 ;;		_CCP_PWM_Set_Duty
  7945 ;;		_ECU_DC_Motor_Run_Right
  7946 ;;		_Robot_Steer_Stop
  7947 ;;		_Servo_SetAngle
  7948 ;; This function is called by:
  7949 ;;		_main
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text41
  7954  0041D4                     __ptext41:
  7955                           	callstack 0
  7956  0041D4                     _Robot_Steer_Right_Forward:
  7957                           	callstack 19
  7958  0041D4                     
  7959                           ;Robot/Navigation/robot_navigation.c: 113:       Movement_State = NAV_MOV_FORW_STEER_RIG
      +                          HT ;
  7960  0041D4  0E02               	movlw	2
  7961  0041D6  0100               	movlb	0	; () banked
  7962  0041D8  6FCF               	movwf	_Movement_State& (0+255),b
  7963  0041DA                     
  7964                           ; BSR set to: 0
  7965                           ;Robot/Navigation/robot_navigation.c: 115:       Robot_Steer_Stop();
  7966  0041DA  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  7967  0041DE                     
  7968                           ;Robot/Navigation/robot_navigation.c: 117:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 135 );
  7969  0041DE  0EEB               	movlw	low _i2c_obj
  7970  0041E0  0101               	movlb	1	; () banked
  7971  0041E2  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  7972  0041E4  0E00               	movlw	high _i2c_obj
  7973  0041E6  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  7974  0041E8  0EF2               	movlw	low _servo_driver_obj
  7975  0041EA  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  7976  0041EC  0E00               	movlw	high _servo_driver_obj
  7977  0041EE  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  7978  0041F0  0E00               	movlw	0
  7979  0041F2  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  7980  0041F4  0E87               	movlw	135
  7981  0041F6  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  7982  0041F8  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  7983  0041FC                     
  7984                           ;Robot/Navigation/robot_navigation.c: 118:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 120 );
  7985  0041FC  0EEB               	movlw	low _i2c_obj
  7986  0041FE  0101               	movlb	1	; () banked
  7987  004200  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  7988  004202  0E00               	movlw	high _i2c_obj
  7989  004204  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  7990  004206  0EF2               	movlw	low _servo_driver_obj
  7991  004208  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  7992  00420A  0E00               	movlw	high _servo_driver_obj
  7993  00420C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  7994  00420E  0E01               	movlw	1
  7995  004210  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  7996  004212  0E78               	movlw	120
  7997  004214  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  7998  004216  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  7999  00421A                     
  8000                           ;Robot/Navigation/robot_navigation.c: 119:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 45 );
  8001  00421A  0EEB               	movlw	low _i2c_obj
  8002  00421C  0101               	movlb	1	; () banked
  8003  00421E  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8004  004220  0E00               	movlw	high _i2c_obj
  8005  004222  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8006  004224  0EF2               	movlw	low _servo_driver_obj
  8007  004226  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8008  004228  0E00               	movlw	high _servo_driver_obj
  8009  00422A  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8010  00422C  0E02               	movlw	2
  8011  00422E  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8012  004230  0E2D               	movlw	45
  8013  004232  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8014  004234  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8015  004238                     
  8016                           ;Robot/Navigation/robot_navigation.c: 120:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 30 );
  8017  004238  0EEB               	movlw	low _i2c_obj
  8018  00423A  0101               	movlb	1	; () banked
  8019  00423C  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8020  00423E  0E00               	movlw	high _i2c_obj
  8021  004240  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8022  004242  0EF2               	movlw	low _servo_driver_obj
  8023  004244  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8024  004246  0E00               	movlw	high _servo_driver_obj
  8025  004248  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8026  00424A  0E03               	movlw	3
  8027  00424C  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8028  00424E  0E1E               	movlw	30
  8029  004250  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8030  004252  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8031  004256                     
  8032                           ;Robot/Navigation/robot_navigation.c: 122:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  8033  004256  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8034  004258  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8035  00425A  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8036  00425C  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8037  00425E  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8038  004262                     
  8039                           ;Robot/Navigation/robot_navigation.c: 123:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  8040  004262  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8041  004264  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8042  004266  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8043  004268  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8044  00426A  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8045  00426E                     
  8046                           ;Robot/Navigation/robot_navigation.c: 125:       CCP_PWM_Set_Duty(&CCP1_Obj , 85);
  8047  00426E  0E2C               	movlw	low _CCP1_Obj
  8048  004270  0100               	movlb	0	; () banked
  8049  004272  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8050  004274  0E01               	movlw	high _CCP1_Obj
  8051  004276  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8052  004278  0E55               	movlw	85
  8053  00427A  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8054  00427C  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8055  004280                     
  8056                           ;Robot/Navigation/robot_navigation.c: 126:       CCP_PWM_Set_Duty(&CCP2_Obj , 45);
  8057  004280  0E20               	movlw	low _CCP2_Obj
  8058  004282  0100               	movlb	0	; () banked
  8059  004284  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8060  004286  0E01               	movlw	high _CCP2_Obj
  8061  004288  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8062  00428A  0E2D               	movlw	45
  8063  00428C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8064  00428E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8065  004292  0012               	return		;funcret
  8066  004294                     __end_of_Robot_Steer_Right_Forward:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function _Robot_Steer_Right_Backward *****************
  8070 ;; Defined at:
  8071 ;;		line 151 in file "Robot/Navigation/robot_navigation.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  ret_val         1    0        unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      unsigned char 
  8078 ;; Registers used:
  8079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 11
  8092 ;; This function calls:
  8093 ;;		_CCP_PWM_Set_Duty
  8094 ;;		_ECU_DC_Motor_Run_Left
  8095 ;;		_Robot_Steer_Stop
  8096 ;;		_Servo_SetAngle
  8097 ;; This function is called by:
  8098 ;;		_main
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text42
  8103  004712                     __ptext42:
  8104                           	callstack 0
  8105  004712                     _Robot_Steer_Right_Backward:
  8106                           	callstack 19
  8107  004712                     
  8108                           ;Robot/Navigation/robot_navigation.c: 156:       Robot_Steer_Stop();
  8109  004712  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  8110  004716                     
  8111                           ;Robot/Navigation/robot_navigation.c: 158:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 135 );
  8112  004716  0EEB               	movlw	low _i2c_obj
  8113  004718  0101               	movlb	1	; () banked
  8114  00471A  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8115  00471C  0E00               	movlw	high _i2c_obj
  8116  00471E  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8117  004720  0EF2               	movlw	low _servo_driver_obj
  8118  004722  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8119  004724  0E00               	movlw	high _servo_driver_obj
  8120  004726  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8121  004728  0E00               	movlw	0
  8122  00472A  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8123  00472C  0E87               	movlw	135
  8124  00472E  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8125  004730  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8126  004734                     
  8127                           ;Robot/Navigation/robot_navigation.c: 159:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 120 );
  8128  004734  0EEB               	movlw	low _i2c_obj
  8129  004736  0101               	movlb	1	; () banked
  8130  004738  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8131  00473A  0E00               	movlw	high _i2c_obj
  8132  00473C  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8133  00473E  0EF2               	movlw	low _servo_driver_obj
  8134  004740  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8135  004742  0E00               	movlw	high _servo_driver_obj
  8136  004744  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8137  004746  0E01               	movlw	1
  8138  004748  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8139  00474A  0E78               	movlw	120
  8140  00474C  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8141  00474E  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8142  004752                     
  8143                           ;Robot/Navigation/robot_navigation.c: 160:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 45 );
  8144  004752  0EEB               	movlw	low _i2c_obj
  8145  004754  0101               	movlb	1	; () banked
  8146  004756  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8147  004758  0E00               	movlw	high _i2c_obj
  8148  00475A  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8149  00475C  0EF2               	movlw	low _servo_driver_obj
  8150  00475E  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8151  004760  0E00               	movlw	high _servo_driver_obj
  8152  004762  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8153  004764  0E02               	movlw	2
  8154  004766  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8155  004768  0E2D               	movlw	45
  8156  00476A  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8157  00476C  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8158  004770                     
  8159                           ;Robot/Navigation/robot_navigation.c: 161:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 30 );
  8160  004770  0EEB               	movlw	low _i2c_obj
  8161  004772  0101               	movlb	1	; () banked
  8162  004774  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8163  004776  0E00               	movlw	high _i2c_obj
  8164  004778  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8165  00477A  0EF2               	movlw	low _servo_driver_obj
  8166  00477C  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8167  00477E  0E00               	movlw	high _servo_driver_obj
  8168  004780  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8169  004782  0E03               	movlw	3
  8170  004784  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8171  004786  0E1E               	movlw	30
  8172  004788  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8173  00478A  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8174  00478E                     
  8175                           ;Robot/Navigation/robot_navigation.c: 163:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_C
      +                          ontrol);
  8176  00478E  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8177  004790  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  8178  004792  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8179  004794  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  8180  004796  ECE6  F02D         	call	_ECU_DC_Motor_Run_Left	;wreg free
  8181  00479A                     
  8182                           ;Robot/Navigation/robot_navigation.c: 164:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_C
      +                          ontrol);
  8183  00479A  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8184  00479C  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  8185  00479E  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8186  0047A0  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  8187  0047A2  ECE6  F02D         	call	_ECU_DC_Motor_Run_Left	;wreg free
  8188  0047A6                     
  8189                           ;Robot/Navigation/robot_navigation.c: 166:       CCP_PWM_Set_Duty(&CCP1_Obj , 85);
  8190  0047A6  0E2C               	movlw	low _CCP1_Obj
  8191  0047A8  0100               	movlb	0	; () banked
  8192  0047AA  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8193  0047AC  0E01               	movlw	high _CCP1_Obj
  8194  0047AE  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8195  0047B0  0E55               	movlw	85
  8196  0047B2  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8197  0047B4  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8198  0047B8                     
  8199                           ;Robot/Navigation/robot_navigation.c: 167:       CCP_PWM_Set_Duty(&CCP2_Obj , 45);
  8200  0047B8  0E20               	movlw	low _CCP2_Obj
  8201  0047BA  0100               	movlb	0	; () banked
  8202  0047BC  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8203  0047BE  0E01               	movlw	high _CCP2_Obj
  8204  0047C0  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8205  0047C2  0E2D               	movlw	45
  8206  0047C4  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8207  0047C6  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8208  0047CA  0012               	return		;funcret
  8209  0047CC                     __end_of_Robot_Steer_Right_Backward:
  8210                           	callstack 0
  8211                           
  8212 ;; *************** function _Robot_Steer_Right *****************
  8213 ;; Defined at:
  8214 ;;		line 200 in file "Robot/Navigation/robot_navigation.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  ret_val         1    0        unsigned char 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      unsigned char 
  8221 ;; Registers used:
  8222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used: 1
  8234 ;; Hardware stack levels required when called: 11
  8235 ;; This function calls:
  8236 ;;		_CCP_PWM_Set_Duty
  8237 ;;		_ECU_DC_Motor_Run_Right
  8238 ;;		_Robot_Steer_Stop
  8239 ;;		_Servo_SetAngle
  8240 ;; This function is called by:
  8241 ;;		_main
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text43
  8246  004294                     __ptext43:
  8247                           	callstack 0
  8248  004294                     _Robot_Steer_Right:
  8249                           	callstack 19
  8250  004294                     
  8251                           ;Robot/Navigation/robot_navigation.c: 205:       Movement_State = NAV_MOV_FORW_STEER_RIG
      +                          HT ;
  8252  004294  0E02               	movlw	2
  8253  004296  0100               	movlb	0	; () banked
  8254  004298  6FCF               	movwf	_Movement_State& (0+255),b
  8255  00429A                     
  8256                           ; BSR set to: 0
  8257                           ;Robot/Navigation/robot_navigation.c: 207:       Robot_Steer_Stop();
  8258  00429A  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  8259  00429E                     
  8260                           ;Robot/Navigation/robot_navigation.c: 209:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 90 );
  8261  00429E  0EEB               	movlw	low _i2c_obj
  8262  0042A0  0101               	movlb	1	; () banked
  8263  0042A2  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8264  0042A4  0E00               	movlw	high _i2c_obj
  8265  0042A6  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8266  0042A8  0EF2               	movlw	low _servo_driver_obj
  8267  0042AA  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8268  0042AC  0E00               	movlw	high _servo_driver_obj
  8269  0042AE  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8270  0042B0  0E00               	movlw	0
  8271  0042B2  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8272  0042B4  0E5A               	movlw	90
  8273  0042B6  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8274  0042B8  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8275  0042BC                     
  8276                           ;Robot/Navigation/robot_navigation.c: 210:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 90 );
  8277  0042BC  0EEB               	movlw	low _i2c_obj
  8278  0042BE  0101               	movlb	1	; () banked
  8279  0042C0  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8280  0042C2  0E00               	movlw	high _i2c_obj
  8281  0042C4  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8282  0042C6  0EF2               	movlw	low _servo_driver_obj
  8283  0042C8  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8284  0042CA  0E00               	movlw	high _servo_driver_obj
  8285  0042CC  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8286  0042CE  0E01               	movlw	1
  8287  0042D0  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8288  0042D2  0E5A               	movlw	90
  8289  0042D4  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8290  0042D6  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8291  0042DA                     
  8292                           ;Robot/Navigation/robot_navigation.c: 211:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 90 );
  8293  0042DA  0EEB               	movlw	low _i2c_obj
  8294  0042DC  0101               	movlb	1	; () banked
  8295  0042DE  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8296  0042E0  0E00               	movlw	high _i2c_obj
  8297  0042E2  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8298  0042E4  0EF2               	movlw	low _servo_driver_obj
  8299  0042E6  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8300  0042E8  0E00               	movlw	high _servo_driver_obj
  8301  0042EA  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8302  0042EC  0E02               	movlw	2
  8303  0042EE  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8304  0042F0  0E5A               	movlw	90
  8305  0042F2  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8306  0042F4  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8307  0042F8                     
  8308                           ;Robot/Navigation/robot_navigation.c: 212:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 90 );
  8309  0042F8  0EEB               	movlw	low _i2c_obj
  8310  0042FA  0101               	movlb	1	; () banked
  8311  0042FC  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8312  0042FE  0E00               	movlw	high _i2c_obj
  8313  004300  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8314  004302  0EF2               	movlw	low _servo_driver_obj
  8315  004304  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8316  004306  0E00               	movlw	high _servo_driver_obj
  8317  004308  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8318  00430A  0E03               	movlw	3
  8319  00430C  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8320  00430E  0E5A               	movlw	90
  8321  004310  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8322  004312  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8323  004316                     
  8324                           ;Robot/Navigation/robot_navigation.c: 214:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  8325  004316  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8326  004318  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8327  00431A  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8328  00431C  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8329  00431E  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8330  004322                     
  8331                           ;Robot/Navigation/robot_navigation.c: 215:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  8332  004322  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8333  004324  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8334  004326  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8335  004328  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8336  00432A  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8337  00432E                     
  8338                           ;Robot/Navigation/robot_navigation.c: 217:       CCP_PWM_Set_Duty(&CCP1_Obj , 85);
  8339  00432E  0E2C               	movlw	low _CCP1_Obj
  8340  004330  0100               	movlb	0	; () banked
  8341  004332  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8342  004334  0E01               	movlw	high _CCP1_Obj
  8343  004336  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8344  004338  0E55               	movlw	85
  8345  00433A  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8346  00433C  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8347  004340                     
  8348                           ;Robot/Navigation/robot_navigation.c: 218:       CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  8349  004340  0E20               	movlw	low _CCP2_Obj
  8350  004342  0100               	movlb	0	; () banked
  8351  004344  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8352  004346  0E01               	movlw	high _CCP2_Obj
  8353  004348  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8354  00434A  0E00               	movlw	0
  8355  00434C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8356  00434E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8357  004352  0012               	return		;funcret
  8358  004354                     __end_of_Robot_Steer_Right:
  8359                           	callstack 0
  8360                           
  8361 ;; *************** function _Robot_Steer_Left_Forward *****************
  8362 ;; Defined at:
  8363 ;;		line 130 in file "Robot/Navigation/robot_navigation.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  ret_val         1    0        unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      unsigned char 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;Total ram usage:        0 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; Hardware stack levels required when called: 11
  8384 ;; This function calls:
  8385 ;;		_CCP_PWM_Set_Duty
  8386 ;;		_ECU_DC_Motor_Run_Right
  8387 ;;		_Robot_Steer_Stop
  8388 ;;		_Servo_SetAngle
  8389 ;; This function is called by:
  8390 ;;		_main
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text44
  8395  004354                     __ptext44:
  8396                           	callstack 0
  8397  004354                     _Robot_Steer_Left_Forward:
  8398                           	callstack 19
  8399  004354                     
  8400                           ;Robot/Navigation/robot_navigation.c: 133:             Movement_State = NAV_MOV_FORW_STE
      +                          ER_LEFT ;
  8401  004354  0E03               	movlw	3
  8402  004356  0100               	movlb	0	; () banked
  8403  004358  6FCF               	movwf	_Movement_State& (0+255),b
  8404  00435A                     
  8405                           ; BSR set to: 0
  8406                           ;Robot/Navigation/robot_navigation.c: 135:       Robot_Steer_Stop();
  8407  00435A  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  8408  00435E                     
  8409                           ;Robot/Navigation/robot_navigation.c: 137:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 45 );
  8410  00435E  0EEB               	movlw	low _i2c_obj
  8411  004360  0101               	movlb	1	; () banked
  8412  004362  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8413  004364  0E00               	movlw	high _i2c_obj
  8414  004366  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8415  004368  0EF2               	movlw	low _servo_driver_obj
  8416  00436A  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8417  00436C  0E00               	movlw	high _servo_driver_obj
  8418  00436E  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8419  004370  0E00               	movlw	0
  8420  004372  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8421  004374  0E2D               	movlw	45
  8422  004376  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8423  004378  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8424  00437C                     
  8425                           ;Robot/Navigation/robot_navigation.c: 138:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 30 );
  8426  00437C  0EEB               	movlw	low _i2c_obj
  8427  00437E  0101               	movlb	1	; () banked
  8428  004380  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8429  004382  0E00               	movlw	high _i2c_obj
  8430  004384  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8431  004386  0EF2               	movlw	low _servo_driver_obj
  8432  004388  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8433  00438A  0E00               	movlw	high _servo_driver_obj
  8434  00438C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8435  00438E  0E01               	movlw	1
  8436  004390  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8437  004392  0E1E               	movlw	30
  8438  004394  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8439  004396  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8440  00439A                     
  8441                           ;Robot/Navigation/robot_navigation.c: 139:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 135 );
  8442  00439A  0EEB               	movlw	low _i2c_obj
  8443  00439C  0101               	movlb	1	; () banked
  8444  00439E  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8445  0043A0  0E00               	movlw	high _i2c_obj
  8446  0043A2  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8447  0043A4  0EF2               	movlw	low _servo_driver_obj
  8448  0043A6  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8449  0043A8  0E00               	movlw	high _servo_driver_obj
  8450  0043AA  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8451  0043AC  0E02               	movlw	2
  8452  0043AE  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8453  0043B0  0E87               	movlw	135
  8454  0043B2  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8455  0043B4  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8456  0043B8                     
  8457                           ;Robot/Navigation/robot_navigation.c: 140:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 120 );
  8458  0043B8  0EEB               	movlw	low _i2c_obj
  8459  0043BA  0101               	movlb	1	; () banked
  8460  0043BC  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8461  0043BE  0E00               	movlw	high _i2c_obj
  8462  0043C0  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8463  0043C2  0EF2               	movlw	low _servo_driver_obj
  8464  0043C4  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8465  0043C6  0E00               	movlw	high _servo_driver_obj
  8466  0043C8  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8467  0043CA  0E03               	movlw	3
  8468  0043CC  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8469  0043CE  0E78               	movlw	120
  8470  0043D0  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8471  0043D2  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8472  0043D6                     
  8473                           ;Robot/Navigation/robot_navigation.c: 142:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  8474  0043D6  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8475  0043D8  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8476  0043DA  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8477  0043DC  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8478  0043DE  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8479  0043E2                     
  8480                           ;Robot/Navigation/robot_navigation.c: 143:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  8481  0043E2  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8482  0043E4  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8483  0043E6  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8484  0043E8  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8485  0043EA  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8486  0043EE                     
  8487                           ;Robot/Navigation/robot_navigation.c: 145:       CCP_PWM_Set_Duty(&CCP1_Obj , 45);
  8488  0043EE  0E2C               	movlw	low _CCP1_Obj
  8489  0043F0  0100               	movlb	0	; () banked
  8490  0043F2  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8491  0043F4  0E01               	movlw	high _CCP1_Obj
  8492  0043F6  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8493  0043F8  0E2D               	movlw	45
  8494  0043FA  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8495  0043FC  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8496  004400                     
  8497                           ;Robot/Navigation/robot_navigation.c: 146:       CCP_PWM_Set_Duty(&CCP2_Obj , 85);
  8498  004400  0E20               	movlw	low _CCP2_Obj
  8499  004402  0100               	movlb	0	; () banked
  8500  004404  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8501  004406  0E01               	movlw	high _CCP2_Obj
  8502  004408  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8503  00440A  0E55               	movlw	85
  8504  00440C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8505  00440E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8506  004412  0012               	return		;funcret
  8507  004414                     __end_of_Robot_Steer_Left_Forward:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function _Robot_Steer_Left_Backward *****************
  8511 ;; Defined at:
  8512 ;;		line 172 in file "Robot/Navigation/robot_navigation.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;		None
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  ret_val         1    0        unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      unsigned char 
  8519 ;; Registers used:
  8520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;Total ram usage:        0 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 11
  8533 ;; This function calls:
  8534 ;;		_CCP_PWM_Set_Duty
  8535 ;;		_ECU_DC_Motor_Run_Left
  8536 ;;		_Robot_Steer_Stop
  8537 ;;		_Servo_SetAngle
  8538 ;; This function is called by:
  8539 ;;		_main
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text45
  8544  0047CC                     __ptext45:
  8545                           	callstack 0
  8546  0047CC                     _Robot_Steer_Left_Backward:
  8547                           	callstack 19
  8548  0047CC                     
  8549                           ;Robot/Navigation/robot_navigation.c: 176:       Robot_Steer_Stop();
  8550  0047CC  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  8551  0047D0                     
  8552                           ;Robot/Navigation/robot_navigation.c: 178:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 45 );
  8553  0047D0  0EEB               	movlw	low _i2c_obj
  8554  0047D2  0101               	movlb	1	; () banked
  8555  0047D4  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8556  0047D6  0E00               	movlw	high _i2c_obj
  8557  0047D8  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8558  0047DA  0EF2               	movlw	low _servo_driver_obj
  8559  0047DC  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8560  0047DE  0E00               	movlw	high _servo_driver_obj
  8561  0047E0  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8562  0047E2  0E00               	movlw	0
  8563  0047E4  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8564  0047E6  0E2D               	movlw	45
  8565  0047E8  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8566  0047EA  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8567  0047EE                     
  8568                           ;Robot/Navigation/robot_navigation.c: 179:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 30 );
  8569  0047EE  0EEB               	movlw	low _i2c_obj
  8570  0047F0  0101               	movlb	1	; () banked
  8571  0047F2  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8572  0047F4  0E00               	movlw	high _i2c_obj
  8573  0047F6  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8574  0047F8  0EF2               	movlw	low _servo_driver_obj
  8575  0047FA  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8576  0047FC  0E00               	movlw	high _servo_driver_obj
  8577  0047FE  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8578  004800  0E01               	movlw	1
  8579  004802  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8580  004804  0E1E               	movlw	30
  8581  004806  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8582  004808  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8583  00480C                     
  8584                           ;Robot/Navigation/robot_navigation.c: 180:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 135 );
  8585  00480C  0EEB               	movlw	low _i2c_obj
  8586  00480E  0101               	movlb	1	; () banked
  8587  004810  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8588  004812  0E00               	movlw	high _i2c_obj
  8589  004814  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8590  004816  0EF2               	movlw	low _servo_driver_obj
  8591  004818  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8592  00481A  0E00               	movlw	high _servo_driver_obj
  8593  00481C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8594  00481E  0E02               	movlw	2
  8595  004820  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8596  004822  0E87               	movlw	135
  8597  004824  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8598  004826  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8599  00482A                     
  8600                           ;Robot/Navigation/robot_navigation.c: 181:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 120 );
  8601  00482A  0EEB               	movlw	low _i2c_obj
  8602  00482C  0101               	movlb	1	; () banked
  8603  00482E  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8604  004830  0E00               	movlw	high _i2c_obj
  8605  004832  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8606  004834  0EF2               	movlw	low _servo_driver_obj
  8607  004836  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8608  004838  0E00               	movlw	high _servo_driver_obj
  8609  00483A  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8610  00483C  0E03               	movlw	3
  8611  00483E  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8612  004840  0E78               	movlw	120
  8613  004842  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8614  004844  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8615  004848                     
  8616                           ;Robot/Navigation/robot_navigation.c: 183:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_C
      +                          ontrol);
  8617  004848  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8618  00484A  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  8619  00484C  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8620  00484E  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  8621  004850  ECE6  F02D         	call	_ECU_DC_Motor_Run_Left	;wreg free
  8622  004854                     
  8623                           ;Robot/Navigation/robot_navigation.c: 184:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_C
      +                          ontrol);
  8624  004854  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8625  004856  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  8626  004858  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8627  00485A  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  8628  00485C  ECE6  F02D         	call	_ECU_DC_Motor_Run_Left	;wreg free
  8629  004860                     
  8630                           ;Robot/Navigation/robot_navigation.c: 186:       CCP_PWM_Set_Duty(&CCP1_Obj , 45);
  8631  004860  0E2C               	movlw	low _CCP1_Obj
  8632  004862  0100               	movlb	0	; () banked
  8633  004864  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8634  004866  0E01               	movlw	high _CCP1_Obj
  8635  004868  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8636  00486A  0E2D               	movlw	45
  8637  00486C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8638  00486E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8639  004872                     
  8640                           ;Robot/Navigation/robot_navigation.c: 187:       CCP_PWM_Set_Duty(&CCP2_Obj , 85);
  8641  004872  0E20               	movlw	low _CCP2_Obj
  8642  004874  0100               	movlb	0	; () banked
  8643  004876  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8644  004878  0E01               	movlw	high _CCP2_Obj
  8645  00487A  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8646  00487C  0E55               	movlw	85
  8647  00487E  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8648  004880  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8649  004884  0012               	return		;funcret
  8650  004886                     __end_of_Robot_Steer_Left_Backward:
  8651                           	callstack 0
  8652                           
  8653 ;; *************** function _Robot_Steer_Left *****************
  8654 ;; Defined at:
  8655 ;;		line 222 in file "Robot/Navigation/robot_navigation.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  ret_val         1    0        unsigned char 
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      unsigned char 
  8662 ;; Registers used:
  8663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;Total ram usage:        0 bytes
  8674 ;; Hardware stack levels used: 1
  8675 ;; Hardware stack levels required when called: 11
  8676 ;; This function calls:
  8677 ;;		_CCP_PWM_Set_Duty
  8678 ;;		_ECU_DC_Motor_Run_Right
  8679 ;;		_Robot_Steer_Stop
  8680 ;;		_Servo_SetAngle
  8681 ;; This function is called by:
  8682 ;;		_main
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text46
  8687  004414                     __ptext46:
  8688                           	callstack 0
  8689  004414                     _Robot_Steer_Left:
  8690                           	callstack 19
  8691  004414                     
  8692                           ;Robot/Navigation/robot_navigation.c: 225:             Movement_State = NAV_MOV_FORW_STE
      +                          ER_LEFT ;
  8693  004414  0E03               	movlw	3
  8694  004416  0100               	movlb	0	; () banked
  8695  004418  6FCF               	movwf	_Movement_State& (0+255),b
  8696  00441A                     
  8697                           ; BSR set to: 0
  8698                           ;Robot/Navigation/robot_navigation.c: 227:       Robot_Steer_Stop();
  8699  00441A  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  8700  00441E                     
  8701                           ;Robot/Navigation/robot_navigation.c: 229:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 90 );
  8702  00441E  0EEB               	movlw	low _i2c_obj
  8703  004420  0101               	movlb	1	; () banked
  8704  004422  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8705  004424  0E00               	movlw	high _i2c_obj
  8706  004426  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8707  004428  0EF2               	movlw	low _servo_driver_obj
  8708  00442A  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8709  00442C  0E00               	movlw	high _servo_driver_obj
  8710  00442E  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8711  004430  0E00               	movlw	0
  8712  004432  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8713  004434  0E5A               	movlw	90
  8714  004436  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8715  004438  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8716  00443C                     
  8717                           ;Robot/Navigation/robot_navigation.c: 230:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 90 );
  8718  00443C  0EEB               	movlw	low _i2c_obj
  8719  00443E  0101               	movlb	1	; () banked
  8720  004440  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8721  004442  0E00               	movlw	high _i2c_obj
  8722  004444  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8723  004446  0EF2               	movlw	low _servo_driver_obj
  8724  004448  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8725  00444A  0E00               	movlw	high _servo_driver_obj
  8726  00444C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8727  00444E  0E01               	movlw	1
  8728  004450  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8729  004452  0E5A               	movlw	90
  8730  004454  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8731  004456  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8732  00445A                     
  8733                           ;Robot/Navigation/robot_navigation.c: 231:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 90 );
  8734  00445A  0EEB               	movlw	low _i2c_obj
  8735  00445C  0101               	movlb	1	; () banked
  8736  00445E  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8737  004460  0E00               	movlw	high _i2c_obj
  8738  004462  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8739  004464  0EF2               	movlw	low _servo_driver_obj
  8740  004466  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8741  004468  0E00               	movlw	high _servo_driver_obj
  8742  00446A  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8743  00446C  0E02               	movlw	2
  8744  00446E  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8745  004470  0E5A               	movlw	90
  8746  004472  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8747  004474  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8748  004478                     
  8749                           ;Robot/Navigation/robot_navigation.c: 232:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 90 );
  8750  004478  0EEB               	movlw	low _i2c_obj
  8751  00447A  0101               	movlb	1	; () banked
  8752  00447C  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8753  00447E  0E00               	movlw	high _i2c_obj
  8754  004480  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8755  004482  0EF2               	movlw	low _servo_driver_obj
  8756  004484  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8757  004486  0E00               	movlw	high _servo_driver_obj
  8758  004488  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8759  00448A  0E03               	movlw	3
  8760  00448C  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8761  00448E  0E5A               	movlw	90
  8762  004490  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8763  004492  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8764  004496                     
  8765                           ;Robot/Navigation/robot_navigation.c: 234:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  8766  004496  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8767  004498  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8768  00449A  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8769  00449C  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8770  00449E  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8771  0044A2                     
  8772                           ;Robot/Navigation/robot_navigation.c: 235:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  8773  0044A2  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8774  0044A4  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8775  0044A6  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8776  0044A8  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8777  0044AA  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8778  0044AE                     
  8779                           ;Robot/Navigation/robot_navigation.c: 237:       CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  8780  0044AE  0E2C               	movlw	low _CCP1_Obj
  8781  0044B0  0100               	movlb	0	; () banked
  8782  0044B2  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8783  0044B4  0E01               	movlw	high _CCP1_Obj
  8784  0044B6  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8785  0044B8  0E00               	movlw	0
  8786  0044BA  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8787  0044BC  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8788  0044C0                     
  8789                           ;Robot/Navigation/robot_navigation.c: 238:       CCP_PWM_Set_Duty(&CCP2_Obj , 85);
  8790  0044C0  0E20               	movlw	low _CCP2_Obj
  8791  0044C2  0100               	movlb	0	; () banked
  8792  0044C4  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8793  0044C6  0E01               	movlw	high _CCP2_Obj
  8794  0044C8  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8795  0044CA  0E55               	movlw	85
  8796  0044CC  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8797  0044CE  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8798  0044D2  0012               	return		;funcret
  8799  0044D4                     __end_of_Robot_Steer_Left:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _Robot_Move_Forward *****************
  8803 ;; Defined at:
  8804 ;;		line 62 in file "Robot/Navigation/robot_navigation.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  ret_val         1    0        unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      unsigned char 
  8811 ;; Registers used:
  8812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8822 ;;Total ram usage:        0 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 11
  8825 ;; This function calls:
  8826 ;;		_CCP_PWM_Set_Duty
  8827 ;;		_ECU_DC_Motor_Run_Right
  8828 ;;		_Robot_Steer_Stop
  8829 ;;		_Servo_SetAngle
  8830 ;; This function is called by:
  8831 ;;		_main
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text47
  8836  0044D4                     __ptext47:
  8837                           	callstack 0
  8838  0044D4                     _Robot_Move_Forward:
  8839                           	callstack 19
  8840  0044D4                     
  8841                           ;Robot/Navigation/robot_navigation.c: 67:             Movement_State = NAV_MOV_FORW ;
  8842  0044D4  0E01               	movlw	1
  8843  0044D6  0100               	movlb	0	; () banked
  8844  0044D8  6FCF               	movwf	_Movement_State& (0+255),b
  8845  0044DA                     
  8846                           ; BSR set to: 0
  8847                           ;Robot/Navigation/robot_navigation.c: 69:             Robot_Steer_Stop();
  8848  0044DA  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  8849  0044DE                     
  8850                           ;Robot/Navigation/robot_navigation.c: 71:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_1 , 90 );
  8851  0044DE  0EEB               	movlw	low _i2c_obj
  8852  0044E0  0101               	movlb	1	; () banked
  8853  0044E2  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8854  0044E4  0E00               	movlw	high _i2c_obj
  8855  0044E6  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8856  0044E8  0EF2               	movlw	low _servo_driver_obj
  8857  0044EA  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8858  0044EC  0E00               	movlw	high _servo_driver_obj
  8859  0044EE  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8860  0044F0  0E00               	movlw	0
  8861  0044F2  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8862  0044F4  0E5A               	movlw	90
  8863  0044F6  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8864  0044F8  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8865  0044FC                     
  8866                           ;Robot/Navigation/robot_navigation.c: 72:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_2 , 90 );
  8867  0044FC  0EEB               	movlw	low _i2c_obj
  8868  0044FE  0101               	movlb	1	; () banked
  8869  004500  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8870  004502  0E00               	movlw	high _i2c_obj
  8871  004504  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8872  004506  0EF2               	movlw	low _servo_driver_obj
  8873  004508  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8874  00450A  0E00               	movlw	high _servo_driver_obj
  8875  00450C  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8876  00450E  0E01               	movlw	1
  8877  004510  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8878  004512  0E5A               	movlw	90
  8879  004514  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8880  004516  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8881  00451A                     
  8882                           ;Robot/Navigation/robot_navigation.c: 73:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_3 , 90 );
  8883  00451A  0EEB               	movlw	low _i2c_obj
  8884  00451C  0101               	movlb	1	; () banked
  8885  00451E  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8886  004520  0E00               	movlw	high _i2c_obj
  8887  004522  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8888  004524  0EF2               	movlw	low _servo_driver_obj
  8889  004526  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8890  004528  0E00               	movlw	high _servo_driver_obj
  8891  00452A  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8892  00452C  0E02               	movlw	2
  8893  00452E  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8894  004530  0E5A               	movlw	90
  8895  004532  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8896  004534  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8897  004538                     
  8898                           ;Robot/Navigation/robot_navigation.c: 74:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_4 , 90 );
  8899  004538  0EEB               	movlw	low _i2c_obj
  8900  00453A  0101               	movlb	1	; () banked
  8901  00453C  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  8902  00453E  0E00               	movlw	high _i2c_obj
  8903  004540  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  8904  004542  0EF2               	movlw	low _servo_driver_obj
  8905  004544  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  8906  004546  0E00               	movlw	high _servo_driver_obj
  8907  004548  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  8908  00454A  0E03               	movlw	3
  8909  00454C  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  8910  00454E  0E5A               	movlw	90
  8911  004550  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  8912  004552  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  8913  004556                     
  8914                           ;Robot/Navigation/robot_navigation.c: 76:             ECU_DC_Motor_Run_Right(&W1_W3_W5_M
      +                          otor_Control);
  8915  004556  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  8916  004558  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8917  00455A  0E00               	movlw	high _W1_W3_W5_Motor_Control
  8918  00455C  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8919  00455E  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8920  004562                     
  8921                           ;Robot/Navigation/robot_navigation.c: 77:             ECU_DC_Motor_Run_Right(&W2_W4_W6_M
      +                          otor_Control);
  8922  004562  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  8923  004564  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  8924  004566  0E00               	movlw	high _W2_W4_W6_Motor_Control
  8925  004568  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  8926  00456A  ECD2  F02D         	call	_ECU_DC_Motor_Run_Right	;wreg free
  8927  00456E                     
  8928                           ;Robot/Navigation/robot_navigation.c: 79:             CCP_PWM_Set_Duty(&CCP1_Obj , 85);
  8929  00456E  0E2C               	movlw	low _CCP1_Obj
  8930  004570  0100               	movlb	0	; () banked
  8931  004572  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8932  004574  0E01               	movlw	high _CCP1_Obj
  8933  004576  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8934  004578  0E55               	movlw	85
  8935  00457A  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8936  00457C  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8937  004580                     
  8938                           ;Robot/Navigation/robot_navigation.c: 80:             CCP_PWM_Set_Duty(&CCP2_Obj , 85);
  8939  004580  0E20               	movlw	low _CCP2_Obj
  8940  004582  0100               	movlb	0	; () banked
  8941  004584  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8942  004586  0E01               	movlw	high _CCP2_Obj
  8943  004588  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8944  00458A  0E55               	movlw	85
  8945  00458C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8946  00458E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  8947  004592  0012               	return		;funcret
  8948  004594                     __end_of_Robot_Move_Forward:
  8949                           	callstack 0
  8950                           
  8951 ;; *************** function _ECU_DC_Motor_Run_Right *****************
  8952 ;; Defined at:
  8953 ;;		line 59 in file "ECU/DC_Motor/ecu_dc_motor.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  8956 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  ret_value       1    0        unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;Total ram usage:        2 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; Hardware stack levels required when called: 9
  8975 ;; This function calls:
  8976 ;;		_GPIO_Pin_Write_Logic
  8977 ;; This function is called by:
  8978 ;;		_Robot_Move_Forward
  8979 ;;		_Robot_Steer_Right_Forward
  8980 ;;		_Robot_Steer_Left_Forward
  8981 ;;		_Robot_Steer_Right
  8982 ;;		_Robot_Steer_Left
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text48
  8987  005BA4                     __ptext48:
  8988                           	callstack 0
  8989  005BA4                     _ECU_DC_Motor_Run_Right:
  8990                           	callstack 20
  8991  005BA4                     
  8992                           ;ECU/DC_Motor/ecu_dc_motor.c: 62:     if(((void*)0) == dc_motor)
  8993  005BA4  5022               	movf	ECU_DC_Motor_Run_Right@dc_motor^0,w,c
  8994  005BA6  1023               	iorwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,w,c
  8995  005BA8  A4D8               	btfss	status,2,c
  8996  005BAA  EFD9  F02D         	goto	u12641
  8997  005BAE  EFDB  F02D         	goto	u12640
  8998  005BB2                     u12641:
  8999  005BB2  EFDD  F02D         	goto	l11911
  9000  005BB6                     u12640:
  9001  005BB6                     
  9002                           ;ECU/DC_Motor/ecu_dc_motor.c: 65:     }
  9003  005BB6  EFE5  F02D         	goto	l65
  9004  005BBA                     l11911:
  9005                           
  9006                           ;ECU/DC_Motor/ecu_dc_motor.c: 67:     {;ECU/DC_Motor/ecu_dc_motor.c: 68:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_LOW );
  9007  005BBA  C022  F01E         	movff	ECU_DC_Motor_Run_Right@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  9008  005BBE  C023  F01F         	movff	ECU_DC_Motor_Run_Right@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  9009  005BC2  0E00               	movlw	0
  9010  005BC4  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9011  005BC6  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
  9012  005BCA                     l65:
  9013  005BCA  0012               	return		;funcret
  9014  005BCC                     __end_of_ECU_DC_Motor_Run_Right:
  9015                           	callstack 0
  9016                           
  9017 ;; *************** function _Robot_Move_Backward *****************
  9018 ;; Defined at:
  9019 ;;		line 86 in file "Robot/Navigation/robot_navigation.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  ret_val         1    0        unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      unsigned char 
  9026 ;; Registers used:
  9027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;Total ram usage:        0 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 11
  9040 ;; This function calls:
  9041 ;;		_CCP_PWM_Set_Duty
  9042 ;;		_ECU_DC_Motor_Run_Left
  9043 ;;		_Robot_Steer_Stop
  9044 ;;		_Servo_SetAngle
  9045 ;; This function is called by:
  9046 ;;		_main
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text49
  9051  004594                     __ptext49:
  9052                           	callstack 0
  9053  004594                     _Robot_Move_Backward:
  9054                           	callstack 19
  9055  004594                     
  9056                           ;Robot/Navigation/robot_navigation.c: 89:       Movement_State = NAV_MOV_BACKW ;
  9057  004594  0E04               	movlw	4
  9058  004596  0100               	movlb	0	; () banked
  9059  004598  6FCF               	movwf	_Movement_State& (0+255),b
  9060  00459A                     
  9061                           ; BSR set to: 0
  9062                           ;Robot/Navigation/robot_navigation.c: 91:       Robot_Steer_Stop();
  9063  00459A  EC20  F02E         	call	_Robot_Steer_Stop	;wreg free
  9064  00459E                     
  9065                           ;Robot/Navigation/robot_navigation.c: 93:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_1 , 90 );
  9066  00459E  0EEB               	movlw	low _i2c_obj
  9067  0045A0  0101               	movlb	1	; () banked
  9068  0045A2  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  9069  0045A4  0E00               	movlw	high _i2c_obj
  9070  0045A6  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  9071  0045A8  0EF2               	movlw	low _servo_driver_obj
  9072  0045AA  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  9073  0045AC  0E00               	movlw	high _servo_driver_obj
  9074  0045AE  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  9075  0045B0  0E00               	movlw	0
  9076  0045B2  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  9077  0045B4  0E5A               	movlw	90
  9078  0045B6  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  9079  0045B8  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  9080  0045BC                     
  9081                           ;Robot/Navigation/robot_navigation.c: 94:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_2 , 90 );
  9082  0045BC  0EEB               	movlw	low _i2c_obj
  9083  0045BE  0101               	movlb	1	; () banked
  9084  0045C0  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  9085  0045C2  0E00               	movlw	high _i2c_obj
  9086  0045C4  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  9087  0045C6  0EF2               	movlw	low _servo_driver_obj
  9088  0045C8  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  9089  0045CA  0E00               	movlw	high _servo_driver_obj
  9090  0045CC  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  9091  0045CE  0E01               	movlw	1
  9092  0045D0  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  9093  0045D2  0E5A               	movlw	90
  9094  0045D4  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  9095  0045D6  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  9096  0045DA                     
  9097                           ;Robot/Navigation/robot_navigation.c: 95:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_3 , 90 );
  9098  0045DA  0EEB               	movlw	low _i2c_obj
  9099  0045DC  0101               	movlb	1	; () banked
  9100  0045DE  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  9101  0045E0  0E00               	movlw	high _i2c_obj
  9102  0045E2  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  9103  0045E4  0EF2               	movlw	low _servo_driver_obj
  9104  0045E6  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  9105  0045E8  0E00               	movlw	high _servo_driver_obj
  9106  0045EA  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  9107  0045EC  0E02               	movlw	2
  9108  0045EE  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  9109  0045F0  0E5A               	movlw	90
  9110  0045F2  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  9111  0045F4  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  9112  0045F8                     
  9113                           ;Robot/Navigation/robot_navigation.c: 96:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_4 , 90 );
  9114  0045F8  0EEB               	movlw	low _i2c_obj
  9115  0045FA  0101               	movlb	1	; () banked
  9116  0045FC  6F6E               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  9117  0045FE  0E00               	movlw	high _i2c_obj
  9118  004600  6F6F               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  9119  004602  0EF2               	movlw	low _servo_driver_obj
  9120  004604  6F70               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  9121  004606  0E00               	movlw	high _servo_driver_obj
  9122  004608  6F71               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  9123  00460A  0E03               	movlw	3
  9124  00460C  6F72               	movwf	Servo_SetAngle@servo_no& (0+255),b
  9125  00460E  0E5A               	movlw	90
  9126  004610  6F73               	movwf	Servo_SetAngle@angle& (0+255),b
  9127  004612  ECFB  F01D         	call	_Servo_SetAngle	;wreg free
  9128  004616                     
  9129                           ;Robot/Navigation/robot_navigation.c: 98:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_Co
      +                          ntrol);
  9130  004616  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  9131  004618  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  9132  00461A  0E00               	movlw	high _W1_W3_W5_Motor_Control
  9133  00461C  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  9134  00461E  ECE6  F02D         	call	_ECU_DC_Motor_Run_Left	;wreg free
  9135  004622                     
  9136                           ;Robot/Navigation/robot_navigation.c: 99:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_Co
      +                          ntrol);
  9137  004622  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  9138  004624  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  9139  004626  0E00               	movlw	high _W2_W4_W6_Motor_Control
  9140  004628  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  9141  00462A  ECE6  F02D         	call	_ECU_DC_Motor_Run_Left	;wreg free
  9142  00462E                     
  9143                           ;Robot/Navigation/robot_navigation.c: 101:       CCP_PWM_Set_Duty(&CCP1_Obj , 85);
  9144  00462E  0E2C               	movlw	low _CCP1_Obj
  9145  004630  0100               	movlb	0	; () banked
  9146  004632  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  9147  004634  0E01               	movlw	high _CCP1_Obj
  9148  004636  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  9149  004638  0E55               	movlw	85
  9150  00463A  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  9151  00463C  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  9152  004640                     
  9153                           ;Robot/Navigation/robot_navigation.c: 102:       CCP_PWM_Set_Duty(&CCP2_Obj , 85);
  9154  004640  0E20               	movlw	low _CCP2_Obj
  9155  004642  0100               	movlb	0	; () banked
  9156  004644  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  9157  004646  0E01               	movlw	high _CCP2_Obj
  9158  004648  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  9159  00464A  0E55               	movlw	85
  9160  00464C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  9161  00464E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
  9162  004652  0012               	return		;funcret
  9163  004654                     __end_of_Robot_Move_Backward:
  9164                           	callstack 0
  9165                           
  9166 ;; *************** function _Servo_SetAngle *****************
  9167 ;; Defined at:
  9168 ;;		line 43 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  i2c_obj         2    8[BANK1 ] PTR const struct .
  9171 ;;		 -> i2c_obj(7), 
  9172 ;;  servo_driver    2   10[BANK1 ] PTR const struct .
  9173 ;;		 -> servo_driver_obj(4), 
  9174 ;;  servo_no        1   12[BANK1 ] const enum E3294
  9175 ;;  angle           1   13[BANK1 ] const unsigned char 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  angle_in_reg    2   80[BANK0 ] unsigned short 
  9178 ;;  reg_addrees     1   82[BANK0 ] unsigned char 
  9179 ;;  ERRORSTATUS     1    0        unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      unsigned char 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9189 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;Total ram usage:        9 bytes
  9194 ;; Hardware stack levels used: 1
  9195 ;; Hardware stack levels required when called: 10
  9196 ;; This function calls:
  9197 ;;		_PCA_Write_Reg
  9198 ;;		___fladd
  9199 ;;		___flmul
  9200 ;;		___fltol
  9201 ;;		___xxtofl
  9202 ;; This function is called by:
  9203 ;;		_Robot_Move_Forward
  9204 ;;		_Robot_Move_Backward
  9205 ;;		_Robot_Steer_Right_Forward
  9206 ;;		_Robot_Steer_Left_Forward
  9207 ;;		_Robot_Steer_Right_Backward
  9208 ;;		_Robot_Steer_Left_Backward
  9209 ;;		_Robot_Steer_Right
  9210 ;;		_Robot_Steer_Left
  9211 ;;		_main
  9212 ;;		_application_intialize
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text50
  9217  003BF6                     __ptext50:
  9218                           	callstack 0
  9219  003BF6                     _Servo_SetAngle:
  9220                           	callstack 19
  9221  003BF6                     
  9222                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 46:     if (((void*)0)==i2c_obj)
  9223  003BF6  0101               	movlb	1	; () banked
  9224  003BF8  516E               	movf	Servo_SetAngle@i2c_obj& (0+255),w,b
  9225  003BFA  116F               	iorwf	(Servo_SetAngle@i2c_obj+1)& (0+255),w,b
  9226  003BFC  A4D8               	btfss	status,2,c
  9227  003BFE  EF03  F01E         	goto	u12761
  9228  003C02  EF05  F01E         	goto	u12760
  9229  003C06                     u12761:
  9230  003C06  EF07  F01E         	goto	l12009
  9231  003C0A                     u12760:
  9232  003C0A                     
  9233                           ; BSR set to: 1
  9234                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 49:     }
  9235  003C0A  EF6C  F01E         	goto	l310
  9236  003C0E                     l12009:
  9237                           
  9238                           ; BSR set to: 1
  9239                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 51:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 52:         uint8 reg_addrees=6+(servo_no*4)+2;
  9240  003C0E  5172               	movf	Servo_SetAngle@servo_no& (0+255),w,b
  9241  003C10  0D04               	mullw	4
  9242  003C12  50F3               	movf	243,w,c
  9243  003C14  0F08               	addlw	8
  9244  003C16  0100               	movlb	0	; () banked
  9245  003C18  6FB2               	movwf	Servo_SetAngle@reg_addrees& (0+255),b
  9246  003C1A                     
  9247                           ; BSR set to: 0
  9248                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 53:         uint16 angle_in_reg=(
      +                          uint16)(angle*1.7+209);
  9249  003C1A  0E00               	movlw	0
  9250  003C1C  6FA4               	movwf	___fladd@a& (0+255),b
  9251  003C1E  0E00               	movlw	0
  9252  003C20  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  9253  003C22  0E51               	movlw	81
  9254  003C24  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  9255  003C26  0E43               	movlw	67
  9256  003C28  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  9257  003C2A  0E9A               	movlw	154
  9258  003C2C  6F8B               	movwf	___flmul@a& (0+255),b
  9259  003C2E  0E99               	movlw	153
  9260  003C30  6F8C               	movwf	(___flmul@a+1)& (0+255),b
  9261  003C32  0ED9               	movlw	217
  9262  003C34  6F8D               	movwf	(___flmul@a+2)& (0+255),b
  9263  003C36  0E3F               	movlw	63
  9264  003C38  6F8E               	movwf	(___flmul@a+3)& (0+255),b
  9265  003C3A  0101               	movlb	1	; () banked
  9266  003C3C  5173               	movf	Servo_SetAngle@angle& (0+255),w,b
  9267  003C3E  0100               	movlb	0	; () banked
  9268  003C40  6F60               	movwf	___xxtofl@val& (0+255),b
  9269  003C42  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  9270  003C44  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  9271  003C46  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  9272  003C48  0E01               	movlw	1
  9273  003C4A  ECFF  F015         	call	___xxtofl
  9274  003C4E  C060  F087         	movff	?___xxtofl,___flmul@b
  9275  003C52  C061  F088         	movff	?___xxtofl+1,___flmul@b+1
  9276  003C56  C062  F089         	movff	?___xxtofl+2,___flmul@b+2
  9277  003C5A  C063  F08A         	movff	?___xxtofl+3,___flmul@b+3
  9278  003C5E  EC32  F00D         	call	___flmul	;wreg free
  9279  003C62  C087  F0A0         	movff	?___flmul,___fladd@b
  9280  003C66  C088  F0A1         	movff	?___flmul+1,___fladd@b+1
  9281  003C6A  C089  F0A2         	movff	?___flmul+2,___fladd@b+2
  9282  003C6E  C08A  F0A3         	movff	?___flmul+3,___fladd@b+3
  9283  003C72  ECD1  F00A         	call	___fladd	;wreg free
  9284  003C76  C0A0  F166         	movff	?___fladd,___fltol@f1
  9285  003C7A  C0A1  F167         	movff	?___fladd+1,___fltol@f1+1
  9286  003C7E  C0A2  F168         	movff	?___fladd+2,___fltol@f1+2
  9287  003C82  C0A3  F169         	movff	?___fladd+3,___fltol@f1+3
  9288  003C86  EC07  F01C         	call	___fltol	;wreg free
  9289  003C8A  C166  F0B0         	movff	?___fltol,Servo_SetAngle@angle_in_reg
  9290  003C8E  C167  F0B1         	movff	?___fltol+1,Servo_SetAngle@angle_in_reg+1
  9291  003C92                     
  9292                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 62:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)angle_in_reg));
  9293  003C92  C16E  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  9294  003C96  C16F  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  9295  003C9A  C170  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  9296  003C9E  C171  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  9297  003CA2  50DF               	movf	indf2,w,c
  9298  003CA4  0100               	movlb	0	; () banked
  9299  003CA6  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  9300  003CA8  C0B2  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  9301  003CAC  C0B0  F064         	movff	Servo_SetAngle@angle_in_reg,PCA_Write_Reg@data
  9302  003CB0  EC64  F02B         	call	_PCA_Write_Reg	;wreg free
  9303  003CB4                     
  9304                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 63:         reg_addrees++;
  9305  003CB4  0100               	movlb	0	; () banked
  9306  003CB6  2BB2               	incf	Servo_SetAngle@reg_addrees& (0+255),f,b
  9307  003CB8                     
  9308                           ; BSR set to: 0
  9309                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 64:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)(angle_in_reg>>8)));
  9310  003CB8  C16E  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  9311  003CBC  C16F  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  9312  003CC0  C170  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  9313  003CC4  C171  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  9314  003CC8  50DF               	movf	indf2,w,c
  9315  003CCA  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  9316  003CCC  C0B2  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  9317  003CD0  51B1               	movf	(Servo_SetAngle@angle_in_reg+1)& (0+255),w,b
  9318  003CD2  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  9319  003CD4  EC64  F02B         	call	_PCA_Write_Reg	;wreg free
  9320  003CD8                     l310:
  9321  003CD8  0012               	return		;funcret
  9322  003CDA                     __end_of_Servo_SetAngle:
  9323                           	callstack 0
  9324                           
  9325 ;; *************** function ___fladd *****************
  9326 ;; Defined at:
  9327 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  b               4   64[BANK0 ] unsigned char 
  9330 ;;  a               4   68[BANK0 ] unsigned char 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  grs             1   79[BANK0 ] unsigned char 
  9333 ;;  bexp            1   78[BANK0 ] unsigned char 
  9334 ;;  aexp            1   77[BANK0 ] unsigned char 
  9335 ;;  signs           1   76[BANK0 ] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  4   64[BANK0 ] unsigned char 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9345 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;Total ram usage:       16 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 8
  9352 ;; This function calls:
  9353 ;;		Nothing
  9354 ;; This function is called by:
  9355 ;;		_Servo_SetAngle
  9356 ;;		_async_config_baud_rate_gen
  9357 ;;		_I2C_Master_Mode_Clock_Configurations
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text51
  9362  0015A2                     __ptext51:
  9363                           	callstack 0
  9364  0015A2                     ___fladd:
  9365                           	callstack 20
  9366  0015A2  0100               	movlb	0	; () banked
  9367  0015A4  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  9368  0015A6  0B80               	andlw	128
  9369  0015A8  6FAC               	movwf	___fladd@signs& (0+255),b
  9370  0015AA  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  9371  0015AC  25A3               	addwf	(___fladd@b+3)& (0+255),w,b
  9372  0015AE  6FAE               	movwf	___fladd@bexp& (0+255),b
  9373  0015B0                     
  9374                           ; BSR set to: 0
  9375  0015B0  AFA2               	btfss	(___fladd@b+2)& (0+255),7,b
  9376  0015B2  EFDD  F00A         	goto	u10341
  9377  0015B6  EFDF  F00A         	goto	u10340
  9378  0015BA                     u10341:
  9379  0015BA  EFE0  F00A         	goto	l10495
  9380  0015BE                     u10340:
  9381  0015BE                     
  9382                           ; BSR set to: 0
  9383  0015BE  81AE               	bsf	___fladd@bexp& (0+255),0,b
  9384  0015C0                     l10495:
  9385                           
  9386                           ; BSR set to: 0
  9387  0015C0  51AE               	movf	___fladd@bexp& (0+255),w,b
  9388  0015C2  B4D8               	btfsc	status,2,c
  9389  0015C4  EFE6  F00A         	goto	u10351
  9390  0015C8  EFE8  F00A         	goto	u10350
  9391  0015CC                     u10351:
  9392  0015CC  EFFD  F00A         	goto	l10505
  9393  0015D0                     u10350:
  9394  0015D0                     
  9395                           ; BSR set to: 0
  9396  0015D0  29AE               	incf	___fladd@bexp& (0+255),w,b
  9397  0015D2  A4D8               	btfss	status,2,c
  9398  0015D4  EFEE  F00A         	goto	u10361
  9399  0015D8  EFF0  F00A         	goto	u10360
  9400  0015DC                     u10361:
  9401  0015DC  EFF8  F00A         	goto	l10501
  9402  0015E0                     u10360:
  9403  0015E0                     
  9404                           ; BSR set to: 0
  9405  0015E0  0E00               	movlw	0
  9406  0015E2  6FA0               	movwf	___fladd@b& (0+255),b
  9407  0015E4  0E00               	movlw	0
  9408  0015E6  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  9409  0015E8  0E00               	movlw	0
  9410  0015EA  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  9411  0015EC  0E00               	movlw	0
  9412  0015EE  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  9413  0015F0                     l10501:
  9414                           
  9415                           ; BSR set to: 0
  9416  0015F0  8FA2               	bsf	(___fladd@b+2)& (0+255),7,b
  9417  0015F2                     
  9418                           ; BSR set to: 0
  9419  0015F2  0E00               	movlw	0
  9420  0015F4  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  9421  0015F6  EF05  F00B         	goto	l10507
  9422  0015FA                     l10505:
  9423                           
  9424                           ; BSR set to: 0
  9425  0015FA  0E00               	movlw	0
  9426  0015FC  6FA0               	movwf	___fladd@b& (0+255),b
  9427  0015FE  0E00               	movlw	0
  9428  001600  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  9429  001602  0E00               	movlw	0
  9430  001604  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  9431  001606  0E00               	movlw	0
  9432  001608  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  9433  00160A                     l10507:
  9434                           
  9435                           ; BSR set to: 0
  9436  00160A  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  9437  00160C  0B80               	andlw	128
  9438  00160E  6FAD               	movwf	___fladd@aexp& (0+255),b
  9439  001610                     
  9440                           ; BSR set to: 0
  9441  001610  51AC               	movf	___fladd@signs& (0+255),w,b
  9442  001612  19AD               	xorwf	___fladd@aexp& (0+255),w,b
  9443  001614  B4D8               	btfsc	status,2,c
  9444  001616  EF0F  F00B         	goto	u10371
  9445  00161A  EF11  F00B         	goto	u10370
  9446  00161E                     u10371:
  9447  00161E  EF12  F00B         	goto	l10513
  9448  001622                     u10370:
  9449  001622                     
  9450                           ; BSR set to: 0
  9451  001622  8DAC               	bsf	___fladd@signs& (0+255),6,b
  9452  001624                     l10513:
  9453                           
  9454                           ; BSR set to: 0
  9455  001624  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  9456  001626  25A7               	addwf	(___fladd@a+3)& (0+255),w,b
  9457  001628  6FAD               	movwf	___fladd@aexp& (0+255),b
  9458  00162A                     
  9459                           ; BSR set to: 0
  9460  00162A  AFA6               	btfss	(___fladd@a+2)& (0+255),7,b
  9461  00162C  EF1A  F00B         	goto	u10381
  9462  001630  EF1C  F00B         	goto	u10380
  9463  001634                     u10381:
  9464  001634  EF1D  F00B         	goto	l10519
  9465  001638                     u10380:
  9466  001638                     
  9467                           ; BSR set to: 0
  9468  001638  81AD               	bsf	___fladd@aexp& (0+255),0,b
  9469  00163A                     l10519:
  9470                           
  9471                           ; BSR set to: 0
  9472  00163A  51AD               	movf	___fladd@aexp& (0+255),w,b
  9473  00163C  B4D8               	btfsc	status,2,c
  9474  00163E  EF23  F00B         	goto	u10391
  9475  001642  EF25  F00B         	goto	u10390
  9476  001646                     u10391:
  9477  001646  EF3A  F00B         	goto	l10529
  9478  00164A                     u10390:
  9479  00164A                     
  9480                           ; BSR set to: 0
  9481  00164A  29AD               	incf	___fladd@aexp& (0+255),w,b
  9482  00164C  A4D8               	btfss	status,2,c
  9483  00164E  EF2B  F00B         	goto	u10401
  9484  001652  EF2D  F00B         	goto	u10400
  9485  001656                     u10401:
  9486  001656  EF35  F00B         	goto	l10525
  9487  00165A                     u10400:
  9488  00165A                     
  9489                           ; BSR set to: 0
  9490  00165A  0E00               	movlw	0
  9491  00165C  6FA4               	movwf	___fladd@a& (0+255),b
  9492  00165E  0E00               	movlw	0
  9493  001660  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  9494  001662  0E00               	movlw	0
  9495  001664  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  9496  001666  0E00               	movlw	0
  9497  001668  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  9498  00166A                     l10525:
  9499                           
  9500                           ; BSR set to: 0
  9501  00166A  8FA6               	bsf	(___fladd@a+2)& (0+255),7,b
  9502  00166C                     
  9503                           ; BSR set to: 0
  9504  00166C  0E00               	movlw	0
  9505  00166E  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  9506  001670  EF42  F00B         	goto	l10531
  9507  001674                     l10529:
  9508                           
  9509                           ; BSR set to: 0
  9510  001674  0E00               	movlw	0
  9511  001676  6FA4               	movwf	___fladd@a& (0+255),b
  9512  001678  0E00               	movlw	0
  9513  00167A  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  9514  00167C  0E00               	movlw	0
  9515  00167E  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  9516  001680  0E00               	movlw	0
  9517  001682  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  9518  001684                     l10531:
  9519                           
  9520                           ; BSR set to: 0
  9521  001684  51AE               	movf	___fladd@bexp& (0+255),w,b
  9522  001686  5DAD               	subwf	___fladd@aexp& (0+255),w,b
  9523  001688  B0D8               	btfsc	status,0,c
  9524  00168A  EF49  F00B         	goto	u10411
  9525  00168E  EF4B  F00B         	goto	u10410
  9526  001692                     u10411:
  9527  001692  EF72  F00B         	goto	l10567
  9528  001696                     u10410:
  9529  001696                     
  9530                           ; BSR set to: 0
  9531  001696  ADAC               	btfss	___fladd@signs& (0+255),6,b
  9532  001698  EF50  F00B         	goto	u10421
  9533  00169C  EF52  F00B         	goto	u10420
  9534  0016A0                     u10421:
  9535  0016A0  EF54  F00B         	goto	l10537
  9536  0016A4                     u10420:
  9537  0016A4                     
  9538                           ; BSR set to: 0
  9539  0016A4  0E80               	movlw	128
  9540  0016A6  1BAC               	xorwf	___fladd@signs& (0+255),f,b
  9541  0016A8                     l10537:
  9542                           
  9543                           ; BSR set to: 0
  9544  0016A8  C0AE  F0AF         	movff	___fladd@bexp,___fladd@grs
  9545  0016AC                     
  9546                           ; BSR set to: 0
  9547  0016AC  C0AD  F0AE         	movff	___fladd@aexp,___fladd@bexp
  9548  0016B0                     
  9549                           ; BSR set to: 0
  9550  0016B0  C0AF  F0AD         	movff	___fladd@grs,___fladd@aexp
  9551  0016B4                     
  9552                           ; BSR set to: 0
  9553  0016B4  C0A0  F0AF         	movff	___fladd@b,___fladd@grs
  9554  0016B8                     
  9555                           ; BSR set to: 0
  9556  0016B8  C0A4  F0A0         	movff	___fladd@a,___fladd@b
  9557  0016BC                     
  9558                           ; BSR set to: 0
  9559  0016BC  C0AF  F0A4         	movff	___fladd@grs,___fladd@a
  9560  0016C0                     
  9561                           ; BSR set to: 0
  9562  0016C0  C0A1  F0AF         	movff	___fladd@b+1,___fladd@grs
  9563  0016C4                     
  9564                           ; BSR set to: 0
  9565  0016C4  C0A5  F0A1         	movff	___fladd@a+1,___fladd@b+1
  9566  0016C8                     
  9567                           ; BSR set to: 0
  9568  0016C8  C0AF  F0A5         	movff	___fladd@grs,___fladd@a+1
  9569  0016CC                     
  9570                           ; BSR set to: 0
  9571  0016CC  C0A2  F0AF         	movff	___fladd@b+2,___fladd@grs
  9572  0016D0                     
  9573                           ; BSR set to: 0
  9574  0016D0  C0A6  F0A2         	movff	___fladd@a+2,___fladd@b+2
  9575  0016D4                     
  9576                           ; BSR set to: 0
  9577  0016D4  C0AF  F0A6         	movff	___fladd@grs,___fladd@a+2
  9578  0016D8                     
  9579                           ; BSR set to: 0
  9580  0016D8  C0A3  F0AF         	movff	___fladd@b+3,___fladd@grs
  9581  0016DC                     
  9582                           ; BSR set to: 0
  9583  0016DC  C0A7  F0A3         	movff	___fladd@a+3,___fladd@b+3
  9584  0016E0                     
  9585                           ; BSR set to: 0
  9586  0016E0  C0AF  F0A7         	movff	___fladd@grs,___fladd@a+3
  9587  0016E4                     l10567:
  9588                           
  9589                           ; BSR set to: 0
  9590  0016E4  0E00               	movlw	0
  9591  0016E6  6FAF               	movwf	___fladd@grs& (0+255),b
  9592  0016E8                     
  9593                           ; BSR set to: 0
  9594  0016E8  51AE               	movf	___fladd@bexp& (0+255),w,b
  9595  0016EA  C0AD  F0A8         	movff	___fladd@aexp,??___fladd
  9596  0016EE  6BA9               	clrf	(??___fladd+1)& (0+255),b
  9597  0016F0  5FA8               	subwf	??___fladd& (0+255),f,b
  9598  0016F2  0E00               	movlw	0
  9599  0016F4  5BA9               	subwfb	(??___fladd+1)& (0+255),f,b
  9600  0016F6  BFA9               	btfsc	(??___fladd+1)& (0+255),7,b
  9601  0016F8  EF87  F00B         	goto	u10431
  9602  0016FC  51A9               	movf	(??___fladd+1)& (0+255),w,b
  9603  0016FE  E109               	bnz	u10430
  9604  001700  0E1A               	movlw	26
  9605  001702  5DA8               	subwf	??___fladd& (0+255),w,b
  9606  001704  A0D8               	btfss	status,0,c
  9607  001706  EF87  F00B         	goto	u10431
  9608  00170A  EF89  F00B         	goto	u10430
  9609  00170E                     u10431:
  9610  00170E  EFC0  F00B         	goto	l2550
  9611  001712                     u10430:
  9612  001712                     
  9613                           ; BSR set to: 0
  9614  001712  51A0               	movf	___fladd@b& (0+255),w,b
  9615  001714  11A1               	iorwf	(___fladd@b+1)& (0+255),w,b
  9616  001716  11A2               	iorwf	(___fladd@b+2)& (0+255),w,b
  9617  001718  11A3               	iorwf	(___fladd@b+3)& (0+255),w,b
  9618  00171A  A4D8               	btfss	status,2,c
  9619  00171C  EF92  F00B         	goto	u10441
  9620  001720  EF95  F00B         	goto	u10440
  9621  001724                     u10441:
  9622  001724  0E01               	movlw	1
  9623  001726  EF96  F00B         	goto	u10450
  9624  00172A                     u10440:
  9625  00172A  0E00               	movlw	0
  9626  00172C                     u10450:
  9627  00172C  6FAF               	movwf	___fladd@grs& (0+255),b
  9628  00172E                     
  9629                           ; BSR set to: 0
  9630  00172E  0E00               	movlw	0
  9631  001730  6FA0               	movwf	___fladd@b& (0+255),b
  9632  001732  0E00               	movlw	0
  9633  001734  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  9634  001736  0E00               	movlw	0
  9635  001738  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  9636  00173A  0E00               	movlw	0
  9637  00173C  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  9638  00173E                     
  9639                           ; BSR set to: 0
  9640  00173E  C0AD  F0AE         	movff	___fladd@aexp,___fladd@bexp
  9641  001742  EFC9  F00B         	goto	l2549
  9642  001746                     l2551:
  9643                           
  9644                           ; BSR set to: 0
  9645  001746  A1AF               	btfss	___fladd@grs& (0+255),0,b
  9646  001748  EFA8  F00B         	goto	u10461
  9647  00174C  EFAA  F00B         	goto	u10460
  9648  001750                     u10461:
  9649  001750  EFB0  F00B         	goto	l10579
  9650  001754                     u10460:
  9651  001754                     
  9652                           ; BSR set to: 0
  9653  001754  90D8               	bcf	status,0,c
  9654  001756  31AF               	rrcf	___fladd@grs& (0+255),w,b
  9655  001758  0901               	iorlw	1
  9656  00175A  6FAF               	movwf	___fladd@grs& (0+255),b
  9657  00175C  EFB2  F00B         	goto	l10581
  9658  001760                     l10579:
  9659                           
  9660                           ; BSR set to: 0
  9661  001760  90D8               	bcf	status,0,c
  9662  001762  33AF               	rrcf	___fladd@grs& (0+255),f,b
  9663  001764                     l10581:
  9664                           
  9665                           ; BSR set to: 0
  9666  001764  A1A0               	btfss	___fladd@b& (0+255),0,b
  9667  001766  EFB7  F00B         	goto	u10471
  9668  00176A  EFB9  F00B         	goto	u10470
  9669  00176E                     u10471:
  9670  00176E  EFBA  F00B         	goto	l10585
  9671  001772                     u10470:
  9672  001772                     
  9673                           ; BSR set to: 0
  9674  001772  8FAF               	bsf	___fladd@grs& (0+255),7,b
  9675  001774                     l10585:
  9676                           
  9677                           ; BSR set to: 0
  9678  001774  35A3               	rlcf	(___fladd@b+3)& (0+255),w,b
  9679  001776  33A3               	rrcf	(___fladd@b+3)& (0+255),f,b
  9680  001778  33A2               	rrcf	(___fladd@b+2)& (0+255),f,b
  9681  00177A  33A1               	rrcf	(___fladd@b+1)& (0+255),f,b
  9682  00177C  33A0               	rrcf	___fladd@b& (0+255),f,b
  9683  00177E                     
  9684                           ; BSR set to: 0
  9685  00177E  2BAE               	incf	___fladd@bexp& (0+255),f,b
  9686  001780                     l2550:
  9687                           
  9688                           ; BSR set to: 0
  9689  001780  51AD               	movf	___fladd@aexp& (0+255),w,b
  9690  001782  5DAE               	subwf	___fladd@bexp& (0+255),w,b
  9691  001784  A0D8               	btfss	status,0,c
  9692  001786  EFC7  F00B         	goto	u10481
  9693  00178A  EFC9  F00B         	goto	u10480
  9694  00178E                     u10481:
  9695  00178E  EFA3  F00B         	goto	l2551
  9696  001792                     u10480:
  9697  001792                     l2549:
  9698                           
  9699                           ; BSR set to: 0
  9700  001792  BDAC               	btfsc	___fladd@signs& (0+255),6,b
  9701  001794  EFCE  F00B         	goto	u10491
  9702  001798  EFD0  F00B         	goto	u10490
  9703  00179C                     u10491:
  9704  00179C  EF10  F00C         	goto	l10613
  9705  0017A0                     u10490:
  9706  0017A0                     
  9707                           ; BSR set to: 0
  9708  0017A0  51AE               	movf	___fladd@bexp& (0+255),w,b
  9709  0017A2  A4D8               	btfss	status,2,c
  9710  0017A4  EFD6  F00B         	goto	u10501
  9711  0017A8  EFD8  F00B         	goto	u10500
  9712  0017AC                     u10501:
  9713  0017AC  EFE2  F00B         	goto	l10595
  9714  0017B0                     u10500:
  9715  0017B0                     
  9716                           ; BSR set to: 0
  9717  0017B0  0E00               	movlw	0
  9718  0017B2  6FA0               	movwf	?___fladd& (0+255),b
  9719  0017B4  0E00               	movlw	0
  9720  0017B6  6FA1               	movwf	(?___fladd+1)& (0+255),b
  9721  0017B8  0E00               	movlw	0
  9722  0017BA  6FA2               	movwf	(?___fladd+2)& (0+255),b
  9723  0017BC  0E00               	movlw	0
  9724  0017BE  6FA3               	movwf	(?___fladd+3)& (0+255),b
  9725  0017C0  EF31  F00D         	goto	l2558
  9726  0017C4                     l10595:
  9727                           
  9728                           ; BSR set to: 0
  9729  0017C4  51A4               	movf	___fladd@a& (0+255),w,b
  9730  0017C6  27A0               	addwf	___fladd@b& (0+255),f,b
  9731  0017C8  51A5               	movf	(___fladd@a+1)& (0+255),w,b
  9732  0017CA  23A1               	addwfc	(___fladd@b+1)& (0+255),f,b
  9733  0017CC  51A6               	movf	(___fladd@a+2)& (0+255),w,b
  9734  0017CE  23A2               	addwfc	(___fladd@b+2)& (0+255),f,b
  9735  0017D0  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  9736  0017D2  23A3               	addwfc	(___fladd@b+3)& (0+255),f,b
  9737  0017D4                     
  9738                           ; BSR set to: 0
  9739  0017D4  A1A3               	btfss	(___fladd@b+3)& (0+255),0,b
  9740  0017D6  EFEF  F00B         	goto	u10511
  9741  0017DA  EFF1  F00B         	goto	u10510
  9742  0017DE                     u10511:
  9743  0017DE  EF9D  F00C         	goto	l10649
  9744  0017E2                     u10510:
  9745  0017E2                     
  9746                           ; BSR set to: 0
  9747  0017E2  A1AF               	btfss	___fladd@grs& (0+255),0,b
  9748  0017E4  EFF6  F00B         	goto	u10521
  9749  0017E8  EFF8  F00B         	goto	u10520
  9750  0017EC                     u10521:
  9751  0017EC  EFFE  F00B         	goto	l10603
  9752  0017F0                     u10520:
  9753  0017F0                     
  9754                           ; BSR set to: 0
  9755  0017F0  90D8               	bcf	status,0,c
  9756  0017F2  31AF               	rrcf	___fladd@grs& (0+255),w,b
  9757  0017F4  0901               	iorlw	1
  9758  0017F6  6FAF               	movwf	___fladd@grs& (0+255),b
  9759  0017F8  EF00  F00C         	goto	l10605
  9760  0017FC                     l10603:
  9761                           
  9762                           ; BSR set to: 0
  9763  0017FC  90D8               	bcf	status,0,c
  9764  0017FE  33AF               	rrcf	___fladd@grs& (0+255),f,b
  9765  001800                     l10605:
  9766                           
  9767                           ; BSR set to: 0
  9768  001800  A1A0               	btfss	___fladd@b& (0+255),0,b
  9769  001802  EF05  F00C         	goto	u10531
  9770  001806  EF07  F00C         	goto	u10530
  9771  00180A                     u10531:
  9772  00180A  EF08  F00C         	goto	l10609
  9773  00180E                     u10530:
  9774  00180E                     
  9775                           ; BSR set to: 0
  9776  00180E  8FAF               	bsf	___fladd@grs& (0+255),7,b
  9777  001810                     l10609:
  9778                           
  9779                           ; BSR set to: 0
  9780  001810  35A3               	rlcf	(___fladd@b+3)& (0+255),w,b
  9781  001812  33A3               	rrcf	(___fladd@b+3)& (0+255),f,b
  9782  001814  33A2               	rrcf	(___fladd@b+2)& (0+255),f,b
  9783  001816  33A1               	rrcf	(___fladd@b+1)& (0+255),f,b
  9784  001818  33A0               	rrcf	___fladd@b& (0+255),f,b
  9785  00181A                     
  9786                           ; BSR set to: 0
  9787  00181A  2BAE               	incf	___fladd@bexp& (0+255),f,b
  9788  00181C  EF9D  F00C         	goto	l10649
  9789  001820                     l10613:
  9790                           
  9791                           ; BSR set to: 0
  9792  001820  51A4               	movf	___fladd@a& (0+255),w,b
  9793  001822  5DA0               	subwf	___fladd@b& (0+255),w,b
  9794  001824  51A5               	movf	(___fladd@a+1)& (0+255),w,b
  9795  001826  59A1               	subwfb	(___fladd@b+1)& (0+255),w,b
  9796  001828  51A6               	movf	(___fladd@a+2)& (0+255),w,b
  9797  00182A  59A2               	subwfb	(___fladd@b+2)& (0+255),w,b
  9798  00182C  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  9799  00182E  0A80               	xorlw	128
  9800  001830  6FA8               	movwf	??___fladd& (0+255),b
  9801  001832  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  9802  001834  0A80               	xorlw	128
  9803  001836  59A8               	subwfb	??___fladd& (0+255),w,b
  9804  001838  B0D8               	btfsc	status,0,c
  9805  00183A  EF21  F00C         	goto	u10541
  9806  00183E  EF23  F00C         	goto	u10540
  9807  001842                     u10541:
  9808  001842  EF4E  F00C         	goto	l10623
  9809  001846                     u10540:
  9810  001846                     
  9811                           ; BSR set to: 0
  9812  001846  51A0               	movf	___fladd@b& (0+255),w,b
  9813  001848  5DA4               	subwf	___fladd@a& (0+255),w,b
  9814  00184A  6FA8               	movwf	??___fladd& (0+255),b
  9815  00184C  51A1               	movf	(___fladd@b+1)& (0+255),w,b
  9816  00184E  59A5               	subwfb	(___fladd@a+1)& (0+255),w,b
  9817  001850  6FA9               	movwf	(??___fladd+1)& (0+255),b
  9818  001852  51A2               	movf	(___fladd@b+2)& (0+255),w,b
  9819  001854  59A6               	subwfb	(___fladd@a+2)& (0+255),w,b
  9820  001856  6FAA               	movwf	(??___fladd+2)& (0+255),b
  9821  001858  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  9822  00185A  59A7               	subwfb	(___fladd@a+3)& (0+255),w,b
  9823  00185C  6FAB               	movwf	(??___fladd+3)& (0+255),b
  9824  00185E  0EFF               	movlw	255
  9825  001860  25A8               	addwf	??___fladd& (0+255),w,b
  9826  001862  6FA0               	movwf	___fladd@b& (0+255),b
  9827  001864  0EFF               	movlw	255
  9828  001866  21A9               	addwfc	(??___fladd+1)& (0+255),w,b
  9829  001868  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  9830  00186A  0EFF               	movlw	255
  9831  00186C  21AA               	addwfc	(??___fladd+2)& (0+255),w,b
  9832  00186E  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  9833  001870  0EFF               	movlw	255
  9834  001872  21AB               	addwfc	(??___fladd+3)& (0+255),w,b
  9835  001874  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  9836  001876  0E80               	movlw	128
  9837  001878  1BAC               	xorwf	___fladd@signs& (0+255),f,b
  9838  00187A                     
  9839                           ; BSR set to: 0
  9840  00187A  6DAF               	negf	___fladd@grs& (0+255),b
  9841  00187C                     
  9842                           ; BSR set to: 0
  9843  00187C  51AF               	movf	___fladd@grs& (0+255),w,b
  9844  00187E  A4D8               	btfss	status,2,c
  9845  001880  EF44  F00C         	goto	u10551
  9846  001884  EF46  F00C         	goto	u10550
  9847  001888                     u10551:
  9848  001888  EF56  F00C         	goto	l2566
  9849  00188C                     u10550:
  9850  00188C                     
  9851                           ; BSR set to: 0
  9852  00188C  0E01               	movlw	1
  9853  00188E  27A0               	addwf	___fladd@b& (0+255),f,b
  9854  001890  0E00               	movlw	0
  9855  001892  23A1               	addwfc	(___fladd@b+1)& (0+255),f,b
  9856  001894  23A2               	addwfc	(___fladd@b+2)& (0+255),f,b
  9857  001896  23A3               	addwfc	(___fladd@b+3)& (0+255),f,b
  9858  001898  EF56  F00C         	goto	l2566
  9859  00189C                     l10623:
  9860                           
  9861                           ; BSR set to: 0
  9862  00189C  51A4               	movf	___fladd@a& (0+255),w,b
  9863  00189E  5FA0               	subwf	___fladd@b& (0+255),f,b
  9864  0018A0  51A5               	movf	(___fladd@a+1)& (0+255),w,b
  9865  0018A2  5BA1               	subwfb	(___fladd@b+1)& (0+255),f,b
  9866  0018A4  51A6               	movf	(___fladd@a+2)& (0+255),w,b
  9867  0018A6  5BA2               	subwfb	(___fladd@b+2)& (0+255),f,b
  9868  0018A8  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  9869  0018AA  5BA3               	subwfb	(___fladd@b+3)& (0+255),f,b
  9870  0018AC                     l2566:
  9871                           
  9872                           ; BSR set to: 0
  9873  0018AC  51A0               	movf	___fladd@b& (0+255),w,b
  9874  0018AE  11A1               	iorwf	(___fladd@b+1)& (0+255),w,b
  9875  0018B0  11A2               	iorwf	(___fladd@b+2)& (0+255),w,b
  9876  0018B2  11A3               	iorwf	(___fladd@b+3)& (0+255),w,b
  9877  0018B4  A4D8               	btfss	status,2,c
  9878  0018B6  EF5F  F00C         	goto	u10561
  9879  0018BA  EF61  F00C         	goto	u10560
  9880  0018BE                     u10561:
  9881  0018BE  EF96  F00C         	goto	l10647
  9882  0018C2                     u10560:
  9883  0018C2                     
  9884                           ; BSR set to: 0
  9885  0018C2  51AF               	movf	___fladd@grs& (0+255),w,b
  9886  0018C4  A4D8               	btfss	status,2,c
  9887  0018C6  EF67  F00C         	goto	u10571
  9888  0018CA  EF69  F00C         	goto	u10570
  9889  0018CE                     u10571:
  9890  0018CE  EF96  F00C         	goto	l10647
  9891  0018D2                     u10570:
  9892  0018D2                     
  9893                           ; BSR set to: 0
  9894  0018D2  0E00               	movlw	0
  9895  0018D4  6FA0               	movwf	?___fladd& (0+255),b
  9896  0018D6  0E00               	movlw	0
  9897  0018D8  6FA1               	movwf	(?___fladd+1)& (0+255),b
  9898  0018DA  0E00               	movlw	0
  9899  0018DC  6FA2               	movwf	(?___fladd+2)& (0+255),b
  9900  0018DE  0E00               	movlw	0
  9901  0018E0  6FA3               	movwf	(?___fladd+3)& (0+255),b
  9902  0018E2  EF31  F00D         	goto	l2558
  9903  0018E6                     l10631:
  9904                           
  9905                           ; BSR set to: 0
  9906  0018E6  90D8               	bcf	status,0,c
  9907  0018E8  37A0               	rlcf	___fladd@b& (0+255),f,b
  9908  0018EA  37A1               	rlcf	(___fladd@b+1)& (0+255),f,b
  9909  0018EC  37A2               	rlcf	(___fladd@b+2)& (0+255),f,b
  9910  0018EE  37A3               	rlcf	(___fladd@b+3)& (0+255),f,b
  9911  0018F0                     
  9912                           ; BSR set to: 0
  9913  0018F0  AFAF               	btfss	___fladd@grs& (0+255),7,b
  9914  0018F2  EF7D  F00C         	goto	u10581
  9915  0018F6  EF7F  F00C         	goto	u10580
  9916  0018FA                     u10581:
  9917  0018FA  EF80  F00C         	goto	l10637
  9918  0018FE                     u10580:
  9919  0018FE                     
  9920                           ; BSR set to: 0
  9921  0018FE  81A0               	bsf	___fladd@b& (0+255),0,b
  9922  001900                     l10637:
  9923                           
  9924                           ; BSR set to: 0
  9925  001900  A1AF               	btfss	___fladd@grs& (0+255),0,b
  9926  001902  EF85  F00C         	goto	u10591
  9927  001906  EF87  F00C         	goto	u10590
  9928  00190A                     u10591:
  9929  00190A  EF8B  F00C         	goto	l10641
  9930  00190E                     u10590:
  9931  00190E                     
  9932                           ; BSR set to: 0
  9933  00190E  80D8               	bsf	status,0,c
  9934  001910  37AF               	rlcf	___fladd@grs& (0+255),f,b
  9935  001912  EF8D  F00C         	goto	l10643
  9936  001916                     l10641:
  9937                           
  9938                           ; BSR set to: 0
  9939  001916  90D8               	bcf	status,0,c
  9940  001918  37AF               	rlcf	___fladd@grs& (0+255),f,b
  9941  00191A                     l10643:
  9942                           
  9943                           ; BSR set to: 0
  9944  00191A  51AE               	movf	___fladd@bexp& (0+255),w,b
  9945  00191C  B4D8               	btfsc	status,2,c
  9946  00191E  EF93  F00C         	goto	u10601
  9947  001922  EF95  F00C         	goto	u10600
  9948  001926                     u10601:
  9949  001926  EF96  F00C         	goto	l10647
  9950  00192A                     u10600:
  9951  00192A                     
  9952                           ; BSR set to: 0
  9953  00192A  07AE               	decf	___fladd@bexp& (0+255),f,b
  9954  00192C                     l10647:
  9955                           
  9956                           ; BSR set to: 0
  9957  00192C  AFA2               	btfss	(___fladd@b+2)& (0+255),7,b
  9958  00192E  EF9B  F00C         	goto	u10611
  9959  001932  EF9D  F00C         	goto	u10610
  9960  001936                     u10611:
  9961  001936  EF73  F00C         	goto	l10631
  9962  00193A                     u10610:
  9963  00193A                     l10649:
  9964                           
  9965                           ; BSR set to: 0
  9966  00193A  0E00               	movlw	0
  9967  00193C  6FAD               	movwf	___fladd@aexp& (0+255),b
  9968  00193E                     
  9969                           ; BSR set to: 0
  9970  00193E  AFAF               	btfss	___fladd@grs& (0+255),7,b
  9971  001940  EFA4  F00C         	goto	u10621
  9972  001944  EFA6  F00C         	goto	u10620
  9973  001948                     u10621:
  9974  001948  EFBE  F00C         	goto	l2575
  9975  00194C                     u10620:
  9976  00194C                     
  9977                           ; BSR set to: 0
  9978  00194C  C0AF  F0A8         	movff	___fladd@grs,??___fladd
  9979  001950  0E7F               	movlw	127
  9980  001952  17A8               	andwf	??___fladd& (0+255),f,b
  9981  001954  B4D8               	btfsc	status,2,c
  9982  001956  EFAF  F00C         	goto	u10631
  9983  00195A  EFB1  F00C         	goto	u10630
  9984  00195E                     u10631:
  9985  00195E  EFB5  F00C         	goto	l2576
  9986  001962                     u10630:
  9987  001962                     l10655:
  9988                           
  9989                           ; BSR set to: 0
  9990  001962  0E01               	movlw	1
  9991  001964  6FAD               	movwf	___fladd@aexp& (0+255),b
  9992  001966  EFBE  F00C         	goto	l2575
  9993  00196A                     l2576:
  9994                           
  9995                           ; BSR set to: 0
  9996  00196A  A1A0               	btfss	___fladd@b& (0+255),0,b
  9997  00196C  EFBA  F00C         	goto	u10641
  9998  001970  EFBC  F00C         	goto	u10640
  9999  001974                     u10641:
 10000  001974  EFBE  F00C         	goto	l2575
 10001  001978                     u10640:
 10002  001978  EFB1  F00C         	goto	l10655
 10003  00197C                     l2575:
 10004                           
 10005                           ; BSR set to: 0
 10006  00197C  51AD               	movf	___fladd@aexp& (0+255),w,b
 10007  00197E  B4D8               	btfsc	status,2,c
 10008  001980  EFC4  F00C         	goto	u10651
 10009  001984  EFC6  F00C         	goto	u10650
 10010  001988                     u10651:
 10011  001988  EFF1  F00C         	goto	l10667
 10012  00198C                     u10650:
 10013  00198C                     
 10014                           ; BSR set to: 0
 10015  00198C  0E01               	movlw	1
 10016  00198E  27A0               	addwf	___fladd@b& (0+255),f,b
 10017  001990  0E00               	movlw	0
 10018  001992  23A1               	addwfc	(___fladd@b+1)& (0+255),f,b
 10019  001994  23A2               	addwfc	(___fladd@b+2)& (0+255),f,b
 10020  001996  23A3               	addwfc	(___fladd@b+3)& (0+255),f,b
 10021  001998                     
 10022                           ; BSR set to: 0
 10023  001998  A1A3               	btfss	(___fladd@b+3)& (0+255),0,b
 10024  00199A  EFD1  F00C         	goto	u10661
 10025  00199E  EFD3  F00C         	goto	u10660
 10026  0019A2                     u10661:
 10027  0019A2  EFF1  F00C         	goto	l10667
 10028  0019A6                     u10660:
 10029  0019A6                     
 10030                           ; BSR set to: 0
 10031  0019A6  C0A0  F0A8         	movff	___fladd@b,??___fladd
 10032  0019AA  C0A1  F0A9         	movff	___fladd@b+1,??___fladd+1
 10033  0019AE  C0A2  F0AA         	movff	___fladd@b+2,??___fladd+2
 10034  0019B2  C0A3  F0AB         	movff	___fladd@b+3,??___fladd+3
 10035  0019B6  35AB               	rlcf	(??___fladd+3)& (0+255),w,b
 10036  0019B8  33AB               	rrcf	(??___fladd+3)& (0+255),f,b
 10037  0019BA  33AA               	rrcf	(??___fladd+2)& (0+255),f,b
 10038  0019BC  33A9               	rrcf	(??___fladd+1)& (0+255),f,b
 10039  0019BE  33A8               	rrcf	??___fladd& (0+255),f,b
 10040  0019C0  C0A8  F0A0         	movff	??___fladd,___fladd@b
 10041  0019C4  C0A9  F0A1         	movff	??___fladd+1,___fladd@b+1
 10042  0019C8  C0AA  F0A2         	movff	??___fladd+2,___fladd@b+2
 10043  0019CC  C0AB  F0A3         	movff	??___fladd+3,___fladd@b+3
 10044  0019D0  29AE               	incf	___fladd@bexp& (0+255),w,b
 10045  0019D2  B4D8               	btfsc	status,2,c
 10046  0019D4  EFEE  F00C         	goto	u10671
 10047  0019D8  EFF0  F00C         	goto	u10670
 10048  0019DC                     u10671:
 10049  0019DC  EFF1  F00C         	goto	l10667
 10050  0019E0                     u10670:
 10051  0019E0                     
 10052                           ; BSR set to: 0
 10053  0019E0  2BAE               	incf	___fladd@bexp& (0+255),f,b
 10054  0019E2                     l10667:
 10055                           
 10056                           ; BSR set to: 0
 10057  0019E2  29AE               	incf	___fladd@bexp& (0+255),w,b
 10058  0019E4  B4D8               	btfsc	status,2,c
 10059  0019E6  EFF7  F00C         	goto	u10681
 10060  0019EA  EFF9  F00C         	goto	u10680
 10061  0019EE                     u10681:
 10062  0019EE  EF01  F00D         	goto	l10671
 10063  0019F2                     u10680:
 10064  0019F2                     
 10065                           ; BSR set to: 0
 10066  0019F2  51AE               	movf	___fladd@bexp& (0+255),w,b
 10067  0019F4  A4D8               	btfss	status,2,c
 10068  0019F6  EFFF  F00C         	goto	u10691
 10069  0019FA  EF01  F00D         	goto	u10690
 10070  0019FE                     u10691:
 10071  0019FE  EF13  F00D         	goto	l10675
 10072  001A02                     u10690:
 10073  001A02                     l10671:
 10074                           
 10075                           ; BSR set to: 0
 10076  001A02  0E00               	movlw	0
 10077  001A04  6FA0               	movwf	___fladd@b& (0+255),b
 10078  001A06  0E00               	movlw	0
 10079  001A08  6FA1               	movwf	(___fladd@b+1)& (0+255),b
 10080  001A0A  0E00               	movlw	0
 10081  001A0C  6FA2               	movwf	(___fladd@b+2)& (0+255),b
 10082  001A0E  0E00               	movlw	0
 10083  001A10  6FA3               	movwf	(___fladd@b+3)& (0+255),b
 10084  001A12  51AE               	movf	___fladd@bexp& (0+255),w,b
 10085  001A14  A4D8               	btfss	status,2,c
 10086  001A16  EF0F  F00D         	goto	u10701
 10087  001A1A  EF11  F00D         	goto	u10700
 10088  001A1E                     u10701:
 10089  001A1E  EF13  F00D         	goto	l10675
 10090  001A22                     u10700:
 10091  001A22                     
 10092                           ; BSR set to: 0
 10093  001A22  0E00               	movlw	0
 10094  001A24  6FAC               	movwf	___fladd@signs& (0+255),b
 10095  001A26                     l10675:
 10096                           
 10097                           ; BSR set to: 0
 10098  001A26  A1AE               	btfss	___fladd@bexp& (0+255),0,b
 10099  001A28  EF18  F00D         	goto	u10711
 10100  001A2C  EF1A  F00D         	goto	u10710
 10101  001A30                     u10711:
 10102  001A30  EF1D  F00D         	goto	l10679
 10103  001A34                     u10710:
 10104  001A34                     
 10105                           ; BSR set to: 0
 10106  001A34  8FA2               	bsf	(___fladd@b+2)& (0+255),7,b
 10107  001A36  EF1E  F00D         	goto	l10681
 10108  001A3A                     l10679:
 10109                           
 10110                           ; BSR set to: 0
 10111  001A3A  9FA2               	bcf	(___fladd@b+2)& (0+255),7,b
 10112  001A3C                     l10681:
 10113                           
 10114                           ; BSR set to: 0
 10115  001A3C  90D8               	bcf	status,0,c
 10116  001A3E  31AE               	rrcf	___fladd@bexp& (0+255),w,b
 10117  001A40  6FA3               	movwf	(___fladd@b+3)& (0+255),b
 10118  001A42                     
 10119                           ; BSR set to: 0
 10120  001A42  AFAC               	btfss	___fladd@signs& (0+255),7,b
 10121  001A44  EF26  F00D         	goto	u10721
 10122  001A48  EF28  F00D         	goto	u10720
 10123  001A4C                     u10721:
 10124  001A4C  EF29  F00D         	goto	l10687
 10125  001A50                     u10720:
 10126  001A50                     
 10127                           ; BSR set to: 0
 10128  001A50  8FA3               	bsf	(___fladd@b+3)& (0+255),7,b
 10129  001A52                     l10687:
 10130                           
 10131                           ; BSR set to: 0
 10132  001A52  C0A0  F0A0         	movff	___fladd@b,?___fladd
 10133  001A56  C0A1  F0A1         	movff	___fladd@b+1,?___fladd+1
 10134  001A5A  C0A2  F0A2         	movff	___fladd@b+2,?___fladd+2
 10135  001A5E  C0A3  F0A3         	movff	___fladd@b+3,?___fladd+3
 10136  001A62                     l2558:
 10137                           
 10138                           ; BSR set to: 0
 10139  001A62  0012               	return		;funcret
 10140  001A64                     __end_of___fladd:
 10141                           	callstack 0
 10142                           
 10143 ;; *************** function _PCA_Write_Reg *****************
 10144 ;; Defined at:
 10145 ;;		line 69 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  i2c_obj         2    0[BANK0 ] PTR const struct .
 10148 ;;		 -> i2c_obj(7), 
 10149 ;;  slave_addres    1    2[BANK0 ] unsigned char 
 10150 ;;  reg_address     1    3[BANK0 ] unsigned char 
 10151 ;;  data            1    4[BANK0 ] unsigned char 
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;  ack             1   34[COMRAM] unsigned char 
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10163 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;Total ram usage:        6 bytes
 10168 ;; Hardware stack levels used: 1
 10169 ;; Hardware stack levels required when called: 9
 10170 ;; This function calls:
 10171 ;;		_MSSP_I2C_Master_Send_Start
 10172 ;;		_MSSP_I2C_Master_Send_Stop
 10173 ;;		_MSSP_I2C_Master_Write_Blocking
 10174 ;; This function is called by:
 10175 ;;		_ServoDriver_Init
 10176 ;;		_Servo_SetAngle
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text52
 10181  0056C8                     __ptext52:
 10182                           	callstack 0
 10183  0056C8                     _PCA_Write_Reg:
 10184                           	callstack 19
 10185  0056C8                     
 10186                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 69: static void PCA_Write_Reg(con
      +                          st mssp_i2c_st *i2c_obj,uint8 slave_address,uint8 reg_address,uint8 data);ECU/SERVO_MOTO
      +                          R_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 70: {;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_m
      +                          otor_i2c.c: 71:     uint8 ack=6;
 10187  0056C8  0E06               	movlw	6
 10188  0056CA  6E23               	movwf	PCA_Write_Reg@ack^0,c
 10189  0056CC                     
 10190                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 73:     MSSP_I2C_Master_Send_Star
      +                          t(i2c_obj);
 10191  0056CC  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10192  0056D0  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10193  0056D4  EC01  F02D         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10194  0056D8                     
 10195                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 75:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,slave_address,&ack);
 10196  0056D8  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
 10197  0056DC  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
 10198  0056E0  C062  F020         	movff	PCA_Write_Reg@slave_address,MSSP_I2C_Master_Write_Blocking@i2c_data
 10199  0056E4  0E23               	movlw	low PCA_Write_Reg@ack
 10200  0056E6  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
 10201  0056E8  0E00               	movlw	high PCA_Write_Reg@ack
 10202  0056EA  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
 10203  0056EC  EC60  F02A         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 10204  0056F0                     
 10205                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 77:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,reg_address,&ack);
 10206  0056F0  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
 10207  0056F4  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
 10208  0056F8  C063  F020         	movff	PCA_Write_Reg@reg_address,MSSP_I2C_Master_Write_Blocking@i2c_data
 10209  0056FC  0E23               	movlw	low PCA_Write_Reg@ack
 10210  0056FE  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
 10211  005700  0E00               	movlw	high PCA_Write_Reg@ack
 10212  005702  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
 10213  005704  EC60  F02A         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 10214  005708                     
 10215                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 79:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,data,&ack);
 10216  005708  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
 10217  00570C  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
 10218  005710  C064  F020         	movff	PCA_Write_Reg@data,MSSP_I2C_Master_Write_Blocking@i2c_data
 10219  005714  0E23               	movlw	low PCA_Write_Reg@ack
 10220  005716  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
 10221  005718  0E00               	movlw	high PCA_Write_Reg@ack
 10222  00571A  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
 10223  00571C  EC60  F02A         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 10224  005720                     
 10225                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 81:     MSSP_I2C_Master_Send_Stop
      +                          (i2c_obj);
 10226  005720  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10227  005724  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10228  005728  ECE5  F02C         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10229  00572C  0012               	return		;funcret
 10230  00572E                     __end_of_PCA_Write_Reg:
 10231                           	callstack 0
 10232                           
 10233 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
 10234 ;; Defined at:
 10235 ;;		line 196 in file "MCAL/I2C/mcal_i2c.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
 10238 ;;		 -> i2c_obj(7), 
 10239 ;;  i2c_data        1   31[COMRAM] unsigned char 
 10240 ;;  _ack            2   32[COMRAM] PTR unsigned char 
 10241 ;;		 -> PCA_Write_Reg@ack(1), 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  ERRORSTATUS     1    0        unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      unsigned char 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10253 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;Total ram usage:        5 bytes
 10258 ;; Hardware stack levels used: 1
 10259 ;; Hardware stack levels required when called: 8
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_PCA_Write_Reg
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text53
 10268  0054C0                     __ptext53:
 10269                           	callstack 0
 10270  0054C0                     _MSSP_I2C_Master_Write_Blocking:
 10271                           	callstack 19
 10272  0054C0                     
 10273                           ;MCAL/I2C/mcal_i2c.c: 199:     if (((void*)0)==i2c_obj||((void*)0)==_ack)
 10274  0054C0  501E               	movf	MSSP_I2C_Master_Write_Blocking@i2c_obj^0,w,c
 10275  0054C2  101F               	iorwf	(MSSP_I2C_Master_Write_Blocking@i2c_obj+1)^0,w,c
 10276  0054C4  B4D8               	btfsc	status,2,c
 10277  0054C6  EF67  F02A         	goto	u11201
 10278  0054CA  EF69  F02A         	goto	u11200
 10279  0054CE                     u11201:
 10280  0054CE  EF72  F02A         	goto	l10961
 10281  0054D2                     u11200:
 10282  0054D2  5021               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
 10283  0054D4  1022               	iorwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,w,c
 10284  0054D6  A4D8               	btfss	status,2,c
 10285  0054D8  EF70  F02A         	goto	u11211
 10286  0054DC  EF72  F02A         	goto	u11210
 10287  0054E0                     u11211:
 10288  0054E0  EF74  F02A         	goto	l1038
 10289  0054E4                     u11210:
 10290  0054E4                     l10961:
 10291                           
 10292                           ;MCAL/I2C/mcal_i2c.c: 202:     }
 10293  0054E4  EF93  F02A         	goto	l1047
 10294  0054E8                     l1038:
 10295                           
 10296                           ;MCAL/I2C/mcal_i2c.c: 204:     {;MCAL/I2C/mcal_i2c.c: 206:         SSPBUF=i2c_data;
 10297  0054E8  C020  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@i2c_data,4041	;volatile
 10298  0054EC                     l1042:
 10299  0054EC  B0C7               	btfsc	199,0,c	;volatile
 10300  0054EE  EF7B  F02A         	goto	u11221
 10301  0054F2  EF7D  F02A         	goto	u11220
 10302  0054F6                     u11221:
 10303  0054F6  EF76  F02A         	goto	l1042
 10304  0054FA                     u11220:
 10305  0054FA                     
 10306                           ;MCAL/I2C/mcal_i2c.c: 210:         PIR1bits.SSPIF = 0;
 10307  0054FA  969E               	bcf	158,3,c	;volatile
 10308                           
 10309                           ;MCAL/I2C/mcal_i2c.c: 212:         if(0 == SSPCON2bits.ACKSTAT)
 10310  0054FC  BCC5               	btfsc	197,6,c	;volatile
 10311  0054FE  EF83  F02A         	goto	u11231
 10312  005502  EF85  F02A         	goto	u11230
 10313  005506                     u11231:
 10314  005506  EF8D  F02A         	goto	l10965
 10315  00550A                     u11230:
 10316  00550A                     
 10317                           ;MCAL/I2C/mcal_i2c.c: 213:         {;MCAL/I2C/mcal_i2c.c: 214:             *_ack = 0;
 10318  00550A  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
 10319  00550E  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
 10320  005512  0E00               	movlw	0
 10321  005514  6EDF               	movwf	indf2,c
 10322                           
 10323                           ;MCAL/I2C/mcal_i2c.c: 215:         }
 10324  005516  EF93  F02A         	goto	l1047
 10325  00551A                     l10965:
 10326                           
 10327                           ;MCAL/I2C/mcal_i2c.c: 217:         {;MCAL/I2C/mcal_i2c.c: 218:             *_ack = 1;
 10328  00551A  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
 10329  00551E  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
 10330  005522  0E01               	movlw	1
 10331  005524  6EDF               	movwf	indf2,c
 10332  005526                     l1047:
 10333  005526  0012               	return		;funcret
 10334  005528                     __end_of_MSSP_I2C_Master_Write_Blocking:
 10335                           	callstack 0
 10336                           
 10337 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
 10338 ;; Defined at:
 10339 ;;		line 166 in file "MCAL/I2C/mcal_i2c.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
 10342 ;;		 -> i2c_obj(7), 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  ERRORSTATUS     1    0        unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      unsigned char 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;Total ram usage:        2 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 8
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_PCA_Write_Reg
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           	psect	text54
 10369  0059CA                     __ptext54:
 10370                           	callstack 0
 10371  0059CA                     _MSSP_I2C_Master_Send_Stop:
 10372                           	callstack 19
 10373  0059CA                     
 10374                           ;MCAL/I2C/mcal_i2c.c: 169:     if (((void*)0)==i2c_obj)
 10375  0059CA  501E               	movf	MSSP_I2C_Master_Send_Stop@i2c_obj^0,w,c
 10376  0059CC  101F               	iorwf	(MSSP_I2C_Master_Send_Stop@i2c_obj+1)^0,w,c
 10377  0059CE  A4D8               	btfss	status,2,c
 10378  0059D0  EFEC  F02C         	goto	u11241
 10379  0059D4  EFEE  F02C         	goto	u11240
 10380  0059D8                     u11241:
 10381  0059D8  EFF0  F02C         	goto	l1028
 10382  0059DC                     u11240:
 10383  0059DC                     l10973:
 10384                           
 10385                           ;MCAL/I2C/mcal_i2c.c: 172:     }
 10386  0059DC  EF00  F02D         	goto	l1035
 10387  0059E0                     l1028:
 10388                           
 10389                           ;MCAL/I2C/mcal_i2c.c: 174:     {;MCAL/I2C/mcal_i2c.c: 176:         SSPCON2bits.PEN = 1;
 10390  0059E0  84C5               	bsf	197,2,c	;volatile
 10391  0059E2                     l1030:
 10392  0059E2  B4C5               	btfsc	197,2,c	;volatile
 10393  0059E4  EFF6  F02C         	goto	u11251
 10394  0059E8  EFF8  F02C         	goto	u11250
 10395  0059EC                     u11251:
 10396  0059EC  EFF1  F02C         	goto	l1030
 10397  0059F0                     u11250:
 10398  0059F0                     
 10399                           ;MCAL/I2C/mcal_i2c.c: 180:         PIR1bits.SSPIF = 0;
 10400  0059F0  969E               	bcf	158,3,c	;volatile
 10401                           
 10402                           ;MCAL/I2C/mcal_i2c.c: 182:         if(1 == SSPSTATbits.P)
 10403  0059F2  A8C7               	btfss	199,4,c	;volatile
 10404  0059F4  EFFE  F02C         	goto	u11261
 10405  0059F8  EF00  F02D         	goto	u11260
 10406  0059FC                     u11261:
 10407  0059FC  EFEE  F02C         	goto	l10973
 10408  005A00                     u11260:
 10409  005A00                     l1035:
 10410  005A00  0012               	return		;funcret
 10411  005A02                     __end_of_MSSP_I2C_Master_Send_Stop:
 10412                           	callstack 0
 10413                           
 10414 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
 10415 ;; Defined at:
 10416 ;;		line 116 in file "MCAL/I2C/mcal_i2c.c"
 10417 ;; Parameters:    Size  Location     Type
 10418 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
 10419 ;;		 -> i2c_obj(7), 
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  ERRORSTATUS     1    0        unsigned char 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      unsigned char 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;Total ram usage:        2 bytes
 10436 ;; Hardware stack levels used: 1
 10437 ;; Hardware stack levels required when called: 8
 10438 ;; This function calls:
 10439 ;;		Nothing
 10440 ;; This function is called by:
 10441 ;;		_PCA_Write_Reg
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text55
 10446  005A02                     __ptext55:
 10447                           	callstack 0
 10448  005A02                     _MSSP_I2C_Master_Send_Start:
 10449                           	callstack 19
 10450  005A02                     
 10451                           ;MCAL/I2C/mcal_i2c.c: 119:     if (((void*)0)==i2c_obj)
 10452  005A02  501E               	movf	MSSP_I2C_Master_Send_Start@i2c_obj^0,w,c
 10453  005A04  101F               	iorwf	(MSSP_I2C_Master_Send_Start@i2c_obj+1)^0,w,c
 10454  005A06  A4D8               	btfss	status,2,c
 10455  005A08  EF08  F02D         	goto	u11171
 10456  005A0C  EF0A  F02D         	goto	u11170
 10457  005A10                     u11171:
 10458  005A10  EF0C  F02D         	goto	l1010
 10459  005A14                     u11170:
 10460  005A14                     l10947:
 10461                           
 10462                           ;MCAL/I2C/mcal_i2c.c: 122:     }
 10463  005A14  EF1C  F02D         	goto	l1017
 10464  005A18                     l1010:
 10465                           
 10466                           ;MCAL/I2C/mcal_i2c.c: 124:     {;MCAL/I2C/mcal_i2c.c: 126:         SSPCON2bits.SEN = 1;
 10467  005A18  80C5               	bsf	197,0,c	;volatile
 10468  005A1A                     l1012:
 10469  005A1A  B0C5               	btfsc	197,0,c	;volatile
 10470  005A1C  EF12  F02D         	goto	u11181
 10471  005A20  EF14  F02D         	goto	u11180
 10472  005A24                     u11181:
 10473  005A24  EF0D  F02D         	goto	l1012
 10474  005A28                     u11180:
 10475  005A28                     
 10476                           ;MCAL/I2C/mcal_i2c.c: 130:         PIR1bits.SSPIF = 0;
 10477  005A28  969E               	bcf	158,3,c	;volatile
 10478                           
 10479                           ;MCAL/I2C/mcal_i2c.c: 132:         if(1 == SSPSTATbits.S)
 10480  005A2A  A6C7               	btfss	199,3,c	;volatile
 10481  005A2C  EF1A  F02D         	goto	u11191
 10482  005A30  EF1C  F02D         	goto	u11190
 10483  005A34                     u11191:
 10484  005A34  EF0A  F02D         	goto	l10947
 10485  005A38                     u11190:
 10486  005A38                     l1017:
 10487  005A38  0012               	return		;funcret
 10488  005A3A                     __end_of_MSSP_I2C_Master_Send_Start:
 10489                           	callstack 0
 10490                           
 10491 ;; *************** function _Robot_Steer_Stop *****************
 10492 ;; Defined at:
 10493 ;;		line 193 in file "Robot/Navigation/robot_navigation.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  ret_val         1    0        unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used: 1
 10513 ;; Hardware stack levels required when called: 10
 10514 ;; This function calls:
 10515 ;;		_CCP_PWM_Set_Duty
 10516 ;; This function is called by:
 10517 ;;		_Robot_Move_Forward
 10518 ;;		_Robot_Move_Backward
 10519 ;;		_Robot_Steer_Right_Forward
 10520 ;;		_Robot_Steer_Left_Forward
 10521 ;;		_Robot_Steer_Right_Backward
 10522 ;;		_Robot_Steer_Left_Backward
 10523 ;;		_Robot_Steer_Right
 10524 ;;		_Robot_Steer_Left
 10525 ;;		_main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text56
 10530  005C40                     __ptext56:
 10531                           	callstack 0
 10532  005C40                     _Robot_Steer_Stop:
 10533                           	callstack 20
 10534  005C40                     
 10535                           ;Robot/Navigation/robot_navigation.c: 196:             CCP_PWM_Set_Duty(&CCP1_Obj , 0);
 10536  005C40  0E2C               	movlw	low _CCP1_Obj
 10537  005C42  0100               	movlb	0	; () banked
 10538  005C44  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
 10539  005C46  0E01               	movlw	high _CCP1_Obj
 10540  005C48  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
 10541  005C4A  0E00               	movlw	0
 10542  005C4C  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
 10543  005C4E  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
 10544  005C52                     
 10545                           ;Robot/Navigation/robot_navigation.c: 197:             CCP_PWM_Set_Duty(&CCP2_Obj , 0);
 10546  005C52  0E20               	movlw	low _CCP2_Obj
 10547  005C54  0100               	movlb	0	; () banked
 10548  005C56  6FB0               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
 10549  005C58  0E01               	movlw	high _CCP2_Obj
 10550  005C5A  6FB1               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
 10551  005C5C  0E00               	movlw	0
 10552  005C5E  6FB2               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
 10553  005C60  ECDB  F016         	call	_CCP_PWM_Set_Duty	;wreg free
 10554  005C64  0012               	return		;funcret
 10555  005C66                     __end_of_Robot_Steer_Stop:
 10556                           	callstack 0
 10557                           
 10558 ;; *************** function _CCP_PWM_Set_Duty *****************
 10559 ;; Defined at:
 10560 ;;		line 176 in file "MCAL/CCP/hal_ccp.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  _ccp_obj        2   80[BANK0 ] PTR const struct .
 10563 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
 10564 ;;  _duty           1   82[BANK0 ] const unsigned char 
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;  l_duty_temp     2   14[BANK1 ] unsigned short 
 10567 ;;  ret             1    0        unsigned char 
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      unsigned char 
 10570 ;; Registers used:
 10571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10577 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10578 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10579 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10580 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;Total ram usage:       11 bytes
 10582 ;; Hardware stack levels used: 1
 10583 ;; Hardware stack levels required when called: 9
 10584 ;; This function calls:
 10585 ;;		___fldiv
 10586 ;;		___flmul
 10587 ;;		___fltol
 10588 ;;		___xxtofl
 10589 ;; This function is called by:
 10590 ;;		_Robot_Nav_Init
 10591 ;;		_Robot_Move_Forward
 10592 ;;		_Robot_Move_Backward
 10593 ;;		_Robot_Steer_Right_Forward
 10594 ;;		_Robot_Steer_Left_Forward
 10595 ;;		_Robot_Steer_Right_Backward
 10596 ;;		_Robot_Steer_Left_Backward
 10597 ;;		_Robot_Steer_Stop
 10598 ;;		_Robot_Steer_Right
 10599 ;;		_Robot_Steer_Left
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text57
 10604  002DB6                     __ptext57:
 10605                           	callstack 0
 10606  002DB6                     _CCP_PWM_Set_Duty:
 10607                           	callstack 19
 10608  002DB6                     
 10609                           ;MCAL/CCP/hal_ccp.c: 178:     uint16 l_duty_temp = 0;
 10610  002DB6  0E00               	movlw	0
 10611  002DB8  0101               	movlb	1	; () banked
 10612  002DBA  6F75               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)& (0+255),b
 10613  002DBC  0E00               	movlw	0
 10614  002DBE  6F74               	movwf	CCP_PWM_Set_Duty@l_duty_temp& (0+255),b
 10615  002DC0                     
 10616                           ; BSR set to: 1
 10617                           ;MCAL/CCP/hal_ccp.c: 180:     if(((void*)0) == _ccp_obj){
 10618  002DC0  0100               	movlb	0	; () banked
 10619  002DC2  51B0               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
 10620  002DC4  11B1               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
 10621  002DC6  A4D8               	btfss	status,2,c
 10622  002DC8  EFE8  F016         	goto	u12251
 10623  002DCC  EFEA  F016         	goto	u12250
 10624  002DD0                     u12251:
 10625  002DD0  EFEC  F016         	goto	l11679
 10626  002DD4                     u12250:
 10627  002DD4                     
 10628                           ; BSR set to: 0
 10629                           ;MCAL/CCP/hal_ccp.c: 182:     }
 10630  002DD4  EF9E  F017         	goto	l534
 10631  002DD8                     l11679:
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
 10635  002DD8  0E00               	movlw	0
 10636  002DDA  6F72               	movwf	___fldiv@a& (0+255),b
 10637  002DDC  0E00               	movlw	0
 10638  002DDE  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 10639  002DE0  0EC8               	movlw	200
 10640  002DE2  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 10641  002DE4  0E42               	movlw	66
 10642  002DE6  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 10643  002DE8  51B2               	movf	CCP_PWM_Set_Duty@_duty& (0+255),w,b
 10644  002DEA  6F60               	movwf	___xxtofl@val& (0+255),b
 10645  002DEC  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 10646  002DEE  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 10647  002DF0  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 10648  002DF2  0E01               	movlw	1
 10649  002DF4  ECFF  F015         	call	___xxtofl
 10650  002DF8  C060  F06E         	movff	?___xxtofl,___fldiv@b
 10651  002DFC  C061  F06F         	movff	?___xxtofl+1,___fldiv@b+1
 10652  002E00  C062  F070         	movff	?___xxtofl+2,___fldiv@b+2
 10653  002E04  C063  F071         	movff	?___xxtofl+3,___fldiv@b+3
 10654  002E08  EC2D  F011         	call	___fldiv	;wreg free
 10655  002E0C  C06E  F08B         	movff	?___fldiv,___flmul@a
 10656  002E10  C06F  F08C         	movff	?___fldiv+1,___flmul@a+1
 10657  002E14  C070  F08D         	movff	?___fldiv+2,___flmul@a+2
 10658  002E18  C071  F08E         	movff	?___fldiv+3,___flmul@a+3
 10659  002E1C  50CB               	movf	203,w,c	;volatile
 10660  002E1E  0101               	movlb	1	; () banked
 10661  002E20  6F6E               	movwf	??_CCP_PWM_Set_Duty& (0+255),b
 10662  002E22  6B6F               	clrf	(??_CCP_PWM_Set_Duty+1)& (0+255),b
 10663  002E24  0E01               	movlw	1
 10664  002E26  276E               	addwf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10665  002E28  0E00               	movlw	0
 10666  002E2A  236F               	addwfc	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
 10667  002E2C  C16E  F060         	movff	??_CCP_PWM_Set_Duty,___xxtofl@val
 10668  002E30  C16F  F061         	movff	??_CCP_PWM_Set_Duty+1,___xxtofl@val+1
 10669  002E34  0100               	movlb	0	; () banked
 10670  002E36  0E00               	movlw	0
 10671  002E38  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 10672  002E3A  0EFF               	movlw	-1
 10673  002E3C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 10674  002E3E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 10675  002E40  0E01               	movlw	1
 10676  002E42  ECFF  F015         	call	___xxtofl
 10677  002E46  C060  F087         	movff	?___xxtofl,___flmul@b
 10678  002E4A  C061  F088         	movff	?___xxtofl+1,___flmul@b+1
 10679  002E4E  C062  F089         	movff	?___xxtofl+2,___flmul@b+2
 10680  002E52  C063  F08A         	movff	?___xxtofl+3,___flmul@b+3
 10681  002E56  EC32  F00D         	call	___flmul	;wreg free
 10682  002E5A  C087  F170         	movff	?___flmul,_CCP_PWM_Set_Duty$5827
 10683  002E5E  C088  F171         	movff	?___flmul+1,_CCP_PWM_Set_Duty$5827+1
 10684  002E62  C089  F172         	movff	?___flmul+2,_CCP_PWM_Set_Duty$5827+2
 10685  002E66  C08A  F173         	movff	?___flmul+3,_CCP_PWM_Set_Duty$5827+3
 10686                           
 10687                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
 10688  002E6A  0E00               	movlw	0
 10689  002E6C  0100               	movlb	0	; () banked
 10690  002E6E  6F8B               	movwf	___flmul@a& (0+255),b
 10691  002E70  0E00               	movlw	0
 10692  002E72  6F8C               	movwf	(___flmul@a+1)& (0+255),b
 10693  002E74  0E80               	movlw	128
 10694  002E76  6F8D               	movwf	(___flmul@a+2)& (0+255),b
 10695  002E78  0E40               	movlw	64
 10696  002E7A  6F8E               	movwf	(___flmul@a+3)& (0+255),b
 10697  002E7C  C170  F087         	movff	_CCP_PWM_Set_Duty$5827,___flmul@b
 10698  002E80  C171  F088         	movff	_CCP_PWM_Set_Duty$5827+1,___flmul@b+1
 10699  002E84  C172  F089         	movff	_CCP_PWM_Set_Duty$5827+2,___flmul@b+2
 10700  002E88  C173  F08A         	movff	_CCP_PWM_Set_Duty$5827+3,___flmul@b+3
 10701  002E8C  EC32  F00D         	call	___flmul	;wreg free
 10702  002E90  C087  F166         	movff	?___flmul,___fltol@f1
 10703  002E94  C088  F167         	movff	?___flmul+1,___fltol@f1+1
 10704  002E98  C089  F168         	movff	?___flmul+2,___fltol@f1+2
 10705  002E9C  C08A  F169         	movff	?___flmul+3,___fltol@f1+3
 10706  002EA0  EC07  F01C         	call	___fltol	;wreg free
 10707  002EA4  C166  F174         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
 10708  002EA8  C167  F175         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
 10709  002EAC                     
 10710                           ;MCAL/CCP/hal_ccp.c: 186:         if(CCP1_INST == _ccp_obj->ccp_inst){
 10711  002EAC  C0B0  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
 10712  002EB0  C0B1  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
 10713  002EB4  50DF               	movf	indf2,w,c
 10714  002EB6  A4D8               	btfss	status,2,c
 10715  002EB8  EF60  F017         	goto	u12261
 10716  002EBC  EF62  F017         	goto	u12260
 10717  002EC0                     u12261:
 10718  002EC0  EF7B  F017         	goto	l11685
 10719  002EC4                     u12260:
 10720  002EC4                     
 10721                           ;MCAL/CCP/hal_ccp.c: 187:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
 10722  002EC4  C174  F16E         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
 10723  002EC8  0E03               	movlw	3
 10724  002ECA  0101               	movlb	1	; () banked
 10725  002ECC  176E               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10726  002ECE  3B6E               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10727  002ED0  50BD               	movf	189,w,c	;volatile
 10728  002ED2  196E               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
 10729  002ED4  0BCF               	andlw	-49
 10730  002ED6  196E               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
 10731  002ED8  6EBD               	movwf	189,c	;volatile
 10732                           
 10733                           ;MCAL/CCP/hal_ccp.c: 188:             CCPR1L = (uint8)(l_duty_temp >> 2);
 10734  002EDA  C174  F16E         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
 10735  002EDE  C175  F16F         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
 10736  002EE2  90D8               	bcf	status,0,c
 10737  002EE4  336F               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
 10738  002EE6  336E               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10739  002EE8  90D8               	bcf	status,0,c
 10740  002EEA  336F               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
 10741  002EEC  336E               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10742  002EEE  516E               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
 10743  002EF0  6EBE               	movwf	190,c	;volatile
 10744                           
 10745                           ;MCAL/CCP/hal_ccp.c: 189:         }
 10746  002EF2  EF9E  F017         	goto	l11689
 10747  002EF6                     l11685:
 10748  002EF6  C0B0  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
 10749  002EFA  C0B1  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
 10750  002EFE  04DE               	decf	postinc2,w,c
 10751  002F00  A4D8               	btfss	status,2,c
 10752  002F02  EF85  F017         	goto	u12271
 10753  002F06  EF87  F017         	goto	u12270
 10754  002F0A                     u12271:
 10755  002F0A  EF9E  F017         	goto	l11689
 10756  002F0E                     u12270:
 10757  002F0E                     
 10758                           ;MCAL/CCP/hal_ccp.c: 191:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003);
 10759  002F0E  C174  F16E         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
 10760  002F12  0E03               	movlw	3
 10761  002F14  0101               	movlb	1	; () banked
 10762  002F16  176E               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10763  002F18  3B6E               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10764  002F1A  50BA               	movf	186,w,c	;volatile
 10765  002F1C  196E               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
 10766  002F1E  0BCF               	andlw	-49
 10767  002F20  196E               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
 10768  002F22  6EBA               	movwf	186,c	;volatile
 10769                           
 10770                           ;MCAL/CCP/hal_ccp.c: 192:             CCPR2L = (uint8)(l_duty_temp >> 2);
 10771  002F24  C174  F16E         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
 10772  002F28  C175  F16F         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
 10773  002F2C  90D8               	bcf	status,0,c
 10774  002F2E  336F               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
 10775  002F30  336E               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10776  002F32  90D8               	bcf	status,0,c
 10777  002F34  336F               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
 10778  002F36  336E               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
 10779  002F38  516E               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
 10780  002F3A  6EBB               	movwf	187,c	;volatile
 10781  002F3C                     l11689:
 10782  002F3C                     l534:
 10783  002F3C  0012               	return		;funcret
 10784  002F3E                     __end_of_CCP_PWM_Set_Duty:
 10785                           	callstack 0
 10786                           
 10787 ;; *************** function ___fltol *****************
 10788 ;; Defined at:
 10789 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  f1              4    0[BANK1 ] unsigned char 
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;  exp1            1   36[COMRAM] unsigned char 
 10794 ;;  sign1           1   35[COMRAM] unsigned char 
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  4    0[BANK1 ] long 
 10797 ;; Registers used:
 10798 ;;		wreg, status,2, status,0
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10804 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10806 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10807 ;;      Totals:         2       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;Total ram usage:       10 bytes
 10809 ;; Hardware stack levels used: 1
 10810 ;; Hardware stack levels required when called: 8
 10811 ;; This function calls:
 10812 ;;		Nothing
 10813 ;; This function is called by:
 10814 ;;		_Servo_SetAngle
 10815 ;;		_CCP_PWM_Set_Duty
 10816 ;;		_async_config_baud_rate_gen
 10817 ;;		_I2C_Master_Mode_Clock_Configurations
 10818 ;;		_main
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text58
 10823  00380E                     __ptext58:
 10824                           	callstack 0
 10825  00380E                     ___fltol:
 10826                           	callstack 20
 10827  00380E  0101               	movlb	1	; () banked
 10828  003810  3568               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10829  003812  3569               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10830  003814  6E25               	movwf	___fltol@exp1^0,c
 10831  003816  5025               	movf	___fltol@exp1^0,w,c
 10832  003818  A4D8               	btfss	status,2,c
 10833  00381A  EF11  F01C         	goto	u10961
 10834  00381E  EF13  F01C         	goto	u10960
 10835  003822                     u10961:
 10836  003822  EF1D  F01C         	goto	l10835
 10837  003826                     u10960:
 10838  003826                     l10831:
 10839                           
 10840                           ; BSR set to: 1
 10841  003826  0E00               	movlw	0
 10842  003828  6F66               	movwf	?___fltol& (0+255),b
 10843  00382A  0E00               	movlw	0
 10844  00382C  6F67               	movwf	(?___fltol+1)& (0+255),b
 10845  00382E  0E00               	movlw	0
 10846  003830  6F68               	movwf	(?___fltol+2)& (0+255),b
 10847  003832  0E00               	movlw	0
 10848  003834  6F69               	movwf	(?___fltol+3)& (0+255),b
 10849  003836  EF8A  F01C         	goto	l2318
 10850  00383A                     l10835:
 10851                           
 10852                           ; BSR set to: 1
 10853  00383A  C166  F16A         	movff	___fltol@f1,??___fltol
 10854  00383E  C167  F16B         	movff	___fltol@f1+1,??___fltol+1
 10855  003842  C168  F16C         	movff	___fltol@f1+2,??___fltol+2
 10856  003846  C169  F16D         	movff	___fltol@f1+3,??___fltol+3
 10857  00384A  0E20               	movlw	32
 10858  00384C  EF2D  F01C         	goto	u10970
 10859  003850                     u10975:
 10860  003850  90D8               	bcf	status,0,c
 10861  003852  336D               	rrcf	(??___fltol+3)& (0+255),f,b
 10862  003854  336C               	rrcf	(??___fltol+2)& (0+255),f,b
 10863  003856  336B               	rrcf	(??___fltol+1)& (0+255),f,b
 10864  003858  336A               	rrcf	??___fltol& (0+255),f,b
 10865  00385A                     u10970:
 10866  00385A  2EE8               	decfsz	wreg,f,c
 10867  00385C  EF28  F01C         	goto	u10975
 10868  003860  516A               	movf	??___fltol& (0+255),w,b
 10869  003862  6E24               	movwf	___fltol@sign1^0,c
 10870  003864                     
 10871                           ; BSR set to: 1
 10872  003864  8F68               	bsf	(___fltol@f1+2)& (0+255),7,b
 10873  003866                     
 10874                           ; BSR set to: 1
 10875  003866  0EFF               	movlw	255
 10876  003868  1766               	andwf	___fltol@f1& (0+255),f,b
 10877  00386A  0EFF               	movlw	255
 10878  00386C  1767               	andwf	(___fltol@f1+1)& (0+255),f,b
 10879  00386E  0EFF               	movlw	255
 10880  003870  1768               	andwf	(___fltol@f1+2)& (0+255),f,b
 10881  003872  0E00               	movlw	0
 10882  003874  1769               	andwf	(___fltol@f1+3)& (0+255),f,b
 10883  003876                     
 10884                           ; BSR set to: 1
 10885  003876  0E96               	movlw	150
 10886  003878  5E25               	subwf	___fltol@exp1^0,f,c
 10887  00387A                     
 10888                           ; BSR set to: 1
 10889  00387A  BE25               	btfsc	___fltol@exp1^0,7,c
 10890  00387C  EF44  F01C         	goto	u10980
 10891  003880  EF42  F01C         	goto	u10981
 10892  003884                     u10981:
 10893  003884  EF5A  F01C         	goto	l10855
 10894  003888                     u10980:
 10895  003888                     
 10896                           ; BSR set to: 1
 10897  003888  5025               	movf	___fltol@exp1^0,w,c
 10898  00388A  0A80               	xorlw	128
 10899  00388C  0F97               	addlw	151
 10900  00388E  B0D8               	btfsc	status,0,c
 10901  003890  EF4C  F01C         	goto	u10991
 10902  003894  EF4E  F01C         	goto	u10990
 10903  003898                     u10991:
 10904  003898  EF50  F01C         	goto	l10851
 10905  00389C                     u10990:
 10906  00389C  EF13  F01C         	goto	l10831
 10907  0038A0                     l10851:
 10908                           
 10909                           ; BSR set to: 1
 10910  0038A0  90D8               	bcf	status,0,c
 10911  0038A2  3369               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10912  0038A4  3368               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10913  0038A6  3367               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10914  0038A8  3366               	rrcf	___fltol@f1& (0+255),f,b
 10915  0038AA                     
 10916                           ; BSR set to: 1
 10917  0038AA  3E25               	incfsz	___fltol@exp1^0,f,c
 10918  0038AC  EF50  F01C         	goto	l10851
 10919  0038B0  EF72  F01C         	goto	l10865
 10920  0038B4                     l10855:
 10921                           
 10922                           ; BSR set to: 1
 10923  0038B4  0E1F               	movlw	31
 10924  0038B6  6425               	cpfsgt	___fltol@exp1^0,c
 10925  0038B8  EF60  F01C         	goto	u11001
 10926  0038BC  EF62  F01C         	goto	u11000
 10927  0038C0                     u11001:
 10928  0038C0  EF6A  F01C         	goto	l10863
 10929  0038C4                     u11000:
 10930  0038C4  EF13  F01C         	goto	l10831
 10931  0038C8                     l10861:
 10932                           
 10933                           ; BSR set to: 1
 10934  0038C8  90D8               	bcf	status,0,c
 10935  0038CA  3766               	rlcf	___fltol@f1& (0+255),f,b
 10936  0038CC  3767               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10937  0038CE  3768               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10938  0038D0  3769               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10939  0038D2  0625               	decf	___fltol@exp1^0,f,c
 10940  0038D4                     l10863:
 10941                           
 10942                           ; BSR set to: 1
 10943  0038D4  5025               	movf	___fltol@exp1^0,w,c
 10944  0038D6  A4D8               	btfss	status,2,c
 10945  0038D8  EF70  F01C         	goto	u11011
 10946  0038DC  EF72  F01C         	goto	u11010
 10947  0038E0                     u11011:
 10948  0038E0  EF64  F01C         	goto	l10861
 10949  0038E4                     u11010:
 10950  0038E4                     l10865:
 10951                           
 10952                           ; BSR set to: 1
 10953  0038E4  5024               	movf	___fltol@sign1^0,w,c
 10954  0038E6  B4D8               	btfsc	status,2,c
 10955  0038E8  EF78  F01C         	goto	u11021
 10956  0038EC  EF7A  F01C         	goto	u11020
 10957  0038F0                     u11021:
 10958  0038F0  EF82  F01C         	goto	l10869
 10959  0038F4                     u11020:
 10960  0038F4                     
 10961                           ; BSR set to: 1
 10962  0038F4  1F69               	comf	(___fltol@f1+3)& (0+255),f,b
 10963  0038F6  1F68               	comf	(___fltol@f1+2)& (0+255),f,b
 10964  0038F8  1F67               	comf	(___fltol@f1+1)& (0+255),f,b
 10965  0038FA  6D66               	negf	___fltol@f1& (0+255),b
 10966  0038FC  0E00               	movlw	0
 10967  0038FE  2367               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10968  003900  2368               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10969  003902  2369               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10970  003904                     l10869:
 10971                           
 10972                           ; BSR set to: 1
 10973  003904  C166  F166         	movff	___fltol@f1,?___fltol
 10974  003908  C167  F167         	movff	___fltol@f1+1,?___fltol+1
 10975  00390C  C168  F168         	movff	___fltol@f1+2,?___fltol+2
 10976  003910  C169  F169         	movff	___fltol@f1+3,?___fltol+3
 10977  003914                     l2318:
 10978                           
 10979                           ; BSR set to: 1
 10980  003914  0012               	return		;funcret
 10981  003916                     __end_of___fltol:
 10982                           	callstack 0
 10983                           
 10984 ;; *************** function ___flmul *****************
 10985 ;; Defined at:
 10986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  b               4   39[BANK0 ] long 
 10989 ;;  a               4   43[BANK0 ] long 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  prod            4   58[BANK0 ] struct .
 10992 ;;  grs             4   53[BANK0 ] unsigned long 
 10993 ;;  temp            2   62[BANK0 ] struct .
 10994 ;;  bexp            1   57[BANK0 ] unsigned char 
 10995 ;;  aexp            1   52[BANK0 ] unsigned char 
 10996 ;;  sign            1   51[BANK0 ] unsigned char 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  4   39[BANK0 ] unsigned char 
 10999 ;; Registers used:
 11000 ;;		wreg, status,2, status,0, prodl, prodh
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11006 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;Total ram usage:       25 bytes
 11011 ;; Hardware stack levels used: 1
 11012 ;; Hardware stack levels required when called: 8
 11013 ;; This function calls:
 11014 ;;		Nothing
 11015 ;; This function is called by:
 11016 ;;		_Servo_SetAngle
 11017 ;;		_CCP_PWM_Set_Duty
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text59
 11022  001A64                     __ptext59:
 11023                           	callstack 0
 11024  001A64                     ___flmul:
 11025                           	callstack 20
 11026  001A64  0100               	movlb	0	; () banked
 11027  001A66  518A               	movf	(___flmul@b+3)& (0+255),w,b
 11028  001A68  0B80               	andlw	128
 11029  001A6A  6F93               	movwf	___flmul@sign& (0+255),b
 11030  001A6C  518A               	movf	(___flmul@b+3)& (0+255),w,b
 11031  001A6E  258A               	addwf	(___flmul@b+3)& (0+255),w,b
 11032  001A70  6F99               	movwf	___flmul@bexp& (0+255),b
 11033  001A72                     
 11034                           ; BSR set to: 0
 11035  001A72  AF89               	btfss	(___flmul@b+2)& (0+255),7,b
 11036  001A74  EF3E  F00D         	goto	u11691
 11037  001A78  EF40  F00D         	goto	u11690
 11038  001A7C                     u11691:
 11039  001A7C  EF41  F00D         	goto	l11363
 11040  001A80                     u11690:
 11041  001A80                     
 11042                           ; BSR set to: 0
 11043  001A80  8199               	bsf	___flmul@bexp& (0+255),0,b
 11044  001A82                     l11363:
 11045                           
 11046                           ; BSR set to: 0
 11047  001A82  5199               	movf	___flmul@bexp& (0+255),w,b
 11048  001A84  B4D8               	btfsc	status,2,c
 11049  001A86  EF47  F00D         	goto	u11701
 11050  001A8A  EF49  F00D         	goto	u11700
 11051  001A8E                     u11701:
 11052  001A8E  EF5C  F00D         	goto	l11371
 11053  001A92                     u11700:
 11054  001A92                     
 11055                           ; BSR set to: 0
 11056  001A92  2999               	incf	___flmul@bexp& (0+255),w,b
 11057  001A94  A4D8               	btfss	status,2,c
 11058  001A96  EF4F  F00D         	goto	u11711
 11059  001A9A  EF51  F00D         	goto	u11710
 11060  001A9E                     u11711:
 11061  001A9E  EF59  F00D         	goto	l11369
 11062  001AA2                     u11710:
 11063  001AA2                     
 11064                           ; BSR set to: 0
 11065  001AA2  0E00               	movlw	0
 11066  001AA4  6F87               	movwf	___flmul@b& (0+255),b
 11067  001AA6  0E00               	movlw	0
 11068  001AA8  6F88               	movwf	(___flmul@b+1)& (0+255),b
 11069  001AAA  0E00               	movlw	0
 11070  001AAC  6F89               	movwf	(___flmul@b+2)& (0+255),b
 11071  001AAE  0E00               	movlw	0
 11072  001AB0  6F8A               	movwf	(___flmul@b+3)& (0+255),b
 11073  001AB2                     l11369:
 11074                           
 11075                           ; BSR set to: 0
 11076  001AB2  8F89               	bsf	(___flmul@b+2)& (0+255),7,b
 11077  001AB4  EF64  F00D         	goto	l11373
 11078  001AB8                     l11371:
 11079                           
 11080                           ; BSR set to: 0
 11081  001AB8  0E00               	movlw	0
 11082  001ABA  6F87               	movwf	___flmul@b& (0+255),b
 11083  001ABC  0E00               	movlw	0
 11084  001ABE  6F88               	movwf	(___flmul@b+1)& (0+255),b
 11085  001AC0  0E00               	movlw	0
 11086  001AC2  6F89               	movwf	(___flmul@b+2)& (0+255),b
 11087  001AC4  0E00               	movlw	0
 11088  001AC6  6F8A               	movwf	(___flmul@b+3)& (0+255),b
 11089  001AC8                     l11373:
 11090                           
 11091                           ; BSR set to: 0
 11092  001AC8  518E               	movf	(___flmul@a+3)& (0+255),w,b
 11093  001ACA  0B80               	andlw	128
 11094  001ACC  1B93               	xorwf	___flmul@sign& (0+255),f,b
 11095  001ACE                     
 11096                           ; BSR set to: 0
 11097  001ACE  518E               	movf	(___flmul@a+3)& (0+255),w,b
 11098  001AD0  258E               	addwf	(___flmul@a+3)& (0+255),w,b
 11099  001AD2  6F94               	movwf	___flmul@aexp& (0+255),b
 11100  001AD4                     
 11101                           ; BSR set to: 0
 11102  001AD4  AF8D               	btfss	(___flmul@a+2)& (0+255),7,b
 11103  001AD6  EF6F  F00D         	goto	u11721
 11104  001ADA  EF71  F00D         	goto	u11720
 11105  001ADE                     u11721:
 11106  001ADE  EF72  F00D         	goto	l11381
 11107  001AE2                     u11720:
 11108  001AE2                     
 11109                           ; BSR set to: 0
 11110  001AE2  8194               	bsf	___flmul@aexp& (0+255),0,b
 11111  001AE4                     l11381:
 11112                           
 11113                           ; BSR set to: 0
 11114  001AE4  5194               	movf	___flmul@aexp& (0+255),w,b
 11115  001AE6  B4D8               	btfsc	status,2,c
 11116  001AE8  EF78  F00D         	goto	u11731
 11117  001AEC  EF7A  F00D         	goto	u11730
 11118  001AF0                     u11731:
 11119  001AF0  EF8D  F00D         	goto	l11389
 11120  001AF4                     u11730:
 11121  001AF4                     
 11122                           ; BSR set to: 0
 11123  001AF4  2994               	incf	___flmul@aexp& (0+255),w,b
 11124  001AF6  A4D8               	btfss	status,2,c
 11125  001AF8  EF80  F00D         	goto	u11741
 11126  001AFC  EF82  F00D         	goto	u11740
 11127  001B00                     u11741:
 11128  001B00  EF8A  F00D         	goto	l11387
 11129  001B04                     u11740:
 11130  001B04                     
 11131                           ; BSR set to: 0
 11132  001B04  0E00               	movlw	0
 11133  001B06  6F8B               	movwf	___flmul@a& (0+255),b
 11134  001B08  0E00               	movlw	0
 11135  001B0A  6F8C               	movwf	(___flmul@a+1)& (0+255),b
 11136  001B0C  0E00               	movlw	0
 11137  001B0E  6F8D               	movwf	(___flmul@a+2)& (0+255),b
 11138  001B10  0E00               	movlw	0
 11139  001B12  6F8E               	movwf	(___flmul@a+3)& (0+255),b
 11140  001B14                     l11387:
 11141                           
 11142                           ; BSR set to: 0
 11143  001B14  8F8D               	bsf	(___flmul@a+2)& (0+255),7,b
 11144  001B16  EF95  F00D         	goto	l2635
 11145  001B1A                     l11389:
 11146                           
 11147                           ; BSR set to: 0
 11148  001B1A  0E00               	movlw	0
 11149  001B1C  6F8B               	movwf	___flmul@a& (0+255),b
 11150  001B1E  0E00               	movlw	0
 11151  001B20  6F8C               	movwf	(___flmul@a+1)& (0+255),b
 11152  001B22  0E00               	movlw	0
 11153  001B24  6F8D               	movwf	(___flmul@a+2)& (0+255),b
 11154  001B26  0E00               	movlw	0
 11155  001B28  6F8E               	movwf	(___flmul@a+3)& (0+255),b
 11156  001B2A                     l2635:
 11157                           
 11158                           ; BSR set to: 0
 11159  001B2A  5194               	movf	___flmul@aexp& (0+255),w,b
 11160  001B2C  B4D8               	btfsc	status,2,c
 11161  001B2E  EF9B  F00D         	goto	u11751
 11162  001B32  EF9D  F00D         	goto	u11750
 11163  001B36                     u11751:
 11164  001B36  EFA5  F00D         	goto	l11393
 11165  001B3A                     u11750:
 11166  001B3A                     
 11167                           ; BSR set to: 0
 11168  001B3A  5199               	movf	___flmul@bexp& (0+255),w,b
 11169  001B3C  A4D8               	btfss	status,2,c
 11170  001B3E  EFA3  F00D         	goto	u11761
 11171  001B42  EFA5  F00D         	goto	u11760
 11172  001B46                     u11761:
 11173  001B46  EFAF  F00D         	goto	l11397
 11174  001B4A                     u11760:
 11175  001B4A                     l11393:
 11176                           
 11177                           ; BSR set to: 0
 11178  001B4A  0E00               	movlw	0
 11179  001B4C  6F87               	movwf	?___flmul& (0+255),b
 11180  001B4E  0E00               	movlw	0
 11181  001B50  6F88               	movwf	(?___flmul+1)& (0+255),b
 11182  001B52  0E00               	movlw	0
 11183  001B54  6F89               	movwf	(?___flmul+2)& (0+255),b
 11184  001B56  0E00               	movlw	0
 11185  001B58  6F8A               	movwf	(?___flmul+3)& (0+255),b
 11186  001B5A  EF47  F00F         	goto	l2639
 11187  001B5E                     l11397:
 11188                           
 11189                           ; BSR set to: 0
 11190  001B5E  518D               	movf	(___flmul@a+2)& (0+255),w,b
 11191  001B60  0387               	mulwf	___flmul@b& (0+255),b
 11192  001B62  CFF3 F09E          	movff	prodl,___flmul@temp
 11193  001B66  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11194  001B6A                     
 11195                           ; BSR set to: 0
 11196  001B6A  519E               	movf	___flmul@temp& (0+255),w,b
 11197  001B6C  6F95               	movwf	___flmul@grs& (0+255),b
 11198  001B6E  6B96               	clrf	(___flmul@grs+1)& (0+255),b
 11199  001B70  6B97               	clrf	(___flmul@grs+2)& (0+255),b
 11200  001B72  6B98               	clrf	(___flmul@grs+3)& (0+255),b
 11201  001B74                     
 11202                           ; BSR set to: 0
 11203  001B74  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11204  001B76  6F9A               	movwf	___flmul@prod& (0+255),b
 11205  001B78  6B9B               	clrf	(___flmul@prod+1)& (0+255),b
 11206  001B7A  6B9C               	clrf	(___flmul@prod+2)& (0+255),b
 11207  001B7C  6B9D               	clrf	(___flmul@prod+3)& (0+255),b
 11208  001B7E  518C               	movf	(___flmul@a+1)& (0+255),w,b
 11209  001B80  0388               	mulwf	(___flmul@b+1)& (0+255),b
 11210  001B82  CFF3 F09E          	movff	prodl,___flmul@temp
 11211  001B86  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11212  001B8A                     
 11213                           ; BSR set to: 0
 11214  001B8A  519E               	movf	___flmul@temp& (0+255),w,b
 11215  001B8C  2795               	addwf	___flmul@grs& (0+255),f,b
 11216  001B8E  0E00               	movlw	0
 11217  001B90  2396               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11218  001B92  2397               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11219  001B94  2398               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11220  001B96                     
 11221                           ; BSR set to: 0
 11222  001B96  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11223  001B98  279A               	addwf	___flmul@prod& (0+255),f,b
 11224  001B9A  0E00               	movlw	0
 11225  001B9C  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11226  001B9E  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11227  001BA0  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11228  001BA2  518B               	movf	___flmul@a& (0+255),w,b
 11229  001BA4  0389               	mulwf	(___flmul@b+2)& (0+255),b
 11230  001BA6  CFF3 F09E          	movff	prodl,___flmul@temp
 11231  001BAA  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11232  001BAE                     
 11233                           ; BSR set to: 0
 11234  001BAE  519E               	movf	___flmul@temp& (0+255),w,b
 11235  001BB0  2795               	addwf	___flmul@grs& (0+255),f,b
 11236  001BB2  0E00               	movlw	0
 11237  001BB4  2396               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11238  001BB6  2397               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11239  001BB8  2398               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11240  001BBA                     
 11241                           ; BSR set to: 0
 11242  001BBA  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11243  001BBC  279A               	addwf	___flmul@prod& (0+255),f,b
 11244  001BBE  0E00               	movlw	0
 11245  001BC0  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11246  001BC2  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11247  001BC4  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11248  001BC6                     
 11249                           ; BSR set to: 0
 11250  001BC6  C097  F098         	movff	___flmul@grs+2,___flmul@grs+3
 11251  001BCA  C096  F097         	movff	___flmul@grs+1,___flmul@grs+2
 11252  001BCE  C095  F096         	movff	___flmul@grs,___flmul@grs+1
 11253  001BD2  6B95               	clrf	___flmul@grs& (0+255),b
 11254  001BD4                     
 11255                           ; BSR set to: 0
 11256  001BD4  518B               	movf	___flmul@a& (0+255),w,b
 11257  001BD6  0388               	mulwf	(___flmul@b+1)& (0+255),b
 11258  001BD8  CFF3 F09E          	movff	prodl,___flmul@temp
 11259  001BDC  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11260  001BE0                     
 11261                           ; BSR set to: 0
 11262  001BE0  519E               	movf	___flmul@temp& (0+255),w,b
 11263  001BE2  2795               	addwf	___flmul@grs& (0+255),f,b
 11264  001BE4  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11265  001BE6  2396               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11266  001BE8  0E00               	movlw	0
 11267  001BEA  2397               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11268  001BEC  0E00               	movlw	0
 11269  001BEE  2398               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11270  001BF0                     
 11271                           ; BSR set to: 0
 11272  001BF0  518C               	movf	(___flmul@a+1)& (0+255),w,b
 11273  001BF2  0387               	mulwf	___flmul@b& (0+255),b
 11274  001BF4  CFF3 F09E          	movff	prodl,___flmul@temp
 11275  001BF8  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11276  001BFC                     
 11277                           ; BSR set to: 0
 11278  001BFC  519E               	movf	___flmul@temp& (0+255),w,b
 11279  001BFE  2795               	addwf	___flmul@grs& (0+255),f,b
 11280  001C00  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11281  001C02  2396               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11282  001C04  0E00               	movlw	0
 11283  001C06  2397               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11284  001C08  0E00               	movlw	0
 11285  001C0A  2398               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11286  001C0C                     
 11287                           ; BSR set to: 0
 11288  001C0C  C097  F098         	movff	___flmul@grs+2,___flmul@grs+3
 11289  001C10  C096  F097         	movff	___flmul@grs+1,___flmul@grs+2
 11290  001C14  C095  F096         	movff	___flmul@grs,___flmul@grs+1
 11291  001C18  6B95               	clrf	___flmul@grs& (0+255),b
 11292  001C1A  518B               	movf	___flmul@a& (0+255),w,b
 11293  001C1C  0387               	mulwf	___flmul@b& (0+255),b
 11294  001C1E  CFF3 F09E          	movff	prodl,___flmul@temp
 11295  001C22  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11296  001C26                     
 11297                           ; BSR set to: 0
 11298  001C26  519E               	movf	___flmul@temp& (0+255),w,b
 11299  001C28  2795               	addwf	___flmul@grs& (0+255),f,b
 11300  001C2A  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11301  001C2C  2396               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11302  001C2E  0E00               	movlw	0
 11303  001C30  2397               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11304  001C32  0E00               	movlw	0
 11305  001C34  2398               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11306  001C36                     
 11307                           ; BSR set to: 0
 11308  001C36  518D               	movf	(___flmul@a+2)& (0+255),w,b
 11309  001C38  0388               	mulwf	(___flmul@b+1)& (0+255),b
 11310  001C3A  CFF3 F09E          	movff	prodl,___flmul@temp
 11311  001C3E  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11312  001C42  519E               	movf	___flmul@temp& (0+255),w,b
 11313  001C44  279A               	addwf	___flmul@prod& (0+255),f,b
 11314  001C46  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11315  001C48  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11316  001C4A  0E00               	movlw	0
 11317  001C4C  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11318  001C4E  0E00               	movlw	0
 11319  001C50  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11320  001C52                     
 11321                           ; BSR set to: 0
 11322  001C52  518C               	movf	(___flmul@a+1)& (0+255),w,b
 11323  001C54  0389               	mulwf	(___flmul@b+2)& (0+255),b
 11324  001C56  CFF3 F09E          	movff	prodl,___flmul@temp
 11325  001C5A  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11326  001C5E                     
 11327                           ; BSR set to: 0
 11328  001C5E  519E               	movf	___flmul@temp& (0+255),w,b
 11329  001C60  279A               	addwf	___flmul@prod& (0+255),f,b
 11330  001C62  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11331  001C64  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11332  001C66  0E00               	movlw	0
 11333  001C68  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11334  001C6A  0E00               	movlw	0
 11335  001C6C  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11336  001C6E  518D               	movf	(___flmul@a+2)& (0+255),w,b
 11337  001C70  0389               	mulwf	(___flmul@b+2)& (0+255),b
 11338  001C72  CFF3 F09E          	movff	prodl,___flmul@temp
 11339  001C76  CFF4 F09F          	movff	prodh,___flmul@temp+1
 11340  001C7A                     
 11341                           ; BSR set to: 0
 11342  001C7A  519E               	movf	___flmul@temp& (0+255),w,b
 11343  001C7C  6F8F               	movwf	??___flmul& (0+255),b
 11344  001C7E  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11345  001C80  6F90               	movwf	(??___flmul+1)& (0+255),b
 11346  001C82  6B91               	clrf	(??___flmul+2)& (0+255),b
 11347  001C84  6B92               	clrf	(??___flmul+3)& (0+255),b
 11348  001C86  C091  F092         	movff	??___flmul+2,??___flmul+3
 11349  001C8A  C090  F091         	movff	??___flmul+1,??___flmul+2
 11350  001C8E  C08F  F090         	movff	??___flmul,??___flmul+1
 11351  001C92  6B8F               	clrf	??___flmul& (0+255),b
 11352  001C94  518F               	movf	??___flmul& (0+255),w,b
 11353  001C96  279A               	addwf	___flmul@prod& (0+255),f,b
 11354  001C98  5190               	movf	(??___flmul+1)& (0+255),w,b
 11355  001C9A  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11356  001C9C  5191               	movf	(??___flmul+2)& (0+255),w,b
 11357  001C9E  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11358  001CA0  5192               	movf	(??___flmul+3)& (0+255),w,b
 11359  001CA2  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11360  001CA4                     
 11361                           ; BSR set to: 0
 11362  001CA4  C095  F08F         	movff	___flmul@grs,??___flmul
 11363  001CA8  C096  F090         	movff	___flmul@grs+1,??___flmul+1
 11364  001CAC  C097  F091         	movff	___flmul@grs+2,??___flmul+2
 11365  001CB0  C098  F092         	movff	___flmul@grs+3,??___flmul+3
 11366  001CB4  0E19               	movlw	25
 11367  001CB6  EF62  F00E         	goto	u11770
 11368  001CBA                     u11775:
 11369  001CBA  90D8               	bcf	status,0,c
 11370  001CBC  3392               	rrcf	(??___flmul+3)& (0+255),f,b
 11371  001CBE  3391               	rrcf	(??___flmul+2)& (0+255),f,b
 11372  001CC0  3390               	rrcf	(??___flmul+1)& (0+255),f,b
 11373  001CC2  338F               	rrcf	??___flmul& (0+255),f,b
 11374  001CC4                     u11770:
 11375  001CC4  2EE8               	decfsz	wreg,f,c
 11376  001CC6  EF5D  F00E         	goto	u11775
 11377  001CCA  518F               	movf	??___flmul& (0+255),w,b
 11378  001CCC  279A               	addwf	___flmul@prod& (0+255),f,b
 11379  001CCE  5190               	movf	(??___flmul+1)& (0+255),w,b
 11380  001CD0  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11381  001CD2  5191               	movf	(??___flmul+2)& (0+255),w,b
 11382  001CD4  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11383  001CD6  5192               	movf	(??___flmul+3)& (0+255),w,b
 11384  001CD8  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11385  001CDA                     
 11386                           ; BSR set to: 0
 11387  001CDA  C097  F098         	movff	___flmul@grs+2,___flmul@grs+3
 11388  001CDE  C096  F097         	movff	___flmul@grs+1,___flmul@grs+2
 11389  001CE2  C095  F096         	movff	___flmul@grs,___flmul@grs+1
 11390  001CE6  6B95               	clrf	___flmul@grs& (0+255),b
 11391  001CE8                     
 11392                           ; BSR set to: 0
 11393  001CE8  5194               	movf	___flmul@aexp& (0+255),w,b
 11394  001CEA  C099  F08F         	movff	___flmul@bexp,??___flmul
 11395  001CEE  6B90               	clrf	(??___flmul+1)& (0+255),b
 11396  001CF0  278F               	addwf	??___flmul& (0+255),f,b
 11397  001CF2  0E00               	movlw	0
 11398  001CF4  2390               	addwfc	(??___flmul+1)& (0+255),f,b
 11399  001CF6  0E82               	movlw	130
 11400  001CF8  258F               	addwf	??___flmul& (0+255),w,b
 11401  001CFA  6F9E               	movwf	___flmul@temp& (0+255),b
 11402  001CFC  0EFF               	movlw	255
 11403  001CFE  2190               	addwfc	(??___flmul+1)& (0+255),w,b
 11404  001D00  6F9F               	movwf	(___flmul@temp+1)& (0+255),b
 11405  001D02  EF98  F00E         	goto	l11445
 11406  001D06                     l11439:
 11407                           
 11408                           ; BSR set to: 0
 11409  001D06  90D8               	bcf	status,0,c
 11410  001D08  379A               	rlcf	___flmul@prod& (0+255),f,b
 11411  001D0A  379B               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11412  001D0C  379C               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11413  001D0E  379D               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11414  001D10                     
 11415                           ; BSR set to: 0
 11416  001D10  AF98               	btfss	(___flmul@grs+3)& (0+255),7,b
 11417  001D12  EF8D  F00E         	goto	u11781
 11418  001D16  EF8F  F00E         	goto	u11780
 11419  001D1A                     u11781:
 11420  001D1A  EF90  F00E         	goto	l2642
 11421  001D1E                     u11780:
 11422  001D1E                     
 11423                           ; BSR set to: 0
 11424  001D1E  819A               	bsf	___flmul@prod& (0+255),0,b
 11425  001D20                     l2642:
 11426                           
 11427                           ; BSR set to: 0
 11428  001D20  90D8               	bcf	status,0,c
 11429  001D22  3795               	rlcf	___flmul@grs& (0+255),f,b
 11430  001D24  3796               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11431  001D26  3797               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11432  001D28  3798               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11433  001D2A  079E               	decf	___flmul@temp& (0+255),f,b
 11434  001D2C  A0D8               	btfss	status,0,c
 11435  001D2E  079F               	decf	(___flmul@temp+1)& (0+255),f,b
 11436  001D30                     l11445:
 11437                           
 11438                           ; BSR set to: 0
 11439  001D30  AF9C               	btfss	(___flmul@prod+2)& (0+255),7,b
 11440  001D32  EF9D  F00E         	goto	u11791
 11441  001D36  EF9F  F00E         	goto	u11790
 11442  001D3A                     u11791:
 11443  001D3A  EF83  F00E         	goto	l11439
 11444  001D3E                     u11790:
 11445  001D3E                     
 11446                           ; BSR set to: 0
 11447  001D3E  0E00               	movlw	0
 11448  001D40  6F94               	movwf	___flmul@aexp& (0+255),b
 11449  001D42                     
 11450                           ; BSR set to: 0
 11451  001D42  AF98               	btfss	(___flmul@grs+3)& (0+255),7,b
 11452  001D44  EFA6  F00E         	goto	u11801
 11453  001D48  EFA8  F00E         	goto	u11800
 11454  001D4C                     u11801:
 11455  001D4C  EFCC  F00E         	goto	l2644
 11456  001D50                     u11800:
 11457  001D50                     
 11458                           ; BSR set to: 0
 11459  001D50  0EFF               	movlw	255
 11460  001D52  1595               	andwf	___flmul@grs& (0+255),w,b
 11461  001D54  6F8F               	movwf	??___flmul& (0+255),b
 11462  001D56  0EFF               	movlw	255
 11463  001D58  1596               	andwf	(___flmul@grs+1)& (0+255),w,b
 11464  001D5A  6F90               	movwf	(??___flmul+1)& (0+255),b
 11465  001D5C  0EFF               	movlw	255
 11466  001D5E  1597               	andwf	(___flmul@grs+2)& (0+255),w,b
 11467  001D60  6F91               	movwf	(??___flmul+2)& (0+255),b
 11468  001D62  0E7F               	movlw	127
 11469  001D64  1598               	andwf	(___flmul@grs+3)& (0+255),w,b
 11470  001D66  6F92               	movwf	(??___flmul+3)& (0+255),b
 11471  001D68  518F               	movf	??___flmul& (0+255),w,b
 11472  001D6A  1190               	iorwf	(??___flmul+1)& (0+255),w,b
 11473  001D6C  1191               	iorwf	(??___flmul+2)& (0+255),w,b
 11474  001D6E  1192               	iorwf	(??___flmul+3)& (0+255),w,b
 11475  001D70  B4D8               	btfsc	status,2,c
 11476  001D72  EFBD  F00E         	goto	u11811
 11477  001D76  EFBF  F00E         	goto	u11810
 11478  001D7A                     u11811:
 11479  001D7A  EFC3  F00E         	goto	l2645
 11480  001D7E                     u11810:
 11481  001D7E                     l11453:
 11482                           
 11483                           ; BSR set to: 0
 11484  001D7E  0E01               	movlw	1
 11485  001D80  6F94               	movwf	___flmul@aexp& (0+255),b
 11486  001D82  EFCC  F00E         	goto	l2644
 11487  001D86                     l2645:
 11488                           
 11489                           ; BSR set to: 0
 11490  001D86  A19A               	btfss	___flmul@prod& (0+255),0,b
 11491  001D88  EFC8  F00E         	goto	u11821
 11492  001D8C  EFCA  F00E         	goto	u11820
 11493  001D90                     u11821:
 11494  001D90  EFCC  F00E         	goto	l2644
 11495  001D94                     u11820:
 11496  001D94  EFBF  F00E         	goto	l11453
 11497  001D98                     l2644:
 11498                           
 11499                           ; BSR set to: 0
 11500  001D98  5194               	movf	___flmul@aexp& (0+255),w,b
 11501  001D9A  B4D8               	btfsc	status,2,c
 11502  001D9C  EFD2  F00E         	goto	u11831
 11503  001DA0  EFD4  F00E         	goto	u11830
 11504  001DA4                     u11831:
 11505  001DA4  EFF8  F00E         	goto	l11465
 11506  001DA8                     u11830:
 11507  001DA8                     
 11508                           ; BSR set to: 0
 11509  001DA8  0E01               	movlw	1
 11510  001DAA  279A               	addwf	___flmul@prod& (0+255),f,b
 11511  001DAC  0E00               	movlw	0
 11512  001DAE  239B               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11513  001DB0  239C               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11514  001DB2  239D               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11515  001DB4                     
 11516                           ; BSR set to: 0
 11517  001DB4  A19D               	btfss	(___flmul@prod+3)& (0+255),0,b
 11518  001DB6  EFDF  F00E         	goto	u11841
 11519  001DBA  EFE1  F00E         	goto	u11840
 11520  001DBE                     u11841:
 11521  001DBE  EFF8  F00E         	goto	l11465
 11522  001DC2                     u11840:
 11523  001DC2                     
 11524                           ; BSR set to: 0
 11525  001DC2  C09A  F08F         	movff	___flmul@prod,??___flmul
 11526  001DC6  C09B  F090         	movff	___flmul@prod+1,??___flmul+1
 11527  001DCA  C09C  F091         	movff	___flmul@prod+2,??___flmul+2
 11528  001DCE  C09D  F092         	movff	___flmul@prod+3,??___flmul+3
 11529  001DD2  3592               	rlcf	(??___flmul+3)& (0+255),w,b
 11530  001DD4  3392               	rrcf	(??___flmul+3)& (0+255),f,b
 11531  001DD6  3391               	rrcf	(??___flmul+2)& (0+255),f,b
 11532  001DD8  3390               	rrcf	(??___flmul+1)& (0+255),f,b
 11533  001DDA  338F               	rrcf	??___flmul& (0+255),f,b
 11534  001DDC  C08F  F09A         	movff	??___flmul,___flmul@prod
 11535  001DE0  C090  F09B         	movff	??___flmul+1,___flmul@prod+1
 11536  001DE4  C091  F09C         	movff	??___flmul+2,___flmul@prod+2
 11537  001DE8  C092  F09D         	movff	??___flmul+3,___flmul@prod+3
 11538  001DEC                     
 11539                           ; BSR set to: 0
 11540  001DEC  4B9E               	infsnz	___flmul@temp& (0+255),f,b
 11541  001DEE  2B9F               	incf	(___flmul@temp+1)& (0+255),f,b
 11542  001DF0                     l11465:
 11543                           
 11544                           ; BSR set to: 0
 11545  001DF0  BF9F               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11546  001DF2  EF03  F00F         	goto	u11851
 11547  001DF6  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11548  001DF8  E108               	bnz	u11850
 11549  001DFA  299E               	incf	___flmul@temp& (0+255),w,b
 11550  001DFC  A0D8               	btfss	status,0,c
 11551  001DFE  EF03  F00F         	goto	u11851
 11552  001E02  EF05  F00F         	goto	u11850
 11553  001E06                     u11851:
 11554  001E06  EF0F  F00F         	goto	l11469
 11555  001E0A                     u11850:
 11556  001E0A                     
 11557                           ; BSR set to: 0
 11558  001E0A  0E00               	movlw	0
 11559  001E0C  6F9A               	movwf	___flmul@prod& (0+255),b
 11560  001E0E  0E00               	movlw	0
 11561  001E10  6F9B               	movwf	(___flmul@prod+1)& (0+255),b
 11562  001E12  0E80               	movlw	128
 11563  001E14  6F9C               	movwf	(___flmul@prod+2)& (0+255),b
 11564  001E16  0E7F               	movlw	127
 11565  001E18  6F9D               	movwf	(___flmul@prod+3)& (0+255),b
 11566  001E1A  EF3D  F00F         	goto	l11481
 11567  001E1E                     l11469:
 11568                           
 11569                           ; BSR set to: 0
 11570  001E1E  BF9F               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11571  001E20  EF1C  F00F         	goto	u11860
 11572  001E24  519F               	movf	(___flmul@temp+1)& (0+255),w,b
 11573  001E26  E106               	bnz	u11861
 11574  001E28  059E               	decf	___flmul@temp& (0+255),w,b
 11575  001E2A  B0D8               	btfsc	status,0,c
 11576  001E2C  EF1A  F00F         	goto	u11861
 11577  001E30  EF1C  F00F         	goto	u11860
 11578  001E34                     u11861:
 11579  001E34  EF28  F00F         	goto	l2652
 11580  001E38                     u11860:
 11581  001E38                     
 11582                           ; BSR set to: 0
 11583  001E38  0E00               	movlw	0
 11584  001E3A  6F9A               	movwf	___flmul@prod& (0+255),b
 11585  001E3C  0E00               	movlw	0
 11586  001E3E  6F9B               	movwf	(___flmul@prod+1)& (0+255),b
 11587  001E40  0E00               	movlw	0
 11588  001E42  6F9C               	movwf	(___flmul@prod+2)& (0+255),b
 11589  001E44  0E00               	movlw	0
 11590  001E46  6F9D               	movwf	(___flmul@prod+3)& (0+255),b
 11591  001E48  0E00               	movlw	0
 11592  001E4A  6F93               	movwf	___flmul@sign& (0+255),b
 11593  001E4C  EF3D  F00F         	goto	l11481
 11594  001E50                     l2652:
 11595                           
 11596                           ; BSR set to: 0
 11597  001E50  C09E  F099         	movff	___flmul@temp,___flmul@bexp
 11598  001E54                     
 11599                           ; BSR set to: 0
 11600  001E54  0EFF               	movlw	255
 11601  001E56  179A               	andwf	___flmul@prod& (0+255),f,b
 11602  001E58  0EFF               	movlw	255
 11603  001E5A  179B               	andwf	(___flmul@prod+1)& (0+255),f,b
 11604  001E5C  0E7F               	movlw	127
 11605  001E5E  179C               	andwf	(___flmul@prod+2)& (0+255),f,b
 11606  001E60  0E00               	movlw	0
 11607  001E62  179D               	andwf	(___flmul@prod+3)& (0+255),f,b
 11608  001E64                     
 11609                           ; BSR set to: 0
 11610  001E64  A199               	btfss	___flmul@bexp& (0+255),0,b
 11611  001E66  EF37  F00F         	goto	u11871
 11612  001E6A  EF39  F00F         	goto	u11870
 11613  001E6E                     u11871:
 11614  001E6E  EF3A  F00F         	goto	l11479
 11615  001E72                     u11870:
 11616  001E72                     
 11617                           ; BSR set to: 0
 11618  001E72  8F9C               	bsf	(___flmul@prod+2)& (0+255),7,b
 11619  001E74                     l11479:
 11620                           
 11621                           ; BSR set to: 0
 11622  001E74  90D8               	bcf	status,0,c
 11623  001E76  3199               	rrcf	___flmul@bexp& (0+255),w,b
 11624  001E78  6F9D               	movwf	(___flmul@prod+3)& (0+255),b
 11625  001E7A                     l11481:
 11626                           
 11627                           ; BSR set to: 0
 11628  001E7A  5193               	movf	___flmul@sign& (0+255),w,b
 11629  001E7C  139D               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11630  001E7E                     
 11631                           ; BSR set to: 0
 11632  001E7E  C09A  F087         	movff	___flmul@prod,?___flmul
 11633  001E82  C09B  F088         	movff	___flmul@prod+1,?___flmul+1
 11634  001E86  C09C  F089         	movff	___flmul@prod+2,?___flmul+2
 11635  001E8A  C09D  F08A         	movff	___flmul@prod+3,?___flmul+3
 11636  001E8E                     l2639:
 11637                           
 11638                           ; BSR set to: 0
 11639  001E8E  0012               	return		;funcret
 11640  001E90                     __end_of___flmul:
 11641                           	callstack 0
 11642                           
 11643 ;; *************** function _ECU_DC_Motor_Run_Left *****************
 11644 ;; Defined at:
 11645 ;;		line 39 in file "ECU/DC_Motor/ecu_dc_motor.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  dc_motor        2   33[COMRAM] PTR const struct .
 11648 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;  ret_value       1    0        unsigned char 
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      unsigned char 
 11653 ;; Registers used:
 11654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11664 ;;Total ram usage:        2 bytes
 11665 ;; Hardware stack levels used: 1
 11666 ;; Hardware stack levels required when called: 9
 11667 ;; This function calls:
 11668 ;;		_GPIO_Pin_Write_Logic
 11669 ;; This function is called by:
 11670 ;;		_Robot_Move_Backward
 11671 ;;		_Robot_Steer_Right_Backward
 11672 ;;		_Robot_Steer_Left_Backward
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           	psect	text60
 11677  005BCC                     __ptext60:
 11678                           	callstack 0
 11679  005BCC                     _ECU_DC_Motor_Run_Left:
 11680                           	callstack 20
 11681  005BCC                     
 11682                           ;ECU/DC_Motor/ecu_dc_motor.c: 42:     if(((void*)0) == dc_motor)
 11683  005BCC  5022               	movf	ECU_DC_Motor_Run_Left@dc_motor^0,w,c
 11684  005BCE  1023               	iorwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,w,c
 11685  005BD0  A4D8               	btfss	status,2,c
 11686  005BD2  EFED  F02D         	goto	u12631
 11687  005BD6  EFEF  F02D         	goto	u12630
 11688  005BDA                     u12631:
 11689  005BDA  EFF1  F02D         	goto	l11901
 11690  005BDE                     u12630:
 11691  005BDE                     
 11692                           ;ECU/DC_Motor/ecu_dc_motor.c: 45:     }
 11693  005BDE  EFF9  F02D         	goto	l60
 11694  005BE2                     l11901:
 11695                           
 11696                           ;ECU/DC_Motor/ecu_dc_motor.c: 47:     {;ECU/DC_Motor/ecu_dc_motor.c: 48:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_HIGH );
 11697  005BE2  C022  F01E         	movff	ECU_DC_Motor_Run_Left@dc_motor,GPIO_Pin_Write_Logic@_pin_config
 11698  005BE6  C023  F01F         	movff	ECU_DC_Motor_Run_Left@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
 11699  005BEA  0E01               	movlw	1
 11700  005BEC  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11701  005BEE  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
 11702  005BF2                     l60:
 11703  005BF2  0012               	return		;funcret
 11704  005BF4                     __end_of_ECU_DC_Motor_Run_Left:
 11705                           	callstack 0
 11706                           
 11707 ;; *************** function _Get_Temp_HUM *****************
 11708 ;; Defined at:
 11709 ;;		line 13 in file "Robot/sensors/DHT11/DHT.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  RH_Decimal      2    0[BANK0 ] PTR unsigned char 
 11712 ;;		 -> RH_Decimal(1), 
 11713 ;;  RH_Integral     2    2[BANK0 ] PTR unsigned char 
 11714 ;;		 -> RH_Integral(1), 
 11715 ;;  T_Decimal       2    4[BANK0 ] PTR unsigned char 
 11716 ;;		 -> T_Decimal(1), 
 11717 ;;  T_Integral      2    6[BANK0 ] PTR unsigned char 
 11718 ;;		 -> T_Integral(1), 
 11719 ;;  Checksum        2    8[BANK0 ] PTR unsigned char 
 11720 ;;		 -> Checksum(1), 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;  ERRORSTATUS     1    0        unsigned char 
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  1    wreg      unsigned char 
 11725 ;; Registers used:
 11726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11732 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;Total ram usage:       10 bytes
 11737 ;; Hardware stack levels used: 1
 11738 ;; Hardware stack levels required when called: 9
 11739 ;; This function calls:
 11740 ;;		_DHT11_Check_Response
 11741 ;;		_DHT11_Read_Data
 11742 ;;		_DHT11_Start
 11743 ;; This function is called by:
 11744 ;;		_main
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           	psect	text61
 11749  004B4A                     __ptext61:
 11750                           	callstack 0
 11751  004B4A                     _Get_Temp_HUM:
 11752                           	callstack 21
 11753  004B4A                     
 11754                           ;Robot/sensors/DHT11/DHT.c: 16:     if ( ((void*)0)==RH_Decimal||((void*)0)==RH_Integral
      +                          ||((void*)0)==T_Decimal||((void*)0)==T_Integral||((void*)0)==Checksum)
 11755  004B4A  0100               	movlb	0	; () banked
 11756  004B4C  5160               	movf	Get_Temp_HUM@RH_Decimal& (0+255),w,b
 11757  004B4E  1161               	iorwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),w,b
 11758  004B50  B4D8               	btfsc	status,2,c
 11759  004B52  EFAD  F025         	goto	u13131
 11760  004B56  EFAF  F025         	goto	u13130
 11761  004B5A                     u13131:
 11762  004B5A  EFD3  F025         	goto	l12513
 11763  004B5E                     u13130:
 11764  004B5E                     
 11765                           ; BSR set to: 0
 11766  004B5E  5162               	movf	Get_Temp_HUM@RH_Integral& (0+255),w,b
 11767  004B60  1163               	iorwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),w,b
 11768  004B62  B4D8               	btfsc	status,2,c
 11769  004B64  EFB6  F025         	goto	u13141
 11770  004B68  EFB8  F025         	goto	u13140
 11771  004B6C                     u13141:
 11772  004B6C  EFD3  F025         	goto	l12513
 11773  004B70                     u13140:
 11774  004B70                     
 11775                           ; BSR set to: 0
 11776  004B70  5164               	movf	Get_Temp_HUM@T_Decimal& (0+255),w,b
 11777  004B72  1165               	iorwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),w,b
 11778  004B74  B4D8               	btfsc	status,2,c
 11779  004B76  EFBF  F025         	goto	u13151
 11780  004B7A  EFC1  F025         	goto	u13150
 11781  004B7E                     u13151:
 11782  004B7E  EFD3  F025         	goto	l12513
 11783  004B82                     u13150:
 11784  004B82                     
 11785                           ; BSR set to: 0
 11786  004B82  5166               	movf	Get_Temp_HUM@T_Integral& (0+255),w,b
 11787  004B84  1167               	iorwf	(Get_Temp_HUM@T_Integral+1)& (0+255),w,b
 11788  004B86  B4D8               	btfsc	status,2,c
 11789  004B88  EFC8  F025         	goto	u13161
 11790  004B8C  EFCA  F025         	goto	u13160
 11791  004B90                     u13161:
 11792  004B90  EFD3  F025         	goto	l12513
 11793  004B94                     u13160:
 11794  004B94                     
 11795                           ; BSR set to: 0
 11796  004B94  5168               	movf	Get_Temp_HUM@Checksum& (0+255),w,b
 11797  004B96  1169               	iorwf	(Get_Temp_HUM@Checksum+1)& (0+255),w,b
 11798  004B98  A4D8               	btfss	status,2,c
 11799  004B9A  EFD1  F025         	goto	u13171
 11800  004B9E  EFD3  F025         	goto	u13170
 11801  004BA2                     u13171:
 11802  004BA2  EFD5  F025         	goto	l12515
 11803  004BA6                     u13170:
 11804  004BA6                     l12513:
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;Robot/sensors/DHT11/DHT.c: 19:     }
 11808  004BA6  EFF7  F025         	goto	l1745
 11809  004BAA                     l12515:
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;Robot/sensors/DHT11/DHT.c: 21:     {;Robot/sensors/DHT11/DHT.c: 22:        DHT11_Start(
      +                          );
 11813  004BAA  EC57  F02E         	call	_DHT11_Start	;wreg free
 11814  004BAE                     
 11815                           ;Robot/sensors/DHT11/DHT.c: 23:        DHT11_Check_Response();
 11816  004BAE  EC66  F02D         	call	_DHT11_Check_Response	;wreg free
 11817  004BB2                     
 11818                           ;Robot/sensors/DHT11/DHT.c: 24:        DHT11_Read_Data(RH_Decimal);
 11819  004BB2  C060  F01E         	movff	Get_Temp_HUM@RH_Decimal,DHT11_Read_Data@data
 11820  004BB6  C061  F01F         	movff	Get_Temp_HUM@RH_Decimal+1,DHT11_Read_Data@data+1
 11821  004BBA  EC2D  F027         	call	_DHT11_Read_Data	;wreg free
 11822  004BBE                     
 11823                           ;Robot/sensors/DHT11/DHT.c: 25:        DHT11_Read_Data(RH_Integral);
 11824  004BBE  C062  F01E         	movff	Get_Temp_HUM@RH_Integral,DHT11_Read_Data@data
 11825  004BC2  C063  F01F         	movff	Get_Temp_HUM@RH_Integral+1,DHT11_Read_Data@data+1
 11826  004BC6  EC2D  F027         	call	_DHT11_Read_Data	;wreg free
 11827  004BCA                     
 11828                           ;Robot/sensors/DHT11/DHT.c: 26:        DHT11_Read_Data(T_Decimal);
 11829  004BCA  C064  F01E         	movff	Get_Temp_HUM@T_Decimal,DHT11_Read_Data@data
 11830  004BCE  C065  F01F         	movff	Get_Temp_HUM@T_Decimal+1,DHT11_Read_Data@data+1
 11831  004BD2  EC2D  F027         	call	_DHT11_Read_Data	;wreg free
 11832  004BD6                     
 11833                           ;Robot/sensors/DHT11/DHT.c: 27:        DHT11_Read_Data(T_Integral);
 11834  004BD6  C066  F01E         	movff	Get_Temp_HUM@T_Integral,DHT11_Read_Data@data
 11835  004BDA  C067  F01F         	movff	Get_Temp_HUM@T_Integral+1,DHT11_Read_Data@data+1
 11836  004BDE  EC2D  F027         	call	_DHT11_Read_Data	;wreg free
 11837  004BE2                     
 11838                           ;Robot/sensors/DHT11/DHT.c: 28:        DHT11_Read_Data(Checksum);
 11839  004BE2  C068  F01E         	movff	Get_Temp_HUM@Checksum,DHT11_Read_Data@data
 11840  004BE6  C069  F01F         	movff	Get_Temp_HUM@Checksum+1,DHT11_Read_Data@data+1
 11841  004BEA  EC2D  F027         	call	_DHT11_Read_Data	;wreg free
 11842  004BEE                     l1745:
 11843  004BEE  0012               	return		;funcret
 11844  004BF0                     __end_of_Get_Temp_HUM:
 11845                           	callstack 0
 11846                           
 11847 ;; *************** function _DHT11_Start *****************
 11848 ;; Defined at:
 11849 ;;		line 32 in file "Robot/sensors/DHT11/DHT.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;		None
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;		None
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  1    wreg      void 
 11856 ;; Registers used:
 11857 ;;		wreg
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;Total ram usage:        1 bytes
 11868 ;; Hardware stack levels used: 1
 11869 ;; Hardware stack levels required when called: 8
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_Get_Temp_HUM
 11874 ;; This function uses a non-reentrant model
 11875 ;;
 11876                           
 11877                           	psect	text62
 11878  005CAE                     __ptext62:
 11879                           	callstack 0
 11880  005CAE                     _DHT11_Start:
 11881                           	callstack 21
 11882  005CAE                     
 11883                           ;Robot/sensors/DHT11/DHT.c: 34:     TRISDbits.TRISD7=GPIO_DIRECTION_OUTPUT;
 11884  005CAE  9E95               	bcf	149,7,c	;volatile
 11885                           
 11886                           ;Robot/sensors/DHT11/DHT.c: 35:     LATDbits.LATD7=GPIO_LOW;
 11887  005CB0  9E8C               	bcf	140,7,c	;volatile
 11888  005CB2                     
 11889                           ;Robot/sensors/DHT11/DHT.c: 36:     _delay((unsigned long)((18)*(8000000/4000.0)));
 11890  005CB2  0E2F               	movlw	47
 11891  005CB4  6E1E               	movwf	??_DHT11_Start^0,c
 11892  005CB6  0EC0               	movlw	192
 11893  005CB8                     u14027:
 11894  005CB8  2EE8               	decfsz	wreg,f,c
 11895  005CBA  D7FE               	bra	u14027
 11896  005CBC  2E1E               	decfsz	??_DHT11_Start^0,f,c
 11897  005CBE  D7FC               	bra	u14027
 11898  005CC0                     
 11899                           ;Robot/sensors/DHT11/DHT.c: 37:     LATDbits.LATD7=GPIO_HIGH;
 11900  005CC0  8E8C               	bsf	140,7,c	;volatile
 11901                           
 11902                           ;Robot/sensors/DHT11/DHT.c: 38:     _delay((unsigned long)((30)*(8000000/4000000.0)));
 11903  005CC2  0E14               	movlw	20
 11904  005CC4                     u14037:
 11905  005CC4  2EE8               	decfsz	wreg,f,c
 11906  005CC6  D7FE               	bra	u14037
 11907  005CC8                     
 11908                           ;Robot/sensors/DHT11/DHT.c: 39:     TRISDbits.TRISD7=GPIO_DIRECTION_INPUT;
 11909  005CC8  8E95               	bsf	149,7,c	;volatile
 11910  005CCA  0012               	return		;funcret
 11911  005CCC                     __end_of_DHT11_Start:
 11912                           	callstack 0
 11913                           
 11914 ;; *************** function _DHT11_Read_Data *****************
 11915 ;; Defined at:
 11916 ;;		line 47 in file "Robot/sensors/DHT11/DHT.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  data            2   29[COMRAM] PTR unsigned char 
 11919 ;;		 -> Checksum(1), T_Integral(1), T_Decimal(1), RH_Integral(1), 
 11920 ;;		 -> RH_Decimal(1), 
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;  i               1   32[COMRAM] unsigned char 
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;Total ram usage:        4 bytes
 11937 ;; Hardware stack levels used: 1
 11938 ;; Hardware stack levels required when called: 8
 11939 ;; This function calls:
 11940 ;;		Nothing
 11941 ;; This function is called by:
 11942 ;;		_Get_Temp_HUM
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           	psect	text63
 11947  004E5A                     __ptext63:
 11948                           	callstack 0
 11949  004E5A                     _DHT11_Read_Data:
 11950                           	callstack 21
 11951  004E5A                     
 11952                           ;Robot/sensors/DHT11/DHT.c: 47: static void DHT11_Read_Data(uint8* data);Robot/sensors/D
      +                          HT11/DHT.c: 48: {;Robot/sensors/DHT11/DHT.c: 49:   uint8 i;;Robot/sensors/DHT11/DHT.c: 5
      +                          0:   *data = 0;
 11953  004E5A  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 11954  004E5E  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 11955  004E62  0E00               	movlw	0
 11956  004E64  6EDF               	movwf	indf2,c
 11957  004E66                     
 11958                           ;Robot/sensors/DHT11/DHT.c: 51:     for(i=0;i<8;i++)
 11959  004E66  0E00               	movlw	0
 11960  004E68  6E21               	movwf	DHT11_Read_Data@i^0,c
 11961  004E6A                     l1765:
 11962  004E6A  AE83               	btfss	131,7,c	;volatile
 11963  004E6C  EF3A  F027         	goto	u12891
 11964  004E70  EF3C  F027         	goto	u12890
 11965  004E74                     u12891:
 11966  004E74  EF35  F027         	goto	l1765
 11967  004E78                     u12890:
 11968  004E78                     
 11969                           ;Robot/sensors/DHT11/DHT.c: 54:         _delay((unsigned long)((40)*(8000000/4000000.0))
      +                          );
 11970  004E78  0E1A               	movlw	26
 11971  004E7A                     u14047:
 11972  004E7A  2EE8               	decfsz	wreg,f,c
 11973  004E7C  D7FE               	bra	u14047
 11974  004E7E  F000 F000          	nop2	
 11975  004E82                     
 11976                           ;Robot/sensors/DHT11/DHT.c: 55:         if(PORTDbits.RD7 & 1)
 11977  004E82  AE83               	btfss	131,7,c	;volatile
 11978  004E84  EF46  F027         	goto	u12901
 11979  004E88  EF48  F027         	goto	u12900
 11980  004E8C                     u12901:
 11981  004E8C  EF57  F027         	goto	l12145
 11982  004E90                     u12900:
 11983  004E90                     
 11984                           ;Robot/sensors/DHT11/DHT.c: 56:         {;Robot/sensors/DHT11/DHT.c: 57:             *da
      +                          ta = (((*data)<<1)|1);
 11985  004E90  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 11986  004E94  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 11987  004E98  50DF               	movf	indf2,w,c
 11988  004E9A  6E20               	movwf	??_DHT11_Read_Data^0,c
 11989  004E9C  80D8               	bsf	status,0,c
 11990  004E9E  3420               	rlcf	??_DHT11_Read_Data^0,w,c
 11991  004EA0  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 11992  004EA4  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 11993  004EA8  6EDF               	movwf	indf2,c
 11994                           
 11995                           ;Robot/sensors/DHT11/DHT.c: 59:         }
 11996  004EAA  EF64  F027         	goto	l1770
 11997  004EAE                     l12145:
 11998                           
 11999                           ;Robot/sensors/DHT11/DHT.c: 61:         {;Robot/sensors/DHT11/DHT.c: 62:             *da
      +                          ta = ((*data)<<1);
 12000  004EAE  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 12001  004EB2  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 12002  004EB6  50DF               	movf	indf2,w,c
 12003  004EB8  6E20               	movwf	??_DHT11_Read_Data^0,c
 12004  004EBA  90D8               	bcf	status,0,c
 12005  004EBC  3420               	rlcf	??_DHT11_Read_Data^0,w,c
 12006  004EBE  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 12007  004EC2  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 12008  004EC6  6EDF               	movwf	indf2,c
 12009  004EC8                     l1770:
 12010  004EC8  BE83               	btfsc	131,7,c	;volatile
 12011  004ECA  EF69  F027         	goto	u12911
 12012  004ECE  EF6B  F027         	goto	u12910
 12013  004ED2                     u12911:
 12014  004ED2  EF64  F027         	goto	l1770
 12015  004ED6                     u12910:
 12016  004ED6                     
 12017                           ;Robot/sensors/DHT11/DHT.c: 66:     }
 12018  004ED6  2A21               	incf	DHT11_Read_Data@i^0,f,c
 12019  004ED8  0E07               	movlw	7
 12020  004EDA  6421               	cpfsgt	DHT11_Read_Data@i^0,c
 12021  004EDC  EF72  F027         	goto	u12921
 12022  004EE0  EF74  F027         	goto	u12920
 12023  004EE4                     u12921:
 12024  004EE4  EF35  F027         	goto	l1765
 12025  004EE8                     u12920:
 12026  004EE8  0012               	return		;funcret
 12027  004EEA                     __end_of_DHT11_Read_Data:
 12028                           	callstack 0
 12029                           
 12030 ;; *************** function _DHT11_Check_Response *****************
 12031 ;; Defined at:
 12032 ;;		line 41 in file "Robot/sensors/DHT11/DHT.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		None
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used: 1
 12052 ;; Hardware stack levels required when called: 8
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_Get_Temp_HUM
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           	psect	text64
 12061  005ACC                     __ptext64:
 12062                           	callstack 0
 12063  005ACC                     _DHT11_Check_Response:
 12064                           	callstack 21
 12065  005ACC                     l1751:
 12066  005ACC  BE83               	btfsc	131,7,c	;volatile
 12067  005ACE  EF6B  F02D         	goto	u12861
 12068  005AD2  EF6D  F02D         	goto	u12860
 12069  005AD6                     u12861:
 12070  005AD6  EF66  F02D         	goto	l1751
 12071  005ADA                     u12860:
 12072  005ADA                     l1754:
 12073  005ADA  AE83               	btfss	131,7,c	;volatile
 12074  005ADC  EF72  F02D         	goto	u12871
 12075  005AE0  EF74  F02D         	goto	u12870
 12076  005AE4                     u12871:
 12077  005AE4  EF6D  F02D         	goto	l1754
 12078  005AE8                     u12870:
 12079  005AE8                     l1757:
 12080  005AE8  BE83               	btfsc	131,7,c	;volatile
 12081  005AEA  EF79  F02D         	goto	u12881
 12082  005AEE  EF7B  F02D         	goto	u12880
 12083  005AF2                     u12881:
 12084  005AF2  EF74  F02D         	goto	l1757
 12085  005AF6                     u12880:
 12086  005AF6  0012               	return		;funcret
 12087  005AF8                     __end_of_DHT11_Check_Response:
 12088                           	callstack 0
 12089                           
 12090 ;; *************** function _Get_Distance *****************
 12091 ;; Defined at:
 12092 ;;		line 25 in file "Robot/sensors/ultrasonic/ultrasonic.c"
 12093 ;; Parameters:    Size  Location     Type
 12094 ;;  ultrasonic_o    2   39[BANK0 ] PTR const struct .
 12095 ;;		 -> ultrasonic(2), 
 12096 ;;  _tmr0_config    2   41[BANK0 ] PTR const struct .
 12097 ;;		 -> timer0(4), 
 12098 ;;  distance        2   43[BANK0 ] PTR float 
 12099 ;;		 -> distance(4), 
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;  timer_val       2   45[BANK0 ] unsigned short 
 12102 ;;  logic           1   47[BANK0 ] enum E3185
 12103 ;;  ERRORSTATUS     1    0        unsigned char 
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      unsigned char 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12113 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        9 bytes
 12118 ;; Hardware stack levels used: 1
 12119 ;; Hardware stack levels required when called: 10
 12120 ;; This function calls:
 12121 ;;		_GPIO_Pin_Read_Logic
 12122 ;;		_HAL_Timer0_Read_Val
 12123 ;;		_HAL_Timer0_Write_Val
 12124 ;;		___fldiv
 12125 ;;		___xxtofl
 12126 ;;		_send_trig_pulse
 12127 ;; This function is called by:
 12128 ;;		_main
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text65
 12133  0036FE                     __ptext65:
 12134                           	callstack 0
 12135  0036FE                     _Get_Distance:
 12136                           	callstack 20
 12137  0036FE                     
 12138                           ;Robot/sensors/ultrasonic/ultrasonic.c: 25: Std_ReturnType Get_Distance(const ultrasonic
      +                          _config_st* ultrasonic_object,const timer0_config_st *_tmr0_config,float32* distance);Ro
      +                          bot/sensors/ultrasonic/ultrasonic.c: 26: {;Robot/sensors/ultrasonic/ultrasonic.c: 27:   
      +                            logic_et logic=0;
 12139  0036FE  0E00               	movlw	0
 12140  003700  0100               	movlb	0	; () banked
 12141  003702  6F8F               	movwf	Get_Distance@logic& (0+255),b
 12142                           
 12143                           ;Robot/sensors/ultrasonic/ultrasonic.c: 28:     uint16 timer_val=0;
 12144  003704  0E00               	movlw	0
 12145  003706  6F8E               	movwf	(Get_Distance@timer_val+1)& (0+255),b
 12146  003708  0E00               	movlw	0
 12147  00370A  6F8D               	movwf	Get_Distance@timer_val& (0+255),b
 12148  00370C                     
 12149                           ; BSR set to: 0
 12150                           ;Robot/sensors/ultrasonic/ultrasonic.c: 30:     if ( ((void*)0)==distance)
 12151  00370C  518B               	movf	Get_Distance@distance& (0+255),w,b
 12152  00370E  118C               	iorwf	(Get_Distance@distance+1)& (0+255),w,b
 12153  003710  A4D8               	btfss	status,2,c
 12154  003712  EF8D  F01B         	goto	u13181
 12155  003716  EF8F  F01B         	goto	u13180
 12156  00371A                     u13181:
 12157  00371A  EF91  F01B         	goto	l1801
 12158  00371E                     u13180:
 12159  00371E                     
 12160                           ; BSR set to: 0
 12161                           ;Robot/sensors/ultrasonic/ultrasonic.c: 34:     }
 12162  00371E  EF06  F01C         	goto	l1809
 12163  003722                     l1801:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;Robot/sensors/ultrasonic/ultrasonic.c: 36:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           37:         (T0CONbits.TMR0ON = 0 );
 12167  003722  9ED5               	bcf	213,7,c	;volatile
 12168  003724                     
 12169                           ; BSR set to: 0
 12170                           ;Robot/sensors/ultrasonic/ultrasonic.c: 38:         HAL_Timer0_Write_Val(_tmr0_config ,0
      +                          );
 12171  003724  C089  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
 12172  003728  C08A  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
 12173  00372C  0E00               	movlw	0
 12174  00372E  6E21               	movwf	(HAL_Timer0_Write_Val@val+1)^0,c
 12175  003730  0E00               	movlw	0
 12176  003732  6E20               	movwf	HAL_Timer0_Write_Val@val^0,c
 12177  003734  ECA8  F02D         	call	_HAL_Timer0_Write_Val	;wreg free
 12178  003738                     
 12179                           ;Robot/sensors/ultrasonic/ultrasonic.c: 39:         send_trig_pulse(ultrasonic_object);
 12180  003738  C087  F022         	movff	Get_Distance@ultrasonic_object,send_trig_pulse@ultrasonic_object
 12181  00373C  C088  F023         	movff	Get_Distance@ultrasonic_object+1,send_trig_pulse@ultrasonic_object+1
 12182  003740  EC7C  F02D         	call	_send_trig_pulse	;wreg free
 12183                           
 12184                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
 12185  003744  EFB0  F01B         	goto	l12543
 12186  003748                     l12541:
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;Robot/sensors/ultrasonic/ultrasonic.c: 41:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 42:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
 12190  003748  0E01               	movlw	1
 12191  00374A  2587               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
 12192  00374C  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
 12193  00374E  0E00               	movlw	0
 12194  003750  2188               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
 12195  003752  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
 12196  003754  0E8F               	movlw	low Get_Distance@logic
 12197  003756  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
 12198  003758  0E00               	movlw	high Get_Distance@logic
 12199  00375A  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
 12200  00375C  EC4E  F025         	call	_GPIO_Pin_Read_Logic	;wreg free
 12201  003760                     l12543:
 12202                           
 12203                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
 12204  003760  0100               	movlb	0	; () banked
 12205  003762  518F               	movf	Get_Distance@logic& (0+255),w,b
 12206  003764  B4D8               	btfsc	status,2,c
 12207  003766  EFB7  F01B         	goto	u13191
 12208  00376A  EFB9  F01B         	goto	u13190
 12209  00376E                     u13191:
 12210  00376E  EFA4  F01B         	goto	l12541
 12211  003772                     u13190:
 12212  003772                     
 12213                           ; BSR set to: 0
 12214                           ;Robot/sensors/ultrasonic/ultrasonic.c: 44:         (T0CONbits.TMR0ON = 1 );
 12215  003772  8ED5               	bsf	213,7,c	;volatile
 12216                           
 12217                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
 12218  003774  EFC8  F01B         	goto	l12547
 12219  003778                     l12545:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;Robot/sensors/ultrasonic/ultrasonic.c: 46:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 47:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
 12223  003778  0E01               	movlw	1
 12224  00377A  2587               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
 12225  00377C  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
 12226  00377E  0E00               	movlw	0
 12227  003780  2188               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
 12228  003782  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
 12229  003784  0E8F               	movlw	low Get_Distance@logic
 12230  003786  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
 12231  003788  0E00               	movlw	high Get_Distance@logic
 12232  00378A  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
 12233  00378C  EC4E  F025         	call	_GPIO_Pin_Read_Logic	;wreg free
 12234  003790                     l12547:
 12235                           
 12236                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
 12237  003790  0100               	movlb	0	; () banked
 12238  003792  518F               	movf	Get_Distance@logic& (0+255),w,b
 12239  003794  A4D8               	btfss	status,2,c
 12240  003796  EFCF  F01B         	goto	u13201
 12241  00379A  EFD1  F01B         	goto	u13200
 12242  00379E                     u13201:
 12243  00379E  EFBC  F01B         	goto	l12545
 12244  0037A2                     u13200:
 12245  0037A2                     
 12246                           ; BSR set to: 0
 12247                           ;Robot/sensors/ultrasonic/ultrasonic.c: 49:         (T0CONbits.TMR0ON = 0 );
 12248  0037A2  9ED5               	bcf	213,7,c	;volatile
 12249  0037A4                     
 12250                           ; BSR set to: 0
 12251                           ;Robot/sensors/ultrasonic/ultrasonic.c: 50:         HAL_Timer0_Read_Val(_tmr0_config ,&t
      +                          imer_val);
 12252  0037A4  C089  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Read_Val@_tmr0_config
 12253  0037A8  C08A  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Read_Val@_tmr0_config+1
 12254  0037AC  0E8D               	movlw	low Get_Distance@timer_val
 12255  0037AE  6E20               	movwf	HAL_Timer0_Read_Val@result^0,c
 12256  0037B0  0E00               	movlw	high Get_Distance@timer_val
 12257  0037B2  6E21               	movwf	(HAL_Timer0_Read_Val@result+1)^0,c
 12258  0037B4  EC9E  F024         	call	_HAL_Timer0_Read_Val	;wreg free
 12259                           
 12260                           ;Robot/sensors/ultrasonic/ultrasonic.c: 52:         *distance=timer_val/(float32)58.8;
 12261  0037B8  C08D  F060         	movff	Get_Distance@timer_val,___xxtofl@val
 12262  0037BC  C08E  F061         	movff	Get_Distance@timer_val+1,___xxtofl@val+1
 12263  0037C0  0100               	movlb	0	; () banked
 12264  0037C2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 12265  0037C4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 12266  0037C6  0E00               	movlw	0
 12267  0037C8  ECFF  F015         	call	___xxtofl
 12268  0037CC  C060  F06E         	movff	?___xxtofl,___fldiv@b
 12269  0037D0  C061  F06F         	movff	?___xxtofl+1,___fldiv@b+1
 12270  0037D4  C062  F070         	movff	?___xxtofl+2,___fldiv@b+2
 12271  0037D8  C063  F071         	movff	?___xxtofl+3,___fldiv@b+3
 12272  0037DC  0E33               	movlw	51
 12273  0037DE  0100               	movlb	0	; () banked
 12274  0037E0  6F72               	movwf	___fldiv@a& (0+255),b
 12275  0037E2  0E33               	movlw	51
 12276  0037E4  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12277  0037E6  0E6B               	movlw	107
 12278  0037E8  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12279  0037EA  0E42               	movlw	66
 12280  0037EC  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12281  0037EE  EC2D  F011         	call	___fldiv	;wreg free
 12282  0037F2  C08B  FFD9         	movff	Get_Distance@distance,fsr2l
 12283  0037F6  C08C  FFDA         	movff	Get_Distance@distance+1,fsr2h
 12284  0037FA  0100               	movlb	0	; () banked
 12285  0037FC  C06E  FFDE         	movff	?___fldiv,postinc2
 12286  003800  C06F  FFDE         	movff	?___fldiv+1,postinc2
 12287  003804  C070  FFDE         	movff	?___fldiv+2,postinc2
 12288  003808  C071  FFDE         	movff	?___fldiv+3,postinc2
 12289  00380C                     l1809:
 12290                           
 12291                           ; BSR set to: 0
 12292  00380C  0012               	return		;funcret
 12293  00380E                     __end_of_Get_Distance:
 12294                           	callstack 0
 12295                           
 12296 ;; *************** function _send_trig_pulse *****************
 12297 ;; Defined at:
 12298 ;;		line 57 in file "Robot/sensors/ultrasonic/ultrasonic.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;  ultrasonic_o    2   33[COMRAM] PTR const struct .
 12301 ;;		 -> ultrasonic(2), 
 12302 ;; Auto vars:     Size  Location     Type
 12303 ;;		None
 12304 ;; Return value:  Size  Location     Type
 12305 ;;                  1    wreg      void 
 12306 ;; Registers used:
 12307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12308 ;; Tracked objects:
 12309 ;;		On entry : 0/0
 12310 ;;		On exit  : 0/0
 12311 ;;		Unchanged: 0/0
 12312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12317 ;;Total ram usage:        2 bytes
 12318 ;; Hardware stack levels used: 1
 12319 ;; Hardware stack levels required when called: 9
 12320 ;; This function calls:
 12321 ;;		_GPIO_Pin_Write_Logic
 12322 ;; This function is called by:
 12323 ;;		_Get_Distance
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text66
 12328  005AF8                     __ptext66:
 12329                           	callstack 0
 12330  005AF8                     _send_trig_pulse:
 12331                           	callstack 20
 12332  005AF8                     
 12333                           ;Robot/sensors/ultrasonic/ultrasonic.c: 57: static void send_trig_pulse(const ultrasonic
      +                          _config_st* ultrasonic_object);Robot/sensors/ultrasonic/ultrasonic.c: 58: {;Robot/sensor
      +                          s/ultrasonic/ultrasonic.c: 59:     GPIO_Pin_Write_Logic(&(ultrasonic_object->trig_pin),G
      +                          PIO_HIGH);
 12334  005AF8  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
 12335  005AFC  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
 12336  005B00  0E01               	movlw	1
 12337  005B02  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 12338  005B04  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
 12339  005B08                     
 12340                           ;Robot/sensors/ultrasonic/ultrasonic.c: 60:     _delay((unsigned long)((10)*(8000000/400
      +                          0000.0)));
 12341  005B08  0E06               	movlw	6
 12342  005B0A                     u14057:
 12343  005B0A  2EE8               	decfsz	wreg,f,c
 12344  005B0C  D7FE               	bra	u14057
 12345  005B0E  F000 F000          	nop2	
 12346  005B12                     
 12347                           ;Robot/sensors/ultrasonic/ultrasonic.c: 61:     GPIO_Pin_Write_Logic(&(ultrasonic_object
      +                          ->trig_pin),GPIO_LOW);
 12348  005B12  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
 12349  005B16  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
 12350  005B1A  0E00               	movlw	0
 12351  005B1C  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 12352  005B1E  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
 12353  005B22  0012               	return		;funcret
 12354  005B24                     __end_of_send_trig_pulse:
 12355                           	callstack 0
 12356                           
 12357 ;; *************** function ___xxtofl *****************
 12358 ;; Defined at:
 12359 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  sign            1    wreg     unsigned char 
 12362 ;;  val             4    0[BANK0 ] long 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  sign            1    8[BANK0 ] unsigned char 
 12365 ;;  arg             4   10[BANK0 ] unsigned long 
 12366 ;;  exp             1    9[BANK0 ] unsigned char 
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  4    0[BANK0 ] unsigned char 
 12369 ;; Registers used:
 12370 ;;		wreg, status,2, status,0
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12377 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;Total ram usage:       14 bytes
 12381 ;; Hardware stack levels used: 1
 12382 ;; Hardware stack levels required when called: 8
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_Servo_SetAngle
 12387 ;;		_CCP_PWM_Set_Duty
 12388 ;;		_async_config_baud_rate_gen
 12389 ;;		_I2C_Master_Mode_Clock_Configurations
 12390 ;;		_Get_Distance
 12391 ;;		_battery_level
 12392 ;; This function uses a non-reentrant model
 12393 ;;
 12394                           
 12395                           	psect	text67
 12396  002BFE                     __ptext67:
 12397                           	callstack 0
 12398  002BFE                     ___xxtofl:
 12399                           	callstack 21
 12400                           
 12401                           ;incstack = 0
 12402                           ;___xxtofl@sign stored from wreg
 12403  002BFE  0100               	movlb	0	; () banked
 12404  002C00  6F68               	movwf	___xxtofl@sign& (0+255),b
 12405  002C02  0100               	movlb	0	; () banked
 12406  002C04  5168               	movf	___xxtofl@sign& (0+255),w,b
 12407  002C06  B4D8               	btfsc	status,2,c
 12408  002C08  EF08  F016         	goto	u11031
 12409  002C0C  EF0A  F016         	goto	u11030
 12410  002C10                     u11031:
 12411  002C10  EF2C  F016         	goto	l2676
 12412  002C14                     u11030:
 12413  002C14                     
 12414                           ; BSR set to: 0
 12415  002C14  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 12416  002C16  EF11  F016         	goto	u11040
 12417  002C1A  EF0F  F016         	goto	u11041
 12418  002C1E                     u11041:
 12419  002C1E  EF2C  F016         	goto	l2676
 12420  002C22                     u11040:
 12421  002C22                     
 12422                           ; BSR set to: 0
 12423  002C22  C060  F064         	movff	___xxtofl@val,??___xxtofl
 12424  002C26  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 12425  002C2A  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 12426  002C2E  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 12427  002C32  1F64               	comf	??___xxtofl& (0+255),f,b
 12428  002C34  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 12429  002C36  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 12430  002C38  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 12431  002C3A  2B64               	incf	??___xxtofl& (0+255),f,b
 12432  002C3C  0E00               	movlw	0
 12433  002C3E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 12434  002C40  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 12435  002C42  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 12436  002C44  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 12437  002C48  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 12438  002C4C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 12439  002C50  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 12440  002C54  EF34  F016         	goto	l10879
 12441  002C58                     l2676:
 12442                           
 12443                           ; BSR set to: 0
 12444  002C58  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 12445  002C5C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12446  002C60  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12447  002C64  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12448  002C68                     l10879:
 12449                           
 12450                           ; BSR set to: 0
 12451  002C68  5160               	movf	___xxtofl@val& (0+255),w,b
 12452  002C6A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 12453  002C6C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 12454  002C6E  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 12455  002C70  A4D8               	btfss	status,2,c
 12456  002C72  EF3D  F016         	goto	u11051
 12457  002C76  EF3F  F016         	goto	u11050
 12458  002C7A                     u11051:
 12459  002C7A  EF49  F016         	goto	l10885
 12460  002C7E                     u11050:
 12461  002C7E                     
 12462                           ; BSR set to: 0
 12463  002C7E  0E00               	movlw	0
 12464  002C80  6F60               	movwf	?___xxtofl& (0+255),b
 12465  002C82  0E00               	movlw	0
 12466  002C84  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 12467  002C86  0E00               	movlw	0
 12468  002C88  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 12469  002C8A  0E00               	movlw	0
 12470  002C8C  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 12471  002C8E  EFDA  F016         	goto	l2679
 12472  002C92                     l10885:
 12473                           
 12474                           ; BSR set to: 0
 12475  002C92  0E96               	movlw	150
 12476  002C94  6F69               	movwf	___xxtofl@exp& (0+255),b
 12477  002C96  EF53  F016         	goto	l10889
 12478  002C9A                     l10887:
 12479                           
 12480                           ; BSR set to: 0
 12481  002C9A  2B69               	incf	___xxtofl@exp& (0+255),f,b
 12482  002C9C  90D8               	bcf	status,0,c
 12483  002C9E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12484  002CA0  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12485  002CA2  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12486  002CA4  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 12487  002CA6                     l10889:
 12488                           
 12489                           ; BSR set to: 0
 12490  002CA6  0E00               	movlw	0
 12491  002CA8  156A               	andwf	___xxtofl@arg& (0+255),w,b
 12492  002CAA  6F64               	movwf	??___xxtofl& (0+255),b
 12493  002CAC  0E00               	movlw	0
 12494  002CAE  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12495  002CB0  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 12496  002CB2  0E00               	movlw	0
 12497  002CB4  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12498  002CB6  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 12499  002CB8  0EFE               	movlw	254
 12500  002CBA  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12501  002CBC  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 12502  002CBE  5164               	movf	??___xxtofl& (0+255),w,b
 12503  002CC0  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12504  002CC2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12505  002CC4  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12506  002CC6  A4D8               	btfss	status,2,c
 12507  002CC8  EF68  F016         	goto	u11061
 12508  002CCC  EF6A  F016         	goto	u11060
 12509  002CD0                     u11061:
 12510  002CD0  EF4D  F016         	goto	l10887
 12511  002CD4                     u11060:
 12512  002CD4  EF78  F016         	goto	l2683
 12513  002CD8                     l10891:
 12514                           
 12515                           ; BSR set to: 0
 12516  002CD8  2B69               	incf	___xxtofl@exp& (0+255),f,b
 12517  002CDA                     
 12518                           ; BSR set to: 0
 12519  002CDA  0E01               	movlw	1
 12520  002CDC  276A               	addwf	___xxtofl@arg& (0+255),f,b
 12521  002CDE  0E00               	movlw	0
 12522  002CE0  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 12523  002CE2  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 12524  002CE4  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 12525  002CE6                     
 12526                           ; BSR set to: 0
 12527  002CE6  90D8               	bcf	status,0,c
 12528  002CE8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12529  002CEA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12530  002CEC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12531  002CEE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 12532  002CF0                     l2683:
 12533                           
 12534                           ; BSR set to: 0
 12535  002CF0  0E00               	movlw	0
 12536  002CF2  156A               	andwf	___xxtofl@arg& (0+255),w,b
 12537  002CF4  6F64               	movwf	??___xxtofl& (0+255),b
 12538  002CF6  0E00               	movlw	0
 12539  002CF8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12540  002CFA  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 12541  002CFC  0E00               	movlw	0
 12542  002CFE  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12543  002D00  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 12544  002D02  0EFF               	movlw	255
 12545  002D04  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12546  002D06  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 12547  002D08  5164               	movf	??___xxtofl& (0+255),w,b
 12548  002D0A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12549  002D0C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12550  002D0E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12551  002D10  A4D8               	btfss	status,2,c
 12552  002D12  EF8D  F016         	goto	u11071
 12553  002D16  EF8F  F016         	goto	u11070
 12554  002D1A                     u11071:
 12555  002D1A  EF6C  F016         	goto	l10891
 12556  002D1E                     u11070:
 12557  002D1E  EF97  F016         	goto	l10899
 12558  002D22                     l10897:
 12559                           
 12560                           ; BSR set to: 0
 12561  002D22  0769               	decf	___xxtofl@exp& (0+255),f,b
 12562  002D24  90D8               	bcf	status,0,c
 12563  002D26  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 12564  002D28  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 12565  002D2A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 12566  002D2C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 12567  002D2E                     l10899:
 12568                           
 12569                           ; BSR set to: 0
 12570  002D2E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 12571  002D30  EF9C  F016         	goto	u11081
 12572  002D34  EF9E  F016         	goto	u11080
 12573  002D38                     u11081:
 12574  002D38  EFA6  F016         	goto	l2690
 12575  002D3C                     u11080:
 12576  002D3C                     
 12577                           ; BSR set to: 0
 12578  002D3C  0E02               	movlw	2
 12579  002D3E  6169               	cpfslt	___xxtofl@exp& (0+255),b
 12580  002D40  EFA4  F016         	goto	u11091
 12581  002D44  EFA6  F016         	goto	u11090
 12582  002D48                     u11091:
 12583  002D48  EF91  F016         	goto	l10897
 12584  002D4C                     u11090:
 12585  002D4C                     l2690:
 12586                           
 12587                           ; BSR set to: 0
 12588  002D4C  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 12589  002D4E  EFAB  F016         	goto	u11101
 12590  002D52  EFAD  F016         	goto	u11100
 12591  002D56                     u11101:
 12592  002D56  EFAE  F016         	goto	l10905
 12593  002D5A                     u11100:
 12594  002D5A                     
 12595                           ; BSR set to: 0
 12596  002D5A  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 12597  002D5C                     l10905:
 12598                           
 12599                           ; BSR set to: 0
 12600  002D5C  90D8               	bcf	status,0,c
 12601  002D5E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 12602  002D60                     
 12603                           ; BSR set to: 0
 12604  002D60  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 12605  002D64  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 12606  002D66  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 12607  002D68  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 12608  002D6A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 12609  002D6E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 12610  002D70  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 12611  002D72  6B64               	clrf	??___xxtofl& (0+255),b
 12612  002D74  5164               	movf	??___xxtofl& (0+255),w,b
 12613  002D76  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 12614  002D78  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 12615  002D7A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 12616  002D7C  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 12617  002D7E  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 12618  002D80  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 12619  002D82  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 12620  002D84                     
 12621                           ; BSR set to: 0
 12622  002D84  5168               	movf	___xxtofl@sign& (0+255),w,b
 12623  002D86  B4D8               	btfsc	status,2,c
 12624  002D88  EFC8  F016         	goto	u11111
 12625  002D8C  EFCA  F016         	goto	u11110
 12626  002D90                     u11111:
 12627  002D90  EFD2  F016         	goto	l10915
 12628  002D94                     u11110:
 12629  002D94                     
 12630                           ; BSR set to: 0
 12631  002D94  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 12632  002D96  EFD1  F016         	goto	u11120
 12633  002D9A  EFCF  F016         	goto	u11121
 12634  002D9E                     u11121:
 12635  002D9E  EFD2  F016         	goto	l10915
 12636  002DA2                     u11120:
 12637  002DA2                     
 12638                           ; BSR set to: 0
 12639  002DA2  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 12640  002DA4                     l10915:
 12641                           
 12642                           ; BSR set to: 0
 12643  002DA4  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 12644  002DA8  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 12645  002DAC  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 12646  002DB0  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 12647  002DB4                     l2679:
 12648                           
 12649                           ; BSR set to: 0
 12650  002DB4  0012               	return		;funcret
 12651  002DB6                     __end_of___xxtofl:
 12652                           	callstack 0
 12653                           
 12654 ;; *************** function ___fldiv *****************
 12655 ;; Defined at:
 12656 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;  b               4   14[BANK0 ] unsigned char 
 12659 ;;  a               4   18[BANK0 ] unsigned char 
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;  grs             4   33[BANK0 ] unsigned long 
 12662 ;;  rem             4   26[BANK0 ] unsigned long 
 12663 ;;  new_exp         2   31[BANK0 ] short 
 12664 ;;  aexp            1   38[BANK0 ] unsigned char 
 12665 ;;  bexp            1   37[BANK0 ] unsigned char 
 12666 ;;  sign            1   30[BANK0 ] unsigned char 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  4   14[BANK0 ] unsigned char 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12676 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12678 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12679 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12680 ;;Total ram usage:       25 bytes
 12681 ;; Hardware stack levels used: 1
 12682 ;; Hardware stack levels required when called: 8
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_CCP_PWM_Set_Duty
 12687 ;;		_async_config_baud_rate_gen
 12688 ;;		_I2C_Master_Mode_Clock_Configurations
 12689 ;;		_Get_Distance
 12690 ;;		_main
 12691 ;;		_battery_level
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text68
 12696  00225A                     __ptext68:
 12697                           	callstack 0
 12698  00225A                     ___fldiv:
 12699                           	callstack 21
 12700  00225A  0100               	movlb	0	; () banked
 12701  00225C  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 12702  00225E  0B80               	andlw	128
 12703  002260  6F7E               	movwf	___fldiv@sign& (0+255),b
 12704  002262  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 12705  002264  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 12706  002266  6F85               	movwf	___fldiv@bexp& (0+255),b
 12707  002268                     
 12708                           ; BSR set to: 0
 12709  002268  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 12710  00226A  EF39  F011         	goto	u10731
 12711  00226E  EF3B  F011         	goto	u10730
 12712  002272                     u10731:
 12713  002272  EF3C  F011         	goto	l10697
 12714  002276                     u10730:
 12715  002276                     
 12716                           ; BSR set to: 0
 12717  002276  8185               	bsf	___fldiv@bexp& (0+255),0,b
 12718  002278                     l10697:
 12719                           
 12720                           ; BSR set to: 0
 12721  002278  5185               	movf	___fldiv@bexp& (0+255),w,b
 12722  00227A  B4D8               	btfsc	status,2,c
 12723  00227C  EF42  F011         	goto	u10741
 12724  002280  EF44  F011         	goto	u10740
 12725  002284                     u10741:
 12726  002284  EF59  F011         	goto	l10707
 12727  002288                     u10740:
 12728  002288                     
 12729                           ; BSR set to: 0
 12730  002288  2985               	incf	___fldiv@bexp& (0+255),w,b
 12731  00228A  A4D8               	btfss	status,2,c
 12732  00228C  EF4A  F011         	goto	u10751
 12733  002290  EF4C  F011         	goto	u10750
 12734  002294                     u10751:
 12735  002294  EF54  F011         	goto	l10703
 12736  002298                     u10750:
 12737  002298                     
 12738                           ; BSR set to: 0
 12739  002298  0E00               	movlw	0
 12740  00229A  6F6E               	movwf	___fldiv@b& (0+255),b
 12741  00229C  0E00               	movlw	0
 12742  00229E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12743  0022A0  0E00               	movlw	0
 12744  0022A2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12745  0022A4  0E00               	movlw	0
 12746  0022A6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12747  0022A8                     l10703:
 12748                           
 12749                           ; BSR set to: 0
 12750  0022A8  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 12751  0022AA                     
 12752                           ; BSR set to: 0
 12753  0022AA  0E00               	movlw	0
 12754  0022AC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12755  0022AE  EF61  F011         	goto	l10709
 12756  0022B2                     l10707:
 12757                           
 12758                           ; BSR set to: 0
 12759  0022B2  0E00               	movlw	0
 12760  0022B4  6F6E               	movwf	___fldiv@b& (0+255),b
 12761  0022B6  0E00               	movlw	0
 12762  0022B8  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12763  0022BA  0E00               	movlw	0
 12764  0022BC  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12765  0022BE  0E00               	movlw	0
 12766  0022C0  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12767  0022C2                     l10709:
 12768                           
 12769                           ; BSR set to: 0
 12770  0022C2  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12771  0022C4  0B80               	andlw	128
 12772  0022C6  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 12773  0022C8                     
 12774                           ; BSR set to: 0
 12775  0022C8  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12776  0022CA  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 12777  0022CC  6F86               	movwf	___fldiv@aexp& (0+255),b
 12778  0022CE                     
 12779                           ; BSR set to: 0
 12780  0022CE  AF74               	btfss	(___fldiv@a+2)& (0+255),7,b
 12781  0022D0  EF6C  F011         	goto	u10761
 12782  0022D4  EF6E  F011         	goto	u10760
 12783  0022D8                     u10761:
 12784  0022D8  EF6F  F011         	goto	l10717
 12785  0022DC                     u10760:
 12786  0022DC                     
 12787                           ; BSR set to: 0
 12788  0022DC  8186               	bsf	___fldiv@aexp& (0+255),0,b
 12789  0022DE                     l10717:
 12790                           
 12791                           ; BSR set to: 0
 12792  0022DE  5186               	movf	___fldiv@aexp& (0+255),w,b
 12793  0022E0  B4D8               	btfsc	status,2,c
 12794  0022E2  EF75  F011         	goto	u10771
 12795  0022E6  EF77  F011         	goto	u10770
 12796  0022EA                     u10771:
 12797  0022EA  EF8C  F011         	goto	l10727
 12798  0022EE                     u10770:
 12799  0022EE                     
 12800                           ; BSR set to: 0
 12801  0022EE  2986               	incf	___fldiv@aexp& (0+255),w,b
 12802  0022F0  A4D8               	btfss	status,2,c
 12803  0022F2  EF7D  F011         	goto	u10781
 12804  0022F6  EF7F  F011         	goto	u10780
 12805  0022FA                     u10781:
 12806  0022FA  EF87  F011         	goto	l10723
 12807  0022FE                     u10780:
 12808  0022FE                     
 12809                           ; BSR set to: 0
 12810  0022FE  0E00               	movlw	0
 12811  002300  6F72               	movwf	___fldiv@a& (0+255),b
 12812  002302  0E00               	movlw	0
 12813  002304  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12814  002306  0E00               	movlw	0
 12815  002308  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12816  00230A  0E00               	movlw	0
 12817  00230C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12818  00230E                     l10723:
 12819                           
 12820                           ; BSR set to: 0
 12821  00230E  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 12822  002310                     
 12823                           ; BSR set to: 0
 12824  002310  0E00               	movlw	0
 12825  002312  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12826  002314  EF94  F011         	goto	l10729
 12827  002318                     l10727:
 12828                           
 12829                           ; BSR set to: 0
 12830  002318  0E00               	movlw	0
 12831  00231A  6F72               	movwf	___fldiv@a& (0+255),b
 12832  00231C  0E00               	movlw	0
 12833  00231E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12834  002320  0E00               	movlw	0
 12835  002322  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12836  002324  0E00               	movlw	0
 12837  002326  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12838  002328                     l10729:
 12839                           
 12840                           ; BSR set to: 0
 12841  002328  5172               	movf	___fldiv@a& (0+255),w,b
 12842  00232A  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12843  00232C  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12844  00232E  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12845  002330  A4D8               	btfss	status,2,c
 12846  002332  EF9D  F011         	goto	u10791
 12847  002336  EF9F  F011         	goto	u10790
 12848  00233A                     u10791:
 12849  00233A  EFB7  F011         	goto	l10741
 12850  00233E                     u10790:
 12851  00233E                     
 12852                           ; BSR set to: 0
 12853  00233E  0E00               	movlw	0
 12854  002340  6F6E               	movwf	___fldiv@b& (0+255),b
 12855  002342  0E00               	movlw	0
 12856  002344  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12857  002346  0E00               	movlw	0
 12858  002348  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12859  00234A  0E00               	movlw	0
 12860  00234C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12861  00234E                     
 12862                           ; BSR set to: 0
 12863  00234E  0E80               	movlw	128
 12864  002350  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12865  002352  0E7F               	movlw	127
 12866  002354  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12867  002356                     l10735:
 12868                           
 12869                           ; BSR set to: 0
 12870  002356  517E               	movf	___fldiv@sign& (0+255),w,b
 12871  002358  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12872  00235A                     
 12873                           ; BSR set to: 0
 12874  00235A  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12875  00235E  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12876  002362  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12877  002366  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12878  00236A  EFFA  F012         	goto	l2603
 12879  00236E                     l10741:
 12880                           
 12881                           ; BSR set to: 0
 12882  00236E  5185               	movf	___fldiv@bexp& (0+255),w,b
 12883  002370  A4D8               	btfss	status,2,c
 12884  002372  EFBD  F011         	goto	u10801
 12885  002376  EFBF  F011         	goto	u10800
 12886  00237A                     u10801:
 12887  00237A  EFC9  F011         	goto	l10749
 12888  00237E                     u10800:
 12889  00237E                     
 12890                           ; BSR set to: 0
 12891  00237E  0E00               	movlw	0
 12892  002380  6F6E               	movwf	?___fldiv& (0+255),b
 12893  002382  0E00               	movlw	0
 12894  002384  6F6F               	movwf	(?___fldiv+1)& (0+255),b
 12895  002386  0E00               	movlw	0
 12896  002388  6F70               	movwf	(?___fldiv+2)& (0+255),b
 12897  00238A  0E00               	movlw	0
 12898  00238C  6F71               	movwf	(?___fldiv+3)& (0+255),b
 12899  00238E  EFFA  F012         	goto	l2603
 12900  002392                     l10749:
 12901                           
 12902                           ; BSR set to: 0
 12903  002392  5186               	movf	___fldiv@aexp& (0+255),w,b
 12904  002394  C085  F076         	movff	___fldiv@bexp,??___fldiv
 12905  002398  6B77               	clrf	(??___fldiv+1)& (0+255),b
 12906  00239A  5F76               	subwf	??___fldiv& (0+255),f,b
 12907  00239C  0E00               	movlw	0
 12908  00239E  5B77               	subwfb	(??___fldiv+1)& (0+255),f,b
 12909  0023A0  0E7F               	movlw	127
 12910  0023A2  2576               	addwf	??___fldiv& (0+255),w,b
 12911  0023A4  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 12912  0023A6  0E00               	movlw	0
 12913  0023A8  2177               	addwfc	(??___fldiv+1)& (0+255),w,b
 12914  0023AA  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12915  0023AC                     
 12916                           ; BSR set to: 0
 12917  0023AC  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 12918  0023B0  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 12919  0023B4  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 12920  0023B8  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 12921  0023BC                     
 12922                           ; BSR set to: 0
 12923  0023BC  0E00               	movlw	0
 12924  0023BE  6F6E               	movwf	___fldiv@b& (0+255),b
 12925  0023C0  0E00               	movlw	0
 12926  0023C2  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12927  0023C4  0E00               	movlw	0
 12928  0023C6  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12929  0023C8  0E00               	movlw	0
 12930  0023CA  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12931  0023CC                     
 12932                           ; BSR set to: 0
 12933  0023CC  0E00               	movlw	0
 12934  0023CE  6F81               	movwf	___fldiv@grs& (0+255),b
 12935  0023D0  0E00               	movlw	0
 12936  0023D2  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 12937  0023D4  0E00               	movlw	0
 12938  0023D6  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 12939  0023D8  0E00               	movlw	0
 12940  0023DA  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 12941  0023DC                     
 12942                           ; BSR set to: 0
 12943  0023DC  0E00               	movlw	0
 12944  0023DE  6F86               	movwf	___fldiv@aexp& (0+255),b
 12945  0023E0  EF2A  F012         	goto	l2605
 12946  0023E4                     l10759:
 12947                           
 12948                           ; BSR set to: 0
 12949  0023E4  5186               	movf	___fldiv@aexp& (0+255),w,b
 12950  0023E6  B4D8               	btfsc	status,2,c
 12951  0023E8  EFF8  F011         	goto	u10811
 12952  0023EC  EFFA  F011         	goto	u10810
 12953  0023F0                     u10811:
 12954  0023F0  EF11  F012         	goto	l10767
 12955  0023F4                     u10810:
 12956  0023F4                     
 12957                           ; BSR set to: 0
 12958  0023F4  90D8               	bcf	status,0,c
 12959  0023F6  377A               	rlcf	___fldiv@rem& (0+255),f,b
 12960  0023F8  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12961  0023FA  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12962  0023FC  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12963  0023FE  90D8               	bcf	status,0,c
 12964  002400  376E               	rlcf	___fldiv@b& (0+255),f,b
 12965  002402  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12966  002404  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12967  002406  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12968  002408                     
 12969                           ; BSR set to: 0
 12970  002408  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12971  00240A  EF09  F012         	goto	u10821
 12972  00240E  EF0B  F012         	goto	u10820
 12973  002412                     u10821:
 12974  002412  EF0C  F012         	goto	l2608
 12975  002416                     u10820:
 12976  002416                     
 12977                           ; BSR set to: 0
 12978  002416  816E               	bsf	___fldiv@b& (0+255),0,b
 12979  002418                     l2608:
 12980                           
 12981                           ; BSR set to: 0
 12982  002418  90D8               	bcf	status,0,c
 12983  00241A  3781               	rlcf	___fldiv@grs& (0+255),f,b
 12984  00241C  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12985  00241E  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12986  002420  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12987  002422                     l10767:
 12988                           
 12989                           ; BSR set to: 0
 12990  002422  5172               	movf	___fldiv@a& (0+255),w,b
 12991  002424  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 12992  002426  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 12993  002428  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12994  00242A  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 12995  00242C  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12996  00242E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12997  002430  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12998  002432  A0D8               	btfss	status,0,c
 12999  002434  EF1E  F012         	goto	u10831
 13000  002438  EF20  F012         	goto	u10830
 13001  00243C                     u10831:
 13002  00243C  EF29  F012         	goto	l10773
 13003  002440                     u10830:
 13004  002440                     
 13005                           ; BSR set to: 0
 13006  002440  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13007  002442                     
 13008                           ; BSR set to: 0
 13009  002442  5172               	movf	___fldiv@a& (0+255),w,b
 13010  002444  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 13011  002446  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 13012  002448  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13013  00244A  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 13014  00244C  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13015  00244E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 13016  002450  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13017  002452                     l10773:
 13018                           
 13019                           ; BSR set to: 0
 13020  002452  2B86               	incf	___fldiv@aexp& (0+255),f,b
 13021  002454                     l2605:
 13022                           
 13023                           ; BSR set to: 0
 13024  002454  0E19               	movlw	25
 13025  002456  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 13026  002458  EF30  F012         	goto	u10841
 13027  00245C  EF32  F012         	goto	u10840
 13028  002460                     u10841:
 13029  002460  EFF2  F011         	goto	l10759
 13030  002464                     u10840:
 13031  002464                     
 13032                           ; BSR set to: 0
 13033  002464  517A               	movf	___fldiv@rem& (0+255),w,b
 13034  002466  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13035  002468  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13036  00246A  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13037  00246C  B4D8               	btfsc	status,2,c
 13038  00246E  EF3B  F012         	goto	u10851
 13039  002472  EF3D  F012         	goto	u10850
 13040  002476                     u10851:
 13041  002476  EF55  F012         	goto	l10785
 13042  00247A                     u10850:
 13043  00247A                     
 13044                           ; BSR set to: 0
 13045  00247A  8181               	bsf	___fldiv@grs& (0+255),0,b
 13046  00247C  EF55  F012         	goto	l10785
 13047  002480                     l10779:
 13048                           
 13049                           ; BSR set to: 0
 13050  002480  90D8               	bcf	status,0,c
 13051  002482  376E               	rlcf	___fldiv@b& (0+255),f,b
 13052  002484  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13053  002486  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13054  002488  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13055  00248A                     
 13056                           ; BSR set to: 0
 13057  00248A  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13058  00248C  EF4A  F012         	goto	u10861
 13059  002490  EF4C  F012         	goto	u10860
 13060  002494                     u10861:
 13061  002494  EF4D  F012         	goto	l2614
 13062  002498                     u10860:
 13063  002498                     
 13064                           ; BSR set to: 0
 13065  002498  816E               	bsf	___fldiv@b& (0+255),0,b
 13066  00249A                     l2614:
 13067                           
 13068                           ; BSR set to: 0
 13069  00249A  90D8               	bcf	status,0,c
 13070  00249C  3781               	rlcf	___fldiv@grs& (0+255),f,b
 13071  00249E  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13072  0024A0  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13073  0024A2  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13074  0024A4  077F               	decf	___fldiv@new_exp& (0+255),f,b
 13075  0024A6  A0D8               	btfss	status,0,c
 13076  0024A8  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13077  0024AA                     l10785:
 13078                           
 13079                           ; BSR set to: 0
 13080  0024AA  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 13081  0024AC  EF5A  F012         	goto	u10871
 13082  0024B0  EF5C  F012         	goto	u10870
 13083  0024B4                     u10871:
 13084  0024B4  EF40  F012         	goto	l10779
 13085  0024B8                     u10870:
 13086  0024B8                     
 13087                           ; BSR set to: 0
 13088  0024B8  0E00               	movlw	0
 13089  0024BA  6F86               	movwf	___fldiv@aexp& (0+255),b
 13090  0024BC                     
 13091                           ; BSR set to: 0
 13092  0024BC  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13093  0024BE  EF63  F012         	goto	u10881
 13094  0024C2  EF65  F012         	goto	u10880
 13095  0024C6                     u10881:
 13096  0024C6  EF89  F012         	goto	l2616
 13097  0024CA                     u10880:
 13098  0024CA                     
 13099                           ; BSR set to: 0
 13100  0024CA  0EFF               	movlw	255
 13101  0024CC  1581               	andwf	___fldiv@grs& (0+255),w,b
 13102  0024CE  6F76               	movwf	??___fldiv& (0+255),b
 13103  0024D0  0EFF               	movlw	255
 13104  0024D2  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13105  0024D4  6F77               	movwf	(??___fldiv+1)& (0+255),b
 13106  0024D6  0EFF               	movlw	255
 13107  0024D8  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13108  0024DA  6F78               	movwf	(??___fldiv+2)& (0+255),b
 13109  0024DC  0E7F               	movlw	127
 13110  0024DE  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13111  0024E0  6F79               	movwf	(??___fldiv+3)& (0+255),b
 13112  0024E2  5176               	movf	??___fldiv& (0+255),w,b
 13113  0024E4  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 13114  0024E6  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 13115  0024E8  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 13116  0024EA  B4D8               	btfsc	status,2,c
 13117  0024EC  EF7A  F012         	goto	u10891
 13118  0024F0  EF7C  F012         	goto	u10890
 13119  0024F4                     u10891:
 13120  0024F4  EF80  F012         	goto	l2617
 13121  0024F8                     u10890:
 13122  0024F8                     l10793:
 13123                           
 13124                           ; BSR set to: 0
 13125  0024F8  0E01               	movlw	1
 13126  0024FA  6F86               	movwf	___fldiv@aexp& (0+255),b
 13127  0024FC  EF89  F012         	goto	l2616
 13128  002500                     l2617:
 13129                           
 13130                           ; BSR set to: 0
 13131  002500  A16E               	btfss	___fldiv@b& (0+255),0,b
 13132  002502  EF85  F012         	goto	u10901
 13133  002506  EF87  F012         	goto	u10900
 13134  00250A                     u10901:
 13135  00250A  EF89  F012         	goto	l2616
 13136  00250E                     u10900:
 13137  00250E  EF7C  F012         	goto	l10793
 13138  002512                     l2616:
 13139                           
 13140                           ; BSR set to: 0
 13141  002512  5186               	movf	___fldiv@aexp& (0+255),w,b
 13142  002514  B4D8               	btfsc	status,2,c
 13143  002516  EF8F  F012         	goto	u10911
 13144  00251A  EF91  F012         	goto	u10910
 13145  00251E                     u10911:
 13146  00251E  EFB5  F012         	goto	l10805
 13147  002522                     u10910:
 13148  002522                     
 13149                           ; BSR set to: 0
 13150  002522  0E01               	movlw	1
 13151  002524  276E               	addwf	___fldiv@b& (0+255),f,b
 13152  002526  0E00               	movlw	0
 13153  002528  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13154  00252A  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13155  00252C  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13156  00252E                     
 13157                           ; BSR set to: 0
 13158  00252E  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 13159  002530  EF9C  F012         	goto	u10921
 13160  002534  EF9E  F012         	goto	u10920
 13161  002538                     u10921:
 13162  002538  EFB5  F012         	goto	l10805
 13163  00253C                     u10920:
 13164  00253C                     
 13165                           ; BSR set to: 0
 13166  00253C  C06E  F076         	movff	___fldiv@b,??___fldiv
 13167  002540  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 13168  002544  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 13169  002548  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 13170  00254C  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 13171  00254E  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 13172  002550  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 13173  002552  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 13174  002554  3376               	rrcf	??___fldiv& (0+255),f,b
 13175  002556  C076  F06E         	movff	??___fldiv,___fldiv@b
 13176  00255A  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 13177  00255E  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 13178  002562  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 13179  002566                     
 13180                           ; BSR set to: 0
 13181  002566  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 13182  002568  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13183  00256A                     l10805:
 13184                           
 13185                           ; BSR set to: 0
 13186  00256A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13187  00256C  EFC0  F012         	goto	u10931
 13188  002570  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13189  002572  E108               	bnz	u10930
 13190  002574  297F               	incf	___fldiv@new_exp& (0+255),w,b
 13191  002576  A0D8               	btfss	status,0,c
 13192  002578  EFC0  F012         	goto	u10931
 13193  00257C  EFC2  F012         	goto	u10930
 13194  002580                     u10931:
 13195  002580  EFCD  F012         	goto	l10809
 13196  002584                     u10930:
 13197  002584                     
 13198                           ; BSR set to: 0
 13199  002584  0E00               	movlw	0
 13200  002586  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13201  002588  697F               	setf	___fldiv@new_exp& (0+255),b
 13202  00258A  0E00               	movlw	0
 13203  00258C  6F6E               	movwf	___fldiv@b& (0+255),b
 13204  00258E  0E00               	movlw	0
 13205  002590  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 13206  002592  0E00               	movlw	0
 13207  002594  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 13208  002596  0E00               	movlw	0
 13209  002598  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 13210  00259A                     l10809:
 13211                           
 13212                           ; BSR set to: 0
 13213  00259A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13214  00259C  EFDA  F012         	goto	u10940
 13215  0025A0  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13216  0025A2  E106               	bnz	u10941
 13217  0025A4  057F               	decf	___fldiv@new_exp& (0+255),w,b
 13218  0025A6  B0D8               	btfsc	status,0,c
 13219  0025A8  EFD8  F012         	goto	u10941
 13220  0025AC  EFDA  F012         	goto	u10940
 13221  0025B0                     u10941:
 13222  0025B0  EFE8  F012         	goto	l10813
 13223  0025B4                     u10940:
 13224  0025B4                     
 13225                           ; BSR set to: 0
 13226  0025B4  0E00               	movlw	0
 13227  0025B6  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13228  0025B8  0E00               	movlw	0
 13229  0025BA  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 13230  0025BC  0E00               	movlw	0
 13231  0025BE  6F6E               	movwf	___fldiv@b& (0+255),b
 13232  0025C0  0E00               	movlw	0
 13233  0025C2  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 13234  0025C4  0E00               	movlw	0
 13235  0025C6  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 13236  0025C8  0E00               	movlw	0
 13237  0025CA  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 13238  0025CC  0E00               	movlw	0
 13239  0025CE  6F7E               	movwf	___fldiv@sign& (0+255),b
 13240  0025D0                     l10813:
 13241                           
 13242                           ; BSR set to: 0
 13243  0025D0  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 13244  0025D4                     
 13245                           ; BSR set to: 0
 13246  0025D4  A185               	btfss	___fldiv@bexp& (0+255),0,b
 13247  0025D6  EFEF  F012         	goto	u10951
 13248  0025DA  EFF1  F012         	goto	u10950
 13249  0025DE                     u10951:
 13250  0025DE  EFF4  F012         	goto	l10819
 13251  0025E2                     u10950:
 13252  0025E2                     
 13253                           ; BSR set to: 0
 13254  0025E2  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 13255  0025E4  EFF5  F012         	goto	l10821
 13256  0025E8                     l10819:
 13257                           
 13258                           ; BSR set to: 0
 13259  0025E8  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 13260  0025EA                     l10821:
 13261                           
 13262                           ; BSR set to: 0
 13263  0025EA  90D8               	bcf	status,0,c
 13264  0025EC  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 13265  0025EE  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 13266  0025F0  EFAB  F011         	goto	l10735
 13267  0025F4                     l2603:
 13268                           
 13269                           ; BSR set to: 0
 13270  0025F4  0012               	return		;funcret
 13271  0025F6                     __end_of___fldiv:
 13272                           	callstack 0
 13273                           
 13274 ;; *************** function _HAL_Timer0_Write_Val *****************
 13275 ;; Defined at:
 13276 ;;		line 179 in file "MCAL/Timer0/hal_timer0.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 13279 ;;		 -> timer0(4), 
 13280 ;;  val             2   31[COMRAM] unsigned short 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;  ret_value       1   33[COMRAM] unsigned char 
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      unsigned char 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2, status,0
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13295 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;Total ram usage:        5 bytes
 13297 ;; Hardware stack levels used: 1
 13298 ;; Hardware stack levels required when called: 8
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		_HAL_Timer0_Init
 13303 ;;		_Get_Distance
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           	psect	text69
 13308  005B50                     __ptext69:
 13309                           	callstack 0
 13310  005B50                     _HAL_Timer0_Write_Val:
 13311                           	callstack 19
 13312  005B50                     
 13313                           ;MCAL/Timer0/hal_timer0.c: 179: Std_ReturnType HAL_Timer0_Write_Val(const timer0_config_
      +                          st *_tmr0_config ,;MCAL/Timer0/hal_timer0.c: 180:         uint16_t val);MCAL/Timer0/hal_
      +                          timer0.c: 181: {;MCAL/Timer0/hal_timer0.c: 182:     Std_ReturnType ret_value = (Std_Retu
      +                          rnType) 0x01 ;
 13314  005B50  0E01               	movlw	1
 13315  005B52  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 13316  005B54                     
 13317                           ;MCAL/Timer0/hal_timer0.c: 184:     if(((void*)0) == _tmr0_config)
 13318  005B54  501E               	movf	HAL_Timer0_Write_Val@_tmr0_config^0,w,c
 13319  005B56  101F               	iorwf	(HAL_Timer0_Write_Val@_tmr0_config+1)^0,w,c
 13320  005B58  A4D8               	btfss	status,2,c
 13321  005B5A  EFB1  F02D         	goto	u11681
 13322  005B5E  EFB3  F02D         	goto	u11680
 13323  005B62                     u11681:
 13324  005B62  EFB7  F02D         	goto	l11351
 13325  005B66                     u11680:
 13326  005B66                     
 13327                           ;MCAL/Timer0/hal_timer0.c: 185:     {;MCAL/Timer0/hal_timer0.c: 186:         ret_value =
      +                           (Std_ReturnType) 0x00 ;
 13328  005B66  0E00               	movlw	0
 13329  005B68  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 13330                           
 13331                           ;MCAL/Timer0/hal_timer0.c: 187:     }
 13332  005B6A  EFBB  F02D         	goto	l1537
 13333  005B6E                     l11351:
 13334                           
 13335                           ;MCAL/Timer0/hal_timer0.c: 189:     {;MCAL/Timer0/hal_timer0.c: 190:        TMR0H=(val)>
      +                          >8;
 13336  005B6E  5021               	movf	(HAL_Timer0_Write_Val@val+1)^0,w,c
 13337  005B70  6ED7               	movwf	215,c	;volatile
 13338  005B72                     
 13339                           ;MCAL/Timer0/hal_timer0.c: 191:        TMR0L=(uint8)(val);
 13340  005B72  C020  FFD6         	movff	HAL_Timer0_Write_Val@val,4054	;volatile
 13341  005B76                     l1537:
 13342                           
 13343                           ;MCAL/Timer0/hal_timer0.c: 212:     return ret_value ;
 13344  005B76  5022               	movf	HAL_Timer0_Write_Val@ret_value^0,w,c
 13345  005B78  0012               	return		;funcret
 13346  005B7A                     __end_of_HAL_Timer0_Write_Val:
 13347                           	callstack 0
 13348                           
 13349 ;; *************** function _HAL_Timer0_Read_Val *****************
 13350 ;; Defined at:
 13351 ;;		line 141 in file "MCAL/Timer0/hal_timer0.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 13354 ;;		 -> timer0(4), 
 13355 ;;  result          2   31[COMRAM] PTR unsigned short 
 13356 ;;		 -> Get_Distance@timer_val(2), 
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;  l_low_byte      1    1[BANK0 ] unsigned char 
 13359 ;;  l_high_byte     1    0[BANK0 ] unsigned char 
 13360 ;;  ret_value       1    0        unsigned char 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  1    wreg      unsigned char 
 13363 ;; Registers used:
 13364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13373 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13374 ;;Total ram usage:       10 bytes
 13375 ;; Hardware stack levels used: 1
 13376 ;; Hardware stack levels required when called: 8
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_Get_Distance
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text70
 13385  00493C                     __ptext70:
 13386                           	callstack 0
 13387  00493C                     _HAL_Timer0_Read_Val:
 13388                           	callstack 21
 13389  00493C                     
 13390                           ;MCAL/Timer0/hal_timer0.c: 145:     uint8_t l_low_byte = 0;
 13391  00493C  0E00               	movlw	0
 13392  00493E  0100               	movlb	0	; () banked
 13393  004940  6F61               	movwf	HAL_Timer0_Read_Val@l_low_byte& (0+255),b
 13394                           
 13395                           ;MCAL/Timer0/hal_timer0.c: 146:     uint8_t l_high_byte = 0;
 13396  004942  0E00               	movlw	0
 13397  004944  6F60               	movwf	HAL_Timer0_Read_Val@l_high_byte& (0+255),b
 13398  004946                     
 13399                           ; BSR set to: 0
 13400                           ;MCAL/Timer0/hal_timer0.c: 148:     if((((void*)0) == _tmr0_config) || (((void*)0) == re
      +                          sult))
 13401  004946  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 13402  004948  101F               	iorwf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 13403  00494A  B4D8               	btfsc	status,2,c
 13404  00494C  EFAA  F024         	goto	u12821
 13405  004950  EFAC  F024         	goto	u12820
 13406  004954                     u12821:
 13407  004954  EFB5  F024         	goto	l12073
 13408  004958                     u12820:
 13409  004958                     
 13410                           ; BSR set to: 0
 13411  004958  5020               	movf	HAL_Timer0_Read_Val@result^0,w,c
 13412  00495A  1021               	iorwf	(HAL_Timer0_Read_Val@result+1)^0,w,c
 13413  00495C  A4D8               	btfss	status,2,c
 13414  00495E  EFB3  F024         	goto	u12831
 13415  004962  EFB5  F024         	goto	u12830
 13416  004966                     u12831:
 13417  004966  EFB7  F024         	goto	l12075
 13418  00496A                     u12830:
 13419  00496A                     l12073:
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;MCAL/Timer0/hal_timer0.c: 151:     }
 13423  00496A  EFF6  F024         	goto	l1533
 13424  00496E                     l12075:
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;MCAL/Timer0/hal_timer0.c: 153:     {;MCAL/Timer0/hal_timer0.c: 154:         if( 0x00U =
      +                          = _tmr0_config->reg_bit_size)
 13428  00496E  EE20 F003          	lfsr	2,3
 13429  004972  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 13430  004974  26D9               	addwf	fsr2l,f,c
 13431  004976  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 13432  004978  22DA               	addwfc	fsr2h,f,c
 13433  00497A  B2DF               	btfsc	indf2,1,c
 13434  00497C  EFC2  F024         	goto	u12841
 13435  004980  EFC4  F024         	goto	u12840
 13436  004984                     u12841:
 13437  004984  EFDC  F024         	goto	l12081
 13438  004988                     u12840:
 13439  004988                     
 13440                           ; BSR set to: 0
 13441                           ;MCAL/Timer0/hal_timer0.c: 155:         {;MCAL/Timer0/hal_timer0.c: 156:             l_l
      +                          ow_byte = TMR0L ;
 13442  004988  CFD6 F061          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 13443                           
 13444                           ;MCAL/Timer0/hal_timer0.c: 157:             l_high_byte = TMR0H ;
 13445  00498C  CFD7 F060          	movff	4055,HAL_Timer0_Read_Val@l_high_byte	;volatile
 13446  004990                     
 13447                           ; BSR set to: 0
 13448                           ;MCAL/Timer0/hal_timer0.c: 158:             *result = (uint16_t) (l_low_byte + (l_high_b
      +                          yte << 8));
 13449  004990  5160               	movf	HAL_Timer0_Read_Val@l_high_byte& (0+255),w,b
 13450  004992  6E23               	movwf	(??_HAL_Timer0_Read_Val+1)^0,c
 13451  004994  6A22               	clrf	??_HAL_Timer0_Read_Val^0,c
 13452  004996  5161               	movf	HAL_Timer0_Read_Val@l_low_byte& (0+255),w,b
 13453  004998  6E24               	movwf	(??_HAL_Timer0_Read_Val+2)^0,c
 13454  00499A  6A25               	clrf	(??_HAL_Timer0_Read_Val+3)^0,c
 13455  00499C  5022               	movf	??_HAL_Timer0_Read_Val^0,w,c
 13456  00499E  2624               	addwf	(??_HAL_Timer0_Read_Val+2)^0,f,c
 13457  0049A0  5023               	movf	(??_HAL_Timer0_Read_Val+1)^0,w,c
 13458  0049A2  2225               	addwfc	(??_HAL_Timer0_Read_Val+3)^0,f,c
 13459  0049A4  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 13460  0049A8  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 13461  0049AC  C024  FFDE         	movff	??_HAL_Timer0_Read_Val+2,postinc2
 13462  0049B0  C025  FFDD         	movff	??_HAL_Timer0_Read_Val+3,postdec2
 13463                           
 13464                           ;MCAL/Timer0/hal_timer0.c: 159:         }
 13465  0049B4  EFF6  F024         	goto	l1533
 13466  0049B8                     l12081:
 13467                           
 13468                           ; BSR set to: 0
 13469  0049B8  EE20 F003          	lfsr	2,3
 13470  0049BC  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 13471  0049BE  26D9               	addwf	fsr2l,f,c
 13472  0049C0  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 13473  0049C2  22DA               	addwfc	fsr2h,f,c
 13474  0049C4  A2DF               	btfss	indf2,1,c
 13475  0049C6  EFE7  F024         	goto	u12851
 13476  0049CA  EFE9  F024         	goto	u12850
 13477  0049CE                     u12851:
 13478  0049CE  EFB5  F024         	goto	l12073
 13479  0049D2                     u12850:
 13480  0049D2                     
 13481                           ; BSR set to: 0
 13482                           ;MCAL/Timer0/hal_timer0.c: 161:         {;MCAL/Timer0/hal_timer0.c: 162:             l_l
      +                          ow_byte = TMR0L ;
 13483  0049D2  CFD6 F061          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 13484  0049D6                     
 13485                           ; BSR set to: 0
 13486                           ;MCAL/Timer0/hal_timer0.c: 163:             *result = (uint16_t) (l_low_byte);
 13487  0049D6  5161               	movf	HAL_Timer0_Read_Val@l_low_byte& (0+255),w,b
 13488  0049D8  6E22               	movwf	??_HAL_Timer0_Read_Val^0,c
 13489  0049DA  6A23               	clrf	(??_HAL_Timer0_Read_Val+1)^0,c
 13490  0049DC  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 13491  0049E0  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 13492  0049E4  C022  FFDE         	movff	??_HAL_Timer0_Read_Val,postinc2
 13493  0049E8  C023  FFDD         	movff	??_HAL_Timer0_Read_Val+1,postdec2
 13494  0049EC                     l1533:
 13495                           
 13496                           ; BSR set to: 0
 13497  0049EC  0012               	return		;funcret
 13498  0049EE                     __end_of_HAL_Timer0_Read_Val:
 13499                           	callstack 0
 13500                           
 13501 ;; *************** function _GPIO_Pin_Read_Logic *****************
 13502 ;; Defined at:
 13503 ;;		line 114 in file "MCAL/GPIO/hal_gpio.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 13506 ;;		 -> ultrasonic(2), 
 13507 ;;  logic           2   31[COMRAM] PTR enum E3185
 13508 ;;		 -> Get_Distance@logic(1), 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  ERRORSTATUS     1    0        unsigned char 
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      unsigned char 
 13513 ;; Registers used:
 13514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13522 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13523 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13524 ;;Total ram usage:        9 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 8
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_Get_Distance
 13531 ;;		_IR_Sensor_Detect
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text71
 13536  004A9C                     __ptext71:
 13537                           	callstack 0
 13538  004A9C                     _GPIO_Pin_Read_Logic:
 13539                           	callstack 21
 13540  004A9C                     
 13541                           ;MCAL/GPIO/hal_gpio.c: 117:           if ( ((void*)0)==_pin_config||((void*)0)==logic||_
      +                          pin_config->pin> 8 -1)
 13542  004A9C  501E               	movf	GPIO_Pin_Read_Logic@_pin_config^0,w,c
 13543  004A9E  101F               	iorwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,w,c
 13544  004AA0  B4D8               	btfsc	status,2,c
 13545  004AA2  EF55  F025         	goto	u12651
 13546  004AA6  EF57  F025         	goto	u12650
 13547  004AAA                     u12651:
 13548  004AAA  EF70  F025         	goto	l11923
 13549  004AAE                     u12650:
 13550  004AAE  5020               	movf	GPIO_Pin_Read_Logic@logic^0,w,c
 13551  004AB0  1021               	iorwf	(GPIO_Pin_Read_Logic@logic+1)^0,w,c
 13552  004AB2  B4D8               	btfsc	status,2,c
 13553  004AB4  EF5E  F025         	goto	u12661
 13554  004AB8  EF60  F025         	goto	u12660
 13555  004ABC                     u12661:
 13556  004ABC  EF70  F025         	goto	l11923
 13557  004AC0                     u12660:
 13558  004AC0  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 13559  004AC4  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 13560  004AC8  50DF               	movf	223,w,c
 13561  004ACA  0B07               	andlw	7
 13562  004ACC  0100               	movlb	0	; () banked
 13563  004ACE  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 13564  004AD0  0E07               	movlw	7
 13565  004AD2  6560               	cpfsgt	??_GPIO_Pin_Read_Logic& (0+255),b
 13566  004AD4  EF6E  F025         	goto	u12671
 13567  004AD8  EF70  F025         	goto	u12670
 13568  004ADC                     u12671:
 13569  004ADC  EF72  F025         	goto	l11925
 13570  004AE0                     u12670:
 13571  004AE0                     l11923:
 13572                           
 13573                           ;MCAL/GPIO/hal_gpio.c: 120:     }
 13574  004AE0  EFA4  F025         	goto	l916
 13575  004AE4                     l11925:
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;MCAL/GPIO/hal_gpio.c: 122:     {;MCAL/GPIO/hal_gpio.c: 123:          *logic= (( *port_r
      +                          egisters[_pin_config->port]>>_pin_config->pin )&(uint8)1);
 13579  004AE4  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 13580  004AE8  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 13581  004AEC  50DF               	movf	223,w,c
 13582  004AEE  0B07               	andlw	7
 13583  004AF0  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 13584  004AF2  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 13585  004AF6  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 13586  004AFA  30DF               	rrcf	223,w,c
 13587  004AFC  32E8               	rrcf	wreg,f,c
 13588  004AFE  32E8               	rrcf	wreg,f,c
 13589  004B00  0B07               	andlw	7
 13590  004B02  6F61               	movwf	(??_GPIO_Pin_Read_Logic+1)& (0+255),b
 13591  004B04  5161               	movf	(??_GPIO_Pin_Read_Logic+1)& (0+255),w,b
 13592  004B06  0D02               	mullw	2
 13593  004B08  0E00               	movlw	low _port_registers
 13594  004B0A  24F3               	addwf	243,w,c
 13595  004B0C  6ED9               	movwf	fsr2l,c
 13596  004B0E  0E01               	movlw	high _port_registers
 13597  004B10  20F4               	addwfc	prodh,w,c
 13598  004B12  6EDA               	movwf	fsr2h,c
 13599  004B14  CFDE F062          	movff	postinc2,??_GPIO_Pin_Read_Logic+2
 13600  004B18  CFDD F063          	movff	postdec2,??_GPIO_Pin_Read_Logic+3
 13601  004B1C  C062  FFD9         	movff	??_GPIO_Pin_Read_Logic+2,fsr2l
 13602  004B20  C063  FFDA         	movff	??_GPIO_Pin_Read_Logic+3,fsr2h
 13603  004B24  50DF               	movf	indf2,w,c
 13604  004B26  6F64               	movwf	(??_GPIO_Pin_Read_Logic+4)& (0+255),b
 13605  004B28  2B60               	incf	??_GPIO_Pin_Read_Logic& (0+255),f,b
 13606  004B2A  EF99  F025         	goto	u12684
 13607  004B2E                     u12685:
 13608  004B2E  90D8               	bcf	status,0,c
 13609  004B30  3364               	rrcf	(??_GPIO_Pin_Read_Logic+4)& (0+255),f,b
 13610  004B32                     u12684:
 13611  004B32  2F60               	decfsz	??_GPIO_Pin_Read_Logic& (0+255),f,b
 13612  004B34  EF97  F025         	goto	u12685
 13613  004B38  0100               	movlb	0	; () banked
 13614  004B3A  5164               	movf	(??_GPIO_Pin_Read_Logic+4)& (0+255),w,b
 13615  004B3C  0B01               	andlw	1
 13616  004B3E  C020  FFD9         	movff	GPIO_Pin_Read_Logic@logic,fsr2l
 13617  004B42  C021  FFDA         	movff	GPIO_Pin_Read_Logic@logic+1,fsr2h
 13618  004B46  6EDF               	movwf	indf2,c
 13619  004B48                     l916:
 13620  004B48  0012               	return		;funcret
 13621  004B4A                     __end_of_GPIO_Pin_Read_Logic:
 13622                           	callstack 0
 13623                           
 13624 ;; *************** function _GPS_Service *****************
 13625 ;; Defined at:
 13626 ;;		line 486 in file "application.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;		None
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;  key             1   36[COMRAM] unsigned char 
 13631 ;; Return value:  Size  Location     Type
 13632 ;;                  1    wreg      void 
 13633 ;; Registers used:
 13634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13635 ;; Tracked objects:
 13636 ;;		On entry : 0/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13643 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13644 ;;Total ram usage:        3 bytes
 13645 ;; Hardware stack levels used: 1
 13646 ;; Hardware stack levels required when called: 11
 13647 ;; This function calls:
 13648 ;;		_EUSART_Async_Read_Data_Blocking
 13649 ;;		_GPIO_Pin_Write_Logic
 13650 ;; This function is called by:
 13651 ;;		_main
 13652 ;; This function uses a non-reentrant model
 13653 ;;
 13654                           
 13655                           	psect	text72
 13656  0030A6                     __ptext72:
 13657                           	callstack 0
 13658  0030A6                     _GPS_Service:
 13659                           	callstack 19
 13660  0030A6                     
 13661                           ;application.c: 488:     uint8 key=1;
 13662  0030A6  0E01               	movlw	1
 13663  0030A8  6E25               	movwf	GPS_Service@key^0,c
 13664  0030AA                     
 13665                           ;application.c: 489:     (PIE1bits.RCIE = 0);
 13666  0030AA  9A9D               	bcf	157,5,c	;volatile
 13667  0030AC                     
 13668                           ;application.c: 490:     GPIO_Pin_Write_Logic(&selector,GPIO_HIGH);
 13669  0030AC  0E41               	movlw	low _selector
 13670  0030AE  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 13671  0030B0  0E00               	movlw	high _selector
 13672  0030B2  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 13673  0030B4  0E01               	movlw	1
 13674  0030B6  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 13675  0030B8  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
 13676                           
 13677                           ;application.c: 492:     while (key)
 13678  0030BC  EFE8  F018         	goto	l12623
 13679  0030C0                     l12587:
 13680                           
 13681                           ;application.c: 493:     {;application.c: 494:         EUSART_Async_Read_Data_Blocking(&
      +                          _uart_obj,&gpstemp);
 13682  0030C0  0E14               	movlw	low __uart_obj
 13683  0030C2  0100               	movlb	0	; () banked
 13684  0030C4  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 13685  0030C6  0E01               	movlw	high __uart_obj
 13686  0030C8  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 13687  0030CA  0E3C               	movlw	low _gpstemp
 13688  0030CC  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 13689  0030CE  0E00               	movlw	high _gpstemp
 13690  0030D0  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 13691  0030D2  EC29  F02A         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 13692  0030D6                     
 13693                           ;application.c: 495:         if ('$'==gpstemp)
 13694  0030D6  0E24               	movlw	36
 13695  0030D8  183C               	xorwf	_gpstemp^0,w,c	;volatile
 13696  0030DA  A4D8               	btfss	status,2,c
 13697  0030DC  EF72  F018         	goto	u13211
 13698  0030E0  EF74  F018         	goto	u13210
 13699  0030E4                     u13211:
 13700  0030E4  EFE8  F018         	goto	l12623
 13701  0030E8                     u13210:
 13702  0030E8  EFE0  F018         	goto	l2003
 13703  0030EC                     l12593:
 13704                           
 13705                           ;application.c: 498:             {;application.c: 499:                     EUSART_Async_
      +                          Read_Data_Blocking(&_uart_obj,&gpstemp);
 13706  0030EC  0E14               	movlw	low __uart_obj
 13707  0030EE  0100               	movlb	0	; () banked
 13708  0030F0  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 13709  0030F2  0E01               	movlw	high __uart_obj
 13710  0030F4  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 13711  0030F6  0E3C               	movlw	low _gpstemp
 13712  0030F8  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 13713  0030FA  0E00               	movlw	high _gpstemp
 13714  0030FC  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 13715  0030FE  EC29  F02A         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 13716  003102                     
 13717                           ;application.c: 500:                     if (','==gpstemp)
 13718  003102  0E2C               	movlw	44
 13719  003104  183C               	xorwf	_gpstemp^0,w,c	;volatile
 13720  003106  A4D8               	btfss	status,2,c
 13721  003108  EF88  F018         	goto	u13221
 13722  00310C  EF8A  F018         	goto	u13220
 13723  003110                     u13221:
 13724  003110  EFE0  F018         	goto	l2003
 13725  003114                     u13220:
 13726  003114                     
 13727                           ;application.c: 501:                     {;application.c: 502:                         c
      +                          ounter++;
 13728  003114  2A37               	incf	_counter^0,f,c	;volatile
 13729  003116                     
 13730                           ;application.c: 503:                         if (3==counter)
 13731  003116  0E03               	movlw	3
 13732  003118  1837               	xorwf	_counter^0,w,c	;volatile
 13733  00311A  A4D8               	btfss	status,2,c
 13734  00311C  EF92  F018         	goto	u13231
 13735  003120  EF94  F018         	goto	u13230
 13736  003124                     u13231:
 13737  003124  EFB6  F018         	goto	l12611
 13738  003128                     u13230:
 13739  003128                     
 13740                           ;application.c: 504:                         {;application.c: 505:                      
      +                                 i=0;
 13741  003128  0E00               	movlw	0
 13742  00312A  6E36               	movwf	_i^0,c
 13743  00312C                     l12603:
 13744                           
 13745                           ;application.c: 508:                             {;application.c: 509:                  
      +                                         EUSART_Async_Read_Data_Blocking(&_uart_obj,(latitude+i));
 13746  00312C  0E14               	movlw	low __uart_obj
 13747  00312E  0100               	movlb	0	; () banked
 13748  003130  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 13749  003132  0E01               	movlw	high __uart_obj
 13750  003134  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 13751  003136  0E59               	movlw	low _latitude
 13752  003138  2436               	addwf	_i^0,w,c
 13753  00313A  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 13754  00313C  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 13755  00313E  0E01               	movlw	high _latitude
 13756  003140  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 13757  003142  EC29  F02A         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 13758  003146                     
 13759                           ;application.c: 510:                                 i++;
 13760  003146  2A36               	incf	_i^0,f,c
 13761  003148                     
 13762                           ;application.c: 511:                             }while(','!=(latitude[i-1]));
 13763  003148  0E58               	movlw	low (_latitude+65535)
 13764  00314A  2436               	addwf	_i^0,w,c
 13765  00314C  6ED9               	movwf	fsr2l,c
 13766  00314E  6ADA               	clrf	fsr2h,c
 13767  003150  0E01               	movlw	high (_latitude+65535)
 13768  003152  22DA               	addwfc	fsr2h,f,c
 13769  003154  0E2C               	movlw	44
 13770  003156  18DE               	xorwf	postinc2,w,c
 13771  003158  A4D8               	btfss	status,2,c
 13772  00315A  EFB1  F018         	goto	u13241
 13773  00315E  EFB3  F018         	goto	u13240
 13774  003162                     u13241:
 13775  003162  EF96  F018         	goto	l12603
 13776  003166                     u13240:
 13777  003166                     
 13778                           ;application.c: 512:                             counter++;
 13779  003166  2A37               	incf	_counter^0,f,c	;volatile
 13780                           
 13781                           ;application.c: 514:                         }
 13782  003168  EFE0  F018         	goto	l2003
 13783  00316C                     l12611:
 13784  00316C  0E05               	movlw	5
 13785  00316E  1837               	xorwf	_counter^0,w,c	;volatile
 13786  003170  A4D8               	btfss	status,2,c
 13787  003172  EFBD  F018         	goto	u13251
 13788  003176  EFBF  F018         	goto	u13250
 13789  00317A                     u13251:
 13790  00317A  EFE0  F018         	goto	l2003
 13791  00317E                     u13250:
 13792  00317E                     
 13793                           ;application.c: 516:                         {;application.c: 517:                      
      +                                 i=0;
 13794  00317E  0E00               	movlw	0
 13795  003180  6E36               	movwf	_i^0,c
 13796  003182                     l12615:
 13797                           
 13798                           ;application.c: 520:                                 EUSART_Async_Read_Data_Blocking(&_u
      +                          art_obj,(longtude+i));
 13799  003182  0E14               	movlw	low __uart_obj
 13800  003184  0100               	movlb	0	; () banked
 13801  003186  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 13802  003188  0E01               	movlw	high __uart_obj
 13803  00318A  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 13804  00318C  0E4C               	movlw	low _longtude
 13805  00318E  2436               	addwf	_i^0,w,c
 13806  003190  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 13807  003192  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 13808  003194  0E01               	movlw	high _longtude
 13809  003196  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 13810  003198  EC29  F02A         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 13811  00319C                     
 13812                           ;application.c: 521:                                 i++;
 13813  00319C  2A36               	incf	_i^0,f,c
 13814  00319E                     
 13815                           ;application.c: 522:                             }while(','!=(longtude[i-1]));
 13816  00319E  0E4B               	movlw	low (_longtude+65535)
 13817  0031A0  2436               	addwf	_i^0,w,c
 13818  0031A2  6ED9               	movwf	fsr2l,c
 13819  0031A4  6ADA               	clrf	fsr2h,c
 13820  0031A6  0E01               	movlw	high (_longtude+65535)
 13821  0031A8  22DA               	addwfc	fsr2h,f,c
 13822  0031AA  0E2C               	movlw	44
 13823  0031AC  18DE               	xorwf	postinc2,w,c
 13824  0031AE  A4D8               	btfss	status,2,c
 13825  0031B0  EFDC  F018         	goto	u13261
 13826  0031B4  EFDE  F018         	goto	u13260
 13827  0031B8                     u13261:
 13828  0031B8  EFC1  F018         	goto	l12615
 13829  0031BC                     u13260:
 13830  0031BC                     
 13831                           ;application.c: 523:                             key=0;
 13832  0031BC  0E00               	movlw	0
 13833  0031BE  6E25               	movwf	GPS_Service@key^0,c
 13834  0031C0                     l2003:
 13835                           
 13836                           ;application.c: 497:             while (key)
 13837  0031C0  5025               	movf	GPS_Service@key^0,w,c
 13838  0031C2  A4D8               	btfss	status,2,c
 13839  0031C4  EFE6  F018         	goto	u13271
 13840  0031C8  EFE8  F018         	goto	u13270
 13841  0031CC                     u13271:
 13842  0031CC  EF76  F018         	goto	l12593
 13843  0031D0                     u13270:
 13844  0031D0                     l12623:
 13845                           
 13846                           ;application.c: 492:     while (key)
 13847  0031D0  5025               	movf	GPS_Service@key^0,w,c
 13848  0031D2  A4D8               	btfss	status,2,c
 13849  0031D4  EFEE  F018         	goto	u13281
 13850  0031D8  EFF0  F018         	goto	u13280
 13851  0031DC                     u13281:
 13852  0031DC  EF60  F018         	goto	l12587
 13853  0031E0                     u13280:
 13854  0031E0                     
 13855                           ;application.c: 529:       _delay((unsigned long)((2000)*(8000000/4000.0)));
 13856  0031E0  0E15               	movlw	21
 13857  0031E2  0100               	movlb	0	; () banked
 13858  0031E4  6F71               	movwf	(??_GPS_Service+1)& (0+255),b
 13859  0031E6  0E4B               	movlw	75
 13860  0031E8  6F70               	movwf	??_GPS_Service& (0+255),b
 13861  0031EA  0EBE               	movlw	190
 13862  0031EC                     u14067:
 13863  0031EC  2EE8               	decfsz	wreg,f,c
 13864  0031EE  D7FE               	bra	u14067
 13865  0031F0  2F70               	decfsz	??_GPS_Service& (0+255),f,b
 13866  0031F2  D7FC               	bra	u14067
 13867  0031F4  2F71               	decfsz	(??_GPS_Service+1)& (0+255),f,b
 13868  0031F6  D7FA               	bra	u14067
 13869  0031F8  F000               	nop	
 13870  0031FA                     
 13871                           ;application.c: 530:     GPIO_Pin_Write_Logic(&selector,GPIO_LOW);
 13872  0031FA  0E41               	movlw	low _selector
 13873  0031FC  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 13874  0031FE  0E00               	movlw	high _selector
 13875  003200  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 13876  003202  0E00               	movlw	0
 13877  003204  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 13878  003206  ECE8  F01A         	call	_GPIO_Pin_Write_Logic	;wreg free
 13879  00320A                     
 13880                           ;application.c: 531:     (PIE1bits.RCIE = 1) ;
 13881  00320A  8A9D               	bsf	157,5,c	;volatile
 13882  00320C  0012               	return		;funcret
 13883  00320E                     __end_of_GPS_Service:
 13884                           	callstack 0
 13885                           
 13886 ;; *************** function _GPIO_Pin_Write_Logic *****************
 13887 ;; Defined at:
 13888 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 13889 ;; Parameters:    Size  Location     Type
 13890 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 13891 ;;		 -> selector(1), driller_PIN(1), TEST_PIN(1), ultrasonic(2), 
 13892 ;;		 -> stepper_base.dir_pin(1), stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), 
 13893 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
 13894 ;;  logic           1   31[COMRAM] enum E3185
 13895 ;; Auto vars:     Size  Location     Type
 13896 ;;  ERRORSTATUS     1   32[COMRAM] unsigned char 
 13897 ;; Return value:  Size  Location     Type
 13898 ;;                  1    wreg      unsigned char 
 13899 ;; Registers used:
 13900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13901 ;; Tracked objects:
 13902 ;;		On entry : 0/0
 13903 ;;		On exit  : 0/0
 13904 ;;		Unchanged: 0/0
 13905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13906 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;Total ram usage:       10 bytes
 13911 ;; Hardware stack levels used: 1
 13912 ;; Hardware stack levels required when called: 8
 13913 ;; This function calls:
 13914 ;;		Nothing
 13915 ;; This function is called by:
 13916 ;;		_ECU_DC_Motor_Run_Left
 13917 ;;		_ECU_DC_Motor_Run_Right
 13918 ;;		_Ecu_Stepper_Init
 13919 ;;		_stepper_move_one_deg_cw
 13920 ;;		_stepper_move_one_deg_ccw
 13921 ;;		_GPIO_Pin_Initialize
 13922 ;;		_send_trig_pulse
 13923 ;;		_GPS_Service
 13924 ;;		_lcd_4bit_send_command
 13925 ;;		_lcd_4bit_send_char_data
 13926 ;;		_lcd_8bit_send_command
 13927 ;;		_lcd_8bit_send_char_data
 13928 ;;		_lcd_4bits_send_enable_signal
 13929 ;;		_lcd_send_4bits
 13930 ;;		_lcd_8bits_send_enable_signal
 13931 ;;		_Ecu_Stepper_Step
 13932 ;;		_Ecu_Stepper_Change_Direction
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text73
 13937  0035D0                     __ptext73:
 13938                           	callstack 0
 13939  0035D0                     _GPIO_Pin_Write_Logic:
 13940                           	callstack 21
 13941  0035D0                     
 13942                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 13943  0035D0  0E01               	movlw	1
 13944  0035D2  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 13945  0035D4                     
 13946                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 13947  0035D4  501E               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
 13948  0035D6  101F               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 13949  0035D8  B4D8               	btfsc	status,2,c
 13950  0035DA  EFF1  F01A         	goto	u11131
 13951  0035DE  EFF3  F01A         	goto	u11130
 13952  0035E2                     u11131:
 13953  0035E2  EF03  F01B         	goto	l10925
 13954  0035E6                     u11130:
 13955  0035E6  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 13956  0035EA  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 13957  0035EE  50DF               	movf	223,w,c
 13958  0035F0  0B07               	andlw	7
 13959  0035F2  0100               	movlb	0	; () banked
 13960  0035F4  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 13961  0035F6  0E07               	movlw	7
 13962  0035F8  6560               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
 13963  0035FA  EF01  F01B         	goto	u11141
 13964  0035FE  EF03  F01B         	goto	u11140
 13965  003602                     u11141:
 13966  003602  EF68  F01B         	goto	l10933
 13967  003606                     u11140:
 13968  003606                     l10925:
 13969                           
 13970                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 13971  003606  0E00               	movlw	0
 13972  003608  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 13973                           
 13974                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 13975  00360A  EF7D  F01B         	goto	l10935
 13976  00360E                     l10927:
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 13980  00360E  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 13981  003612  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 13982  003616  50DF               	movf	223,w,c
 13983  003618  0B07               	andlw	7
 13984  00361A  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 13985  00361C  0E01               	movlw	1
 13986  00361E  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 13987  003620  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 13988  003622  EF15  F01B         	goto	u11154
 13989  003626                     u11155:
 13990  003626  90D8               	bcf	status,0,c
 13991  003628  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 13992  00362A                     u11154:
 13993  00362A  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 13994  00362C  EF13  F01B         	goto	u11155
 13995  003630  0100               	movlb	0	; () banked
 13996  003632  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 13997  003634  0AFF               	xorlw	255
 13998  003636  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 13999  003638  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 14000  00363C  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 14001  003640  30DF               	rrcf	223,w,c
 14002  003642  32E8               	rrcf	wreg,f,c
 14003  003644  32E8               	rrcf	wreg,f,c
 14004  003646  0B07               	andlw	7
 14005  003648  6F63               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
 14006  00364A  5163               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
 14007  00364C  0D02               	mullw	2
 14008  00364E  0EDD               	movlw	low _lat_registers
 14009  003650  24F3               	addwf	243,w,c
 14010  003652  6ED9               	movwf	fsr2l,c
 14011  003654  0E00               	movlw	high _lat_registers
 14012  003656  20F4               	addwfc	prodh,w,c
 14013  003658  6EDA               	movwf	fsr2h,c
 14014  00365A  CFDE F064          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
 14015  00365E  CFDD F065          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
 14016  003662  C064  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
 14017  003666  C065  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
 14018  00366A  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 14019  00366C  16DF               	andwf	indf2,f,c
 14020                           
 14021                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 14022  00366E  EF7D  F01B         	goto	l10935
 14023  003672                     l10929:
 14024                           
 14025                           ; BSR set to: 0
 14026                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 14027  003672  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 14028  003676  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 14029  00367A  50DF               	movf	223,w,c
 14030  00367C  0B07               	andlw	7
 14031  00367E  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 14032  003680  0E01               	movlw	1
 14033  003682  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 14034  003684  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 14035  003686  EF47  F01B         	goto	u11164
 14036  00368A                     u11165:
 14037  00368A  90D8               	bcf	status,0,c
 14038  00368C  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 14039  00368E                     u11164:
 14040  00368E  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 14041  003690  EF45  F01B         	goto	u11165
 14042  003694  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 14043  003698  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 14044  00369C  30DF               	rrcf	223,w,c
 14045  00369E  32E8               	rrcf	wreg,f,c
 14046  0036A0  32E8               	rrcf	wreg,f,c
 14047  0036A2  0B07               	andlw	7
 14048  0036A4  0100               	movlb	0	; () banked
 14049  0036A6  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 14050  0036A8  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 14051  0036AA  0D02               	mullw	2
 14052  0036AC  0EDD               	movlw	low _lat_registers
 14053  0036AE  24F3               	addwf	243,w,c
 14054  0036B0  6ED9               	movwf	fsr2l,c
 14055  0036B2  0E00               	movlw	high _lat_registers
 14056  0036B4  20F4               	addwfc	prodh,w,c
 14057  0036B6  6EDA               	movwf	fsr2h,c
 14058  0036B8  CFDE F063          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
 14059  0036BC  CFDD F064          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
 14060  0036C0  C063  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
 14061  0036C4  C064  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
 14062  0036C8  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 14063  0036CA  12DF               	iorwf	indf2,f,c
 14064                           
 14065                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 14066  0036CC  EF7D  F01B         	goto	l10935
 14067  0036D0                     l10933:
 14068                           
 14069                           ; BSR set to: 0
 14070  0036D0  5020               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
 14071  0036D2  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 14072  0036D4  6B61               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 14073                           
 14074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14075                           ; Switch size 1, requested type "simple"
 14076                           ; Number of cases is 1, Range of values is 0 to 0
 14077                           ; switch strategies available:
 14078                           ; Name         Instructions Cycles
 14079                           ; simple_byte            4     3 (average)
 14080                           ;	Chosen strategy is simple_byte
 14081  0036D6  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 14082  0036D8  0A00               	xorlw	0	; case 0
 14083  0036DA  B4D8               	btfsc	status,2,c
 14084  0036DC  EF72  F01B         	goto	l13499
 14085  0036E0  EF03  F01B         	goto	l10925
 14086  0036E4                     l13499:
 14087                           
 14088                           ; BSR set to: 0
 14089                           ; Switch size 1, requested type "simple"
 14090                           ; Number of cases is 2, Range of values is 0 to 1
 14091                           ; switch strategies available:
 14092                           ; Name         Instructions Cycles
 14093                           ; simple_byte            7     4 (average)
 14094                           ;	Chosen strategy is simple_byte
 14095  0036E4  5160               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
 14096  0036E6  0A00               	xorlw	0	; case 0
 14097  0036E8  B4D8               	btfsc	status,2,c
 14098  0036EA  EF07  F01B         	goto	l10927
 14099  0036EE  0A01               	xorlw	1	; case 1
 14100  0036F0  B4D8               	btfsc	status,2,c
 14101  0036F2  EF39  F01B         	goto	l10929
 14102  0036F6  EF03  F01B         	goto	l10925
 14103  0036FA                     l10935:
 14104                           
 14105                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 14106  0036FA  5021               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
 14107  0036FC  0012               	return		;funcret
 14108  0036FE                     __end_of_GPIO_Pin_Write_Logic:
 14109                           	callstack 0
 14110                           
 14111 ;; *************** function _EUSART_Async_Read_Data_Blocking *****************
 14112 ;; Defined at:
 14113 ;;		line 337 in file "MCAL/EUSART/mcal_EUSART.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;  _eusart_obj     2   12[BANK0 ] PTR const struct .
 14116 ;;		 -> _uart_obj(12), 
 14117 ;;  data            2   14[BANK0 ] PTR unsigned short 
 14118 ;;		 -> longtude(13), latitude(13), gpstemp(1), 
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;  ret_val         1    0        unsigned char 
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      unsigned char 
 14123 ;; Registers used:
 14124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;Total ram usage:        4 bytes
 14135 ;; Hardware stack levels used: 1
 14136 ;; Hardware stack levels required when called: 10
 14137 ;; This function calls:
 14138 ;;		_EUSART_Async_Read_Data
 14139 ;; This function is called by:
 14140 ;;		_GPS_Service
 14141 ;;		_Bluetooth_Recieve_Data_Blocking
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text74
 14146  005452                     __ptext74:
 14147                           	callstack 0
 14148  005452                     _EUSART_Async_Read_Data_Blocking:
 14149                           	callstack 19
 14150  005452                     
 14151                           ;MCAL/EUSART/mcal_EUSART.c: 341:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 14152  005452  0100               	movlb	0	; () banked
 14153  005454  516C               	movf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),w,b
 14154  005456  116D               	iorwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),w,b
 14155  005458  B4D8               	btfsc	status,2,c
 14156  00545A  EF31  F02A         	goto	u12501
 14157  00545E  EF33  F02A         	goto	u12500
 14158  005462                     u12501:
 14159  005462  EF3C  F02A         	goto	l11863
 14160  005466                     u12500:
 14161  005466                     
 14162                           ; BSR set to: 0
 14163  005466  516E               	movf	EUSART_Async_Read_Data_Blocking@data& (0+255),w,b
 14164  005468  116F               	iorwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),w,b
 14165  00546A  A4D8               	btfss	status,2,c
 14166  00546C  EF3A  F02A         	goto	u12511
 14167  005470  EF3C  F02A         	goto	u12510
 14168  005474                     u12511:
 14169  005474  EF3E  F02A         	goto	l753
 14170  005478                     u12510:
 14171  005478                     l11863:
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;MCAL/EUSART/mcal_EUSART.c: 344:     }
 14175  005478  EF4F  F02A         	goto	l11867
 14176  00547C                     l753:
 14177  00547C  AA9E               	btfss	158,5,c	;volatile
 14178  00547E  EF43  F02A         	goto	u12521
 14179  005482  EF45  F02A         	goto	u12520
 14180  005486                     u12521:
 14181  005486  EF3E  F02A         	goto	l753
 14182  00548A                     u12520:
 14183  00548A                     
 14184                           ;MCAL/EUSART/mcal_EUSART.c: 348:         EUSART_Async_Read_Data(_eusart_obj , data);
 14185  00548A  C06C  F060         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj,EUSART_Async_Read_Data@_eusart_obj
 14186  00548E  C06D  F061         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj+1,EUSART_Async_Read_Data@_eusart_obj+
      +                          1
 14187  005492  C06E  F062         	movff	EUSART_Async_Read_Data_Blocking@data,EUSART_Async_Read_Data@data
 14188  005496  C06F  F063         	movff	EUSART_Async_Read_Data_Blocking@data+1,EUSART_Async_Read_Data@data+1
 14189  00549A  ECFB  F012         	call	_EUSART_Async_Read_Data	;wreg free
 14190  00549E                     l11867:
 14191                           
 14192                           ;MCAL/EUSART/mcal_EUSART.c: 351:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 14193  00549E  B2AB               	btfsc	171,1,c	;volatile
 14194  0054A0  EF54  F02A         	goto	u12531
 14195  0054A4  EF56  F02A         	goto	u12530
 14196  0054A8                     u12531:
 14197  0054A8  EF5D  F02A         	goto	l758
 14198  0054AC                     u12530:
 14199  0054AC  A4AB               	btfss	171,2,c	;volatile
 14200  0054AE  EF5B  F02A         	goto	u12541
 14201  0054B2  EF5D  F02A         	goto	u12540
 14202  0054B6                     u12541:
 14203  0054B6  EF5F  F02A         	goto	l759
 14204  0054BA                     u12540:
 14205  0054BA                     l758:
 14206                           
 14207                           ;MCAL/EUSART/mcal_EUSART.c: 352:     {;MCAL/EUSART/mcal_EUSART.c: 354:         RCSTA1bit
      +                          s.CREN=0;
 14208  0054BA  98AB               	bcf	171,4,c	;volatile
 14209                           
 14210                           ;MCAL/EUSART/mcal_EUSART.c: 355:         RCSTA1bits.CREN=1;
 14211  0054BC  88AB               	bsf	171,4,c	;volatile
 14212  0054BE                     l759:
 14213  0054BE  0012               	return		;funcret
 14214  0054C0                     __end_of_EUSART_Async_Read_Data_Blocking:
 14215                           	callstack 0
 14216                           
 14217 ;; *************** function _EUSART_Async_Read_Data *****************
 14218 ;; Defined at:
 14219 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  _eusart_obj     2    0[BANK0 ] PTR const struct .
 14222 ;;		 -> _uart_obj(12), 
 14223 ;;  data            2    2[BANK0 ] PTR unsigned short 
 14224 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(2), 
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;  l_temp_data     2   10[BANK0 ] unsigned short 
 14227 ;;  ret_val         1    0        unsigned char 
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      unsigned char 
 14230 ;; Registers used:
 14231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14240 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14241 ;;Total ram usage:       14 bytes
 14242 ;; Hardware stack levels used: 1
 14243 ;; Hardware stack levels required when called: 9
 14244 ;; This function calls:
 14245 ;;		_calc_parity_even
 14246 ;;		_calc_parity_odd
 14247 ;; This function is called by:
 14248 ;;		_EUSART_Async_Read_Data_Blocking
 14249 ;;		_Bluetooth_Recieve_Data_Non_Blocking
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text75
 14254  0025F6                     __ptext75:
 14255                           	callstack 0
 14256  0025F6                     _EUSART_Async_Read_Data:
 14257                           	callstack 19
 14258  0025F6                     
 14259                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 14260  0025F6  0E00               	movlw	0
 14261  0025F8  0100               	movlb	0	; () banked
 14262  0025FA  6F6B               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 14263  0025FC  0E00               	movlw	0
 14264  0025FE  6F6A               	movwf	EUSART_Async_Read_Data@l_temp_data& (0+255),b
 14265  002600                     
 14266                           ; BSR set to: 0
 14267                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 14268  002600  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 14269  002602  1161               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 14270  002604  B4D8               	btfsc	status,2,c
 14271  002606  EF07  F013         	goto	u11881
 14272  00260A  EF09  F013         	goto	u11880
 14273  00260E                     u11881:
 14274  00260E  EF12  F013         	goto	l11493
 14275  002612                     u11880:
 14276  002612                     
 14277                           ; BSR set to: 0
 14278  002612  5162               	movf	EUSART_Async_Read_Data@data& (0+255),w,b
 14279  002614  1163               	iorwf	(EUSART_Async_Read_Data@data+1)& (0+255),w,b
 14280  002616  A4D8               	btfss	status,2,c
 14281  002618  EF10  F013         	goto	u11891
 14282  00261C  EF12  F013         	goto	u11890
 14283  002620                     u11891:
 14284  002620  EF14  F013         	goto	l693
 14285  002624                     u11890:
 14286  002624                     l11493:
 14287                           
 14288                           ; BSR set to: 0
 14289                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 14290  002624  EFF2  F013         	goto	l11543
 14291  002628                     l693:
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 14295  002628  AA9E               	btfss	158,5,c	;volatile
 14296  00262A  EF19  F013         	goto	u11901
 14297  00262E  EF1B  F013         	goto	u11900
 14298  002632                     u11901:
 14299  002632  EF12  F013         	goto	l11493
 14300  002636                     u11900:
 14301  002636                     
 14302                           ; BSR set to: 0
 14303                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 14304  002636  EE20 F009          	lfsr	2,9
 14305  00263A  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 14306  00263C  26D9               	addwf	fsr2l,f,c
 14307  00263E  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 14308  002640  22DA               	addwfc	fsr2h,f,c
 14309  002642  B8DF               	btfsc	indf2,4,c
 14310  002644  EF26  F013         	goto	u11911
 14311  002648  EF28  F013         	goto	u11910
 14312  00264C                     u11911:
 14313  00264C  EF35  F013         	goto	l11499
 14314  002650                     u11910:
 14315  002650                     
 14316                           ; BSR set to: 0
 14317                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 14318  002650  50AE               	movf	174,w,c	;volatile
 14319  002652  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 14320  002654  6A24               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
 14321  002656  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 14322  00265A  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 14323  00265E  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 14324  002662  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 14325                           
 14326                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 14327  002666  EFF2  F013         	goto	l11543
 14328  00266A                     l11499:
 14329                           
 14330                           ; BSR set to: 0
 14331  00266A  EE20 F009          	lfsr	2,9
 14332  00266E  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 14333  002670  26D9               	addwf	fsr2l,f,c
 14334  002672  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 14335  002674  22DA               	addwfc	fsr2h,f,c
 14336  002676  A8DF               	btfss	indf2,4,c
 14337  002678  EF40  F013         	goto	u11921
 14338  00267C  EF42  F013         	goto	u11920
 14339  002680                     u11921:
 14340  002680  EFF2  F013         	goto	l706
 14341  002684                     u11920:
 14342  002684                     
 14343                           ; BSR set to: 0
 14344                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 14345  002684  EE20 F009          	lfsr	2,9
 14346  002688  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 14347  00268A  26D9               	addwf	fsr2l,f,c
 14348  00268C  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 14349  00268E  22DA               	addwfc	fsr2h,f,c
 14350  002690  30DF               	rrcf	223,w,c
 14351  002692  0B03               	andlw	3
 14352  002694  0900               	iorlw	0
 14353  002696  A4D8               	btfss	status,2,c
 14354  002698  EF50  F013         	goto	u11931
 14355  00269C  EF52  F013         	goto	u11930
 14356  0026A0                     u11931:
 14357  0026A0  EF74  F013         	goto	l11513
 14358  0026A4                     u11930:
 14359  0026A4                     
 14360                           ; BSR set to: 0
 14361                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 14362  0026A4  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 14363  0026A8  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 14364                           
 14365                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 14366  0026AA  B0AB               	btfsc	4011,0,c	;volatile
 14367  0026AC  EF5A  F013         	goto	u11941
 14368  0026B0  EF5C  F013         	goto	u11940
 14369  0026B4                     u11941:
 14370  0026B4  EF62  F013         	goto	l11507
 14371  0026B8                     u11940:
 14372  0026B8                     
 14373                           ; BSR set to: 0
 14374  0026B8  0E00               	movlw	0
 14375  0026BA  6F65               	movwf	(_EUSART_Async_Read_Data$2030+1)& (0+255),b
 14376  0026BC  0E00               	movlw	0
 14377  0026BE  6F64               	movwf	_EUSART_Async_Read_Data$2030& (0+255),b
 14378  0026C0  EF66  F013         	goto	l11509
 14379  0026C4                     l11507:
 14380                           
 14381                           ; BSR set to: 0
 14382  0026C4  0E01               	movlw	1
 14383  0026C6  6F65               	movwf	(_EUSART_Async_Read_Data$2030+1)& (0+255),b
 14384  0026C8  0E00               	movlw	0
 14385  0026CA  6F64               	movwf	_EUSART_Async_Read_Data$2030& (0+255),b
 14386  0026CC                     l11509:
 14387                           
 14388                           ; BSR set to: 0
 14389  0026CC  5164               	movf	_EUSART_Async_Read_Data$2030& (0+255),w,b
 14390  0026CE  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 14391  0026D0  5165               	movf	(_EUSART_Async_Read_Data$2030+1)& (0+255),w,b
 14392  0026D2  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 14393  0026D4                     
 14394                           ; BSR set to: 0
 14395                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 14396  0026D4  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 14397  0026D8  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 14398  0026DC  C06A  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
 14399  0026E0  C06B  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
 14400                           
 14401                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 14402  0026E4  EFF2  F013         	goto	l11543
 14403  0026E8                     l11513:
 14404                           
 14405                           ; BSR set to: 0
 14406  0026E8  EE20 F009          	lfsr	2,9
 14407  0026EC  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 14408  0026EE  26D9               	addwf	fsr2l,f,c
 14409  0026F0  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 14410  0026F2  22DA               	addwfc	fsr2h,f,c
 14411  0026F4  30DF               	rrcf	223,w,c
 14412  0026F6  0B03               	andlw	3
 14413  0026F8  06E8               	decf	wreg,f,c
 14414  0026FA  A4D8               	btfss	status,2,c
 14415  0026FC  EF82  F013         	goto	u11951
 14416  002700  EF84  F013         	goto	u11950
 14417  002704                     u11951:
 14418  002704  EFBA  F013         	goto	l11527
 14419  002708                     u11950:
 14420  002708                     
 14421                           ; BSR set to: 0
 14422                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 14423  002708  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 14424  00270C  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 14425                           
 14426                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 14427  00270E  B0AB               	btfsc	171,0,c	;volatile
 14428  002710  EF8C  F013         	goto	u11961
 14429  002714  EF8E  F013         	goto	u11960
 14430  002718                     u11961:
 14431  002718  EF94  F013         	goto	l11519
 14432  00271C                     u11960:
 14433  00271C                     
 14434                           ; BSR set to: 0
 14435  00271C  0E00               	movlw	0
 14436  00271E  6F67               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 14437  002720  0E00               	movlw	0
 14438  002722  6F66               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 14439  002724  EF98  F013         	goto	l11521
 14440  002728                     l11519:
 14441                           
 14442                           ; BSR set to: 0
 14443  002728  0E01               	movlw	1
 14444  00272A  6F67               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 14445  00272C  0E00               	movlw	0
 14446  00272E  6F66               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 14447  002730                     l11521:
 14448                           
 14449                           ; BSR set to: 0
 14450  002730  5166               	movf	_EUSART_Async_Read_Data$2031& (0+255),w,b
 14451  002732  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 14452  002734  5167               	movf	(_EUSART_Async_Read_Data$2031+1)& (0+255),w,b
 14453  002736  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 14454  002738                     
 14455                           ; BSR set to: 0
 14456                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 14457  002738  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 14458  00273A  ECC8  F02A         	call	_calc_parity_even
 14459  00273E  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 14460  002740  0100               	movlb	0	; () banked
 14461  002742  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 14462  002744  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 14463  002746  A4D8               	btfss	status,2,c
 14464  002748  EFA8  F013         	goto	u11971
 14465  00274C  EFAA  F013         	goto	u11970
 14466  002750                     u11971:
 14467  002750  EFF2  F013         	goto	l706
 14468  002754                     u11970:
 14469  002754                     l11525:
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 14473  002754  0EFF               	movlw	255
 14474  002756  156A               	andwf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 14475  002758  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 14476  00275A  0E00               	movlw	0
 14477  00275C  156B               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 14478  00275E  6E24               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
 14479  002760  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 14480  002764  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 14481  002768  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 14482  00276C  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 14483                           
 14484                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 14485  002770  EFF2  F013         	goto	l11543
 14486  002774                     l11527:
 14487                           
 14488                           ; BSR set to: 0
 14489  002774  EE20 F009          	lfsr	2,9
 14490  002778  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 14491  00277A  26D9               	addwf	fsr2l,f,c
 14492  00277C  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 14493  00277E  22DA               	addwfc	fsr2h,f,c
 14494  002780  30DF               	rrcf	223,w,c
 14495  002782  0B03               	andlw	3
 14496  002784  0A02               	xorlw	2
 14497  002786  A4D8               	btfss	status,2,c
 14498  002788  EFC8  F013         	goto	u11981
 14499  00278C  EFCA  F013         	goto	u11980
 14500  002790                     u11981:
 14501  002790  EFF2  F013         	goto	l706
 14502  002794                     u11980:
 14503  002794                     
 14504                           ; BSR set to: 0
 14505                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 14506  002794  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 14507  002798  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 14508                           
 14509                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 14510  00279A  B0AB               	btfsc	171,0,c	;volatile
 14511  00279C  EFD2  F013         	goto	u11991
 14512  0027A0  EFD4  F013         	goto	u11990
 14513  0027A4                     u11991:
 14514  0027A4  EFDA  F013         	goto	l11533
 14515  0027A8                     u11990:
 14516  0027A8                     
 14517                           ; BSR set to: 0
 14518  0027A8  0E00               	movlw	0
 14519  0027AA  6F69               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 14520  0027AC  0E00               	movlw	0
 14521  0027AE  6F68               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 14522  0027B0  EFDE  F013         	goto	l11535
 14523  0027B4                     l11533:
 14524                           
 14525                           ; BSR set to: 0
 14526  0027B4  0E01               	movlw	1
 14527  0027B6  6F69               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 14528  0027B8  0E00               	movlw	0
 14529  0027BA  6F68               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 14530  0027BC                     l11535:
 14531                           
 14532                           ; BSR set to: 0
 14533  0027BC  5168               	movf	_EUSART_Async_Read_Data$2032& (0+255),w,b
 14534  0027BE  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 14535  0027C0  5169               	movf	(_EUSART_Async_Read_Data$2032+1)& (0+255),w,b
 14536  0027C2  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 14537  0027C4                     
 14538                           ; BSR set to: 0
 14539                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 14540  0027C4  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 14541  0027C6  EC94  F02A         	call	_calc_parity_odd
 14542  0027CA  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 14543  0027CC  0100               	movlb	0	; () banked
 14544  0027CE  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 14545  0027D0  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 14546  0027D2  A4D8               	btfss	status,2,c
 14547  0027D4  EFEE  F013         	goto	u12001
 14548  0027D8  EFF0  F013         	goto	u12000
 14549  0027DC                     u12001:
 14550  0027DC  EFF2  F013         	goto	l706
 14551  0027E0                     u12000:
 14552  0027E0  EFAA  F013         	goto	l11525
 14553  0027E4                     l706:
 14554  0027E4                     l11543:
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 14558  0027E4  B2AB               	btfsc	171,1,c	;volatile
 14559  0027E6  EFF7  F013         	goto	u12011
 14560  0027EA  EFF9  F013         	goto	u12010
 14561  0027EE                     u12011:
 14562  0027EE  EF00  F014         	goto	l727
 14563  0027F2                     u12010:
 14564  0027F2                     
 14565                           ; BSR set to: 0
 14566  0027F2  A4AB               	btfss	171,2,c	;volatile
 14567  0027F4  EFFE  F013         	goto	u12021
 14568  0027F8  EF00  F014         	goto	u12020
 14569  0027FC                     u12021:
 14570  0027FC  EF02  F014         	goto	l728
 14571  002800                     u12020:
 14572  002800                     l727:
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 14576  002800  98AB               	bcf	171,4,c	;volatile
 14577                           
 14578                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 14579  002802  88AB               	bsf	171,4,c	;volatile
 14580  002804                     l728:
 14581                           
 14582                           ; BSR set to: 0
 14583  002804  0012               	return		;funcret
 14584  002806                     __end_of_EUSART_Async_Read_Data:
 14585                           	callstack 0
 14586                           
 14587 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
 14588 ;; Defined at:
 14589 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 14592 ;;		 -> driller_PIN(1), TEST_PIN(1), 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;  ERRORSTATUS     1    0        unsigned char 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  1    wreg      unsigned char 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14606 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14607 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14608 ;;Total ram usage:        7 bytes
 14609 ;; Hardware stack levels used: 1
 14610 ;; Hardware stack levels required when called: 8
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_main
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618                           	psect	text76
 14619  005304                     __ptext76:
 14620                           	callstack 0
 14621  005304                     _GPIO_Pin_Toggle_Logic:
 14622                           	callstack 22
 14623  005304                     
 14624                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 14625  005304  501E               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 14626  005306  101F               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 14627  005308  A4D8               	btfss	status,2,c
 14628  00530A  EF89  F029         	goto	u13111
 14629  00530E  EF8B  F029         	goto	u13110
 14630  005312                     u13111:
 14631  005312  EF8D  F029         	goto	l12321
 14632  005316                     u13110:
 14633  005316                     
 14634                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 14635  005316  EFB9  F029         	goto	l921
 14636  00531A                     l12321:
 14637                           
 14638                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 14639  00531A  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 14640  00531E  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 14641  005322  50DF               	movf	223,w,c
 14642  005324  0B07               	andlw	7
 14643  005326  6E20               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
 14644  005328  0E01               	movlw	1
 14645  00532A  6E21               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
 14646  00532C  2A20               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
 14647  00532E  EF9B  F029         	goto	u13124
 14648  005332                     u13125:
 14649  005332  90D8               	bcf	status,0,c
 14650  005334  3621               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
 14651  005336                     u13124:
 14652  005336  2E20               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
 14653  005338  EF99  F029         	goto	u13125
 14654  00533C  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 14655  005340  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 14656  005344  30DF               	rrcf	223,w,c
 14657  005346  32E8               	rrcf	wreg,f,c
 14658  005348  32E8               	rrcf	wreg,f,c
 14659  00534A  0B07               	andlw	7
 14660  00534C  6E22               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
 14661  00534E  5022               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
 14662  005350  0D02               	mullw	2
 14663  005352  0EDD               	movlw	low _lat_registers
 14664  005354  24F3               	addwf	243,w,c
 14665  005356  6ED9               	movwf	fsr2l,c
 14666  005358  0E00               	movlw	high _lat_registers
 14667  00535A  20F4               	addwfc	prodh,w,c
 14668  00535C  6EDA               	movwf	fsr2h,c
 14669  00535E  CFDE F023          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
 14670  005362  CFDD F024          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
 14671  005366  C023  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
 14672  00536A  C024  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
 14673  00536E  5021               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
 14674  005370  1ADF               	xorwf	indf2,f,c
 14675  005372                     l921:
 14676  005372  0012               	return		;funcret
 14677  005374                     __end_of_GPIO_Pin_Toggle_Logic:
 14678                           	callstack 0
 14679                           
 14680 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
 14681 ;; Defined at:
 14682 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  _uart_obj       2   20[BANK1 ] PTR const struct .
 14685 ;;		 -> _uart_obj(12), 
 14686 ;;  data            1   22[BANK1 ] unsigned char 
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;  ret_val         1    0        unsigned char 
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  1    wreg      unsigned char 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/0
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14698 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14702 ;;Total ram usage:        3 bytes
 14703 ;; Hardware stack levels used: 1
 14704 ;; Hardware stack levels required when called: 10
 14705 ;; This function calls:
 14706 ;;		_EUSART_Async_Transmit_Data
 14707 ;; This function is called by:
 14708 ;;		_main
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text77
 14713  005A9E                     __ptext77:
 14714                           	callstack 0
 14715  005A9E                     _Bluetooth_Send_Data_Non_Blocking:
 14716                           	callstack 20
 14717  005A9E                     
 14718                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 14719  005A9E  0101               	movlb	1	; () banked
 14720  005AA0  517A               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj& (0+255),w,b
 14721  005AA2  117B               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)& (0+255),w,b
 14722  005AA4  A4D8               	btfss	status,2,c
 14723  005AA6  EF57  F02D         	goto	u12971
 14724  005AAA  EF59  F02D         	goto	u12970
 14725  005AAE                     u12971:
 14726  005AAE  EF5B  F02D         	goto	l12193
 14727  005AB2                     u12970:
 14728  005AB2                     
 14729                           ; BSR set to: 1
 14730                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 14731  005AB2  EF65  F02D         	goto	l32
 14732  005AB6                     l12193:
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 14736  005AB6  C17A  F060         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
 14737  005ABA  C17B  F061         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
 14738  005ABE  C17C  F062         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
 14739  005AC2  0100               	movlb	0	; () banked
 14740  005AC4  6B63               	clrf	(EUSART_Async_Transmit_Data@data+1)& (0+255),b
 14741  005AC6  EC88  F01D         	call	_EUSART_Async_Transmit_Data	;wreg free
 14742  005ACA                     l32:
 14743  005ACA  0012               	return		;funcret
 14744  005ACC                     __end_of_Bluetooth_Send_Data_Non_Blocking:
 14745                           	callstack 0
 14746                           
 14747 ;; *************** function _EUSART_Async_Transmit_Data *****************
 14748 ;; Defined at:
 14749 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;  _eusart_obj     2    0[BANK0 ] PTR const struct .
 14752 ;;		 -> _uart_obj(12), 
 14753 ;;  data            2    2[BANK0 ] unsigned short 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;  ret_val         1    0        unsigned char 
 14756 ;; Return value:  Size  Location     Type
 14757 ;;                  1    wreg      unsigned char 
 14758 ;; Registers used:
 14759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14760 ;; Tracked objects:
 14761 ;;		On entry : 0/0
 14762 ;;		On exit  : 0/0
 14763 ;;		Unchanged: 0/0
 14764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14769 ;;Total ram usage:        6 bytes
 14770 ;; Hardware stack levels used: 1
 14771 ;; Hardware stack levels required when called: 9
 14772 ;; This function calls:
 14773 ;;		_calc_parity_even
 14774 ;;		_calc_parity_odd
 14775 ;; This function is called by:
 14776 ;;		_Bluetooth_Send_Data_Non_Blocking
 14777 ;;		_EUSART_Async_Transmit_Data_Blocking
 14778 ;; This function uses a non-reentrant model
 14779 ;;
 14780                           
 14781                           	psect	text78
 14782  003B10                     __ptext78:
 14783                           	callstack 0
 14784  003B10                     _EUSART_Async_Transmit_Data:
 14785                           	callstack 20
 14786  003B10                     
 14787                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 14788  003B10  0100               	movlb	0	; () banked
 14789  003B12  5160               	movf	EUSART_Async_Transmit_Data@_eusart_obj& (0+255),w,b
 14790  003B14  1161               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)& (0+255),w,b
 14791  003B16  A4D8               	btfss	status,2,c
 14792  003B18  EF90  F01D         	goto	u12551
 14793  003B1C  EF92  F01D         	goto	u12550
 14794  003B20                     u12551:
 14795  003B20  EF94  F01D         	goto	l11877
 14796  003B24                     u12550:
 14797  003B24                     
 14798                           ; BSR set to: 0
 14799                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 14800  003B24  EFFA  F01D         	goto	l690
 14801  003B28                     l11877:
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 14805  003B28  EE20 F002          	lfsr	2,2
 14806  003B2C  5160               	movf	EUSART_Async_Transmit_Data@_eusart_obj& (0+255),w,b
 14807  003B2E  26D9               	addwf	fsr2l,f,c
 14808  003B30  5161               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)& (0+255),w,b
 14809  003B32  22DA               	addwfc	fsr2h,f,c
 14810  003B34  A6DF               	btfss	indf2,3,c
 14811  003B36  EF9F  F01D         	goto	u12561
 14812  003B3A  EFA1  F01D         	goto	u12560
 14813  003B3E                     u12561:
 14814  003B3E  EFF8  F01D         	goto	l11891
 14815  003B42                     u12560:
 14816  003B42                     
 14817                           ; BSR set to: 0
 14818                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 14819  003B42  EE20 F002          	lfsr	2,2
 14820  003B46  5160               	movf	EUSART_Async_Transmit_Data@_eusart_obj& (0+255),w,b
 14821  003B48  26D9               	addwf	fsr2l,f,c
 14822  003B4A  5161               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)& (0+255),w,b
 14823  003B4C  22DA               	addwfc	fsr2h,f,c
 14824  003B4E  50DF               	movf	223,w,c
 14825  003B50  0B03               	andlw	3
 14826  003B52  0900               	iorlw	0
 14827  003B54  A4D8               	btfss	status,2,c
 14828  003B56  EFAF  F01D         	goto	u12571
 14829  003B5A  EFB1  F01D         	goto	u12570
 14830  003B5E                     u12571:
 14831  003B5E  EFC0  F01D         	goto	l11883
 14832  003B62                     u12570:
 14833  003B62                     
 14834                           ; BSR set to: 0
 14835                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 14836  003B62  C062  F023         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
 14837  003B66  C063  F024         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
 14838  003B6A  C024  F023         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
 14839  003B6E  6A24               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
 14840  003B70  3023               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14841  003B72  A0D8               	btfss	status,0,c
 14842  003B74  D002               	bra	u12585
 14843  003B76  80AC               	bsf	172,0,c	;volatile
 14844  003B78  D001               	bra	u12587
 14845  003B7A                     u12585:
 14846  003B7A  90AC               	bcf	172,0,c	;volatile
 14847  003B7C                     u12587:
 14848                           
 14849                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 14850  003B7C  EFF8  F01D         	goto	l11891
 14851  003B80                     l11883:
 14852                           
 14853                           ; BSR set to: 0
 14854  003B80  EE20 F002          	lfsr	2,2
 14855  003B84  5160               	movf	EUSART_Async_Transmit_Data@_eusart_obj& (0+255),w,b
 14856  003B86  26D9               	addwf	fsr2l,f,c
 14857  003B88  5161               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)& (0+255),w,b
 14858  003B8A  22DA               	addwfc	fsr2h,f,c
 14859  003B8C  50DF               	movf	223,w,c
 14860  003B8E  0B03               	andlw	3
 14861  003B90  06E8               	decf	wreg,f,c
 14862  003B92  A4D8               	btfss	status,2,c
 14863  003B94  EFCE  F01D         	goto	u12591
 14864  003B98  EFD0  F01D         	goto	u12590
 14865  003B9C                     u12591:
 14866  003B9C  EFDC  F01D         	goto	l11887
 14867  003BA0                     u12590:
 14868  003BA0                     
 14869                           ; BSR set to: 0
 14870                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 14871  003BA0  5162               	movf	EUSART_Async_Transmit_Data@data& (0+255),w,b
 14872  003BA2  ECC8  F02A         	call	_calc_parity_even
 14873  003BA6  6E23               	movwf	??_EUSART_Async_Transmit_Data^0,c
 14874  003BA8  3023               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14875  003BAA  A0D8               	btfss	status,0,c
 14876  003BAC  D002               	bra	u12605
 14877  003BAE  80AC               	bsf	172,0,c	;volatile
 14878  003BB0  D001               	bra	u12607
 14879  003BB2                     u12605:
 14880  003BB2  90AC               	bcf	172,0,c	;volatile
 14881  003BB4                     u12607:
 14882                           
 14883                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 14884  003BB4  EFF8  F01D         	goto	l11891
 14885  003BB8                     l11887:
 14886                           
 14887                           ; BSR set to: 0
 14888  003BB8  EE20 F002          	lfsr	2,2
 14889  003BBC  5160               	movf	EUSART_Async_Transmit_Data@_eusart_obj& (0+255),w,b
 14890  003BBE  26D9               	addwf	fsr2l,f,c
 14891  003BC0  5161               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)& (0+255),w,b
 14892  003BC2  22DA               	addwfc	fsr2h,f,c
 14893  003BC4  50DF               	movf	223,w,c
 14894  003BC6  0B03               	andlw	3
 14895  003BC8  0A02               	xorlw	2
 14896  003BCA  A4D8               	btfss	status,2,c
 14897  003BCC  EFEA  F01D         	goto	u12611
 14898  003BD0  EFEC  F01D         	goto	u12610
 14899  003BD4                     u12611:
 14900  003BD4  EFF8  F01D         	goto	l686
 14901  003BD8                     u12610:
 14902  003BD8                     
 14903                           ; BSR set to: 0
 14904                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 14905  003BD8  5162               	movf	EUSART_Async_Transmit_Data@data& (0+255),w,b
 14906  003BDA  EC94  F02A         	call	_calc_parity_odd
 14907  003BDE  6E23               	movwf	??_EUSART_Async_Transmit_Data^0,c
 14908  003BE0  3023               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14909  003BE2  A0D8               	btfss	status,0,c
 14910  003BE4  D002               	bra	u12625
 14911  003BE6  80AC               	bsf	172,0,c	;volatile
 14912  003BE8  D001               	bra	u12627
 14913  003BEA                     u12625:
 14914  003BEA  90AC               	bcf	172,0,c	;volatile
 14915  003BEC                     u12627:
 14916  003BEC  EFF8  F01D         	goto	l11891
 14917  003BF0                     l686:
 14918  003BF0                     l11891:
 14919                           
 14920                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 14921  003BF0  C062  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
 14922  003BF4                     l690:
 14923  003BF4  0012               	return		;funcret
 14924  003BF6                     __end_of_EUSART_Async_Transmit_Data:
 14925                           	callstack 0
 14926                           
 14927 ;; *************** function _calc_parity_odd *****************
 14928 ;; Defined at:
 14929 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;  data            1    wreg     unsigned char 
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;  data            1   31[COMRAM] unsigned char 
 14934 ;;  l_counter       1   33[COMRAM] unsigned char 
 14935 ;;  number_of_on    1   32[COMRAM] unsigned char 
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1    wreg      unsigned char 
 14938 ;; Registers used:
 14939 ;;		wreg, status,2, status,0
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;Total ram usage:        5 bytes
 14950 ;; Hardware stack levels used: 1
 14951 ;; Hardware stack levels required when called: 8
 14952 ;; This function calls:
 14953 ;;		Nothing
 14954 ;; This function is called by:
 14955 ;;		_EUSART_Async_Transmit_Data
 14956 ;;		_EUSART_Async_Read_Data
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text79
 14961  005528                     __ptext79:
 14962                           	callstack 0
 14963  005528                     _calc_parity_odd:
 14964                           	callstack 19
 14965                           
 14966                           ;incstack = 0
 14967                           ;calc_parity_odd@data stored from wreg
 14968  005528  6E20               	movwf	calc_parity_odd@data^0,c
 14969  00552A                     
 14970                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 14971  00552A  0E00               	movlw	0
 14972  00552C  6E21               	movwf	calc_parity_odd@number_of_ones^0,c
 14973                           
 14974                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 14975  00552E  0E00               	movlw	0
 14976  005530  6E22               	movwf	calc_parity_odd@l_counter^0,c
 14977                           
 14978                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 14979  005532  0E00               	movlw	0
 14980  005534  6E22               	movwf	calc_parity_odd@l_counter^0,c
 14981  005536                     l11301:
 14982                           
 14983                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 14984  005536  C022  F01E         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
 14985  00553A  0E01               	movlw	1
 14986  00553C  6E1F               	movwf	(??_calc_parity_odd+1)^0,c
 14987  00553E  2A1E               	incf	??_calc_parity_odd^0,f,c
 14988  005540  EFA4  F02A         	goto	u11614
 14989  005544                     u11615:
 14990  005544  90D8               	bcf	status,0,c
 14991  005546  361F               	rlcf	(??_calc_parity_odd+1)^0,f,c
 14992  005548                     u11614:
 14993  005548  2E1E               	decfsz	??_calc_parity_odd^0,f,c
 14994  00554A  EFA2  F02A         	goto	u11615
 14995  00554E  501F               	movf	(??_calc_parity_odd+1)^0,w,c
 14996  005550  1420               	andwf	calc_parity_odd@data^0,w,c
 14997  005552  0900               	iorlw	0
 14998  005554  B4D8               	btfsc	status,2,c
 14999  005556  EFAF  F02A         	goto	u11621
 15000  00555A  EFB1  F02A         	goto	u11620
 15001  00555E                     u11621:
 15002  00555E  EFB2  F02A         	goto	l826
 15003  005562                     u11620:
 15004  005562                     
 15005                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 15006  005562  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 15007  005564                     l826:
 15008                           
 15009                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 15010  005564  2A22               	incf	calc_parity_odd@l_counter^0,f,c
 15011  005566  0E07               	movlw	7
 15012  005568  6422               	cpfsgt	calc_parity_odd@l_counter^0,c
 15013  00556A  EFB9  F02A         	goto	u11631
 15014  00556E  EFBB  F02A         	goto	u11630
 15015  005572                     u11631:
 15016  005572  EF9B  F02A         	goto	l11301
 15017  005576                     u11630:
 15018  005576                     
 15019                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 15020  005576  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 15021  005578                     
 15022                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 15023  005578  B021               	btfsc	calc_parity_odd@number_of_ones^0,0,c
 15024  00557A  EFC1  F02A         	goto	u11641
 15025  00557E  EFC3  F02A         	goto	u11640
 15026  005582                     u11641:
 15027  005582  EFC6  F02A         	goto	l11315
 15028  005586                     u11640:
 15029  005586                     
 15030                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 15031  005586  0E01               	movlw	1
 15032  005588  EFC7  F02A         	goto	l828
 15033  00558C                     l11315:
 15034                           
 15035                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 15036  00558C  0E00               	movlw	0
 15037  00558E                     l828:
 15038  00558E  0012               	return		;funcret
 15039  005590                     __end_of_calc_parity_odd:
 15040                           	callstack 0
 15041                           
 15042 ;; *************** function _calc_parity_even *****************
 15043 ;; Defined at:
 15044 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;  data            1    wreg     unsigned char 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;  data            1   31[COMRAM] unsigned char 
 15049 ;;  l_counter       1   33[COMRAM] unsigned char 
 15050 ;;  number_of_on    1   32[COMRAM] unsigned char 
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1    wreg      unsigned char 
 15053 ;; Registers used:
 15054 ;;		wreg, status,2, status,0
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15063 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15064 ;;Total ram usage:        5 bytes
 15065 ;; Hardware stack levels used: 1
 15066 ;; Hardware stack levels required when called: 8
 15067 ;; This function calls:
 15068 ;;		Nothing
 15069 ;; This function is called by:
 15070 ;;		_EUSART_Async_Transmit_Data
 15071 ;;		_EUSART_Async_Read_Data
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text80
 15076  005590                     __ptext80:
 15077                           	callstack 0
 15078  005590                     _calc_parity_even:
 15079                           	callstack 19
 15080                           
 15081                           ;incstack = 0
 15082                           ;calc_parity_even@data stored from wreg
 15083  005590  6E20               	movwf	calc_parity_even@data^0,c
 15084  005592                     
 15085                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 15086  005592  0E00               	movlw	0
 15087  005594  6E21               	movwf	calc_parity_even@number_of_ones^0,c
 15088                           
 15089                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 15090  005596  0E00               	movlw	0
 15091  005598  6E22               	movwf	calc_parity_even@l_counter^0,c
 15092                           
 15093                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 15094  00559A  0E00               	movlw	0
 15095  00559C  6E22               	movwf	calc_parity_even@l_counter^0,c
 15096  00559E                     l11277:
 15097                           
 15098                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 15099  00559E  C022  F01E         	movff	calc_parity_even@l_counter,??_calc_parity_even
 15100  0055A2  0E01               	movlw	1
 15101  0055A4  6E1F               	movwf	(??_calc_parity_even+1)^0,c
 15102  0055A6  2A1E               	incf	??_calc_parity_even^0,f,c
 15103  0055A8  EFD8  F02A         	goto	u11574
 15104  0055AC                     u11575:
 15105  0055AC  90D8               	bcf	status,0,c
 15106  0055AE  361F               	rlcf	(??_calc_parity_even+1)^0,f,c
 15107  0055B0                     u11574:
 15108  0055B0  2E1E               	decfsz	??_calc_parity_even^0,f,c
 15109  0055B2  EFD6  F02A         	goto	u11575
 15110  0055B6  501F               	movf	(??_calc_parity_even+1)^0,w,c
 15111  0055B8  1420               	andwf	calc_parity_even@data^0,w,c
 15112  0055BA  0900               	iorlw	0
 15113  0055BC  B4D8               	btfsc	status,2,c
 15114  0055BE  EFE3  F02A         	goto	u11581
 15115  0055C2  EFE5  F02A         	goto	u11580
 15116  0055C6                     u11581:
 15117  0055C6  EFE6  F02A         	goto	l833
 15118  0055CA                     u11580:
 15119  0055CA                     
 15120                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 15121  0055CA  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 15122  0055CC                     l833:
 15123                           
 15124                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 15125  0055CC  2A22               	incf	calc_parity_even@l_counter^0,f,c
 15126  0055CE  0E07               	movlw	7
 15127  0055D0  6422               	cpfsgt	calc_parity_even@l_counter^0,c
 15128  0055D2  EFED  F02A         	goto	u11591
 15129  0055D6  EFEF  F02A         	goto	u11590
 15130  0055DA                     u11591:
 15131  0055DA  EFCF  F02A         	goto	l11277
 15132  0055DE                     u11590:
 15133  0055DE                     
 15134                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 15135  0055DE  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 15136  0055E0                     
 15137                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 15138  0055E0  A021               	btfss	calc_parity_even@number_of_ones^0,0,c
 15139  0055E2  EFF5  F02A         	goto	u11601
 15140  0055E6  EFF7  F02A         	goto	u11600
 15141  0055EA                     u11601:
 15142  0055EA  EFFA  F02A         	goto	l11291
 15143  0055EE                     u11600:
 15144  0055EE                     
 15145                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 15146  0055EE  0E01               	movlw	1
 15147  0055F0  EFFB  F02A         	goto	l835
 15148  0055F4                     l11291:
 15149                           
 15150                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 15151  0055F4  0E00               	movlw	0
 15152  0055F6                     l835:
 15153  0055F6  0012               	return		;funcret
 15154  0055F8                     __end_of_calc_parity_even:
 15155                           	callstack 0
 15156                           
 15157 ;; *************** function _InterruptManagerLow *****************
 15158 ;; Defined at:
 15159 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 15160 ;; Parameters:    Size  Location     Type
 15161 ;;		None
 15162 ;; Auto vars:     Size  Location     Type
 15163 ;;		None
 15164 ;; Return value:  Size  Location     Type
 15165 ;;                  1    wreg      void 
 15166 ;; Registers used:
 15167 ;;		wreg, status,2, cstack
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15175 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15177 ;;Total ram usage:        3 bytes
 15178 ;; Hardware stack levels used: 1
 15179 ;; Hardware stack levels required when called: 7
 15180 ;; This function calls:
 15181 ;;		_ADC_ISR
 15182 ;;		_INT1_ISR
 15183 ;;		_RB4_ISR
 15184 ;;		_RB5_ISR
 15185 ;;		_RB6_ISR
 15186 ;;		_RB7_ISR
 15187 ;; This function is called by:
 15188 ;;		Interrupt level 1
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192                           	psect	intcodelo
 15193  000018                     __pintcodelo:
 15194                           	callstack 0
 15195  000018                     _InterruptManagerLow:
 15196                           	callstack 17
 15197                           
 15198                           ;incstack = 0
 15199  000018  8042               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 15200  00001A  CFD8 F01B          	movff	status,??_InterruptManagerLow
 15201  00001E  CFE8 F01C          	movff	wreg,??_InterruptManagerLow+1
 15202  000022  CFE0 F01D          	movff	bsr,??_InterruptManagerLow+2
 15203  000026                     
 15204                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
 15205  000026  A6F0               	btfss	240,3,c	;volatile
 15206  000028  EF18  F000         	goto	i1u975_21
 15207  00002C  EF1A  F000         	goto	i1u975_20
 15208  000030                     i1u975_21:
 15209  000030  EF23  F000         	goto	i1l1164
 15210  000034                     i1u975_20:
 15211  000034  A0F0               	btfss	240,0,c	;volatile
 15212  000036  EF1F  F000         	goto	i1u976_21
 15213  00003A  EF21  F000         	goto	i1u976_20
 15214  00003E                     i1u976_21:
 15215  00003E  EF23  F000         	goto	i1l1164
 15216  000042                     i1u976_20:
 15217  000042                     
 15218                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
 15219  000042  ECA0  F02E         	call	_INT1_ISR	;wreg free
 15220  000046                     i1l1164:
 15221                           
 15222                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15223  000046  A6F2               	btfss	242,3,c	;volatile
 15224  000048  EF28  F000         	goto	i1u977_21
 15225  00004C  EF2A  F000         	goto	i1u977_20
 15226  000050                     i1u977_21:
 15227  000050  EF43  F000         	goto	i1l1166
 15228  000054                     i1u977_20:
 15229  000054  A0F2               	btfss	242,0,c	;volatile
 15230  000056  EF2F  F000         	goto	i1u978_21
 15231  00005A  EF31  F000         	goto	i1u978_20
 15232  00005E                     i1u978_21:
 15233  00005E  EF43  F000         	goto	i1l1166
 15234  000062                     i1u978_20:
 15235  000062  A881               	btfss	129,4,c	;volatile
 15236  000064  EF36  F000         	goto	i1u979_21
 15237  000068  EF38  F000         	goto	i1u979_20
 15238  00006C                     i1u979_21:
 15239  00006C  EF43  F000         	goto	i1l1166
 15240  000070                     i1u979_20:
 15241  000070  A040               	btfss	_flags^0,0,c	;volatile
 15242  000072  EF3D  F000         	goto	i1u980_21
 15243  000076  EF3F  F000         	goto	i1u980_20
 15244  00007A                     i1u980_21:
 15245  00007A  EF43  F000         	goto	i1l1166
 15246  00007E                     i1u980_20:
 15247  00007E                     
 15248                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
 15249  00007E  9040               	bcf	_flags^0,0,c	;volatile
 15250  000080                     
 15251                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
 15252  000080  0E01               	movlw	1
 15253  000082  EC8D  F02E         	call	_RB4_ISR
 15254  000086                     i1l1166:
 15255                           
 15256                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15257  000086  A6F2               	btfss	242,3,c	;volatile
 15258  000088  EF48  F000         	goto	i1u981_21
 15259  00008C  EF4A  F000         	goto	i1u981_20
 15260  000090                     i1u981_21:
 15261  000090  EF63  F000         	goto	i1l1168
 15262  000094                     i1u981_20:
 15263  000094  A0F2               	btfss	242,0,c	;volatile
 15264  000096  EF4F  F000         	goto	i1u982_21
 15265  00009A  EF51  F000         	goto	i1u982_20
 15266  00009E                     i1u982_21:
 15267  00009E  EF63  F000         	goto	i1l1168
 15268  0000A2                     i1u982_20:
 15269  0000A2  B881               	btfsc	129,4,c	;volatile
 15270  0000A4  EF56  F000         	goto	i1u983_21
 15271  0000A8  EF58  F000         	goto	i1u983_20
 15272  0000AC                     i1u983_21:
 15273  0000AC  EF63  F000         	goto	i1l1168
 15274  0000B0                     i1u983_20:
 15275  0000B0  B040               	btfsc	_flags^0,0,c	;volatile
 15276  0000B2  EF5D  F000         	goto	i1u984_21
 15277  0000B6  EF5F  F000         	goto	i1u984_20
 15278  0000BA                     i1u984_21:
 15279  0000BA  EF63  F000         	goto	i1l1168
 15280  0000BE                     i1u984_20:
 15281  0000BE                     
 15282                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
 15283  0000BE  8040               	bsf	_flags^0,0,c	;volatile
 15284  0000C0                     
 15285                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
 15286  0000C0  0E00               	movlw	0
 15287  0000C2  EC8D  F02E         	call	_RB4_ISR
 15288  0000C6                     i1l1168:
 15289                           
 15290                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15291  0000C6  A6F2               	btfss	242,3,c	;volatile
 15292  0000C8  EF68  F000         	goto	i1u985_21
 15293  0000CC  EF6A  F000         	goto	i1u985_20
 15294  0000D0                     i1u985_21:
 15295  0000D0  EF83  F000         	goto	i1l1170
 15296  0000D4                     i1u985_20:
 15297  0000D4  A0F2               	btfss	242,0,c	;volatile
 15298  0000D6  EF6F  F000         	goto	i1u986_21
 15299  0000DA  EF71  F000         	goto	i1u986_20
 15300  0000DE                     i1u986_21:
 15301  0000DE  EF83  F000         	goto	i1l1170
 15302  0000E2                     i1u986_20:
 15303  0000E2  AA81               	btfss	129,5,c	;volatile
 15304  0000E4  EF76  F000         	goto	i1u987_21
 15305  0000E8  EF78  F000         	goto	i1u987_20
 15306  0000EC                     i1u987_21:
 15307  0000EC  EF83  F000         	goto	i1l1170
 15308  0000F0                     i1u987_20:
 15309  0000F0  A240               	btfss	_flags^0,1,c	;volatile
 15310  0000F2  EF7D  F000         	goto	i1u988_21
 15311  0000F6  EF7F  F000         	goto	i1u988_20
 15312  0000FA                     i1u988_21:
 15313  0000FA  EF83  F000         	goto	i1l1170
 15314  0000FE                     i1u988_20:
 15315  0000FE                     
 15316                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
 15317  0000FE  9240               	bcf	_flags^0,1,c	;volatile
 15318  000100                     
 15319                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
 15320  000100  0E01               	movlw	1
 15321  000102  EC80  F02E         	call	_RB5_ISR
 15322  000106                     i1l1170:
 15323                           
 15324                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15325  000106  A6F2               	btfss	242,3,c	;volatile
 15326  000108  EF88  F000         	goto	i1u989_21
 15327  00010C  EF8A  F000         	goto	i1u989_20
 15328  000110                     i1u989_21:
 15329  000110  EFA3  F000         	goto	i1l1172
 15330  000114                     i1u989_20:
 15331  000114  A0F2               	btfss	242,0,c	;volatile
 15332  000116  EF8F  F000         	goto	i1u990_21
 15333  00011A  EF91  F000         	goto	i1u990_20
 15334  00011E                     i1u990_21:
 15335  00011E  EFA3  F000         	goto	i1l1172
 15336  000122                     i1u990_20:
 15337  000122  BA81               	btfsc	129,5,c	;volatile
 15338  000124  EF96  F000         	goto	i1u991_21
 15339  000128  EF98  F000         	goto	i1u991_20
 15340  00012C                     i1u991_21:
 15341  00012C  EFA3  F000         	goto	i1l1172
 15342  000130                     i1u991_20:
 15343  000130  B240               	btfsc	_flags^0,1,c	;volatile
 15344  000132  EF9D  F000         	goto	i1u992_21
 15345  000136  EF9F  F000         	goto	i1u992_20
 15346  00013A                     i1u992_21:
 15347  00013A  EFA3  F000         	goto	i1l1172
 15348  00013E                     i1u992_20:
 15349  00013E                     
 15350                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
 15351  00013E  8240               	bsf	_flags^0,1,c	;volatile
 15352  000140                     
 15353                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
 15354  000140  0E00               	movlw	0
 15355  000142  EC80  F02E         	call	_RB5_ISR
 15356  000146                     i1l1172:
 15357                           
 15358                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15359  000146  A6F2               	btfss	242,3,c	;volatile
 15360  000148  EFA8  F000         	goto	i1u993_21
 15361  00014C  EFAA  F000         	goto	i1u993_20
 15362  000150                     i1u993_21:
 15363  000150  EFC3  F000         	goto	i1l1174
 15364  000154                     i1u993_20:
 15365  000154  A0F2               	btfss	242,0,c	;volatile
 15366  000156  EFAF  F000         	goto	i1u994_21
 15367  00015A  EFB1  F000         	goto	i1u994_20
 15368  00015E                     i1u994_21:
 15369  00015E  EFC3  F000         	goto	i1l1174
 15370  000162                     i1u994_20:
 15371  000162  AC81               	btfss	129,6,c	;volatile
 15372  000164  EFB6  F000         	goto	i1u995_21
 15373  000168  EFB8  F000         	goto	i1u995_20
 15374  00016C                     i1u995_21:
 15375  00016C  EFC3  F000         	goto	i1l1174
 15376  000170                     i1u995_20:
 15377  000170  A440               	btfss	_flags^0,2,c	;volatile
 15378  000172  EFBD  F000         	goto	i1u996_21
 15379  000176  EFBF  F000         	goto	i1u996_20
 15380  00017A                     i1u996_21:
 15381  00017A  EFC3  F000         	goto	i1l1174
 15382  00017E                     i1u996_20:
 15383  00017E                     
 15384                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
 15385  00017E  9440               	bcf	_flags^0,2,c	;volatile
 15386  000180                     
 15387                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
 15388  000180  0E01               	movlw	1
 15389  000182  EC73  F02E         	call	_RB6_ISR
 15390  000186                     i1l1174:
 15391                           
 15392                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15393  000186  A6F2               	btfss	242,3,c	;volatile
 15394  000188  EFC8  F000         	goto	i1u997_21
 15395  00018C  EFCA  F000         	goto	i1u997_20
 15396  000190                     i1u997_21:
 15397  000190  EFE3  F000         	goto	i1l1176
 15398  000194                     i1u997_20:
 15399  000194  A0F2               	btfss	242,0,c	;volatile
 15400  000196  EFCF  F000         	goto	i1u998_21
 15401  00019A  EFD1  F000         	goto	i1u998_20
 15402  00019E                     i1u998_21:
 15403  00019E  EFE3  F000         	goto	i1l1176
 15404  0001A2                     i1u998_20:
 15405  0001A2  BC81               	btfsc	129,6,c	;volatile
 15406  0001A4  EFD6  F000         	goto	i1u999_21
 15407  0001A8  EFD8  F000         	goto	i1u999_20
 15408  0001AC                     i1u999_21:
 15409  0001AC  EFE3  F000         	goto	i1l1176
 15410  0001B0                     i1u999_20:
 15411  0001B0  B440               	btfsc	_flags^0,2,c	;volatile
 15412  0001B2  EFDD  F000         	goto	i1u1000_21
 15413  0001B6  EFDF  F000         	goto	i1u1000_20
 15414  0001BA                     i1u1000_21:
 15415  0001BA  EFE3  F000         	goto	i1l1176
 15416  0001BE                     i1u1000_20:
 15417  0001BE                     
 15418                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
 15419  0001BE  8440               	bsf	_flags^0,2,c	;volatile
 15420  0001C0                     
 15421                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
 15422  0001C0  0E00               	movlw	0
 15423  0001C2  EC73  F02E         	call	_RB6_ISR
 15424  0001C6                     i1l1176:
 15425                           
 15426                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15427  0001C6  A6F2               	btfss	242,3,c	;volatile
 15428  0001C8  EFE8  F000         	goto	i1u1001_21
 15429  0001CC  EFEA  F000         	goto	i1u1001_20
 15430  0001D0                     i1u1001_21:
 15431  0001D0  EF03  F001         	goto	i1l1178
 15432  0001D4                     i1u1001_20:
 15433  0001D4  A0F2               	btfss	242,0,c	;volatile
 15434  0001D6  EFEF  F000         	goto	i1u1002_21
 15435  0001DA  EFF1  F000         	goto	i1u1002_20
 15436  0001DE                     i1u1002_21:
 15437  0001DE  EF03  F001         	goto	i1l1178
 15438  0001E2                     i1u1002_20:
 15439  0001E2  AE81               	btfss	129,7,c	;volatile
 15440  0001E4  EFF6  F000         	goto	i1u1003_21
 15441  0001E8  EFF8  F000         	goto	i1u1003_20
 15442  0001EC                     i1u1003_21:
 15443  0001EC  EF03  F001         	goto	i1l1178
 15444  0001F0                     i1u1003_20:
 15445  0001F0  A640               	btfss	_flags^0,3,c	;volatile
 15446  0001F2  EFFD  F000         	goto	i1u1004_21
 15447  0001F6  EFFF  F000         	goto	i1u1004_20
 15448  0001FA                     i1u1004_21:
 15449  0001FA  EF03  F001         	goto	i1l1178
 15450  0001FE                     i1u1004_20:
 15451  0001FE                     
 15452                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
 15453  0001FE  9640               	bcf	_flags^0,3,c	;volatile
 15454  000200                     
 15455                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
 15456  000200  0E01               	movlw	1
 15457  000202  EC66  F02E         	call	_RB7_ISR
 15458  000206                     i1l1178:
 15459                           
 15460                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 15461  000206  A6F2               	btfss	242,3,c	;volatile
 15462  000208  EF08  F001         	goto	i1u1005_21
 15463  00020C  EF0A  F001         	goto	i1u1005_20
 15464  000210                     i1u1005_21:
 15465  000210  EF23  F001         	goto	i1l1180
 15466  000214                     i1u1005_20:
 15467  000214  A0F2               	btfss	242,0,c	;volatile
 15468  000216  EF0F  F001         	goto	i1u1006_21
 15469  00021A  EF11  F001         	goto	i1u1006_20
 15470  00021E                     i1u1006_21:
 15471  00021E  EF23  F001         	goto	i1l1180
 15472  000222                     i1u1006_20:
 15473  000222  BE81               	btfsc	129,7,c	;volatile
 15474  000224  EF16  F001         	goto	i1u1007_21
 15475  000228  EF18  F001         	goto	i1u1007_20
 15476  00022C                     i1u1007_21:
 15477  00022C  EF23  F001         	goto	i1l1180
 15478  000230                     i1u1007_20:
 15479  000230  B640               	btfsc	_flags^0,3,c	;volatile
 15480  000232  EF1D  F001         	goto	i1u1008_21
 15481  000236  EF1F  F001         	goto	i1u1008_20
 15482  00023A                     i1u1008_21:
 15483  00023A  EF23  F001         	goto	i1l1180
 15484  00023E                     i1u1008_20:
 15485  00023E                     
 15486                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
 15487  00023E  8640               	bsf	_flags^0,3,c	;volatile
 15488  000240                     
 15489                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
 15490  000240  0E00               	movlw	0
 15491  000242  EC66  F02E         	call	_RB7_ISR
 15492  000246                     i1l1180:
 15493                           
 15494                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
 15495  000246  AC9D               	btfss	157,6,c	;volatile
 15496  000248  EF28  F001         	goto	i1u1009_21
 15497  00024C  EF2A  F001         	goto	i1u1009_20
 15498  000250                     i1u1009_21:
 15499  000250  EF33  F001         	goto	i1l1182
 15500  000254                     i1u1009_20:
 15501  000254  AC9E               	btfss	158,6,c	;volatile
 15502  000256  EF2F  F001         	goto	i1u1010_21
 15503  00025A  EF31  F001         	goto	i1u1010_20
 15504  00025E                     i1u1010_21:
 15505  00025E  EF33  F001         	goto	i1l1182
 15506  000262                     i1u1010_20:
 15507  000262                     
 15508                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
 15509  000262  ECA3  F02E         	call	_ADC_ISR	;wreg free
 15510  000266                     i1l1182:
 15511                           
 15512                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
 15513  000266  A09D               	btfss	157,0,c	;volatile
 15514  000268  EF38  F001         	goto	i1u1011_21
 15515  00026C  EF3A  F001         	goto	i1u1011_20
 15516  000270                     i1u1011_21:
 15517  000270  EF3B  F001         	goto	i1l1185
 15518  000274                     i1u1011_20:
 15519  000274  509E               	movf	158,w,c	;volatile
 15520  000276                     i1l1185:
 15521  000276  C01D  FFE0         	movff	??_InterruptManagerLow+2,bsr
 15522  00027A  C01C  FFE8         	movff	??_InterruptManagerLow+1,wreg
 15523  00027E  C01B  FFD8         	movff	??_InterruptManagerLow,status
 15524  000282  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 15525  000284  0010               	retfie	
 15526  000286                     __end_of_InterruptManagerLow:
 15527                           	callstack 0
 15528                           
 15529 ;; *************** function _RB7_ISR *****************
 15530 ;; Defined at:
 15531 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15532 ;; Parameters:    Size  Location     Type
 15533 ;;  Handler_Sele    1    wreg     unsigned char 
 15534 ;; Auto vars:     Size  Location     Type
 15535 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 15536 ;; Return value:  Size  Location     Type
 15537 ;;                  1    wreg      void 
 15538 ;; Registers used:
 15539 ;;		wreg, status,2
 15540 ;; Tracked objects:
 15541 ;;		On entry : 0/0
 15542 ;;		On exit  : 0/0
 15543 ;;		Unchanged: 0/0
 15544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;Total ram usage:        1 bytes
 15550 ;; Hardware stack levels used: 1
 15551 ;; Hardware stack levels required when called: 6
 15552 ;; This function calls:
 15553 ;;		Nothing
 15554 ;; This function is called by:
 15555 ;;		_InterruptManagerLow
 15556 ;; This function uses a non-reentrant model
 15557 ;;
 15558                           
 15559                           	psect	text82
 15560  005CCC                     __ptext82:
 15561                           	callstack 0
 15562  005CCC                     _RB7_ISR:
 15563                           	callstack 17
 15564                           
 15565                           ;incstack = 0
 15566                           ;RB7_ISR@Handler_Select stored from wreg
 15567  005CCC  6E1A               	movwf	RB7_ISR@Handler_Select^0,c
 15568  005CCE                     
 15569                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
 15570  005CCE  90F2               	bcf	242,0,c	;volatile
 15571  005CD0                     
 15572                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
 15573  005CD0  501A               	movf	RB7_ISR@Handler_Select^0,w,c
 15574  005CD2  B4D8               	btfsc	status,2,c
 15575  005CD4  EF6E  F02E         	goto	i1u871_21
 15576  005CD8  EF70  F02E         	goto	i1u871_20
 15577  005CDC                     i1u871_21:
 15578  005CDC  EF72  F02E         	goto	i1l8859
 15579  005CE0                     i1u871_20:
 15580  005CE0  EF72  F02E         	goto	i1l1291
 15581  005CE4                     i1l8859:
 15582  005CE4                     i1l1291:
 15583  005CE4  0012               	return		;funcret
 15584  005CE6                     __end_of_RB7_ISR:
 15585                           	callstack 0
 15586                           
 15587 ;; *************** function _RB6_ISR *****************
 15588 ;; Defined at:
 15589 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;  Handler_Sele    1    wreg     unsigned char 
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  1    wreg      void 
 15596 ;; Registers used:
 15597 ;;		wreg, status,2
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15607 ;;Total ram usage:        1 bytes
 15608 ;; Hardware stack levels used: 1
 15609 ;; Hardware stack levels required when called: 6
 15610 ;; This function calls:
 15611 ;;		Nothing
 15612 ;; This function is called by:
 15613 ;;		_InterruptManagerLow
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617                           	psect	text83
 15618  005CE6                     __ptext83:
 15619                           	callstack 0
 15620  005CE6                     _RB6_ISR:
 15621                           	callstack 17
 15622                           
 15623                           ;incstack = 0
 15624                           ;RB6_ISR@Handler_Select stored from wreg
 15625  005CE6  6E1A               	movwf	RB6_ISR@Handler_Select^0,c
 15626  005CE8                     
 15627                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
 15628  005CE8  90F2               	bcf	242,0,c	;volatile
 15629  005CEA                     
 15630                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
 15631  005CEA  501A               	movf	RB6_ISR@Handler_Select^0,w,c
 15632  005CEC  B4D8               	btfsc	status,2,c
 15633  005CEE  EF7B  F02E         	goto	i1u870_21
 15634  005CF2  EF7D  F02E         	goto	i1u870_20
 15635  005CF6                     i1u870_21:
 15636  005CF6  EF7F  F02E         	goto	i1l8849
 15637  005CFA                     i1u870_20:
 15638  005CFA  EF7F  F02E         	goto	i1l1282
 15639  005CFE                     i1l8849:
 15640  005CFE                     i1l1282:
 15641  005CFE  0012               	return		;funcret
 15642  005D00                     __end_of_RB6_ISR:
 15643                           	callstack 0
 15644                           
 15645 ;; *************** function _RB5_ISR *****************
 15646 ;; Defined at:
 15647 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;  Handler_Sele    1    wreg     unsigned char 
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 15652 ;; Return value:  Size  Location     Type
 15653 ;;                  1    wreg      void 
 15654 ;; Registers used:
 15655 ;;		wreg, status,2
 15656 ;; Tracked objects:
 15657 ;;		On entry : 0/0
 15658 ;;		On exit  : 0/0
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15665 ;;Total ram usage:        1 bytes
 15666 ;; Hardware stack levels used: 1
 15667 ;; Hardware stack levels required when called: 6
 15668 ;; This function calls:
 15669 ;;		Nothing
 15670 ;; This function is called by:
 15671 ;;		_InterruptManagerLow
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	text84
 15676  005D00                     __ptext84:
 15677                           	callstack 0
 15678  005D00                     _RB5_ISR:
 15679                           	callstack 17
 15680                           
 15681                           ;incstack = 0
 15682                           ;RB5_ISR@Handler_Select stored from wreg
 15683  005D00  6E1A               	movwf	RB5_ISR@Handler_Select^0,c
 15684  005D02                     
 15685                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
 15686  005D02  90F2               	bcf	242,0,c	;volatile
 15687  005D04                     
 15688                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
 15689  005D04  501A               	movf	RB5_ISR@Handler_Select^0,w,c
 15690  005D06  B4D8               	btfsc	status,2,c
 15691  005D08  EF88  F02E         	goto	i1u317_21
 15692  005D0C  EF8A  F02E         	goto	i1u317_20
 15693  005D10                     i1u317_21:
 15694  005D10  EF8C  F02E         	goto	i1l4731
 15695  005D14                     i1u317_20:
 15696  005D14  EF8C  F02E         	goto	i1l1273
 15697  005D18                     i1l4731:
 15698  005D18                     i1l1273:
 15699  005D18  0012               	return		;funcret
 15700  005D1A                     __end_of_RB5_ISR:
 15701                           	callstack 0
 15702                           
 15703 ;; *************** function _RB4_ISR *****************
 15704 ;; Defined at:
 15705 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;  Handler_Sele    1    wreg     unsigned char 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 15710 ;; Return value:  Size  Location     Type
 15711 ;;                  1    wreg      void 
 15712 ;; Registers used:
 15713 ;;		wreg, status,2
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15723 ;;Total ram usage:        1 bytes
 15724 ;; Hardware stack levels used: 1
 15725 ;; Hardware stack levels required when called: 6
 15726 ;; This function calls:
 15727 ;;		Nothing
 15728 ;; This function is called by:
 15729 ;;		_InterruptManagerLow
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733                           	psect	text85
 15734  005D1A                     __ptext85:
 15735                           	callstack 0
 15736  005D1A                     _RB4_ISR:
 15737                           	callstack 17
 15738                           
 15739                           ;incstack = 0
 15740                           ;RB4_ISR@Handler_Select stored from wreg
 15741  005D1A  6E1A               	movwf	RB4_ISR@Handler_Select^0,c
 15742  005D1C                     
 15743                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
 15744  005D1C  90F2               	bcf	242,0,c	;volatile
 15745  005D1E                     
 15746                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
 15747  005D1E  501A               	movf	RB4_ISR@Handler_Select^0,w,c
 15748  005D20  B4D8               	btfsc	status,2,c
 15749  005D22  EF95  F02E         	goto	i1u316_21
 15750  005D26  EF97  F02E         	goto	i1u316_20
 15751  005D2A                     i1u316_21:
 15752  005D2A  EF99  F02E         	goto	i1l4721
 15753  005D2E                     i1u316_20:
 15754  005D2E  EF99  F02E         	goto	i1l1264
 15755  005D32                     i1l4721:
 15756  005D32                     i1l1264:
 15757  005D32  0012               	return		;funcret
 15758  005D34                     __end_of_RB4_ISR:
 15759                           	callstack 0
 15760                           
 15761 ;; *************** function _INT1_ISR *****************
 15762 ;; Defined at:
 15763 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;		None
 15766 ;; Auto vars:     Size  Location     Type
 15767 ;;		None
 15768 ;; Return value:  Size  Location     Type
 15769 ;;                  1    wreg      void 
 15770 ;; Registers used:
 15771 ;;		None
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15781 ;;Total ram usage:        0 bytes
 15782 ;; Hardware stack levels used: 1
 15783 ;; Hardware stack levels required when called: 6
 15784 ;; This function calls:
 15785 ;;		Nothing
 15786 ;; This function is called by:
 15787 ;;		_InterruptManagerLow
 15788 ;; This function uses a non-reentrant model
 15789 ;;
 15790                           
 15791                           	psect	text86
 15792  005D40                     __ptext86:
 15793                           	callstack 0
 15794  005D40                     _INT1_ISR:
 15795                           	callstack 17
 15796  005D40                     
 15797                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
 15798  005D40  90F0               	bcf	240,0,c	;volatile
 15799  005D42  0012               	return		;funcret
 15800  005D44                     __end_of_INT1_ISR:
 15801                           	callstack 0
 15802                           
 15803 ;; *************** function _ADC_ISR *****************
 15804 ;; Defined at:
 15805 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;		None
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;		None
 15810 ;; Return value:  Size  Location     Type
 15811 ;;                  1    wreg      void 
 15812 ;; Registers used:
 15813 ;;		None
 15814 ;; Tracked objects:
 15815 ;;		On entry : 0/0
 15816 ;;		On exit  : 0/0
 15817 ;;		Unchanged: 0/0
 15818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;Total ram usage:        0 bytes
 15824 ;; Hardware stack levels used: 1
 15825 ;; Hardware stack levels required when called: 6
 15826 ;; This function calls:
 15827 ;;		Nothing
 15828 ;; This function is called by:
 15829 ;;		_InterruptManagerLow
 15830 ;; This function uses a non-reentrant model
 15831 ;;
 15832                           
 15833                           	psect	text87
 15834  005D46                     __ptext87:
 15835                           	callstack 0
 15836  005D46                     _ADC_ISR:
 15837                           	callstack 17
 15838  005D46  0012               	return		;funcret
 15839  005D48                     __end_of_ADC_ISR:
 15840                           	callstack 0
 15841                           
 15842 ;; *************** function _InterruptManagerHigh *****************
 15843 ;; Defined at:
 15844 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;		None
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;		None
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  1    wreg      void 
 15851 ;; Registers used:
 15852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15860 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15862 ;;Total ram usage:        6 bytes
 15863 ;; Hardware stack levels used: 1
 15864 ;; Hardware stack levels required when called: 5
 15865 ;; This function calls:
 15866 ;;		_EUSART_Rx_ISR
 15867 ;;		_EUSART_Tx_ISR
 15868 ;;		_TMR0_ISR
 15869 ;; This function is called by:
 15870 ;;		Interrupt level 2
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	intcode
 15875  000008                     __pintcode:
 15876                           	callstack 0
 15877  000008                     _InterruptManagerHigh:
 15878                           	callstack 17
 15879                           
 15880                           ;incstack = 0
 15881  000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15882  00000A  EF6D  F01E         	goto	int_func
 15883                           
 15884                           	psect	intcode_body
 15885  003CDA                     __pintcode_body:
 15886                           	callstack 17
 15887  003CDA                     int_func:
 15888                           	callstack 17
 15889  003CDA  CFFA F014          	movff	pclath,??_InterruptManagerHigh
 15890  003CDE  CFFB F015          	movff	pclatu,??_InterruptManagerHigh+1
 15891  003CE2  CFD9 F016          	movff	fsr2l,??_InterruptManagerHigh+2
 15892  003CE6  CFDA F017          	movff	fsr2h,??_InterruptManagerHigh+3
 15893  003CEA  CFF3 F018          	movff	prodl,??_InterruptManagerHigh+4
 15894  003CEE  CFF4 F019          	movff	prodh,??_InterruptManagerHigh+5
 15895  003CF2                     
 15896                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
 15897  003CF2  AAF2               	btfss	242,5,c	;volatile
 15898  003CF4  EF7E  F01E         	goto	i2u964_41
 15899  003CF8  EF80  F01E         	goto	i2u964_40
 15900  003CFC                     i2u964_41:
 15901  003CFC  EF89  F01E         	goto	i2l1143
 15902  003D00                     i2u964_40:
 15903  003D00  A4F2               	btfss	242,2,c	;volatile
 15904  003D02  EF85  F01E         	goto	i2u965_41
 15905  003D06  EF87  F01E         	goto	i2u965_40
 15906  003D0A                     i2u965_41:
 15907  003D0A  EF89  F01E         	goto	i2l1143
 15908  003D0E                     i2u965_40:
 15909  003D0E                     
 15910                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
 15911  003D0E  ECA4  F02E         	call	_TMR0_ISR	;wreg free
 15912  003D12                     i2l1143:
 15913                           
 15914                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
 15915  003D12  A29D               	btfss	157,1,c	;volatile
 15916  003D14  EF8E  F01E         	goto	i2u966_41
 15917  003D18  EF90  F01E         	goto	i2u966_40
 15918  003D1C                     i2u966_41:
 15919  003D1C  EF91  F01E         	goto	i2l1145
 15920  003D20                     i2u966_40:
 15921  003D20  509E               	movf	158,w,c	;volatile
 15922  003D22                     i2l1145:
 15923                           
 15924                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
 15925  003D22  A2A0               	btfss	160,1,c	;volatile
 15926  003D24  EF96  F01E         	goto	i2u967_41
 15927  003D28  EF98  F01E         	goto	i2u967_40
 15928  003D2C                     i2u967_41:
 15929  003D2C  EF99  F01E         	goto	i2l1147
 15930  003D30                     i2u967_40:
 15931  003D30  50A1               	movf	161,w,c	;volatile
 15932  003D32                     i2l1147:
 15933                           
 15934                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
 15935  003D32  A0A0               	btfss	160,0,c	;volatile
 15936  003D34  EF9E  F01E         	goto	i2u968_41
 15937  003D38  EFA0  F01E         	goto	i2u968_40
 15938  003D3C                     i2u968_41:
 15939  003D3C  EFA1  F01E         	goto	i2l1149
 15940  003D40                     i2u968_40:
 15941  003D40  50A1               	movf	161,w,c	;volatile
 15942  003D42                     i2l1149:
 15943                           
 15944                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
 15945  003D42  AA9D               	btfss	157,5,c	;volatile
 15946  003D44  EFA6  F01E         	goto	i2u969_41
 15947  003D48  EFA8  F01E         	goto	i2u969_40
 15948  003D4C                     i2u969_41:
 15949  003D4C  EFB1  F01E         	goto	i2l1151
 15950  003D50                     i2u969_40:
 15951  003D50  AA9E               	btfss	158,5,c	;volatile
 15952  003D52  EFAD  F01E         	goto	i2u970_41
 15953  003D56  EFAF  F01E         	goto	i2u970_40
 15954  003D5A                     i2u970_41:
 15955  003D5A  EFB1  F01E         	goto	i2l1151
 15956  003D5E                     i2u970_40:
 15957  003D5E                     
 15958                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
 15959  003D5E  EC92  F02D         	call	_EUSART_Rx_ISR	;wreg free
 15960  003D62                     i2l1151:
 15961                           
 15962                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
 15963  003D62  A89D               	btfss	157,4,c	;volatile
 15964  003D64  EFB6  F01E         	goto	i2u971_41
 15965  003D68  EFB8  F01E         	goto	i2u971_40
 15966  003D6C                     i2u971_41:
 15967  003D6C  EFC1  F01E         	goto	i2l1153
 15968  003D70                     i2u971_40:
 15969  003D70  A89E               	btfss	158,4,c	;volatile
 15970  003D72  EFBD  F01E         	goto	i2u972_41
 15971  003D76  EFBF  F01E         	goto	i2u972_40
 15972  003D7A                     i2u972_41:
 15973  003D7A  EFC1  F01E         	goto	i2l1153
 15974  003D7E                     i2u972_40:
 15975  003D7E                     
 15976                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
 15977  003D7E  ECA5  F02E         	call	_EUSART_Tx_ISR	;wreg free
 15978  003D82                     i2l1153:
 15979                           
 15980                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
 15981  003D82  A6A0               	btfss	160,3,c	;volatile
 15982  003D84  EFC6  F01E         	goto	i2u973_41
 15983  003D88  EFC8  F01E         	goto	i2u973_40
 15984  003D8C                     i2u973_41:
 15985  003D8C  EFC9  F01E         	goto	i2l1155
 15986  003D90                     i2u973_40:
 15987  003D90  50A1               	movf	161,w,c	;volatile
 15988  003D92                     i2l1155:
 15989                           
 15990                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
 15991  003D92  A69D               	btfss	157,3,c	;volatile
 15992  003D94  EFCE  F01E         	goto	i2u974_41
 15993  003D98  EFD0  F01E         	goto	i2u974_40
 15994  003D9C                     i2u974_41:
 15995  003D9C  EFD1  F01E         	goto	i2l1158
 15996  003DA0                     i2u974_40:
 15997  003DA0  509E               	movf	158,w,c	;volatile
 15998  003DA2                     i2l1158:
 15999  003DA2  C019  FFF4         	movff	??_InterruptManagerHigh+5,prodh
 16000  003DA6  C018  FFF3         	movff	??_InterruptManagerHigh+4,prodl
 16001  003DAA  C017  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 16002  003DAE  C016  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 16003  003DB2  C015  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 16004  003DB6  C014  FFFA         	movff	??_InterruptManagerHigh,pclath
 16005  003DBA  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16006  003DBC  0011               	retfie		f
 16007  003DBE                     __end_of_InterruptManagerHigh:
 16008                           	callstack 0
 16009                           
 16010 ;; *************** function _TMR0_ISR *****************
 16011 ;; Defined at:
 16012 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;		None
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;		None
 16017 ;; Return value:  Size  Location     Type
 16018 ;;                  1    wreg      void 
 16019 ;; Registers used:
 16020 ;;		None
 16021 ;; Tracked objects:
 16022 ;;		On entry : 0/0
 16023 ;;		On exit  : 0/0
 16024 ;;		Unchanged: 0/0
 16025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;Total ram usage:        0 bytes
 16031 ;; Hardware stack levels used: 1
 16032 ;; This function calls:
 16033 ;;		Nothing
 16034 ;; This function is called by:
 16035 ;;		_InterruptManagerHigh
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039                           	psect	text89
 16040  005D48                     __ptext89:
 16041                           	callstack 0
 16042  005D48                     _TMR0_ISR:
 16043                           	callstack 21
 16044  005D48  0012               	return		;funcret
 16045  005D4A                     __end_of_TMR0_ISR:
 16046                           	callstack 0
 16047                           
 16048 ;; *************** function _EUSART_Tx_ISR *****************
 16049 ;; Defined at:
 16050 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;		None
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;		None
 16055 ;; Return value:  Size  Location     Type
 16056 ;;                  1    wreg      void 
 16057 ;; Registers used:
 16058 ;;		None
 16059 ;; Tracked objects:
 16060 ;;		On entry : 0/0
 16061 ;;		On exit  : 0/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16068 ;;Total ram usage:        0 bytes
 16069 ;; Hardware stack levels used: 1
 16070 ;; This function calls:
 16071 ;;		Nothing
 16072 ;; This function is called by:
 16073 ;;		_InterruptManagerHigh
 16074 ;; This function uses a non-reentrant model
 16075 ;;
 16076                           
 16077                           	psect	text90
 16078  005D4A                     __ptext90:
 16079                           	callstack 0
 16080  005D4A                     _EUSART_Tx_ISR:
 16081                           	callstack 21
 16082  005D4A  0012               	return		;funcret
 16083  005D4C                     __end_of_EUSART_Tx_ISR:
 16084                           	callstack 0
 16085                           
 16086 ;; *************** function _EUSART_Rx_ISR *****************
 16087 ;; Defined at:
 16088 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;		None
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;		None
 16093 ;; Return value:  Size  Location     Type
 16094 ;;                  1    wreg      void 
 16095 ;; Registers used:
 16096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16106 ;;Total ram usage:        0 bytes
 16107 ;; Hardware stack levels used: 1
 16108 ;; Hardware stack levels required when called: 4
 16109 ;; This function calls:
 16110 ;;		Absolute function
 16111 ;;		_usart_isr
 16112 ;; This function is called by:
 16113 ;;		_InterruptManagerHigh
 16114 ;; This function uses a non-reentrant model
 16115 ;;
 16116                           
 16117                           	psect	text91
 16118  005B24                     __ptext91:
 16119                           	callstack 0
 16120  005B24                     _EUSART_Rx_ISR:
 16121                           	callstack 17
 16122  005B24                     
 16123                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
 16124  005B24  5034               	movf	_eusart_Rx_InterruptHandler^0,w,c
 16125  005B26  1035               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 16126  005B28  B4D8               	btfsc	status,2,c
 16127  005B2A  EF99  F02D         	goto	i2u866_41
 16128  005B2E  EF9B  F02D         	goto	i2u866_40
 16129  005B32                     i2u866_41:
 16130  005B32  EFA7  F02D         	goto	i2l842
 16131  005B36                     i2u866_40:
 16132  005B36                     
 16133                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
 16134  005B36  D802               	call	i2u867_48
 16135  005B38  EFA7  F02D         	goto	i2u867_49
 16136  005B3C                     i2u867_48:
 16137  005B3C  0005               	push	
 16138  005B3E  6EFA               	movwf	pclath,c
 16139  005B40  5034               	movf	_eusart_Rx_InterruptHandler^0,w,c
 16140  005B42  6EFD               	movwf	tosl,c
 16141  005B44  5035               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 16142  005B46  6EFE               	movwf	tosh,c
 16143  005B48  6AFF               	clrf	tosu,c
 16144  005B4A  50FA               	movf	pclath,w,c
 16145  005B4C  0012               	return		;indir
 16146  005B4E                     i2u867_49:
 16147  005B4E                     i2l842:
 16148  005B4E  0012               	return		;funcret
 16149  005B50                     __end_of_EUSART_Rx_ISR:
 16150                           	callstack 0
 16151                           
 16152 ;; *************** function _usart_isr *****************
 16153 ;; Defined at:
 16154 ;;		line 480 in file "application.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;		None
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;		None
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      void 
 16161 ;; Registers used:
 16162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/0
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16172 ;;Total ram usage:        0 bytes
 16173 ;; Hardware stack levels used: 1
 16174 ;; Hardware stack levels required when called: 3
 16175 ;; This function calls:
 16176 ;;		i2_Bluetooth_Send_Data_Non_Blocking
 16177 ;;		i2_EUSART_Async_Read_Data
 16178 ;;		i2_GPIO_Pin_Toggle_Logic
 16179 ;; This function is called by:
 16180 ;;		_EUSART_Rx_ISR
 16181 ;; This function uses a non-reentrant model
 16182 ;;
 16183                           
 16184                           	psect	text92
 16185  005A6C                     __ptext92:
 16186                           	callstack 0
 16187  005A6C                     _usart_isr:
 16188                           	callstack 17
 16189  005A6C                     
 16190                           ;application.c: 482:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
 16191  005A6C  0E14               	movlw	low __uart_obj
 16192  005A6E  6E06               	movwf	i2EUSART_Async_Read_Data@_eusart_obj^0,c
 16193  005A70  0E01               	movlw	high __uart_obj
 16194  005A72  6E07               	movwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,c
 16195  005A74  0ED8               	movlw	low _datarecive
 16196  005A76  6E08               	movwf	i2EUSART_Async_Read_Data@data^0,c
 16197  005A78  0E00               	movlw	high _datarecive
 16198  005A7A  6E09               	movwf	(i2EUSART_Async_Read_Data@data+1)^0,c
 16199  005A7C  EC03  F014         	call	i2_EUSART_Async_Read_Data	;wreg free
 16200                           
 16201                           ;application.c: 483:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
 16202  005A80  0E14               	movlw	low __uart_obj
 16203  005A82  6E0C               	movwf	i2Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
 16204  005A84  0E01               	movlw	high __uart_obj
 16205  005A86  6E0D               	movwf	(i2Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
 16206  005A88  C03D  F00E         	movff	_datasend,i2Bluetooth_Send_Data_Non_Blocking@data	;volatile
 16207  005A8C  ECBD  F02D         	call	i2_Bluetooth_Send_Data_Non_Blocking	;wreg free
 16208  005A90                     
 16209                           ;application.c: 484:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
 16210  005A90  0EFD               	movlw	low _TEST_PIN
 16211  005A92  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
 16212  005A94  0E00               	movlw	high _TEST_PIN
 16213  005A96  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
 16214  005A98  ECBA  F029         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
 16215  005A9C  0012               	return		;funcret
 16216  005A9E                     __end_of_usart_isr:
 16217                           	callstack 0
 16218                           
 16219 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
 16220 ;; Defined at:
 16221 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16224 ;;		 -> driller_PIN(1), TEST_PIN(1), 
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;  ERRORSTATUS     1    0        unsigned char 
 16227 ;; Return value:  Size  Location     Type
 16228 ;;                  1    wreg      unsigned char 
 16229 ;; Registers used:
 16230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16231 ;; Tracked objects:
 16232 ;;		On entry : 0/0
 16233 ;;		On exit  : 0/0
 16234 ;;		Unchanged: 0/0
 16235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16238 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16239 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16240 ;;Total ram usage:        7 bytes
 16241 ;; Hardware stack levels used: 1
 16242 ;; This function calls:
 16243 ;;		Nothing
 16244 ;; This function is called by:
 16245 ;;		_usart_isr
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           	psect	text93
 16250  005374                     __ptext93:
 16251                           	callstack 0
 16252  005374                     i2_GPIO_Pin_Toggle_Logic:
 16253                           	callstack 19
 16254  005374                     
 16255                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 16256  005374  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 16257  005376  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 16258  005378  A4D8               	btfss	status,2,c
 16259  00537A  EFC1  F029         	goto	i2u802_41
 16260  00537E  EFC3  F029         	goto	i2u802_40
 16261  005382                     i2u802_41:
 16262  005382  EFC5  F029         	goto	i2l8345
 16263  005386                     i2u802_40:
 16264  005386                     
 16265                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 16266  005386  EFF1  F029         	goto	i2l921
 16267  00538A                     i2l8345:
 16268                           
 16269                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 16270  00538A  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 16271  00538E  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 16272  005392  50DF               	movf	223,w,c
 16273  005394  0B07               	andlw	7
 16274  005396  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
 16275  005398  0E01               	movlw	1
 16276  00539A  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
 16277  00539C  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 16278  00539E  EFD3  F029         	goto	i2u803_44
 16279  0053A2                     i2u803_45:
 16280  0053A2  90D8               	bcf	status,0,c
 16281  0053A4  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
 16282  0053A6                     i2u803_44:
 16283  0053A6  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 16284  0053A8  EFD1  F029         	goto	i2u803_45
 16285  0053AC  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 16286  0053B0  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 16287  0053B4  30DF               	rrcf	223,w,c
 16288  0053B6  32E8               	rrcf	wreg,f,c
 16289  0053B8  32E8               	rrcf	wreg,f,c
 16290  0053BA  0B07               	andlw	7
 16291  0053BC  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
 16292  0053BE  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
 16293  0053C0  0D02               	mullw	2
 16294  0053C2  0EDD               	movlw	low _lat_registers
 16295  0053C4  24F3               	addwf	243,w,c
 16296  0053C6  6ED9               	movwf	fsr2l,c
 16297  0053C8  0E00               	movlw	high _lat_registers
 16298  0053CA  20F4               	addwfc	prodh,w,c
 16299  0053CC  6EDA               	movwf	fsr2h,c
 16300  0053CE  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
 16301  0053D2  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
 16302  0053D6  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
 16303  0053DA  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
 16304  0053DE  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
 16305  0053E0  1ADF               	xorwf	indf2,f,c
 16306  0053E2                     i2l921:
 16307  0053E2  0012               	return		;funcret
 16308  0053E4                     __end_ofi2_GPIO_Pin_Toggle_Logic:
 16309                           	callstack 0
 16310                           
 16311 ;; *************** function i2_EUSART_Async_Read_Data *****************
 16312 ;; Defined at:
 16313 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 16316 ;;		 -> _uart_obj(12), 
 16317 ;;  data            2    7[COMRAM] PTR unsigned short 
 16318 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(2), 
 16319 ;; Auto vars:     Size  Location     Type
 16320 ;;  l_temp_data     2   17[COMRAM] unsigned short 
 16321 ;;  ret_val         1    0        unsigned char 
 16322 ;; Return value:  Size  Location     Type
 16323 ;;                  1    wreg      unsigned char 
 16324 ;; Registers used:
 16325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16326 ;; Tracked objects:
 16327 ;;		On entry : 0/0
 16328 ;;		On exit  : 0/0
 16329 ;;		Unchanged: 0/0
 16330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16332 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16335 ;;Total ram usage:       14 bytes
 16336 ;; Hardware stack levels used: 1
 16337 ;; Hardware stack levels required when called: 1
 16338 ;; This function calls:
 16339 ;;		i2_calc_parity_even
 16340 ;;		i2_calc_parity_odd
 16341 ;; This function is called by:
 16342 ;;		_usart_isr
 16343 ;; This function uses a non-reentrant model
 16344 ;;
 16345                           
 16346                           	psect	text94
 16347  002806                     __ptext94:
 16348                           	callstack 0
 16349  002806                     i2_EUSART_Async_Read_Data:
 16350                           	callstack 18
 16351  002806                     
 16352                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 16353  002806  0E00               	movlw	0
 16354  002808  6E13               	movwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16355  00280A  0E00               	movlw	0
 16356  00280C  6E12               	movwf	i2EUSART_Async_Read_Data@l_temp_data^0,c
 16357  00280E                     
 16358                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 16359  00280E  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16360  002810  1007               	iorwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16361  002812  B4D8               	btfsc	status,2,c
 16362  002814  EF0E  F014         	goto	i2u787_41
 16363  002818  EF10  F014         	goto	i2u787_40
 16364  00281C                     i2u787_41:
 16365  00281C  EF19  F014         	goto	i2l8285
 16366  002820                     i2u787_40:
 16367  002820  5008               	movf	i2EUSART_Async_Read_Data@data^0,w,c
 16368  002822  1009               	iorwf	(i2EUSART_Async_Read_Data@data+1)^0,w,c
 16369  002824  A4D8               	btfss	status,2,c
 16370  002826  EF17  F014         	goto	i2u788_41
 16371  00282A  EF19  F014         	goto	i2u788_40
 16372  00282E                     i2u788_41:
 16373  00282E  EF1B  F014         	goto	i2l693
 16374  002832                     i2u788_40:
 16375  002832                     i2l8285:
 16376                           
 16377                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 16378  002832  EFF7  F014         	goto	i2l8335
 16379  002836                     i2l693:
 16380                           
 16381                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 16382  002836  AA9E               	btfss	158,5,c	;volatile
 16383  002838  EF20  F014         	goto	i2u789_41
 16384  00283C  EF22  F014         	goto	i2u789_40
 16385  002840                     i2u789_41:
 16386  002840  EF19  F014         	goto	i2l8285
 16387  002844                     i2u789_40:
 16388  002844                     
 16389                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 16390  002844  EE20 F009          	lfsr	2,9
 16391  002848  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16392  00284A  26D9               	addwf	fsr2l,f,c
 16393  00284C  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16394  00284E  22DA               	addwfc	fsr2h,f,c
 16395  002850  B8DF               	btfsc	indf2,4,c
 16396  002852  EF2D  F014         	goto	i2u790_41
 16397  002856  EF2F  F014         	goto	i2u790_40
 16398  00285A                     i2u790_41:
 16399  00285A  EF3C  F014         	goto	i2l8291
 16400  00285E                     i2u790_40:
 16401  00285E                     
 16402                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 16403  00285E  50AE               	movf	174,w,c	;volatile
 16404  002860  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 16405  002862  6A0B               	clrf	(??i2_EUSART_Async_Read_Data+1)^0,c
 16406  002864  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 16407  002868  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 16408  00286C  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 16409  002870  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 16410                           
 16411                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 16412  002874  EFF7  F014         	goto	i2l8335
 16413  002878                     i2l8291:
 16414  002878  EE20 F009          	lfsr	2,9
 16415  00287C  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16416  00287E  26D9               	addwf	fsr2l,f,c
 16417  002880  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16418  002882  22DA               	addwfc	fsr2h,f,c
 16419  002884  A8DF               	btfss	indf2,4,c
 16420  002886  EF47  F014         	goto	i2u791_41
 16421  00288A  EF49  F014         	goto	i2u791_40
 16422  00288E                     i2u791_41:
 16423  00288E  EFF7  F014         	goto	i2l706
 16424  002892                     i2u791_40:
 16425  002892                     
 16426                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 16427  002892  EE20 F009          	lfsr	2,9
 16428  002896  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16429  002898  26D9               	addwf	fsr2l,f,c
 16430  00289A  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16431  00289C  22DA               	addwfc	fsr2h,f,c
 16432  00289E  30DF               	rrcf	223,w,c
 16433  0028A0  0B03               	andlw	3
 16434  0028A2  0900               	iorlw	0
 16435  0028A4  A4D8               	btfss	status,2,c
 16436  0028A6  EF57  F014         	goto	i2u792_41
 16437  0028AA  EF59  F014         	goto	i2u792_40
 16438  0028AE                     i2u792_41:
 16439  0028AE  EF7B  F014         	goto	i2l8305
 16440  0028B2                     i2u792_40:
 16441  0028B2                     
 16442                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 16443  0028B2  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 16444  0028B6  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16445                           
 16446                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 16447  0028B8  B0AB               	btfsc	4011,0,c	;volatile
 16448  0028BA  EF61  F014         	goto	i2u793_41
 16449  0028BE  EF63  F014         	goto	i2u793_40
 16450  0028C2                     i2u793_41:
 16451  0028C2  EF69  F014         	goto	i2l8299
 16452  0028C6                     i2u793_40:
 16453  0028C6  0E00               	movlw	0
 16454  0028C8  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2030+1)^0,c
 16455  0028CA  0E00               	movlw	0
 16456  0028CC  6E0C               	movwf	i2_EUSART_Async_Read_Data$2030^0,c
 16457  0028CE  EF6D  F014         	goto	i2l8301
 16458  0028D2                     i2l8299:
 16459  0028D2  0E01               	movlw	1
 16460  0028D4  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2030+1)^0,c
 16461  0028D6  0E00               	movlw	0
 16462  0028D8  6E0C               	movwf	i2_EUSART_Async_Read_Data$2030^0,c
 16463  0028DA                     i2l8301:
 16464  0028DA  500C               	movf	i2_EUSART_Async_Read_Data$2030^0,w,c
 16465  0028DC  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 16466  0028DE  500D               	movf	(i2_EUSART_Async_Read_Data$2030+1)^0,w,c
 16467  0028E0  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 16468  0028E2                     
 16469                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 16470  0028E2  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 16471  0028E6  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 16472  0028EA  C012  FFDE         	movff	i2EUSART_Async_Read_Data@l_temp_data,postinc2
 16473  0028EE  C013  FFDD         	movff	i2EUSART_Async_Read_Data@l_temp_data+1,postdec2
 16474                           
 16475                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 16476  0028F2  EFF7  F014         	goto	i2l8335
 16477  0028F6                     i2l8305:
 16478  0028F6  EE20 F009          	lfsr	2,9
 16479  0028FA  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16480  0028FC  26D9               	addwf	fsr2l,f,c
 16481  0028FE  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16482  002900  22DA               	addwfc	fsr2h,f,c
 16483  002902  30DF               	rrcf	223,w,c
 16484  002904  0B03               	andlw	3
 16485  002906  06E8               	decf	wreg,f,c
 16486  002908  A4D8               	btfss	status,2,c
 16487  00290A  EF89  F014         	goto	i2u794_41
 16488  00290E  EF8B  F014         	goto	i2u794_40
 16489  002912                     i2u794_41:
 16490  002912  EFC0  F014         	goto	i2l8319
 16491  002916                     i2u794_40:
 16492  002916                     
 16493                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 16494  002916  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 16495  00291A  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16496                           
 16497                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 16498  00291C  B0AB               	btfsc	171,0,c	;volatile
 16499  00291E  EF93  F014         	goto	i2u795_41
 16500  002922  EF95  F014         	goto	i2u795_40
 16501  002926                     i2u795_41:
 16502  002926  EF9B  F014         	goto	i2l8311
 16503  00292A                     i2u795_40:
 16504  00292A  0E00               	movlw	0
 16505  00292C  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 16506  00292E  0E00               	movlw	0
 16507  002930  6E0E               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 16508  002932  EF9F  F014         	goto	i2l8313
 16509  002936                     i2l8311:
 16510  002936  0E01               	movlw	1
 16511  002938  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 16512  00293A  0E00               	movlw	0
 16513  00293C  6E0E               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 16514  00293E                     i2l8313:
 16515  00293E  500E               	movf	i2_EUSART_Async_Read_Data$2031^0,w,c
 16516  002940  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 16517  002942  500F               	movf	(i2_EUSART_Async_Read_Data$2031+1)^0,w,c
 16518  002944  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 16519  002946                     
 16520                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 16521  002946  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 16522  002948  EC30  F02B         	call	i2_calc_parity_even
 16523  00294C  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 16524  00294E  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 16525  002950  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 16526  002952  A4D8               	btfss	status,2,c
 16527  002954  EFAE  F014         	goto	i2u796_41
 16528  002958  EFB0  F014         	goto	i2u796_40
 16529  00295C                     i2u796_41:
 16530  00295C  EFF7  F014         	goto	i2l706
 16531  002960                     i2u796_40:
 16532  002960                     i2l8317:
 16533                           
 16534                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 16535  002960  0EFF               	movlw	255
 16536  002962  1412               	andwf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 16537  002964  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 16538  002966  0E00               	movlw	0
 16539  002968  1413               	andwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 16540  00296A  6E0B               	movwf	(??i2_EUSART_Async_Read_Data+1)^0,c
 16541  00296C  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 16542  002970  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 16543  002974  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 16544  002978  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 16545                           
 16546                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 16547  00297C  EFF7  F014         	goto	i2l8335
 16548  002980                     i2l8319:
 16549  002980  EE20 F009          	lfsr	2,9
 16550  002984  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16551  002986  26D9               	addwf	fsr2l,f,c
 16552  002988  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16553  00298A  22DA               	addwfc	fsr2h,f,c
 16554  00298C  30DF               	rrcf	223,w,c
 16555  00298E  0B03               	andlw	3
 16556  002990  0A02               	xorlw	2
 16557  002992  A4D8               	btfss	status,2,c
 16558  002994  EFCE  F014         	goto	i2u797_41
 16559  002998  EFD0  F014         	goto	i2u797_40
 16560  00299C                     i2u797_41:
 16561  00299C  EFF7  F014         	goto	i2l706
 16562  0029A0                     i2u797_40:
 16563  0029A0                     
 16564                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 16565  0029A0  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 16566  0029A4  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16567                           
 16568                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 16569  0029A6  B0AB               	btfsc	171,0,c	;volatile
 16570  0029A8  EFD8  F014         	goto	i2u798_41
 16571  0029AC  EFDA  F014         	goto	i2u798_40
 16572  0029B0                     i2u798_41:
 16573  0029B0  EFE0  F014         	goto	i2l8325
 16574  0029B4                     i2u798_40:
 16575  0029B4  0E00               	movlw	0
 16576  0029B6  6E11               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 16577  0029B8  0E00               	movlw	0
 16578  0029BA  6E10               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 16579  0029BC  EFE4  F014         	goto	i2l8327
 16580  0029C0                     i2l8325:
 16581  0029C0  0E01               	movlw	1
 16582  0029C2  6E11               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 16583  0029C4  0E00               	movlw	0
 16584  0029C6  6E10               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 16585  0029C8                     i2l8327:
 16586  0029C8  5010               	movf	i2_EUSART_Async_Read_Data$2032^0,w,c
 16587  0029CA  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 16588  0029CC  5011               	movf	(i2_EUSART_Async_Read_Data$2032+1)^0,w,c
 16589  0029CE  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 16590  0029D0                     
 16591                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 16592  0029D0  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 16593  0029D2  ECFC  F02A         	call	i2_calc_parity_odd
 16594  0029D6  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 16595  0029D8  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 16596  0029DA  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 16597  0029DC  A4D8               	btfss	status,2,c
 16598  0029DE  EFF3  F014         	goto	i2u799_41
 16599  0029E2  EFF5  F014         	goto	i2u799_40
 16600  0029E6                     i2u799_41:
 16601  0029E6  EFF7  F014         	goto	i2l706
 16602  0029EA                     i2u799_40:
 16603  0029EA  EFB0  F014         	goto	i2l8317
 16604  0029EE                     i2l706:
 16605  0029EE                     i2l8335:
 16606                           
 16607                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 16608  0029EE  B2AB               	btfsc	171,1,c	;volatile
 16609  0029F0  EFFC  F014         	goto	i2u800_41
 16610  0029F4  EFFE  F014         	goto	i2u800_40
 16611  0029F8                     i2u800_41:
 16612  0029F8  EF05  F015         	goto	i2l727
 16613  0029FC                     i2u800_40:
 16614  0029FC  A4AB               	btfss	171,2,c	;volatile
 16615  0029FE  EF03  F015         	goto	i2u801_41
 16616  002A02  EF05  F015         	goto	i2u801_40
 16617  002A06                     i2u801_41:
 16618  002A06  EF07  F015         	goto	i2l728
 16619  002A0A                     i2u801_40:
 16620  002A0A                     i2l727:
 16621                           
 16622                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 16623  002A0A  98AB               	bcf	171,4,c	;volatile
 16624                           
 16625                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 16626  002A0C  88AB               	bsf	171,4,c	;volatile
 16627  002A0E                     i2l728:
 16628  002A0E  0012               	return		;funcret
 16629  002A10                     __end_ofi2_EUSART_Async_Read_Data:
 16630                           	callstack 0
 16631                           
 16632 ;; *************** function i2_Bluetooth_Send_Data_Non_Blocking *****************
 16633 ;; Defined at:
 16634 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
 16635 ;; Parameters:    Size  Location     Type
 16636 ;;  _uart_obj       2   11[COMRAM] PTR const struct .
 16637 ;;		 -> _uart_obj(12), 
 16638 ;;  data            1   13[COMRAM] unsigned char 
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;  ret_val         1    0        unsigned char 
 16641 ;; Return value:  Size  Location     Type
 16642 ;;                  1    wreg      unsigned char 
 16643 ;; Registers used:
 16644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16645 ;; Tracked objects:
 16646 ;;		On entry : 0/0
 16647 ;;		On exit  : 0/0
 16648 ;;		Unchanged: 0/0
 16649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16654 ;;Total ram usage:        3 bytes
 16655 ;; Hardware stack levels used: 1
 16656 ;; Hardware stack levels required when called: 2
 16657 ;; This function calls:
 16658 ;;		i2_EUSART_Async_Transmit_Data
 16659 ;; This function is called by:
 16660 ;;		_usart_isr
 16661 ;; This function uses a non-reentrant model
 16662 ;;
 16663                           
 16664                           	psect	text95
 16665  005B7A                     __ptext95:
 16666                           	callstack 0
 16667  005B7A                     i2_Bluetooth_Send_Data_Non_Blocking:
 16668                           	callstack 17
 16669  005B7A                     
 16670                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 16671  005B7A  500C               	movf	i2Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
 16672  005B7C  100D               	iorwf	(i2Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
 16673  005B7E  A4D8               	btfss	status,2,c
 16674  005B80  EFC4  F02D         	goto	i2u786_41
 16675  005B84  EFC6  F02D         	goto	i2u786_40
 16676  005B88                     i2u786_41:
 16677  005B88  EFC8  F02D         	goto	i2l8275
 16678  005B8C                     i2u786_40:
 16679  005B8C                     
 16680                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 16681  005B8C  EFD1  F02D         	goto	i2l32
 16682  005B90                     i2l8275:
 16683                           
 16684                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 16685  005B90  C00C  F006         	movff	i2Bluetooth_Send_Data_Non_Blocking@_uart_obj,i2EUSART_Async_Transmit_Data@_eusart
      +                          _obj
 16686  005B94  C00D  F007         	movff	i2Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,i2EUSART_Async_Transmit_Data@_eusa
      +                          rt_obj+1
 16687  005B98  C00E  F008         	movff	i2Bluetooth_Send_Data_Non_Blocking@data,i2EUSART_Async_Transmit_Data@data
 16688  005B9C  6A09               	clrf	(i2EUSART_Async_Transmit_Data@data+1)^0,c
 16689  005B9E  ECDF  F01E         	call	i2_EUSART_Async_Transmit_Data	;wreg free
 16690  005BA2                     i2l32:
 16691  005BA2  0012               	return		;funcret
 16692  005BA4                     __end_ofi2_Bluetooth_Send_Data_Non_Blocking:
 16693                           	callstack 0
 16694                           
 16695 ;; *************** function i2_EUSART_Async_Transmit_Data *****************
 16696 ;; Defined at:
 16697 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 16700 ;;		 -> _uart_obj(12), 
 16701 ;;  data            2    7[COMRAM] unsigned short 
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;  ret_val         1    0        unsigned char 
 16704 ;; Return value:  Size  Location     Type
 16705 ;;                  1    wreg      unsigned char 
 16706 ;; Registers used:
 16707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16708 ;; Tracked objects:
 16709 ;;		On entry : 0/0
 16710 ;;		On exit  : 0/0
 16711 ;;		Unchanged: 0/0
 16712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16717 ;;Total ram usage:        6 bytes
 16718 ;; Hardware stack levels used: 1
 16719 ;; Hardware stack levels required when called: 1
 16720 ;; This function calls:
 16721 ;;		i2_calc_parity_even
 16722 ;;		i2_calc_parity_odd
 16723 ;; This function is called by:
 16724 ;;		i2_Bluetooth_Send_Data_Non_Blocking
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text96
 16729  003DBE                     __ptext96:
 16730                           	callstack 0
 16731  003DBE                     i2_EUSART_Async_Transmit_Data:
 16732                           	callstack 17
 16733  003DBE                     
 16734                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 16735  003DBE  5006               	movf	i2EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 16736  003DC0  1007               	iorwf	(i2EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 16737  003DC2  A4D8               	btfss	status,2,c
 16738  003DC4  EFE6  F01E         	goto	i2u717_41
 16739  003DC8  EFE8  F01E         	goto	i2u717_40
 16740  003DCC                     i2u717_41:
 16741  003DCC  EFEA  F01E         	goto	i2l7899
 16742  003DD0                     i2u717_40:
 16743  003DD0                     
 16744                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 16745  003DD0  EF50  F01F         	goto	i2l690
 16746  003DD4                     i2l7899:
 16747                           
 16748                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 16749  003DD4  EE20 F002          	lfsr	2,2
 16750  003DD8  5006               	movf	i2EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 16751  003DDA  26D9               	addwf	fsr2l,f,c
 16752  003DDC  5007               	movf	(i2EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 16753  003DDE  22DA               	addwfc	fsr2h,f,c
 16754  003DE0  A6DF               	btfss	indf2,3,c
 16755  003DE2  EFF5  F01E         	goto	i2u718_41
 16756  003DE6  EFF7  F01E         	goto	i2u718_40
 16757  003DEA                     i2u718_41:
 16758  003DEA  EF4E  F01F         	goto	i2l7913
 16759  003DEE                     i2u718_40:
 16760  003DEE                     
 16761                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 16762  003DEE  EE20 F002          	lfsr	2,2
 16763  003DF2  5006               	movf	i2EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 16764  003DF4  26D9               	addwf	fsr2l,f,c
 16765  003DF6  5007               	movf	(i2EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 16766  003DF8  22DA               	addwfc	fsr2h,f,c
 16767  003DFA  50DF               	movf	223,w,c
 16768  003DFC  0B03               	andlw	3
 16769  003DFE  0900               	iorlw	0
 16770  003E00  A4D8               	btfss	status,2,c
 16771  003E02  EF05  F01F         	goto	i2u719_41
 16772  003E06  EF07  F01F         	goto	i2u719_40
 16773  003E0A                     i2u719_41:
 16774  003E0A  EF16  F01F         	goto	i2l7905
 16775  003E0E                     i2u719_40:
 16776  003E0E                     
 16777                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 16778  003E0E  C008  F00A         	movff	i2EUSART_Async_Transmit_Data@data,??i2_EUSART_Async_Transmit_Data
 16779  003E12  C009  F00B         	movff	i2EUSART_Async_Transmit_Data@data+1,??i2_EUSART_Async_Transmit_Data+1
 16780  003E16  C00B  F00A         	movff	??i2_EUSART_Async_Transmit_Data+1,??i2_EUSART_Async_Transmit_Data
 16781  003E1A  6A0B               	clrf	(??i2_EUSART_Async_Transmit_Data+1)^0,c
 16782  003E1C  300A               	rrcf	??i2_EUSART_Async_Transmit_Data^0,w,c
 16783  003E1E  A0D8               	btfss	status,0,c
 16784  003E20  D002               	bra	i2u720_45
 16785  003E22  80AC               	bsf	172,0,c	;volatile
 16786  003E24  D001               	bra	i2u720_47
 16787  003E26                     i2u720_45:
 16788  003E26  90AC               	bcf	172,0,c	;volatile
 16789  003E28                     i2u720_47:
 16790                           
 16791                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 16792  003E28  EF4E  F01F         	goto	i2l7913
 16793  003E2C                     i2l7905:
 16794  003E2C  EE20 F002          	lfsr	2,2
 16795  003E30  5006               	movf	i2EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 16796  003E32  26D9               	addwf	fsr2l,f,c
 16797  003E34  5007               	movf	(i2EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 16798  003E36  22DA               	addwfc	fsr2h,f,c
 16799  003E38  50DF               	movf	223,w,c
 16800  003E3A  0B03               	andlw	3
 16801  003E3C  06E8               	decf	wreg,f,c
 16802  003E3E  A4D8               	btfss	status,2,c
 16803  003E40  EF24  F01F         	goto	i2u721_41
 16804  003E44  EF26  F01F         	goto	i2u721_40
 16805  003E48                     i2u721_41:
 16806  003E48  EF32  F01F         	goto	i2l7909
 16807  003E4C                     i2u721_40:
 16808  003E4C                     
 16809                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 16810  003E4C  5008               	movf	i2EUSART_Async_Transmit_Data@data^0,w,c
 16811  003E4E  EC30  F02B         	call	i2_calc_parity_even
 16812  003E52  6E0A               	movwf	??i2_EUSART_Async_Transmit_Data^0,c
 16813  003E54  300A               	rrcf	??i2_EUSART_Async_Transmit_Data^0,w,c
 16814  003E56  A0D8               	btfss	status,0,c
 16815  003E58  D002               	bra	i2u722_45
 16816  003E5A  80AC               	bsf	172,0,c	;volatile
 16817  003E5C  D001               	bra	i2u722_47
 16818  003E5E                     i2u722_45:
 16819  003E5E  90AC               	bcf	172,0,c	;volatile
 16820  003E60                     i2u722_47:
 16821                           
 16822                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 16823  003E60  EF4E  F01F         	goto	i2l7913
 16824  003E64                     i2l7909:
 16825  003E64  EE20 F002          	lfsr	2,2
 16826  003E68  5006               	movf	i2EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 16827  003E6A  26D9               	addwf	fsr2l,f,c
 16828  003E6C  5007               	movf	(i2EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 16829  003E6E  22DA               	addwfc	fsr2h,f,c
 16830  003E70  50DF               	movf	223,w,c
 16831  003E72  0B03               	andlw	3
 16832  003E74  0A02               	xorlw	2
 16833  003E76  A4D8               	btfss	status,2,c
 16834  003E78  EF40  F01F         	goto	i2u723_41
 16835  003E7C  EF42  F01F         	goto	i2u723_40
 16836  003E80                     i2u723_41:
 16837  003E80  EF4E  F01F         	goto	i2l686
 16838  003E84                     i2u723_40:
 16839  003E84                     
 16840                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 16841  003E84  5008               	movf	i2EUSART_Async_Transmit_Data@data^0,w,c
 16842  003E86  ECFC  F02A         	call	i2_calc_parity_odd
 16843  003E8A  6E0A               	movwf	??i2_EUSART_Async_Transmit_Data^0,c
 16844  003E8C  300A               	rrcf	??i2_EUSART_Async_Transmit_Data^0,w,c
 16845  003E8E  A0D8               	btfss	status,0,c
 16846  003E90  D002               	bra	i2u724_45
 16847  003E92  80AC               	bsf	172,0,c	;volatile
 16848  003E94  D001               	bra	i2u724_47
 16849  003E96                     i2u724_45:
 16850  003E96  90AC               	bcf	172,0,c	;volatile
 16851  003E98                     i2u724_47:
 16852  003E98  EF4E  F01F         	goto	i2l7913
 16853  003E9C                     i2l686:
 16854  003E9C                     i2l7913:
 16855                           
 16856                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 16857  003E9C  C008  FFAD         	movff	i2EUSART_Async_Transmit_Data@data,4013	;volatile
 16858  003EA0                     i2l690:
 16859  003EA0  0012               	return		;funcret
 16860  003EA2                     __end_ofi2_EUSART_Async_Transmit_Data:
 16861                           	callstack 0
 16862                           
 16863 ;; *************** function i2_calc_parity_odd *****************
 16864 ;; Defined at:
 16865 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 16866 ;; Parameters:    Size  Location     Type
 16867 ;;  data            1    wreg     unsigned char 
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;  data            1    2[COMRAM] unsigned char 
 16870 ;;  l_counter       1    4[COMRAM] unsigned char 
 16871 ;;  number_of_on    1    3[COMRAM] unsigned char 
 16872 ;; Return value:  Size  Location     Type
 16873 ;;                  1    wreg      unsigned char 
 16874 ;; Registers used:
 16875 ;;		wreg, status,2, status,0
 16876 ;; Tracked objects:
 16877 ;;		On entry : 0/0
 16878 ;;		On exit  : 0/0
 16879 ;;		Unchanged: 0/0
 16880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16883 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16885 ;;Total ram usage:        5 bytes
 16886 ;; Hardware stack levels used: 1
 16887 ;; This function calls:
 16888 ;;		Nothing
 16889 ;; This function is called by:
 16890 ;;		i2_EUSART_Async_Transmit_Data
 16891 ;;		i2_EUSART_Async_Read_Data
 16892 ;; This function uses a non-reentrant model
 16893 ;;
 16894                           
 16895                           	psect	text97
 16896  0055F8                     __ptext97:
 16897                           	callstack 0
 16898  0055F8                     i2_calc_parity_odd:
 16899                           	callstack 18
 16900                           
 16901                           ;incstack = 0
 16902                           ;i2calc_parity_odd@data stored from wreg
 16903  0055F8  6E03               	movwf	i2calc_parity_odd@data^0,c
 16904  0055FA                     
 16905                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 16906  0055FA  0E00               	movlw	0
 16907  0055FC  6E04               	movwf	i2calc_parity_odd@number_of_ones^0,c
 16908                           
 16909                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 16910  0055FE  0E00               	movlw	0
 16911  005600  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 16912                           
 16913                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 16914  005602  0E00               	movlw	0
 16915  005604  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 16916  005606                     i2l7417:
 16917                           
 16918                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 16919  005606  C005  F001         	movff	i2calc_parity_odd@l_counter,??i2_calc_parity_odd
 16920  00560A  0E01               	movlw	1
 16921  00560C  6E02               	movwf	(??i2_calc_parity_odd+1)^0,c
 16922  00560E  2A01               	incf	??i2_calc_parity_odd^0,f,c
 16923  005610  EF0C  F02B         	goto	i2u660_44
 16924  005614                     i2u660_45:
 16925  005614  90D8               	bcf	status,0,c
 16926  005616  3602               	rlcf	(??i2_calc_parity_odd+1)^0,f,c
 16927  005618                     i2u660_44:
 16928  005618  2E01               	decfsz	??i2_calc_parity_odd^0,f,c
 16929  00561A  EF0A  F02B         	goto	i2u660_45
 16930  00561E  5002               	movf	(??i2_calc_parity_odd+1)^0,w,c
 16931  005620  1403               	andwf	i2calc_parity_odd@data^0,w,c
 16932  005622  0900               	iorlw	0
 16933  005624  B4D8               	btfsc	status,2,c
 16934  005626  EF17  F02B         	goto	i2u661_41
 16935  00562A  EF19  F02B         	goto	i2u661_40
 16936  00562E                     i2u661_41:
 16937  00562E  EF1A  F02B         	goto	i2l826
 16938  005632                     i2u661_40:
 16939  005632                     
 16940                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 16941  005632  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 16942  005634                     i2l826:
 16943                           
 16944                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 16945  005634  2A05               	incf	i2calc_parity_odd@l_counter^0,f,c
 16946  005636  0E07               	movlw	7
 16947  005638  6405               	cpfsgt	i2calc_parity_odd@l_counter^0,c
 16948  00563A  EF21  F02B         	goto	i2u662_41
 16949  00563E  EF23  F02B         	goto	i2u662_40
 16950  005642                     i2u662_41:
 16951  005642  EF03  F02B         	goto	i2l7417
 16952  005646                     i2u662_40:
 16953  005646                     
 16954                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 16955  005646  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 16956  005648                     
 16957                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 16958  005648  B004               	btfsc	i2calc_parity_odd@number_of_ones^0,0,c
 16959  00564A  EF29  F02B         	goto	i2u663_41
 16960  00564E  EF2B  F02B         	goto	i2u663_40
 16961  005652                     i2u663_41:
 16962  005652  EF2E  F02B         	goto	i2l7431
 16963  005656                     i2u663_40:
 16964  005656                     
 16965                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 16966  005656  0E01               	movlw	1
 16967  005658  EF2F  F02B         	goto	i2l828
 16968  00565C                     i2l7431:
 16969                           
 16970                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 16971  00565C  0E00               	movlw	0
 16972  00565E                     i2l828:
 16973  00565E  0012               	return		;funcret
 16974  005660                     __end_ofi2_calc_parity_odd:
 16975                           	callstack 0
 16976                           
 16977 ;; *************** function i2_calc_parity_even *****************
 16978 ;; Defined at:
 16979 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;  data            1    wreg     unsigned char 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  data            1    2[COMRAM] unsigned char 
 16984 ;;  l_counter       1    4[COMRAM] unsigned char 
 16985 ;;  number_of_on    1    3[COMRAM] unsigned char 
 16986 ;; Return value:  Size  Location     Type
 16987 ;;                  1    wreg      unsigned char 
 16988 ;; Registers used:
 16989 ;;		wreg, status,2, status,0
 16990 ;; Tracked objects:
 16991 ;;		On entry : 0/0
 16992 ;;		On exit  : 0/0
 16993 ;;		Unchanged: 0/0
 16994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16996 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16998 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16999 ;;Total ram usage:        5 bytes
 17000 ;; Hardware stack levels used: 1
 17001 ;; This function calls:
 17002 ;;		Nothing
 17003 ;; This function is called by:
 17004 ;;		i2_EUSART_Async_Transmit_Data
 17005 ;;		i2_EUSART_Async_Read_Data
 17006 ;; This function uses a non-reentrant model
 17007 ;;
 17008                           
 17009                           	psect	text98
 17010  005660                     __ptext98:
 17011                           	callstack 0
 17012  005660                     i2_calc_parity_even:
 17013                           	callstack 18
 17014                           
 17015                           ;incstack = 0
 17016                           ;i2calc_parity_even@data stored from wreg
 17017  005660  6E03               	movwf	i2calc_parity_even@data^0,c
 17018  005662                     
 17019                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 17020  005662  0E00               	movlw	0
 17021  005664  6E04               	movwf	i2calc_parity_even@number_of_ones^0,c
 17022                           
 17023                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 17024  005666  0E00               	movlw	0
 17025  005668  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 17026                           
 17027                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 17028  00566A  0E00               	movlw	0
 17029  00566C  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 17030  00566E                     i2l7441:
 17031                           
 17032                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 17033  00566E  C005  F001         	movff	i2calc_parity_even@l_counter,??i2_calc_parity_even
 17034  005672  0E01               	movlw	1
 17035  005674  6E02               	movwf	(??i2_calc_parity_even+1)^0,c
 17036  005676  2A01               	incf	??i2_calc_parity_even^0,f,c
 17037  005678  EF40  F02B         	goto	i2u664_44
 17038  00567C                     i2u664_45:
 17039  00567C  90D8               	bcf	status,0,c
 17040  00567E  3602               	rlcf	(??i2_calc_parity_even+1)^0,f,c
 17041  005680                     i2u664_44:
 17042  005680  2E01               	decfsz	??i2_calc_parity_even^0,f,c
 17043  005682  EF3E  F02B         	goto	i2u664_45
 17044  005686  5002               	movf	(??i2_calc_parity_even+1)^0,w,c
 17045  005688  1403               	andwf	i2calc_parity_even@data^0,w,c
 17046  00568A  0900               	iorlw	0
 17047  00568C  B4D8               	btfsc	status,2,c
 17048  00568E  EF4B  F02B         	goto	i2u665_41
 17049  005692  EF4D  F02B         	goto	i2u665_40
 17050  005696                     i2u665_41:
 17051  005696  EF4E  F02B         	goto	i2l833
 17052  00569A                     i2u665_40:
 17053  00569A                     
 17054                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 17055  00569A  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 17056  00569C                     i2l833:
 17057                           
 17058                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 17059  00569C  2A05               	incf	i2calc_parity_even@l_counter^0,f,c
 17060  00569E  0E07               	movlw	7
 17061  0056A0  6405               	cpfsgt	i2calc_parity_even@l_counter^0,c
 17062  0056A2  EF55  F02B         	goto	i2u666_41
 17063  0056A6  EF57  F02B         	goto	i2u666_40
 17064  0056AA                     i2u666_41:
 17065  0056AA  EF37  F02B         	goto	i2l7441
 17066  0056AE                     i2u666_40:
 17067  0056AE                     
 17068                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 17069  0056AE  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 17070  0056B0                     
 17071                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 17072  0056B0  A004               	btfss	i2calc_parity_even@number_of_ones^0,0,c
 17073  0056B2  EF5D  F02B         	goto	i2u667_41
 17074  0056B6  EF5F  F02B         	goto	i2u667_40
 17075  0056BA                     i2u667_41:
 17076  0056BA  EF62  F02B         	goto	i2l7455
 17077  0056BE                     i2u667_40:
 17078  0056BE                     
 17079                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 17080  0056BE  0E01               	movlw	1
 17081  0056C0  EF63  F02B         	goto	i2l835
 17082  0056C4                     i2l7455:
 17083                           
 17084                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 17085  0056C4  0E00               	movlw	0
 17086  0056C6                     i2l835:
 17087  0056C6  0012               	return		;funcret
 17088  0056C8                     __end_ofi2_calc_parity_even:
 17089                           	callstack 0
 17090                           
 17091                           	psect	text99
 17092  000000                     __ptext99:
 17093                           	callstack 0
 17094  000000                     
 17095                           	psect	rparam
 17096  0000                     
 17097                           	psect	temp
 17098  000042                     btemp:
 17099                           	callstack 0
 17100  000042                     	ds	1
 17101  0000                     int$flags	set	btemp
 17102  0000                     wtemp8	set	btemp+1
 17103  0000                     ttemp5	set	btemp+1
 17104  0000                     ttemp6	set	btemp+4
 17105  0000                     ttemp7	set	btemp+8
 17106                           
 17107                           	psect	idloc
 17108                           
 17109                           ;Config register IDLOC0 @ 0x200000
 17110                           ;	unspecified, using default values
 17111  200000                     	org	2097152
 17112  200000  FF                 	db	255
 17113                           
 17114                           ;Config register IDLOC1 @ 0x200001
 17115                           ;	unspecified, using default values
 17116  200001                     	org	2097153
 17117  200001  FF                 	db	255
 17118                           
 17119                           ;Config register IDLOC2 @ 0x200002
 17120                           ;	unspecified, using default values
 17121  200002                     	org	2097154
 17122  200002  FF                 	db	255
 17123                           
 17124                           ;Config register IDLOC3 @ 0x200003
 17125                           ;	unspecified, using default values
 17126  200003                     	org	2097155
 17127  200003  FF                 	db	255
 17128                           
 17129                           ;Config register IDLOC4 @ 0x200004
 17130                           ;	unspecified, using default values
 17131  200004                     	org	2097156
 17132  200004  FF                 	db	255
 17133                           
 17134                           ;Config register IDLOC5 @ 0x200005
 17135                           ;	unspecified, using default values
 17136  200005                     	org	2097157
 17137  200005  FF                 	db	255
 17138                           
 17139                           ;Config register IDLOC6 @ 0x200006
 17140                           ;	unspecified, using default values
 17141  200006                     	org	2097158
 17142  200006  FF                 	db	255
 17143                           
 17144                           ;Config register IDLOC7 @ 0x200007
 17145                           ;	unspecified, using default values
 17146  200007                     	org	2097159
 17147  200007  FF                 	db	255
 17148                           
 17149                           	psect	config
 17150                           
 17151                           ; Padding undefined space
 17152  300000                     	org	3145728
 17153  300000  FF                 	db	255
 17154                           
 17155                           ;Config register CONFIG1H @ 0x300001
 17156                           ;	Oscillator Selection bits
 17157                           ;	FOSC = HS, HS oscillator
 17158                           ;	Fail-Safe Clock Monitor Enable bit
 17159                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 17160                           ;	Internal/External Oscillator Switchover bit
 17161                           ;	IESO = OFF, Oscillator Switchover mode disabled
 17162  300001                     	org	3145729
 17163  300001  02                 	db	2
 17164                           
 17165                           ;Config register CONFIG2L @ 0x300002
 17166                           ;	Power-up Timer Enable bit
 17167                           ;	PWRT = OFF, PWRT disabled
 17168                           ;	Brown-out Reset Enable bits
 17169                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 17170                           ;	Brown Out Reset Voltage bits
 17171                           ;	BORV = 18, VBOR set to 1.8 V nominal
 17172  300002                     	org	3145730
 17173  300002  19                 	db	25
 17174                           
 17175                           ;Config register CONFIG2H @ 0x300003
 17176                           ;	Watchdog Timer Enable bit
 17177                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 17178                           ;	Watchdog Timer Postscale Select bits
 17179                           ;	WDTPS = 32768, 1:32768
 17180  300003                     	org	3145731
 17181  300003  1E                 	db	30
 17182                           
 17183                           ; Padding undefined space
 17184  300004                     	org	3145732
 17185  300004  FF                 	db	255
 17186                           
 17187                           ;Config register CONFIG3H @ 0x300005
 17188                           ;	CCP2 MUX bit
 17189                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 17190                           ;	PORTB A/D Enable bit
 17191                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 17192                           ;	Low-Power Timer1 Oscillator Enable bit
 17193                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 17194                           ;	HFINTOSC Fast Start-up
 17195                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
 17196                           ;	MCLR Pin Enable bit
 17197                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17198  300005                     	org	3145733
 17199  300005  81                 	db	129
 17200                           
 17201                           ;Config register CONFIG4L @ 0x300006
 17202                           ;	Stack Full/Underflow Reset Enable bit
 17203                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17204                           ;	Single-Supply ICSP Enable bit
 17205                           ;	LVP = OFF, Single-Supply ICSP disabled
 17206                           ;	Extended Instruction Set Enable bit
 17207                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17208                           ;	Background Debugger Enable bit
 17209                           ;	DEBUG = 0x1, unprogrammed default
 17210  300006                     	org	3145734
 17211  300006  81                 	db	129
 17212                           
 17213                           ; Padding undefined space
 17214  300007                     	org	3145735
 17215  300007  FF                 	db	255
 17216                           
 17217                           ;Config register CONFIG5L @ 0x300008
 17218                           ;	Code Protection Block 0
 17219                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 17220                           ;	Code Protection Block 1
 17221                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 17222                           ;	Code Protection Block 2
 17223                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 17224                           ;	Code Protection Block 3
 17225                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 17226  300008                     	org	3145736
 17227  300008  0F                 	db	15
 17228                           
 17229                           ;Config register CONFIG5H @ 0x300009
 17230                           ;	Boot Block Code Protection bit
 17231                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 17232                           ;	Data EEPROM Code Protection bit
 17233                           ;	CPD = OFF, Data EEPROM not code-protected
 17234  300009                     	org	3145737
 17235  300009  C0                 	db	192
 17236                           
 17237                           ;Config register CONFIG6L @ 0x30000A
 17238                           ;	Write Protection Block 0
 17239                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 17240                           ;	Write Protection Block 1
 17241                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 17242                           ;	Write Protection Block 2
 17243                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 17244                           ;	Write Protection Block 3
 17245                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 17246  30000A                     	org	3145738
 17247  30000A  0F                 	db	15
 17248                           
 17249                           ;Config register CONFIG6H @ 0x30000B
 17250                           ;	Configuration Register Write Protection bit
 17251                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 17252                           ;	Boot Block Write Protection bit
 17253                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 17254                           ;	Data EEPROM Write Protection bit
 17255                           ;	WRTD = OFF, Data EEPROM not write-protected
 17256  30000B                     	org	3145739
 17257  30000B  E0                 	db	224
 17258                           
 17259                           ;Config register CONFIG7L @ 0x30000C
 17260                           ;	Table Read Protection Block 0
 17261                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 17262                           ;	Table Read Protection Block 1
 17263                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 17264                           ;	Table Read Protection Block 2
 17265                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 17266                           ;	Table Read Protection Block 3
 17267                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 17268  30000C                     	org	3145740
 17269  30000C  0F                 	db	15
 17270                           
 17271                           ;Config register CONFIG7H @ 0x30000D
 17272                           ;	Boot Block Table Read Protection bit
 17273                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 17274  30000D                     	org	3145741
 17275  30000D  40                 	db	64
 17276                           tosu	equ	0xFFF
 17277                           tosh	equ	0xFFE
 17278                           tosl	equ	0xFFD
 17279                           stkptr	equ	0xFFC
 17280                           pclatu	equ	0xFFB
 17281                           pclath	equ	0xFFA
 17282                           pcl	equ	0xFF9
 17283                           tblptru	equ	0xFF8
 17284                           tblptrh	equ	0xFF7
 17285                           tblptrl	equ	0xFF6
 17286                           tablat	equ	0xFF5
 17287                           prodh	equ	0xFF4
 17288                           prodl	equ	0xFF3
 17289                           indf0	equ	0xFEF
 17290                           postinc0	equ	0xFEE
 17291                           postdec0	equ	0xFED
 17292                           preinc0	equ	0xFEC
 17293                           plusw0	equ	0xFEB
 17294                           fsr0h	equ	0xFEA
 17295                           fsr0l	equ	0xFE9
 17296                           wreg	equ	0xFE8
 17297                           indf1	equ	0xFE7
 17298                           postinc1	equ	0xFE6
 17299                           postdec1	equ	0xFE5
 17300                           preinc1	equ	0xFE4
 17301                           plusw1	equ	0xFE3
 17302                           fsr1h	equ	0xFE2
 17303                           fsr1l	equ	0xFE1
 17304                           bsr	equ	0xFE0
 17305                           indf2	equ	0xFDF
 17306                           postinc2	equ	0xFDE
 17307                           postdec2	equ	0xFDD
 17308                           preinc2	equ	0xFDC
 17309                           plusw2	equ	0xFDB
 17310                           fsr2h	equ	0xFDA
 17311                           fsr2l	equ	0xFD9
 17312                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        101
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      65
    BANK0           160     83     160
    BANK1           256     27     129
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    _uart_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> usart_isr(), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    CCP_Interrupt_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S5332$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5332$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    send_trig_pulse@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Get_Distance@distance	PTR float  size(2) Largest target is 4
		 -> distance(BANK0[4]), 

    Ultra_Sonic_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Ultra_Sonic_Init@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    DHT11_Read_Data@data	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(BANK0[1]), T_Integral(BANK0[1]), T_Decimal(BANK0[1]), RH_Integral(BANK0[1]), 
		 -> RH_Decimal(BANK0[1]), 

    Get_Temp_HUM@Checksum	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(BANK0[1]), 

    Get_Temp_HUM@T_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> T_Integral(BANK0[1]), 

    Get_Temp_HUM@T_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> T_Decimal(BANK0[1]), 

    Get_Temp_HUM@RH_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Integral(BANK0[1]), 

    Get_Temp_HUM@RH_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Decimal(BANK0[1]), 

    Timer2_Init@_timer2	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    Timer1_Preload_Value@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_RW_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Prescaler_Config@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3608$Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    HAL_Timer0_Write_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Read_Val@result	PTR unsigned short  size(2) Largest target is 2
		 -> Get_Distance@timer_val(BANK0[2]), 

    HAL_Timer0_Read_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3103$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3103$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3056$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Slave_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Write_Blocking@_ack	PTR unsigned char  size(2) Largest target is 1
		 -> PCA_Write_Reg@ack(COMRAM[1]), 

    MSSP_I2C_Master_Write_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Stop@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Start@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), driller_PIN(BANK0[1]), TEST_PIN(BANK0[1]), ultrasonic(BANK0[2]), 
		 -> stepper_base.dir_pin(BANK0[1]), stepper_base.step_pin(BANK0[1]), stepper_base(BANK0[2]), CCP2_Obj(BANK1[12]), 
		 -> CCP1_Obj(BANK1[12]), W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> driller_PIN(BANK0[1]), TEST_PIN(BANK0[1]), 

    GPIO_Pin_Read_Logic@logic	PTR enum E3185 size(2) Largest target is 1
		 -> Get_Distance@logic(BANK0[1]), 

    GPIO_Pin_Read_Logic@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), driller_PIN(BANK0[1]), TEST_PIN(BANK0[1]), ultrasonic(BANK0[2]), 
		 -> stepper_base.dir_pin(BANK0[1]), stepper_base.step_pin(BANK0[1]), stepper_base(BANK0[2]), CCP2_Obj(BANK1[12]), 
		 -> CCP1_Obj(BANK1[12]), W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), driller_PIN(BANK0[1]), TEST_PIN(BANK0[1]), ultrasonic(BANK0[2]), 
		 -> stepper_base.dir_pin(BANK0[1]), stepper_base.step_pin(BANK0[1]), stepper_base(BANK0[2]), CCP2_Obj(BANK1[12]), 
		 -> CCP1_Obj(BANK1[12]), W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllh[1]), PORTD(BITBIGSFRllllh[1]), PORTC(BITBIGSFRllllh[1]), PORTB(BITBIGSFRllllh[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_config_baud_rate_gen@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    Rx_config_interrupt@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_Rx_config@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Tx_config@_tx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Read_Data_Blocking@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), 

    EUSART_Async_Read_Data_Blocking@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(BANK0[2]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Init@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    CCP_Compare_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Capture_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Mode_Timer_Select@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Start@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    adc_select_voltage_reference@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    adc_select_result_formate@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Get_Conversion_Blocking@_result	PTR unsigned short  size(2) Largest target is 2
		 -> battery_volt_adc_read(COMRAM[2]), 

    ADC_Get_Conversion_Blocking@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Get_Conversion_Results@_result	PTR unsigned short  size(2) Largest target is 2
		 -> battery_volt_adc_read(COMRAM[2]), 

    ADC_Get_Conversion_Results@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Start_Conversion@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_select_channel@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    stepper_move_one_deg_ccw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(BANK0[2]), 

    stepper_move_one_deg_cw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(BANK0[2]), 

    Ecu_Stepper_Init@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(BANK0[2]), 

    PCA_Write_Reg@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    Servo_SetAngle@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    Servo_SetAngle@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    ServoDriver_Init@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    ServoDriver_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 0

    ECU_DC_Motor_Run_Right@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Run_Left@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Init@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _main->_GPS_Service
    _main->___fltol
    _main->_stepper_move_one_deg_ccw
    _main->_stepper_move_one_deg_cw
    _stepper_move_one_deg_cw->_GPIO_Pin_Write_Logic
    _stepper_move_one_deg_ccw->_GPIO_Pin_Write_Logic
    _ADC_Get_Conversion_Blocking->_ADC_select_channel
    _ADC_select_channel->_adc_channel_pin_config_as_input
    _Ultra_Sonic_Init->_HAL_Timer0_Init
    _HAL_Timer0_Init->_HAL_Timer0_Write_Val
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _CCP_Init->_CCP_Capture_Mode_Config
    _CCP_Init->_CCP_Compare_Mode_Config
    _CCP_PWM_Mode_Config->_Timer2_Init
    _CCP_Compare_Mode_Config->_CCP_Mode_Timer_Select
    _CCP_Capture_Mode_Config->_CCP_Mode_Timer_Select
    _Ecu_Stepper_Init->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _async_config_baud_rate_gen->___fltol
    _async_Rx_config->_Rx_config_interrupt
    _ADC_Init->_adc_channel_pin_config_as_input
    _ADC_Init->_adc_select_result_formate
    _ADC_Init->_adc_select_voltage_reference
    ___awmod->___fltol
    ___awdiv->___fltol
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Servo_SetAngle->___fltol
    _PCA_Write_Reg->_MSSP_I2C_Master_Write_Blocking
    _CCP_PWM_Set_Duty->___fltol
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Temp_HUM->_DHT11_Read_Data
    _Get_Distance->_HAL_Timer0_Read_Val
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___xxtofl->___wmul
    ___fldiv->___wmul
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd
    _Bluetooth_Send_Data_Non_Blocking->___fltol
    _EUSART_Async_Transmit_Data->_calc_parity_even
    _EUSART_Async_Transmit_Data->_calc_parity_odd

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _usart_isr->i2_EUSART_Async_Read_Data
    i2_EUSART_Async_Read_Data->i2_calc_parity_even
    i2_EUSART_Async_Read_Data->i2_calc_parity_odd
    i2_Bluetooth_Send_Data_Non_Blocking->i2_EUSART_Async_Transmit_Data
    i2_EUSART_Async_Transmit_Data->i2_calc_parity_even
    i2_EUSART_Async_Transmit_Data->i2_calc_parity_odd

Critical Paths under _main in BANK0

    _main->_Servo_SetAngle
    _stepper_move_one_deg_cw->_GPIO_Pin_Write_Logic
    _stepper_move_one_deg_ccw->_GPIO_Pin_Write_Logic
    _battery_level->___fldiv
    _ADC_Get_Conversion_Blocking->_ADC_Get_Conversion_Results
    _application_intialize->_EUSART_Async_Init
    _application_intialize->_Servo_SetAngle
    _Ultra_Sonic_Init->_GPIO_Pin_Initialize
    _Robot_Nav_Init->_CCP_PWM_Set_Duty
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fladd
    _ECU_DC_Motor_Init->_GPIO_Pin_Initialize
    _CCP_Init->_GPIO_Pin_Initialize
    _Ecu_Stepper_Init->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fladd
    ___awdiv->___awmod
    _Robot_Steer_Right_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Forward->_Servo_SetAngle
    _Robot_Steer_Right_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Backward->_Servo_SetAngle
    _Robot_Steer_Right->_CCP_PWM_Set_Duty
    _Robot_Steer_Right->_Servo_SetAngle
    _Robot_Steer_Left_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Forward->_Servo_SetAngle
    _Robot_Steer_Left_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Backward->_Servo_SetAngle
    _Robot_Steer_Left->_CCP_PWM_Set_Duty
    _Robot_Steer_Left->_Servo_SetAngle
    _Robot_Move_Forward->_CCP_PWM_Set_Duty
    _Robot_Move_Forward->_Servo_SetAngle
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Robot_Move_Backward->_CCP_PWM_Set_Duty
    _Robot_Move_Backward->_Servo_SetAngle
    _Servo_SetAngle->___fladd
    ___fladd->___flmul
    _Robot_Steer_Stop->_CCP_PWM_Set_Duty
    ___fltol->___fladd
    ___flmul->___fldiv
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Distance->___fldiv
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _GPS_Service->_EUSART_Async_Read_Data_Blocking
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _Bluetooth_Send_Data_Non_Blocking->___awmod

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Bluetooth_Send_Data_Non_Blocking
    _application_intialize->_EUSART_Async_Init
    _Robot_Nav_Init->_CCP_PWM_Set_Duty
    _ServoDriver_Init->_MSSP_I2C_Init
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fltol
    ___awmod->___fltol
    ___awdiv->___awmod
    _Robot_Steer_Right_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left->_CCP_PWM_Set_Duty
    _Robot_Move_Forward->_CCP_PWM_Set_Duty
    _Robot_Move_Backward->_CCP_PWM_Set_Duty
    _Servo_SetAngle->___fltol
    _Robot_Steer_Stop->_CCP_PWM_Set_Duty
    _CCP_PWM_Set_Duty->___fltol
    _Bluetooth_Send_Data_Non_Blocking->___awdiv

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  723762
                                             23 BANK1      4     4      0
   _Bluetooth_Send_Data_Non_Blocking
              _GPIO_Pin_Toggle_Logic
                        _GPS_Service
                       _Get_Distance
                       _Get_Temp_HUM
                _Robot_Move_Backward
                 _Robot_Move_Forward
                   _Robot_Steer_Left
          _Robot_Steer_Left_Backward
           _Robot_Steer_Left_Forward
                  _Robot_Steer_Right
         _Robot_Steer_Right_Backward
          _Robot_Steer_Right_Forward
                   _Robot_Steer_Stop
                     _Servo_SetAngle
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
              _application_intialize
                      _battery_level
           _stepper_move_one_deg_ccw
            _stepper_move_one_deg_cw
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_cw                              4     2      2    6479
                                             33 COMRAM     4     2      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_ccw                             4     2      2    6479
                                             33 COMRAM     4     2      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _battery_level                                        0     0      0    7533
        _ADC_Get_Conversion_Blocking
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     962
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Blocking                          7     2      5    1722
                                              5 BANK0      7     2      5
         _ADC_Get_Conversion_Results
               _ADC_Start_Conversion
                 _ADC_select_channel
 ---------------------------------------------------------------------------------
 (3) _ADC_select_channel                                   5     2      3     531
                                             32 COMRAM     5     2      3
    _adc_channel_pin_config_as_input
 ---------------------------------------------------------------------------------
 (3) _ADC_Start_Conversion                                 3     1      2     248
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Get_Conversion_Results                          10     6      4     434
                                             29 COMRAM     5     1      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0  123715
                                             21 BANK1      1     1      0
                           _ADC_Init
                  _EUSART_Async_Init
                   _Ecu_Stepper_Init
                _GPIO_Pin_Initialize
                     _Robot_Nav_Init
                     _Servo_SetAngle
                   _Ultra_Sonic_Init
 ---------------------------------------------------------------------------------
 (2) _Ultra_Sonic_Init                                     5     1      4    9706
                                              9 BANK0      4     0      4
                _GPIO_Pin_Initialize
                    _HAL_Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _HAL_Timer0_Init                                      4     2      2     937
                                             34 COMRAM     3     1      2
               _HAL_Timer0_Write_Val
 ---------------------------------------------------------------------------------
 (2) _Robot_Nav_Init                                       1     1      0   47194
                           _CCP_Init
                   _CCP_PWM_Set_Duty
                      _CCP_PWM_Start
                  _ECU_DC_Motor_Init
                   _ServoDriver_Init
 ---------------------------------------------------------------------------------
 (3) _ServoDriver_Init                                     5     1      4   14769
                                             10 BANK1      4     0      4
                      _MSSP_I2C_Init
                      _PCA_Write_Reg
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Init                                        3     1      2   10790
                                              8 BANK1      2     0      2
_I2C_Master_Mode_Clock_Configuration
             _I2C_Pin_Configurations
_I2C_Slave_Mode_Clock_Configurations
 ---------------------------------------------------------------------------------
 (5) _I2C_Slave_Mode_Clock_Configurations                  4     2      2     158
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Pin_Configurations                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Mode_Clock_Configurations                 4     2      2   10157
                                             80 BANK0      3     1      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _ECU_DC_Motor_Init                                    3     1      2    8676
                                              9 BANK0      2     0      2
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Start                                        4     2      2     289
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Init                                             4     2      2   10707
                                              9 BANK0      3     1      2
            _CCP_Capture_Mode_Config
            _CCP_Compare_Mode_Config
               _CCP_Interrupt_Config
                _CCP_PWM_Mode_Config
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (4) _CCP_PWM_Mode_Config                                  3     1      2     534
                                             32 COMRAM     3     1      2
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (5) _Timer2_Init                                          4     2      2     258
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Interrupt_Config                                 2     0      2      90
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Compare_Mode_Config                              5     3      2     558
                                             32 COMRAM     5     3      2
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (4) _CCP_Capture_Mode_Config                              5     3      2     558
                                             32 COMRAM     5     3      2
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (5) _CCP_Mode_Timer_Select                                3     1      2     273
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Init                                     2     0      2   15542
                                              9 BANK0      2     0      2
      _GPIO_Pin_Direction_Initialize
                _GPIO_Pin_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    8421
                                              6 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     617
                                             29 COMRAM     8     6      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Init                                    3     1      2   11824
                                             82 BANK0      1     1      0
                                             19 BANK1      2     0      2
                    _async_Rx_config
                    _async_Tx_config
         _async_config_baud_rate_gen
 ---------------------------------------------------------------------------------
 (3) _async_config_baud_rate_gen                          13    11      2   10497
                                             80 BANK0      2     0      2
                                              8 BANK1     11    11      0
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _async_Tx_config                                      3     1      2     282
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _async_Rx_config                                      3     1      2     629
                                             32 COMRAM     3     1      2
                _Rx_config_interrupt
 ---------------------------------------------------------------------------------
 (4) _Rx_config_interrupt                                  3     1      2     313
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     753
                                             32 COMRAM     3     1      2
    _adc_channel_pin_config_as_input
          _adc_select_result_formate
       _adc_select_voltage_reference
 ---------------------------------------------------------------------------------
 (3) _adc_select_voltage_reference                         4     2      2     196
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _adc_select_result_formate                            4     2      2     196
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _adc_channel_pin_config_as_input                      4     4      0      41
                                             29 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1333
                                             80 BANK0      2     2      0
                                              8 BANK1      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                             12 BANK1      8     4      4
                            ___awmod (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Forward                            1     1      0   62953
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Backward                           1     1      0   62593
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right                                    1     1      0   62953
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Forward                             1     1      0   62953
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Backward                            1     1      0   62593
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left                                     1     1      0   62953
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Forward                                   1     1      0   62953
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Right                               3     1      2    7172
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Backward                                  1     1      0   62593
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _Servo_SetAngle                                      10     4      6   30275
                                             80 BANK0      3     3      0
                                              8 BANK1      6     0      6
                      _PCA_Write_Reg
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    4002
                                             64 BANK0     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PCA_Write_Reg                                        6     1      5    3414
                                             34 COMRAM     1     1      0
                                              0 BANK0      5     0      5
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Write_Blocking                       6     1      5     978
                                             29 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Send_Stop                            3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Send_Start                           3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Stop                                     1     1      0   12753
                   _CCP_PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Set_Duty                                    12     9      3   12743
                                             80 BANK0      3     0      3
                                              8 BANK1      8     8      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1117
                                             35 COMRAM     2     2      0
                                              0 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2873
                                             39 BANK0     25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Left                                3     1      2    6812
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Get_Temp_HUM                                        11     1     10    1446
                                              0 BANK0     10     0     10
               _DHT11_Check_Response
                    _DHT11_Read_Data
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Data                                      4     2      2     673
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Check_Response                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Distance                                        10     4      6   13627
                                             39 BANK0      9     3      6
                _GPIO_Pin_Read_Logic
                _HAL_Timer0_Read_Val
               _HAL_Timer0_Write_Val
                            ___fldiv
                           ___xxtofl
                    _send_trig_pulse
 ---------------------------------------------------------------------------------
 (2) _send_trig_pulse                                      2     0      2    6349
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1226
                                              0 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3623
                                             14 BANK0     25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _HAL_Timer0_Write_Val                                 5     1      4     490
                                             29 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _HAL_Timer0_Read_Val                                 11     7      4     490
                                             29 COMRAM     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Read_Logic                                 10     6      4     739
                                             29 COMRAM     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Service                                          3     3      0    8824
                                             36 COMRAM     1     1      0
                                             16 BANK0      2     2      0
    _EUSART_Async_Read_Data_Blocking
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Write_Logic                                10     7      3    6197
                                             29 COMRAM     4     1      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Read_Data_Blocking                      5     1      4    2559
                                             12 BANK0      4     0      4
             _EUSART_Async_Read_Data
 ---------------------------------------------------------------------------------
 (3) _EUSART_Async_Read_Data                              15    11      4    1522
                                             34 COMRAM     2     2      0
                                              0 BANK0     12     8      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     341
                                             29 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _Bluetooth_Send_Data_Non_Blocking                     4     1      3    2654
                                             20 BANK1      3     0      3
         _EUSART_Async_Transmit_Data
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Transmit_Data                           7     3      4     998
                                             34 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (4) _calc_parity_odd                                      5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _calc_parity_even                                     5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  3     3      0     148
                                             26 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 6     6      0    1484
                                             19 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Rx_ISR                                       0     0      0    1484
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (11) _usart_isr                                           0     0      0    1484
 i2_Bluetooth_Send_Data_Non_Blocking
           i2_EUSART_Async_Read_Data
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Async_Read_Data                           15    11      4     768
                                              5 COMRAM    14    10      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (12) i2_Bluetooth_Send_Data_Non_Blocking                  4     1      3     616
                                             11 COMRAM     3     0      3
       i2_EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (13) i2_EUSART_Async_Transmit_Data                        7     3      4     490
                                              5 COMRAM     6     2      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_odd                                   5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_even                                  5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bluetooth_Send_Data_Non_Blocking
     _EUSART_Async_Transmit_Data
       _calc_parity_even
       _calc_parity_odd
     ___awdiv (ARG)
       ___awmod (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
       ___fltol (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
     ___fltol (ARG)
   _GPIO_Pin_Toggle_Logic
   _GPS_Service
     _EUSART_Async_Read_Data_Blocking
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
     _GPIO_Pin_Write_Logic
   _Get_Distance
     _GPIO_Pin_Read_Logic
     _HAL_Timer0_Read_Val
     _HAL_Timer0_Write_Val
     ___fldiv
     ___xxtofl
     _send_trig_pulse
       _GPIO_Pin_Write_Logic
   _Get_Temp_HUM
     _DHT11_Check_Response
     _DHT11_Read_Data
     _DHT11_Start
   _Robot_Move_Backward
     _CCP_PWM_Set_Duty
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _ECU_DC_Motor_Run_Left
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
       _CCP_PWM_Set_Duty
     _Servo_SetAngle
       _PCA_Write_Reg
         _MSSP_I2C_Master_Send_Start
         _MSSP_I2C_Master_Send_Stop
         _MSSP_I2C_Master_Write_Blocking
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
   _Robot_Move_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Backward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Left
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Backward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Left
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Stop
   _Servo_SetAngle
   ___awdiv
   ___awmod
   ___fldiv
   ___fltol
   _application_intialize
     _ADC_Init
       _adc_channel_pin_config_as_input
       _adc_select_result_formate
       _adc_select_voltage_reference
     _EUSART_Async_Init
       _async_Rx_config
         _Rx_config_interrupt
       _async_Tx_config
       _async_config_baud_rate_gen
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
     _Ecu_Stepper_Init
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Initialize
     _Robot_Nav_Init
       _CCP_Init
         _CCP_Capture_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Compare_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Interrupt_Config
         _CCP_PWM_Mode_Config
           _Timer2_Init
         _GPIO_Pin_Initialize
       _CCP_PWM_Set_Duty
       _CCP_PWM_Start
       _ECU_DC_Motor_Init
         _GPIO_Pin_Initialize
       _ServoDriver_Init
         _MSSP_I2C_Init
           _I2C_Master_Mode_Clock_Configurations
             ___fladd
             ___fldiv
             ___fltol
             ___xxtofl
           _I2C_Pin_Configurations
           _I2C_Slave_Mode_Clock_Configurations
         _PCA_Write_Reg
     _Servo_SetAngle
     _Ultra_Sonic_Init
       _GPIO_Pin_Initialize
       _HAL_Timer0_Init
         _HAL_Timer0_Write_Val
   _battery_level
     _ADC_Get_Conversion_Blocking
       _ADC_Get_Conversion_Results
       _ADC_Start_Conversion
       _ADC_select_channel
         _adc_channel_pin_config_as_input
     ___fldiv
     ___wmul
     ___xxtofl
   _stepper_move_one_deg_ccw
     _GPIO_Pin_Write_Logic
   _stepper_move_one_deg_cw
     _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       i2_Bluetooth_Send_Data_Non_Blocking
         i2_EUSART_Async_Transmit_Data
           i2_calc_parity_even
           i2_calc_parity_odd
       i2_EUSART_Async_Read_Data
         i2_calc_parity_even
         i2_calc_parity_odd
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1B      81       7       50.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      41       1       69.1%
BITBIGSFRlllll      20      0       0      48        0.0%
BITBIGSFRhhhhll     18      0       0      38        0.0%
BITBIGSFRhhhhh       D      0       0      37        0.0%
BITBIGSFRllhhll      9      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      43        0.0%
BITBIGSFRllhhll      6      0       0      45        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRlllh        4      0       0      46        0.0%
BITBIGSFRhhhhll      3      0       0      39        0.0%
BITBIGSFRllhhll      1      0       0      42        0.0%
BITBIGSFRllhhlh      1      0       0      41        0.0%
BITBIGSFRllhhh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     162      12        0.0%
DATA                 0      0     162       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 24 08:02:31 2023

                                 _RH_Integral 00DC                     ?_stepper_move_one_deg_ccw 0022  
                                ___fldiv@aexp 0086                                  ___fldiv@bexp 0085  
                                           _i 0036                                  ___fldiv@sign 007E  
                                 _SSPSTATbits 000FC7                                            l32 5ACA  
                                          l60 5BF2                                            l55 5C3E  
                                          l65 5BCA                                  ___awdiv@sign 0177  
                                          bsr 000FE0                         ??_InterruptManagerLow 001B  
                         ___wmul@multiplicand 0020                ECU_DC_Motor_Run_Right@dc_motor 0022  
          __end_of_async_config_baud_rate_gen 225A                    _async_config_baud_rate_gen 1E90  
                                         l300 4046                                           l310 3CD8  
                                         l313 572C                                           l325 5218  
                                         l342 5114                                           l513 3AF0  
                                         l417 4710                                           l450 3F78  
                                         l427 508C                                           l516 3B0E  
           ADC_Get_Conversion_Results@_result 0020                                           l349 519C  
                                         l534 2F3C                                           l382 4D4A  
                                         l543 58AA                                           l472 578C  
                                         l384 4DC8                                           l457 584C  
                                         l465 5760                                           l706 27E4  
                                         l474 5790                                           l394 59C8  
                                         l459 584E                                           l803 4CB0  
                                         l619 30A4                                           l563 4C90  
                                         l572 5302                                           l469 5784  
                                         l821 2258                                           l397 5C84  
                                         l806 4D2E                                           l566 5D44  
                                         l727 2800                                           l815 1ECA  
                                         l575 5302                                           l399 5C88  
                                         l728 2804                                           l672 57AA  
                                         l833 55CC                                           l921 5372  
                                         l753 547C                                           l809 4D32  
                                         l817 1F88                                           l826 5564  
                                         l690 3BF4                                           l818 2046  
                                         l674 57F0                                           l835 55F6  
                                         l819 2104                                           l828 558E  
                                         l916 4B48                                           l596 3490  
                                         l693 2628                                           l909 36FC  
                                         l686 3BF0                                           l758 54BA  
                                         l782 4E58                                           l926 5950  
                                         l759 54BE                                           l792 4A98  
                                         l776 4E34                                           l890 3350  
                                         l795 4A9A                                           l779 4E56  
                                         l789 4A72                                           l990 352C  
                                         l984 34AA                                           l999 35CC  
                                         _PR2 000FCB                              _calc_parity_even 5590  
                      ??_InterruptManagerHigh 0014                                           _gps 003F  
                   _RB5_InterruptHandler_HIGH 002C                               __end_of_ADC_ISR 5D48  
                                ___awmod@sign 00B1      GPIO_Pin_Direction_Initialize@ERRORSTATUS 0060  
                                         prod 000FF3                                           tosl 000FFD  
                                         wreg 000FE8                                    _TXSTA1bits 000FAC  
                                ___flmul@aexp 0094                                  ___flmul@bexp 0099  
                                ___flmul@sign 0093                                  ___flmul@temp 009E  
                                ___flmul@prod 009A                        ??_GPIO_Pin_Write_Logic 0060  
                                 _stepper_pos 0038                        ??_HAL_Timer0_Write_Val 0022  
                             __end_of_RB4_ISR 5D34                               __end_of_RB5_ISR 5D1A  
                             __end_of_RB6_ISR 5D00                               __end_of_RB7_ISR 5CE6  
                                ___fltol@exp1 0025                                          l1010 5A18  
                                        l1002 35CE                                          l1012 5A1A  
                                        l1100 5D38                                          l1014 5A28  
                                        l1030 59E2                                          l1032 59F0  
                                        l1017 5A38                                          l1042 54EC  
                                        l2003 31C0                                          l1035 5A00  
                                        l1028 59E0                                          l1044 54FA  
                                        l2021 5C18                                          l1038 54E8  
                                        l2015 320C                                          l1047 5526  
                                        l2018 5292                                          l1092 493A  
                                        l1510 392C                                          l1097 5A6A  
                                        l1700 4592                                          l2252 41D2  
                                        l1533 49EC                                          l1517 3A14  
                                        l2318 3914                                          l1703 4652  
                                        l1712 47CA                                          l1632 53FA  
                                        l1537 5B76                                          l1801 3722  
                                        l1721 4352                                          l2265 410C  
                                        l1538 5B78                                          l1706 4292  
                                        l1634 5450                                          l2603 25F4  
                                        l1715 4884                                          l1812 5B22  
                                        l1724 44D2                                          l2605 2454  
                                        l1805 3772                                          l1709 4412  
                                        l2614 249A                                          l1718 5C64  
                                        l2550 1780                                          l1751 5ACC  
                                        l2551 1746                                          l2616 2512  
                                        l2608 2418                                          l1808 37A2  
                                        l1760 5AF6                                          l2617 2500  
                                        l1809 380C                                          l1745 4BEE  
                                        l1754 5ADA                                          l1770 4EC8  
                                        l2642 1D20                                          l2635 1B2A  
                                        l1748 5CCA                                          l2652 1E50  
                                        l2644 1D98                                          l1757 5AE8  
                                        l1773 4EE8                                          l1765 4E6A  
                                        l2645 1D86                                          l2549 1792  
                                        l2566 18AC                                          l2558 1A62  
                                        l2639 1E8E                                          l2575 197C  
                                        l2576 196A                                          l1952 14B0  
                                        l1697 5002                                          l2690 2D4C  
                                        l2683 2CF0                                          l2676 2C58  
                                        l1798 5900                                          l2679 2DB4  
                                        l1994 2BFC                                          STR_1 1014  
                                        STR_2 1034                                          STR_3 1025  
                                        STR_4 1001                                          STR_5 1043  
                                        STR_9 1040                         _battery_volt_adc_read 003A  
                                        _LATA 000F89                                          _LATB 000F8A  
                                        _LATC 000F8B                                          _LATD 000F8C  
                                        _LATE 000F8D                                          i2l32 5BA2  
                                        _RX9D 007D58                                          _TMR2 000FCC  
                       ??_CCP_PWM_Mode_Config 0023                       ??_application_intialize 017B  
            __end_ofi2_EUSART_Async_Read_Data 2A10                      _RB4_InterruptHandler_LOW 002E  
                   ??_CCP_Capture_Mode_Config 0023                                          _blue 003E  
                                        _main 1048                      _RB7_InterruptHandler_LOW 00B7  
                                        fsr2h 000FDA                                          indf2 000FDF  
                                        fsr1l 000FE1                                          fsr2l 000FD9  
                                        btemp 0042                              __end_of_ADC_Init 4DCA  
                                        prodh 000FF4                                          prodl 000FF3  
                                        start 0286               __end_of_CCP_Compare_Mode_Config 30A6  
            GPIO_Pin_Toggle_Logic@_pin_config 001E            i2GPIO_Pin_Toggle_Logic@_pin_config 0001  
                           ??_HAL_Timer0_Init 0025                               ___fldiv@new_exp 007F  
                       __end_of_CCP_PWM_Start 58AC                       ?_EUSART_Async_Read_Data 0060  
      i2Bluetooth_Send_Data_Non_Blocking@data 000E          Bluetooth_Send_Data_Non_Blocking@data 017C  
                       _CCP_PWM_Set_Duty$5827 0170                              __end_of_CCP_Init 3B10  
                        __end_of_Get_Distance 380E                                  ___param_bank 000000  
                                fp__usart_isr 0000                                  _stepper_base 00F8  
              ??_adc_select_voltage_reference 0020                              __end_of_INT1_ISR 5D44  
                  __end_ofi2_calc_parity_even 56C8                                         l11011 53FC  
                                       l11021 5294                                         l11013 5436  
                                       l11005 53E4                                         l11101 35AA  
                                       l11111 56D8                                         l11031 52FA  
                                       l11023 52B0                                         l11015 5442  
                                       l11007 53E4                                         l11103 35B0  
                                       l11113 56F0                                         l11121 3EA8  
                                       l11025 52B8                                         l11017 544E  
                                       l11009 53F6                                         l11041 48B8  
                                       l11033 4886                                         l11105 35CA  
                                       l11115 5708                                         l11107 56C8  
                                       l12011 3C1A                                         l12003 3BF6  
                                       l11131 3EC6                                         l11123 3EAE  
                                       l11027 52D4                                         l11211 2F6A  
                                       l11203 2F3E                                         l11035 4886  
                                       l11051 5D34                                         l11043 5A3A  
                                       l11301 5536                                         l11117 5720  
                                       l11109 56CC                                         l10501 15F0  
                                       l12013 3C92                                         l12005 3BF6  
                                       l11141 3EE4                                         l11133 3ECC  
                                       l11125 3EB4                                         l11061 594E  
                                       l11053 5902                                         l12021 519E  
                                       l11029 52DC                                         l11213 2F76  
                                       l11221 2FA2                                         l11205 2F42  
                                       l11037 489A                                         l11045 5A3A  
                                       l12101 4FB0                                         l11311 5586  
                                       l11303 5562                                         l10511 1622  
                                       l10503 15F2                                         l12015 3CB4  
                                       l12007 3C0A                                         l11143 3EEA  
                                       l11135 3ED2                                         l11127 3EBA  
                                       l11119 3EA4                                         l12031 4D34  
                                       l11055 5902                                         l11231 3024  
                                       l11215 2F82                                         l11223 2FF0  
                                       l11039 489E                                         l11047 5A4C  
                                       l11071 34AC                                         l12103 4FC2  
                                       l11305 5566                                         l12121 5CAE  
                                       l11401 1B74                                         l12113 5C40  
                                       l10601 17F0                                         l10521 164A  
                                       l10513 1624                                         l10505 15FA  
                                       l12017 3CB8                                         l12009 3C0E  
                                       l11145 3EF0                                         l11137 3ED8  
                                       l11129 3EC0                                         l12041 4DAE  
                                       l12033 4D34                                         l11321 4C96  
                                       l11057 5916                                         l11161 3372  
                                       l11233 3030                                         l11217 2F8E  
                                       l11241 3096                                         l11209 2F5E  
                                       l11049 5A50                                         l11081 3510  
                                       l11073 34C6                                         l11065 3492  
                                       l12105 4FD4                                         l11315 558C  
                                       l11307 5576                                         l12131 4E5A  
                                       l12123 5CB2                                         l11411 1BC6  
                                       l11403 1B8A                                         l12115 5C40  
                                       l10611 181A                                         l10603 17FC  
                                       l10531 1684                                         l10523 165A  
                                       l10515 162A                                         l10507 160A  
                                       l11139 3EDE                                         l12043 4DBA  
                                       l12035 4D46                                         l11331 4CEA  
                                       l11323 4CA8                                         l11059 591E  
                                       l12027 51B6                                         l11163 337E  
                                       l11171 33AA                                         l11155 3352  
                                       l11243 30A2                                         l11235 303C  
                                       l11227 300C                                         l11219 2F9A  
                                       l11091 3552                                         l11083 352A  
                                       l11075 34D6                                         l11067 3492  
                                       l12107 4FE0                                         l12051 5004  
                                       l11309 5578                                         l11501 2684  
                                       l10701 2298                                         l12141 4E82  
                                       l12133 4E66                                         l12125 5CC0  
                                       l11421 1C0C                                         l11413 1BD4  
                                       l11405 1B96                                         l12117 5C52  
                                       l10621 188C                                         l10605 1800  
                                       l10613 1820                                         l10541 16B0  
                                       l10533 1696                                         l10525 166A  
                                       l10517 1638                                         l10509 1610  
                                       l11149 3EF6                                         l12045 4DC6  
                                       l12037 4D4C                                         l11333 4CEC  
                                       l11325 4CB2                                         l11341 4D30  
                                       l11181 3424                                         l11165 338A  
                                       l11173 33F0                                         l11157 3356  
                                       l11229 3018                                         l11261 4C28  
                                       l11093 356E                                         l11085 3532  
                                       l11077 34F0                                         l11069 34A6  
                                       l12109 4FEC                                         l12061 506A  
                                       l12053 5018                                         l12301 5140  
                                       l11271 5592                                         l11511 26D4  
                                       l11503 26A4                                         l12071 4958  
                                       l11351 5B6E                                         l10711 22C8  
                                       l10703 22A8                                         l12143 4E90  
                                       l12127 5CC8                                         l11431 1C7A  
                                       l11423 1C26                                         l11415 1BE0  
                                       l11407 1BAE                                         l10631 18E6  
                                       l10615 1846                                         l10623 189C  
                                       l10607 180E                                         l10551 16C4  
                                       l10543 16B4                                         l10535 16A4  
                                       l10527 166C                                         l10519 163A  
                                       l12039 4DA0                                         l11335 4D06  
                                       l11327 4CC2                                         l11319 4C92  
                                       l11191 348E                                         l11183 3430  
                                       l11167 3396                                         l11239 3048  
                                       l11263 4C46                                         l11255 4BF0  
                                       l11095 3574                                         l11087 3542  
                                       l11079 350A                                         l12151 58AC  
                                       l12063 5078                                         l12055 502A  
                                       l12311 5162                                         l13111 1060  
                                       l11281 55CE                                         l12321 531A  
                                       l11521 2730                                         l11505 26B8  
                                       l11513 26E8                                         l12081 49B8  
                                       l12073 496A                                         l11353 5B72  
                                       l11345 5B50                                         l10801 253C  
                                       l10721 22FE                                         l10713 22CE  
                                       l10705 22AA                                         l12129 5ACC  
                                       l12145 4EAE                                         l11441 1D10  
                                       l11433 1CA4                                         l11425 1C36  
                                       l11417 1BF0                                         l11409 1BBA  
                                       l11361 1A80                                         l10641 1916  
                                       l10633 18F0                                         l10625 18C2  
                                       l10617 187A                                         l10609 1810  
                                       l10561 16D8                                         l10553 16C8  
                                       l10545 16B8                                         l10537 16A8  
                                       l10529 1674                                         l12401 43B8  
                                       l11337 4D0E                                         l11329 4CD6  
                                       l11177 340C                                         l11169 33A2  
                                       l11265 4C52                                         l11257 4C00  
                                       l11097 358E                                         l11089 354E  
                                       l12161 58F4                                         l12153 58AC  
                                       l11601 59C0                                         l12057 502E  
                                       l12049 5004                                         l12313 517C  
                                       l13121 107E                                         l13113 106E  
                                       l11291 55F4                                         l11283 55DE  
                                       l12315 5304                                         l11531 27A8  
                                       l11523 2738                                         l11515 2708  
                                       l11507 26C4                                         l12083 49D2  
                                       l12075 496E                                         l12067 493C  
                                       l11347 5B54                                         l10811 25B4  
                                       l10803 2566                                         l10731 233E  
                                       l10723 230E                                         l10715 22DC  
                                       l10707 22B2                                         l12147 4ED6  
                                       l12139 4E78                                         l11451 1D50  
                                       l11443 1D1E                                         l11435 1CDA  
                                       l11427 1C52                                         l11419 1BFC  
                                       l11371 1AB8                                         l11363 1A82  
                                       l10651 193E                                         l10643 191A  
                                       l10635 18FE                                         l10627 18D2  
                                       l10619 187C                                         l10571 1712  
                                       l10563 16DC                                         l10555 16CC  
                                       l10547 16BC                                         l10539 16AC  
                                       l10491 15B0                                         l12331 44FC  
                                       l12403 43D6                                         l11339 4D28  
                                       l11179 3418                                         l11187 343C  
                                       l11267 4C6A                                         l11259 4C10  
                                       l11099 3590                                         l12091 4F78  
                                       l12155 58C0                                         l11611 5C7C  
                                       l11603 59C6                                         l12059 5056  
                                       l12171 5BF4                                         l12307 5148  
                                       l13203 11D4                                         l13107 1048  
                                       l11285 55E0                                         l11277 559E  
                                       l12317 5304                                         l11533 27B4  
                                       l11525 2754                                         l11517 271C  
                                       l11509 26CC                                         l12085 49D6  
                                       l12077 4988                                         l12069 4946  
                                       l11349 5B66                                         l10821 25EA  
                                       l10813 25D0                                         l10805 256A  
                                       l10733 234E                                         l10741 236E  
                                       l10725 2310                                         l10717 22DE  
                                       l10709 22C2                                         l10901 2D3C  
                                       l12165 5AF8                                         l12149 4ED8  
                                       l12501 4B4A                                         l11461 1DC2  
                                       l11453 1D7E                                         l11445 1D30  
                                       l11437 1CE8                                         l11429 1C5E  
                                       l11381 1AE4                                         l11373 1AC8  
                                       l11365 1A92                                         l11357 1A64  
                                       l10661 1998                                         l10653 194C  
                                       l10645 192A                                         l10637 1900  
                                       l10581 1764                                         l10573 172E  
                                       l10565 16E0                                         l10557 16D0  
                                       l10549 16C0                                         l10493 15BE  
                                       l12341 456E                                         l12333 451A  
                                       l12325 44D4                                         l12405 43E2  
                                       l12421 4752                                         l12413 4712  
                                       l11189 3482                                         l11269 4C88  
                                       l11701 587E                                         l12093 4F78  
                                       l12157 58D2                                         l11621 466A  
                                       l11613 5C86                                         l12173 5C10  
                                       l12309 5158                                         l13213 11F0  
                                       l13205 11D8                                         l13141 10A6  
                                       l13133 1096                                         l13125 1086  
                                       l13117 1076                                         l13109 105C  
                                       l11287 55EE                                         l11279 55CA  
                                       l11295 552A                                         l12191 5AB2  
                                       l12319 5316                                         l11535 27BC  
                                       l11519 2728                                         l11527 2774  
                                       l11543 27E4                                         l12079 4990  
                                       l10815 25D4                                         l10807 2584  
                                       l10751 23AC                                         l10743 237E  
                                       l10735 2356                                         l10719 22EE  
                                       l10727 2318                                         l10911 2D94  
                                       l10903 2D5A                                         l12167 5B08  
                                       l12511 4B94                                         l12503 4B4A  
                                       l11471 1E38                                         l11463 1DEC  
                                       l11447 1D3E                                         l11439 1D06  
                                       l11391 1B3A                                         l11383 1AF4  
                                       l11375 1ACE                                         l11367 1AA2  
                                       l11359 1A72                                         l10831 3826  
                                       l10671 1A02                                         l10663 19A6  
                                       l10655 1962                                         l10639 190E  
                                       l10647 192C                                         l10591 17B0  
                                       l10583 1772                                         l10575 173E  
                                       l10559 16D4                                         l10567 16E4  
                                       l10495 15C0                                         l12351 459E  
                                       l12343 4580                                         l12335 4538  
                                       l12327 44DA                                         l12407 43EE  
                                       l12431 47B8                                         l12423 4770  
                                       l12415 4712                                         l11711 1E90  
                                       l11703 588A                                         l11551 5C2E  
                                       l12095 4F86                                         l12159 58D6  
                                       l11631 46E8                                         l11623 467C  
                                       l11607 5C66                                         l12271 508E  
                                       l13223 122A                                         l13215 11F4  
                                       l13207 11E8                                         l13151 10CE  
                                       l12193 5AB6                                         l11545 27F2  
                                       l11537 27C4                                         l11529 2794  
                                       l10921 35D4                                         l12601 3128  
                                       l10817 25E2                                         l10809 259A  
                                       l10761 23F4                                         l10753 23BC  
                                       l10745 237E                                         l10737 235A  
                                       l10729 2328                                         l10913 2DA2  
                                       l10905 2D5C                                         l12169 5B12  
                                       l12521 4BBE                                         l12505 4B5E  
                                       l12513 4BA6                                         l11473 1E54  
                                       l11481 1E7A                                         l11457 1DA8  
                                       l11465 1DF0                                         l11449 1D42  
                                       l11393 1B4A                                         l11385 1B04  
                                       l11377 1AD4                                         l11369 1AB2  
                                       l10841 3876                                         l10681 1A3C  
                                       l10673 1A22                                         l10665 19E0  
                                       l10649 193A                                         l10585 1774  
                                       l10577 1754                                         l10569 16E8  
                                       l10497 15D0                                         l10489 15A2  
                                       l12361 4622                                         l12353 45BC  
                                       l12337 4556                                         l12329 44DE  
                                       l12441 47EE                                         l12409 4400  
                                       l12425 478E                                         l12417 4716  
                                       l11801 4A92                                         l11721 1F28  
                                       l11713 1E96                                         l11641 3A16  
                                       l11705 58A2                                         l11553 5C32  
                                       l11561 3F8E                                         l12097 4F94  
                                       l11625 4684                                         l11617 4654  
                                       l11609 5C6A                                         l13241 12DC  
                                       l13233 1246                                         l13225 122E  
                                       l13217 1204                                         l13161 1114  
                                       l13153 10DE                                         l13137 109E  
                                       l13129 108E                                         l12187 5A9E  
                                       l11491 2612                                         l10923 35E6  
                                       l12603 312C                                         l12611 316C  
                                       l10819 25E8                                         l10771 2442  
                                       l10763 2408                                         l10755 23CC  
                                       l10691 225A                                         l10915 2DA4  
                                       l10907 2D60                                         l12531 36FE  
                                       l12523 4BCA                                         l12515 4BAA  
                                       l12507 4B70                                         l11483 1E7E  
                                       l11475 1E64                                         l11467 1E0A  
                                       l11459 1DB4                                         l11387 1B14  
                                       l11379 1AE2                                         l10851 38A0  
                                       l10843 387A                                         l10835 383A  
                                       l10683 1A42                                         l10675 1A26  
                                       l10659 198C                                         l10667 19E2  
                                       l10595 17C4                                         l10587 177E  
                                       l10579 1760                                         l10499 15E0  
                                       l12363 462E                                         l12355 45DA  
                                       l12347 4594                                         l12339 4562  
                                       l12451 4860                                         l12443 480C  
                                       l12435 47CC                                         l12427 479A  
                                       l12419 4734                                         l12371 41DA  
                                       l11571 57F2                                         l11803 4A98  
                                       l11731 2108                                         l11723 1F8C  
                                       l11715 1EAA                                         l11651 3A66  
                                       l11643 3A2A                                         l11707 58AA  
                                       l11547 5C1A                                         l11563 3FA0  
                                       l12099 4FA2                                         l11811 3928  
                                       l11627 46A0                                         l11635 470E  
                                       l11619 4658                                         l12291 50F4  
                                       l13251 1360                                         l13243 1302  
                                       l13235 129C                                         l13227 123E  
                                       l13219 1208                                         l13163 1128  
                                       l13155 10E2                                         l13147 10AE  
                                       l12189 5A9E                                         l11493 2624  
                                       l10933 36D0                                         l10925 3606  
                                       l12621 31BC                                         l12613 317E  
                                       l12605 3146                                         l10781 248A  
                                       l10773 2452                                         l10765 2416  
                                       l10757 23DC                                         l10749 2392  
                                       l10693 2268                                         l10909 2D84  
                                       l12541 3748                                         l12533 370C  
                                       l12525 4BD6                                         l12517 4BAE  
                                       l12509 4B82                                         l11901 5BE2  
                                       l11477 1E72                                         l11469 1E1E  
                                       l11397 1B5E                                         l11389 1B1A  
                                       l10861 38C8                                         l10853 38AA  
                                       l10845 3888                                         l10837 3864  
                                       l10829 380E                                         l10685 1A50  
                                       l10677 1A34                                         l10669 19F2  
                                       l10597 17D4                                         l10589 17A0  
                                       l12365 4640                                         l12357 45F8  
                                       l12349 459A                                         l12453 4872  
                                       l12445 482A                                         l12437 47CC  
                                       l12461 429E                                         l12429 47A6  
                                       l12381 4256                                         l12373 41DE  
                                       l12701 40D2                                         l11581 5846  
                                       l11573 5804                                         l11733 2162  
                                       l11725 1FE6                                         l11741 2214  
                                       l11717 1EB4                                         l11661 3AC2  
                                       l11653 3A6A                                         l11645 3A2E  
                                       l11549 5C1A                                         l11565 3FA4  
                                       l11557 3F7A                                         l11821 3994  
                                       l11813 392E                                         l11629 46E8  
                                       l12293 5116                                         l12285 50C0  
                                       l12277 50A4                                         l13261 1464  
                                       l13253 13B0                                         l13245 1316  
                                       l13237 12B0                                         l13173 1144  
                                       l13165 112C                                         l13157 10F2  
                                       l13149 10BE                                         l11495 2636  
                                       l11487 25F6                                         l10927 360E  
                                       l10935 36FA                                         l10919 35D0  
                                       l12615 3182                                         l12607 3148  
                                       l12623 31D0                                         l10791 24CA  
                                       l10783 2498                                         l10775 2464  
                                       l10767 2422                                         l10759 23E4  
                                       l10695 2276                                         l12543 3760  
                                       l12535 371E                                         l12527 4BE2  
                                       l12519 4BB2                                         l11479 1E74  
                                       l11399 1B6A                                         l10863 38D4  
                                       l10855 38B4                                         l10839 3866  
                                       l10943 5A02                                         l10687 1A52  
                                       l10679 1A3A                                         l10599 17E2  
                                       l12359 4616                                         l11911 5BBA  
                                       l12447 4848                                         l12439 47D0  
                                       l12391 4354                                         l12471 4322  
                                       l12463 42BC                                         l12383 4262  
                                       l12375 41FC                                         l12711 4104  
                                       l12703 40DA                                         l11575 5808  
                                       l11591 5768                                         l11583 572E  
                                       l11735 21C2                                         l11727 204A  
                                       l11719 1ECE                                         l11743 2256  
                                       l11663 3AE0                                         l11655 3A86  
                                       l11647 3A46                                         l11639 3A16  
                                       l11559 3F7A                                         l11831 39DE  
                                       l11823 3996                                         l11815 395E  
                                       l11807 3916                                         l12631 521A  
                                       l12287 50D0                                         l12279 50B8  
                                       l13255 1404                                         l13183 117E  
                                       l13175 1148                                         l13167 113C  
                                       l13159 10F6                                         l11497 2650  
                                       l11489 2600                                         l10929 3672  
                                       l12625 31E0                                         l12617 319C  
                                       l12609 3166                                         l11921 4AC0  
                                       l10793 24F8                                         l10777 247A  
                                       l10785 24AA                                         l10769 2440  
                                       l10697 2278                                         l10881 2C7E  
                                       l10873 2C02                                         l12545 3778  
                                       l12537 3724                                         l10865 38E4  
                                       l11681 2EAC                                         l11673 2DB6  
                                       l10945 5A02                                         l10961 54E4  
                                       l11905 5BA4                                         l12481 441A  
                                       l12449 4854                                         l12393 435A  
                                       l12473 432E                                         l12465 42DA  
                                       l12457 4294                                         l12385 426E  
                                       l12377 421A                                         l12369 41D4  
                                       l12641 412A                                         l12705 40E0  
                                       l11577 5824                                         l11569 57F2  
                                       l11585 572E                                         l11761 4DFE  
                                       l11753 4DCA                                         l11729 20A4  
                                       l11841 5792                                         l11665 3AF0  
                                       l11657 3A96                                         l11649 3A4E  
                                       l11833 39FE                                         l11825 39B0  
                                       l11817 3974                                         l11809 3916  
                                       l12561 2ACA                                         l12553 2A10  
                                       l11593 5990                                         l12633 5234  
                                       l12289 50DA                                         l13265 146C  
                                       l13257 1436                                         l13249 1342  
                                       l13193 119A                                         l13185 1182  
                                       l13177 1158                                         l11499 266A  
                                       l12627 31FA                                         l12619 319E  
                                       l11923 4AE0                                         l11915 4A9C  
                                       l10787 24B8                                         l10779 2480  
                                       l10699 2288                                         l10891 2CD8  
                                       l10875 2C14                                         l12547 3790  
                                       l12539 3738                                         l10867 38F4  
                                       l11683 2EC4                                         l11675 2DC0  
                                       l10947 5A14                                         l10971 59CA  
                                       l10963 550A                                         l10955 54C0  
                                       l11907 5BA4                                         l12491 4496  
                                       l12483 441E                                         l12395 435E  
                                       l12475 4340                                         l12467 42F8  
                                       l12459 429A                                         l12387 4280  
                                       l12379 4238                                         l12651 4150  
                                       l12643 412E                                         l12635 410E  
                                       l12707 40E8                                         l11579 582A  
                                       l11587 5740                                         l11763 4E00  
                                       l11771 4E3A                                         l11755 4DCE  
                                       l11739 21CA                                         l11851 57D6  
                                       l11843 57A6                                         l11667 3B02  
                                       l11659 3AB2                                         l11835 3A12  
                                       l11827 39C6                                         l11819 397A  
                                       l12571 2B8A                                         l12563 2AFA  
                                       l12555 2A6A                                         l11595 5994  
                                       l12299 512C                                         l13267 1470  
                                       l13195 119E                                         l13187 1192  
                                       l13179 115C                                         l13275 14B0  
                                       l11861 5466                                         l12629 320A  
                                       l12581 30A6                                         l11925 4AE4  
                                       l11917 4A9C                                         l10797 2522  
                                       l10789 24BC                                         l10893 2CDA  
                                       l10885 2C92                                         l10877 2C22  
                                       l12549 37A4                                         l10869 3904  
                                       l11685 2EF6                                         l11677 2DD4  
                                       l10949 5A38                                         l10973 59DC  
                                       l10965 551A                                         l10957 54C0  
                                       l11909 5BB6                                         l12493 44A2  
                                       l12485 443C                                         l12397 437C  
                                       l12469 4316                                         l12661 4186  
                                       l12653 4162                                         l12645 413C  
                                       l12637 4114                                         l12709 40FA  
                                       l11589 5744                                         l11781 49F2  
                                       l11773 4E50                                         l11765 4E16  
                                       l11757 4DE0                                         l11853 57EE  
                                       l11845 57AC                                         l10981 320E  
                                       l11669 3B0E                                         l11693 5850  
                                       l11829 39C8                                         l12573 2B9C  
                                       l12565 2B0C                                         l12557 2A7C  
                                       l11597 59A6                                         l13269 1484  
                                       l13197 11AE                                         l11871 3B10  
                                       l11863 5478                                         l12583 30AA  
                                       l11919 4AAE                                         l10799 252E  
                                       l10895 2CE6                                         l10887 2C9A  
                                       l10879 2C68                                         l11687 2F0E  
                                       l11679 2DD8                                         l10975 5A00  
                                       l10959 54D2                                         l12495 44AE  
                                       l12487 445A                                         l12479 4414  
                                       l12399 439A                                         l12663 419C  
                                       l12655 416A                                         l12671 41B2  
                                       l12647 4144                                         l12639 4122  
                                       l11791 4A36                                         l11783 4A04  
                                       l11767 4E1C                                         l11775 4E56  
                                       l11759 4DE8                                         l11847 57BC  
                                       l11839 5792                                         l10991 32AE  
                                       l10983 3214                                         l11695 5850  
                                       l12575 2BCC                                         l12567 2B3C  
                                       l12559 2AAC                                         l11599 59AE  
                                       l13199 11B2                                         l11881 3B62  
                                       l11873 3B10                                         l11865 548A  
                                       l11857 5452                                         l12593 30EC  
                                       l12585 30AC                                         l10897 2D22  
                                       l10889 2CA6                                         l11689 2F3C  
                                       l10969 59CA                                         l12497 44C0  
                                       l12489 4478                                         l12673 41C2  
                                       l12665 41A4                                         l12657 4172  
                                       l12649 4148                                         l12681 404E  
                                       l11793 4A50                                         l11785 4A0C  
                                       l11769 4E32                                         l11849 57BE  
                                       l10985 3226                                         l11697 5862  
                                       l12577 2BE2                                         l12569 2B5A  
                                       l11883 3B80                                         l11891 3BF0  
                                       l11875 3B24                                         l11867 549E  
                                       l11859 5452                                         l12595 3102  
                                       l12587 30C0                                         l10899 2D2E  
                                       l12675 41CA                                         l12667 41A6  
                                       l12659 4180                                         l12691 4084  
                                       l12683 405E                                         l11795 4A56  
                                       l11787 4A26                                         l11779 49EE  
                                       l10995 330A                                         l10987 3244  
                                       l13491 345C                                         l11699 5866  
                                       l12579 2BF0                                         l13483 14C8  
                                       l11885 3BA0                                         l11877 3B28  
                                       l11869 54AC                                         l12597 3114  
                                       l12589 30D6                                         l12669 41AC  
                                       l12693 4096                                         l12685 4066  
                                       l11797 4A70                                         l11789 4A28  
                                       l13493 3336                                         l10989 324C  
                                       l10997 334C                                         l13485 2FC2  
                                       l11887 3BB8                                         l11879 3B42  
                                       l12599 3116                                         l11895 5BCC  
                                       l12695 40A0                                         l12687 406C  
                                       l12679 4048                                         l11799 4A78  
                                       l13495 21EE                                         l13487 3068  
                                       l11889 3BD8                                         l11897 5BCC  
                                       l12697 40AA                                         l12689 407C  
                                       l13497 3F0A                                         l13489 33CA  
                                       l13499 36E4                                         l11899 5BDE  
                                       l12699 40BA                                 ___fltol@sign1 0024  
                             __end_of___fladd 1A64                                         ?_main 0001  
                      Servo_SetAngle@servo_no 0172                               __end_of___fldiv 25F6  
                             __end_of___awdiv 41D4                               __end_of___awmod 410E  
                             __end_of___flmul 1E90                               __end_of___fltol 3916  
                  ADC_select_channel@_channel 0023                                         u11000 38C4  
                                       u11001 38C0                                         u11010 38E4  
                                       u11011 38E0                                         u11100 2D5A  
                                       u11020 38F4                                         u11101 2D56  
                                       u11021 38F0                                         u11110 2D94  
                                       u11030 2C14                                         u11111 2D90  
                                       u11031 2C10                                         u12000 27E0  
                                       u11120 2DA2                                         u11040 2C22  
                                       u11200 54D2                                         u10400 165A  
                                       u12001 27DC                                         u11121 2D9E  
                                       u11041 2C1E                                         u11201 54CE  
                                       u10401 1656                                         u12010 27F2  
                                       u11130 35E6                                         u11050 2C7E  
                                       u11210 54E4                                         u10410 1696  
                                       u12011 27EE                                         u11131 35E2  
                                       u11051 2C7A                                         u11211 54E0  
                                       u10411 1692                                         u12020 2800  
                                       u11140 3606                                         u11060 2CD4  
                                       u11220 54FA                                         u10500 17B0  
                                       u10420 16A4                                         u10340 15BE  
                                       u12100 5760                                         u12021 27FC  
                                       u11141 3602                                         u11061 2CD0  
                                       u11221 54F6                                         u10501 17AC  
                                       u10421 16A0                                         u10341 15BA  
                                       u12101 575C                                         u11070 2D1E  
                                       u11230 550A                                         u10510 17E2  
                                       u10430 1712                                         u10350 15D0  
                                       u12110 5784                                         u11310 3322  
                                       u12030 5C2E                                         u11071 2D1A  
                                       u11231 5506                                         u10511 17DE  
                                       u10431 170E                                         u10351 15CC  
                                       u12111 5780                                         u11311 331C  
                                       u12031 5C2A                   ??_MSSP_I2C_Master_Send_Stop 0020  
                                       u11080 2D3C                                         u11240 59DC  
                                       u10600 192A                                         u10520 17F0  
                                       u10440 172A                                         u10360 15E0  
                                       u11320 3324                                         u11304 32CA  
                                       u12200 3A46                                         u11400 34A6  
                                       u12040 3F8E                                         u12120 59A6  
                                       u11081 2D38                                         u11241 59D8  
                                       u10601 1926                                         u10521 17EC  
                                       u10441 1724                                         u10361 15DC  
                                       u11305 32C6                                         u12201 3A42  
                                       u11401 34A2                                         u12041 3F8A  
                                       u12121 59A2                                         u11154 362A  
                                       u11090 2D4C                                         u11170 5A14  
                                       u11250 59F0                                         u10610 193A  
                                       u10530 180E                                         u10450 172C  
                                       u10370 1622                                         u11330 53F6  
                                       u12210 3A66                                         u11410 34C6  
                                       u12050 3FA0                                         u12130 5C7C  
                                       u11155 3626                                         u11091 2D48  
                                       u11171 5A10                                         u11251 59EC  
                                       u10611 1936                                         u10531 180A  
                                       u10371 161E                                         u11331 53F2  
                                       u12211 3A62                                         u11411 34C2  
                                       u12051 3F9C                                         u12131 5C78  
                                       u11164 368E                                         u11180 5A28  
                                       u11260 5A00                                         u10700 1A22  
                                       u10620 194C                                         u10540 1846  
                                       u10460 1754                                         u10380 1638  
                                       u12060 5804                                         u11340 52B0  
                                       u11500 3408                                         u12220 3A86  
                                       u12300 58A2                                         u11420 34F0  
                                       u12140 466A                                         u13100 519C  
                             ___awdiv@divisor 0174                                         u11165 368A  
                                       u11181 5A24                                         u11261 59FC  
                                       u10701 1A1E                                         u10621 1948  
                                       u10541 1842                                         u10461 1750  
                                       u10381 1634                                         u12061 5800  
                                       u11341 52AC                                         u11501 3404  
                                       u12221 3A82                                         u12301 589E  
                                       u11421 34EC                                         u12141 4666  
                                       u13101 5198                                         u13110 5316  
                                       u11190 5A38                                         u10710 1A34  
                                       u10630 1962                                         u10550 188C  
                                       u10470 1772                                         u10390 164A  
                                       u12070 5824                                         u12310 1EAA  
                                       u11270 3226                                         u11350 52D4  
                                       u11510 2F5A                                         u12230 3AB2  
                                       u11430 350A                                         u12150 467C  
                                       u13111 5312                                         u11191 5A34  
                                       u10711 1A30                                         u10631 195E  
                                       u10551 1888                                         u10471 176E  
                                       u10391 1646                                         u12071 5820  
                                       u12311 1EA6                                         u11271 3222  
                                       u11351 52D0                                         u11511 2F56  
                                       u12231 3AAE                                         u11431 3506  
                                       u12151 4678                                         u11600 55EE  
                                       u10800 237E                                         u13200 37A2  
                                       u10720 1A50                                         u10640 1978  
                                       u10560 18C2                                         u10480 1792  
                                       u12080 5846                                         u12400 4A70  
                                       u12320 4DE0                                         u11280 3244  
                                       u11360 52FA                                         u11520 3008  
                                       u12240 3AE0                                         u11440 352A  
                                       u12160 46A0                                         u11601 55EA  
                                       u10801 237A                                         u13201 379E  
                                       u10721 1A4C                                         u10641 1974  
                                       u10561 18BE                                         u10481 178E  
                                       u12081 5842                                         u12401 4A6C  
                                       u12321 4DDC                                         u11281 3240  
                                       u11361 52F6                                         u11521 3004  
                                       u12241 3ADC                                         u11441 3526  
                                       u12161 469C                                         u13210 30E8  
                                       u10810 23F4                                         u10730 2276  
                                       u13130 4B5E                                         u12250 2DD4  
                                       u10650 198C                                         u10570 18D2  
                                       u10490 17A0                                         u12090 5740  
                                       u12410 4A92                                         u12330 4DFE  
                                       u11530 4C28                                         u11370 489A  
                                       u11450 356E                                         u13211 30E4  
                                       u10811 23F0                                         u10731 2272  
                                       u13131 4B5A                                         u12251 2DD0  
                                       u10651 1988                                         u10571 18CE  
                                       u10491 179C                                         u12091 573C  
                                       u12411 4A8E                                         u12331 4DFA  
                                       u11531 4C24                                         u11371 4896  
                                       u11451 356A                                         u11620 5562  
                                       u13124 5336                                         u12500 5466  
                                       u13220 3114                                         u10900 250E  
                                       u10820 2416                                         u10740 2288  
                                       u13140 4B70                                         u11700 1A92  
                                       u12260 2EC4                                         u10660 19A6  
                                       u10580 18FE                                         u13300 413C  
                                       u12340 4E16                                         u11540 4C46  
                                       u11380 5A4C                                         u11460 358E  
                                       u12420 3928                                         u11621 555E  
                                       u13125 5332                                         u12501 5462  
                                       u13221 3110                                         u10901 250A  
                                       u10821 2412                                         u10741 2284  
                                       u13141 4B6C                                         u11701 1A8E  
                                       u12261 2EC0                                         u10661 19A2  
                                       u10581 18FA                                         u13301 4138  
                                       u12341 4E12                                         u11541 4C42  
                                       u11381 5A48                                         u11461 358A  
                                       u12421 3924                                         u11630 5576  
                                       u11614 5548                                         u12510 5478  
                                       u13230 3128                                         u10910 2522  
                                       u10830 2440                                         u10750 2298  
                                       u13150 4B82                                         u11710 1AA2  
                                       u12270 2F0E                                         u10670 19E0  
                                       u10590 190E                                         u13310 4162  
                                       u12350 4E32                                         u11294 3268  
                                       u11390 5916                                         u11550 4C6A  
                                       u12190 3A2A                                         u11470 35AA  
                                       u13070 50A0                                         u11631 5572  
                                       u11615 5544                                         u12511 5474  
                                       u13231 3124                                         u10911 251E  
                                       u10831 243C                                         u10751 2294  
                                       u13151 4B7E                                         u11711 1A9E  
                                       u12271 2F0A                                         u10671 19DC  
                                       u10591 190A                                         u13311 415E  
                                       u12351 4E2E                                         u11295 3264  
                                       u11391 5912                                         u11551 4C66  
                                       u12191 3A26                                         u11471 35A6  
                                       u14007 2B92                                         u12175 46AA  
                                       u13071 509C                                         u11640 5586  
                                       u12520 548A                                         u13240 3166  
                                       u10920 253C                                         u10840 2464  
                                       u10760 22DC                                         u13160 4B94  
                                       u11800 1D50                                         u11720 1AE2  
                                       u10680 19F2                                         u13320 4180  
                                       u13400 40FA                                         u12360 4E50  
                                       u11560 4C88                                         u12280 5862  
                                       u11480 35CA                                         u12440 395E  
                                       u13080 5114                                         u11641 5582  
                                       u12521 5486                                         u13241 3162  
                                       u10921 2538                                         u10841 2460  
                                       u10761 22D8                                         u13161 4B90  
                                       u11801 1D4C                                         u11721 1ADE  
                                       u10681 19EE                                         u13321 417C  
                                       u13401 40F6                                         u12361 4E4C  
                                       u11561 4C84                                         u12281 585E  
                                       u11481 35C6                                         u12441 395A  
                                       u14017 2BC2                                         u12185 46C8  
                                       u13081 5110                                         u12610 3BD8  
                                       u12530 54AC                                         u13250 317E  
                                       u10930 2584                                         u10850 247A  
                                       u10770 22EE                                         u13170 4BA6  
                                       u11810 1D7E                                         u11730 1AF4  
                                       u10690 1A02                                         u13330 419C  
                                       u11650 4CA8                                         u12370 4A04  
                                       u11490 336E                                         u12290 587E  
                                       u12450 3994                                         u13090 5128  
                                       u12611 3BD4                                         u12531 54A8  
                                       u13251 317A                                         u10931 2580  
                                       u10851 2476                                         u10771 22EA  
                                       u14027 5CB8                                         u13171 4BA2  
                                       u11811 1D7A                                         u11731 1AF0  
                                       u10691 19FE                                         u13331 4198  
                                       u11651 4CA4                                         u12371 4A00  
                                       u11491 336A                                         u12291 587A  
                                       u12451 3990                                         u12435 3942  
                                       u13091 5124                                         u11580 55CA  
                                       u11900 2636                                         u12540 54BA  
                                       u13260 31BC                                         u10940 25B4  
                                       u10860 2498                                         u10780 22FE  
                                       u13180 371E                                         u11820 1D94  
                                       u11740 1B04                                         u13340 41C2  
                                       u11660 4D06                                         u12380 4A26  
                                       u12460 39B0                                         u11581 55C6  
                                       u12605 3BB2                                         u11901 2632  
                                       u12541 54B6                                         u13261 31B8  
                                       u10941 25B0                                         u10861 2494  
                                       u10781 22FA                                         u13181 371A  
                                       u14037 5CC4                                         u11821 1D90  
                                       u11741 1B00                                         u13341 41BE  
                                       u11661 4D02                                         u12381 4A22  
                                       u12461 39AC                                         u12437 3944  
                                       u11590 55DE                                         u11574 55B0  
                                       u12550 3B24                                         u11910 2650  
                                       u13270 31D0                                         u10950 25E2  
                                       u10870 24B8                                         u10790 233E  
                                       u13190 3772                                         u12630 5BDE  
                                       u11830 1DA8                                         u11750 1B3A  
                                       u13350 405E                                         u11670 4D28  
                                       u12390 4A50                                         u11591 55DA  
                                       u11575 55AC                                         u12607 3BB4  
                                       u12551 3B20                                         u11911 264C  
                                       u13271 31CC                                         u10951 25DE  
                                       u10871 24B4                                         u10791 233A  
                                       u13191 376E                                         u14047 4E7A  
                                       u12631 5BDA                                         u11831 1DA4  
                                       u11751 1B36                                         u13351 405A  
                                       u11671 4D24                                         u12391 4A4C  
                                       u12560 3B42                                         u11920 2684  
                                       u13280 31E0                                         u11680 5B66  
                                       u10880 24CA                                         u11840 1DC2  
                                       u11760 1B4A                                         u10960 3826  
                                       u12640 5BB6                                         u13360 407C  
                                       u12800 502A                                         u12625 3BEA  
                                       u12561 3B3E                                         u11921 2680  
                                       u13281 31DC                                         u11681 5B62  
                                       u10881 24C6                                         u14057 5B0A  
                                       u11841 1DBE                                         u11761 1B46  
                                       u10961 3822                                         u12641 5BB2  
                                       u13361 4078                                         u12801 5026  
                                       u12570 3B62                                         u11930 26A4  
                                       u12650 4AAE                                         u10890 24F8  
                                       u11850 1E0A                                         u11770 1CC4  
                                       u11690 1A80                                         u10970 385A  
                                       u13290 4122                                         u13370 4096  
                                       u12490 57A6                                         u12810 5078  
                                       u12627 3BEC                                         u12571 3B5E  
                                       u11931 26A0                                         u14067 31EC  
                                       u12651 4AAA                                         u10891 24F4  
                                       u11851 1E06                                         u11691 1A7C  
                                       u13291 411E                                         u13371 4092  
                                       u12491 57A2                                         u12475 39C4  
                                       u12811 5074                                         u11940 26B8  
                                       u12660 4AC0                                         u12820 4958  
                                       u12900 4E90                                         u11860 1E38  
                                       u11780 1D1E                                         u10980 3888  
                                       u13380 40BA                                         u11941 26B4  
                                       u12661 4ABC                                         u12821 4954  
                                       u12901 4E8C                          __end_of_Get_Temp_HUM 4BF0  
                                       u11861 1E34                                         u11781 1D1A  
                                       u10981 3884                                         u13381 40B6  
                                       u12485 39DC                                         u12477 39C6  
                                       u12590 3BA0                                         u11950 2708  
                                       u12670 4AE0                                         u12830 496A  
                                       u12910 4ED6                                         u11870 1E72  
                                       u11790 1D3E                                         u10990 389C  
                                       u13390 40D2                                         u12591 3B9C  
                                       u11951 2704                                         u12671 4ADC  
                                       u12831 4966                                         u12911 4ED2  
                                       u11871 1E6E                                         u11791 1D3A  
                                       u11775 1CBA                                         u10991 3898  
                                       u10975 3850                                         u13391 40CE  
                                       u12487 39DE                                         u11960 271C  
                                       u11880 2612                                         u12840 4988  
                                       u12920 4EE8                                         u12760 3C0A  
                                       u13800 1192                                         u12585 3B7A  
                                       u11961 2718                                         u11881 260E  
                                       u12841 4984                                         u12921 4EE4  
                                       u12761 3C06                                         u13801 118E  
                                       u11970 2754                                         u11890 2624  
                                       u12850 49D2                                         u12770 51B2  
                                       u12930 58C0                                         u13810 11AE  
                                       u12587 3B7C                                         u11971 2750  
                                       u11891 2620                                         u12851 49CE  
                                       u12771 51AE                                         u12931 58BC  
                                       u13811 11AA                                         u11980 2794  
                                       u12684 4B32                                         u12860 5ADA  
                                       u12780 4D46                                         u12940 58D2  
                                       u13820 11E8                                         u11981 2790  
                                       u12685 4B2E                                         u12861 5AD6  
                                       u12781 4D42                                         u12941 58CE  
                                       u13821 11E4                                         u11990 27A8  
                                       u12870 5AE8                                         u12790 5018  
                                       u13830 1204                                         u11991 27A4  
                                       u12871 5AE4                                         u12791 5014  
                                       u13831 1200                                         u12880 5AF6  
                                       u13840 123E                                         u12881 5AF2  
                                       u13841 123A                                         u12970 5AB2  
                                       u12890 4E78                                         u13770 10F2  
                                       u12971 5AAE                                         u12891 4E74  
                                       u13907 50EC                                         u13771 10EE  
                                       u13780 113C                                         u13917 515A  
                                       u13781 1138                                         u13790 1158  
                                       u13927 5174                                         u13791 1154  
                                       u13937 5080                                         u13857 111C  
                      _ECU_DC_Motor_Run_Right 5BA4                                         u13947 2A72  
                                       u13867 12A4                                         u13957 2AA2  
                                       u13877 130A                                         u13967 2AD2  
                                       u13887 1478                                         u13977 2B02  
                                       u13897 50D2                                         u13987 2B32  
                                       u13997 2B62                                         i1l477 5D46  
                                       i2l706 29EE                                         i2l727 2A0A  
                                       i2l728 2A0E                                         i2l833 569C  
                                       i2l921 53E2                                         i2l826 5634  
                                       i2l690 3EA0                                         i2l842 5B4E  
                                       i2l835 56C6                                         i2l828 565E  
                                       i2l693 2836                                         i2l686 3E9C  
                                       i2l838 5D4A                               ___awdiv@counter 0176  
                                       _RCREG 000FAE                                         _TMR0H 000FD7  
                                       _TMR1H 000FCF                                         _TMR0L 000FD6  
                                       _TMR1L 000FCE                         Get_Distance@timer_val 008D  
                                       _SPBRG 000FAF                                         _PORTA 000F80  
                                       _PORTB 000F81                                         _PORTC 000F82  
                                       _PORTD 000F83                                         _PORTE 000F84  
                               _EUSART_Rx_ISR 5B24                                         _TRISA 000F92  
                                       _TRISB 000F93                                         _TRISC 000F94  
                                       _TRISD 000F95                                         _TRISE 000F96  
              ??i2_EUSART_Async_Transmit_Data 000A                                 _EUSART_Tx_ISR 5D4A  
                                       _TXREG 000FAD        ADC_Get_Conversion_Blocking@ERRORSTATUS 006B  
                            __end_of_TMR0_ISR 5D4A       async_config_baud_rate_gen@Baudrate_temp 0171  
                              GPS_Service@key 0025                                         _flags 0040  
                        _ADC_Start_Conversion 5C66                                    _T_Integral 00DB  
                  ?_Robot_Steer_Right_Forward 0001                                         pclath 000FFA  
                                       pclatu 000FFB                                  ?_GPS_Service 0001  
                                       tablat 000FF5               CCP_Capture_Mode_Config@_ccp_obj 0021  
                 HAL_Timer0_Init@_tmr0_config 0023                          PCA_Write_Reg@i2c_obj 0060  
                                       ttemp5 0043                                         ttemp6 0046  
                                       ttemp7 004A                                         status 000FD8  
                                       wtemp8 0043                __end_of_EUSART_Async_Read_Data 2806  
                    Get_Distance@_tmr0_config 0089                       HAL_Timer0_Write_Val@val 0020  
            ServoDriver_Init@servo_driver_obj 0172                             ??_DHT11_Read_Data 0020  
       async_config_baud_rate_gen@_eusart_obj 00B0                   _I2C_DefaultInterruptHandler 00C5  
                             __initialization 4EEA        MSSP_I2C_Master_Write_Blocking@i2c_data 0020  
                         _Rx_config_interrupt 4C92                                  __end_of_main 15A2  
                  _eusart_Rx_InterruptHandler 0034                         CCP_PWM_Start@_ccp_obj 001E  
               __end_of_GPIO_Pin_Toggle_Logic 5374                  ??_ADC_Get_Conversion_Results 0060  
                                   ??_ADC_ISR 001A                              _servo_driver_obj 00F2  
                       _CCP_Mode_Timer_Select 5294                                 _lat_registers 00DD  
                            _Ultra_Sonic_Init 58AC                                        ??_main 017D  
                   Servo_SetAngle@reg_addrees 00B2                                 __activetblptr 000003  
                              ?_EUSART_Rx_ISR 0001                           DHT11_Read_Data@data 001E  
                              ?_EUSART_Tx_ISR 0001                                     ??_RB4_ISR 001A  
                     ?_I2C_Pin_Configurations 0001                                     ??_RB5_ISR 001A  
                                   ??_RB6_ISR 001A                                     ??_RB7_ISR 001A  
                       __end_of_battery_level 5294                         Get_Temp_HUM@T_Decimal 0064  
              GPIO_Pin_Read_Logic@_pin_config 001E                         RB5_ISR@Handler_Select 001A  
                        ?_Rx_config_interrupt 001E                         ?_ADC_Start_Conversion 001E  
                Ultra_Sonic_Init@_tmr0_config 006B                                        _ADRESH 000FC4  
                                      _ADRESL 000FC3                                        _CCPR1L 000FBE  
                                      _CCPR2L 000FBB                              ___awdiv@dividend 0172  
                    __end_of_Ecu_Stepper_Init 521A                  ??_MSSP_I2C_Master_Send_Start 0020  
                                      i1l1170 0106                                        i1l1251 5D42  
                                      i1l1180 0246                                        i1l1172 0146  
                                      i1l1164 0046                                        i1l1182 0266  
                                      i1l1174 0186                                        i1l1166 0086  
                                      i1l1264 5D32                                        i1l1176 01C6  
                                      i1l1168 00C6                                        i1l1273 5D18  
                                      i1l1185 0276                                        i1l1282 5CFE  
                                      i1l1178 0206                                        i1l1291 5CE4  
                                      i2l1151 3D62                                        i2l1143 3D12  
                                      i2l1153 3D82                                        i2l1145 3D22  
                                      i2l1155 3D92                                        i2l1147 3D32  
                                      i2l1149 3D42                                        i2l1158 3DA2  
                                      i1l4711 5D40                                        i1l4721 5D32  
                                      i1l4715 5D1C                                        i1l4731 5D18  
                                      i2l1541 5D48                                        i1l4717 5D1E  
                                      i1l4725 5D02                                        i1l4727 5D04  
                                      i2l1997 5A9C                                        i2l7411 55FA  
                                      i1l8843 5CE8                                        i2l7421 5636  
                                      i2l8301 28DA                                        i1l8845 5CEA  
                                      i1l8853 5CCE                                        i1l9901 0100  
                                      i2l7431 565C                                        i2l7423 5646  
                                      i2l8311 2936                                        i2l8303 28E2  
                                      i1l8855 5CD0                                        i1l9911 0140  
                                      i1l9903 0114                                        i2l7441 566E  
                                      i2l7425 5648                                        i2l7417 5606  
                                      i2l8321 29A0                                        i2l8313 293E  
                                      i2l8305 28F6                                        i1l8849 5CFE  
                                      i1l9921 0180                                        i1l9913 0154  
                                      i1l9905 0122                                        i2l7451 56BE  
                                      i2l7443 569A                                        i2l7435 5662  
                                      i2l7427 5656                                        i2l7419 5632  
                                      i2l8323 29B4                                        i2l8315 2946  
                                      i2l8307 2916                                        i1l8859 5CE4  
                                      i1l9931 01C0                                        i1l9923 0194  
                                      i1l9915 0162                                        i1l9907 0130  
                                      i2l7445 569E                                        i2l8325 29C0  
                                      i2l8317 2960                                        i2l8309 292A  
                                      i2l8341 5374                                        i1l9941 0200  
                                      i1l9933 01D4                                        i1l9925 01A2  
                                      i1l9917 0170                                        i1l9909 013E  
                                      i2l7455 56C4                                        i2l7447 56AE  
                                      i2l8271 5B7A                                        i2l8327 29C8  
                                      i2l8319 2980                                        i2l8335 29EE  
                                      i2l8343 5386                                        i1l9951 0240  
                                      i1l9943 0214                                        i1l9935 01E2  
                                      i1l9927 01B0                                        i1l9919 017E  
                                      i1l9871 0042                                        i2l7449 56B0  
                                      i2l8273 5B8C                                        i2l8337 29FC  
                                      i2l8329 29D0                                        i2l8281 280E  
                                      i2l8345 538A                                        i1l9953 0254  
                                      i1l9945 0222                                        i1l9937 01F0  
                                      i1l9929 01BE                                        i1l9881 0080  
                                      i1l9873 0054                                        i2l8275 5B90  
                                      i2l8291 2878                                        i2l8283 2820  
                                      i2l8339 5374                                        i1l9955 0262  
                                      i1l9947 0230                                        i1l9939 01FE  
                                      i1l9891 00C0                                        i1l9883 0094  
                                      i1l9875 0062                                        i1l9867 0026  
                                      i2l7901 3DEE                                        i2l8269 5B7A  
                                      i2l8293 2892                                        i2l8285 2832  
                                      i1l9957 0274                                        i1l9949 023E  
                                      i1l9893 00D4                                        i1l9885 00A2  
                                      i1l9877 0070                                        i1l9869 0034  
                                      i2l7911 3E84                                        i2l7903 3E0E  
                                      i2l8295 28B2                                        i2l8287 2844  
                                      i2l8279 2806                                        i1l9895 00E2  
                                      i1l9887 00B0                                        i1l9879 007E  
                                      i2l7905 3E2C                                        i2l7913 3E9C  
                                      i2l8297 28C6                                        i2l8289 285E  
                                      i1l9897 00F0                                        i1l9889 00BE  
                                      i2l7907 3E4C                                        i2l8299 28D2  
                                      i1l9899 00FE                                        i2l7909 3E64  
                                      i2l8831 5B36                                        i2l8681 5A6C  
                                      i2l8683 5A90                                        i2l7893 3DBE  
                                      i2l8829 5B24                                        i2l7895 3DBE  
                                      i2l7897 3DD0                                        i2l9833 3CF2  
                                      i2l7899 3DD4                                        i2l9851 3D50  
                                      i2l9843 3D30                                        i2l9835 3D00  
                                      i2l9853 3D5E                                        i2l9837 3D0E  
                                      i2l9863 3DA0                                        i2l9855 3D70  
                                      i2l9847 3D40                                        i2l9839 3D20  
                                      i2l9857 3D7E                                        i2l9859 3D90  
           __end_of_Robot_Steer_Right_Forward 4294                  __end_of_DHT11_Check_Response 5AF8  
                              _Movement_State 00CF                                        _SPBRGH 000FB0  
                   _MSSP_I2C_Master_Send_Stop 59CA                                        _SSPADD 000FC8  
                                      _SSPBUF 000FC9                             i2_calc_parity_odd 55F8  
                    calc_parity_odd@l_counter 0022                              __end_of___xxtofl 2DB6  
                      _W1_W3_W5_Motor_Control 00FF                      ?i2_GPIO_Pin_Toggle_Logic 0001  
                 ?_Robot_Steer_Right_Backward 0001                         __end_of_MSSP_I2C_Init 35D0  
                          ?i2_calc_parity_odd 0001                                 ??_Timer2_Init 0020  
                    i2_EUSART_Async_Read_Data 2806  __end_of_I2C_Master_Mode_Clock_Configurations 493C  
      ??_I2C_Master_Mode_Clock_Configurations 00B2         ?_I2C_Master_Mode_Clock_Configurations 00B0  
        _I2C_Master_Mode_Clock_Configurations 4886                            _Robot_Move_Forward 44D4  
                 __end_of_GPIO_Pin_Read_Logic 4B4A               ??_GPIO_Pin_Direction_Initialize 0020  
               __end_of_ECU_DC_Motor_Run_Left 5BF4                                     ??___fladd 00A8  
              ADC_Get_Conversion_Results@_adc 001E                                        ___wmul 5BF4  
                                   ??___fldiv 0076                                     ??___awdiv 0026  
                    ?_stepper_move_one_deg_cw 0022                                     ??___awmod 0026  
                                   ??___flmul 008F                                     ??___fltol 016A  
                 __end_of_GPIO_Pin_Initialize 5952                           ??i2_calc_parity_odd 0001  
                                      clear_0 4F50                                        clear_1 4F5C  
                                      clear_2 4F68                           ?_Robot_Move_Forward 0001  
                 ?_EUSART_Async_Transmit_Data 0060                              ___awdiv@quotient 0178  
                             ___awmod@divisor 0170                                        _timer0 00D0  
                                      isa$std 000001                               ___awmod@counter 00B0  
              __end_of_I2C_Pin_Configurations 5D3A                stepper_move_one_deg_cw@stepper 0022  
                                __pdataCOMRAM 003D                                     ?_ADC_Init 0021  
                                __mediumconst 0000       i2EUSART_Async_Transmit_Data@_eusart_obj 0006  
       EUSART_Async_Transmit_Data@_eusart_obj 0060                                        tblptrh 000FF7  
                       ??_Rx_config_interrupt 0020                                        tblptrl 000FF6  
                                      tblptru 000FF8           __end_of_ADC_Get_Conversion_Blocking 508E  
                 _ADC_Get_Conversion_Blocking 5004                                     ?_CCP_Init 0069  
                      Get_Temp_HUM@RH_Decimal 0060                   CCP_PWM_Mode_Config@_ccp_obj 0021  
                   __end_ofi2_calc_parity_odd 5660                          ??_Robot_Move_Forward 0026  
                                ___xxtofl@arg 006A                                  ___xxtofl@exp 0069  
                                ___xxtofl@val 0060                                    __accesstop 0060  
                     __end_of__initialization 4F6E    __end_ofi2_Bluetooth_Send_Data_Non_Blocking 5BA4  
    __end_of_Bluetooth_Send_Data_Non_Blocking 5ACC            ??_Bluetooth_Send_Data_Non_Blocking 0026  
        ??i2_Bluetooth_Send_Data_Non_Blocking 000F           ?i2_Bluetooth_Send_Data_Non_Blocking 000C  
           ?_Bluetooth_Send_Data_Non_Blocking 017A            i2_Bluetooth_Send_Data_Non_Blocking 5B7A  
            _Bluetooth_Send_Data_Non_Blocking 5A9E                                     ?_INT1_ISR 0001  
                            _CCP_PWM_Set_Duty 2DB6                 ??_ADC_Get_Conversion_Blocking 006A  
                               ___rparam_used 000001                      __end_of_calc_parity_even 55F8  
                                  ___fltol@f1 0166              ??_MSSP_I2C_Master_Write_Blocking 0023  
             ?_MSSP_I2C_Master_Write_Blocking 001E                  CCP_Interrupt_Config@_ccp_obj 001E  
                  _I2C_Report_Write_Collision 00C1                             ??_calc_parity_odd 001E  
                              __pcstackCOMRAM 0001                             ??_async_Rx_config 0023  
          MSSP_I2C_Master_Write_Blocking@_ack 0021         ADC_Get_Conversion_Results@ERRORSTATUS 0022  
                                __pidataBANK0 5C8A                                  __pidataBANK1 5952  
                                   ?_TMR0_ISR 0001                                _battery_volt_f 00E7  
       MSSP_I2C_Master_Write_Blocking@i2c_obj 001E                        ?_CCP_Mode_Timer_Select 001E  
                           ??_async_Tx_config 0020                     ?_Robot_Steer_Left_Forward 0001  
                         __end_of_Timer2_Init 5452                               ??_EUSART_Rx_ISR 0014  
  EUSART_Async_Read_Data_Blocking@_eusart_obj 006C                               ??_EUSART_Tx_ISR 0001  
                 ?_async_config_baud_rate_gen 00B0                                 _PCA_Write_Reg 56C8  
                                  ??_ADC_Init 0023                        ??_ADC_Start_Conversion 0020  
                                _Get_Distance 36FE                     calc_parity_even@l_counter 0022  
                 __end_of_HAL_Timer0_Read_Val 49EE                               _HAL_Timer0_Init 3916  
                                  ??_CCP_Init 006B                                _Robot_Nav_Init 4F78  
             ADC_Start_Conversion@ERRORSTATUS 0020                         CCP_PWM_Set_Duty@_duty 00B2  
             __end_ofi2_GPIO_Pin_Toggle_Logic 53E4                                    __pbssBANK0 00B3  
                                  __pbssBANK1 013D                         _INT0_InterruptHandler 00BF  
                                  ??_INT1_ISR 001A                 __end_of_application_intialize 2BFE  
                                _Get_Temp_HUM 4B4A                    ?_adc_select_result_formate 001E  
                    _eusart_frameerr_CallBack 00C7                                    _datarecive 00D8  
                 __end_of_InterruptManagerLow 0286                          calc_parity_even@data 0020  
                                     ?___wmul 001E                                    ??_TMR0_ISR 0001  
          __end_of_ADC_Get_Conversion_Results 4712                    _ADC_Get_Conversion_Results 4654  
                 CCP_PWM_Set_Duty@l_duty_temp 0174                       ?_ECU_DC_Motor_Run_Right 0022  
                            _Robot_Steer_Left 4414                                       _ADC_ISR 5D46  
                            _Robot_Steer_Stop 5C40         __end_of_GPIO_Pin_Direction_Initialize 3352  
               _GPIO_Pin_Direction_Initialize 320E             Ultra_Sonic_Init@ultrasonic_object 0069  
                              ?_PCA_Write_Reg 0060                 HAL_Timer0_Read_Val@l_low_byte 0061  
                        _DHT11_Check_Response 5ACC                                       _RB4_ISR 5D1A  
                                     _RB5_ISR 5D00                                       _RB6_ISR 5CE6  
                      Get_Temp_HUM@T_Integral 0066                                       _RB7_ISR 5CCC  
                                   ?___xxtofl 0060                     _RB6_InterruptHandler_HIGH 0028  
                         _Robot_Move_Backward 4594                   __end_of_CCP_PWM_Mode_Config 4C92  
                  PCA_Write_Reg@slave_address 0062                        __end_of_Robot_Nav_Init 5004  
                             _DHT11_Read_Data 4E5A            __end_of_MSSP_I2C_Master_Send_Start 5A3A  
                  _MSSP_I2C_Master_Send_Start 5A02                            i2_calc_parity_even 5660  
            i2EUSART_Async_Transmit_Data@data 0008                EUSART_Async_Transmit_Data@data 0062  
                 ??_Robot_Steer_Right_Forward 0026                                _tris_registers 010A  
                    __end_of_Ultra_Sonic_Init 5902                                 ??_DHT11_Start 001E  
                           ??_send_trig_pulse 0024                      _RB6_InterruptHandler_LOW 00BB  
                         ?i2_calc_parity_even 0001                                       _i2c_obj 00EB  
                    _stepper_move_one_deg_ccw 5116                 adc_select_result_formate@_adc 001E  
                                     __Hparam 0000                                _Servo_SetAngle 3BF6  
                        ?_Robot_Move_Backward 0001                    _eusart_overrunerr_CallBack 00C9  
                                 _Timer2_Init 53E4                                  ADC_Init@_adc 0021  
                                     __Lparam 0000                  __end_of_CCP_Interrupt_Config 5D46  
             stepper_move_one_deg_ccw@stepper 0022                __end_of_ECU_DC_Motor_Run_Right 5BCC  
                                     ___fladd 15A2                                       ___fldiv 225A  
                                     ___awdiv 410E                     stepper_move_one_deg_ccw@i 0024  
                                     ___awmod 4048                                       ___flmul 1A64  
             CCP_Compare_Mode_Config@_ccp_obj 0021                                       ___fltol 380E  
                                __psmallconst 1000                  _Timer1_PreLoaded_Value_Store 0026  
                                     __pcinit 4EEA           ADC_Get_Conversion_Blocking@_channel 0067  
                                     __ramtop 1000                         ?_DHT11_Check_Response 0001  
                                     __ptext0 1048                                       __ptext1 508E  
                                     __ptext2 5116                                       __ptext3 521A  
                                     __ptext4 5BF4                                       __ptext5 5004  
                                     __ptext6 5990                                       __ptext7 5C66  
                                     __ptext8 4654                                       __ptext9 2A10  
                                   _T0CONbits 000FD5                          ??i2_calc_parity_even 0001  
                     __end_of_HAL_Timer0_Init 3A16                                     _T1CONbits 000FCD  
                                     _counter 0037                                     _T2CONbits 000FCA  
                   ECU_DC_Motor_Init@dc_motor 0069                                    ??___xxtofl 0064  
                                   _T3CONbits 000FB1                                       _gpstemp 003C  
                            ___awmod@dividend 016E                       _CCP_Compare_Mode_Config 2F3E  
                           _EUSART_Async_Init 5792                               ?_Robot_Nav_Init 0001  
                  __end_of_ADC_select_channel 59CA                      ?_CCP_Capture_Mode_Config 0021  
            MSSP_I2C_Master_Send_Stop@i2c_obj 001E                            ?_EUSART_Async_Init 0179  
                  ??i2_EUSART_Async_Read_Data 000A                                __pintcode_body 3CDA  
                        end_of_initialization 4F6E          __end_of_adc_select_voltage_reference 5792  
                _adc_select_voltage_reference 572E                             ?_Ecu_Stepper_Init 0069  
                    GPIO_Pin_Read_Logic@logic 0020                              _ServoDriver_Init 3F7A  
                    PCA_Write_Reg@reg_address 0063                                     i1u1000_20 01BE  
                                   i1u1000_21 01BA                                     i1u1001_20 01D4  
                                   i1u1001_21 01D0                                     i1u1010_20 0262  
                                   i1u1002_20 01E2                                     i1u1010_21 025E  
                                   i1u1002_21 01DE                                     i1u1011_20 0274  
                                   i1u1003_20 01F0                                     i1u1011_21 0270  
                                   i1u1003_21 01EC                                     i1u1004_20 01FE  
                                   i1u1004_21 01FA                calc_parity_even@number_of_ones 0021  
            i2calc_parity_even@number_of_ones 0004                                     i1u1005_20 0214  
                                   i1u1005_21 0210                                     i1u1006_20 0222  
                                   i1u1006_21 021E                                     i1u1007_20 0230  
                                   i1u1007_21 022C                                     i1u1008_20 023E  
                                   i1u1008_21 023A                                     i1u1009_20 0254  
                                   i1u1009_21 0250                                       int_func 3CDA  
                          ??_Ecu_Stepper_Init 0026                        __end_of_Servo_SetAngle 3CDA  
                         ??_EUSART_Async_Init 0026             async_config_baud_rate_gen@ret_val 0170  
                          Timer2_Init@_timer2 001E                         i2calc_parity_odd@data 0003  
                i2EUSART_Async_Read_Data@data 0008                         ??_Robot_Move_Backward 0026  
                    CCP_PWM_Set_Duty@_ccp_obj 00B0                                     _RCSTAbits 000FAB  
                         __end_of_DHT11_Start 5CCC                                       postdec1 000FE5  
                                     postdec2 000FDD                                       postinc0 000FEE  
                                     postinc2 000FDE                               ??_PCA_Write_Reg 0023  
                   _Robot_Steer_Right_Forward 41D4                      ADC_Start_Conversion@_adc 001E  
                           __end_of_usart_isr 5A9E                         _INT1_InterruptHandler 0032  
                                   _PORTBbits 000F81                         _GPIO_Pin_Toggle_Logic 5304  
                                   _PORTDbits 000F83                      __end_of_CCP_PWM_Set_Duty 2F3E  
                     __end_of_DHT11_Read_Data 4EEA                     __end_of_EUSART_Async_Init 57F2  
                                 ___fladd@grs 00AF                ?_GPIO_Pin_Direction_Initialize 001E  
                               ___xxtofl@sign 0068                         Servo_SetAngle@i2c_obj 016E  
                                   _TRISBbits 000F93                                     _TRISCbits 000F94  
                                   _TRISDbits 000F95                         RB4_ISR@Handler_Select 001A  
                       RB7_ISR@Handler_Select 001A                                   ___fldiv@grs 0081  
                                 ___fldiv@rem 007A                       Get_Temp_HUM@RH_Integral 0062  
                     Ecu_Stepper_Init@stepper 0069           EUSART_Async_Read_Data_Blocking@data 006E  
                             _calc_parity_odd 5528                               _async_Rx_config 49EE  
                                 ___flmul@grs 0095                             PCA_Write_Reg@data 0064  
                        Get_Distance@distance 008B              __end_of_Robot_Steer_Left_Forward 4414  
                                 _CCP1CONbits 000FBD                               _async_Tx_config 4DCA  
                            CCP_Init@_ccp_obj 0069                               ?_Servo_SetAngle 016E  
                                 _CCP2CONbits 000FBA                                     _TXSTAbits 000FAC  
                  ?_Robot_Steer_Left_Backward 0001                 ADC_select_channel@ERRORSTATUS 0025  
                           ?_calc_parity_even 0001                       ??_CCP_Mode_Timer_Select 0020  
                                  _ultrasonic 00F6                    CCP_Capture_Mode_Config@ret 0025  
                               _CCP_PWM_Start 5850                    EUSART_Async_Read_Data@data 0062  
                          ??_calc_parity_even 001E                                     _T_Decimal 00FA  
                      async_Rx_config@_rx_obj 0021                    CCP_Compare_Mode_Config@ret 0025  
               convert_uint16_to_string@F3421 0146                         _ECU_DC_Motor_Run_Left 5BCC  
                              __end_of___wmul 5C1A                        ??_DHT11_Check_Response 001E  
                                 _BAUDCONbits 000FB8                                 __pidataCOMRAM 5D3A  
                 __end_of_Rx_config_interrupt 4D34              send_trig_pulse@ultrasonic_object 0022  
                   ??_CCP_Compare_Mode_Config 0023                        async_Rx_config@ret_val 0023  
                            ?_HAL_Timer0_Init 0023               __end_of_CCP_Capture_Mode_Config 3492  
                    EUSART_Async_Init@ret_val 00B2                           start_initialization 4EEA  
         i2EUSART_Async_Read_Data@_eusart_obj 0006             EUSART_Async_Read_Data@_eusart_obj 0060  
             GPIO_Pin_Write_Logic@_pin_config 001E                          _CCP_Interrupt_Config 5D44  
                    ??_EUSART_Async_Read_Data 0023                          Get_Temp_HUM@Checksum 0068  
                    __end_of_Robot_Steer_Left 44D4                      __end_of_Robot_Steer_Stop 5C66  
                                 _DHT11_Start 5CAE                   ??_adc_select_result_formate 0020  
           __end_of_Robot_Steer_Left_Backward 4886                                ?_CCP_PWM_Start 001E  
              GPIO_Pin_Initialize@_pin_config 0066                                      ??___wmul 0022  
                 ?_ADC_Get_Conversion_Results 001E                                   __pdataBANK0 00DD  
                                 __pdataBANK1 0100                                      ?_ADC_ISR 0001  
                      ?_GPIO_Pin_Toggle_Logic 001E                        ADC_select_channel@_adc 0021  
                       __end_of_EUSART_Rx_ISR 5B50                                     ___fladd@a 00A4  
                                   ___fladd@b 00A0                              ?_DHT11_Read_Data 001E  
                       __end_of_EUSART_Tx_ISR 5D4C                          MSSP_I2C_Init@i2c_obj 016E  
                                   ___fldiv@a 0072                                     ___fldiv@b 006E  
                                    ?_RB4_ISR 0001                                      ?_RB5_ISR 0001  
                                    ?_RB6_ISR 0001                                      ?_RB7_ISR 0001  
                                   ___flmul@a 008B                                     ___flmul@b 0087  
                                 __pbssCOMRAM 0026                       __end_of_calc_parity_odd 5590  
                     __end_of_async_Rx_config 4A9C                               _send_trig_pulse 5AF8  
                         Servo_SetAngle@angle 0173                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0166                                 _battery_level 521A  
               i2_EUSART_Async_Read_Data$2030 000C                 i2_EUSART_Async_Read_Data$2031 000E  
               i2_EUSART_Async_Read_Data$2032 0010                         ?_CCP_Interrupt_Config 001E  
                  ??_stepper_move_one_deg_ccw 0024                       __end_of_async_Tx_config 4E5A  
                 ?_MSSP_I2C_Master_Send_Start 001E                              DHT11_Read_Data@i 0021  
                               ??_GPS_Service 0070                         _INT2_InterruptHandler 00BD  
                           ?_Ultra_Sonic_Init 0069                                   _battery_adc 0138  
                         calc_parity_odd@data 0020                HAL_Timer0_Read_Val@l_high_byte 0060  
                          ??_Ultra_Sonic_Init 0026                  __end_of_InterruptManagerHigh 3DBE  
                                ?_Timer2_Init 001E                                     _main$5829 017F  
                               _MSSP_I2C_Init 3492                         _application_intialize 2A10  
                    _Robot_Steer_Left_Forward 4354                                     __pintcode 0008  
                    ??_I2C_Pin_Configurations 001E                        ?_ECU_DC_Motor_Run_Left 0022  
                __end_of_GPIO_Pin_Write_Logic 36FE                                      ?___fladd 00A0  
                                    ?___fldiv 006E                                      ?___awdiv 0172  
                                   __uart_obj 0114                                      ?___awmod 016E  
                                    ?___flmul 0087       adc_channel_pin_config_as_input@_channel 0020  
             GPIO_Pin_Write_Logic@ERRORSTATUS 0021                                      ?___fltol 0166  
                __end_of_HAL_Timer0_Write_Val 5B7A                    Rx_config_interrupt@_rx_obj 001E  
                     i2_GPIO_Pin_Toggle_Logic 5374                      __end_of_ServoDriver_Init 4048  
                                 __pintcodelo 0018                 HAL_Timer0_Write_Val@ret_value 0022  
                            ??_Robot_Nav_Init 0026                     _adc_select_result_formate 57F2  
                                 __smallconst 1000                     _RB4_InterruptHandler_HIGH 0030  
                           Get_Distance@logic 008F                    Rx_config_interrupt@ret_val 0020  
                                    _CCP1_Obj 012C                                      _CCP2_Obj 0120  
                           _Robot_Steer_Right 4294                       _stepper_move_one_deg_cw 508E  
                                    _ADC_Init 4D34                                ?_battery_level 0001  
                     ServoDriver_Init@i2c_obj 0170                     _RB7_InterruptHandler_HIGH 00B9  
               CCP_Mode_Timer_Select@_ccp_obj 001E                            ?_Robot_Steer_Right 0001  
                                    _CCP_Init 3A16           i2EUSART_Async_Read_Data@l_temp_data 0012  
           EUSART_Async_Read_Data@l_temp_data 006A                        async_Tx_config@_tx_obj 001E  
              GPIO_Pin_Initialize@ERRORSTATUS 0068   __end_of_I2C_Slave_Mode_Clock_Configurations 5A6C  
       ??_I2C_Slave_Mode_Clock_Configurations 0020          ?_I2C_Slave_Mode_Clock_Configurations 001E  
         _I2C_Slave_Mode_Clock_Configurations 5A3A                convert_float32_to_string@F3432 013D  
                         ??_Robot_Steer_Right 0026                      _RB5_InterruptHandler_LOW 002A  
                                    _INT1_ISR 5D40                                ___wmul@product 0022  
                      async_Tx_config@ret_val 0020                                      _LATDbits 000F8C  
            HAL_Timer0_Write_Val@_tmr0_config 001E                               ??_CCP_PWM_Start 0020  
                                    _IPR1bits 000F9F                                      _PIE1bits 000F9D  
                                    _PIE2bits 000FA0                                ?_MSSP_I2C_Init 016E  
                ??_Robot_Steer_Right_Backward 0026                                      i1u316_20 5D2E  
                                    i1u316_21 5D2A                                      i1u317_20 5D14  
                                    i1u317_21 5D10                            _ADC_select_channel 5990  
                         __end_of_GPS_Service 320E                                      _PIR1bits 000F9E  
                                    _PIR2bits 000FA1                                      i1u870_20 5CFA  
                                    i1u870_21 5CF6                                      i1u871_20 5CE0  
                                    i1u871_21 5CDC                                      i2u800_40 29FC  
                                    i2u800_41 29F8                                      i2u720_45 3E26  
                                    i2u720_47 3E28                                      i2u721_40 3E4C  
                                    i2u801_40 2A0A                                      i2u721_41 3E48  
                                    i2u801_41 2A06                                      i2u802_40 5386  
                                    i2u802_41 5382                                      i2u722_45 3E5E  
                                    i2u722_47 3E60                                      i2u723_40 3E84  
                                    i2u723_41 3E80                                      i2u803_44 53A6  
                                    i1u980_20 007E                                      i2u803_45 53A2  
                                    i1u980_21 007A                                      i2u660_44 5618  
                                    i1u981_20 0094                                      i2u660_45 5614  
                                    i2u724_45 3E96                                      i1u981_21 0090  
                                    i2u724_47 3E98                                      i2u661_40 5632  
                                    i2u717_40 3DD0                                      i2u661_41 562E  
                                    i2u717_41 3DCC                                      i1u990_20 0122  
                                    i1u982_20 00A2                                      i1u990_21 011E  
                                    i1u982_21 009E                                      i2u662_40 5646  
                                    i2u718_40 3DEE                                      i2u662_41 5642  
                                    i2u718_41 3DEA                                      i1u991_20 0130  
                                    i1u983_20 00B0                                      i1u975_20 0034  
                                    i1u991_21 012C                                      i1u983_21 00AC  
                                    i1u975_21 0030                                      i2u663_40 5656  
                                    i2u719_40 3E0E                                      i2u663_41 5652  
                                    i2u719_41 3E0A                                      i1u992_20 013E  
                                    i1u984_20 00BE                                      i1u976_20 0042  
                                    i1u992_21 013A                                      i1u984_21 00BA  
                                    i1u976_21 003E                                      i2u664_44 5680  
                                    i1u993_20 0154                                      i1u985_20 00D4  
                                    i1u977_20 0054                                      i2u664_45 567C  
                                    i1u993_21 0150                                      i1u985_21 00D0  
                                    i1u977_21 0050                                      i2u665_40 569A  
                                    i2u665_41 5696                                      i1u994_20 0162  
                                    i1u986_20 00E2                                      i1u978_20 0062  
                                    i1u994_21 015E                                      i1u986_21 00DE  
                                    i1u978_21 005E                                      i2u666_40 56AE  
                                    i2u666_41 56AA                                      i1u995_20 0170  
                                    i1u987_20 00F0                                      i1u979_20 0070  
                                    i1u995_21 016C                                      i1u987_21 00EC  
                                    i1u979_21 006C                                      i2u667_40 56BE  
                                    i2u667_41 56BA                                      i1u996_20 017E  
                                    i1u988_20 00FE                                      i1u996_21 017A  
                                    i1u988_21 00FA                                      i1u997_20 0194  
                                    i1u989_20 0114                                      i1u997_21 0190  
                                    i1u989_21 0110                                      i1u998_20 01A2  
                                    i1u998_21 019E                                      i2u790_40 285E  
                                    i2u790_41 285A                                      i1u999_20 01B0  
                                    i1u999_21 01AC                                      i2u791_40 2892  
                                    i2u791_41 288E                                      i2u792_40 28B2  
                                    i2u792_41 28AE                                      i2u793_40 28C6  
                                    i2u793_41 28C2                                      i2u786_40 5B8C  
                                    i2u794_40 2916                                      i2u866_40 5B36  
                                    i2u970_40 3D5E                                      i2u786_41 5B88  
                                    i2u794_41 2912                                      i2u866_41 5B32  
                                    i2u970_41 3D5A                                      i2u795_40 292A  
                                    i2u787_40 2820                                      i2u971_40 3D70  
                                    i2u795_41 2926                                      i2u787_41 281C  
                                    i2u971_41 3D6C                                      i2u796_40 2960  
                                    i2u788_40 2832                                      i2u867_48 5B3C  
                                    i2u972_40 3D7E                                      i2u964_40 3D00  
                                    i2u796_41 295C                                      i2u788_41 282E  
                                    i2u867_49 5B4E                                      i2u972_41 3D7A  
                                    i2u964_41 3CFC                                      i2u797_40 29A0  
                                    i2u789_40 2844                                      i2u973_40 3D90  
                                    i2u965_40 3D0E                                     _servo1Pos 00CE  
                                    i2u797_41 299C                                      i2u789_41 2840  
                                    i2u973_41 3D8C                                      i2u965_41 3D0A  
                                    i2u798_40 29B4                                      i2u974_40 3DA0  
                                    i2u966_40 3D20                                     _servo2Pos 00CD  
                                    i2u798_41 29B0                                      i2u974_41 3D9C  
                                    i2u966_41 3D1C                                      i2u799_40 29EA  
                                    i2u967_40 3D30                                     _servo3Pos 00CC  
                                    i2u799_41 29E6                                      i2u967_41 3D2C  
                                    _RCONbits 000FD0                                      i2u968_40 3D40  
                                   _servo4Pos 00CB                                      i2u968_41 3D3C  
                                    i2u969_40 3D50                                      i2u969_41 3D4C  
                                    _TMR0_ISR 5D48                                      _TEST_PIN 00FD  
                         ?_ADC_select_channel 0021                       __end_of_send_trig_pulse 5B24  
                _Timer2_PreLoaded_Value_Store 0039                   _I2C_Report_Receive_Overflow 00C3  
                ??_EUSART_Async_Transmit_Data 0023                                    _ADCON0bits 000FC2  
                                  _ADCON1bits 000FC1                                    _ADCON2bits 000FC0  
                   __end_of_Robot_Steer_Right 4354                             ___wmul@multiplier 001E  
                           ?_CCP_PWM_Set_Duty 00B0                              PCA_Write_Reg@ack 0023  
                                    _Checksum 00DA                                     _usart_isr 5A6C  
                            ?_calc_parity_odd 0001                            ??_CCP_PWM_Set_Duty 016E  
                            ?_async_Rx_config 0021                        ??_CCP_Interrupt_Config 0020  
                 i2calc_parity_even@l_counter 0005                     HAL_Timer0_Read_Val@result 0020  
                                 _driller_PIN 00FC                  ?_ADC_Get_Conversion_Blocking 0065  
                            ?_async_Tx_config 001E                              ??_Servo_SetAngle 0026  
                                 _INTCON2bits 000FF1                                   _INTCON3bits 000FF0  
                                   copy_data0 4EFE                                     copy_data1 4F1E  
                                   copy_data2 4F3E                          ??_ADC_select_channel 0024  
                 __end_of_Robot_Move_Backward 4654                   _EUSART_Async_Read_Data$2030 0064  
                 _EUSART_Async_Read_Data$2031 0066                   _EUSART_Async_Read_Data$2032 0068  
                         _GPIO_Pin_Read_Logic 4A9C               HAL_Timer0_Read_Val@_tmr0_config 001E  
                      ?_application_intialize 0001                   ??_Robot_Steer_Left_Backward 0026  
                         _GPIO_Pin_Initialize 5902                                      __Hrparam 0000  
                                    __Lrparam 0000                     ??i2_GPIO_Pin_Toggle_Logic 0003  
               __end_of_CCP_Mode_Timer_Select 5304                     ?i2_EUSART_Async_Read_Data 0006  
                      _EUSART_Async_Read_Data 25F6                     GPIO_Pin_Write_Logic@logic 0020  
                       __end_of_PCA_Write_Reg 572E                          ?_GPIO_Pin_Read_Logic 001E  
                   ??_stepper_move_one_deg_cw 0024                                 _preloaded_val 00B5  
                  ?_MSSP_I2C_Master_Send_Stop 001E                  ??_async_config_baud_rate_gen 016E  
                             ??_battery_level 0026             MSSP_I2C_Master_Send_Start@i2c_obj 001E  
                        ?_GPIO_Pin_Initialize 0066                                      ___xxtofl 2BFE  
                                  ?_usart_isr 0001                                      _datasend 003D  
            __end_of_stepper_move_one_deg_ccw 519E                                 ?_Get_Distance 0087  
                       RB6_ISR@Handler_Select 001A                          _InterruptManagerHigh 0008  
             _async_config_baud_rate_gen$5828 0175                                      __ptext10 58AC  
                                    __ptext11 3916                                      __ptext20 3A16  
                                    __ptext12 4F78                                      __ptext21 4BF0  
                                    __ptext13 3F7A                                      __ptext30 5792  
                                    __ptext22 53E4                                      __ptext14 3492  
                                    __ptext31 1E90                                      __ptext23 5D44  
                                    __ptext15 5A3A                                      __ptext40 410E  
                                    __ptext32 4DCA                                      __ptext24 2F3E  
                                    __ptext16 5D34                                      __ptext41 41D4  
                                    __ptext33 49EE                                      __ptext25 3352  
                                    __ptext17 4886                                      __ptext50 3BF6  
                                    __ptext42 4712                                      __ptext34 4C92  
                                    __ptext26 5294                                      __ptext18 5C1A  
                                    __ptext51 15A2                                      __ptext43 4294  
                                    __ptext35 4D34                                      __ptext27 519E  
                                    __ptext19 5850                                      __ptext60 5BCC  
                                    __ptext52 56C8                                      __ptext44 4354  
                                    __ptext36 572E                                      __ptext28 5902  
                                    __ptext61 4B4A                                      __ptext53 54C0  
                                    __ptext45 47CC                                      __ptext37 57F2  
                                    __ptext29 320E                                      __ptext70 493C  
                                    __ptext62 5CAE                                      __ptext54 59CA  
                                    __ptext46 4414                                      __ptext38 3EA2  
                                    __ptext71 4A9C                                      __ptext63 4E5A  
                                    __ptext55 5A02                                      __ptext47 44D4  
                                    __ptext39 4048                                      __ptext80 5590  
                                    __ptext72 30A6                                      __ptext64 5ACC  
                                    __ptext56 5C40                                      __ptext48 5BA4  
                                    __ptext73 35D0                                      __ptext65 36FE  
                                    __ptext57 2DB6                                      __ptext49 4594  
                                    __ptext90 5D4A                                      __ptext82 5CCC  
                                    __ptext74 5452                                      __ptext66 5AF8  
                                    __ptext58 380E                                      __ptext91 5B24  
                                    __ptext83 5CE6                                      __ptext75 25F6  
                                    __ptext67 2BFE                                      __ptext59 1A64  
                                    __ptext92 5A6C                                      __ptext84 5D00  
                                    __ptext76 5304                                      __ptext68 225A  
                                    __ptext93 5374                                      __ptext85 5D1A  
                                    __ptext77 5A9E                                      __ptext69 5B50  
                                    __ptext94 2806                                      __ptext86 5D40  
                                    __ptext78 3B10                                      __ptext95 5B7A  
                                    __ptext87 5D46                                      __ptext79 5528  
                                    __ptext96 3DBE                                      __ptext97 55F8  
                                    __ptext89 5D48                                      __ptext98 5660  
                                    __ptext99 0000   i2Bluetooth_Send_Data_Non_Blocking@_uart_obj 000C  
   Bluetooth_Send_Data_Non_Blocking@_uart_obj 017A    I2C_Slave_Mode_Clock_Configurations@i2c_obj 001E  
 I2C_Master_Mode_Clock_Configurations@i2c_obj 00B0                      _Timer1_Interrupt_Handler 00B3  
                                    _distance 00D4                          _GPIO_Pin_Write_Logic 35D0  
                           _ECU_DC_Motor_Init 5C1A                          _HAL_Timer0_Write_Val 5B50  
                                 _GPS_Service 30A6                             ?_Robot_Steer_Left 0001  
              Servo_SetAngle@servo_driver_obj 0170                                      _latitude 0159  
                           ?_Robot_Steer_Stop 0001                            ?_ECU_DC_Motor_Init 0069  
                             ??_MSSP_I2C_Init 0026                                  ?_DHT11_Start 0001  
                    ??_ECU_DC_Motor_Run_Right 0024                                 ?_Get_Temp_HUM 0060  
                          ??_Robot_Steer_Left 0026                            ??_Robot_Steer_Stop 0026  
                                    _longtude 014C                                      _selector 0041  
     __end_of_adc_channel_pin_config_as_input 3F7A             ??_adc_channel_pin_config_as_input 001E  
            ?_adc_channel_pin_config_as_input 0001               _adc_channel_pin_config_as_input 3EA2  
     __end_of_EUSART_Async_Read_Data_Blocking 54C0             ??_EUSART_Async_Read_Data_Blocking 0025  
            ?_EUSART_Async_Read_Data_Blocking 006C               _EUSART_Async_Read_Data_Blocking 5452  
                         ??_ECU_DC_Motor_Init 0026                       ??_GPIO_Pin_Toggle_Logic 0020  
                                    isa$xinst 000000          __end_ofi2_EUSART_Async_Transmit_Data 3EA2  
                i2_EUSART_Async_Transmit_Data 3DBE                                      int$flags 0042  
                       ??_GPIO_Pin_Read_Logic 0060                              ?_send_trig_pulse 0022  
                       ??_GPIO_Pin_Initialize 0026                           _HAL_Timer0_Read_Val 493C  
                   _Robot_Steer_Left_Backward 47CC             __end_of_MSSP_I2C_Master_Send_Stop 5A02  
                                  _INTCONbits 000FF2                 calc_parity_odd@number_of_ones 0021  
             i2calc_parity_odd@number_of_ones 0004                                ??_Get_Distance 0026  
                       ?_InterruptManagerHigh 0001                     __end_of_ECU_DC_Motor_Init 5C40  
                      _I2C_Pin_Configurations 5D34                    __end_of_Robot_Move_Forward 4594  
               ECU_DC_Motor_Run_Left@dc_motor 0022                         ?_GPIO_Pin_Write_Logic 001E  
                    stepper_move_one_deg_cw@i 0024                         ?_HAL_Timer0_Write_Val 001E  
                                    intlevel1 0000                                      intlevel2 0000  
                  ??_Robot_Steer_Left_Forward 0026               ADC_Get_Conversion_Blocking@_adc 0065  
             __end_of_stepper_move_one_deg_cw 5116                           _InterruptManagerLow 0018  
                              ??_Get_Temp_HUM 0022                    i2calc_parity_odd@l_counter 0005  
                        ?_HAL_Timer0_Read_Val 001E            __end_of_Robot_Steer_Right_Backward 47CC  
                  _Robot_Steer_Right_Backward 4712            ADC_Get_Conversion_Blocking@_result 0068  
    GPIO_Pin_Direction_Initialize@_pin_config 001E                                    _RCSTA1bits 000FAB  
                     ??_ECU_DC_Motor_Run_Left 0024                       _CCP_Capture_Mode_Config 3352  
               ?_adc_select_voltage_reference 001E                        i2calc_parity_even@data 0003  
                __end_of_ADC_Start_Conversion 5C8A                      ?_CCP_Compare_Mode_Config 0021  
                            _Ecu_Stepper_Init 519E            __end_of_EUSART_Async_Transmit_Data 3BF6  
               ?i2_EUSART_Async_Transmit_Data 0006                    _EUSART_Async_Transmit_Data 3B10  
                  Servo_SetAngle@angle_in_reg 00B0                          ?_InterruptManagerLow 0001  
                           ?_ServoDriver_Init 0170                           _CCP_PWM_Mode_Config 4BF0  
                          ??_ServoDriver_Init 0026                                _port_registers 0100  
                      _W2_W4_W6_Motor_Control 00FE                                   ??_usart_isr 0014  
      __end_of_MSSP_I2C_Master_Write_Blocking 5528                _MSSP_I2C_Master_Write_Blocking 54C0  
                                 _SSPCON1bits 000FC6                                   _SSPCON2bits 000FC5  
                                  _WDTCONbits 000FD1                                 ___fladd@signs 00AC  
               Get_Distance@ultrasonic_object 0087                          ?_CCP_PWM_Mode_Config 0021  
                                ___fladd@aexp 00AD                                  ___fladd@bexp 00AE  
           __end_of_adc_select_result_formate 5850                         ??_HAL_Timer0_Read_Val 0022  
                EUSART_Async_Init@_eusart_obj 0179                                    _RH_Decimal 00FB  
            adc_select_voltage_reference@_adc 001E  
