

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 04 00:58:33 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4620 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  00191C                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _port_registers
    87  00191C  80                 	db	128
    88  00191D  0F                 	db	15
    89  00191E  81                 	db	129
    90  00191F  0F                 	db	15
    91  001920  82                 	db	130
    92  001921  0F                 	db	15
    93  001922  83                 	db	131
    94  001923  0F                 	db	15
    95  001924  84                 	db	132
    96  001925  0F                 	db	15
    97                           
    98                           ;initializer for _lat_registers
    99  001926  89                 	db	137
   100  001927  0F                 	db	15
   101  001928  8A                 	db	138
   102  001929  0F                 	db	15
   103  00192A  8B                 	db	139
   104  00192B  0F                 	db	15
   105  00192C  8C                 	db	140
   106  00192D  0F                 	db	15
   107  00192E  8D                 	db	141
   108  00192F  0F                 	db	15
   109                           
   110                           ;initializer for _tris_registers
   111  001930  92                 	db	146
   112  001931  0F                 	db	15
   113  001932  93                 	db	147
   114  001933  0F                 	db	15
   115  001934  94                 	db	148
   116  001935  0F                 	db	15
   117  001936  95                 	db	149
   118  001937  0F                 	db	15
   119  001938  96                 	db	150
   120  001939  0F                 	db	15
   121                           
   122                           ;initializer for _flags
   123  00193A  0F                 	db	15
   124                           
   125                           ;initializer for _CCP1_Obj
   126  00193B  00                 	db	0
   127  00193C  02                 	db	2
   128  00193D  00                 	db	0
   129  00193E  12                 	db	18
   130  00193F  00                 	db	0
   131  001940  01F4               	dw	500
   132  001942  0000               	dw	0
   133  001944  F9                 	db	249
   134  001945  00                 	db	0
   135  001946  0F                 	db	15
   136                           
   137                           ;initializer for _lcd1
   138  001947  18                 	db	24
   139  001948  19                 	db	25
   140  001949  1A                 	db	26
   141  00194A  1B                 	db	27
   142  00194B  1C                 	db	28
   143  00194C  1D                 	db	29
   144                           
   145                           ;initializer for _W2_W4_W6_Motor_Control
   146  00194D  1A                 	db	26
   147  00194E  1B                 	db	27
   148                           
   149                           ;initializer for _W1_W3_W5_Motor_Control
   150  00194F  18                 	db	24
   151  001950  19                 	db	25
   152                           
   153                           ;initializer for _pinc0
   154  001951  90                 	db	144
   155                           
   156                           	psect	idataBANK0
   157  0019D4                     __pidataBANK0:
   158                           	callstack 0
   159                           
   160                           ;initializer for _CCP2_Obj
   161  0019D4  01                 	db	1
   162  0019D5  02                 	db	2
   163  0019D6  00                 	db	0
   164  0019D7  11                 	db	17
   165  0019D8  00                 	db	0
   166  0019D9  01F4               	dw	500
   167  0019DB  0000               	dw	0
   168  0019DD  F9                 	db	249
   169  0019DE  00                 	db	0
   170  0019DF  0F                 	db	15
   171  0000                     _INTCON2bits	set	4081
   172  0000                     _SSPSTATbits	set	4039
   173  0000                     _SSPADD	set	4040
   174  0000                     _SSPCON2bits	set	4037
   175  0000                     _SSPCON1bits	set	4038
   176  0000                     _SPBRGH	set	4016
   177  0000                     _SPBRG	set	4015
   178  0000                     _RCREG	set	4014
   179  0000                     _TXREG	set	4013
   180  0000                     _TRISCbits	set	3988
   181  0000                     _TXSTA1bits	set	4012
   182  0000                     _PR2	set	4043
   183  0000                     _ADCON1bits	set	4033
   184  0000                     _ADRESL	set	4035
   185  0000                     _ADRESH	set	4036
   186  0000                     _TRISD	set	3989
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISE	set	3990
   189  0000                     _PORTDbits	set	3971
   190  0000                     _LATDbits	set	3980
   191  0000                     _TRISDbits	set	3989
   192  0000                     _TRISBbits	set	3987
   193  0000                     _PORTBbits	set	3969
   194  0000                     _RCSTA1bits	set	4011
   195  0000                     _TXSTAbits	set	4012
   196  0000                     _TRISC	set	3988
   197  0000                     _RX9D	set	32088
   198  0000                     _ADCON2bits	set	4032
   199  0000                     _ADCON0bits	set	4034
   200  0000                     _PORTE	set	3972
   201  0000                     _PORTD	set	3971
   202  0000                     _PORTC	set	3970
   203  0000                     _PORTB	set	3969
   204  0000                     _PORTA	set	3968
   205  0000                     _LATA	set	3977
   206  0000                     _TRISA	set	3986
   207  0000                     _PIE1bits	set	3997
   208  0000                     _RCSTAbits	set	4011
   209  0000                     _T3CONbits	set	4017
   210  0000                     _CCP2CONbits	set	4026
   211  0000                     _CCP1CONbits	set	4029
   212  0000                     _CCPR1L	set	4030
   213  0000                     _CCPR2L	set	4027
   214  0000                     _RCONbits	set	4048
   215  0000                     _BAUDCONbits	set	4024
   216  0000                     _IPR2bits	set	4002
   217  0000                     _PIR2bits	set	4001
   218  0000                     _PIE2bits	set	4000
   219  0000                     _IPR1bits	set	3999
   220  0000                     _PIR1bits	set	3998
   221  0000                     _WDTCONbits	set	4049
   222  0000                     _T0CONbits	set	4053
   223  0000                     _INTCON3bits	set	4080
   224  0000                     _INTCONbits	set	4082
   225  0000                     _LATE	set	3981
   226  0000                     _LATD	set	3980
   227  0000                     _LATC	set	3979
   228  0000                     _LATB	set	3978
   229  0000                     _SSPBUF	set	4041
   230  0000                     _TMR0H	set	4055
   231  0000                     _TMR0L	set	4054
   232                           
   233                           	psect	smallconst
   234  001000                     __psmallconst:
   235                           	callstack 0
   236  001000  00                 	db	0
   237  001001  41                 	db	65	;'A'
   238  001002  54                 	db	84	;'T'
   239  001003  2B                 	db	43
   240  001004  55                 	db	85	;'U'
   241  001005  41                 	db	65	;'A'
   242  001006  52                 	db	82	;'R'
   243  001007  54                 	db	84	;'T'
   244  001008  3A                 	db	58	;':'
   245  001009  39                 	db	57	;'9'
   246  00100A  36                 	db	54	;'6'
   247  00100B  30                 	db	48	;'0'
   248  00100C  30                 	db	48	;'0'
   249  00100D  2C                 	db	44
   250  00100E  30                 	db	48	;'0'
   251  00100F  2C                 	db	44
   252  001010  30                 	db	48	;'0'
   253  001011  0D                 	db	13
   254  001012  0A                 	db	10
   255  001013  00                 	db	0
   256  001014  41                 	db	65	;'A'
   257  001015  54                 	db	84	;'T'
   258  001016  2B                 	db	43
   259  001017  52                 	db	82	;'R'
   260  001018  4E                 	db	78	;'N'
   261  001019  41                 	db	65	;'A'
   262  00101A  4D                 	db	77	;'M'
   263  00101B  45                 	db	69	;'E'
   264  00101C  3A                 	db	58	;':'
   265  00101D  52                 	db	82	;'R'
   266  00101E  6F                 	db	111	;'o'
   267  00101F  62                 	db	98	;'b'
   268  001020  6F                 	db	111	;'o'
   269  001021  74                 	db	116	;'t'
   270  001022  0D                 	db	13
   271  001023  0A                 	db	10
   272  001024  00                 	db	0
   273  001025                     STR_11:
   274  001025  20                 	db	32
   275  001026  20                 	db	32
   276  001027  20                 	db	32
   277  001028  20                 	db	32
   278  001029  20                 	db	32
   279  00102A  20                 	db	32
   280  00102B  20                 	db	32
   281  00102C  20                 	db	32
   282  00102D  20                 	db	32
   283  00102E  20                 	db	32
   284  00102F  20                 	db	32
   285  001030  20                 	db	32
   286  001031  20                 	db	32
   287  001032  20                 	db	32
   288  001033  00                 	db	0
   289  001034  41                 	db	65	;'A'
   290  001035  54                 	db	84	;'T'
   291  001036  2B                 	db	43
   292  001037  50                 	db	80	;'P'
   293  001038  53                 	db	83	;'S'
   294  001039  57                 	db	87	;'W'
   295  00103A  44                 	db	68	;'D'
   296  00103B  3A                 	db	58	;':'
   297  00103C  31                 	db	49	;'1'
   298  00103D  32                 	db	50	;'2'
   299  00103E  33                 	db	51	;'3'
   300  00103F  34                 	db	52	;'4'
   301  001040  0D                 	db	13
   302  001041  0A                 	db	10
   303  001042  00                 	db	0
   304  001043  41                 	db	65	;'A'
   305  001044  54                 	db	84	;'T'
   306  001045  2B                 	db	43
   307  001046  52                 	db	82	;'R'
   308  001047  4F                 	db	79	;'O'
   309  001048  4C                 	db	76	;'L'
   310  001049  45                 	db	69	;'E'
   311  00104A  3A                 	db	58	;':'
   312  00104B  30                 	db	48	;'0'
   313  00104C  0D                 	db	13
   314  00104D  0A                 	db	10
   315  00104E  00                 	db	0
   316  00104F                     STR_13:
   317  00104F  2D                 	db	45
   318  001050  3E                 	db	62	;'>'
   319  001051  20                 	db	32
   320  001052  00                 	db	0
   321  001053                     STR_9:
   322  001053  25                 	db	37
   323  001054  66                 	db	102	;'f'
   324  001055  00                 	db	0
   325  001056                     STR_5:
   326  001056  25                 	db	37
   327  001057  69                 	db	105	;'i'
   328  001058  00                 	db	0
   329  001059  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  0017C6                     __pcinit:
   335                           	callstack 0
   336  0017C6                     start_initialization:
   337                           	callstack 0
   338  0017C6                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK0 (12 bytes)
   342                           ; load TBLPTR registers with __pidataBANK0
   343  0017C6  0ED4               	movlw	low __pidataBANK0
   344  0017C8  6EF6               	movwf	tblptrl,c
   345  0017CA  0E19               	movlw	high __pidataBANK0
   346  0017CC  6EF7               	movwf	tblptrh,c
   347  0017CE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   348  0017D0  6EF8               	movwf	tblptru,c
   349  0017D2  EE00  F08F         	lfsr	0,__pdataBANK0
   350  0017D6  EE10 F00C          	lfsr	1,12
   351  0017DA                     copy_data0:
   352  0017DA  0009               	tblrd		*+
   353  0017DC  CFF5 FFEE          	movff	tablat,postinc0
   354  0017E0  50E5               	movf	postdec1,w,c
   355  0017E2  50E1               	movf	fsr1l,w,c
   356  0017E4  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to COMRAM (54 bytes)
   359                           ; load TBLPTR registers with __pidataCOMRAM
   360  0017E6  0E1C               	movlw	low __pidataCOMRAM
   361  0017E8  6EF6               	movwf	tblptrl,c
   362  0017EA  0E19               	movlw	high __pidataCOMRAM
   363  0017EC  6EF7               	movwf	tblptrh,c
   364  0017EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   365  0017F0  6EF8               	movwf	tblptru,c
   366  0017F2  EE00  F001         	lfsr	0,__pdataCOMRAM
   367  0017F6  EE10 F036          	lfsr	1,54
   368  0017FA                     copy_data1:
   369  0017FA  0009               	tblrd		*+
   370  0017FC  CFF5 FFEE          	movff	tablat,postinc0
   371  001800  50E5               	movf	postdec1,w,c
   372  001802  50E1               	movf	fsr1l,w,c
   373  001804  E1FA               	bnz	copy_data1
   374                           
   375                           ; Clear objects allocated to BANK0 (15 bytes)
   376  001806  EE00  F080         	lfsr	0,__pbssBANK0
   377  00180A  0E0F               	movlw	15
   378  00180C                     clear_0:
   379  00180C  6AEE               	clrf	postinc0,c
   380  00180E  06E8               	decf	wreg,f,c
   381  001810  E1FD               	bnz	clear_0
   382                           
   383                           ; Clear objects allocated to COMRAM (37 bytes)
   384  001812  EE00  F037         	lfsr	0,__pbssCOMRAM
   385  001816  0E25               	movlw	37
   386  001818                     clear_1:
   387  001818  6AEE               	clrf	postinc0,c
   388  00181A  06E8               	decf	wreg,f,c
   389  00181C  E1FD               	bnz	clear_1
   390  00181E                     end_of_initialization:
   391                           	callstack 0
   392  00181E                     __end_of__initialization:
   393                           	callstack 0
   394  00181E  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   395  001820  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   396  001822  0100               	movlb	0
   397  001824  EFA0  F00A         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMRAM
   400  000037                     __pbssCOMRAM:
   401                           	callstack 0
   402  000037                     _preloaded_val:
   403                           	callstack 0
   404  000037                     	ds	2
   405  000039                     _RB7_InterruptHandler_LOW:
   406                           	callstack 0
   407  000039                     	ds	2
   408  00003B                     _RB7_InterruptHandler_HIGH:
   409                           	callstack 0
   410  00003B                     	ds	2
   411  00003D                     _RB6_InterruptHandler_LOW:
   412                           	callstack 0
   413  00003D                     	ds	2
   414  00003F                     _RB6_InterruptHandler_HIGH:
   415                           	callstack 0
   416  00003F                     	ds	2
   417  000041                     _RB5_InterruptHandler_LOW:
   418                           	callstack 0
   419  000041                     	ds	2
   420  000043                     _RB5_InterruptHandler_HIGH:
   421                           	callstack 0
   422  000043                     	ds	2
   423  000045                     _RB4_InterruptHandler_LOW:
   424                           	callstack 0
   425  000045                     	ds	2
   426  000047                     _RB4_InterruptHandler_HIGH:
   427                           	callstack 0
   428  000047                     	ds	2
   429  000049                     _INT2_InterruptHandler:
   430                           	callstack 0
   431  000049                     	ds	2
   432  00004B                     _INT1_InterruptHandler:
   433                           	callstack 0
   434  00004B                     	ds	2
   435  00004D                     _INT0_InterruptHandler:
   436                           	callstack 0
   437  00004D                     	ds	2
   438  00004F                     _I2C_Report_Write_Collision:
   439                           	callstack 0
   440  00004F                     	ds	2
   441  000051                     _I2C_Report_Receive_Overflow:
   442                           	callstack 0
   443  000051                     	ds	2
   444  000053                     _I2C_DefaultInterruptHandler:
   445                           	callstack 0
   446  000053                     	ds	2
   447  000055                     _eusart_frameerr_CallBack:
   448                           	callstack 0
   449  000055                     	ds	2
   450  000057                     _eusart_overrunerr_CallBack:
   451                           	callstack 0
   452  000057                     	ds	2
   453  000059                     _eusart_Rx_InterruptHandler:
   454                           	callstack 0
   455  000059                     	ds	2
   456  00005B                     _Movement_State:
   457                           	callstack 0
   458  00005B                     	ds	1
   459                           
   460                           	psect	dataCOMRAM
   461  000001                     __pdataCOMRAM:
   462                           	callstack 0
   463  000001                     _port_registers:
   464                           	callstack 0
   465  000001                     	ds	10
   466  00000B                     _lat_registers:
   467                           	callstack 0
   468  00000B                     	ds	10
   469  000015                     _tris_registers:
   470                           	callstack 0
   471  000015                     	ds	10
   472  00001F                     _flags:
   473                           	callstack 0
   474  00001F                     	ds	1
   475  000020                     _CCP1_Obj:
   476                           	callstack 0
   477  000020                     	ds	12
   478  00002C                     _lcd1:
   479                           	callstack 0
   480  00002C                     	ds	6
   481  000032                     _W2_W4_W6_Motor_Control:
   482                           	callstack 0
   483  000032                     	ds	2
   484  000034                     _W1_W3_W5_Motor_Control:
   485                           	callstack 0
   486  000034                     	ds	2
   487  000036                     _pinc0:
   488                           	callstack 0
   489  000036                     	ds	1
   490                           
   491                           	psect	bssBANK0
   492  000080                     __pbssBANK0:
   493                           	callstack 0
   494  000080                     	ds	9
   495  000089                     	ds	6
   496                           
   497                           	psect	dataBANK0
   498  00008F                     __pdataBANK0:
   499                           	callstack 0
   500  00008F                     _CCP2_Obj:
   501                           	callstack 0
   502  00008F                     	ds	12
   503                           
   504                           	psect	cstackBANK0
   505  00009B                     __pcstackBANK0:
   506                           	callstack 0
   507  00009B                     lcd_4bit_send_string_data_pos@lcd:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x0
   511  00009B                     	ds	2
   512  00009D                     lcd_4bit_send_string_data_pos@row:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x2
   516  00009D                     	ds	1
   517  00009E                     lcd_4bit_send_string_data_pos@colum:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521  00009E                     	ds	1
   522  00009F                     lcd_4bit_send_string_data_pos@str:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x4
   526  00009F                     	ds	2
   527                           
   528                           	psect	cstackCOMRAM
   529  00005C                     __pcstackCOMRAM:
   530                           	callstack 0
   531  00005C                     RB4_ISR@Handler_Select:
   532                           	callstack 0
   533  00005C                     RB5_ISR@Handler_Select:
   534                           	callstack 0
   535  00005C                     RB6_ISR@Handler_Select:
   536                           	callstack 0
   537  00005C                     RB7_ISR@Handler_Select:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x0
   541  00005C                     	ds	1
   542  00005D                     ??_InterruptManagerLow:
   543                           
   544                           ; 1 bytes @ 0x1
   545  00005D                     	ds	3
   546  000060                     GPIO_Pin_Direction_Initialize@_pin_config:
   547                           	callstack 0
   548  000060                     GPIO_Pin_Write_Logic@_pin_config:
   549                           	callstack 0
   550  000060                     GPIO_Pin_Toggle_Logic@_pin_config:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x4
   554  000060                     	ds	2
   555  000062                     ??_GPIO_Pin_Direction_Initialize:
   556  000062                     ??_GPIO_Pin_Toggle_Logic:
   557  000062                     GPIO_Pin_Write_Logic@logic:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x6
   561  000062                     	ds	1
   562  000063                     ??_GPIO_Pin_Write_Logic:
   563                           
   564                           ; 1 bytes @ 0x7
   565  000063                     	ds	5
   566  000068                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0xC
   570  000068                     	ds	1
   571  000069                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0xD
   575  000069                     	ds	1
   576  00006A                     lcd_4bits_send_enable_signal@lcd:
   577                           	callstack 0
   578  00006A                     lcd_send_4bits@lcd:
   579                           	callstack 0
   580  00006A                     GPIO_Pin_Initialize@_pin_config:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0xE
   584  00006A                     	ds	2
   585  00006C                     lcd_send_4bits@data_command:
   586                           	callstack 0
   587  00006C                     GPIO_Pin_Initialize@ERRORSTATUS:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x10
   591  00006C                     	ds	1
   592  00006D                     lcd_4bit_send_command@lcd:
   593                           	callstack 0
   594  00006D                     lcd_4bit_send_char_data@lcd:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x11
   598  00006D                     	ds	2
   599  00006F                     lcd_4bit_send_command@command:
   600                           	callstack 0
   601  00006F                     lcd_4bit_send_char_data@data:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x13
   605  00006F                     	ds	1
   606  000070                     lcd_4bit_send_command@ERRORSTATUS:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x14
   610  000070                     	ds	1
   611  000071                     lcd_4bit_initialize@lcd:
   612                           	callstack 0
   613  000071                     lcd_4bits_set_courser@lcd:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x15
   617  000071                     	ds	2
   618  000073                     ??_lcd_4bit_initialize:
   619  000073                     lcd_4bits_set_courser@row:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x17
   623  000073                     	ds	1
   624  000074                     lcd_4bits_set_courser@colum:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x18
   628  000074                     	ds	1
   629  000075                     ??_lcd_4bits_set_courser:
   630  000075                     lcd_4bit_initialize@pin_lcd_counter:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x19
   634  000075                     	ds	1
   635  000076                     
   636                           ; 1 bytes @ 0x1A
   637  000076                     	ds	1
   638  000077                     ??_main:
   639                           
   640                           ; 1 bytes @ 0x1B
   641  000077                     	ds	2
   642                           
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 55 in file "application.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  2  1716[None  ] int 
   655 ;; Registers used:
   656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;Total ram usage:        2 bytes
   667 ;; Hardware stack levels required when called: 9
   668 ;; This function calls:
   669 ;;		_GPIO_Pin_Toggle_Logic
   670 ;;		_GPIO_Pin_Write_Logic
   671 ;;		_application_intialize
   672 ;;		_lcd_4bit_send_string_data_pos
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text0
   679  001540                     __ptext0:
   680                           	callstack 0
   681  001540                     _main:
   682                           	callstack 22
   683  001540                     
   684                           ;application.c: 57:     application_intialize();
   685  001540  ECA9  F00C         	call	_application_intialize	;wreg free
   686  001544                     
   687                           ;application.c: 58:     lcd_4bit_send_string_data_pos(&lcd1,1,1,"              ");
   688  001544  0E2C               	movlw	low _lcd1
   689  001546  0100               	movlb	0	; () banked
   690  001548  6F9B               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   691  00154A  0E00               	movlw	high _lcd1
   692  00154C  6F9C               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   693  00154E  0E01               	movlw	1
   694  001550  6F9D               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   695  001552  0E01               	movlw	1
   696  001554  6F9E               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   697  001556  0E25               	movlw	low STR_11
   698  001558  6F9F               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   699  00155A  0E10               	movlw	high STR_11
   700  00155C  6FA0               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   701  00155E  ECF7  F00A         	call	_lcd_4bit_send_string_data_pos	;wreg free
   702  001562                     
   703                           ;application.c: 59:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"              ");
   704  001562  0E2C               	movlw	low _lcd1
   705  001564  0100               	movlb	0	; () banked
   706  001566  6F9B               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   707  001568  0E00               	movlw	high _lcd1
   708  00156A  6F9C               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   709  00156C  0E02               	movlw	2
   710  00156E  6F9D               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   711  001570  0E01               	movlw	1
   712  001572  6F9E               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   713  001574  0E25               	movlw	low STR_11
   714  001576  6F9F               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   715  001578  0E10               	movlw	high STR_11
   716  00157A  6FA0               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   717  00157C  ECF7  F00A         	call	_lcd_4bit_send_string_data_pos	;wreg free
   718  001580                     
   719                           ;application.c: 60:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-> ");
   720  001580  0E2C               	movlw	low _lcd1
   721  001582  0100               	movlb	0	; () banked
   722  001584  6F9B               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
   723  001586  0E00               	movlw	high _lcd1
   724  001588  6F9C               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
   725  00158A  0E02               	movlw	2
   726  00158C  6F9D               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
   727  00158E  0E01               	movlw	1
   728  001590  6F9E               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
   729  001592  0E4F               	movlw	low STR_13
   730  001594  6F9F               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
   731  001596  0E10               	movlw	high STR_13
   732  001598  6FA0               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
   733  00159A  ECF7  F00A         	call	_lcd_4bit_send_string_data_pos	;wreg free
   734  00159E                     
   735                           ;application.c: 61:     GPIO_Pin_Write_Logic(&pinc0,GPIO_HIGH);
   736  00159E  0E36               	movlw	low _pinc0
   737  0015A0  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
   738  0015A2  0E00               	movlw	high _pinc0
   739  0015A4  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
   740  0015A6  0E01               	movlw	1
   741  0015A8  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   742  0015AA  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   743  0015AE                     
   744                           ;application.c: 62:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   745  0015AE  0E0B               	movlw	11
   746  0015B0  6E78               	movwf	(??_main+1)^0,c
   747  0015B2  0E26               	movlw	38
   748  0015B4  6E77               	movwf	??_main^0,c
   749  0015B6  0E5E               	movlw	94
   750  0015B8                     u5497:
   751  0015B8  2EE8               	decfsz	wreg,f,c
   752  0015BA  D7FE               	bra	u5497
   753  0015BC  2E77               	decfsz	??_main^0,f,c
   754  0015BE  D7FC               	bra	u5497
   755  0015C0  2E78               	decfsz	(??_main+1)^0,f,c
   756  0015C2  D7FA               	bra	u5497
   757  0015C4                     l6554:
   758                           
   759                           ;application.c: 64:     {;application.c: 65:        GPIO_Pin_Toggle_Logic(&pinc0);
   760  0015C4  0E36               	movlw	low _pinc0
   761  0015C6  6E60               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
   762  0015C8  0E00               	movlw	high _pinc0
   763  0015CA  6E61               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
   764  0015CC  EC76  F00B         	call	_GPIO_Pin_Toggle_Logic	;wreg free
   765  0015D0                     
   766                           ;application.c: 66:            _delay((unsigned long)((500)*(8000000/4000.0)));
   767  0015D0  0E06               	movlw	6
   768  0015D2  6E78               	movwf	(??_main+1)^0,c
   769  0015D4  0E13               	movlw	19
   770  0015D6  6E77               	movwf	??_main^0,c
   771  0015D8  0EAE               	movlw	174
   772  0015DA                     u5507:
   773  0015DA  2EE8               	decfsz	wreg,f,c
   774  0015DC  D7FE               	bra	u5507
   775  0015DE  2E77               	decfsz	??_main^0,f,c
   776  0015E0  D7FC               	bra	u5507
   777  0015E2  2E78               	decfsz	(??_main+1)^0,f,c
   778  0015E4  D7FA               	bra	u5507
   779  0015E6  EFE2  F00A         	goto	l6554
   780  0015EA  EF43  F001         	goto	start
   781  0015EE                     __end_of_main:
   782                           	callstack 0
   783                           
   784 ;; *************** function _lcd_4bit_send_string_data_pos *****************
   785 ;; Defined at:
   786 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  lcd             2    0[BANK0 ] PTR const struct .
   789 ;;		 -> lcd1(6), 
   790 ;;  row             1    2[BANK0 ] unsigned char 
   791 ;;  colum           1    3[BANK0 ] unsigned char 
   792 ;;  str             2    4[BANK0 ] PTR unsigned char 
   793 ;;		 -> STR_13(4), STR_12(15), STR_11(15), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  ERRORSTATUS     1    0        unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      unsigned char 
   798 ;; Registers used:
   799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   805 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;Total ram usage:        6 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 8
   812 ;; This function calls:
   813 ;;		_lcd_4bit_send_char_data
   814 ;;		_lcd_4bits_set_courser
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text1
   821  0015EE                     __ptext1:
   822                           	callstack 0
   823  0015EE                     _lcd_4bit_send_string_data_pos:
   824                           	callstack 22
   825  0015EE                     
   826                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
   827  0015EE  0100               	movlb	0	; () banked
   828  0015F0  519B               	movf	lcd_4bit_send_string_data_pos@lcd& (0+255),w,b
   829  0015F2  119C               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),w,b
   830  0015F4  B4D8               	btfsc	status,2,c
   831  0015F6  EFFF  F00A         	goto	u5461
   832  0015FA  EF01  F00B         	goto	u5460
   833  0015FE                     u5461:
   834  0015FE  EF0A  F00B         	goto	l6532
   835  001602                     u5460:
   836  001602                     
   837                           ; BSR set to: 0
   838  001602  519F               	movf	lcd_4bit_send_string_data_pos@str& (0+255),w,b
   839  001604  11A0               	iorwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),w,b
   840  001606  A4D8               	btfss	status,2,c
   841  001608  EF08  F00B         	goto	u5471
   842  00160C  EF0A  F00B         	goto	u5470
   843  001610                     u5471:
   844  001610  EF0C  F00B         	goto	l6534
   845  001614                     u5470:
   846  001614                     l6532:
   847                           
   848                           ; BSR set to: 0
   849                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
   850  001614  EF38  F00B         	goto	l155
   851  001618                     l6534:
   852                           
   853                           ; BSR set to: 0
   854                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
   855  001618  C09B  F071         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
   856  00161C  C09C  F072         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
   857  001620  C09D  F073         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
   858  001624  C09E  F074         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
   859  001628  EC48  F00A         	call	_lcd_4bits_set_courser	;wreg free
   860                           
   861                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
   862  00162C  EF29  F00B         	goto	l6540
   863  001630                     l6536:
   864                           
   865                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
   866  001630  C09B  F06D         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
   867  001634  C09C  F06E         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
   868  001638  C09F  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
   869  00163C  C0A0  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
   870  001640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   871  001640  6AF8               	clrf	tblptru,c
   872  001642                     	endif
   873  001642                     	if	0	;tblptru may be non-zero
   874  001642                     	endif
   875  001642  0008               	tblrd		*
   876  001644  CFF5 F06F          	movff	tablat,lcd_4bit_send_char_data@data
   877  001648  EC14  F00C         	call	_lcd_4bit_send_char_data	;wreg free
   878  00164C  0100               	movlb	0	; () banked
   879  00164E  4B9F               	infsnz	lcd_4bit_send_string_data_pos@str& (0+255),f,b
   880  001650  2BA0               	incf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),f,b
   881  001652                     l6540:
   882                           
   883                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
   884  001652  C09F  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
   885  001656  C0A0  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
   886  00165A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   887  00165A  6AF8               	clrf	tblptru,c
   888  00165C                     	endif
   889  00165C                     	if	0	;tblptru may be non-zero
   890  00165C                     	endif
   891  00165C  0008               	tblrd		*
   892  00165E  50F5               	movf	tablat,w,c
   893  001660  0900               	iorlw	0
   894  001662  A4D8               	btfss	status,2,c
   895  001664  EF36  F00B         	goto	u5481
   896  001668  EF38  F00B         	goto	u5480
   897  00166C                     u5481:
   898  00166C  EF18  F00B         	goto	l6536
   899  001670                     u5480:
   900  001670                     l155:
   901  001670  0012               	return		;funcret
   902  001672                     __end_of_lcd_4bit_send_string_data_pos:
   903                           	callstack 0
   904                           
   905 ;; *************** function _lcd_4bits_set_courser *****************
   906 ;; Defined at:
   907 ;;		line 591 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  lcd             2   21[COMRAM] PTR const struct .
   910 ;;		 -> lcd1(6), 
   911 ;;  row             1   23[COMRAM] unsigned char 
   912 ;;  colum           1   24[COMRAM] unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  ERRORSTATUS     1    0        unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      unsigned char 
   917 ;; Registers used:
   918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:        6 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 7
   931 ;; This function calls:
   932 ;;		_lcd_4bit_send_command
   933 ;; This function is called by:
   934 ;;		_lcd_4bit_send_string_data_pos
   935 ;;		_lcd_4bit_send_char_data_pos
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text2
   940  001490                     __ptext2:
   941                           	callstack 0
   942  001490                     _lcd_4bits_set_courser:
   943                           	callstack 22
   944  001490                     
   945                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 594:         if ( ((void*)0)==lcd)
   946  001490  5071               	movf	lcd_4bits_set_courser@lcd^0,w,c
   947  001492  1072               	iorwf	(lcd_4bits_set_courser@lcd+1)^0,w,c
   948  001494  A4D8               	btfss	status,2,c
   949  001496  EF4F  F00A         	goto	u3931
   950  00149A  EF51  F00A         	goto	u3930
   951  00149E                     u3931:
   952  00149E  EF53  F00A         	goto	l5188
   953  0014A2                     u3930:
   954  0014A2                     
   955                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 597:     }
   956  0014A2  EF9F  F00A         	goto	l281
   957  0014A6                     l5188:
   958                           
   959                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 599:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 60
      +                          0:             colum--;
   960  0014A6  0674               	decf	lcd_4bits_set_courser@colum^0,f,c
   961                           
   962                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 601:             switch (row)
   963  0014A8  EF82  F00A         	goto	l5200
   964  0014AC                     l5190:
   965  0014AC  C071  F06D         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
   966  0014B0  C072  F06E         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
   967  0014B4  5074               	movf	lcd_4bits_set_courser@colum^0,w,c
   968  0014B6  0F80               	addlw	128
   969  0014B8  6E6F               	movwf	lcd_4bit_send_command@command^0,c
   970  0014BA  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
   971  0014BE  EF9F  F00A         	goto	l281
   972  0014C2                     l5192:
   973  0014C2  C071  F06D         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
   974  0014C6  C072  F06E         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
   975  0014CA  5074               	movf	lcd_4bits_set_courser@colum^0,w,c
   976  0014CC  0FC0               	addlw	192
   977  0014CE  6E6F               	movwf	lcd_4bit_send_command@command^0,c
   978  0014D0  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
   979  0014D4  EF9F  F00A         	goto	l281
   980  0014D8                     l5194:
   981  0014D8  C071  F06D         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
   982  0014DC  C072  F06E         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
   983  0014E0  5074               	movf	lcd_4bits_set_courser@colum^0,w,c
   984  0014E2  0F94               	addlw	148
   985  0014E4  6E6F               	movwf	lcd_4bit_send_command@command^0,c
   986  0014E6  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
   987  0014EA  EF9F  F00A         	goto	l281
   988  0014EE                     l5196:
   989  0014EE  C071  F06D         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
   990  0014F2  C072  F06E         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
   991  0014F6  5074               	movf	lcd_4bits_set_courser@colum^0,w,c
   992  0014F8  0FD4               	addlw	212
   993  0014FA  6E6F               	movwf	lcd_4bit_send_command@command^0,c
   994  0014FC  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
   995  001500  EF9F  F00A         	goto	l281
   996  001504                     l5200:
   997  001504  5073               	movf	lcd_4bits_set_courser@row^0,w,c
   998  001506  6E75               	movwf	??_lcd_4bits_set_courser^0,c
   999  001508  6A76               	clrf	(??_lcd_4bits_set_courser+1)^0,c
  1000                           
  1001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1002                           ; Switch size 1, requested type "simple"
  1003                           ; Number of cases is 1, Range of values is 0 to 0
  1004                           ; switch strategies available:
  1005                           ; Name         Instructions Cycles
  1006                           ; simple_byte            4     3 (average)
  1007                           ;	Chosen strategy is simple_byte
  1008  00150A  5076               	movf	(??_lcd_4bits_set_courser+1)^0,w,c
  1009  00150C  0A00               	xorlw	0	; case 0
  1010  00150E  B4D8               	btfsc	status,2,c
  1011  001510  EF8C  F00A         	goto	l6618
  1012  001514  EF9F  F00A         	goto	l281
  1013  001518                     l6618:
  1014                           
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 4, Range of values is 1 to 4
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte           13     7 (average)
  1020                           ;	Chosen strategy is simple_byte
  1021  001518  5075               	movf	??_lcd_4bits_set_courser^0,w,c
  1022  00151A  0A01               	xorlw	1	; case 1
  1023  00151C  B4D8               	btfsc	status,2,c
  1024  00151E  EF56  F00A         	goto	l5190
  1025  001522  0A03               	xorlw	3	; case 2
  1026  001524  B4D8               	btfsc	status,2,c
  1027  001526  EF61  F00A         	goto	l5192
  1028  00152A  0A01               	xorlw	1	; case 3
  1029  00152C  B4D8               	btfsc	status,2,c
  1030  00152E  EF6C  F00A         	goto	l5194
  1031  001532  0A07               	xorlw	7	; case 4
  1032  001534  B4D8               	btfsc	status,2,c
  1033  001536  EF77  F00A         	goto	l5196
  1034  00153A  EF9F  F00A         	goto	l281
  1035  00153E                     l281:
  1036  00153E  0012               	return		;funcret
  1037  001540                     __end_of_lcd_4bits_set_courser:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _lcd_4bit_send_char_data *****************
  1041 ;; Defined at:
  1042 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  lcd             2   17[COMRAM] PTR const struct .
  1045 ;;		 -> lcd1(6), 
  1046 ;;  data            1   19[COMRAM] unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  ERRORSTATUS     1    0        unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1058 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 6
  1065 ;; This function calls:
  1066 ;;		_GPIO_Pin_Write_Logic
  1067 ;;		_lcd_4bits_send_enable_signal
  1068 ;;		_lcd_send_4bits
  1069 ;; This function is called by:
  1070 ;;		_lcd_4bit_send_string_data_pos
  1071 ;;		_lcd_4bit_send_char_data_pos
  1072 ;;		_lcd_4bit_send_string_data
  1073 ;;		_lcd_4bit_send_custom_char
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text3
  1078  001828                     __ptext3:
  1079                           	callstack 0
  1080  001828                     _lcd_4bit_send_char_data:
  1081                           	callstack 23
  1082  001828                     
  1083                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  1084  001828  506D               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1085  00182A  106E               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1086  00182C  A4D8               	btfss	status,2,c
  1087  00182E  EF1B  F00C         	goto	u3921
  1088  001832  EF1D  F00C         	goto	u3920
  1089  001836                     u3921:
  1090  001836  EF1F  F00C         	goto	l5178
  1091  00183A                     u3920:
  1092  00183A                     
  1093                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  1094  00183A  EF44  F00C         	goto	l130
  1095  00183E                     l5178:
  1096  00183E  C06D  F060         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  1097  001842  C06E  F061         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1098  001846  0E01               	movlw	1
  1099  001848  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1100  00184A  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1101                           
  1102                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  1103  00184E  C06D  F06A         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1104  001852  C06E  F06B         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1105  001856  386F               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1106  001858  0B0F               	andlw	15
  1107  00185A  6E6C               	movwf	lcd_send_4bits@data_command^0,c
  1108  00185C  EC39  F00B         	call	_lcd_send_4bits	;wreg free
  1109                           
  1110                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  1111  001860  C06D  F06A         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1112  001864  C06E  F06B         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1113  001868  EC6A  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1114                           
  1115                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  1116  00186C  C06D  F06A         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1117  001870  C06E  F06B         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1118  001874  C06F  F06C         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1119  001878  EC39  F00B         	call	_lcd_send_4bits	;wreg free
  1120                           
  1121                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  1122  00187C  C06D  F06A         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1123  001880  C06E  F06B         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1124  001884  EC6A  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1125  001888                     l130:
  1126  001888  0012               	return		;funcret
  1127  00188A                     __end_of_lcd_4bit_send_char_data:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _application_intialize *****************
  1131 ;; Defined at:
  1132 ;;		line 70 in file "application.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 8
  1153 ;; This function calls:
  1154 ;;		_GPIO_Pin_Initialize
  1155 ;;		_lcd_4bit_initialize
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text4
  1162  001952                     __ptext4:
  1163                           	callstack 0
  1164  001952                     _application_intialize:
  1165                           	callstack 22
  1166  001952                     
  1167                           ;application.c: 72:     GPIO_Pin_Initialize(&pinc0);
  1168  001952  0E36               	movlw	low _pinc0
  1169  001954  6E6A               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1170  001956  0E00               	movlw	high _pinc0
  1171  001958  6E6B               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1172  00195A  EC45  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1173                           
  1174                           ;application.c: 73:     lcd_4bit_initialize(&lcd1);
  1175  00195E  0E2C               	movlw	low _lcd1
  1176  001960  6E71               	movwf	lcd_4bit_initialize@lcd^0,c
  1177  001962  0E00               	movlw	high _lcd1
  1178  001964  6E72               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  1179  001966  EC61  F009         	call	_lcd_4bit_initialize	;wreg free
  1180  00196A  0012               	return		;funcret
  1181  00196C                     __end_of_application_intialize:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _lcd_4bit_initialize *****************
  1185 ;; Defined at:
  1186 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  lcd             2   21[COMRAM] PTR const struct .
  1189 ;;		 -> lcd1(6), 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  pin_lcd_coun    1   25[COMRAM] unsigned char 
  1192 ;;  ERRORSTATUS     1    0        unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      unsigned char 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        5 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 7
  1209 ;; This function calls:
  1210 ;;		_GPIO_Pin_Initialize
  1211 ;;		_lcd_4bit_send_command
  1212 ;; This function is called by:
  1213 ;;		_application_intialize
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text5
  1218  0012C2                     __ptext5:
  1219                           	callstack 0
  1220  0012C2                     _lcd_4bit_initialize:
  1221                           	callstack 22
  1222  0012C2                     
  1223                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  1224  0012C2  5071               	movf	lcd_4bit_initialize@lcd^0,w,c
  1225  0012C4  1072               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  1226  0012C6  A4D8               	btfss	status,2,c
  1227  0012C8  EF68  F009         	goto	u3901
  1228  0012CC  EF6A  F009         	goto	u3900
  1229  0012D0                     u3901:
  1230  0012D0  EF6C  F009         	goto	l5132
  1231  0012D4                     u3900:
  1232  0012D4                     
  1233                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  1234  0012D4  EFEC  F009         	goto	l120
  1235  0012D8                     l5132:
  1236  0012D8  C071  F06A         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  1237  0012DC  C072  F06B         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  1238  0012E0  EC45  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1239  0012E4  0E01               	movlw	1
  1240  0012E6  2471               	addwf	lcd_4bit_initialize@lcd^0,w,c
  1241  0012E8  6E6A               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1242  0012EA  0E00               	movlw	0
  1243  0012EC  2072               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  1244  0012EE  6E6B               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1245  0012F0  EC45  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1246                           
  1247                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  1248  0012F4  0E00               	movlw	0
  1249  0012F6  6E75               	movwf	lcd_4bit_initialize@pin_lcd_counter^0,c
  1250  0012F8                     l5142:
  1251  0012F8  5075               	movf	lcd_4bit_initialize@pin_lcd_counter^0,w,c
  1252  0012FA  2471               	addwf	lcd_4bit_initialize@lcd^0,w,c
  1253  0012FC  6E73               	movwf	??_lcd_4bit_initialize^0,c
  1254  0012FE  0E00               	movlw	0
  1255  001300  2072               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  1256  001302  6E74               	movwf	(??_lcd_4bit_initialize+1)^0,c
  1257  001304  0E02               	movlw	2
  1258  001306  2473               	addwf	??_lcd_4bit_initialize^0,w,c
  1259  001308  6E6A               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1260  00130A  0E00               	movlw	0
  1261  00130C  2074               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  1262  00130E  6E6B               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1263  001310  EC45  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1264  001314                     
  1265                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  1266  001314  2A75               	incf	lcd_4bit_initialize@pin_lcd_counter^0,f,c
  1267  001316  0E03               	movlw	3
  1268  001318  6475               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter^0,c
  1269  00131A  EF91  F009         	goto	u3911
  1270  00131E  EF93  F009         	goto	u3910
  1271  001322                     u3911:
  1272  001322  EF7C  F009         	goto	l5142
  1273  001326                     u3910:
  1274  001326                     
  1275                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(8000000/4
      +                          000.0)));
  1276  001326  0E34               	movlw	52
  1277  001328  6E73               	movwf	??_lcd_4bit_initialize^0,c
  1278  00132A  0EF2               	movlw	242
  1279  00132C                     u5517:
  1280  00132C  2EE8               	decfsz	wreg,f,c
  1281  00132E  D7FE               	bra	u5517
  1282  001330  2E73               	decfsz	??_lcd_4bit_initialize^0,f,c
  1283  001332  D7FC               	bra	u5517
  1284  001334  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1285  001338  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1286  00133C  0E38               	movlw	56
  1287  00133E  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1288  001340  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1289  001344                     
  1290                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(8000000/40
      +                          00.0)));
  1291  001344  0E0D               	movlw	13
  1292  001346  6E73               	movwf	??_lcd_4bit_initialize^0,c
  1293  001348  0EFC               	movlw	252
  1294  00134A                     u5527:
  1295  00134A  2EE8               	decfsz	wreg,f,c
  1296  00134C  D7FE               	bra	u5527
  1297  00134E  2E73               	decfsz	??_lcd_4bit_initialize^0,f,c
  1298  001350  D7FC               	bra	u5527
  1299  001352  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1300  001356  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1301  00135A  0E38               	movlw	56
  1302  00135C  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1303  00135E  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1304  001362                     
  1305                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(8000000/
      +                          4000000.0)));
  1306  001362  0E64               	movlw	100
  1307  001364                     u5537:
  1308  001364  2EE8               	decfsz	wreg,f,c
  1309  001366  D7FE               	bra	u5537
  1310  001368  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1311  00136C  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1312  001370  0E38               	movlw	56
  1313  001372  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1314  001374  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1315  001378  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1316  00137C  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1317  001380  0E01               	movlw	1
  1318  001382  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1319  001384  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1320  001388  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1321  00138C  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1322  001390  0E02               	movlw	2
  1323  001392  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1324  001394  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1325  001398  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1326  00139C  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1327  0013A0  0E06               	movlw	6
  1328  0013A2  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1329  0013A4  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1330  0013A8  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1331  0013AC  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1332  0013B0  0E0D               	movlw	13
  1333  0013B2  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1334  0013B4  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1335  0013B8  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1336  0013BC  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1337  0013C0  0E28               	movlw	40
  1338  0013C2  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1339  0013C4  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1340  0013C8  C071  F06D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1341  0013CC  C072  F06E         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1342  0013D0  0E80               	movlw	128
  1343  0013D2  6E6F               	movwf	lcd_4bit_send_command@command^0,c
  1344  0013D4  ECAE  F00B         	call	_lcd_4bit_send_command	;wreg free
  1345  0013D8                     l120:
  1346  0013D8  0012               	return		;funcret
  1347  0013DA                     __end_of_lcd_4bit_initialize:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _lcd_4bit_send_command *****************
  1351 ;; Defined at:
  1352 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  lcd             2   17[COMRAM] PTR const struct .
  1355 ;;		 -> lcd1(6), 
  1356 ;;  command         1   19[COMRAM] unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  ERRORSTATUS     1   20[COMRAM] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      unsigned char 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1368 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 6
  1375 ;; This function calls:
  1376 ;;		_GPIO_Pin_Write_Logic
  1377 ;;		_lcd_4bits_send_enable_signal
  1378 ;;		_lcd_send_4bits
  1379 ;; This function is called by:
  1380 ;;		_lcd_4bit_initialize
  1381 ;;		_lcd_4bits_set_courser
  1382 ;;		_lcd_4bit_send_custom_char
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text6
  1387  00175C                     __ptext6:
  1388                           	callstack 0
  1389  00175C                     _lcd_4bit_send_command:
  1390                           	callstack 22
  1391  00175C                     
  1392                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  1393  00175C  506D               	movf	lcd_4bit_send_command@lcd^0,w,c
  1394  00175E  106E               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  1395  001760  A4D8               	btfss	status,2,c
  1396  001762  EFB5  F00B         	goto	u3861
  1397  001766  EFB7  F00B         	goto	u3860
  1398  00176A                     u3861:
  1399  00176A  EFBB  F00B         	goto	l5108
  1400  00176E                     u3860:
  1401  00176E                     
  1402                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
  1403  00176E  0E00               	movlw	0
  1404  001770  6E70               	movwf	lcd_4bit_send_command@ERRORSTATUS^0,c
  1405                           
  1406                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  1407  001772  EFE1  F00B         	goto	l5110
  1408  001776                     l5108:
  1409                           
  1410                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
  1411  001776  C06D  F060         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
  1412  00177A  C06E  F061         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1413  00177E  0E00               	movlw	0
  1414  001780  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1415  001782  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1416  001786  6E70               	movwf	lcd_4bit_send_command@ERRORSTATUS^0,c
  1417                           
  1418                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  1419  001788  C06D  F06A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1420  00178C  C06E  F06B         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1421  001790  386F               	swapf	lcd_4bit_send_command@command^0,w,c
  1422  001792  0B0F               	andlw	15
  1423  001794  6E6C               	movwf	lcd_send_4bits@data_command^0,c
  1424  001796  EC39  F00B         	call	_lcd_send_4bits	;wreg free
  1425                           
  1426                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  1427  00179A  C06D  F06A         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1428  00179E  C06E  F06B         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1429  0017A2  EC6A  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1430                           
  1431                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  1432  0017A6  C06D  F06A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1433  0017AA  C06E  F06B         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1434  0017AE  C06F  F06C         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  1435  0017B2  EC39  F00B         	call	_lcd_send_4bits	;wreg free
  1436                           
  1437                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  1438  0017B6  C06D  F06A         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1439  0017BA  C06E  F06B         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1440  0017BE  EC6A  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1441  0017C2                     l5110:
  1442                           
  1443                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
  1444  0017C2  5070               	movf	lcd_4bit_send_command@ERRORSTATUS^0,w,c
  1445  0017C4  0012               	return		;funcret
  1446  0017C6                     __end_of_lcd_4bit_send_command:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _lcd_send_4bits *****************
  1450 ;; Defined at:
  1451 ;;		line 529 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  lcd             2   14[COMRAM] PTR const struct .
  1454 ;;		 -> lcd1(6), 
  1455 ;;  data_command    1   16[COMRAM] unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  ERRORSTATUS     1    0        unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1467 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;Total ram usage:        3 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 5
  1474 ;; This function calls:
  1475 ;;		_GPIO_Pin_Write_Logic
  1476 ;; This function is called by:
  1477 ;;		_lcd_4bit_send_command
  1478 ;;		_lcd_4bit_send_char_data
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text7
  1483  001672                     __ptext7:
  1484                           	callstack 0
  1485  001672                     _lcd_send_4bits:
  1486                           	callstack 22
  1487  001672                     
  1488                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 532:         if ( ((void*)0)==lcd)
  1489  001672  506A               	movf	lcd_send_4bits@lcd^0,w,c
  1490  001674  106B               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  1491  001676  A4D8               	btfss	status,2,c
  1492  001678  EF40  F00B         	goto	u3771
  1493  00167C  EF42  F00B         	goto	u3770
  1494  001680                     u3771:
  1495  001680  EF44  F00B         	goto	l5048
  1496  001684                     u3770:
  1497  001684                     
  1498                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 535:     }
  1499  001684  EF75  F00B         	goto	l252
  1500  001688                     l5048:
  1501                           
  1502                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 537:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 53
      +                          8:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  1503  001688  0E02               	movlw	2
  1504  00168A  246A               	addwf	lcd_send_4bits@lcd^0,w,c
  1505  00168C  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1506  00168E  0E00               	movlw	0
  1507  001690  206B               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1508  001692  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1509  001694  506C               	movf	lcd_send_4bits@data_command^0,w,c
  1510  001696  0B01               	andlw	1
  1511  001698  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1512  00169A  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1513                           
  1514                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 539:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  1515  00169E  0E03               	movlw	3
  1516  0016A0  246A               	addwf	lcd_send_4bits@lcd^0,w,c
  1517  0016A2  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1518  0016A4  0E00               	movlw	0
  1519  0016A6  206B               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1520  0016A8  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1521  0016AA  90D8               	bcf	status,0,c
  1522  0016AC  306C               	rrcf	lcd_send_4bits@data_command^0,w,c
  1523  0016AE  0B01               	andlw	1
  1524  0016B0  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1525  0016B2  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1526                           
  1527                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 540:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  1528  0016B6  0E04               	movlw	4
  1529  0016B8  246A               	addwf	lcd_send_4bits@lcd^0,w,c
  1530  0016BA  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1531  0016BC  0E00               	movlw	0
  1532  0016BE  206B               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1533  0016C0  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1534  0016C2  406C               	rrncf	lcd_send_4bits@data_command^0,w,c
  1535  0016C4  42E8               	rrncf	wreg,f,c
  1536  0016C6  0B3F               	andlw	63
  1537  0016C8  0B01               	andlw	1
  1538  0016CA  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1539  0016CC  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1540                           
  1541                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 541:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  1542  0016D0  0E05               	movlw	5
  1543  0016D2  246A               	addwf	lcd_send_4bits@lcd^0,w,c
  1544  0016D4  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1545  0016D6  0E00               	movlw	0
  1546  0016D8  206B               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1547  0016DA  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1548  0016DC  386C               	swapf	lcd_send_4bits@data_command^0,w,c
  1549  0016DE  46E8               	rlncf	wreg,f,c
  1550  0016E0  0B1F               	andlw	31
  1551  0016E2  0B01               	andlw	1
  1552  0016E4  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1553  0016E6  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1554  0016EA                     l252:
  1555  0016EA  0012               	return		;funcret
  1556  0016EC                     __end_of_lcd_send_4bits:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _lcd_4bits_send_enable_signal *****************
  1560 ;; Defined at:
  1561 ;;		line 512 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  lcd             2   14[COMRAM] PTR const struct .
  1564 ;;		 -> lcd1(6), 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  ERRORSTATUS     1    0        unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      unsigned char 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 5
  1583 ;; This function calls:
  1584 ;;		_GPIO_Pin_Write_Logic
  1585 ;; This function is called by:
  1586 ;;		_lcd_4bit_send_command
  1587 ;;		_lcd_4bit_send_char_data
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text8
  1592  0018D4                     __ptext8:
  1593                           	callstack 0
  1594  0018D4                     _lcd_4bits_send_enable_signal:
  1595                           	callstack 22
  1596  0018D4                     
  1597                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:         if ( ((void*)0)==lcd)
  1598  0018D4  506A               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1599  0018D6  106B               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  1600  0018D8  A4D8               	btfss	status,2,c
  1601  0018DA  EF71  F00C         	goto	u3781
  1602  0018DE  EF73  F00C         	goto	u3780
  1603  0018E2                     u3781:
  1604  0018E2  EF75  F00C         	goto	l5058
  1605  0018E6                     u3780:
  1606  0018E6                     
  1607                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 518:     }
  1608  0018E6  EF8D  F00C         	goto	l247
  1609  0018EA                     l5058:
  1610                           
  1611                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 520:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 52
      +                          1:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  1612  0018EA  0E01               	movlw	1
  1613  0018EC  246A               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1614  0018EE  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1615  0018F0  0E00               	movlw	0
  1616  0018F2  206B               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  1617  0018F4  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1618  0018F6  0E01               	movlw	1
  1619  0018F8  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1620  0018FA  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1621  0018FE                     
  1622                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 522:             _delay((unsigned long)((5)*(80000
      +                          00/4000000.0)));
  1623  0018FE  0E03               	movlw	3
  1624  001900                     u5547:
  1625  001900  2EE8               	decfsz	wreg,f,c
  1626  001902  D7FE               	bra	u5547
  1627  001904  F000               	nop	
  1628  001906                     
  1629                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 523:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  1630  001906  0E01               	movlw	1
  1631  001908  246A               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1632  00190A  6E60               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1633  00190C  0E00               	movlw	0
  1634  00190E  206B               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  1635  001910  6E61               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1636  001912  0E00               	movlw	0
  1637  001914  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1638  001916  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1639  00191A                     l247:
  1640  00191A  0012               	return		;funcret
  1641  00191C                     __end_of_lcd_4bits_send_enable_signal:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _GPIO_Pin_Initialize *****************
  1645 ;; Defined at:
  1646 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  _pin_config     2   14[COMRAM] PTR const struct .
  1649 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(12), 
  1650 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1651 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  ERRORSTATUS     1   16[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      unsigned char 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;Total ram usage:        3 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 5
  1670 ;; This function calls:
  1671 ;;		_GPIO_Pin_Direction_Initialize
  1672 ;;		_GPIO_Pin_Write_Logic
  1673 ;; This function is called by:
  1674 ;;		_lcd_4bit_initialize
  1675 ;;		_application_intialize
  1676 ;;		_ECU_DC_Motor_Init
  1677 ;;		_IR_Sensor_Init
  1678 ;;		_lcd_8bit_initialize
  1679 ;;		_Ecu_Stepper_Init
  1680 ;;		_CCP_Init
  1681 ;;		_Ultra_Sonic_Init
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text9
  1686  00188A                     __ptext9:
  1687                           	callstack 0
  1688  00188A                     _GPIO_Pin_Initialize:
  1689                           	callstack 23
  1690  00188A                     
  1691                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  1692  00188A  506A               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
  1693  00188C  106B               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
  1694  00188E  A4D8               	btfss	status,2,c
  1695  001890  EF4C  F00C         	goto	u3851
  1696  001894  EF4E  F00C         	goto	u3850
  1697  001898                     u3851:
  1698  001898  EF52  F00C         	goto	l5096
  1699  00189C                     u3850:
  1700  00189C                     
  1701                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  1702  00189C  0E00               	movlw	0
  1703  00189E  6E6C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  1704                           
  1705                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  1706  0018A0  EF68  F00C         	goto	l5098
  1707  0018A4                     l5096:
  1708                           
  1709                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  1710  0018A4  C06A  F060         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  1711  0018A8  C06B  F061         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  1712  0018AC  EC2D  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  1713  0018B0  6E6C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  1714                           
  1715                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  1716  0018B2  C06A  F060         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  1717  0018B6  C06B  F061         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  1718  0018BA  C06A  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  1719  0018BE  C06B  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  1720  0018C2  0E00               	movlw	0
  1721  0018C4  BEDF               	btfsc	indf2,7,c
  1722  0018C6  0E01               	movlw	1
  1723  0018C8  6E62               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1724  0018CA  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1725  0018CE  6E6C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  1726  0018D0                     l5098:
  1727                           
  1728                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  1729  0018D0  506C               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
  1730  0018D2  0012               	return		;funcret
  1731  0018D4                     __end_of_GPIO_Pin_Initialize:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _GPIO_Pin_Write_Logic *****************
  1735 ;; Defined at:
  1736 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1739 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(12), 
  1740 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1741 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1742 ;;  logic           1    6[COMRAM] enum E2967
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  ERRORSTATUS     1   13[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      unsigned char 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:       10 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 4
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_lcd_4bit_send_command
  1765 ;;		_lcd_4bit_send_char_data
  1766 ;;		_lcd_4bits_send_enable_signal
  1767 ;;		_lcd_send_4bits
  1768 ;;		_GPIO_Pin_Initialize
  1769 ;;		_main
  1770 ;;		_ECU_DC_Motor_Run_Left
  1771 ;;		_ECU_DC_Motor_Run_Right
  1772 ;;		_ECU_DC_Motor_Stop
  1773 ;;		_lcd_8bit_send_command
  1774 ;;		_lcd_8bit_send_char_data
  1775 ;;		_lcd_8bits_send_enable_signal
  1776 ;;		_Ecu_Stepper_Init
  1777 ;;		_Ecu_Stepper_Step
  1778 ;;		_Ecu_Stepper_Change_Direction
  1779 ;;		_send_trig_pulse
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text10
  1784  00119A                     __ptext10:
  1785                           	callstack 0
  1786  00119A                     _GPIO_Pin_Write_Logic:
  1787                           	callstack 22
  1788  00119A                     
  1789                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  1790  00119A  0E01               	movlw	1
  1791  00119C  6E69               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  1792  00119E                     
  1793                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  1794  00119E  5060               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
  1795  0011A0  1061               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  1796  0011A2  B4D8               	btfsc	status,2,c
  1797  0011A4  EFD6  F008         	goto	u3731
  1798  0011A8  EFD8  F008         	goto	u3730
  1799  0011AC                     u3731:
  1800  0011AC  EFE7  F008         	goto	l5024
  1801  0011B0                     u3730:
  1802  0011B0  C060  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1803  0011B4  C061  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1804  0011B8  50DF               	movf	223,w,c
  1805  0011BA  0B07               	andlw	7
  1806  0011BC  6E63               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1807  0011BE  0E07               	movlw	7
  1808  0011C0  6463               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
  1809  0011C2  EFE5  F008         	goto	u3741
  1810  0011C6  EFE7  F008         	goto	u3740
  1811  0011CA                     u3741:
  1812  0011CA  EF4A  F009         	goto	l5032
  1813  0011CE                     u3740:
  1814  0011CE                     l5024:
  1815                           
  1816                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  1817  0011CE  0E00               	movlw	0
  1818  0011D0  6E69               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  1819                           
  1820                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  1821  0011D2  EF5F  F009         	goto	l5034
  1822  0011D6                     l5026:
  1823                           
  1824                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  1825  0011D6  C060  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1826  0011DA  C061  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1827  0011DE  50DF               	movf	223,w,c
  1828  0011E0  0B07               	andlw	7
  1829  0011E2  6E63               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1830  0011E4  0E01               	movlw	1
  1831  0011E6  6E64               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1832  0011E8  2A63               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1833  0011EA  EFF9  F008         	goto	u3754
  1834  0011EE                     u3755:
  1835  0011EE  90D8               	bcf	status,0,c
  1836  0011F0  3664               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1837  0011F2                     u3754:
  1838  0011F2  2E63               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1839  0011F4  EFF7  F008         	goto	u3755
  1840  0011F8  5064               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1841  0011FA  0AFF               	xorlw	255
  1842  0011FC  6E65               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1843  0011FE  C060  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1844  001202  C061  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1845  001206  30DF               	rrcf	223,w,c
  1846  001208  32E8               	rrcf	wreg,f,c
  1847  00120A  32E8               	rrcf	wreg,f,c
  1848  00120C  0B07               	andlw	7
  1849  00120E  6E66               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
  1850  001210  5066               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
  1851  001212  0D02               	mullw	2
  1852  001214  0E0B               	movlw	low _lat_registers
  1853  001216  24F3               	addwf	243,w,c
  1854  001218  6ED9               	movwf	fsr2l,c
  1855  00121A  0E00               	movlw	high _lat_registers
  1856  00121C  20F4               	addwfc	prodh,w,c
  1857  00121E  6EDA               	movwf	fsr2h,c
  1858  001220  CFDE F067          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  1859  001224  CFDD F068          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  1860  001228  C067  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  1861  00122C  C068  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  1862  001230  5065               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1863  001232  16DF               	andwf	indf2,f,c
  1864                           
  1865                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  1866  001234  EF5F  F009         	goto	l5034
  1867  001238                     l5028:
  1868                           
  1869                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  1870  001238  C060  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1871  00123C  C061  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1872  001240  50DF               	movf	223,w,c
  1873  001242  0B07               	andlw	7
  1874  001244  6E63               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1875  001246  0E01               	movlw	1
  1876  001248  6E64               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1877  00124A  2A63               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1878  00124C  EF2A  F009         	goto	u3764
  1879  001250                     u3765:
  1880  001250  90D8               	bcf	status,0,c
  1881  001252  3664               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1882  001254                     u3764:
  1883  001254  2E63               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1884  001256  EF28  F009         	goto	u3765
  1885  00125A  C060  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1886  00125E  C061  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1887  001262  30DF               	rrcf	223,w,c
  1888  001264  32E8               	rrcf	wreg,f,c
  1889  001266  32E8               	rrcf	wreg,f,c
  1890  001268  0B07               	andlw	7
  1891  00126A  6E65               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1892  00126C  5065               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1893  00126E  0D02               	mullw	2
  1894  001270  0E0B               	movlw	low _lat_registers
  1895  001272  24F3               	addwf	243,w,c
  1896  001274  6ED9               	movwf	fsr2l,c
  1897  001276  0E00               	movlw	high _lat_registers
  1898  001278  20F4               	addwfc	prodh,w,c
  1899  00127A  6EDA               	movwf	fsr2h,c
  1900  00127C  CFDE F066          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  1901  001280  CFDD F067          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  1902  001284  C066  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  1903  001288  C067  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  1904  00128C  5064               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1905  00128E  12DF               	iorwf	indf2,f,c
  1906                           
  1907                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  1908  001290  EF5F  F009         	goto	l5034
  1909  001294                     l5032:
  1910  001294  5062               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  1911  001296  6E63               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1912  001298  6A64               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1913                           
  1914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 1, Range of values is 0 to 0
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            4     3 (average)
  1920                           ;	Chosen strategy is simple_byte
  1921  00129A  5064               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1922  00129C  0A00               	xorlw	0	; case 0
  1923  00129E  B4D8               	btfsc	status,2,c
  1924  0012A0  EF54  F009         	goto	l6620
  1925  0012A4  EFE7  F008         	goto	l5024
  1926  0012A8                     l6620:
  1927                           
  1928                           ; Switch size 1, requested type "simple"
  1929                           ; Number of cases is 2, Range of values is 0 to 1
  1930                           ; switch strategies available:
  1931                           ; Name         Instructions Cycles
  1932                           ; simple_byte            7     4 (average)
  1933                           ;	Chosen strategy is simple_byte
  1934  0012A8  5063               	movf	??_GPIO_Pin_Write_Logic^0,w,c
  1935  0012AA  0A00               	xorlw	0	; case 0
  1936  0012AC  B4D8               	btfsc	status,2,c
  1937  0012AE  EFEB  F008         	goto	l5026
  1938  0012B2  0A01               	xorlw	1	; case 1
  1939  0012B4  B4D8               	btfsc	status,2,c
  1940  0012B6  EF1C  F009         	goto	l5028
  1941  0012BA  EFE7  F008         	goto	l5024
  1942  0012BE                     l5034:
  1943                           
  1944                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  1945  0012BE  5069               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  1946  0012C0  0012               	return		;funcret
  1947  0012C2                     __end_of_GPIO_Pin_Write_Logic:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  1951 ;; Defined at:
  1952 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1955 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(12), 
  1956 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1957 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  ERRORSTATUS     1   12[COMRAM] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      unsigned char 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;Total ram usage:        9 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 4
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_GPIO_Pin_Initialize
  1980 ;;		_Ecu_Stepper_Init
  1981 ;;		_interrupt_RBx_pin_init
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text11
  1986  00105A                     __ptext11:
  1987                           	callstack 0
  1988  00105A                     _GPIO_Pin_Direction_Initialize:
  1989                           	callstack 23
  1990  00105A                     
  1991                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  1992  00105A  0E01               	movlw	1
  1993  00105C  6E68               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  1994  00105E                     
  1995                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  1996  00105E  5060               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  1997  001060  1061               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  1998  001062  B4D8               	btfsc	status,2,c
  1999  001064  EF36  F008         	goto	u3791
  2000  001068  EF38  F008         	goto	u3790
  2001  00106C                     u3791:
  2002  00106C  EF47  F008         	goto	l5072
  2003  001070                     u3790:
  2004  001070  C060  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2005  001074  C061  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2006  001078  50DF               	movf	223,w,c
  2007  00107A  0B07               	andlw	7
  2008  00107C  6E62               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2009  00107E  0E07               	movlw	7
  2010  001080  6462               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
  2011  001082  EF45  F008         	goto	u3801
  2012  001086  EF47  F008         	goto	u3800
  2013  00108A                     u3801:
  2014  00108A  EFAA  F008         	goto	l5080
  2015  00108E                     u3800:
  2016  00108E                     l5072:
  2017                           
  2018                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2019  00108E  0E00               	movlw	0
  2020  001090  6E68               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2021                           
  2022                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  2023  001092  EFCB  F008         	goto	l5082
  2024  001096                     l5074:
  2025                           
  2026                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  2027  001096  C060  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2028  00109A  C061  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2029  00109E  50DF               	movf	223,w,c
  2030  0010A0  0B07               	andlw	7
  2031  0010A2  6E62               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2032  0010A4  0E01               	movlw	1
  2033  0010A6  6E63               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2034  0010A8  2A62               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  2035  0010AA  EF59  F008         	goto	u3814
  2036  0010AE                     u3815:
  2037  0010AE  90D8               	bcf	status,0,c
  2038  0010B0  3663               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  2039  0010B2                     u3814:
  2040  0010B2  2E62               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  2041  0010B4  EF57  F008         	goto	u3815
  2042  0010B8  5063               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2043  0010BA  0AFF               	xorlw	255
  2044  0010BC  6E64               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  2045  0010BE  C060  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2046  0010C2  C061  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2047  0010C6  30DF               	rrcf	223,w,c
  2048  0010C8  32E8               	rrcf	wreg,f,c
  2049  0010CA  32E8               	rrcf	wreg,f,c
  2050  0010CC  0B07               	andlw	7
  2051  0010CE  6E65               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  2052  0010D0  5065               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  2053  0010D2  0D02               	mullw	2
  2054  0010D4  0E15               	movlw	low _tris_registers
  2055  0010D6  24F3               	addwf	243,w,c
  2056  0010D8  6ED9               	movwf	fsr2l,c
  2057  0010DA  0E00               	movlw	high _tris_registers
  2058  0010DC  20F4               	addwfc	prodh,w,c
  2059  0010DE  6EDA               	movwf	fsr2h,c
  2060  0010E0  CFDE F066          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  2061  0010E4  CFDD F067          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  2062  0010E8  C066  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  2063  0010EC  C067  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  2064  0010F0  5064               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  2065  0010F2  16DF               	andwf	indf2,f,c
  2066                           
  2067                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  2068  0010F4  EFCB  F008         	goto	l5082
  2069  0010F8                     l5076:
  2070                           
  2071                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  2072  0010F8  C060  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2073  0010FC  C061  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2074  001100  50DF               	movf	223,w,c
  2075  001102  0B07               	andlw	7
  2076  001104  6E62               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2077  001106  0E01               	movlw	1
  2078  001108  6E63               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2079  00110A  2A62               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  2080  00110C  EF8A  F008         	goto	u3824
  2081  001110                     u3825:
  2082  001110  90D8               	bcf	status,0,c
  2083  001112  3663               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  2084  001114                     u3824:
  2085  001114  2E62               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  2086  001116  EF88  F008         	goto	u3825
  2087  00111A  C060  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2088  00111E  C061  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2089  001122  30DF               	rrcf	223,w,c
  2090  001124  32E8               	rrcf	wreg,f,c
  2091  001126  32E8               	rrcf	wreg,f,c
  2092  001128  0B07               	andlw	7
  2093  00112A  6E64               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  2094  00112C  5064               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  2095  00112E  0D02               	mullw	2
  2096  001130  0E15               	movlw	low _tris_registers
  2097  001132  24F3               	addwf	243,w,c
  2098  001134  6ED9               	movwf	fsr2l,c
  2099  001136  0E00               	movlw	high _tris_registers
  2100  001138  20F4               	addwfc	prodh,w,c
  2101  00113A  6EDA               	movwf	fsr2h,c
  2102  00113C  CFDE F065          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  2103  001140  CFDD F066          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  2104  001144  C065  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  2105  001148  C066  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  2106  00114C  5063               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2107  00114E  12DF               	iorwf	indf2,f,c
  2108                           
  2109                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  2110  001150  EFCB  F008         	goto	l5082
  2111  001154                     l5080:
  2112  001154  C060  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2113  001158  C061  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2114  00115C  BCDF               	btfsc	indf2,6,c
  2115  00115E  EFB3  F008         	goto	u3831
  2116  001162  EFB6  F008         	goto	u3830
  2117  001166                     u3831:
  2118  001166  0E01               	movlw	1
  2119  001168  EFB7  F008         	goto	u3840
  2120  00116C                     u3830:
  2121  00116C  0E00               	movlw	0
  2122  00116E                     u3840:
  2123  00116E  6E62               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2124  001170  6A63               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2125                           
  2126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2127                           ; Switch size 1, requested type "simple"
  2128                           ; Number of cases is 1, Range of values is 0 to 0
  2129                           ; switch strategies available:
  2130                           ; Name         Instructions Cycles
  2131                           ; simple_byte            4     3 (average)
  2132                           ;	Chosen strategy is simple_byte
  2133  001172  5063               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2134  001174  0A00               	xorlw	0	; case 0
  2135  001176  B4D8               	btfsc	status,2,c
  2136  001178  EFC0  F008         	goto	l6622
  2137  00117C  EF47  F008         	goto	l5072
  2138  001180                     l6622:
  2139                           
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 2, Range of values is 0 to 1
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte            7     4 (average)
  2145                           ;	Chosen strategy is simple_byte
  2146  001180  5062               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  2147  001182  0A00               	xorlw	0	; case 0
  2148  001184  B4D8               	btfsc	status,2,c
  2149  001186  EF4B  F008         	goto	l5074
  2150  00118A  0A01               	xorlw	1	; case 1
  2151  00118C  B4D8               	btfsc	status,2,c
  2152  00118E  EF7C  F008         	goto	l5076
  2153  001192  EF47  F008         	goto	l5072
  2154  001196                     l5082:
  2155                           
  2156                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  2157  001196  5068               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  2158  001198  0012               	return		;funcret
  2159  00119A                     __end_of_GPIO_Pin_Direction_Initialize:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  2163 ;; Defined at:
  2164 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  2167 ;;		 -> pinc0(1), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  ERRORSTATUS     1    0        unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      unsigned char 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;Total ram usage:        7 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 4
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text12
  2194  0016EC                     __ptext12:
  2195                           	callstack 0
  2196  0016EC                     _GPIO_Pin_Toggle_Logic:
  2197                           	callstack 26
  2198  0016EC                     
  2199                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  2200  0016EC  5060               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  2201  0016EE  1061               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  2202  0016F0  A4D8               	btfss	status,2,c
  2203  0016F2  EF7D  F00B         	goto	u4331
  2204  0016F6  EF7F  F00B         	goto	u4330
  2205  0016FA                     u4331:
  2206  0016FA  EF81  F00B         	goto	l5558
  2207  0016FE                     u4330:
  2208  0016FE                     
  2209                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  2210  0016FE  EFAD  F00B         	goto	l907
  2211  001702                     l5558:
  2212                           
  2213                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  2214  001702  C060  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  2215  001706  C061  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  2216  00170A  50DF               	movf	223,w,c
  2217  00170C  0B07               	andlw	7
  2218  00170E  6E62               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
  2219  001710  0E01               	movlw	1
  2220  001712  6E63               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
  2221  001714  2A62               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
  2222  001716  EF8F  F00B         	goto	u4344
  2223  00171A                     u4345:
  2224  00171A  90D8               	bcf	status,0,c
  2225  00171C  3663               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
  2226  00171E                     u4344:
  2227  00171E  2E62               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
  2228  001720  EF8D  F00B         	goto	u4345
  2229  001724  C060  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  2230  001728  C061  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  2231  00172C  30DF               	rrcf	223,w,c
  2232  00172E  32E8               	rrcf	wreg,f,c
  2233  001730  32E8               	rrcf	wreg,f,c
  2234  001732  0B07               	andlw	7
  2235  001734  6E64               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
  2236  001736  5064               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
  2237  001738  0D02               	mullw	2
  2238  00173A  0E0B               	movlw	low _lat_registers
  2239  00173C  24F3               	addwf	243,w,c
  2240  00173E  6ED9               	movwf	fsr2l,c
  2241  001740  0E00               	movlw	high _lat_registers
  2242  001742  20F4               	addwfc	prodh,w,c
  2243  001744  6EDA               	movwf	fsr2h,c
  2244  001746  CFDE F065          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  2245  00174A  CFDD F066          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  2246  00174E  C065  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  2247  001752  C066  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  2248  001756  5063               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
  2249  001758  1ADF               	xorwf	indf2,f,c
  2250  00175A                     l907:
  2251  00175A  0012               	return		;funcret
  2252  00175C                     __end_of_GPIO_Pin_Toggle_Logic:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _InterruptManagerLow *****************
  2256 ;; Defined at:
  2257 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 3
  2278 ;; This function calls:
  2279 ;;		_ADC_ISR
  2280 ;;		_INT1_ISR
  2281 ;;		_RB4_ISR
  2282 ;;		_RB5_ISR
  2283 ;;		_RB6_ISR
  2284 ;;		_RB7_ISR
  2285 ;; This function is called by:
  2286 ;;		Interrupt level 1
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	intcodelo
  2291  000018                     __pintcodelo:
  2292                           	callstack 0
  2293  000018                     _InterruptManagerLow:
  2294                           	callstack 22
  2295                           
  2296                           ;incstack = 0
  2297  000018  8079               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2298  00001A  CFD8 F05D          	movff	status,??_InterruptManagerLow
  2299  00001E  CFE8 F05E          	movff	wreg,??_InterruptManagerLow+1
  2300  000022  CFE0 F05F          	movff	bsr,??_InterruptManagerLow+2
  2301  000026                     
  2302                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  2303  000026  A6F0               	btfss	240,3,c	;volatile
  2304  000028  EF18  F000         	goto	i1u283_21
  2305  00002C  EF1A  F000         	goto	i1u283_20
  2306  000030                     i1u283_21:
  2307  000030  EF23  F000         	goto	i1l1176
  2308  000034                     i1u283_20:
  2309  000034  A0F0               	btfss	240,0,c	;volatile
  2310  000036  EF1F  F000         	goto	i1u284_21
  2311  00003A  EF21  F000         	goto	i1u284_20
  2312  00003E                     i1u284_21:
  2313  00003E  EF23  F000         	goto	i1l1176
  2314  000042                     i1u284_20:
  2315  000042                     
  2316                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  2317  000042  ECF0  F00C         	call	_INT1_ISR	;wreg free
  2318  000046                     i1l1176:
  2319                           
  2320                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2321  000046  A6F2               	btfss	242,3,c	;volatile
  2322  000048  EF28  F000         	goto	i1u285_21
  2323  00004C  EF2A  F000         	goto	i1u285_20
  2324  000050                     i1u285_21:
  2325  000050  EF43  F000         	goto	i1l1178
  2326  000054                     i1u285_20:
  2327  000054  A0F2               	btfss	242,0,c	;volatile
  2328  000056  EF2F  F000         	goto	i1u286_21
  2329  00005A  EF31  F000         	goto	i1u286_20
  2330  00005E                     i1u286_21:
  2331  00005E  EF43  F000         	goto	i1l1178
  2332  000062                     i1u286_20:
  2333  000062  A881               	btfss	129,4,c	;volatile
  2334  000064  EF36  F000         	goto	i1u287_21
  2335  000068  EF38  F000         	goto	i1u287_20
  2336  00006C                     i1u287_21:
  2337  00006C  EF43  F000         	goto	i1l1178
  2338  000070                     i1u287_20:
  2339  000070  A01F               	btfss	_flags^0,0,c	;volatile
  2340  000072  EF3D  F000         	goto	i1u288_21
  2341  000076  EF3F  F000         	goto	i1u288_20
  2342  00007A                     i1u288_21:
  2343  00007A  EF43  F000         	goto	i1l1178
  2344  00007E                     i1u288_20:
  2345  00007E                     
  2346                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  2347  00007E  901F               	bcf	_flags^0,0,c	;volatile
  2348  000080                     
  2349                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  2350  000080  0E01               	movlw	1
  2351  000082  ECDD  F00C         	call	_RB4_ISR
  2352  000086                     i1l1178:
  2353                           
  2354                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2355  000086  A6F2               	btfss	242,3,c	;volatile
  2356  000088  EF48  F000         	goto	i1u289_21
  2357  00008C  EF4A  F000         	goto	i1u289_20
  2358  000090                     i1u289_21:
  2359  000090  EF63  F000         	goto	i1l1180
  2360  000094                     i1u289_20:
  2361  000094  A0F2               	btfss	242,0,c	;volatile
  2362  000096  EF4F  F000         	goto	i1u290_21
  2363  00009A  EF51  F000         	goto	i1u290_20
  2364  00009E                     i1u290_21:
  2365  00009E  EF63  F000         	goto	i1l1180
  2366  0000A2                     i1u290_20:
  2367  0000A2  B881               	btfsc	129,4,c	;volatile
  2368  0000A4  EF56  F000         	goto	i1u291_21
  2369  0000A8  EF58  F000         	goto	i1u291_20
  2370  0000AC                     i1u291_21:
  2371  0000AC  EF63  F000         	goto	i1l1180
  2372  0000B0                     i1u291_20:
  2373  0000B0  B01F               	btfsc	_flags^0,0,c	;volatile
  2374  0000B2  EF5D  F000         	goto	i1u292_21
  2375  0000B6  EF5F  F000         	goto	i1u292_20
  2376  0000BA                     i1u292_21:
  2377  0000BA  EF63  F000         	goto	i1l1180
  2378  0000BE                     i1u292_20:
  2379  0000BE                     
  2380                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  2381  0000BE  801F               	bsf	_flags^0,0,c	;volatile
  2382  0000C0                     
  2383                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  2384  0000C0  0E00               	movlw	0
  2385  0000C2  ECDD  F00C         	call	_RB4_ISR
  2386  0000C6                     i1l1180:
  2387                           
  2388                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2389  0000C6  A6F2               	btfss	242,3,c	;volatile
  2390  0000C8  EF68  F000         	goto	i1u293_21
  2391  0000CC  EF6A  F000         	goto	i1u293_20
  2392  0000D0                     i1u293_21:
  2393  0000D0  EF83  F000         	goto	i1l1182
  2394  0000D4                     i1u293_20:
  2395  0000D4  A0F2               	btfss	242,0,c	;volatile
  2396  0000D6  EF6F  F000         	goto	i1u294_21
  2397  0000DA  EF71  F000         	goto	i1u294_20
  2398  0000DE                     i1u294_21:
  2399  0000DE  EF83  F000         	goto	i1l1182
  2400  0000E2                     i1u294_20:
  2401  0000E2  AA81               	btfss	129,5,c	;volatile
  2402  0000E4  EF76  F000         	goto	i1u295_21
  2403  0000E8  EF78  F000         	goto	i1u295_20
  2404  0000EC                     i1u295_21:
  2405  0000EC  EF83  F000         	goto	i1l1182
  2406  0000F0                     i1u295_20:
  2407  0000F0  A21F               	btfss	_flags^0,1,c	;volatile
  2408  0000F2  EF7D  F000         	goto	i1u296_21
  2409  0000F6  EF7F  F000         	goto	i1u296_20
  2410  0000FA                     i1u296_21:
  2411  0000FA  EF83  F000         	goto	i1l1182
  2412  0000FE                     i1u296_20:
  2413  0000FE                     
  2414                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  2415  0000FE  921F               	bcf	_flags^0,1,c	;volatile
  2416  000100                     
  2417                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  2418  000100  0E01               	movlw	1
  2419  000102  ECD0  F00C         	call	_RB5_ISR
  2420  000106                     i1l1182:
  2421                           
  2422                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2423  000106  A6F2               	btfss	242,3,c	;volatile
  2424  000108  EF88  F000         	goto	i1u297_21
  2425  00010C  EF8A  F000         	goto	i1u297_20
  2426  000110                     i1u297_21:
  2427  000110  EFA3  F000         	goto	i1l1184
  2428  000114                     i1u297_20:
  2429  000114  A0F2               	btfss	242,0,c	;volatile
  2430  000116  EF8F  F000         	goto	i1u298_21
  2431  00011A  EF91  F000         	goto	i1u298_20
  2432  00011E                     i1u298_21:
  2433  00011E  EFA3  F000         	goto	i1l1184
  2434  000122                     i1u298_20:
  2435  000122  BA81               	btfsc	129,5,c	;volatile
  2436  000124  EF96  F000         	goto	i1u299_21
  2437  000128  EF98  F000         	goto	i1u299_20
  2438  00012C                     i1u299_21:
  2439  00012C  EFA3  F000         	goto	i1l1184
  2440  000130                     i1u299_20:
  2441  000130  B21F               	btfsc	_flags^0,1,c	;volatile
  2442  000132  EF9D  F000         	goto	i1u300_21
  2443  000136  EF9F  F000         	goto	i1u300_20
  2444  00013A                     i1u300_21:
  2445  00013A  EFA3  F000         	goto	i1l1184
  2446  00013E                     i1u300_20:
  2447  00013E                     
  2448                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  2449  00013E  821F               	bsf	_flags^0,1,c	;volatile
  2450  000140                     
  2451                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  2452  000140  0E00               	movlw	0
  2453  000142  ECD0  F00C         	call	_RB5_ISR
  2454  000146                     i1l1184:
  2455                           
  2456                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2457  000146  A6F2               	btfss	242,3,c	;volatile
  2458  000148  EFA8  F000         	goto	i1u301_21
  2459  00014C  EFAA  F000         	goto	i1u301_20
  2460  000150                     i1u301_21:
  2461  000150  EFC3  F000         	goto	i1l1186
  2462  000154                     i1u301_20:
  2463  000154  A0F2               	btfss	242,0,c	;volatile
  2464  000156  EFAF  F000         	goto	i1u302_21
  2465  00015A  EFB1  F000         	goto	i1u302_20
  2466  00015E                     i1u302_21:
  2467  00015E  EFC3  F000         	goto	i1l1186
  2468  000162                     i1u302_20:
  2469  000162  AC81               	btfss	129,6,c	;volatile
  2470  000164  EFB6  F000         	goto	i1u303_21
  2471  000168  EFB8  F000         	goto	i1u303_20
  2472  00016C                     i1u303_21:
  2473  00016C  EFC3  F000         	goto	i1l1186
  2474  000170                     i1u303_20:
  2475  000170  A41F               	btfss	_flags^0,2,c	;volatile
  2476  000172  EFBD  F000         	goto	i1u304_21
  2477  000176  EFBF  F000         	goto	i1u304_20
  2478  00017A                     i1u304_21:
  2479  00017A  EFC3  F000         	goto	i1l1186
  2480  00017E                     i1u304_20:
  2481  00017E                     
  2482                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  2483  00017E  941F               	bcf	_flags^0,2,c	;volatile
  2484  000180                     
  2485                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  2486  000180  0E01               	movlw	1
  2487  000182  ECC3  F00C         	call	_RB6_ISR
  2488  000186                     i1l1186:
  2489                           
  2490                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2491  000186  A6F2               	btfss	242,3,c	;volatile
  2492  000188  EFC8  F000         	goto	i1u305_21
  2493  00018C  EFCA  F000         	goto	i1u305_20
  2494  000190                     i1u305_21:
  2495  000190  EFE3  F000         	goto	i1l1188
  2496  000194                     i1u305_20:
  2497  000194  A0F2               	btfss	242,0,c	;volatile
  2498  000196  EFCF  F000         	goto	i1u306_21
  2499  00019A  EFD1  F000         	goto	i1u306_20
  2500  00019E                     i1u306_21:
  2501  00019E  EFE3  F000         	goto	i1l1188
  2502  0001A2                     i1u306_20:
  2503  0001A2  BC81               	btfsc	129,6,c	;volatile
  2504  0001A4  EFD6  F000         	goto	i1u307_21
  2505  0001A8  EFD8  F000         	goto	i1u307_20
  2506  0001AC                     i1u307_21:
  2507  0001AC  EFE3  F000         	goto	i1l1188
  2508  0001B0                     i1u307_20:
  2509  0001B0  B41F               	btfsc	_flags^0,2,c	;volatile
  2510  0001B2  EFDD  F000         	goto	i1u308_21
  2511  0001B6  EFDF  F000         	goto	i1u308_20
  2512  0001BA                     i1u308_21:
  2513  0001BA  EFE3  F000         	goto	i1l1188
  2514  0001BE                     i1u308_20:
  2515  0001BE                     
  2516                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  2517  0001BE  841F               	bsf	_flags^0,2,c	;volatile
  2518  0001C0                     
  2519                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  2520  0001C0  0E00               	movlw	0
  2521  0001C2  ECC3  F00C         	call	_RB6_ISR
  2522  0001C6                     i1l1188:
  2523                           
  2524                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2525  0001C6  A6F2               	btfss	242,3,c	;volatile
  2526  0001C8  EFE8  F000         	goto	i1u309_21
  2527  0001CC  EFEA  F000         	goto	i1u309_20
  2528  0001D0                     i1u309_21:
  2529  0001D0  EF03  F001         	goto	i1l1190
  2530  0001D4                     i1u309_20:
  2531  0001D4  A0F2               	btfss	242,0,c	;volatile
  2532  0001D6  EFEF  F000         	goto	i1u310_21
  2533  0001DA  EFF1  F000         	goto	i1u310_20
  2534  0001DE                     i1u310_21:
  2535  0001DE  EF03  F001         	goto	i1l1190
  2536  0001E2                     i1u310_20:
  2537  0001E2  AE81               	btfss	129,7,c	;volatile
  2538  0001E4  EFF6  F000         	goto	i1u311_21
  2539  0001E8  EFF8  F000         	goto	i1u311_20
  2540  0001EC                     i1u311_21:
  2541  0001EC  EF03  F001         	goto	i1l1190
  2542  0001F0                     i1u311_20:
  2543  0001F0  A61F               	btfss	_flags^0,3,c	;volatile
  2544  0001F2  EFFD  F000         	goto	i1u312_21
  2545  0001F6  EFFF  F000         	goto	i1u312_20
  2546  0001FA                     i1u312_21:
  2547  0001FA  EF03  F001         	goto	i1l1190
  2548  0001FE                     i1u312_20:
  2549  0001FE                     
  2550                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  2551  0001FE  961F               	bcf	_flags^0,3,c	;volatile
  2552  000200                     
  2553                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  2554  000200  0E01               	movlw	1
  2555  000202  ECB6  F00C         	call	_RB7_ISR
  2556  000206                     i1l1190:
  2557                           
  2558                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2559  000206  A6F2               	btfss	242,3,c	;volatile
  2560  000208  EF08  F001         	goto	i1u313_21
  2561  00020C  EF0A  F001         	goto	i1u313_20
  2562  000210                     i1u313_21:
  2563  000210  EF23  F001         	goto	i1l1192
  2564  000214                     i1u313_20:
  2565  000214  A0F2               	btfss	242,0,c	;volatile
  2566  000216  EF0F  F001         	goto	i1u314_21
  2567  00021A  EF11  F001         	goto	i1u314_20
  2568  00021E                     i1u314_21:
  2569  00021E  EF23  F001         	goto	i1l1192
  2570  000222                     i1u314_20:
  2571  000222  BE81               	btfsc	129,7,c	;volatile
  2572  000224  EF16  F001         	goto	i1u315_21
  2573  000228  EF18  F001         	goto	i1u315_20
  2574  00022C                     i1u315_21:
  2575  00022C  EF23  F001         	goto	i1l1192
  2576  000230                     i1u315_20:
  2577  000230  B61F               	btfsc	_flags^0,3,c	;volatile
  2578  000232  EF1D  F001         	goto	i1u316_21
  2579  000236  EF1F  F001         	goto	i1u316_20
  2580  00023A                     i1u316_21:
  2581  00023A  EF23  F001         	goto	i1l1192
  2582  00023E                     i1u316_20:
  2583  00023E                     
  2584                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  2585  00023E  861F               	bsf	_flags^0,3,c	;volatile
  2586  000240                     
  2587                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  2588  000240  0E00               	movlw	0
  2589  000242  ECB6  F00C         	call	_RB7_ISR
  2590  000246                     i1l1192:
  2591                           
  2592                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  2593  000246  AC9D               	btfss	157,6,c	;volatile
  2594  000248  EF28  F001         	goto	i1u317_21
  2595  00024C  EF2A  F001         	goto	i1u317_20
  2596  000250                     i1u317_21:
  2597  000250  EF33  F001         	goto	i1l1194
  2598  000254                     i1u317_20:
  2599  000254  AC9E               	btfss	158,6,c	;volatile
  2600  000256  EF2F  F001         	goto	i1u318_21
  2601  00025A  EF31  F001         	goto	i1u318_20
  2602  00025E                     i1u318_21:
  2603  00025E  EF33  F001         	goto	i1l1194
  2604  000262                     i1u318_20:
  2605  000262                     
  2606                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
  2607  000262  ECF2  F00C         	call	_ADC_ISR	;wreg free
  2608  000266                     i1l1194:
  2609                           
  2610                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  2611  000266  A09D               	btfss	157,0,c	;volatile
  2612  000268  EF38  F001         	goto	i1u319_21
  2613  00026C  EF3A  F001         	goto	i1u319_20
  2614  000270                     i1u319_21:
  2615  000270  EF3B  F001         	goto	i1l1197
  2616  000274                     i1u319_20:
  2617  000274  509E               	movf	158,w,c	;volatile
  2618  000276                     i1l1197:
  2619  000276  C05F  FFE0         	movff	??_InterruptManagerLow+2,bsr
  2620  00027A  C05E  FFE8         	movff	??_InterruptManagerLow+1,wreg
  2621  00027E  C05D  FFD8         	movff	??_InterruptManagerLow,status
  2622  000282  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2623  000284  0010               	retfie	
  2624  000286                     __end_of_InterruptManagerLow:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _RB7_ISR *****************
  2628 ;; Defined at:
  2629 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  Handler_Sele    1    wreg     unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;Total ram usage:        1 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_InterruptManagerLow
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text14
  2658  00196C                     __ptext14:
  2659                           	callstack 0
  2660  00196C                     _RB7_ISR:
  2661                           	callstack 22
  2662                           
  2663                           ;incstack = 0
  2664                           ;RB7_ISR@Handler_Select stored from wreg
  2665  00196C  6E5C               	movwf	RB7_ISR@Handler_Select^0,c
  2666  00196E                     
  2667                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  2668  00196E  90F2               	bcf	242,0,c	;volatile
  2669  001970                     
  2670                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  2671  001970  505C               	movf	RB7_ISR@Handler_Select^0,w,c
  2672  001972  B4D8               	btfsc	status,2,c
  2673  001974  EFBE  F00C         	goto	i1u101_21
  2674  001978  EFC0  F00C         	goto	i1u101_20
  2675  00197C                     i1u101_21:
  2676  00197C  EFC2  F00C         	goto	i1l3150
  2677  001980                     i1u101_20:
  2678  001980  EFC2  F00C         	goto	i1l1303
  2679  001984                     i1l3150:
  2680  001984                     i1l1303:
  2681  001984  0012               	return		;funcret
  2682  001986                     __end_of_RB7_ISR:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function _RB6_ISR *****************
  2686 ;; Defined at:
  2687 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  Handler_Sele    1    wreg     unsigned char 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        1 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 2
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_InterruptManagerLow
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text15
  2716  001986                     __ptext15:
  2717                           	callstack 0
  2718  001986                     _RB6_ISR:
  2719                           	callstack 22
  2720                           
  2721                           ;incstack = 0
  2722                           ;RB6_ISR@Handler_Select stored from wreg
  2723  001986  6E5C               	movwf	RB6_ISR@Handler_Select^0,c
  2724  001988                     
  2725                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  2726  001988  90F2               	bcf	242,0,c	;volatile
  2727  00198A                     
  2728                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  2729  00198A  505C               	movf	RB6_ISR@Handler_Select^0,w,c
  2730  00198C  B4D8               	btfsc	status,2,c
  2731  00198E  EFCB  F00C         	goto	i1u100_21
  2732  001992  EFCD  F00C         	goto	i1u100_20
  2733  001996                     i1u100_21:
  2734  001996  EFCF  F00C         	goto	i1l3140
  2735  00199A                     i1u100_20:
  2736  00199A  EFCF  F00C         	goto	i1l1294
  2737  00199E                     i1l3140:
  2738  00199E                     i1l1294:
  2739  00199E  0012               	return		;funcret
  2740  0019A0                     __end_of_RB6_ISR:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _RB5_ISR *****************
  2744 ;; Defined at:
  2745 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  Handler_Sele    1    wreg     unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        1 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 2
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_InterruptManagerLow
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text16
  2774  0019A0                     __ptext16:
  2775                           	callstack 0
  2776  0019A0                     _RB5_ISR:
  2777                           	callstack 22
  2778                           
  2779                           ;incstack = 0
  2780                           ;RB5_ISR@Handler_Select stored from wreg
  2781  0019A0  6E5C               	movwf	RB5_ISR@Handler_Select^0,c
  2782  0019A2                     
  2783                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  2784  0019A2  90F2               	bcf	242,0,c	;volatile
  2785  0019A4                     
  2786                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  2787  0019A4  505C               	movf	RB5_ISR@Handler_Select^0,w,c
  2788  0019A6  B4D8               	btfsc	status,2,c
  2789  0019A8  EFD8  F00C         	goto	i1u99_21
  2790  0019AC  EFDA  F00C         	goto	i1u99_20
  2791  0019B0                     i1u99_21:
  2792  0019B0  EFDC  F00C         	goto	i1l3130
  2793  0019B4                     i1u99_20:
  2794  0019B4  EFDC  F00C         	goto	i1l1285
  2795  0019B8                     i1l3130:
  2796  0019B8                     i1l1285:
  2797  0019B8  0012               	return		;funcret
  2798  0019BA                     __end_of_RB5_ISR:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _RB4_ISR *****************
  2802 ;; Defined at:
  2803 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  Handler_Sele    1    wreg     unsigned char 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;Total ram usage:        1 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 2
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_InterruptManagerLow
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text17
  2832  0019BA                     __ptext17:
  2833                           	callstack 0
  2834  0019BA                     _RB4_ISR:
  2835                           	callstack 22
  2836                           
  2837                           ;incstack = 0
  2838                           ;RB4_ISR@Handler_Select stored from wreg
  2839  0019BA  6E5C               	movwf	RB4_ISR@Handler_Select^0,c
  2840  0019BC                     
  2841                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  2842  0019BC  90F2               	bcf	242,0,c	;volatile
  2843  0019BE                     
  2844                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  2845  0019BE  505C               	movf	RB4_ISR@Handler_Select^0,w,c
  2846  0019C0  B4D8               	btfsc	status,2,c
  2847  0019C2  EFE5  F00C         	goto	i1u98_21
  2848  0019C6  EFE7  F00C         	goto	i1u98_20
  2849  0019CA                     i1u98_21:
  2850  0019CA  EFE9  F00C         	goto	i1l3120
  2851  0019CE                     i1u98_20:
  2852  0019CE  EFE9  F00C         	goto	i1l1276
  2853  0019D2                     i1l3120:
  2854  0019D2                     i1l1276:
  2855  0019D2  0012               	return		;funcret
  2856  0019D4                     __end_of_RB4_ISR:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _INT1_ISR *****************
  2860 ;; Defined at:
  2861 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		None
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_InterruptManagerLow
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text18
  2890  0019E0                     __ptext18:
  2891                           	callstack 0
  2892  0019E0                     _INT1_ISR:
  2893                           	callstack 22
  2894  0019E0                     
  2895                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  2896  0019E0  90F0               	bcf	240,0,c	;volatile
  2897  0019E2  0012               	return		;funcret
  2898  0019E4                     __end_of_INT1_ISR:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _ADC_ISR *****************
  2902 ;; Defined at:
  2903 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		None
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 2
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_InterruptManagerLow
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text19
  2932  0019E4                     __ptext19:
  2933                           	callstack 0
  2934  0019E4                     _ADC_ISR:
  2935                           	callstack 22
  2936  0019E4  0012               	return		;funcret
  2937  0019E6                     __end_of_ADC_ISR:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _InterruptManagerHigh *****************
  2941 ;; Defined at:
  2942 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 1
  2963 ;; This function calls:
  2964 ;;		_EUSART_Rx_ISR
  2965 ;;		_EUSART_Tx_ISR
  2966 ;;		_TMR0_ISR
  2967 ;; This function is called by:
  2968 ;;		Interrupt level 2
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	intcode
  2973  000008                     __pintcode:
  2974                           	callstack 0
  2975  000008                     _InterruptManagerHigh:
  2976                           	callstack 22
  2977                           
  2978                           ;incstack = 0
  2979  000008  8279               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2980  00000A  EDED  F009         	call	int_func,f	;refresh shadow registers
  2981                           
  2982                           	psect	intcode_body
  2983  0013DA                     __pintcode_body:
  2984                           	callstack 22
  2985  0013DA                     int_func:
  2986                           	callstack 22
  2987  0013DA  0006               	pop		; remove dummy address from shadow register refresh
  2988  0013DC                     
  2989                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  2990  0013DC  AAF2               	btfss	242,5,c	;volatile
  2991  0013DE  EFF3  F009         	goto	i2u272_41
  2992  0013E2  EFF5  F009         	goto	i2u272_40
  2993  0013E6                     i2u272_41:
  2994  0013E6  EFFE  F009         	goto	i2l1155
  2995  0013EA                     i2u272_40:
  2996  0013EA  A4F2               	btfss	242,2,c	;volatile
  2997  0013EC  EFFA  F009         	goto	i2u273_41
  2998  0013F0  EFFC  F009         	goto	i2u273_40
  2999  0013F4                     i2u273_41:
  3000  0013F4  EFFE  F009         	goto	i2l1155
  3001  0013F8                     i2u273_40:
  3002  0013F8                     
  3003                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  3004  0013F8  ECF3  F00C         	call	_TMR0_ISR	;wreg free
  3005  0013FC                     i2l1155:
  3006                           
  3007                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  3008  0013FC  A29D               	btfss	157,1,c	;volatile
  3009  0013FE  EF03  F00A         	goto	i2u274_41
  3010  001402  EF05  F00A         	goto	i2u274_40
  3011  001406                     i2u274_41:
  3012  001406  EF06  F00A         	goto	i2l1157
  3013  00140A                     i2u274_40:
  3014  00140A  509E               	movf	158,w,c	;volatile
  3015  00140C                     i2l1157:
  3016                           
  3017                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  3018  00140C  A2A0               	btfss	160,1,c	;volatile
  3019  00140E  EF0B  F00A         	goto	i2u275_41
  3020  001412  EF0D  F00A         	goto	i2u275_40
  3021  001416                     i2u275_41:
  3022  001416  EF0E  F00A         	goto	i2l1159
  3023  00141A                     i2u275_40:
  3024  00141A  50A1               	movf	161,w,c	;volatile
  3025  00141C                     i2l1159:
  3026                           
  3027                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  3028  00141C  A0A0               	btfss	160,0,c	;volatile
  3029  00141E  EF13  F00A         	goto	i2u276_41
  3030  001422  EF15  F00A         	goto	i2u276_40
  3031  001426                     i2u276_41:
  3032  001426  EF16  F00A         	goto	i2l1161
  3033  00142A                     i2u276_40:
  3034  00142A  50A1               	movf	161,w,c	;volatile
  3035  00142C                     i2l1161:
  3036                           
  3037                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  3038  00142C  AA9D               	btfss	157,5,c	;volatile
  3039  00142E  EF1B  F00A         	goto	i2u277_41
  3040  001432  EF1D  F00A         	goto	i2u277_40
  3041  001436                     i2u277_41:
  3042  001436  EF26  F00A         	goto	i2l1163
  3043  00143A                     i2u277_40:
  3044  00143A  AA9E               	btfss	158,5,c	;volatile
  3045  00143C  EF22  F00A         	goto	i2u278_41
  3046  001440  EF24  F00A         	goto	i2u278_40
  3047  001444                     i2u278_41:
  3048  001444  EF26  F00A         	goto	i2l1163
  3049  001448                     i2u278_40:
  3050  001448                     
  3051                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  3052  001448  ECF5  F00C         	call	_EUSART_Rx_ISR	;wreg free
  3053  00144C                     i2l1163:
  3054                           
  3055                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  3056  00144C  A89D               	btfss	157,4,c	;volatile
  3057  00144E  EF2B  F00A         	goto	i2u279_41
  3058  001452  EF2D  F00A         	goto	i2u279_40
  3059  001456                     i2u279_41:
  3060  001456  EF36  F00A         	goto	i2l1165
  3061  00145A                     i2u279_40:
  3062  00145A  A89E               	btfss	158,4,c	;volatile
  3063  00145C  EF32  F00A         	goto	i2u280_41
  3064  001460  EF34  F00A         	goto	i2u280_40
  3065  001464                     i2u280_41:
  3066  001464  EF36  F00A         	goto	i2l1165
  3067  001468                     i2u280_40:
  3068  001468                     
  3069                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  3070  001468  ECF4  F00C         	call	_EUSART_Tx_ISR	;wreg free
  3071  00146C                     i2l1165:
  3072                           
  3073                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  3074  00146C  A6A0               	btfss	160,3,c	;volatile
  3075  00146E  EF3B  F00A         	goto	i2u281_41
  3076  001472  EF3D  F00A         	goto	i2u281_40
  3077  001476                     i2u281_41:
  3078  001476  EF3E  F00A         	goto	i2l1167
  3079  00147A                     i2u281_40:
  3080  00147A  50A1               	movf	161,w,c	;volatile
  3081  00147C                     i2l1167:
  3082                           
  3083                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  3084  00147C  A69D               	btfss	157,3,c	;volatile
  3085  00147E  EF43  F00A         	goto	i2u282_41
  3086  001482  EF45  F00A         	goto	i2u282_40
  3087  001486                     i2u282_41:
  3088  001486  EF46  F00A         	goto	i2l1170
  3089  00148A                     i2u282_40:
  3090  00148A  509E               	movf	158,w,c	;volatile
  3091  00148C                     i2l1170:
  3092  00148C  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3093  00148E  0011               	retfie		f
  3094  001490                     __end_of_InterruptManagerHigh:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _TMR0_ISR *****************
  3098 ;; Defined at:
  3099 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		None
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_InterruptManagerHigh
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text21
  3127  0019E6                     __ptext21:
  3128                           	callstack 0
  3129  0019E6                     _TMR0_ISR:
  3130                           	callstack 22
  3131  0019E6  0012               	return		;funcret
  3132  0019E8                     __end_of_TMR0_ISR:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _EUSART_Tx_ISR *****************
  3136 ;; Defined at:
  3137 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		None
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_InterruptManagerHigh
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text22
  3165  0019E8                     __ptext22:
  3166                           	callstack 0
  3167  0019E8                     _EUSART_Tx_ISR:
  3168                           	callstack 22
  3169  0019E8  0012               	return		;funcret
  3170  0019EA                     __end_of_EUSART_Tx_ISR:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _EUSART_Rx_ISR *****************
  3174 ;; Defined at:
  3175 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_InterruptManagerHigh
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text23
  3203  0019EA                     __ptext23:
  3204                           	callstack 0
  3205  0019EA                     _EUSART_Rx_ISR:
  3206                           	callstack 22
  3207  0019EA  0012               	return		;funcret
  3208  0019EC                     __end_of_EUSART_Rx_ISR:
  3209                           	callstack 0
  3210                           
  3211                           	psect	rparam
  3212  0000                     
  3213                           	psect	temp
  3214  000079                     btemp:
  3215                           	callstack 0
  3216  000079                     	ds	1
  3217  0000                     int$flags	set	btemp
  3218  0000                     wtemp8	set	btemp+1
  3219  0000                     ttemp5	set	btemp+1
  3220  0000                     ttemp6	set	btemp+4
  3221  0000                     ttemp7	set	btemp+8
  3222                           
  3223                           	psect	idloc
  3224                           
  3225                           ;Config register IDLOC0 @ 0x200000
  3226                           ;	unspecified, using default values
  3227  200000                     	org	2097152
  3228  200000  FF                 	db	255
  3229                           
  3230                           ;Config register IDLOC1 @ 0x200001
  3231                           ;	unspecified, using default values
  3232  200001                     	org	2097153
  3233  200001  FF                 	db	255
  3234                           
  3235                           ;Config register IDLOC2 @ 0x200002
  3236                           ;	unspecified, using default values
  3237  200002                     	org	2097154
  3238  200002  FF                 	db	255
  3239                           
  3240                           ;Config register IDLOC3 @ 0x200003
  3241                           ;	unspecified, using default values
  3242  200003                     	org	2097155
  3243  200003  FF                 	db	255
  3244                           
  3245                           ;Config register IDLOC4 @ 0x200004
  3246                           ;	unspecified, using default values
  3247  200004                     	org	2097156
  3248  200004  FF                 	db	255
  3249                           
  3250                           ;Config register IDLOC5 @ 0x200005
  3251                           ;	unspecified, using default values
  3252  200005                     	org	2097157
  3253  200005  FF                 	db	255
  3254                           
  3255                           ;Config register IDLOC6 @ 0x200006
  3256                           ;	unspecified, using default values
  3257  200006                     	org	2097158
  3258  200006  FF                 	db	255
  3259                           
  3260                           ;Config register IDLOC7 @ 0x200007
  3261                           ;	unspecified, using default values
  3262  200007                     	org	2097159
  3263  200007  FF                 	db	255
  3264                           
  3265                           	psect	config
  3266                           
  3267                           ; Padding undefined space
  3268  300000                     	org	3145728
  3269  300000  FF                 	db	255
  3270                           
  3271                           ;Config register CONFIG1H @ 0x300001
  3272                           ;	Oscillator Selection bits
  3273                           ;	OSC = HS, HS oscillator
  3274                           ;	Fail-Safe Clock Monitor Enable bit
  3275                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3276                           ;	Internal/External Oscillator Switchover bit
  3277                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3278  300001                     	org	3145729
  3279  300001  02                 	db	2
  3280                           
  3281                           ;Config register CONFIG2L @ 0x300002
  3282                           ;	Power-up Timer Enable bit
  3283                           ;	PWRT = OFF, PWRT disabled
  3284                           ;	Brown-out Reset Enable bits
  3285                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3286                           ;	Brown Out Reset Voltage bits
  3287                           ;	BORV = 1, 
  3288  300002                     	org	3145730
  3289  300002  09                 	db	9
  3290                           
  3291                           ;Config register CONFIG2H @ 0x300003
  3292                           ;	Watchdog Timer Enable bit
  3293                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3294                           ;	Watchdog Timer Postscale Select bits
  3295                           ;	WDTPS = 512, 1:512
  3296  300003                     	org	3145731
  3297  300003  12                 	db	18
  3298                           
  3299                           ; Padding undefined space
  3300  300004                     	org	3145732
  3301  300004  FF                 	db	255
  3302                           
  3303                           ;Config register CONFIG3H @ 0x300005
  3304                           ;	CCP2 MUX bit
  3305                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3306                           ;	PORTB A/D Enable bit
  3307                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3308                           ;	Low-Power Timer1 Oscillator Enable bit
  3309                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3310                           ;	MCLR Pin Enable bit
  3311                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3312  300005                     	org	3145733
  3313  300005  81                 	db	129
  3314                           
  3315                           ;Config register CONFIG4L @ 0x300006
  3316                           ;	Stack Full/Underflow Reset Enable bit
  3317                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3318                           ;	Single-Supply ICSP Enable bit
  3319                           ;	LVP = OFF, Single-Supply ICSP disabled
  3320                           ;	Extended Instruction Set Enable bit
  3321                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3322                           ;	Background Debugger Enable bit
  3323                           ;	DEBUG = 0x1, unprogrammed default
  3324  300006                     	org	3145734
  3325  300006  81                 	db	129
  3326                           
  3327                           ; Padding undefined space
  3328  300007                     	org	3145735
  3329  300007  FF                 	db	255
  3330                           
  3331                           ;Config register CONFIG5L @ 0x300008
  3332                           ;	Code Protection bit
  3333                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3334                           ;	Code Protection bit
  3335                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3336                           ;	Code Protection bit
  3337                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3338                           ;	Code Protection bit
  3339                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3340  300008                     	org	3145736
  3341  300008  0F                 	db	15
  3342                           
  3343                           ;Config register CONFIG5H @ 0x300009
  3344                           ;	Boot Block Code Protection bit
  3345                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3346                           ;	Data EEPROM Code Protection bit
  3347                           ;	CPD = OFF, Data EEPROM not code-protected
  3348  300009                     	org	3145737
  3349  300009  C0                 	db	192
  3350                           
  3351                           ;Config register CONFIG6L @ 0x30000A
  3352                           ;	Write Protection bit
  3353                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3354                           ;	Write Protection bit
  3355                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3356                           ;	Write Protection bit
  3357                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3358                           ;	Write Protection bit
  3359                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3360  30000A                     	org	3145738
  3361  30000A  0F                 	db	15
  3362                           
  3363                           ;Config register CONFIG6H @ 0x30000B
  3364                           ;	Configuration Register Write Protection bit
  3365                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3366                           ;	Boot Block Write Protection bit
  3367                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3368                           ;	Data EEPROM Write Protection bit
  3369                           ;	WRTD = OFF, Data EEPROM not write-protected
  3370  30000B                     	org	3145739
  3371  30000B  E0                 	db	224
  3372                           
  3373                           ;Config register CONFIG7L @ 0x30000C
  3374                           ;	Table Read Protection bit
  3375                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3376                           ;	Table Read Protection bit
  3377                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3378                           ;	Table Read Protection bit
  3379                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3380                           ;	Table Read Protection bit
  3381                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3382  30000C                     	org	3145740
  3383  30000C  0F                 	db	15
  3384                           
  3385                           ;Config register CONFIG7H @ 0x30000D
  3386                           ;	Boot Block Table Read Protection bit
  3387                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3388  30000D                     	org	3145741
  3389  30000D  40                 	db	64
  3390                           tosu	equ	0xFFF
  3391                           tosh	equ	0xFFE
  3392                           tosl	equ	0xFFD
  3393                           stkptr	equ	0xFFC
  3394                           pclatu	equ	0xFFB
  3395                           pclath	equ	0xFFA
  3396                           pcl	equ	0xFF9
  3397                           tblptru	equ	0xFF8
  3398                           tblptrh	equ	0xFF7
  3399                           tblptrl	equ	0xFF6
  3400                           tablat	equ	0xFF5
  3401                           prodh	equ	0xFF4
  3402                           prodl	equ	0xFF3
  3403                           indf0	equ	0xFEF
  3404                           postinc0	equ	0xFEE
  3405                           postdec0	equ	0xFED
  3406                           preinc0	equ	0xFEC
  3407                           plusw0	equ	0xFEB
  3408                           fsr0h	equ	0xFEA
  3409                           fsr0l	equ	0xFE9
  3410                           wreg	equ	0xFE8
  3411                           indf1	equ	0xFE7
  3412                           postinc1	equ	0xFE6
  3413                           postdec1	equ	0xFE5
  3414                           preinc1	equ	0xFE4
  3415                           plusw1	equ	0xFE3
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           bsr	equ	0xFE0
  3419                           indf2	equ	0xFDF
  3420                           postinc2	equ	0xFDE
  3421                           postdec2	equ	0xFDD
  3422                           preinc2	equ	0xFDC
  3423                           plusw2	equ	0xFDB
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8

Data Sizes:
    Strings     88
    Constant    0
    Data        66
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29     120
    BANK0           128      6      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    Timer2_Init$0	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK0[12]), CCP1_Obj(COMRAM[12]), 

    S4733$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4733$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3277$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3277$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3230$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S527$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[12]), 
		 -> CCP1_Obj(COMRAM[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pinc0(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[12]), 
		 -> CCP1_Obj(COMRAM[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[12]), 
		 -> CCP1_Obj(COMRAM[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[15]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_4bit_send_string_data_pos

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   71999
                                             27 COMRAM     2     2      0
              _GPIO_Pin_Toggle_Logic
               _GPIO_Pin_Write_Logic
              _application_intialize
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   35969
                                              0 BANK0      6     0      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   18423
                                             21 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16202
                                             17 COMRAM     3     0      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   31141
                _GPIO_Pin_Initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   24665
                                             21 COMRAM     5     3      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   17738
                                             17 COMRAM     4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5553
                                             14 COMRAM     3     0      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    5117
                                             14 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    6476
                                             14 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    4739
                                              4 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     483
                                              4 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     150
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManagerLow                                  3     3      0     120
                                              1 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptManagerHigh                                 0     0      0       0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Tx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Rx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPIO_Pin_Write_Logic
   _application_intialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
       _lcd_send_4bits
     _lcd_4bits_set_courser
       _lcd_4bit_send_command

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      6      21       5       25.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1D      78       1       95.2%
BITBIGSFRhhhhll     18      0       0      37        0.0%
BITBIGSFRhhhhh       D      0       0      36        0.0%
BITBIGSFRllhhll      8      0       0      45        0.0%
BITBIGSFRllhhll      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRhhhl        4      0       0      39        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRhhhhll      3      0       0      38        0.0%
BITBIGSFRhhlhh       1      0       0      40        0.0%
BITBIGSFRllhhll      1      0       0      43        0.0%
BITBIGSFRllhhlh      1      0       0      42        0.0%
BITBIGSFRllhhh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99      49        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 04 00:58:33 2023

                         ?_lcd_send_4bits 006A          lcd_4bit_send_command@ERRORSTATUS 0070  
                             _SSPSTATbits 000FC7                                        bsr 000FE0  
                   ??_InterruptManagerLow 005D                                       l120 13D8  
                                     l130 1888                                       l125 17C4  
                                     l155 1670                                       l252 16EA  
                                     l247 191A                                       l281 153E  
                                     l912 18D2                                       l907 175A  
                                     l876 1198                                       l895 12C0  
                                     _PR2 000FCB      __end_of_lcd_4bits_send_enable_signal 191C  
            _lcd_4bits_send_enable_signal 18D4                    ??_InterruptManagerHigh 005C  
               _RB5_InterruptHandler_HIGH 0043                           __end_of_ADC_ISR 19E6  
GPIO_Pin_Direction_Initialize@ERRORSTATUS 0068                                       prod 000FF3  
                                     wreg 000FE8                                _TXSTA1bits 000FAC  
                  ??_GPIO_Pin_Write_Logic 0063                           __end_of_RB4_ISR 19D4  
                         __end_of_RB5_ISR 19BA                           __end_of_RB6_ISR 19A0  
                         __end_of_RB7_ISR 1986                                      l1723 196A  
                                    l5020 119E                                      l5022 11B0  
                                    l5110 17C2                                      l5102 175C  
                                    l5032 1294                                      l5024 11CE  
                                    l5104 175C                                      l5200 1504  
                                    l5026 11D6                                      l5034 12BE  
                                    l5018 119A                                      l5042 1672  
                                    l5106 176E                                      l5130 12D4  
                                    l5028 1238                                      l5060 18FE  
                                    l5052 18D4                                      l5044 1672  
                                    l5108 1776                                      l5132 12D8  
                                    l5070 1070                                      l5062 1906  
                                    l5054 18D4                                      l5046 1684  
                                    l5150 1334                                      l5142 12F8  
                                    l5134 12D8                                      l5126 12C2  
                                    l5080 1154                                      l5072 108E  
                                    l5056 18E6                                      l5048 1688  
                                    l5160 1388                                      l5152 1344  
                                    l5144 1314                                      l5136 12E4  
                                    l5128 12C2                                      l5074 1096  
                                    l5082 1196                                      l5066 105A  
                                    l5090 188A                                      l5058 18EA  
                                    l5162 1398                                      l5154 1362  
                                    l5146 1316                                      l5076 10F8  
                                    l5068 105E                                      l5092 188A  
                                    l5164 13A8                                      l5156 1368  
                                    l5148 1326                                      l5172 1828  
                                    l5094 189C                                      l5166 13B8  
                                    l5158 1378                                      l5174 1828  
                                    l5190 14AC                                      l5182 1490  
                                    l5096 18A4                                      l5168 13C8  
                                    l5176 183A                                      l5192 14C2  
                                    l5184 1490                                      l5098 18D0  
                                    l5178 183E                                      l5194 14D8  
                                    l5186 14A2                                      l5196 14EE  
                                    l5188 14A6                                      l5552 16EC  
                                    l5554 16EC                                      l5562 1952  
                                    l6530 1602                                      l5556 16FE  
                                    l6620 12A8                                      l6540 1652  
                                    l6532 1614                                      l5558 1702  
                                    l6622 1180                                      l6534 1618  
                                    l6526 15EE                                      l6550 159E  
                                    l6542 1540                                      l6536 1630  
                                    l6528 15EE                                      l6552 15AE  
                                    l6544 1544                                      l6618 1518  
                                    l6538 164C                                      l6554 15C4  
                                    l6546 1562                                      l6556 15D0  
                                    l6548 1580                                      STR_1 1014  
                                    STR_2 1043                                      STR_3 1034  
                                    STR_4 1001                                      STR_5 1056  
                                    STR_9 1053                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u4330 16FE                                      u4331 16FA  
                                    u4344 171E                                      u3800 108E  
                                    u4345 171A                                      u3801 108A  
                                    u3730 11B0                                      u3731 11AC  
                                    u3740 11CE                                      u3900 12D4  
                                    u3741 11CA                                      u3901 12D0  
                                    u3830 116C                                      u3814 10B2  
                                    u3910 1326                                      u3831 1166  
                                    u3815 10AE                                      u3911 1322  
                                    u3840 116E                                      u3824 1114  
                                    u3920 183A                                      u3825 1110  
                                    u3921 1836                                      u3754 11F2  
                                    u3850 189C                                      u3770 1684  
                                    u3930 14A2                                      u3755 11EE  
                                    u3851 1898                                      u3771 1680  
                                    u3931 149E                                      u5507 15DA  
                                    u3764 1254                                      u3780 18E6  
                                    u3860 176E                                      u5460 1602  
                                    u3765 1250                                      u3781 18E2  
                                    u3861 176A                                      u5517 132C  
                                    u5461 15FE                                      u3790 1070  
                                    u5470 1614                                      u3791 106C  
                                    u5527 134A                                      u5471 1610  
                                    u5480 1670                                      u5537 1364  
                                    u5481 166C                                      u5547 1900  
                                    u5497 15B8                                      _RX9D 007D58  
                 ??_application_intialize 0076                  _RB4_InterruptHandler_LOW 0045  
                                    _lcd1 002C                                      _main 1540  
                _RB7_InterruptHandler_LOW 0039                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0079  
                                    prodl 000FF3                                      start 0286  
        GPIO_Pin_Toggle_Logic@_pin_config 0060                              ___param_bank 000000  
                   _lcd_4bit_send_command 175C                          __end_of_INT1_ISR 19E4  
                                   ?_main 005C                                     STR_11 1025  
                                   STR_12 1025                                     STR_13 104F  
                                   i1l463 19E4                                     i2l824 19E8  
                                   i2l828 19EA                                     _RCREG 000FAE  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _SPBRG 000FAF                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                           _EUSART_Rx_ISR 19EA                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           _EUSART_Tx_ISR 19E8                                     _TXREG 000FAD  
           ?_lcd_4bits_send_enable_signal 006A                          __end_of_TMR0_ISR 19E8  
                                   _flags 001F                                     _pinc0 0036  
                  ?_lcd_4bits_set_courser 0071                                     tablat 000FF5  
              lcd_4bits_set_courser@colum 0074     __end_of_lcd_4bit_send_string_data_pos 1672  
           _lcd_4bit_send_string_data_pos 15EE                                     ttemp5 007A  
                                   ttemp6 007D                                     ttemp7 0081  
                                   status 000FD8                                     wtemp8 007A  
             _I2C_DefaultInterruptHandler 0053                           __initialization 17C6  
                            __end_of_main 15EE                _eusart_Rx_InterruptHandler 0059  
           __end_of_GPIO_Pin_Toggle_Logic 175C                                 ??_ADC_ISR 005C  
                           _lat_registers 000B                                    ??_main 0077  
                           __activetblptr 000003                            ?_EUSART_Rx_ISR 005C  
                          ?_EUSART_Tx_ISR 005C                                 ??_RB4_ISR 005C  
                               ??_RB5_ISR 005C                                 ??_RB6_ISR 005C  
                               ??_RB7_ISR 005C                     RB5_ISR@Handler_Select 005C  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1L 000FBE                                    _CCPR2L 000FBB  
                                  i1l1303 1984                                    i1l1180 00C6  
                                  i1l3110 19E0                                    i1l1190 0206  
                                  i1l1182 0106                                    i1l1263 19E2  
                                  i1l3120 19D2                                    i1l1192 0246  
                                  i1l1184 0146                                    i1l1176 0046  
                                  i1l3114 19BC                                    i1l3130 19B8  
                                  i1l1194 0266                                    i1l1186 0186  
                                  i1l1178 0086                                    i1l1276 19D2  
                                  i1l3116 19BE                                    i1l3124 19A2  
                                  i1l3140 199E                                    i1l1188 01C6  
                                  i1l1285 19B8                                    i1l1197 0276  
                                  i1l3126 19A4                                    i1l1294 199E  
                                  i1l3134 1988                                    i1l3150 1984  
                                  i1l3136 198A                                    i1l3144 196E  
                                  i1l3146 1970                                    i1l4400 00E2  
                                  i1l4410 0122                                    i1l4402 00F0  
                                  i1l4420 0162                                    i1l4412 0130  
                                  i1l4404 00FE                                    i1l4430 01A2  
                                  i1l4422 0170                                    i1l4414 013E  
                                  i1l4406 0100                                    i1l4440 01E2  
                                  i1l4432 01B0                                    i1l4424 017E  
                                  i1l4416 0140                                    i1l4408 0114  
                                  i2l1161 142C                                    i2l1170 148C  
                                  i1l4450 0222                                    i1l4442 01F0  
                                  i1l4434 01BE                                    i1l4426 0180  
                                  i1l4418 0154                                    i2l1163 144C  
                                  i2l1155 13FC                                    i1l4460 0262  
                                  i1l4452 0230                                    i1l4444 01FE  
                                  i1l4436 01C0                                    i1l4428 0194  
                                  i1l4380 0062                                    i1l4372 0026  
                                  i2l1165 146C                                    i2l1157 140C  
                                  i1l4462 0274                                    i1l4454 023E  
                                  i1l4446 0200                                    i1l4438 01D4  
                                  i1l4390 00A2                                    i1l4382 0070  
                                  i1l4374 0034                                    i2l1167 147C  
                                  i2l1159 141C                                    i1l4456 0240  
                                  i1l4448 0214                                    i1l4392 00B0  
                                  i1l4384 007E                                    i1l4376 0042  
                                  i1l4458 0254                                    i1l4394 00BE  
                                  i1l4386 0080                                    i1l4378 0054  
                                  i1l4396 00C0                                    i1l4388 0094  
                                  i1l4398 00D4                                    i2l1553 19E6  
                                  i2l3098 19EA                                    i2l4340 13EA  
                                  i2l4342 13F8                                    i2l4360 145A  
                                  i2l4352 142A                                    i2l4344 140A  
                                  i2l4362 1468                                    i2l4338 13DC  
                                  i2l4364 147A                                    i2l4356 143A  
                                  i2l4348 141A                                    i2l4358 1448  
                                  i2l4368 148A                            _Movement_State 005B  
                                  _SPBRGH 000FB0                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                    _W1_W3_W5_Motor_Control 0034  
      lcd_4bit_send_string_data_pos@colum 009E                    ?_lcd_4bit_send_command 006D  
         ??_GPIO_Pin_Direction_Initialize 0062               __end_of_GPIO_Pin_Initialize 18D4  
                                  clear_0 180C                                    clear_1 1818  
                                  isa$std 000001                              __pdataCOMRAM 0001  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                              __accesstop 0080                   __end_of__initialization 181E  
                               ?_INT1_ISR 005C                             ___rparam_used 000001  
                        ??_lcd_send_4bits 006D                _I2C_Report_Write_Collision 004F  
                 _lcd_4bit_send_char_data 1828            ?_lcd_4bit_send_string_data_pos 009B  
                          __pcstackCOMRAM 005C                              __pidataBANK0 19D4  
                               ?_TMR0_ISR 005C                           ??_EUSART_Rx_ISR 005C  
                         ??_EUSART_Tx_ISR 005C                  lcd_4bit_send_command@lcd 006D  
                              __pbssBANK0 0080                     _INT0_InterruptHandler 004D  
                              ??_INT1_ISR 005C           lcd_4bits_send_enable_signal@lcd 006A  
           __end_of_application_intialize 196C                  _eusart_frameerr_CallBack 0055  
             __end_of_InterruptManagerLow 0286        lcd_4bit_initialize@pin_lcd_counter 0075  
                              ??_TMR0_ISR 005C                                   _ADC_ISR 19E4  
   __end_of_GPIO_Pin_Direction_Initialize 119A             _GPIO_Pin_Direction_Initialize 105A  
                                 _RB4_ISR 19BA                                   _RB5_ISR 19A0  
                                 _RB6_ISR 1986                                   _RB7_ISR 196C  
               _RB6_InterruptHandler_HIGH 003F                   ??_lcd_4bits_set_courser 0075  
                                 i1u98_20 19CE                                   i1u98_21 19CA  
                                 i1u99_20 19B4                                   i1u99_21 19B0  
                          _tris_registers 0015                  _RB6_InterruptHandler_LOW 003D  
               ??_lcd_4bit_send_char_data 0070                                   __Hparam 0000  
              _eusart_overrunerr_CallBack 0057                                   __Lparam 0000  
                            __psmallconst 1000                                   __pcinit 17C6  
                                 __ramtop 1000                                   __ptext0 1540  
                                 __ptext1 15EE                                   __ptext2 1490  
                                 __ptext3 1828                                   __ptext4 1952  
                                 __ptext5 12C2                                   __ptext6 175C  
                                 __ptext7 1672                                   __ptext8 18D4  
                                 __ptext9 188A                                 _T0CONbits 000FD5  
                               _T3CONbits 000FB1                            __pintcode_body 13DA  
                    end_of_initialization 181E                         lcd_send_4bits@lcd 006A  
                                 int_func 13DA                   ??_lcd_4bit_send_command 0070  
                               _RCSTAbits 000FAB                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                       _lcd_4bit_initialize 12C2  
         __end_of_lcd_4bit_send_char_data 188A                     _INT1_InterruptHandler 004B  
                               _PORTBbits 000F81                     _GPIO_Pin_Toggle_Logic 16EC  
                               _PORTDbits 000F83                lcd_4bit_send_char_data@lcd 006D  
          ?_GPIO_Pin_Direction_Initialize 0060                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                   RB4_ISR@Handler_Select 005C                     RB7_ISR@Handler_Select 005C  
                    ?_lcd_4bit_initialize 0071                               _CCP1CONbits 000FBD  
                             _CCP2CONbits 000FBA                                 _TXSTAbits 000FAC  
           convert_uint16_to_string@F3203 0089                               _BAUDCONbits 000FB8  
                           __pidataCOMRAM 191C                       start_initialization 17C6  
         GPIO_Pin_Write_Logic@_pin_config 0060                     ??_lcd_4bit_initialize 0073  
          GPIO_Pin_Initialize@_pin_config 006A                               __pdataBANK0 008F  
                                ?_ADC_ISR 005C                    ?_GPIO_Pin_Toggle_Logic 0060  
            lcd_4bit_send_command@command 006F                     __end_of_EUSART_Rx_ISR 19EC  
                   __end_of_EUSART_Tx_ISR 19EA                                  ?_RB4_ISR 005C  
                                ?_RB5_ISR 005C                                  ?_RB6_ISR 005C  
                                ?_RB7_ISR 005C                               __pbssCOMRAM 0037  
                           __pcstackBANK0 009B             __end_of_lcd_4bits_set_courser 1540  
                   _INT2_InterruptHandler 0049            ??_lcd_4bits_send_enable_signal 006C  
            __end_of_InterruptManagerHigh 1490                     _application_intialize 1952  
                               __pintcode 0008              __end_of_GPIO_Pin_Write_Logic 12C2  
         GPIO_Pin_Write_Logic@ERRORSTATUS 0069                               __pintcodelo 0018  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 0047  
                                _CCP1_Obj 0020                                  _CCP2_Obj 008F  
               _RB7_InterruptHandler_HIGH 003B            GPIO_Pin_Initialize@ERRORSTATUS 006C  
          convert_float32_to_string@F3214 0080                  _RB5_InterruptHandler_LOW 0041  
                                _INT1_ISR 19E0                lcd_send_4bits@data_command 006C  
                                _LATDbits 000F8C                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  i1u100_20 199A  
                                i1u100_21 1996                                  i1u101_20 1980  
                                i1u101_21 197C                                  i1u300_20 013E  
                                i1u300_21 013A                                  i1u301_20 0154  
                                i1u301_21 0150                                  i1u310_20 01E2  
                                i1u302_20 0162                                  i1u310_21 01DE  
                                i1u302_21 015E                                  i1u311_20 01F0  
                                i1u303_20 0170                                  i1u311_21 01EC  
                                i1u303_21 016C                                  i1u312_20 01FE  
                                i1u304_20 017E                                  i1u312_21 01FA  
                                i1u304_21 017A                                  i1u313_20 0214  
                                i1u305_20 0194                                  i1u313_21 0210  
                                i1u305_21 0190                                  i1u314_20 0222  
                                i1u306_20 01A2                                  i1u314_21 021E  
                                i1u306_21 019E                                  i1u315_20 0230  
                                i1u307_20 01B0                                  i1u315_21 022C  
                                i1u307_21 01AC                                  i1u316_20 023E  
                                i1u308_20 01BE                                  i1u316_21 023A  
                                i1u308_21 01BA                                  i1u317_20 0254  
                                i1u309_20 01D4                                  i1u317_21 0250  
                                i1u309_21 01D0                                  i1u318_20 0262  
                                i1u318_21 025E                                  i1u319_20 0274  
                                i1u319_21 0270                                  i1u290_20 00A2  
                                i1u290_21 009E                                  i1u291_20 00B0  
                                i1u283_20 0034                                  i1u291_21 00AC  
                                i1u283_21 0030                                  i1u292_20 00BE  
                                i1u284_20 0042                                  i1u292_21 00BA  
                                i1u284_21 003E             __end_of_lcd_4bit_send_command 17C6  
                                i1u293_20 00D4                                  i1u285_20 0054  
                                i1u293_21 00D0                                  i1u285_21 0050  
                                i1u294_20 00E2                                  i1u286_20 0062  
                                i1u294_21 00DE                                  i1u286_21 005E  
                                i1u295_20 00F0                                  i1u287_20 0070  
                                i1u295_21 00EC                                  i1u287_21 006C  
                                i1u296_20 00FE                                  i1u288_20 007E  
                                i1u296_21 00FA                                  i1u288_21 007A  
                                i1u297_20 0114                                  i1u289_20 0094  
                                i1u297_21 0110                                  i1u289_21 0090  
                                i1u298_20 0122                                  i1u298_21 011E  
                                i1u299_20 0130                                  i1u299_21 012C  
                                i2u280_40 1468                                  i2u272_40 13EA  
                                i2u280_41 1464                                  i2u272_41 13E6  
                                i2u281_40 147A                                  i2u273_40 13F8  
                                i2u281_41 1476                                  i2u273_41 13F4  
                                _PIR1bits 000F9E                                  i2u282_40 148A  
                                i2u274_40 140A                                  i2u282_41 1486  
                                i2u274_41 1406                                  i2u275_40 141A  
                                i2u275_41 1416                                  _PIR2bits 000FA1  
                                i2u276_40 142A                                  i2u276_41 1426  
                                i2u277_40 143A                                  i2u277_41 1436  
                                i2u278_40 1448                                  i2u278_41 1444  
                                i2u279_40 145A                                  i2u279_41 1456  
                                _RCONbits 000FD0                                  _TMR0_ISR 19E6  
             _I2C_Report_Receive_Overflow 0051                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                ?_lcd_4bit_send_char_data 006D                                 copy_data0 17DA  
                               copy_data1 17FA                    ?_application_intialize 005C  
                     _GPIO_Pin_Initialize 188A                                  __Hrparam 0000  
        lcd_4bit_send_string_data_pos@lcd 009B          lcd_4bit_send_string_data_pos@row 009D  
        lcd_4bit_send_string_data_pos@str 009F                                  __Lrparam 0000  
               GPIO_Pin_Write_Logic@logic 0062                             _preloaded_val 0037  
                    ?_GPIO_Pin_Initialize 006A                     RB6_ISR@Handler_Select 005C  
                    _InterruptManagerHigh 0008                  lcd_4bits_set_courser@lcd 0071  
                lcd_4bits_set_courser@row 0073                                  __ptext10 119A  
                                __ptext11 105A                                  __ptext12 16EC  
                                __ptext21 19E6                                  __ptext22 19E8  
                                __ptext14 196C                                  __ptext23 19EA  
                                __ptext15 1986                                  __ptext16 19A0  
                                __ptext17 19BA                                  __ptext18 19E0  
                                __ptext19 19E4                      _GPIO_Pin_Write_Logic 119A  
                 ??_GPIO_Pin_Toggle_Logic 0062                                  isa$xinst 000000  
                                int$flags 0079                            _lcd_send_4bits 1672  
                   ??_GPIO_Pin_Initialize 006C                                _INTCONbits 000FF2  
             __end_of_lcd_4bit_initialize 13DA                     ?_InterruptManagerHigh 005C  
                   ?_GPIO_Pin_Write_Logic 0060                                  intlevel1 0000  
                                intlevel2 0000                       _InterruptManagerLow 0018  
GPIO_Pin_Direction_Initialize@_pin_config 0060                                _RCSTA1bits 000FAB  
                  __end_of_lcd_send_4bits 16EC                      ?_InterruptManagerLow 005C  
                          _port_registers 0001                    _W2_W4_W6_Motor_Control 0032  
                             _SSPCON1bits 000FC6                               _SSPCON2bits 000FC5  
                              _WDTCONbits 000FD1           ??_lcd_4bit_send_string_data_pos 0077  
                   _lcd_4bits_set_courser 1490               lcd_4bit_send_char_data@data 006F  
                  lcd_4bit_initialize@lcd 0071  
