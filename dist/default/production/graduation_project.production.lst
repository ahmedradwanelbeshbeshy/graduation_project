

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 10 16:26:21 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74  0000                     
    75                           ; Version 2.40
    76                           ; Generated 17/11/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4620 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataCOMRAM
   112  003630                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _blue
   116  003630  01                 	db	1
   117                           
   118                           ;initializer for _gps
   119  003631  01                 	db	1
   120                           
   121                           ;initializer for _datasend
   122  003632  77                 	db	119
   123                           
   124                           ;initializer for _flags
   125  003633  0F                 	db	15
   126                           
   127                           ;initializer for _W4_Motor_Control
   128  003634  1C                 	db	28
   129  003635  1D                 	db	29
   130                           
   131                           ;initializer for _W3_Motor_Control
   132  003636  1A                 	db	26
   133  003637  1B                 	db	27
   134                           
   135                           ;initializer for _W1_W5_W2_W6_Motor_Control
   136  003638  18                 	db	24
   137  003639  19                 	db	25
   138                           
   139                           ;initializer for _selector
   140  00363A  08                 	db	8
   141                           
   142                           ;initializer for _pind1
   143  00363B  99                 	db	153
   144                           
   145                           ;initializer for _pind2
   146  00363C  1A                 	db	26
   147                           
   148                           	psect	idataBANK0
   149  003366                     __pidataBANK0:
   150                           	callstack 0
   151                           
   152                           ;initializer for _port_registers
   153  003366  80                 	db	128
   154  003367  0F                 	db	15
   155  003368  81                 	db	129
   156  003369  0F                 	db	15
   157  00336A  82                 	db	130
   158  00336B  0F                 	db	15
   159  00336C  83                 	db	131
   160  00336D  0F                 	db	15
   161  00336E  84                 	db	132
   162  00336F  0F                 	db	15
   163                           
   164                           ;initializer for _lat_registers
   165  003370  89                 	db	137
   166  003371  0F                 	db	15
   167  003372  8A                 	db	138
   168  003373  0F                 	db	15
   169  003374  8B                 	db	139
   170  003375  0F                 	db	15
   171  003376  8C                 	db	140
   172  003377  0F                 	db	15
   173  003378  8D                 	db	141
   174  003379  0F                 	db	15
   175                           
   176                           ;initializer for _tris_registers
   177  00337A  92                 	db	146
   178  00337B  0F                 	db	15
   179  00337C  93                 	db	147
   180  00337D  0F                 	db	15
   181  00337E  94                 	db	148
   182  00337F  0F                 	db	15
   183  003380  95                 	db	149
   184  003381  0F                 	db	15
   185  003382  96                 	db	150
   186  003383  0F                 	db	15
   187                           
   188                           ;initializer for __uart_obj
   189  003384  2580               	dw	9600
   190  003386  04                 	db	4
   191  003387  44                 	db	low _usart_isr
   192  003388  34                 	db	high _usart_isr
   193  003389  00                 	db	0
   194  00338A  00                 	db	0
   195  00338B  00                 	db	0
   196  00338C  00                 	db	0
   197  00338D  09                 	db	9
   198  00338E  00                 	db	0
   199  00338F  00                 	db	0
   200                           
   201                           ;initializer for _CCP2_Obj
   202  003390  01                 	db	1
   203  003391  02                 	db	2
   204  003392  00                 	db	0
   205  003393  11                 	db	17
   206  003394  00                 	db	0
   207  003395  2710               	dw	10000
   208  003397  0000               	dw	0
   209  003399  11                 	db	17
   210                           
   211                           ;initializer for _CCP1_Obj
   212  00339A  00                 	db	0
   213  00339B  02                 	db	2
   214  00339C  00                 	db	0
   215  00339D  12                 	db	18
   216  00339E  00                 	db	0
   217  00339F  2710               	dw	10000
   218  0033A1  0000               	dw	0
   219  0033A3  10                 	db	16
   220                           
   221                           ;initializer for _lcd1
   222  0033A4  10                 	db	16
   223  0033A5  11                 	db	17
   224  0033A6  12                 	db	18
   225  0033A7  13                 	db	19
   226  0033A8  14                 	db	20
   227  0033A9  15                 	db	21
   228                           
   229                           ;initializer for _Timer0
   230  0033AA  07                 	db	7
   231  0033AB  85EE               	dw	34286
   232  0033AD  A2                 	db	low _Timer0_Handler
   233  0033AE  35                 	db	high _Timer0_Handler
   234  0033AF  01                 	db	1
   235  0000                     _ADCON1bits	set	4033
   236  0000                     _ADRESL	set	4035
   237  0000                     _ADRESH	set	4036
   238  0000                     _ADCON2bits	set	4032
   239  0000                     _ADCON0bits	set	4034
   240  0000                     _WDTCONbits	set	4049
   241  0000                     _TMR0H	set	4055
   242  0000                     _TMR0L	set	4054
   243  0000                     _T0CONbits	set	4053
   244  0000                     _INTCON2bits	set	4081
   245  0000                     _TRISBbits	set	3987
   246  0000                     _PORTBbits	set	3969
   247  0000                     _INTCON3bits	set	4080
   248  0000                     _IPR2bits	set	4002
   249  0000                     _PIR2bits	set	4001
   250  0000                     _SSPBUF	set	4041
   251  0000                     _PIE2bits	set	4000
   252  0000                     _SSPSTATbits	set	4039
   253  0000                     _SSPADD	set	4040
   254  0000                     _SSPCON2bits	set	4037
   255  0000                     _SSPCON1bits	set	4038
   256  0000                     _SPBRGH	set	4016
   257  0000                     _SPBRG	set	4015
   258  0000                     _BAUDCONbits	set	4024
   259  0000                     _INTCONbits	set	4082
   260  0000                     _IPR1bits	set	3999
   261  0000                     _RCONbits	set	4048
   262  0000                     _RCSTA1bits	set	4011
   263  0000                     _RCREG	set	4014
   264  0000                     _PIR1bits	set	3998
   265  0000                     _TXREG	set	4013
   266  0000                     _TXSTAbits	set	4012
   267  0000                     _PIE1bits	set	3997
   268  0000                     _TRISCbits	set	3988
   269  0000                     _TXSTA1bits	set	4012
   270  0000                     _RCSTAbits	set	4011
   271  0000                     _T3CONbits	set	4017
   272  0000                     _CCPR2L	set	4027
   273  0000                     _CCPR1L	set	4030
   274  0000                     _CCP2CONbits	set	4026
   275  0000                     _CCP1CONbits	set	4029
   276  0000                     _PORTE	set	3972
   277  0000                     _PORTD	set	3971
   278  0000                     _PORTC	set	3970
   279  0000                     _PORTB	set	3969
   280  0000                     _PORTA	set	3968
   281  0000                     _LATE	set	3981
   282  0000                     _LATD	set	3980
   283  0000                     _LATC	set	3979
   284  0000                     _LATB	set	3978
   285  0000                     _LATA	set	3977
   286  0000                     _TRISE	set	3990
   287  0000                     _TRISD	set	3989
   288  0000                     _TRISC	set	3988
   289  0000                     _TRISB	set	3987
   290  0000                     _TRISA	set	3986
   291  0000                     _PR2	set	4043
   292  0000                     _RX9D	set	32088
   293                           
   294                           	psect	smallconst
   295  001000                     __psmallconst:
   296                           	callstack 0
   297  001000  00                 	db	0
   298  001001  41                 	db	65	;'A'
   299  001002  54                 	db	84	;'T'
   300  001003  2B                 	db	43
   301  001004  55                 	db	85	;'U'
   302  001005  41                 	db	65	;'A'
   303  001006  52                 	db	82	;'R'
   304  001007  54                 	db	84	;'T'
   305  001008  3A                 	db	58	;':'
   306  001009  39                 	db	57	;'9'
   307  00100A  36                 	db	54	;'6'
   308  00100B  30                 	db	48	;'0'
   309  00100C  30                 	db	48	;'0'
   310  00100D  2C                 	db	44
   311  00100E  30                 	db	48	;'0'
   312  00100F  2C                 	db	44
   313  001010  30                 	db	48	;'0'
   314  001011  0D                 	db	13
   315  001012  0A                 	db	10
   316  001013  00                 	db	0
   317  001014  41                 	db	65	;'A'
   318  001015  54                 	db	84	;'T'
   319  001016  2B                 	db	43
   320  001017  52                 	db	82	;'R'
   321  001018  4E                 	db	78	;'N'
   322  001019  41                 	db	65	;'A'
   323  00101A  4D                 	db	77	;'M'
   324  00101B  45                 	db	69	;'E'
   325  00101C  3A                 	db	58	;':'
   326  00101D  52                 	db	82	;'R'
   327  00101E  6F                 	db	111	;'o'
   328  00101F  62                 	db	98	;'b'
   329  001020  6F                 	db	111	;'o'
   330  001021  74                 	db	116	;'t'
   331  001022  0D                 	db	13
   332  001023  0A                 	db	10
   333  001024  00                 	db	0
   334  001025                     STR_10:
   335  001025  2D                 	db	45
   336  001026  20                 	db	32
   337  001027  20                 	db	32
   338  001028  20                 	db	32
   339  001029  20                 	db	32
   340  00102A  20                 	db	32
   341  00102B  20                 	db	32
   342  00102C  20                 	db	32
   343  00102D  20                 	db	32
   344  00102E  20                 	db	32
   345  00102F  20                 	db	32
   346  001030  20                 	db	32
   347  001031  20                 	db	32
   348  001032  20                 	db	32
   349  001033  00                 	db	0
   350  001034  41                 	db	65	;'A'
   351  001035  54                 	db	84	;'T'
   352  001036  2B                 	db	43
   353  001037  50                 	db	80	;'P'
   354  001038  53                 	db	83	;'S'
   355  001039  57                 	db	87	;'W'
   356  00103A  44                 	db	68	;'D'
   357  00103B  3A                 	db	58	;':'
   358  00103C  31                 	db	49	;'1'
   359  00103D  32                 	db	50	;'2'
   360  00103E  33                 	db	51	;'3'
   361  00103F  34                 	db	52	;'4'
   362  001040  0D                 	db	13
   363  001041  0A                 	db	10
   364  001042  00                 	db	0
   365  001043  41                 	db	65	;'A'
   366  001044  54                 	db	84	;'T'
   367  001045  2B                 	db	43
   368  001046  52                 	db	82	;'R'
   369  001047  4F                 	db	79	;'O'
   370  001048  4C                 	db	76	;'L'
   371  001049  45                 	db	69	;'E'
   372  00104A  3A                 	db	58	;':'
   373  00104B  30                 	db	48	;'0'
   374  00104C  0D                 	db	13
   375  00104D  0A                 	db	10
   376  00104E  00                 	db	0
   377  00104F                     STR_9:
   378  00104F  2D                 	db	45
   379  001050  3E                 	db	62	;'>'
   380  001051  20                 	db	32
   381  001052  00                 	db	0
   382  001053                     STR_5:
   383  001053  25                 	db	37
   384  001054  69                 	db	105	;'i'
   385  001055  00                 	db	0
   386  001056  00                 	db	0	; dummy byte at the end
   387  0000                     
   388                           ; #config settings
   389                           
   390                           	psect	cinit
   391  002FFC                     __pcinit:
   392                           	callstack 0
   393  002FFC                     start_initialization:
   394                           	callstack 0
   395  002FFC                     __initialization:
   396                           	callstack 0
   397                           
   398                           ; Initialize objects allocated to BANK0 (74 bytes)
   399                           ; load TBLPTR registers with __pidataBANK0
   400  002FFC  0E66               	movlw	low __pidataBANK0
   401  002FFE  6EF6               	movwf	tblptrl,c
   402  003000  0E33               	movlw	high __pidataBANK0
   403  003002  6EF7               	movwf	tblptrh,c
   404  003004  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   405  003006  6EF8               	movwf	tblptru,c
   406  003008  EE00  F080         	lfsr	0,__pdataBANK0
   407  00300C  EE10 F04A          	lfsr	1,74
   408  003010                     copy_data0:
   409  003010  0009               	tblrd		*+
   410  003012  CFF5 FFEE          	movff	tablat,postinc0
   411  003016  50E5               	movf	postdec1,w,c
   412  003018  50E1               	movf	fsr1l,w,c
   413  00301A  E1FA               	bnz	copy_data0
   414                           
   415                           ; Initialize objects allocated to COMRAM (13 bytes)
   416                           ; load TBLPTR registers with __pidataCOMRAM
   417  00301C  0E30               	movlw	low __pidataCOMRAM
   418  00301E  6EF6               	movwf	tblptrl,c
   419  003020  0E36               	movlw	high __pidataCOMRAM
   420  003022  6EF7               	movwf	tblptrh,c
   421  003024  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   422  003026  6EF8               	movwf	tblptru,c
   423  003028  EE00  F049         	lfsr	0,__pdataCOMRAM
   424  00302C  EE10 F00D          	lfsr	1,13
   425  003030                     copy_data1:
   426  003030  0009               	tblrd		*+
   427  003032  CFF5 FFEE          	movff	tablat,postinc0
   428  003036  50E5               	movf	postdec1,w,c
   429  003038  50E1               	movf	fsr1l,w,c
   430  00303A  E1FA               	bnz	copy_data1
   431                           
   432                           ; Clear objects allocated to BANK1 (26 bytes)
   433  00303C  EE01  F025         	lfsr	0,__pbssBANK1
   434  003040  0E1A               	movlw	26
   435  003042                     clear_0:
   436  003042  6AEE               	clrf	postinc0,c
   437  003044  06E8               	decf	wreg,f,c
   438  003046  E1FD               	bnz	clear_0
   439                           
   440                           ; Clear objects allocated to BANK0 (22 bytes)
   441  003048  EE00  F0EA         	lfsr	0,__pbssBANK0
   442  00304C  0E16               	movlw	22
   443  00304E                     clear_1:
   444  00304E  6AEE               	clrf	postinc0,c
   445  003050  06E8               	decf	wreg,f,c
   446  003052  E1FD               	bnz	clear_1
   447                           
   448                           ; Clear objects allocated to COMRAM (27 bytes)
   449  003054  EE00  F02E         	lfsr	0,__pbssCOMRAM
   450  003058  0E1B               	movlw	27
   451  00305A                     clear_2:
   452  00305A  6AEE               	clrf	postinc0,c
   453  00305C  06E8               	decf	wreg,f,c
   454  00305E  E1FD               	bnz	clear_2
   455  003060                     end_of_initialization:
   456                           	callstack 0
   457  003060                     __end_of__initialization:
   458                           	callstack 0
   459  003060  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   460  003062  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   461  003064  0100               	movlb	0
   462  003066  EFE7  F015         	goto	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMRAM
   465  00002E                     __pbssCOMRAM:
   466                           	callstack 0
   467  00002E                     _preloaded_val:
   468                           	callstack 0
   469  00002E                     	ds	2
   470  000030                     _tmr0_InterruptHandler:
   471                           	callstack 0
   472  000030                     	ds	2
   473  000032                     _RB7_InterruptHandler_HIGH:
   474                           	callstack 0
   475  000032                     	ds	2
   476  000034                     _RB6_InterruptHandler_LOW:
   477                           	callstack 0
   478  000034                     	ds	2
   479  000036                     _RB6_InterruptHandler_HIGH:
   480                           	callstack 0
   481  000036                     	ds	2
   482  000038                     _RB5_InterruptHandler_LOW:
   483                           	callstack 0
   484  000038                     	ds	2
   485  00003A                     _RB5_InterruptHandler_HIGH:
   486                           	callstack 0
   487  00003A                     	ds	2
   488  00003C                     _RB4_InterruptHandler_LOW:
   489                           	callstack 0
   490  00003C                     	ds	2
   491  00003E                     _RB4_InterruptHandler_HIGH:
   492                           	callstack 0
   493  00003E                     	ds	2
   494  000040                     _INT1_InterruptHandler:
   495                           	callstack 0
   496  000040                     	ds	2
   497  000042                     _eusart_Rx_InterruptHandler:
   498                           	callstack 0
   499  000042                     	ds	2
   500  000044                     _counter:
   501                           	callstack 0
   502  000044                     	ds	1
   503  000045                     _i:
   504                           	callstack 0
   505  000045                     	ds	1
   506  000046                     _Movement_State:
   507                           	callstack 0
   508  000046                     	ds	1
   509  000047                     _gpstemp:
   510                           	callstack 0
   511  000047                     	ds	1
   512  000048                     _datarecive:
   513                           	callstack 0
   514  000048                     	ds	1
   515                           
   516                           	psect	dataCOMRAM
   517  000049                     __pdataCOMRAM:
   518                           	callstack 0
   519  000049                     _blue:
   520                           	callstack 0
   521  000049                     	ds	1
   522  00004A                     _gps:
   523                           	callstack 0
   524  00004A                     	ds	1
   525  00004B                     _datasend:
   526                           	callstack 0
   527  00004B                     	ds	1
   528  00004C                     _flags:
   529                           	callstack 0
   530  00004C                     	ds	1
   531  00004D                     _W4_Motor_Control:
   532                           	callstack 0
   533  00004D                     	ds	2
   534  00004F                     _W3_Motor_Control:
   535                           	callstack 0
   536  00004F                     	ds	2
   537  000051                     _W1_W5_W2_W6_Motor_Control:
   538                           	callstack 0
   539  000051                     	ds	2
   540  000053                     _selector:
   541                           	callstack 0
   542  000053                     	ds	1
   543  000054                     _pind1:
   544                           	callstack 0
   545  000054                     	ds	1
   546  000055                     _pind2:
   547                           	callstack 0
   548  000055                     	ds	1
   549                           
   550                           	psect	bssBANK0
   551  0000EA                     __pbssBANK0:
   552                           	callstack 0
   553  0000EA                     	ds	6
   554  0000F0                     _RB7_InterruptHandler_LOW:
   555                           	callstack 0
   556  0000F0                     	ds	2
   557  0000F2                     _INT2_InterruptHandler:
   558                           	callstack 0
   559  0000F2                     	ds	2
   560  0000F4                     _INT0_InterruptHandler:
   561                           	callstack 0
   562  0000F4                     	ds	2
   563  0000F6                     _I2C_Report_Write_Collision:
   564                           	callstack 0
   565  0000F6                     	ds	2
   566  0000F8                     _I2C_Report_Receive_Overflow:
   567                           	callstack 0
   568  0000F8                     	ds	2
   569  0000FA                     _I2C_DefaultInterruptHandler:
   570                           	callstack 0
   571  0000FA                     	ds	2
   572  0000FC                     _eusart_frameerr_CallBack:
   573                           	callstack 0
   574  0000FC                     	ds	2
   575  0000FE                     _eusart_overrunerr_CallBack:
   576                           	callstack 0
   577  0000FE                     	ds	2
   578                           
   579                           	psect	dataBANK0
   580  000080                     __pdataBANK0:
   581                           	callstack 0
   582  000080                     _port_registers:
   583                           	callstack 0
   584  000080                     	ds	10
   585  00008A                     _lat_registers:
   586                           	callstack 0
   587  00008A                     	ds	10
   588  000094                     _tris_registers:
   589                           	callstack 0
   590  000094                     	ds	10
   591  00009E                     __uart_obj:
   592                           	callstack 0
   593  00009E                     	ds	12
   594  0000AA                     _CCP2_Obj:
   595                           	callstack 0
   596  0000AA                     	ds	10
   597  0000B4                     _CCP1_Obj:
   598                           	callstack 0
   599  0000B4                     	ds	10
   600  0000BE                     _lcd1:
   601                           	callstack 0
   602  0000BE                     	ds	6
   603  0000C4                     _Timer0:
   604                           	callstack 0
   605  0000C4                     	ds	6
   606                           
   607                           	psect	bssBANK1
   608  000125                     __pbssBANK1:
   609                           	callstack 0
   610  000125                     _longtude:
   611                           	callstack 0
   612  000125                     	ds	13
   613  000132                     _latitude:
   614                           	callstack 0
   615  000132                     	ds	13
   616                           
   617                           	psect	cstackBANK1
   618  000100                     __pcstackBANK1:
   619                           	callstack 0
   620  000100                     ___fldiv@rem:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x0
   624  000100                     	ds	4
   625  000104                     ___fldiv@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x4
   629  000104                     	ds	1
   630  000105                     ___fldiv@new_exp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x5
   634  000105                     	ds	2
   635  000107                     ___fldiv@grs:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x7
   639  000107                     	ds	4
   640  00010B                     ___fldiv@bexp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0xB
   644  00010B                     	ds	1
   645  00010C                     ___fldiv@aexp:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0xC
   649  00010C                     	ds	1
   650  00010D                     ??___fladd:
   651                           
   652                           ; 1 bytes @ 0xD
   653  00010D                     	ds	4
   654  000111                     ___fladd@signs:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x11
   658  000111                     	ds	1
   659  000112                     ___fladd@aexp:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x12
   663  000112                     	ds	1
   664  000113                     ___fladd@bexp:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x13
   668  000113                     	ds	1
   669  000114                     ___fladd@grs:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x14
   673  000114                     	ds	1
   674  000115                     ??_async_config_baud_rate_gen:
   675                           
   676                           ; 1 bytes @ 0x15
   677  000115                     	ds	2
   678  000117                     async_config_baud_rate_gen@ret_val:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x17
   682  000117                     	ds	1
   683  000118                     async_config_baud_rate_gen@Baudrate_temp:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x18
   687  000118                     	ds	4
   688  00011C                     _async_config_baud_rate_gen$4998:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x1C
   692  00011C                     	ds	4
   693  000120                     EUSART_Async_Init@_eusart_obj:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x20
   697  000120                     	ds	2
   698  000122                     EUSART_Async_Init@ret_val:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x22
   702  000122                     	ds	1
   703  000123                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x23
   706  000123                     	ds	2
   707                           
   708                           	psect	cstackBANK0
   709  0000CA                     __pcstackBANK0:
   710                           	callstack 0
   711  0000CA                     ??_GPIO_Pin_Write_Logic:
   712  0000CA                     ??_GPIO_Pin_Direction_Initialize:
   713  0000CA                     ??_GPIO_Pin_Toggle_Logic:
   714  0000CA                     ??___fltol:
   715  0000CA                     ??___xxtofl:
   716  0000CA                     async_Rx_config@_rx_obj:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x0
   720  0000CA                     	ds	4
   721  0000CE                     ___fltol@sign1:
   722                           	callstack 0
   723  0000CE                     ___xxtofl@sign:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x4
   727  0000CE                     	ds	1
   728  0000CF                     ___fltol@exp1:
   729                           	callstack 0
   730  0000CF                     ___xxtofl@exp:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x5
   734  0000CF                     	ds	1
   735  0000D0                     lcd_4bits_send_enable_signal@lcd:
   736                           	callstack 0
   737  0000D0                     lcd_send_4bits@lcd:
   738                           	callstack 0
   739  0000D0                     GPIO_Pin_Initialize@_pin_config:
   740                           	callstack 0
   741  0000D0                     ___xxtofl@arg:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x6
   745  0000D0                     	ds	2
   746  0000D2                     lcd_send_4bits@data_command:
   747                           	callstack 0
   748  0000D2                     GPIO_Pin_Initialize@ERRORSTATUS:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x8
   752  0000D2                     	ds	2
   753  0000D4                     ?___fldiv:
   754                           	callstack 0
   755  0000D4                     lcd_4bit_send_command@lcd:
   756                           	callstack 0
   757  0000D4                     lcd_4bit_send_char_data@lcd:
   758                           	callstack 0
   759  0000D4                     ___fldiv@b:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0xA
   763  0000D4                     	ds	2
   764  0000D6                     lcd_4bit_send_command@command:
   765                           	callstack 0
   766  0000D6                     lcd_4bit_send_char_data@data:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0xC
   770  0000D6                     	ds	1
   771  0000D7                     lcd_4bit_send_command@ERRORSTATUS:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0xD
   775  0000D7                     	ds	1
   776  0000D8                     lcd_4bit_initialize@lcd:
   777                           	callstack 0
   778  0000D8                     lcd_4bits_set_courser@lcd:
   779                           	callstack 0
   780  0000D8                     ___fldiv@a:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0xE
   784  0000D8                     	ds	2
   785  0000DA                     ??_lcd_4bit_initialize:
   786  0000DA                     lcd_4bits_set_courser@row:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x10
   790  0000DA                     	ds	1
   791  0000DB                     lcd_4bits_set_courser@colum:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x11
   795  0000DB                     	ds	1
   796  0000DC                     ??_lcd_4bits_set_courser:
   797  0000DC                     ??___fldiv:
   798  0000DC                     lcd_4bit_initialize@pin_lcd_counter:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x12
   802  0000DC                     	ds	3
   803  0000DF                     lcd_4bit_send_string_data_pos@lcd:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x15
   807  0000DF                     	ds	1
   808  0000E0                     ?___fladd:
   809                           	callstack 0
   810  0000E0                     ___fladd@b:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x16
   814  0000E0                     	ds	1
   815  0000E1                     lcd_4bit_send_string_data_pos@row:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x17
   819  0000E1                     	ds	1
   820  0000E2                     lcd_4bit_send_string_data_pos@colum:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x18
   824  0000E2                     	ds	1
   825  0000E3                     lcd_4bit_send_string_data_pos@str:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x19
   829  0000E3                     	ds	1
   830  0000E4                     ___fladd@a:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x1A
   834  0000E4                     	ds	4
   835  0000E8                     async_config_baud_rate_gen@_eusart_obj:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x1E
   839  0000E8                     	ds	2
   840                           
   841                           	psect	cstackCOMRAM
   842  000001                     __pcstackCOMRAM:
   843                           	callstack 0
   844  000001                     ??_calc_parity_even:
   845  000001                     ??_calc_parity_odd:
   846  000001                     i2GPIO_Pin_Write_Logic@_pin_config:
   847                           	callstack 0
   848  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x0
   852  000001                     	ds	2
   853  000003                     ??i2_GPIO_Pin_Toggle_Logic:
   854  000003                     calc_parity_odd@data:
   855                           	callstack 0
   856  000003                     calc_parity_even@data:
   857                           	callstack 0
   858  000003                     i2GPIO_Pin_Write_Logic@logic:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x2
   862  000003                     	ds	1
   863  000004                     ??i2_GPIO_Pin_Write_Logic:
   864  000004                     calc_parity_odd@number_of_ones:
   865                           	callstack 0
   866  000004                     calc_parity_even@number_of_ones:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x3
   870  000004                     	ds	1
   871  000005                     calc_parity_odd@l_counter:
   872                           	callstack 0
   873  000005                     calc_parity_even@l_counter:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x4
   877  000005                     	ds	1
   878  000006                     EUSART_Async_Transmit_Data@_eusart_obj:
   879                           	callstack 0
   880  000006                     EUSART_Async_Read_Data@_eusart_obj:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x5
   884  000006                     	ds	2
   885  000008                     EUSART_Async_Transmit_Data@data:
   886                           	callstack 0
   887  000008                     EUSART_Async_Read_Data@data:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x7
   891  000008                     	ds	2
   892  00000A                     ??_EUSART_Async_Transmit_Data:
   893  00000A                     ??_EUSART_Async_Read_Data:
   894  00000A                     i2GPIO_Pin_Write_Logic@ERRORSTATUS:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x9
   898  00000A                     	ds	1
   899  00000B                     ECU_DC_Motor_Stop@dc_motor:
   900                           	callstack 0
   901  00000B                     i2lcd_4bits_send_enable_signal@lcd:
   902                           	callstack 0
   903  00000B                     i2lcd_send_4bits@lcd:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0xA
   907  00000B                     	ds	2
   908  00000D                     i2lcd_send_4bits@data_command:
   909                           	callstack 0
   910  00000D                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
   911                           	callstack 0
   912  00000D                     _EUSART_Async_Read_Data$1599:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0xC
   916  00000D                     	ds	1
   917  00000E                     ??_TMR0_ISR:
   918  00000E                     
   919                           ; 1 bytes @ 0xD
   920  00000E                     	ds	1
   921  00000F                     Bluetooth_Send_Data_Non_Blocking@data:
   922                           	callstack 0
   923  00000F                     _EUSART_Async_Read_Data$1600:
   924                           	callstack 0
   925  00000F                     i2lcd_4bit_send_command@lcd:
   926                           	callstack 0
   927  00000F                     i2lcd_4bit_send_char_data@lcd:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xE
   931  00000F                     	ds	1
   932  000010                     
   933                           ; 1 bytes @ 0xF
   934  000010                     	ds	1
   935  000011                     i2lcd_4bit_send_command@command:
   936                           	callstack 0
   937  000011                     i2lcd_4bit_send_char_data@data:
   938                           	callstack 0
   939  000011                     _EUSART_Async_Read_Data$1601:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x10
   943  000011                     	ds	1
   944  000012                     
   945                           ; 1 bytes @ 0x11
   946  000012                     	ds	1
   947  000013                     EUSART_Async_Read_Data@l_temp_data:
   948                           	callstack 0
   949  000013                     i2lcd_4bits_set_courser@lcd:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x12
   953  000013                     	ds	2
   954  000015                     i2lcd_4bits_set_courser@row:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x14
   958  000015                     	ds	1
   959  000016                     i2lcd_4bits_set_courser@colum:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x15
   963  000016                     	ds	1
   964  000017                     ??i2_lcd_4bits_set_courser:
   965                           
   966                           ; 1 bytes @ 0x16
   967  000017                     	ds	3
   968  00001A                     lcd_4bit_send_char_data_pos@lcd:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x19
   972  00001A                     	ds	2
   973  00001C                     lcd_4bit_send_char_data_pos@row:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x1B
   977  00001C                     	ds	1
   978  00001D                     lcd_4bit_send_char_data_pos@colum:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x1C
   982  00001D                     	ds	1
   983  00001E                     lcd_4bit_send_char_data_pos@data:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x1D
   987  00001E                     	ds	1
   988  00001F                     
   989                           ; 1 bytes @ 0x1E
   990  00001F                     	ds	1
   991  000020                     ??_InterruptManagerHigh:
   992                           
   993                           ; 1 bytes @ 0x1F
   994  000020                     	ds	6
   995  000026                     RB4_ISR@Handler_Select:
   996                           	callstack 0
   997  000026                     RB5_ISR@Handler_Select:
   998                           	callstack 0
   999  000026                     RB6_ISR@Handler_Select:
  1000                           	callstack 0
  1001  000026                     RB7_ISR@Handler_Select:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x25
  1005  000026                     	ds	1
  1006  000027                     ??_InterruptManagerLow:
  1007                           
  1008                           ; 1 bytes @ 0x26
  1009  000027                     	ds	3
  1010  00002A                     ?___fltol:
  1011                           	callstack 0
  1012  00002A                     ?___xxtofl:
  1013                           	callstack 0
  1014  00002A                     async_Tx_config@_tx_obj:
  1015                           	callstack 0
  1016  00002A                     Rx_config_interrupt@_rx_obj:
  1017                           	callstack 0
  1018  00002A                     GPIO_Pin_Direction_Initialize@_pin_config:
  1019                           	callstack 0
  1020  00002A                     GPIO_Pin_Write_Logic@_pin_config:
  1021                           	callstack 0
  1022  00002A                     GPIO_Pin_Toggle_Logic@_pin_config:
  1023                           	callstack 0
  1024  00002A                     ___fltol@f1:
  1025                           	callstack 0
  1026  00002A                     ___xxtofl@val:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x29
  1030  00002A                     	ds	2
  1031  00002C                     async_Tx_config@ret_val:
  1032                           	callstack 0
  1033  00002C                     Rx_config_interrupt@ret_val:
  1034                           	callstack 0
  1035  00002C                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
  1036                           	callstack 0
  1037  00002C                     GPIO_Pin_Write_Logic@logic:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x2B
  1041  00002C                     	ds	1
  1042  00002D                     async_Rx_config@ret_val:
  1043                           	callstack 0
  1044  00002D                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x2C
  1048  00002D                     	ds	1
  1049  00002E                     
  1050                           ; 1 bytes @ 0x2D
  1051 ;;
  1052 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1053 ;;
  1054 ;; *************** function _main *****************
  1055 ;; Defined at:
  1056 ;;		line 95 in file "application.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2  1551[None  ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        2 bytes
  1075 ;; Hardware stack levels required when called:   15
  1076 ;; This function calls:
  1077 ;;		_GPIO_Pin_Toggle_Logic
  1078 ;;		_GPIO_Pin_Write_Logic
  1079 ;;		_application_intialize
  1080 ;;		_lcd_4bit_send_string_data_pos
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text0
  1087  002BCE                     __ptext0:
  1088                           	callstack 0
  1089  002BCE                     _main:
  1090                           	callstack 16
  1091  002BCE                     
  1092                           ;application.c: 98:     application_intialize();
  1093  002BCE  EC63  F019         	call	_application_intialize	;wreg free
  1094  002BD2                     
  1095                           ;application.c: 99:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-> ");
  1096  002BD2  0EBE               	movlw	low _lcd1
  1097  002BD4  0100               	movlb	0	; () banked
  1098  002BD6  6FDF               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1099  002BD8  0E00               	movlw	high _lcd1
  1100  002BDA  6FE0               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1101  002BDC  0E02               	movlw	2
  1102  002BDE  6FE1               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1103  002BE0  0E01               	movlw	1
  1104  002BE2  6FE2               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1105  002BE4  0E4F               	movlw	low STR_9
  1106  002BE6  6FE3               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1107  002BE8  0E10               	movlw	high STR_9
  1108  002BEA  6FE4               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1109  002BEC  EC90  F015         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1110  002BF0  0004               	clrwdt		;# 
  1111  002BF2                     
  1112                           ;application.c: 101:     GPIO_Pin_Write_Logic(&pind1,GPIO_HIGH);
  1113  002BF2  0E54               	movlw	low _pind1
  1114  002BF4  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1115  002BF6  0E00               	movlw	high _pind1
  1116  002BF8  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1117  002BFA  0E01               	movlw	1
  1118  002BFC  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1119  002BFE  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  1120  002C02                     
  1121                           ;application.c: 102:     _delay((unsigned long)((1000)*(24000000/4000.0)));
  1122  002C02  0E1F               	movlw	31
  1123  002C04  0101               	movlb	1	; () banked
  1124  002C06  6F24               	movwf	(??_main+1)& (0+255),b
  1125  002C08  0E71               	movlw	113
  1126  002C0A  6F23               	movwf	??_main& (0+255),b
  1127  002C0C  0E1E               	movlw	30
  1128  002C0E                     u10807:
  1129  002C0E  2EE8               	decfsz	wreg,f,c
  1130  002C10  D7FE               	bra	u10807
  1131  002C12  2F23               	decfsz	??_main& (0+255),f,b
  1132  002C14  D7FC               	bra	u10807
  1133  002C16  2F24               	decfsz	(??_main+1)& (0+255),f,b
  1134  002C18  D7FA               	bra	u10807
  1135  002C1A  F000               	nop	
  1136  002C1C  0004               	clrwdt		;# 
  1137  002C1E                     
  1138                           ;application.c: 104:     GPIO_Pin_Write_Logic(&pind1,GPIO_LOW);
  1139  002C1E  0E54               	movlw	low _pind1
  1140  002C20  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1141  002C22  0E00               	movlw	high _pind1
  1142  002C24  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1143  002C26  0E00               	movlw	0
  1144  002C28  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1145  002C2A  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  1146  002C2E                     
  1147                           ;application.c: 105:     _delay((unsigned long)((1000)*(24000000/4000.0)));
  1148  002C2E  0E1F               	movlw	31
  1149  002C30  0101               	movlb	1	; () banked
  1150  002C32  6F24               	movwf	(??_main+1)& (0+255),b
  1151  002C34  0E71               	movlw	113
  1152  002C36  6F23               	movwf	??_main& (0+255),b
  1153  002C38  0E1E               	movlw	30
  1154  002C3A                     u10817:
  1155  002C3A  2EE8               	decfsz	wreg,f,c
  1156  002C3C  D7FE               	bra	u10817
  1157  002C3E  2F23               	decfsz	??_main& (0+255),f,b
  1158  002C40  D7FC               	bra	u10817
  1159  002C42  2F24               	decfsz	(??_main+1)& (0+255),f,b
  1160  002C44  D7FA               	bra	u10817
  1161  002C46  F000               	nop	
  1162  002C48  0004               	clrwdt		;# 
  1163  002C4A                     l10028:
  1164                           
  1165                           ;application.c: 109:     {;application.c: 110:        GPIO_Pin_Toggle_Logic(&pind2);
  1166  002C4A  0E55               	movlw	low _pind2
  1167  002C4C  6E2A               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1168  002C4E  0E00               	movlw	high _pind2
  1169  002C50  6E2B               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1170  002C52  EC54  F017         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1171  002C56                     
  1172                           ;application.c: 111:         _delay((unsigned long)((1000)*(24000000/4000.0)));
  1173  002C56  0E1F               	movlw	31
  1174  002C58  0101               	movlb	1	; () banked
  1175  002C5A  6F24               	movwf	(??_main+1)& (0+255),b
  1176  002C5C  0E71               	movlw	113
  1177  002C5E  6F23               	movwf	??_main& (0+255),b
  1178  002C60  0E1E               	movlw	30
  1179  002C62                     u10827:
  1180  002C62  2EE8               	decfsz	wreg,f,c
  1181  002C64  D7FE               	bra	u10827
  1182  002C66  2F23               	decfsz	??_main& (0+255),f,b
  1183  002C68  D7FC               	bra	u10827
  1184  002C6A  2F24               	decfsz	(??_main+1)& (0+255),f,b
  1185  002C6C  D7FA               	bra	u10827
  1186  002C6E  F000               	nop	
  1187  002C70  0004               	clrwdt		;# 
  1188  002C72  EF25  F016         	goto	l10028
  1189  002C76  EF43  F001         	goto	start
  1190  002C7A                     __end_of_main:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _lcd_4bit_send_string_data_pos *****************
  1194 ;; Defined at:
  1195 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  lcd             2   21[BANK0 ] PTR const struct .
  1198 ;;		 -> lcd1(6), 
  1199 ;;  row             1   23[BANK0 ] unsigned char 
  1200 ;;  colum           1   24[BANK0 ] unsigned char 
  1201 ;;  str             2   25[BANK0 ] PTR unsigned char 
  1202 ;;		 -> STR_11(15), STR_10(15), longtude(13), latitude(13), 
  1203 ;;		 -> STR_9(4), 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  ERRORSTATUS     1    0        unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      unsigned char 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1215 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;Total ram usage:        7 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:   14
  1222 ;; This function calls:
  1223 ;;		_lcd_4bit_send_char_data
  1224 ;;		_lcd_4bits_set_courser
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;;		_GPS_Service
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text1
  1232  002B20                     __ptext1:
  1233                           	callstack 0
  1234  002B20                     _lcd_4bit_send_string_data_pos:
  1235                           	callstack 16
  1236  002B20                     
  1237                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
  1238  002B20  0100               	movlb	0	; () banked
  1239  002B22  51DF               	movf	lcd_4bit_send_string_data_pos@lcd& (0+255),w,b
  1240  002B24  11E0               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),w,b
  1241  002B26  B4D8               	btfsc	status,2,c
  1242  002B28  EF98  F015         	goto	u10021
  1243  002B2C  EF9A  F015         	goto	u10020
  1244  002B30                     u10021:
  1245  002B30  EFA3  F015         	goto	l9366
  1246  002B34                     u10020:
  1247  002B34                     
  1248                           ; BSR set to: 0
  1249  002B34  51E3               	movf	lcd_4bit_send_string_data_pos@str& (0+255),w,b
  1250  002B36  11E4               	iorwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),w,b
  1251  002B38  A4D8               	btfss	status,2,c
  1252  002B3A  EFA1  F015         	goto	u10031
  1253  002B3E  EFA3  F015         	goto	u10030
  1254  002B42                     u10031:
  1255  002B42  EFA5  F015         	goto	l9368
  1256  002B46                     u10030:
  1257  002B46                     l9366:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
  1261  002B46  EFE6  F015         	goto	l136
  1262  002B4A                     l9368:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
  1266  002B4A  C0DF  F0D8         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
  1267  002B4E  C0E0  F0D9         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  1268  002B52  C0E1  F0DA         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
  1269  002B56  C0E2  F0DB         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
  1270  002B5A  EC86  F014         	call	_lcd_4bits_set_courser	;wreg free
  1271                           
  1272                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  1273  002B5E  EFCD  F015         	goto	l9374
  1274  002B62                     l9370:
  1275                           
  1276                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
  1277  002B62  C0DF  F0D4         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1278  002B66  C0E0  F0D5         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1279  002B6A  C0E3  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  1280  002B6E  C0E4  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  1281  002B72  0E00               	movlw	low (__smallconst shr (0+16))
  1282  002B74  6EF8               	movwf	tblptru,c
  1283  002B76  0E0F               	movlw	(high __ramtop+-1)
  1284  002B78  64F7               	cpfsgt	tblptrh,c
  1285  002B7A  D003               	bra	u10047
  1286  002B7C  0008               	tblrd		*
  1287  002B7E  50F5               	movf	tablat,w,c
  1288  002B80  D005               	bra	u10040
  1289  002B82                     u10047:
  1290  002B82  CFF6 FFE9          	movff	tblptrl,fsr0l
  1291  002B86  CFF7 FFEA          	movff	tblptrh,fsr0h
  1292  002B8A  50EF               	movf	indf0,w,c
  1293  002B8C                     u10040:
  1294  002B8C  0100               	movlb	0	; () banked
  1295  002B8E  6FD6               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  1296  002B90  EC9D  F018         	call	_lcd_4bit_send_char_data	;wreg free
  1297  002B94  0100               	movlb	0	; () banked
  1298  002B96  4BE3               	infsnz	lcd_4bit_send_string_data_pos@str& (0+255),f,b
  1299  002B98  2BE4               	incf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),f,b
  1300  002B9A                     l9374:
  1301                           
  1302                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  1303  002B9A  C0E3  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  1304  002B9E  C0E4  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  1305  002BA2  0E00               	movlw	low (__smallconst shr (0+16))
  1306  002BA4  6EF8               	movwf	tblptru,c
  1307  002BA6  0E0F               	movlw	(high __ramtop+-1)
  1308  002BA8  64F7               	cpfsgt	tblptrh,c
  1309  002BAA  D003               	bra	u10057
  1310  002BAC  0008               	tblrd		*
  1311  002BAE  50F5               	movf	tablat,w,c
  1312  002BB0  D005               	bra	u10050
  1313  002BB2                     u10057:
  1314  002BB2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1315  002BB6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1316  002BBA  50EF               	movf	indf0,w,c
  1317  002BBC                     u10050:
  1318  002BBC  0900               	iorlw	0
  1319  002BBE  A4D8               	btfss	status,2,c
  1320  002BC0  EFE4  F015         	goto	u10061
  1321  002BC4  EFE6  F015         	goto	u10060
  1322  002BC8                     u10061:
  1323  002BC8  EFB1  F015         	goto	l9370
  1324  002BCC                     u10060:
  1325  002BCC                     l136:
  1326  002BCC  0012               	return		;funcret
  1327  002BCE                     __end_of_lcd_4bit_send_string_data_pos:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _lcd_4bits_set_courser *****************
  1331 ;; Defined at:
  1332 ;;		line 567 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1335 ;;		 -> lcd1(6), 
  1336 ;;  row             1   16[BANK0 ] unsigned char 
  1337 ;;  colum           1   17[BANK0 ] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  ERRORSTATUS     1    0        unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      unsigned char 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;Total ram usage:        7 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:   13
  1356 ;; This function calls:
  1357 ;;		_lcd_4bit_send_command
  1358 ;; This function is called by:
  1359 ;;		_lcd_4bit_send_string_data_pos
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text2
  1364  00290C                     __ptext2:
  1365                           	callstack 0
  1366  00290C                     _lcd_4bits_set_courser:
  1367                           	callstack 16
  1368  00290C                     
  1369                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 570:         if ( ((void*)0)==lcd)
  1370  00290C  0100               	movlb	0	; () banked
  1371  00290E  51D8               	movf	lcd_4bits_set_courser@lcd& (0+255),w,b
  1372  002910  11D9               	iorwf	(lcd_4bits_set_courser@lcd+1)& (0+255),w,b
  1373  002912  A4D8               	btfss	status,2,c
  1374  002914  EF8E  F014         	goto	u9901
  1375  002918  EF90  F014         	goto	u9900
  1376  00291C                     u9901:
  1377  00291C  EF92  F014         	goto	l9258
  1378  002920                     u9900:
  1379  002920                     
  1380                           ; BSR set to: 0
  1381                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 573:     }
  1382  002920  EFDE  F014         	goto	l252
  1383  002924                     l9258:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 575:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 57
      +                          6:             colum--;
  1387  002924  07DB               	decf	lcd_4bits_set_courser@colum& (0+255),f,b
  1388                           
  1389                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 577:             switch (row)
  1390  002926  EFC1  F014         	goto	l9270
  1391  00292A                     l9260:
  1392                           
  1393                           ; BSR set to: 0
  1394  00292A  C0D8  F0D4         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1395  00292E  C0D9  F0D5         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1396  002932  51DB               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1397  002934  0F80               	addlw	128
  1398  002936  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1399  002938  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1400  00293C  EFDE  F014         	goto	l252
  1401  002940                     l9262:
  1402                           
  1403                           ; BSR set to: 0
  1404  002940  C0D8  F0D4         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1405  002944  C0D9  F0D5         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1406  002948  51DB               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1407  00294A  0FC0               	addlw	192
  1408  00294C  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1409  00294E  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1410  002952  EFDE  F014         	goto	l252
  1411  002956                     l9264:
  1412                           
  1413                           ; BSR set to: 0
  1414  002956  C0D8  F0D4         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1415  00295A  C0D9  F0D5         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1416  00295E  51DB               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1417  002960  0F94               	addlw	148
  1418  002962  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1419  002964  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1420  002968  EFDE  F014         	goto	l252
  1421  00296C                     l9266:
  1422                           
  1423                           ; BSR set to: 0
  1424  00296C  C0D8  F0D4         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1425  002970  C0D9  F0D5         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1426  002974  51DB               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  1427  002976  0FD4               	addlw	212
  1428  002978  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1429  00297A  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1430  00297E  EFDE  F014         	goto	l252
  1431  002982                     l9270:
  1432                           
  1433                           ; BSR set to: 0
  1434  002982  51DA               	movf	lcd_4bits_set_courser@row& (0+255),w,b
  1435  002984  6FDC               	movwf	??_lcd_4bits_set_courser& (0+255),b
  1436  002986  6BDD               	clrf	(??_lcd_4bits_set_courser+1)& (0+255),b
  1437                           
  1438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1439                           ; Switch size 1, requested type "simple"
  1440                           ; Number of cases is 1, Range of values is 0 to 0
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; simple_byte            4     3 (average)
  1444                           ;	Chosen strategy is simple_byte
  1445  002988  51DD               	movf	(??_lcd_4bits_set_courser+1)& (0+255),w,b
  1446  00298A  0A00               	xorlw	0	; case 0
  1447  00298C  B4D8               	btfsc	status,2,c
  1448  00298E  EFCB  F014         	goto	l10214
  1449  002992  EFDE  F014         	goto	l252
  1450  002996                     l10214:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ; Switch size 1, requested type "simple"
  1454                           ; Number of cases is 4, Range of values is 1 to 4
  1455                           ; switch strategies available:
  1456                           ; Name         Instructions Cycles
  1457                           ; simple_byte           13     7 (average)
  1458                           ;	Chosen strategy is simple_byte
  1459  002996  51DC               	movf	??_lcd_4bits_set_courser& (0+255),w,b
  1460  002998  0A01               	xorlw	1	; case 1
  1461  00299A  B4D8               	btfsc	status,2,c
  1462  00299C  EF95  F014         	goto	l9260
  1463  0029A0  0A03               	xorlw	3	; case 2
  1464  0029A2  B4D8               	btfsc	status,2,c
  1465  0029A4  EFA0  F014         	goto	l9262
  1466  0029A8  0A01               	xorlw	1	; case 3
  1467  0029AA  B4D8               	btfsc	status,2,c
  1468  0029AC  EFAB  F014         	goto	l9264
  1469  0029B0  0A07               	xorlw	7	; case 4
  1470  0029B2  B4D8               	btfsc	status,2,c
  1471  0029B4  EFB6  F014         	goto	l9266
  1472  0029B8  EFDE  F014         	goto	l252
  1473  0029BC                     l252:
  1474  0029BC  0012               	return		;funcret
  1475  0029BE                     __end_of_lcd_4bits_set_courser:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _lcd_4bit_send_char_data *****************
  1479 ;; Defined at:
  1480 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  lcd             2   10[BANK0 ] PTR const struct .
  1483 ;;		 -> lcd1(6), 
  1484 ;;  data            1   12[BANK0 ] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  ERRORSTATUS     1    0        unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      unsigned char 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:        4 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:   12
  1503 ;; This function calls:
  1504 ;;		_GPIO_Pin_Write_Logic
  1505 ;;		_lcd_4bits_send_enable_signal
  1506 ;;		_lcd_send_4bits
  1507 ;; This function is called by:
  1508 ;;		_lcd_4bit_send_string_data_pos
  1509 ;;		_lcd_4bit_send_string_data
  1510 ;;		_lcd_4bit_send_custom_char
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text3
  1515  00313A                     __ptext3:
  1516                           	callstack 0
  1517  00313A                     _lcd_4bit_send_char_data:
  1518                           	callstack 17
  1519  00313A                     
  1520                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  1521  00313A  0100               	movlb	0	; () banked
  1522  00313C  51D4               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  1523  00313E  11D5               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  1524  003140  A4D8               	btfss	status,2,c
  1525  003142  EFA5  F018         	goto	u9891
  1526  003146  EFA7  F018         	goto	u9890
  1527  00314A                     u9891:
  1528  00314A  EFA9  F018         	goto	l9248
  1529  00314E                     u9890:
  1530  00314E                     
  1531                           ; BSR set to: 0
  1532                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  1533  00314E  EFCF  F018         	goto	l111
  1534  003152                     l9248:
  1535                           
  1536                           ; BSR set to: 0
  1537  003152  C0D4  F02A         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  1538  003156  C0D5  F02B         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1539  00315A  0E01               	movlw	1
  1540  00315C  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1541  00315E  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  1542                           
  1543                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  1544  003162  C0D4  F0D0         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1545  003166  C0D5  F0D1         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1546  00316A  0100               	movlb	0	; () banked
  1547  00316C  39D6               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  1548  00316E  0B0F               	andlw	15
  1549  003170  6FD2               	movwf	lcd_send_4bits@data_command& (0+255),b
  1550  003172  ECD6  F016         	call	_lcd_send_4bits	;wreg free
  1551                           
  1552                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  1553  003176  C0D4  F0D0         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1554  00317A  C0D5  F0D1         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1555  00317E  ECD8  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  1556                           
  1557                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  1558  003182  C0D4  F0D0         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1559  003186  C0D5  F0D1         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1560  00318A  C0D6  F0D2         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1561  00318E  ECD6  F016         	call	_lcd_send_4bits	;wreg free
  1562                           
  1563                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  1564  003192  C0D4  F0D0         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1565  003196  C0D5  F0D1         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1566  00319A  ECD8  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  1567  00319E                     l111:
  1568  00319E  0012               	return		;funcret
  1569  0031A0                     __end_of_lcd_4bit_send_char_data:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _application_intialize *****************
  1573 ;; Defined at:
  1574 ;;		line 195 in file "application.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:   14
  1595 ;; This function calls:
  1596 ;;		_EUSART_Async_Init
  1597 ;;		_GPIO_Pin_Initialize
  1598 ;;		_WDT_Init
  1599 ;;		_lcd_4bit_initialize
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text4
  1606  0032C6                     __ptext4:
  1607                           	callstack 0
  1608  0032C6                     _application_intialize:
  1609                           	callstack 16
  1610  0032C6                     
  1611                           ;application.c: 197:     GPIO_Pin_Initialize(&pind1);
  1612  0032C6  0E54               	movlw	low _pind1
  1613  0032C8  0100               	movlb	0	; () banked
  1614  0032CA  6FD0               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1615  0032CC  0E00               	movlw	high _pind1
  1616  0032CE  6FD1               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1617  0032D0  EC8B  F019         	call	_GPIO_Pin_Initialize	;wreg free
  1618                           
  1619                           ;application.c: 198:     GPIO_Pin_Initialize(&pind2);
  1620  0032D4  0E55               	movlw	low _pind2
  1621  0032D6  0100               	movlb	0	; () banked
  1622  0032D8  6FD0               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1623  0032DA  0E00               	movlw	high _pind2
  1624  0032DC  6FD1               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1625  0032DE  EC8B  F019         	call	_GPIO_Pin_Initialize	;wreg free
  1626                           
  1627                           ;application.c: 199:     GPIO_Pin_Initialize(&selector);
  1628  0032E2  0E53               	movlw	low _selector
  1629  0032E4  0100               	movlb	0	; () banked
  1630  0032E6  6FD0               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1631  0032E8  0E00               	movlw	high _selector
  1632  0032EA  6FD1               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1633  0032EC  EC8B  F019         	call	_GPIO_Pin_Initialize	;wreg free
  1634  0032F0                     
  1635                           ;application.c: 200:     WDT_Init();
  1636  0032F0  EC1F  F01B         	call	_WDT_Init	;wreg free
  1637  0032F4                     
  1638                           ;application.c: 201:     EUSART_Async_Init(&_uart_obj);
  1639  0032F4  0E9E               	movlw	low __uart_obj
  1640  0032F6  0101               	movlb	1	; () banked
  1641  0032F8  6F20               	movwf	EUSART_Async_Init@_eusart_obj& (0+255),b
  1642  0032FA  0E00               	movlw	high __uart_obj
  1643  0032FC  6F21               	movwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),b
  1644  0032FE  ECD0  F018         	call	_EUSART_Async_Init	;wreg free
  1645  003302  0004               	clrwdt		;# 
  1646  003304                     
  1647                           ;application.c: 203:     lcd_4bit_initialize(&lcd1);
  1648  003304  0EBE               	movlw	low _lcd1
  1649  003306  0100               	movlb	0	; () banked
  1650  003308  6FD8               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  1651  00330A  0E00               	movlw	high _lcd1
  1652  00330C  6FD9               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  1653  00330E  EC56  F011         	call	_lcd_4bit_initialize	;wreg free
  1654  003312  0004               	clrwdt		;# 
  1655  003314  0012               	return		;funcret
  1656  003316                     __end_of_application_intialize:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _lcd_4bit_initialize *****************
  1660 ;; Defined at:
  1661 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1664 ;;		 -> lcd1(6), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  pin_lcd_coun    1   18[BANK0 ] unsigned char 
  1667 ;;  ERRORSTATUS     1    0        unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      unsigned char 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;Total ram usage:        6 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:   13
  1684 ;; This function calls:
  1685 ;;		_GPIO_Pin_Initialize
  1686 ;;		_lcd_4bit_send_command
  1687 ;; This function is called by:
  1688 ;;		_application_intialize
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text5
  1693  0022AC                     __ptext5:
  1694                           	callstack 0
  1695  0022AC                     _lcd_4bit_initialize:
  1696                           	callstack 16
  1697  0022AC                     
  1698                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  1699  0022AC  0100               	movlb	0	; () banked
  1700  0022AE  51D8               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  1701  0022B0  11D9               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1702  0022B2  A4D8               	btfss	status,2,c
  1703  0022B4  EF5E  F011         	goto	u9871
  1704  0022B8  EF60  F011         	goto	u9870
  1705  0022BC                     u9871:
  1706  0022BC  EF62  F011         	goto	l9202
  1707  0022C0                     u9870:
  1708  0022C0                     
  1709                           ; BSR set to: 0
  1710                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  1711  0022C0  EFF1  F011         	goto	l101
  1712  0022C4                     l9202:
  1713  0022C4                     
  1714                           ; BSR set to: 0
  1715  0022C4  C0D8  F0D0         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  1716  0022C8  C0D9  F0D1         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  1717  0022CC  EC8B  F019         	call	_GPIO_Pin_Initialize	;wreg free
  1718  0022D0  0E01               	movlw	1
  1719  0022D2  0100               	movlb	0	; () banked
  1720  0022D4  25D8               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1721  0022D6  6FD0               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1722  0022D8  0E00               	movlw	0
  1723  0022DA  21D9               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1724  0022DC  6FD1               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1725  0022DE  EC8B  F019         	call	_GPIO_Pin_Initialize	;wreg free
  1726                           
  1727                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  1728  0022E2  0E00               	movlw	0
  1729  0022E4  0100               	movlb	0	; () banked
  1730  0022E6  6FDC               	movwf	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  1731  0022E8                     l9212:
  1732                           
  1733                           ; BSR set to: 0
  1734  0022E8  51DC               	movf	lcd_4bit_initialize@pin_lcd_counter& (0+255),w,b
  1735  0022EA  25D8               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1736  0022EC  6FDA               	movwf	??_lcd_4bit_initialize& (0+255),b
  1737  0022EE  0E00               	movlw	0
  1738  0022F0  21D9               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1739  0022F2  6FDB               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  1740  0022F4  0E02               	movlw	2
  1741  0022F6  25DA               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  1742  0022F8  6FD0               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1743  0022FA  0E00               	movlw	0
  1744  0022FC  21DB               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  1745  0022FE  6FD1               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1746  002300  EC8B  F019         	call	_GPIO_Pin_Initialize	;wreg free
  1747  002304                     
  1748                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  1749  002304  0100               	movlb	0	; () banked
  1750  002306  2BDC               	incf	lcd_4bit_initialize@pin_lcd_counter& (0+255),f,b
  1751  002308                     
  1752                           ; BSR set to: 0
  1753  002308  0E03               	movlw	3
  1754  00230A  65DC               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  1755  00230C  EF8A  F011         	goto	u9881
  1756  002310  EF8C  F011         	goto	u9880
  1757  002314                     u9881:
  1758  002314  EF74  F011         	goto	l9212
  1759  002318                     u9880:
  1760  002318                     
  1761                           ; BSR set to: 0
  1762                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(24000000/
      +                          4000.0)));
  1763  002318  0E9C               	movlw	156
  1764  00231A  0100               	movlb	0	; () banked
  1765  00231C  6FDA               	movwf	??_lcd_4bit_initialize& (0+255),b
  1766  00231E  0ED7               	movlw	215
  1767  002320                     u10837:
  1768  002320  2EE8               	decfsz	wreg,f,c
  1769  002322  D7FE               	bra	u10837
  1770  002324  2FDA               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  1771  002326  D7FC               	bra	u10837
  1772  002328  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1773  00232C  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1774  002330  0E38               	movlw	56
  1775  002332  0100               	movlb	0	; () banked
  1776  002334  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1777  002336  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1778  00233A                     
  1779                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(24000000/4
      +                          000.0)));
  1780  00233A  0E27               	movlw	39
  1781  00233C  0100               	movlb	0	; () banked
  1782  00233E  6FDA               	movwf	??_lcd_4bit_initialize& (0+255),b
  1783  002340  0EF5               	movlw	245
  1784  002342                     u10847:
  1785  002342  2EE8               	decfsz	wreg,f,c
  1786  002344  D7FE               	bra	u10847
  1787  002346  2FDA               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  1788  002348  D7FC               	bra	u10847
  1789  00234A  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1790  00234E  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1791  002352  0E38               	movlw	56
  1792  002354  0100               	movlb	0	; () banked
  1793  002356  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1794  002358  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1795  00235C                     
  1796                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(24000000
      +                          /4000000.0)));
  1797  00235C  0EB4               	movlw	180
  1798  00235E                     u10857:
  1799  00235E  D000               	nop2	
  1800  002360  2EE8               	decfsz	wreg,f,c
  1801  002362  D7FD               	bra	u10857
  1802  002364  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1803  002368  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1804  00236C  0E38               	movlw	56
  1805  00236E  0100               	movlb	0	; () banked
  1806  002370  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1807  002372  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1808  002376  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1809  00237A  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1810  00237E  0E01               	movlw	1
  1811  002380  0100               	movlb	0	; () banked
  1812  002382  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1813  002384  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1814  002388  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1815  00238C  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1816  002390  0E02               	movlw	2
  1817  002392  0100               	movlb	0	; () banked
  1818  002394  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1819  002396  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1820  00239A  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1821  00239E  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1822  0023A2  0E06               	movlw	6
  1823  0023A4  0100               	movlb	0	; () banked
  1824  0023A6  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1825  0023A8  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1826  0023AC  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1827  0023B0  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1828  0023B4  0E0D               	movlw	13
  1829  0023B6  0100               	movlb	0	; () banked
  1830  0023B8  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1831  0023BA  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1832  0023BE  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1833  0023C2  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1834  0023C6  0E28               	movlw	40
  1835  0023C8  0100               	movlb	0	; () banked
  1836  0023CA  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1837  0023CC  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1838  0023D0  C0D8  F0D4         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1839  0023D4  C0D9  F0D5         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1840  0023D8  0E80               	movlw	128
  1841  0023DA  0100               	movlb	0	; () banked
  1842  0023DC  6FD6               	movwf	lcd_4bit_send_command@command& (0+255),b
  1843  0023DE  EC8E  F017         	call	_lcd_4bit_send_command	;wreg free
  1844  0023E2                     l101:
  1845  0023E2  0012               	return		;funcret
  1846  0023E4                     __end_of_lcd_4bit_initialize:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _lcd_4bit_send_command *****************
  1850 ;; Defined at:
  1851 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  lcd             2   10[BANK0 ] PTR const struct .
  1854 ;;		 -> lcd1(6), 
  1855 ;;  command         1   12[BANK0 ] unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  ERRORSTATUS     1   13[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      unsigned char 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:        4 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:   12
  1874 ;; This function calls:
  1875 ;;		_GPIO_Pin_Write_Logic
  1876 ;;		_lcd_4bits_send_enable_signal
  1877 ;;		_lcd_send_4bits
  1878 ;; This function is called by:
  1879 ;;		_lcd_4bit_initialize
  1880 ;;		_lcd_4bits_set_courser
  1881 ;;		_lcd_4bit_send_custom_char
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text6
  1886  002F1C                     __ptext6:
  1887                           	callstack 0
  1888  002F1C                     _lcd_4bit_send_command:
  1889                           	callstack 16
  1890  002F1C                     
  1891                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  1892  002F1C  0100               	movlb	0	; () banked
  1893  002F1E  51D4               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  1894  002F20  11D5               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  1895  002F22  A4D8               	btfss	status,2,c
  1896  002F24  EF96  F017         	goto	u9741
  1897  002F28  EF98  F017         	goto	u9740
  1898  002F2C                     u9741:
  1899  002F2C  EF9C  F017         	goto	l9076
  1900  002F30                     u9740:
  1901  002F30                     
  1902                           ; BSR set to: 0
  1903                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
  1904  002F30  0E00               	movlw	0
  1905  002F32  6FD7               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
  1906                           
  1907                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  1908  002F34  EFC3  F017         	goto	l9078
  1909  002F38                     l9076:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
  1913  002F38  C0D4  F02A         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
  1914  002F3C  C0D5  F02B         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1915  002F40  0E00               	movlw	0
  1916  002F42  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1917  002F44  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  1918  002F48  0100               	movlb	0	; () banked
  1919  002F4A  6FD7               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
  1920                           
  1921                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  1922  002F4C  C0D4  F0D0         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1923  002F50  C0D5  F0D1         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1924  002F54  39D6               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  1925  002F56  0B0F               	andlw	15
  1926  002F58  6FD2               	movwf	lcd_send_4bits@data_command& (0+255),b
  1927  002F5A  ECD6  F016         	call	_lcd_send_4bits	;wreg free
  1928                           
  1929                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  1930  002F5E  C0D4  F0D0         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1931  002F62  C0D5  F0D1         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1932  002F66  ECD8  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  1933                           
  1934                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  1935  002F6A  C0D4  F0D0         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1936  002F6E  C0D5  F0D1         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1937  002F72  C0D6  F0D2         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  1938  002F76  ECD6  F016         	call	_lcd_send_4bits	;wreg free
  1939                           
  1940                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  1941  002F7A  C0D4  F0D0         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1942  002F7E  C0D5  F0D1         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1943  002F82  ECD8  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  1944  002F86                     l9078:
  1945                           
  1946                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
  1947  002F86  0100               	movlb	0	; () banked
  1948  002F88  51D7               	movf	lcd_4bit_send_command@ERRORSTATUS& (0+255),w,b
  1949  002F8A                     
  1950                           ; BSR set to: 0
  1951  002F8A  0012               	return		;funcret
  1952  002F8C                     __end_of_lcd_4bit_send_command:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _lcd_send_4bits *****************
  1956 ;; Defined at:
  1957 ;;		line 505 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  lcd             2    6[BANK0 ] PTR const struct .
  1960 ;;		 -> lcd1(6), 
  1961 ;;  data_command    1    8[BANK0 ] unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  ERRORSTATUS     1    0        unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        4 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:   11
  1980 ;; This function calls:
  1981 ;;		_GPIO_Pin_Write_Logic
  1982 ;; This function is called by:
  1983 ;;		_lcd_4bit_send_command
  1984 ;;		_lcd_4bit_send_char_data
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text7
  1989  002DAC                     __ptext7:
  1990                           	callstack 0
  1991  002DAC                     _lcd_send_4bits:
  1992                           	callstack 16
  1993  002DAC                     
  1994                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 508:         if ( ((void*)0)==lcd)
  1995  002DAC  0100               	movlb	0	; () banked
  1996  002DAE  51D0               	movf	lcd_send_4bits@lcd& (0+255),w,b
  1997  002DB0  11D1               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  1998  002DB2  A4D8               	btfss	status,2,c
  1999  002DB4  EFDE  F016         	goto	u8831
  2000  002DB8  EFE0  F016         	goto	u8830
  2001  002DBC                     u8831:
  2002  002DBC  EFE2  F016         	goto	l8560
  2003  002DC0                     u8830:
  2004  002DC0                     
  2005                           ; BSR set to: 0
  2006                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 511:     }
  2007  002DC0  EF16  F017         	goto	l223
  2008  002DC4                     l8560:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 513:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 51
      +                          4:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  2012  002DC4  0E02               	movlw	2
  2013  002DC6  25D0               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2014  002DC8  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2015  002DCA  0E00               	movlw	0
  2016  002DCC  21D1               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2017  002DCE  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2018  002DD0  51D2               	movf	lcd_send_4bits@data_command& (0+255),w,b
  2019  002DD2  0B01               	andlw	1
  2020  002DD4  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2021  002DD6  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2022                           
  2023                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  2024  002DDA  0E03               	movlw	3
  2025  002DDC  0100               	movlb	0	; () banked
  2026  002DDE  25D0               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2027  002DE0  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2028  002DE2  0E00               	movlw	0
  2029  002DE4  21D1               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2030  002DE6  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2031  002DE8  90D8               	bcf	status,0,c
  2032  002DEA  31D2               	rrcf	lcd_send_4bits@data_command& (0+255),w,b
  2033  002DEC  0B01               	andlw	1
  2034  002DEE  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2035  002DF0  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2036                           
  2037                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 516:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  2038  002DF4  0E04               	movlw	4
  2039  002DF6  0100               	movlb	0	; () banked
  2040  002DF8  25D0               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2041  002DFA  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2042  002DFC  0E00               	movlw	0
  2043  002DFE  21D1               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2044  002E00  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2045  002E02  41D2               	rrncf	lcd_send_4bits@data_command& (0+255),w,b
  2046  002E04  42E8               	rrncf	wreg,f,c
  2047  002E06  0B3F               	andlw	63
  2048  002E08  0B01               	andlw	1
  2049  002E0A  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2050  002E0C  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2051                           
  2052                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 517:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  2053  002E10  0E05               	movlw	5
  2054  002E12  0100               	movlb	0	; () banked
  2055  002E14  25D0               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  2056  002E16  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2057  002E18  0E00               	movlw	0
  2058  002E1A  21D1               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  2059  002E1C  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2060  002E1E  39D2               	swapf	lcd_send_4bits@data_command& (0+255),w,b
  2061  002E20  46E8               	rlncf	wreg,f,c
  2062  002E22  0B1F               	andlw	31
  2063  002E24  0B01               	andlw	1
  2064  002E26  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2065  002E28  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2066  002E2C                     l223:
  2067  002E2C  0012               	return		;funcret
  2068  002E2E                     __end_of_lcd_send_4bits:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2072 ;; Defined at:
  2073 ;;		line 488 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  lcd             2    6[BANK0 ] PTR const struct .
  2076 ;;		 -> lcd1(6), 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  ERRORSTATUS     1    0        unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      unsigned char 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        3 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:   11
  2095 ;; This function calls:
  2096 ;;		_GPIO_Pin_Write_Logic
  2097 ;; This function is called by:
  2098 ;;		_lcd_4bit_send_command
  2099 ;;		_lcd_4bit_send_char_data
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text8
  2104  0033B0                     __ptext8:
  2105                           	callstack 0
  2106  0033B0                     _lcd_4bits_send_enable_signal:
  2107                           	callstack 16
  2108  0033B0                     
  2109                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 491:         if ( ((void*)0)==lcd)
  2110  0033B0  0100               	movlb	0	; () banked
  2111  0033B2  51D0               	movf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
  2112  0033B4  11D1               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
  2113  0033B6  A4D8               	btfss	status,2,c
  2114  0033B8  EFE0  F019         	goto	u8841
  2115  0033BC  EFE2  F019         	goto	u8840
  2116  0033C0                     u8841:
  2117  0033C0  EFE4  F019         	goto	l8570
  2118  0033C4                     u8840:
  2119  0033C4                     
  2120                           ; BSR set to: 0
  2121                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 494:     }
  2122  0033C4  EFFC  F019         	goto	l218
  2123  0033C8                     l8570:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 496:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 49
      +                          7:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  2127  0033C8  0E01               	movlw	1
  2128  0033CA  25D0               	addwf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
  2129  0033CC  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2130  0033CE  0E00               	movlw	0
  2131  0033D0  21D1               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
  2132  0033D2  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2133  0033D4  0E01               	movlw	1
  2134  0033D6  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2135  0033D8  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2136  0033DC                     
  2137                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 498:             _delay((unsigned long)((5)*(24000
      +                          000/4000000.0)));
  2138  0033DC  0E0A               	movlw	10
  2139  0033DE                     u10867:
  2140  0033DE  2EE8               	decfsz	wreg,f,c
  2141  0033E0  D7FE               	bra	u10867
  2142  0033E2                     
  2143                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 499:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  2144  0033E2  0E01               	movlw	1
  2145  0033E4  0100               	movlb	0	; () banked
  2146  0033E6  25D0               	addwf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
  2147  0033E8  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2148  0033EA  0E00               	movlw	0
  2149  0033EC  21D1               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
  2150  0033EE  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2151  0033F0  0E00               	movlw	0
  2152  0033F2  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2153  0033F4  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2154  0033F8                     l218:
  2155  0033F8  0012               	return		;funcret
  2156  0033FA                     __end_of_lcd_4bits_send_enable_signal:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _GPIO_Pin_Initialize *****************
  2160 ;; Defined at:
  2161 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  _pin_config     2    6[BANK0 ] PTR const struct .
  2164 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  2165 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  2166 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  2167 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  ERRORSTATUS     1    8[BANK0 ] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      unsigned char 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;Total ram usage:        3 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:   11
  2186 ;; This function calls:
  2187 ;;		_GPIO_Pin_Direction_Initialize
  2188 ;;		_GPIO_Pin_Write_Logic
  2189 ;; This function is called by:
  2190 ;;		_lcd_4bit_initialize
  2191 ;;		_application_intialize
  2192 ;;		_ECU_DC_Motor_Init
  2193 ;;		_lcd_8bit_initialize
  2194 ;;		_CCP_Init
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text9
  2199  003316                     __ptext9:
  2200                           	callstack 0
  2201  003316                     _GPIO_Pin_Initialize:
  2202                           	callstack 17
  2203  003316                     
  2204                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  2205  003316  0100               	movlb	0	; () banked
  2206  003318  51D0               	movf	GPIO_Pin_Initialize@_pin_config& (0+255),w,b
  2207  00331A  11D1               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),w,b
  2208  00331C  A4D8               	btfss	status,2,c
  2209  00331E  EF93  F019         	goto	u9731
  2210  003322  EF95  F019         	goto	u9730
  2211  003326                     u9731:
  2212  003326  EF99  F019         	goto	l9064
  2213  00332A                     u9730:
  2214  00332A                     
  2215                           ; BSR set to: 0
  2216                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  2217  00332A  0E00               	movlw	0
  2218  00332C  6FD2               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2219                           
  2220                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  2221  00332E  EFB1  F019         	goto	l9066
  2222  003332                     l9064:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  2226  003332  C0D0  F02A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  2227  003336  C0D1  F02B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  2228  00333A  ECB3  F010         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  2229  00333E  0100               	movlb	0	; () banked
  2230  003340  6FD2               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2231                           
  2232                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  2233  003342  C0D0  F02A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  2234  003346  C0D1  F02B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  2235  00334A  C0D0  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  2236  00334E  C0D1  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  2237  003352  0E00               	movlw	0
  2238  003354  BEDF               	btfsc	indf2,7,c
  2239  003356  0E01               	movlw	1
  2240  003358  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2241  00335A  ECF2  F011         	call	_GPIO_Pin_Write_Logic	;wreg free
  2242  00335E  0100               	movlb	0	; () banked
  2243  003360  6FD2               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2244  003362                     l9066:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  2248  003362  51D2               	movf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),w,b
  2249  003364                     
  2250                           ; BSR set to: 0
  2251  003364  0012               	return		;funcret
  2252  003366                     __end_of_GPIO_Pin_Initialize:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _GPIO_Pin_Write_Logic *****************
  2256 ;; Defined at:
  2257 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  _pin_config     2   41[COMRAM] PTR const struct .
  2260 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  2261 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  2262 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  2263 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  2264 ;;  logic           1   43[COMRAM] enum E2958
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  ERRORSTATUS     1   44[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      unsigned char 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2276 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;Total ram usage:       10 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:   10
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_lcd_4bit_send_command
  2287 ;;		_lcd_4bit_send_char_data
  2288 ;;		_lcd_4bits_send_enable_signal
  2289 ;;		_lcd_send_4bits
  2290 ;;		_GPIO_Pin_Initialize
  2291 ;;		_main
  2292 ;;		_ECU_DC_Motor_Run_Left
  2293 ;;		_ECU_DC_Motor_Run_Right
  2294 ;;		_lcd_8bit_send_command
  2295 ;;		_lcd_8bit_send_char_data
  2296 ;;		_lcd_8bits_send_enable_signal
  2297 ;;		_GPS_Service
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text10
  2302  0023E4                     __ptext10:
  2303                           	callstack 0
  2304  0023E4                     _GPIO_Pin_Write_Logic:
  2305                           	callstack 16
  2306  0023E4                     
  2307                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  2308  0023E4  0E01               	movlw	1
  2309  0023E6  6E2D               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  2310  0023E8                     
  2311                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  2312  0023E8  502A               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
  2313  0023EA  102B               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  2314  0023EC  B4D8               	btfsc	status,2,c
  2315  0023EE  EFFB  F011         	goto	u8791
  2316  0023F2  EFFD  F011         	goto	u8790
  2317  0023F6                     u8791:
  2318  0023F6  EF0D  F012         	goto	l8536
  2319  0023FA                     u8790:
  2320  0023FA  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2321  0023FE  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2322  002402  50DF               	movf	indf2,w,c
  2323  002404  0B07               	andlw	7
  2324  002406  0100               	movlb	0	; () banked
  2325  002408  6FCA               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  2326  00240A  0E07               	movlw	7
  2327  00240C  65CA               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
  2328  00240E  EF0B  F012         	goto	u8801
  2329  002412  EF0D  F012         	goto	u8800
  2330  002416                     u8801:
  2331  002416  EF72  F012         	goto	l8544
  2332  00241A                     u8800:
  2333  00241A                     l8536:
  2334                           
  2335                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2336  00241A  0E00               	movlw	0
  2337  00241C  6E2D               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  2338                           
  2339                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  2340  00241E  EF87  F012         	goto	l8546
  2341  002422                     l8538:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  2345  002422  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2346  002426  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2347  00242A  50DF               	movf	indf2,w,c
  2348  00242C  0B07               	andlw	7
  2349  00242E  6FCA               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  2350  002430  0E01               	movlw	1
  2351  002432  6FCB               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  2352  002434  2BCA               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
  2353  002436  EF1F  F012         	goto	u8814
  2354  00243A                     u8815:
  2355  00243A  90D8               	bcf	status,0,c
  2356  00243C  37CB               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
  2357  00243E                     u8814:
  2358  00243E  2FCA               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
  2359  002440  EF1D  F012         	goto	u8815
  2360  002444  0100               	movlb	0	; () banked
  2361  002446  51CB               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  2362  002448  0AFF               	xorlw	255
  2363  00244A  6FCC               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
  2364  00244C  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2365  002450  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2366  002454  30DF               	rrcf	indf2,w,c
  2367  002456  32E8               	rrcf	wreg,f,c
  2368  002458  32E8               	rrcf	wreg,f,c
  2369  00245A  0B07               	andlw	7
  2370  00245C  6FCD               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
  2371  00245E  51CD               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
  2372  002460  0D02               	mullw	2
  2373  002462  0E8A               	movlw	low _lat_registers
  2374  002464  24F3               	addwf	243,w,c
  2375  002466  6ED9               	movwf	fsr2l,c
  2376  002468  0E00               	movlw	high _lat_registers
  2377  00246A  20F4               	addwfc	prodh,w,c
  2378  00246C  6EDA               	movwf	fsr2h,c
  2379  00246E  CFDE F0CE          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  2380  002472  CFDD F0CF          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  2381  002476  C0CE  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  2382  00247A  C0CF  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  2383  00247E  51CC               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
  2384  002480  16DF               	andwf	indf2,f,c
  2385                           
  2386                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  2387  002482  EF87  F012         	goto	l8546
  2388  002486                     l8540:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  2392  002486  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2393  00248A  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2394  00248E  50DF               	movf	indf2,w,c
  2395  002490  0B07               	andlw	7
  2396  002492  6FCA               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  2397  002494  0E01               	movlw	1
  2398  002496  6FCB               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  2399  002498  2BCA               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
  2400  00249A  EF51  F012         	goto	u8824
  2401  00249E                     u8825:
  2402  00249E  90D8               	bcf	status,0,c
  2403  0024A0  37CB               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
  2404  0024A2                     u8824:
  2405  0024A2  2FCA               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
  2406  0024A4  EF4F  F012         	goto	u8825
  2407  0024A8  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  2408  0024AC  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  2409  0024B0  30DF               	rrcf	indf2,w,c
  2410  0024B2  32E8               	rrcf	wreg,f,c
  2411  0024B4  32E8               	rrcf	wreg,f,c
  2412  0024B6  0B07               	andlw	7
  2413  0024B8  0100               	movlb	0	; () banked
  2414  0024BA  6FCC               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
  2415  0024BC  51CC               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
  2416  0024BE  0D02               	mullw	2
  2417  0024C0  0E8A               	movlw	low _lat_registers
  2418  0024C2  24F3               	addwf	243,w,c
  2419  0024C4  6ED9               	movwf	fsr2l,c
  2420  0024C6  0E00               	movlw	high _lat_registers
  2421  0024C8  20F4               	addwfc	prodh,w,c
  2422  0024CA  6EDA               	movwf	fsr2h,c
  2423  0024CC  CFDE F0CD          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  2424  0024D0  CFDD F0CE          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  2425  0024D4  C0CD  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  2426  0024D8  C0CE  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  2427  0024DC  51CB               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  2428  0024DE  12DF               	iorwf	indf2,f,c
  2429                           
  2430                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  2431  0024E0  EF87  F012         	goto	l8546
  2432  0024E4                     l8544:
  2433                           
  2434                           ; BSR set to: 0
  2435  0024E4  502C               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  2436  0024E6  6FCA               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  2437  0024E8  6BCB               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  2438                           
  2439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2440                           ; Switch size 1, requested type "simple"
  2441                           ; Number of cases is 1, Range of values is 0 to 0
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte            4     3 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446  0024EA  51CB               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  2447  0024EC  0A00               	xorlw	0	; case 0
  2448  0024EE  B4D8               	btfsc	status,2,c
  2449  0024F0  EF7C  F012         	goto	l10216
  2450  0024F4  EF0D  F012         	goto	l8536
  2451  0024F8                     l10216:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ; Switch size 1, requested type "simple"
  2455                           ; Number of cases is 2, Range of values is 0 to 1
  2456                           ; switch strategies available:
  2457                           ; Name         Instructions Cycles
  2458                           ; simple_byte            7     4 (average)
  2459                           ;	Chosen strategy is simple_byte
  2460  0024F8  51CA               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
  2461  0024FA  0A00               	xorlw	0	; case 0
  2462  0024FC  B4D8               	btfsc	status,2,c
  2463  0024FE  EF11  F012         	goto	l8538
  2464  002502  0A01               	xorlw	1	; case 1
  2465  002504  B4D8               	btfsc	status,2,c
  2466  002506  EF43  F012         	goto	l8540
  2467  00250A  EF0D  F012         	goto	l8536
  2468  00250E                     l8546:
  2469                           
  2470                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  2471  00250E  502D               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  2472  002510  0012               	return		;funcret
  2473  002512                     __end_of_GPIO_Pin_Write_Logic:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  2477 ;; Defined at:
  2478 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  _pin_config     2   41[COMRAM] PTR const struct .
  2481 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  2482 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  2483 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  2484 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  ERRORSTATUS     1   43[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      unsigned char 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        9 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:   10
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_GPIO_Pin_Initialize
  2507 ;;		_interrupt_RBx_pin_init
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text11
  2512  002166                     __ptext11:
  2513                           	callstack 0
  2514  002166                     _GPIO_Pin_Direction_Initialize:
  2515                           	callstack 17
  2516  002166                     
  2517                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  2518  002166  0E01               	movlw	1
  2519  002168  6E2C               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2520  00216A                     
  2521                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  2522  00216A  502A               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  2523  00216C  102B               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  2524  00216E  B4D8               	btfsc	status,2,c
  2525  002170  EFBC  F010         	goto	u8881
  2526  002174  EFBE  F010         	goto	u8880
  2527  002178                     u8881:
  2528  002178  EFCE  F010         	goto	l8610
  2529  00217C                     u8880:
  2530  00217C  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2531  002180  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2532  002184  50DF               	movf	indf2,w,c
  2533  002186  0B07               	andlw	7
  2534  002188  0100               	movlb	0	; () banked
  2535  00218A  6FCA               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2536  00218C  0E07               	movlw	7
  2537  00218E  65CA               	cpfsgt	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2538  002190  EFCC  F010         	goto	u8891
  2539  002194  EFCE  F010         	goto	u8890
  2540  002198                     u8891:
  2541  002198  EF33  F011         	goto	l8618
  2542  00219C                     u8890:
  2543  00219C                     l8610:
  2544                           
  2545                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2546  00219C  0E00               	movlw	0
  2547  00219E  6E2C               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2548                           
  2549                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  2550  0021A0  EF54  F011         	goto	l8620
  2551  0021A4                     l8612:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  2555  0021A4  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2556  0021A8  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2557  0021AC  50DF               	movf	indf2,w,c
  2558  0021AE  0B07               	andlw	7
  2559  0021B0  6FCA               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2560  0021B2  0E01               	movlw	1
  2561  0021B4  6FCB               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  2562  0021B6  2BCA               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2563  0021B8  EFE0  F010         	goto	u8904
  2564  0021BC                     u8905:
  2565  0021BC  90D8               	bcf	status,0,c
  2566  0021BE  37CB               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  2567  0021C0                     u8904:
  2568  0021C0  2FCA               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2569  0021C2  EFDE  F010         	goto	u8905
  2570  0021C6  0100               	movlb	0	; () banked
  2571  0021C8  51CB               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  2572  0021CA  0AFF               	xorlw	255
  2573  0021CC  6FCC               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  2574  0021CE  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2575  0021D2  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2576  0021D6  30DF               	rrcf	indf2,w,c
  2577  0021D8  32E8               	rrcf	wreg,f,c
  2578  0021DA  32E8               	rrcf	wreg,f,c
  2579  0021DC  0B07               	andlw	7
  2580  0021DE  6FCD               	movwf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),b
  2581  0021E0  51CD               	movf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),w,b
  2582  0021E2  0D02               	mullw	2
  2583  0021E4  0E94               	movlw	low _tris_registers
  2584  0021E6  24F3               	addwf	243,w,c
  2585  0021E8  6ED9               	movwf	fsr2l,c
  2586  0021EA  0E00               	movlw	high _tris_registers
  2587  0021EC  20F4               	addwfc	prodh,w,c
  2588  0021EE  6EDA               	movwf	fsr2h,c
  2589  0021F0  CFDE F0CE          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  2590  0021F4  CFDD F0CF          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  2591  0021F8  C0CE  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  2592  0021FC  C0CF  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  2593  002200  51CC               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  2594  002202  16DF               	andwf	indf2,f,c
  2595                           
  2596                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  2597  002204  EF54  F011         	goto	l8620
  2598  002208                     l8614:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  2602  002208  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2603  00220C  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2604  002210  50DF               	movf	indf2,w,c
  2605  002212  0B07               	andlw	7
  2606  002214  6FCA               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2607  002216  0E01               	movlw	1
  2608  002218  6FCB               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  2609  00221A  2BCA               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2610  00221C  EF12  F011         	goto	u8914
  2611  002220                     u8915:
  2612  002220  90D8               	bcf	status,0,c
  2613  002222  37CB               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  2614  002224                     u8914:
  2615  002224  2FCA               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2616  002226  EF10  F011         	goto	u8915
  2617  00222A  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2618  00222E  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2619  002232  30DF               	rrcf	indf2,w,c
  2620  002234  32E8               	rrcf	wreg,f,c
  2621  002236  32E8               	rrcf	wreg,f,c
  2622  002238  0B07               	andlw	7
  2623  00223A  0100               	movlb	0	; () banked
  2624  00223C  6FCC               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  2625  00223E  51CC               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  2626  002240  0D02               	mullw	2
  2627  002242  0E94               	movlw	low _tris_registers
  2628  002244  24F3               	addwf	243,w,c
  2629  002246  6ED9               	movwf	fsr2l,c
  2630  002248  0E00               	movlw	high _tris_registers
  2631  00224A  20F4               	addwfc	prodh,w,c
  2632  00224C  6EDA               	movwf	fsr2h,c
  2633  00224E  CFDE F0CD          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  2634  002252  CFDD F0CE          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  2635  002256  C0CD  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  2636  00225A  C0CE  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  2637  00225E  51CB               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  2638  002260  12DF               	iorwf	indf2,f,c
  2639                           
  2640                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  2641  002262  EF54  F011         	goto	l8620
  2642  002266                     l8618:
  2643                           
  2644                           ; BSR set to: 0
  2645  002266  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2646  00226A  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2647  00226E  BCDF               	btfsc	indf2,6,c
  2648  002270  EF3C  F011         	goto	u8921
  2649  002274  EF3F  F011         	goto	u8920
  2650  002278                     u8921:
  2651  002278  0E01               	movlw	1
  2652  00227A  EF40  F011         	goto	u8930
  2653  00227E                     u8920:
  2654  00227E  0E00               	movlw	0
  2655  002280                     u8930:
  2656  002280  6FCA               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2657  002282  6BCB               	clrf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  2658                           
  2659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2660                           ; Switch size 1, requested type "simple"
  2661                           ; Number of cases is 1, Range of values is 0 to 0
  2662                           ; switch strategies available:
  2663                           ; Name         Instructions Cycles
  2664                           ; simple_byte            4     3 (average)
  2665                           ;	Chosen strategy is simple_byte
  2666  002284  51CB               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  2667  002286  0A00               	xorlw	0	; case 0
  2668  002288  B4D8               	btfsc	status,2,c
  2669  00228A  EF49  F011         	goto	l10218
  2670  00228E  EFCE  F010         	goto	l8610
  2671  002292                     l10218:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ; Switch size 1, requested type "simple"
  2675                           ; Number of cases is 2, Range of values is 0 to 1
  2676                           ; switch strategies available:
  2677                           ; Name         Instructions Cycles
  2678                           ; simple_byte            7     4 (average)
  2679                           ;	Chosen strategy is simple_byte
  2680  002292  51CA               	movf	??_GPIO_Pin_Direction_Initialize& (0+255),w,b
  2681  002294  0A00               	xorlw	0	; case 0
  2682  002296  B4D8               	btfsc	status,2,c
  2683  002298  EFD2  F010         	goto	l8612
  2684  00229C  0A01               	xorlw	1	; case 1
  2685  00229E  B4D8               	btfsc	status,2,c
  2686  0022A0  EF04  F011         	goto	l8614
  2687  0022A4  EFCE  F010         	goto	l8610
  2688  0022A8                     l8620:
  2689                           
  2690                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  2691  0022A8  502C               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  2692  0022AA  0012               	return		;funcret
  2693  0022AC                     __end_of_GPIO_Pin_Direction_Initialize:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _WDT_Init *****************
  2697 ;; Defined at:
  2698 ;;		line 8 in file "MCAL/WATCH_DOG_TIMER/WDT.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  ERRORSTATUS     1    0        unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      unsigned char 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:   10
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_application_intialize
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text12
  2727  00363E                     __ptext12:
  2728                           	callstack 0
  2729  00363E                     _WDT_Init:
  2730                           	callstack 19
  2731  00363E                     
  2732                           ;MCAL/WATCH_DOG_TIMER/WDT.c: 11:     WDTCONbits.SWDTEN=1;
  2733  00363E  80D1               	bsf	209,0,c	;volatile
  2734  003640  0012               	return		;funcret
  2735  003642                     __end_of_WDT_Init:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _EUSART_Async_Init *****************
  2739 ;; Defined at:
  2740 ;;		line 42 in file "MCAL/EUSART/mcal_EUSART.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  _eusart_obj     2   32[BANK1 ] PTR const struct .
  2743 ;;		 -> _uart_obj(12), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  ret_val         1   34[BANK1 ] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      unsigned char 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2755 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;Total ram usage:        3 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:   12
  2762 ;; This function calls:
  2763 ;;		_async_Rx_config
  2764 ;;		_async_Tx_config
  2765 ;;		_async_config_baud_rate_gen
  2766 ;; This function is called by:
  2767 ;;		_application_intialize
  2768 ;;		_Bluetooth_Init
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text13
  2773  0031A0                     __ptext13:
  2774                           	callstack 0
  2775  0031A0                     _EUSART_Async_Init:
  2776                           	callstack 17
  2777  0031A0                     
  2778                           ;MCAL/EUSART/mcal_EUSART.c: 46:     if(((void*)0) == _eusart_obj)
  2779  0031A0  0101               	movlb	1	; () banked
  2780  0031A2  5120               	movf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  2781  0031A4  1121               	iorwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  2782  0031A6  A4D8               	btfss	status,2,c
  2783  0031A8  EFD8  F018         	goto	u9861
  2784  0031AC  EFDA  F018         	goto	u9860
  2785  0031B0                     u9861:
  2786  0031B0  EFDC  F018         	goto	l477
  2787  0031B4                     u9860:
  2788  0031B4                     
  2789                           ; BSR set to: 1
  2790                           ;MCAL/EUSART/mcal_EUSART.c: 49:     }
  2791  0031B4  EF00  F019         	goto	l479
  2792  0031B8                     l477:
  2793                           
  2794                           ; BSR set to: 1
  2795                           ;MCAL/EUSART/mcal_EUSART.c: 51:     {;MCAL/EUSART/mcal_EUSART.c: 53:         (RCSTAbits.
      +                          SPEN = 0 );
  2796  0031B8  9EAB               	bcf	171,7,c	;volatile
  2797  0031BA                     
  2798                           ; BSR set to: 1
  2799                           ;MCAL/EUSART/mcal_EUSART.c: 56:         ret_val = async_config_baud_rate_gen(_eusart_obj
      +                          );
  2800  0031BA  C120  F0E8         	movff	EUSART_Async_Init@_eusart_obj,async_config_baud_rate_gen@_eusart_obj
  2801  0031BE  C121  F0E9         	movff	EUSART_Async_Init@_eusart_obj+1,async_config_baud_rate_gen@_eusart_obj+1
  2802  0031C2  ECF2  F00C         	call	_async_config_baud_rate_gen	;wreg free
  2803  0031C6  0101               	movlb	1	; () banked
  2804  0031C8  6F22               	movwf	EUSART_Async_Init@ret_val& (0+255),b
  2805  0031CA                     
  2806                           ; BSR set to: 1
  2807                           ;MCAL/EUSART/mcal_EUSART.c: 59:         (TXSTA1bits.SYNC = 0);
  2808  0031CA  98AC               	bcf	172,4,c	;volatile
  2809  0031CC                     
  2810                           ; BSR set to: 1
  2811                           ;MCAL/EUSART/mcal_EUSART.c: 62:         TRISCbits.RC6 = GPIO_DIRECTION_INPUT ;
  2812  0031CC  8C94               	bsf	148,6,c	;volatile
  2813                           
  2814                           ;MCAL/EUSART/mcal_EUSART.c: 64:         ret_val &= async_Tx_config(&(_eusart_obj->tx_con
      +                          fig));
  2815  0031CE  0E02               	movlw	2
  2816  0031D0  2520               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  2817  0031D2  6E2A               	movwf	async_Tx_config@_tx_obj^0,c
  2818  0031D4  0E00               	movlw	0
  2819  0031D6  2121               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  2820  0031D8  6E2B               	movwf	(async_Tx_config@_tx_obj+1)^0,c
  2821  0031DA  EC8E  F016         	call	_async_Tx_config	;wreg free
  2822  0031DE  0101               	movlb	1	; () banked
  2823  0031E0  1722               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  2824  0031E2                     
  2825                           ; BSR set to: 1
  2826                           ;MCAL/EUSART/mcal_EUSART.c: 67:         TRISCbits.RC7 = GPIO_DIRECTION_INPUT ;
  2827  0031E2  8E94               	bsf	148,7,c	;volatile
  2828                           
  2829                           ;MCAL/EUSART/mcal_EUSART.c: 69:         ret_val &= async_Rx_config(&(_eusart_obj->rx_con
      +                          fig));
  2830  0031E4  0E03               	movlw	3
  2831  0031E6  2520               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  2832  0031E8  0100               	movlb	0	; () banked
  2833  0031EA  6FCA               	movwf	async_Rx_config@_rx_obj& (0+255),b
  2834  0031EC  0E00               	movlw	0
  2835  0031EE  0101               	movlb	1	; () banked
  2836  0031F0  2121               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  2837  0031F2  0100               	movlb	0	; () banked
  2838  0031F4  6FCB               	movwf	(async_Rx_config@_rx_obj+1)& (0+255),b
  2839  0031F6  ECDF  F014         	call	_async_Rx_config	;wreg free
  2840  0031FA  0101               	movlb	1	; () banked
  2841  0031FC  1722               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  2842  0031FE                     
  2843                           ; BSR set to: 1
  2844                           ;MCAL/EUSART/mcal_EUSART.c: 72:         (RCSTAbits.SPEN = 1 );
  2845  0031FE  8EAB               	bsf	171,7,c	;volatile
  2846  003200                     l479:
  2847                           
  2848                           ; BSR set to: 1
  2849  003200  0012               	return		;funcret
  2850  003202                     __end_of_EUSART_Async_Init:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _async_config_baud_rate_gen *****************
  2854 ;; Defined at:
  2855 ;;		line 564 in file "MCAL/EUSART/mcal_EUSART.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  _eusart_obj     2   30[BANK0 ] PTR const struct .
  2858 ;;		 -> _uart_obj(12), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  Baudrate_tem    4   24[BANK1 ] float 
  2861 ;;  ret_val         1   23[BANK1 ] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      unsigned char 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Totals:         0       2      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;Total ram usage:       13 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:   11
  2878 ;; This function calls:
  2879 ;;		___fladd
  2880 ;;		___fldiv
  2881 ;;		___fltol
  2882 ;;		___xxtofl
  2883 ;; This function is called by:
  2884 ;;		_EUSART_Async_Init
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text14
  2889  0019E4                     __ptext14:
  2890                           	callstack 0
  2891  0019E4                     _async_config_baud_rate_gen:
  2892                           	callstack 17
  2893  0019E4                     
  2894                           ;MCAL/EUSART/mcal_EUSART.c: 564: static __attribute__((inline)) Std_ReturnType async_con
      +                          fig_baud_rate_gen(const uart_config_st *_eusart_obj);MCAL/EUSART/mcal_EUSART.c: 565: {;M
      +                          CAL/EUSART/mcal_EUSART.c: 567:     Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  2895  0019E4  0E01               	movlw	1
  2896  0019E6  0101               	movlb	1	; () banked
  2897  0019E8  6F17               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  2898  0019EA                     
  2899                           ; BSR set to: 1
  2900                           ;MCAL/EUSART/mcal_EUSART.c: 569:     if(((void*)0) == _eusart_obj)
  2901  0019EA  0100               	movlb	0	; () banked
  2902  0019EC  51E8               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  2903  0019EE  11E9               	iorwf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  2904  0019F0  A4D8               	btfss	status,2,c
  2905  0019F2  EFFD  F00C         	goto	u9751
  2906  0019F6  EFFF  F00C         	goto	u9750
  2907  0019FA                     u9751:
  2908  0019FA  EF04  F00D         	goto	l9088
  2909  0019FE                     u9750:
  2910  0019FE                     
  2911                           ; BSR set to: 0
  2912                           ;MCAL/EUSART/mcal_EUSART.c: 570:     {;MCAL/EUSART/mcal_EUSART.c: 571:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  2913  0019FE  0E00               	movlw	0
  2914  001A00  0101               	movlb	1	; () banked
  2915  001A02  6F17               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  2916                           
  2917                           ;MCAL/EUSART/mcal_EUSART.c: 572:     }
  2918  001A04  EFCF  F00E         	goto	l9114
  2919  001A08                     l9088:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;MCAL/EUSART/mcal_EUSART.c: 574:     {;MCAL/EUSART/mcal_EUSART.c: 575:         float32 B
      +                          audrate_temp=0;
  2923  001A08  0E00               	movlw	0
  2924  001A0A  0101               	movlb	1	; () banked
  2925  001A0C  6F18               	movwf	async_config_baud_rate_gen@Baudrate_temp& (0+255),b
  2926  001A0E  0E00               	movlw	0
  2927  001A10  6F19               	movwf	(async_config_baud_rate_gen@Baudrate_temp+1)& (0+255),b
  2928  001A12  0E00               	movlw	0
  2929  001A14  6F1A               	movwf	(async_config_baud_rate_gen@Baudrate_temp+2)& (0+255),b
  2930  001A16  0E00               	movlw	0
  2931  001A18  6F1B               	movwf	(async_config_baud_rate_gen@Baudrate_temp+3)& (0+255),b
  2932                           
  2933                           ;MCAL/EUSART/mcal_EUSART.c: 576:         switch(_eusart_obj->baud_rate_config)
  2934  001A1A  EF8B  F00E         	goto	l9110
  2935  001A1E                     l620:
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;MCAL/EUSART/mcal_EUSART.c: 579:                 TXSTAbits.BRGH = 0 ;
  2939  001A1E  94AC               	bcf	172,2,c	;volatile
  2940                           
  2941                           ;MCAL/EUSART/mcal_EUSART.c: 580:                 BAUDCONbits.BRG16 = 0 ;
  2942  001A20  96B8               	bcf	184,3,c	;volatile
  2943  001A22                     
  2944                           ; BSR set to: 1
  2945                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/64)-1;
  2946  001A22  C0E8  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  2947  001A26  C0E9  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  2948  001A2A  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  2949  001A2E  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  2950  001A32  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  2951  001A36  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  2952  001A3A  6A2C               	clrf	(___xxtofl@val+2)^0,c
  2953  001A3C  6A2D               	clrf	(___xxtofl@val+3)^0,c
  2954  001A3E  0E00               	movlw	0
  2955  001A40  ECD7  F00F         	call	___xxtofl
  2956  001A44  C02A  F0D8         	movff	?___xxtofl,___fldiv@a
  2957  001A48  C02B  F0D9         	movff	?___xxtofl+1,___fldiv@a+1
  2958  001A4C  C02C  F0DA         	movff	?___xxtofl+2,___fldiv@a+2
  2959  001A50  C02D  F0DB         	movff	?___xxtofl+3,___fldiv@a+3
  2960  001A54  0E00               	movlw	0
  2961  001A56  0100               	movlb	0	; () banked
  2962  001A58  6FD4               	movwf	___fldiv@b& (0+255),b
  2963  001A5A  0E1B               	movlw	27
  2964  001A5C  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  2965  001A5E  0EB7               	movlw	183
  2966  001A60  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  2967  001A62  0E4B               	movlw	75
  2968  001A64  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  2969  001A66  ECDB  F00A         	call	___fldiv	;wreg free
  2970  001A6A  C0D4  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4998
  2971  001A6E  C0D5  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4998+1
  2972  001A72  C0D6  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4998+2
  2973  001A76  C0D7  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4998+3
  2974  001A7A                     
  2975                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/64)-1;
  2976  001A7A  0E00               	movlw	0
  2977  001A7C  0100               	movlb	0	; () banked
  2978  001A7E  6FD8               	movwf	___fldiv@a& (0+255),b
  2979  001A80  0E00               	movlw	0
  2980  001A82  6FD9               	movwf	(___fldiv@a+1)& (0+255),b
  2981  001A84  0E80               	movlw	128
  2982  001A86  6FDA               	movwf	(___fldiv@a+2)& (0+255),b
  2983  001A88  0E42               	movlw	66
  2984  001A8A  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  2985  001A8C  C11C  F0D4         	movff	_async_config_baud_rate_gen$4998,___fldiv@b
  2986  001A90  C11D  F0D5         	movff	_async_config_baud_rate_gen$4998+1,___fldiv@b+1
  2987  001A94  C11E  F0D6         	movff	_async_config_baud_rate_gen$4998+2,___fldiv@b+2
  2988  001A98  C11F  F0D7         	movff	_async_config_baud_rate_gen$4998+3,___fldiv@b+3
  2989  001A9C  ECDB  F00A         	call	___fldiv	;wreg free
  2990  001AA0  C0D4  F0E0         	movff	?___fldiv,___fladd@b
  2991  001AA4  C0D5  F0E1         	movff	?___fldiv+1,___fladd@b+1
  2992  001AA8  C0D6  F0E2         	movff	?___fldiv+2,___fladd@b+2
  2993  001AAC  C0D7  F0E3         	movff	?___fldiv+3,___fladd@b+3
  2994  001AB0  0E00               	movlw	0
  2995  001AB2  0100               	movlb	0	; () banked
  2996  001AB4  6FE4               	movwf	___fladd@a& (0+255),b
  2997  001AB6  0E00               	movlw	0
  2998  001AB8  6FE5               	movwf	(___fladd@a+1)& (0+255),b
  2999  001ABA  0E80               	movlw	128
  3000  001ABC  6FE6               	movwf	(___fladd@a+2)& (0+255),b
  3001  001ABE  0EBF               	movlw	191
  3002  001AC0  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  3003  001AC2  EC2C  F008         	call	___fladd	;wreg free
  3004  001AC6  C0E0  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  3005  001ACA  C0E1  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  3006  001ACE  C0E2  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  3007  001AD2  C0E3  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  3008                           
  3009                           ;MCAL/EUSART/mcal_EUSART.c: 582:                 break;
  3010  001AD6  EFB0  F00E         	goto	l9112
  3011  001ADA                     l622:
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;MCAL/EUSART/mcal_EUSART.c: 584:                 TXSTAbits.BRGH = 1 ;
  3015  001ADA  84AC               	bsf	172,2,c	;volatile
  3016                           
  3017                           ;MCAL/EUSART/mcal_EUSART.c: 585:                 BAUDCONbits.BRG16 = 0 ;
  3018  001ADC  96B8               	bcf	184,3,c	;volatile
  3019  001ADE                     
  3020                           ; BSR set to: 1
  3021                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
  3022  001ADE  C0E8  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  3023  001AE2  C0E9  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  3024  001AE6  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  3025  001AEA  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  3026  001AEE  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  3027  001AF2  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  3028  001AF6  6A2C               	clrf	(___xxtofl@val+2)^0,c
  3029  001AF8  6A2D               	clrf	(___xxtofl@val+3)^0,c
  3030  001AFA  0E00               	movlw	0
  3031  001AFC  ECD7  F00F         	call	___xxtofl
  3032  001B00  C02A  F0D8         	movff	?___xxtofl,___fldiv@a
  3033  001B04  C02B  F0D9         	movff	?___xxtofl+1,___fldiv@a+1
  3034  001B08  C02C  F0DA         	movff	?___xxtofl+2,___fldiv@a+2
  3035  001B0C  C02D  F0DB         	movff	?___xxtofl+3,___fldiv@a+3
  3036  001B10  0E00               	movlw	0
  3037  001B12  0100               	movlb	0	; () banked
  3038  001B14  6FD4               	movwf	___fldiv@b& (0+255),b
  3039  001B16  0E1B               	movlw	27
  3040  001B18  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  3041  001B1A  0EB7               	movlw	183
  3042  001B1C  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  3043  001B1E  0E4B               	movlw	75
  3044  001B20  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  3045  001B22  ECDB  F00A         	call	___fldiv	;wreg free
  3046  001B26  C0D4  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4998
  3047  001B2A  C0D5  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4998+1
  3048  001B2E  C0D6  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4998+2
  3049  001B32  C0D7  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4998+3
  3050  001B36                     
  3051                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
  3052  001B36  0E00               	movlw	0
  3053  001B38  0100               	movlb	0	; () banked
  3054  001B3A  6FD8               	movwf	___fldiv@a& (0+255),b
  3055  001B3C  0E00               	movlw	0
  3056  001B3E  6FD9               	movwf	(___fldiv@a+1)& (0+255),b
  3057  001B40  0E80               	movlw	128
  3058  001B42  6FDA               	movwf	(___fldiv@a+2)& (0+255),b
  3059  001B44  0E41               	movlw	65
  3060  001B46  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  3061  001B48  C11C  F0D4         	movff	_async_config_baud_rate_gen$4998,___fldiv@b
  3062  001B4C  C11D  F0D5         	movff	_async_config_baud_rate_gen$4998+1,___fldiv@b+1
  3063  001B50  C11E  F0D6         	movff	_async_config_baud_rate_gen$4998+2,___fldiv@b+2
  3064  001B54  C11F  F0D7         	movff	_async_config_baud_rate_gen$4998+3,___fldiv@b+3
  3065  001B58  ECDB  F00A         	call	___fldiv	;wreg free
  3066  001B5C  C0D4  F0E0         	movff	?___fldiv,___fladd@b
  3067  001B60  C0D5  F0E1         	movff	?___fldiv+1,___fladd@b+1
  3068  001B64  C0D6  F0E2         	movff	?___fldiv+2,___fladd@b+2
  3069  001B68  C0D7  F0E3         	movff	?___fldiv+3,___fladd@b+3
  3070  001B6C  0E00               	movlw	0
  3071  001B6E  0100               	movlb	0	; () banked
  3072  001B70  6FE4               	movwf	___fladd@a& (0+255),b
  3073  001B72  0E00               	movlw	0
  3074  001B74  6FE5               	movwf	(___fladd@a+1)& (0+255),b
  3075  001B76  0E80               	movlw	128
  3076  001B78  6FE6               	movwf	(___fladd@a+2)& (0+255),b
  3077  001B7A  0EBF               	movlw	191
  3078  001B7C  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  3079  001B7E  EC2C  F008         	call	___fladd	;wreg free
  3080  001B82  C0E0  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  3081  001B86  C0E1  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  3082  001B8A  C0E2  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  3083  001B8E  C0E3  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  3084                           
  3085                           ;MCAL/EUSART/mcal_EUSART.c: 587:                 break ;
  3086  001B92  EFB0  F00E         	goto	l9112
  3087  001B96                     l623:
  3088                           
  3089                           ; BSR set to: 1
  3090                           ;MCAL/EUSART/mcal_EUSART.c: 589:                 TXSTAbits.BRGH = 0 ;
  3091  001B96  94AC               	bcf	172,2,c	;volatile
  3092                           
  3093                           ;MCAL/EUSART/mcal_EUSART.c: 590:                 BAUDCONbits.BRG16 = 1 ;
  3094  001B98  86B8               	bsf	184,3,c	;volatile
  3095  001B9A                     
  3096                           ; BSR set to: 1
  3097                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
  3098  001B9A  C0E8  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  3099  001B9E  C0E9  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  3100  001BA2  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  3101  001BA6  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  3102  001BAA  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  3103  001BAE  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  3104  001BB2  6A2C               	clrf	(___xxtofl@val+2)^0,c
  3105  001BB4  6A2D               	clrf	(___xxtofl@val+3)^0,c
  3106  001BB6  0E00               	movlw	0
  3107  001BB8  ECD7  F00F         	call	___xxtofl
  3108  001BBC  C02A  F0D8         	movff	?___xxtofl,___fldiv@a
  3109  001BC0  C02B  F0D9         	movff	?___xxtofl+1,___fldiv@a+1
  3110  001BC4  C02C  F0DA         	movff	?___xxtofl+2,___fldiv@a+2
  3111  001BC8  C02D  F0DB         	movff	?___xxtofl+3,___fldiv@a+3
  3112  001BCC  0E00               	movlw	0
  3113  001BCE  0100               	movlb	0	; () banked
  3114  001BD0  6FD4               	movwf	___fldiv@b& (0+255),b
  3115  001BD2  0E1B               	movlw	27
  3116  001BD4  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  3117  001BD6  0EB7               	movlw	183
  3118  001BD8  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  3119  001BDA  0E4B               	movlw	75
  3120  001BDC  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  3121  001BDE  ECDB  F00A         	call	___fldiv	;wreg free
  3122  001BE2  C0D4  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4998
  3123  001BE6  C0D5  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4998+1
  3124  001BEA  C0D6  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4998+2
  3125  001BEE  C0D7  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4998+3
  3126  001BF2                     
  3127                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
  3128  001BF2  0E00               	movlw	0
  3129  001BF4  0100               	movlb	0	; () banked
  3130  001BF6  6FD8               	movwf	___fldiv@a& (0+255),b
  3131  001BF8  0E00               	movlw	0
  3132  001BFA  6FD9               	movwf	(___fldiv@a+1)& (0+255),b
  3133  001BFC  0E80               	movlw	128
  3134  001BFE  6FDA               	movwf	(___fldiv@a+2)& (0+255),b
  3135  001C00  0E41               	movlw	65
  3136  001C02  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  3137  001C04  C11C  F0D4         	movff	_async_config_baud_rate_gen$4998,___fldiv@b
  3138  001C08  C11D  F0D5         	movff	_async_config_baud_rate_gen$4998+1,___fldiv@b+1
  3139  001C0C  C11E  F0D6         	movff	_async_config_baud_rate_gen$4998+2,___fldiv@b+2
  3140  001C10  C11F  F0D7         	movff	_async_config_baud_rate_gen$4998+3,___fldiv@b+3
  3141  001C14  ECDB  F00A         	call	___fldiv	;wreg free
  3142  001C18  C0D4  F0E0         	movff	?___fldiv,___fladd@b
  3143  001C1C  C0D5  F0E1         	movff	?___fldiv+1,___fladd@b+1
  3144  001C20  C0D6  F0E2         	movff	?___fldiv+2,___fladd@b+2
  3145  001C24  C0D7  F0E3         	movff	?___fldiv+3,___fladd@b+3
  3146  001C28  0E00               	movlw	0
  3147  001C2A  0100               	movlb	0	; () banked
  3148  001C2C  6FE4               	movwf	___fladd@a& (0+255),b
  3149  001C2E  0E00               	movlw	0
  3150  001C30  6FE5               	movwf	(___fladd@a+1)& (0+255),b
  3151  001C32  0E80               	movlw	128
  3152  001C34  6FE6               	movwf	(___fladd@a+2)& (0+255),b
  3153  001C36  0EBF               	movlw	191
  3154  001C38  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  3155  001C3A  EC2C  F008         	call	___fladd	;wreg free
  3156  001C3E  C0E0  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  3157  001C42  C0E1  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  3158  001C46  C0E2  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  3159  001C4A  C0E3  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  3160                           
  3161                           ;MCAL/EUSART/mcal_EUSART.c: 592:                 break ;
  3162  001C4E  EFB0  F00E         	goto	l9112
  3163  001C52                     l624:
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;MCAL/EUSART/mcal_EUSART.c: 594:                 TXSTAbits.BRGH = 1 ;
  3167  001C52  84AC               	bsf	172,2,c	;volatile
  3168                           
  3169                           ;MCAL/EUSART/mcal_EUSART.c: 595:                 BAUDCONbits.BRG16 = 1 ;
  3170  001C54  86B8               	bsf	184,3,c	;volatile
  3171  001C56                     
  3172                           ; BSR set to: 1
  3173                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/4)-1;
  3174  001C56  C0E8  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  3175  001C5A  C0E9  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  3176  001C5E  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  3177  001C62  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  3178  001C66  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  3179  001C6A  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  3180  001C6E  6A2C               	clrf	(___xxtofl@val+2)^0,c
  3181  001C70  6A2D               	clrf	(___xxtofl@val+3)^0,c
  3182  001C72  0E00               	movlw	0
  3183  001C74  ECD7  F00F         	call	___xxtofl
  3184  001C78  C02A  F0D8         	movff	?___xxtofl,___fldiv@a
  3185  001C7C  C02B  F0D9         	movff	?___xxtofl+1,___fldiv@a+1
  3186  001C80  C02C  F0DA         	movff	?___xxtofl+2,___fldiv@a+2
  3187  001C84  C02D  F0DB         	movff	?___xxtofl+3,___fldiv@a+3
  3188  001C88  0E00               	movlw	0
  3189  001C8A  0100               	movlb	0	; () banked
  3190  001C8C  6FD4               	movwf	___fldiv@b& (0+255),b
  3191  001C8E  0E1B               	movlw	27
  3192  001C90  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  3193  001C92  0EB7               	movlw	183
  3194  001C94  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  3195  001C96  0E4B               	movlw	75
  3196  001C98  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  3197  001C9A  ECDB  F00A         	call	___fldiv	;wreg free
  3198  001C9E  C0D4  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4998
  3199  001CA2  C0D5  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4998+1
  3200  001CA6  C0D6  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4998+2
  3201  001CAA  C0D7  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4998+3
  3202  001CAE                     
  3203                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/4)-1;
  3204  001CAE  0E00               	movlw	0
  3205  001CB0  0100               	movlb	0	; () banked
  3206  001CB2  6FD8               	movwf	___fldiv@a& (0+255),b
  3207  001CB4  0E00               	movlw	0
  3208  001CB6  6FD9               	movwf	(___fldiv@a+1)& (0+255),b
  3209  001CB8  0E80               	movlw	128
  3210  001CBA  6FDA               	movwf	(___fldiv@a+2)& (0+255),b
  3211  001CBC  0E40               	movlw	64
  3212  001CBE  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  3213  001CC0  C11C  F0D4         	movff	_async_config_baud_rate_gen$4998,___fldiv@b
  3214  001CC4  C11D  F0D5         	movff	_async_config_baud_rate_gen$4998+1,___fldiv@b+1
  3215  001CC8  C11E  F0D6         	movff	_async_config_baud_rate_gen$4998+2,___fldiv@b+2
  3216  001CCC  C11F  F0D7         	movff	_async_config_baud_rate_gen$4998+3,___fldiv@b+3
  3217  001CD0  ECDB  F00A         	call	___fldiv	;wreg free
  3218  001CD4  C0D4  F0E0         	movff	?___fldiv,___fladd@b
  3219  001CD8  C0D5  F0E1         	movff	?___fldiv+1,___fladd@b+1
  3220  001CDC  C0D6  F0E2         	movff	?___fldiv+2,___fladd@b+2
  3221  001CE0  C0D7  F0E3         	movff	?___fldiv+3,___fladd@b+3
  3222  001CE4  0E00               	movlw	0
  3223  001CE6  0100               	movlb	0	; () banked
  3224  001CE8  6FE4               	movwf	___fladd@a& (0+255),b
  3225  001CEA  0E00               	movlw	0
  3226  001CEC  6FE5               	movwf	(___fladd@a+1)& (0+255),b
  3227  001CEE  0E80               	movlw	128
  3228  001CF0  6FE6               	movwf	(___fladd@a+2)& (0+255),b
  3229  001CF2  0EBF               	movlw	191
  3230  001CF4  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  3231  001CF6  EC2C  F008         	call	___fladd	;wreg free
  3232  001CFA  C0E0  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  3233  001CFE  C0E1  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  3234  001D02  C0E2  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  3235  001D06  C0E3  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  3236                           
  3237                           ;MCAL/EUSART/mcal_EUSART.c: 597:                 break ;
  3238  001D0A  EFB0  F00E         	goto	l9112
  3239  001D0E                     l9106:
  3240                           
  3241                           ; BSR set to: 1
  3242                           ;MCAL/EUSART/mcal_EUSART.c: 599:                 ret_val = (Std_ReturnType) 0x00 ;
  3243  001D0E  0E00               	movlw	0
  3244  001D10  6F17               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  3245                           
  3246                           ;MCAL/EUSART/mcal_EUSART.c: 600:                 break ;
  3247  001D12  EFB0  F00E         	goto	l9112
  3248  001D16                     l9110:
  3249                           
  3250                           ; BSR set to: 1
  3251  001D16  0100               	movlb	0	; () banked
  3252  001D18  EE20 F00B          	lfsr	2,11
  3253  001D1C  51E8               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  3254  001D1E  26D9               	addwf	fsr2l,f,c
  3255  001D20  51E9               	movf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  3256  001D22  22DA               	addwfc	fsr2h,f,c
  3257  001D24  50DF               	movf	indf2,w,c
  3258  001D26  0101               	movlb	1	; () banked
  3259  001D28  6F15               	movwf	??_async_config_baud_rate_gen& (0+255),b
  3260  001D2A  6B16               	clrf	(??_async_config_baud_rate_gen+1)& (0+255),b
  3261                           
  3262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 1, Range of values is 0 to 0
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte            4     3 (average)
  3268                           ;	Chosen strategy is simple_byte
  3269  001D2C  5116               	movf	(??_async_config_baud_rate_gen+1)& (0+255),w,b
  3270  001D2E  0A00               	xorlw	0	; case 0
  3271  001D30  B4D8               	btfsc	status,2,c
  3272  001D32  EF9D  F00E         	goto	l10220
  3273  001D36  EF87  F00E         	goto	l9106
  3274  001D3A                     l10220:
  3275                           
  3276                           ; BSR set to: 1
  3277                           ; Switch size 1, requested type "simple"
  3278                           ; Number of cases is 4, Range of values is 0 to 3
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte           13     7 (average)
  3282                           ;	Chosen strategy is simple_byte
  3283  001D3A  5115               	movf	??_async_config_baud_rate_gen& (0+255),w,b
  3284  001D3C  0A00               	xorlw	0	; case 0
  3285  001D3E  B4D8               	btfsc	status,2,c
  3286  001D40  EF0F  F00D         	goto	l620
  3287  001D44  0A01               	xorlw	1	; case 1
  3288  001D46  B4D8               	btfsc	status,2,c
  3289  001D48  EF6D  F00D         	goto	l622
  3290  001D4C  0A03               	xorlw	3	; case 2
  3291  001D4E  B4D8               	btfsc	status,2,c
  3292  001D50  EFCB  F00D         	goto	l623
  3293  001D54  0A01               	xorlw	1	; case 3
  3294  001D56  B4D8               	btfsc	status,2,c
  3295  001D58  EF29  F00E         	goto	l624
  3296  001D5C  EF87  F00E         	goto	l9106
  3297  001D60                     l9112:
  3298                           
  3299                           ;MCAL/EUSART/mcal_EUSART.c: 604:         SPBRG=(uint8)((uint32)Baudrate_temp);
  3300  001D60  C118  F02A         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  3301  001D64  C119  F02B         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  3302  001D68  C11A  F02C         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  3303  001D6C  C11B  F02D         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  3304  001D70  EC1D  F013         	call	___fltol	;wreg free
  3305  001D74  502A               	movf	?___fltol^0,w,c
  3306  001D76  6EAF               	movwf	175,c	;volatile
  3307                           
  3308                           ;MCAL/EUSART/mcal_EUSART.c: 605:         SPBRGH=(uint8)(((uint32)Baudrate_temp)>>8);
  3309  001D78  C118  F02A         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  3310  001D7C  C119  F02B         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  3311  001D80  C11A  F02C         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  3312  001D84  C11B  F02D         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  3313  001D88  EC1D  F013         	call	___fltol	;wreg free
  3314  001D8C  C02B  F02A         	movff	?___fltol+1,?___fltol
  3315  001D90  C02C  F02B         	movff	?___fltol+2,?___fltol+1
  3316  001D94  C02D  F02C         	movff	?___fltol+3,?___fltol+2
  3317  001D98  6A2D               	clrf	(?___fltol+3)^0,c
  3318  001D9A  502A               	movf	?___fltol^0,w,c
  3319  001D9C  6EB0               	movwf	176,c	;volatile
  3320  001D9E                     l9114:
  3321                           
  3322                           ;MCAL/EUSART/mcal_EUSART.c: 608:     return ret_val ;
  3323  001D9E  0101               	movlb	1	; () banked
  3324  001DA0  5117               	movf	async_config_baud_rate_gen@ret_val& (0+255),w,b
  3325  001DA2                     
  3326                           ; BSR set to: 1
  3327  001DA2  0012               	return		;funcret
  3328  001DA4                     __end_of_async_config_baud_rate_gen:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function ___xxtofl *****************
  3332 ;; Defined at:
  3333 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  sign            1    wreg     unsigned char 
  3336 ;;  val             4   41[COMRAM] long 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  sign            1    4[BANK0 ] unsigned char 
  3339 ;;  arg             4    6[BANK0 ] unsigned long 
  3340 ;;  exp             1    5[BANK0 ] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  4   41[COMRAM] unsigned char 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;Total ram usage:       14 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:   10
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_async_config_baud_rate_gen
  3361 ;;		_Servo_SetAngle
  3362 ;;		_CCP_PWM_Set_Duty
  3363 ;;		_CCP_PWM_Mode_Config
  3364 ;;		_I2C_Master_Mode_Clock_Configurations
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text15
  3369  001FAE                     __ptext15:
  3370                           	callstack 0
  3371  001FAE                     ___xxtofl:
  3372                           	callstack 17
  3373                           
  3374                           ; BSR set to: 1
  3375                           ;incstack = 0
  3376                           ;___xxtofl@sign stored from wreg
  3377  001FAE  0100               	movlb	0	; () banked
  3378  001FB0  6FCE               	movwf	___xxtofl@sign& (0+255),b
  3379  001FB2  0100               	movlb	0	; () banked
  3380  001FB4  51CE               	movf	___xxtofl@sign& (0+255),w,b
  3381  001FB6  B4D8               	btfsc	status,2,c
  3382  001FB8  EFE0  F00F         	goto	u9631
  3383  001FBC  EFE2  F00F         	goto	u9630
  3384  001FC0                     u9631:
  3385  001FC0  EF04  F010         	goto	l2367
  3386  001FC4                     u9630:
  3387  001FC4                     
  3388                           ; BSR set to: 0
  3389  001FC4  BE2D               	btfsc	(___xxtofl@val+3)^0,7,c
  3390  001FC6  EFE9  F00F         	goto	u9640
  3391  001FCA  EFE7  F00F         	goto	u9641
  3392  001FCE                     u9641:
  3393  001FCE  EF04  F010         	goto	l2367
  3394  001FD2                     u9640:
  3395  001FD2                     
  3396                           ; BSR set to: 0
  3397  001FD2  C02A  F0CA         	movff	___xxtofl@val,??___xxtofl
  3398  001FD6  C02B  F0CB         	movff	___xxtofl@val+1,??___xxtofl+1
  3399  001FDA  C02C  F0CC         	movff	___xxtofl@val+2,??___xxtofl+2
  3400  001FDE  C02D  F0CD         	movff	___xxtofl@val+3,??___xxtofl+3
  3401  001FE2  1FCA               	comf	??___xxtofl& (0+255),f,b
  3402  001FE4  1FCB               	comf	(??___xxtofl+1)& (0+255),f,b
  3403  001FE6  1FCC               	comf	(??___xxtofl+2)& (0+255),f,b
  3404  001FE8  1FCD               	comf	(??___xxtofl+3)& (0+255),f,b
  3405  001FEA  2BCA               	incf	??___xxtofl& (0+255),f,b
  3406  001FEC  0E00               	movlw	0
  3407  001FEE  23CB               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3408  001FF0  23CC               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3409  001FF2  23CD               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3410  001FF4  C0CA  F0D0         	movff	??___xxtofl,___xxtofl@arg
  3411  001FF8  C0CB  F0D1         	movff	??___xxtofl+1,___xxtofl@arg+1
  3412  001FFC  C0CC  F0D2         	movff	??___xxtofl+2,___xxtofl@arg+2
  3413  002000  C0CD  F0D3         	movff	??___xxtofl+3,___xxtofl@arg+3
  3414  002004  EF0C  F010         	goto	l9018
  3415  002008                     l2367:
  3416                           
  3417                           ; BSR set to: 0
  3418  002008  C02A  F0D0         	movff	___xxtofl@val,___xxtofl@arg
  3419  00200C  C02B  F0D1         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3420  002010  C02C  F0D2         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3421  002014  C02D  F0D3         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3422  002018                     l9018:
  3423                           
  3424                           ; BSR set to: 0
  3425  002018  502A               	movf	___xxtofl@val^0,w,c
  3426  00201A  102B               	iorwf	(___xxtofl@val+1)^0,w,c
  3427  00201C  102C               	iorwf	(___xxtofl@val+2)^0,w,c
  3428  00201E  102D               	iorwf	(___xxtofl@val+3)^0,w,c
  3429  002020  A4D8               	btfss	status,2,c
  3430  002022  EF15  F010         	goto	u9651
  3431  002026  EF17  F010         	goto	u9650
  3432  00202A                     u9651:
  3433  00202A  EF21  F010         	goto	l9024
  3434  00202E                     u9650:
  3435  00202E                     
  3436                           ; BSR set to: 0
  3437  00202E  0E00               	movlw	0
  3438  002030  6E2A               	movwf	?___xxtofl^0,c
  3439  002032  0E00               	movlw	0
  3440  002034  6E2B               	movwf	(?___xxtofl+1)^0,c
  3441  002036  0E00               	movlw	0
  3442  002038  6E2C               	movwf	(?___xxtofl+2)^0,c
  3443  00203A  0E00               	movlw	0
  3444  00203C  6E2D               	movwf	(?___xxtofl+3)^0,c
  3445  00203E  EFB2  F010         	goto	l2370
  3446  002042                     l9024:
  3447                           
  3448                           ; BSR set to: 0
  3449  002042  0E96               	movlw	150
  3450  002044  6FCF               	movwf	___xxtofl@exp& (0+255),b
  3451  002046  EF2B  F010         	goto	l9028
  3452  00204A                     l9026:
  3453                           
  3454                           ; BSR set to: 0
  3455  00204A  2BCF               	incf	___xxtofl@exp& (0+255),f,b
  3456  00204C  90D8               	bcf	status,0,c
  3457  00204E  33D3               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3458  002050  33D2               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3459  002052  33D1               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3460  002054  33D0               	rrcf	___xxtofl@arg& (0+255),f,b
  3461  002056                     l9028:
  3462                           
  3463                           ; BSR set to: 0
  3464  002056  0E00               	movlw	0
  3465  002058  15D0               	andwf	___xxtofl@arg& (0+255),w,b
  3466  00205A  6FCA               	movwf	??___xxtofl& (0+255),b
  3467  00205C  0E00               	movlw	0
  3468  00205E  15D1               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3469  002060  6FCB               	movwf	(??___xxtofl+1)& (0+255),b
  3470  002062  0E00               	movlw	0
  3471  002064  15D2               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3472  002066  6FCC               	movwf	(??___xxtofl+2)& (0+255),b
  3473  002068  0EFE               	movlw	254
  3474  00206A  15D3               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3475  00206C  6FCD               	movwf	(??___xxtofl+3)& (0+255),b
  3476  00206E  51CA               	movf	??___xxtofl& (0+255),w,b
  3477  002070  11CB               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3478  002072  11CC               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3479  002074  11CD               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3480  002076  A4D8               	btfss	status,2,c
  3481  002078  EF40  F010         	goto	u9661
  3482  00207C  EF42  F010         	goto	u9660
  3483  002080                     u9661:
  3484  002080  EF25  F010         	goto	l9026
  3485  002084                     u9660:
  3486  002084  EF50  F010         	goto	l2374
  3487  002088                     l9030:
  3488                           
  3489                           ; BSR set to: 0
  3490  002088  2BCF               	incf	___xxtofl@exp& (0+255),f,b
  3491  00208A                     
  3492                           ; BSR set to: 0
  3493  00208A  0E01               	movlw	1
  3494  00208C  27D0               	addwf	___xxtofl@arg& (0+255),f,b
  3495  00208E  0E00               	movlw	0
  3496  002090  23D1               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3497  002092  23D2               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3498  002094  23D3               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3499  002096                     
  3500                           ; BSR set to: 0
  3501  002096  90D8               	bcf	status,0,c
  3502  002098  33D3               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3503  00209A  33D2               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3504  00209C  33D1               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3505  00209E  33D0               	rrcf	___xxtofl@arg& (0+255),f,b
  3506  0020A0                     l2374:
  3507                           
  3508                           ; BSR set to: 0
  3509  0020A0  0E00               	movlw	0
  3510  0020A2  15D0               	andwf	___xxtofl@arg& (0+255),w,b
  3511  0020A4  6FCA               	movwf	??___xxtofl& (0+255),b
  3512  0020A6  0E00               	movlw	0
  3513  0020A8  15D1               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3514  0020AA  6FCB               	movwf	(??___xxtofl+1)& (0+255),b
  3515  0020AC  0E00               	movlw	0
  3516  0020AE  15D2               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3517  0020B0  6FCC               	movwf	(??___xxtofl+2)& (0+255),b
  3518  0020B2  0EFF               	movlw	255
  3519  0020B4  15D3               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3520  0020B6  6FCD               	movwf	(??___xxtofl+3)& (0+255),b
  3521  0020B8  51CA               	movf	??___xxtofl& (0+255),w,b
  3522  0020BA  11CB               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3523  0020BC  11CC               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3524  0020BE  11CD               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3525  0020C0  A4D8               	btfss	status,2,c
  3526  0020C2  EF65  F010         	goto	u9671
  3527  0020C6  EF67  F010         	goto	u9670
  3528  0020CA                     u9671:
  3529  0020CA  EF44  F010         	goto	l9030
  3530  0020CE                     u9670:
  3531  0020CE  EF6F  F010         	goto	l9038
  3532  0020D2                     l9036:
  3533                           
  3534                           ; BSR set to: 0
  3535  0020D2  07CF               	decf	___xxtofl@exp& (0+255),f,b
  3536  0020D4  90D8               	bcf	status,0,c
  3537  0020D6  37D0               	rlcf	___xxtofl@arg& (0+255),f,b
  3538  0020D8  37D1               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3539  0020DA  37D2               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3540  0020DC  37D3               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3541  0020DE                     l9038:
  3542                           
  3543                           ; BSR set to: 0
  3544  0020DE  BFD2               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3545  0020E0  EF74  F010         	goto	u9681
  3546  0020E4  EF76  F010         	goto	u9680
  3547  0020E8                     u9681:
  3548  0020E8  EF7E  F010         	goto	l2381
  3549  0020EC                     u9680:
  3550  0020EC                     
  3551                           ; BSR set to: 0
  3552  0020EC  0E02               	movlw	2
  3553  0020EE  61CF               	cpfslt	___xxtofl@exp& (0+255),b
  3554  0020F0  EF7C  F010         	goto	u9691
  3555  0020F4  EF7E  F010         	goto	u9690
  3556  0020F8                     u9691:
  3557  0020F8  EF69  F010         	goto	l9036
  3558  0020FC                     u9690:
  3559  0020FC                     l2381:
  3560                           
  3561                           ; BSR set to: 0
  3562  0020FC  B1CF               	btfsc	___xxtofl@exp& (0+255),0,b
  3563  0020FE  EF83  F010         	goto	u9701
  3564  002102  EF85  F010         	goto	u9700
  3565  002106                     u9701:
  3566  002106  EF86  F010         	goto	l9044
  3567  00210A                     u9700:
  3568  00210A                     
  3569                           ; BSR set to: 0
  3570  00210A  9FD2               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3571  00210C                     l9044:
  3572                           
  3573                           ; BSR set to: 0
  3574  00210C  90D8               	bcf	status,0,c
  3575  00210E  33CF               	rrcf	___xxtofl@exp& (0+255),f,b
  3576  002110                     
  3577                           ; BSR set to: 0
  3578  002110  C0CF  F0CA         	movff	___xxtofl@exp,??___xxtofl
  3579  002114  6BCB               	clrf	(??___xxtofl+1)& (0+255),b
  3580  002116  6BCC               	clrf	(??___xxtofl+2)& (0+255),b
  3581  002118  6BCD               	clrf	(??___xxtofl+3)& (0+255),b
  3582  00211A  C0CA  F0CD         	movff	??___xxtofl,??___xxtofl+3
  3583  00211E  6BCC               	clrf	(??___xxtofl+2)& (0+255),b
  3584  002120  6BCB               	clrf	(??___xxtofl+1)& (0+255),b
  3585  002122  6BCA               	clrf	??___xxtofl& (0+255),b
  3586  002124  51CA               	movf	??___xxtofl& (0+255),w,b
  3587  002126  13D0               	iorwf	___xxtofl@arg& (0+255),f,b
  3588  002128  51CB               	movf	(??___xxtofl+1)& (0+255),w,b
  3589  00212A  13D1               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3590  00212C  51CC               	movf	(??___xxtofl+2)& (0+255),w,b
  3591  00212E  13D2               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3592  002130  51CD               	movf	(??___xxtofl+3)& (0+255),w,b
  3593  002132  13D3               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3594  002134                     
  3595                           ; BSR set to: 0
  3596  002134  51CE               	movf	___xxtofl@sign& (0+255),w,b
  3597  002136  B4D8               	btfsc	status,2,c
  3598  002138  EFA0  F010         	goto	u9711
  3599  00213C  EFA2  F010         	goto	u9710
  3600  002140                     u9711:
  3601  002140  EFAA  F010         	goto	l9054
  3602  002144                     u9710:
  3603  002144                     
  3604                           ; BSR set to: 0
  3605  002144  BE2D               	btfsc	(___xxtofl@val+3)^0,7,c
  3606  002146  EFA9  F010         	goto	u9720
  3607  00214A  EFA7  F010         	goto	u9721
  3608  00214E                     u9721:
  3609  00214E  EFAA  F010         	goto	l9054
  3610  002152                     u9720:
  3611  002152                     
  3612                           ; BSR set to: 0
  3613  002152  8FD3               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3614  002154                     l9054:
  3615                           
  3616                           ; BSR set to: 0
  3617  002154  C0D0  F02A         	movff	___xxtofl@arg,?___xxtofl
  3618  002158  C0D1  F02B         	movff	___xxtofl@arg+1,?___xxtofl+1
  3619  00215C  C0D2  F02C         	movff	___xxtofl@arg+2,?___xxtofl+2
  3620  002160  C0D3  F02D         	movff	___xxtofl@arg+3,?___xxtofl+3
  3621  002164                     l2370:
  3622                           
  3623                           ; BSR set to: 0
  3624  002164  0012               	return		;funcret
  3625  002166                     __end_of___xxtofl:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function ___fltol *****************
  3629 ;; Defined at:
  3630 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  f1              4   41[COMRAM] unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  exp1            1    5[BANK0 ] unsigned char 
  3635 ;;  sign1           1    4[BANK0 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  4   41[COMRAM] long 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;Total ram usage:       10 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:   10
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_async_config_baud_rate_gen
  3656 ;;		_Servo_SetAngle
  3657 ;;		_CCP_PWM_Set_Duty
  3658 ;;		_CCP_PWM_Mode_Config
  3659 ;;		_I2C_Master_Mode_Clock_Configurations
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text16
  3664  00263A                     __ptext16:
  3665                           	callstack 0
  3666  00263A                     ___fltol:
  3667                           	callstack 17
  3668  00263A  342C               	rlcf	(___fltol@f1+2)^0,w,c
  3669  00263C  342D               	rlcf	(___fltol@f1+3)^0,w,c
  3670  00263E  0100               	movlb	0	; () banked
  3671  002640  6FCF               	movwf	___fltol@exp1& (0+255),b
  3672  002642  51CF               	movf	___fltol@exp1& (0+255),w,b
  3673  002644  A4D8               	btfss	status,2,c
  3674  002646  EF27  F013         	goto	u9561
  3675  00264A  EF29  F013         	goto	u9560
  3676  00264E                     u9561:
  3677  00264E  EF33  F013         	goto	l8974
  3678  002652                     u9560:
  3679  002652                     l8970:
  3680                           
  3681                           ; BSR set to: 0
  3682  002652  0E00               	movlw	0
  3683  002654  6E2A               	movwf	?___fltol^0,c
  3684  002656  0E00               	movlw	0
  3685  002658  6E2B               	movwf	(?___fltol+1)^0,c
  3686  00265A  0E00               	movlw	0
  3687  00265C  6E2C               	movwf	(?___fltol+2)^0,c
  3688  00265E  0E00               	movlw	0
  3689  002660  6E2D               	movwf	(?___fltol+3)^0,c
  3690  002662  EFA0  F013         	goto	l2009
  3691  002666                     l8974:
  3692                           
  3693                           ; BSR set to: 0
  3694  002666  C02A  F0CA         	movff	___fltol@f1,??___fltol
  3695  00266A  C02B  F0CB         	movff	___fltol@f1+1,??___fltol+1
  3696  00266E  C02C  F0CC         	movff	___fltol@f1+2,??___fltol+2
  3697  002672  C02D  F0CD         	movff	___fltol@f1+3,??___fltol+3
  3698  002676  0E20               	movlw	32
  3699  002678  EF43  F013         	goto	u9570
  3700  00267C                     u9575:
  3701  00267C  90D8               	bcf	status,0,c
  3702  00267E  33CD               	rrcf	(??___fltol+3)& (0+255),f,b
  3703  002680  33CC               	rrcf	(??___fltol+2)& (0+255),f,b
  3704  002682  33CB               	rrcf	(??___fltol+1)& (0+255),f,b
  3705  002684  33CA               	rrcf	??___fltol& (0+255),f,b
  3706  002686                     u9570:
  3707  002686  2EE8               	decfsz	wreg,f,c
  3708  002688  EF3E  F013         	goto	u9575
  3709  00268C  51CA               	movf	??___fltol& (0+255),w,b
  3710  00268E  6FCE               	movwf	___fltol@sign1& (0+255),b
  3711  002690                     
  3712                           ; BSR set to: 0
  3713  002690  8E2C               	bsf	(___fltol@f1+2)^0,7,c
  3714  002692                     
  3715                           ; BSR set to: 0
  3716  002692  0EFF               	movlw	255
  3717  002694  162A               	andwf	___fltol@f1^0,f,c
  3718  002696  0EFF               	movlw	255
  3719  002698  162B               	andwf	(___fltol@f1+1)^0,f,c
  3720  00269A  0EFF               	movlw	255
  3721  00269C  162C               	andwf	(___fltol@f1+2)^0,f,c
  3722  00269E  0E00               	movlw	0
  3723  0026A0  162D               	andwf	(___fltol@f1+3)^0,f,c
  3724  0026A2                     
  3725                           ; BSR set to: 0
  3726  0026A2  0E96               	movlw	150
  3727  0026A4  5FCF               	subwf	___fltol@exp1& (0+255),f,b
  3728  0026A6                     
  3729                           ; BSR set to: 0
  3730  0026A6  BFCF               	btfsc	___fltol@exp1& (0+255),7,b
  3731  0026A8  EF5A  F013         	goto	u9580
  3732  0026AC  EF58  F013         	goto	u9581
  3733  0026B0                     u9581:
  3734  0026B0  EF70  F013         	goto	l8994
  3735  0026B4                     u9580:
  3736  0026B4                     
  3737                           ; BSR set to: 0
  3738  0026B4  51CF               	movf	___fltol@exp1& (0+255),w,b
  3739  0026B6  0A80               	xorlw	128
  3740  0026B8  0F97               	addlw	151
  3741  0026BA  B0D8               	btfsc	status,0,c
  3742  0026BC  EF62  F013         	goto	u9591
  3743  0026C0  EF64  F013         	goto	u9590
  3744  0026C4                     u9591:
  3745  0026C4  EF66  F013         	goto	l8990
  3746  0026C8                     u9590:
  3747  0026C8  EF29  F013         	goto	l8970
  3748  0026CC                     l8990:
  3749                           
  3750                           ; BSR set to: 0
  3751  0026CC  90D8               	bcf	status,0,c
  3752  0026CE  322D               	rrcf	(___fltol@f1+3)^0,f,c
  3753  0026D0  322C               	rrcf	(___fltol@f1+2)^0,f,c
  3754  0026D2  322B               	rrcf	(___fltol@f1+1)^0,f,c
  3755  0026D4  322A               	rrcf	___fltol@f1^0,f,c
  3756  0026D6                     
  3757                           ; BSR set to: 0
  3758  0026D6  3FCF               	incfsz	___fltol@exp1& (0+255),f,b
  3759  0026D8  EF66  F013         	goto	l8990
  3760  0026DC  EF88  F013         	goto	l9004
  3761  0026E0                     l8994:
  3762                           
  3763                           ; BSR set to: 0
  3764  0026E0  0E1F               	movlw	31
  3765  0026E2  65CF               	cpfsgt	___fltol@exp1& (0+255),b
  3766  0026E4  EF76  F013         	goto	u9601
  3767  0026E8  EF78  F013         	goto	u9600
  3768  0026EC                     u9601:
  3769  0026EC  EF80  F013         	goto	l9002
  3770  0026F0                     u9600:
  3771  0026F0  EF29  F013         	goto	l8970
  3772  0026F4                     l9000:
  3773                           
  3774                           ; BSR set to: 0
  3775  0026F4  90D8               	bcf	status,0,c
  3776  0026F6  362A               	rlcf	___fltol@f1^0,f,c
  3777  0026F8  362B               	rlcf	(___fltol@f1+1)^0,f,c
  3778  0026FA  362C               	rlcf	(___fltol@f1+2)^0,f,c
  3779  0026FC  362D               	rlcf	(___fltol@f1+3)^0,f,c
  3780  0026FE  07CF               	decf	___fltol@exp1& (0+255),f,b
  3781  002700                     l9002:
  3782                           
  3783                           ; BSR set to: 0
  3784  002700  51CF               	movf	___fltol@exp1& (0+255),w,b
  3785  002702  A4D8               	btfss	status,2,c
  3786  002704  EF86  F013         	goto	u9611
  3787  002708  EF88  F013         	goto	u9610
  3788  00270C                     u9611:
  3789  00270C  EF7A  F013         	goto	l9000
  3790  002710                     u9610:
  3791  002710                     l9004:
  3792                           
  3793                           ; BSR set to: 0
  3794  002710  51CE               	movf	___fltol@sign1& (0+255),w,b
  3795  002712  B4D8               	btfsc	status,2,c
  3796  002714  EF8E  F013         	goto	u9621
  3797  002718  EF90  F013         	goto	u9620
  3798  00271C                     u9621:
  3799  00271C  EF98  F013         	goto	l9008
  3800  002720                     u9620:
  3801  002720                     
  3802                           ; BSR set to: 0
  3803  002720  1E2D               	comf	(___fltol@f1+3)^0,f,c
  3804  002722  1E2C               	comf	(___fltol@f1+2)^0,f,c
  3805  002724  1E2B               	comf	(___fltol@f1+1)^0,f,c
  3806  002726  6C2A               	negf	___fltol@f1^0,c
  3807  002728  0E00               	movlw	0
  3808  00272A  222B               	addwfc	(___fltol@f1+1)^0,f,c
  3809  00272C  222C               	addwfc	(___fltol@f1+2)^0,f,c
  3810  00272E  222D               	addwfc	(___fltol@f1+3)^0,f,c
  3811  002730                     l9008:
  3812                           
  3813                           ; BSR set to: 0
  3814  002730  C02A  F02A         	movff	___fltol@f1,?___fltol
  3815  002734  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
  3816  002738  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
  3817  00273C  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
  3818  002740                     l2009:
  3819                           
  3820                           ; BSR set to: 0
  3821  002740  0012               	return		;funcret
  3822  002742                     __end_of___fltol:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function ___fldiv *****************
  3826 ;; Defined at:
  3827 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  b               4   10[BANK0 ] long 
  3830 ;;  a               4   14[BANK0 ] long 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  grs             4    7[BANK1 ] unsigned long 
  3833 ;;  rem             4    0[BANK1 ] unsigned long 
  3834 ;;  new_exp         2    5[BANK1 ] short 
  3835 ;;  aexp            1   12[BANK1 ] unsigned char 
  3836 ;;  bexp            1   11[BANK1 ] unsigned char 
  3837 ;;  sign            1    4[BANK1 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  4   10[BANK0 ] unsigned char 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Totals:         0      12      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;Total ram usage:       25 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:   10
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_async_config_baud_rate_gen
  3858 ;;		_CCP_PWM_Set_Duty
  3859 ;;		_CCP_PWM_Mode_Config
  3860 ;;		_I2C_Master_Mode_Clock_Configurations
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text17
  3865  0015B6                     __ptext17:
  3866                           	callstack 0
  3867  0015B6                     ___fldiv:
  3868                           	callstack 17
  3869  0015B6  0100               	movlb	0	; () banked
  3870  0015B8  51D7               	movf	(___fldiv@b+3)& (0+255),w,b
  3871  0015BA  0B80               	andlw	128
  3872  0015BC  0101               	movlb	1	; () banked
  3873  0015BE  6F04               	movwf	___fldiv@sign& (0+255),b
  3874  0015C0  0100               	movlb	0	; () banked
  3875  0015C2  51D7               	movf	(___fldiv@b+3)& (0+255),w,b
  3876  0015C4  25D7               	addwf	(___fldiv@b+3)& (0+255),w,b
  3877  0015C6  0101               	movlb	1	; () banked
  3878  0015C8  6F0B               	movwf	___fldiv@bexp& (0+255),b
  3879  0015CA                     
  3880                           ; BSR set to: 1
  3881  0015CA  0100               	movlb	0	; () banked
  3882  0015CC  AFD6               	btfss	(___fldiv@b+2)& (0+255),7,b
  3883  0015CE  EFEB  F00A         	goto	u9331
  3884  0015D2  EFED  F00A         	goto	u9330
  3885  0015D6                     u9331:
  3886  0015D6  EFEF  F00A         	goto	l8836
  3887  0015DA                     u9330:
  3888  0015DA                     
  3889                           ; BSR set to: 0
  3890  0015DA  0101               	movlb	1	; () banked
  3891  0015DC  810B               	bsf	___fldiv@bexp& (0+255),0,b
  3892  0015DE                     l8836:
  3893  0015DE  0101               	movlb	1	; () banked
  3894  0015E0  510B               	movf	___fldiv@bexp& (0+255),w,b
  3895  0015E2  B4D8               	btfsc	status,2,c
  3896  0015E4  EFF6  F00A         	goto	u9341
  3897  0015E8  EFF8  F00A         	goto	u9340
  3898  0015EC                     u9341:
  3899  0015EC  EF0F  F00B         	goto	l8846
  3900  0015F0                     u9340:
  3901  0015F0                     
  3902                           ; BSR set to: 1
  3903  0015F0  290B               	incf	___fldiv@bexp& (0+255),w,b
  3904  0015F2  A4D8               	btfss	status,2,c
  3905  0015F4  EFFE  F00A         	goto	u9351
  3906  0015F8  EF00  F00B         	goto	u9350
  3907  0015FC                     u9351:
  3908  0015FC  EF09  F00B         	goto	l8842
  3909  001600                     u9350:
  3910  001600                     
  3911                           ; BSR set to: 1
  3912  001600  0E00               	movlw	0
  3913  001602  0100               	movlb	0	; () banked
  3914  001604  6FD4               	movwf	___fldiv@b& (0+255),b
  3915  001606  0E00               	movlw	0
  3916  001608  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  3917  00160A  0E00               	movlw	0
  3918  00160C  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  3919  00160E  0E00               	movlw	0
  3920  001610  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  3921  001612                     l8842:
  3922  001612  0100               	movlb	0	; () banked
  3923  001614  8FD6               	bsf	(___fldiv@b+2)& (0+255),7,b
  3924  001616                     
  3925                           ; BSR set to: 0
  3926  001616  0E00               	movlw	0
  3927  001618  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  3928  00161A  EF18  F00B         	goto	l8848
  3929  00161E                     l8846:
  3930                           
  3931                           ; BSR set to: 1
  3932  00161E  0E00               	movlw	0
  3933  001620  0100               	movlb	0	; () banked
  3934  001622  6FD4               	movwf	___fldiv@b& (0+255),b
  3935  001624  0E00               	movlw	0
  3936  001626  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  3937  001628  0E00               	movlw	0
  3938  00162A  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  3939  00162C  0E00               	movlw	0
  3940  00162E  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  3941  001630                     l8848:
  3942                           
  3943                           ; BSR set to: 0
  3944  001630  51DB               	movf	(___fldiv@a+3)& (0+255),w,b
  3945  001632  0B80               	andlw	128
  3946  001634  0101               	movlb	1	; () banked
  3947  001636  1B04               	xorwf	___fldiv@sign& (0+255),f,b
  3948  001638                     
  3949                           ; BSR set to: 1
  3950  001638  0100               	movlb	0	; () banked
  3951  00163A  51DB               	movf	(___fldiv@a+3)& (0+255),w,b
  3952  00163C  25DB               	addwf	(___fldiv@a+3)& (0+255),w,b
  3953  00163E  0101               	movlb	1	; () banked
  3954  001640  6F0C               	movwf	___fldiv@aexp& (0+255),b
  3955  001642                     
  3956                           ; BSR set to: 1
  3957  001642  0100               	movlb	0	; () banked
  3958  001644  AFDA               	btfss	(___fldiv@a+2)& (0+255),7,b
  3959  001646  EF27  F00B         	goto	u9361
  3960  00164A  EF29  F00B         	goto	u9360
  3961  00164E                     u9361:
  3962  00164E  EF2B  F00B         	goto	l8856
  3963  001652                     u9360:
  3964  001652                     
  3965                           ; BSR set to: 0
  3966  001652  0101               	movlb	1	; () banked
  3967  001654  810C               	bsf	___fldiv@aexp& (0+255),0,b
  3968  001656                     l8856:
  3969  001656  0101               	movlb	1	; () banked
  3970  001658  510C               	movf	___fldiv@aexp& (0+255),w,b
  3971  00165A  B4D8               	btfsc	status,2,c
  3972  00165C  EF32  F00B         	goto	u9371
  3973  001660  EF34  F00B         	goto	u9370
  3974  001664                     u9371:
  3975  001664  EF4B  F00B         	goto	l8866
  3976  001668                     u9370:
  3977  001668                     
  3978                           ; BSR set to: 1
  3979  001668  290C               	incf	___fldiv@aexp& (0+255),w,b
  3980  00166A  A4D8               	btfss	status,2,c
  3981  00166C  EF3A  F00B         	goto	u9381
  3982  001670  EF3C  F00B         	goto	u9380
  3983  001674                     u9381:
  3984  001674  EF45  F00B         	goto	l8862
  3985  001678                     u9380:
  3986  001678                     
  3987                           ; BSR set to: 1
  3988  001678  0E00               	movlw	0
  3989  00167A  0100               	movlb	0	; () banked
  3990  00167C  6FD8               	movwf	___fldiv@a& (0+255),b
  3991  00167E  0E00               	movlw	0
  3992  001680  6FD9               	movwf	(___fldiv@a+1)& (0+255),b
  3993  001682  0E00               	movlw	0
  3994  001684  6FDA               	movwf	(___fldiv@a+2)& (0+255),b
  3995  001686  0E00               	movlw	0
  3996  001688  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  3997  00168A                     l8862:
  3998  00168A  0100               	movlb	0	; () banked
  3999  00168C  8FDA               	bsf	(___fldiv@a+2)& (0+255),7,b
  4000  00168E                     
  4001                           ; BSR set to: 0
  4002  00168E  0E00               	movlw	0
  4003  001690  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  4004  001692  EF54  F00B         	goto	l8868
  4005  001696                     l8866:
  4006                           
  4007                           ; BSR set to: 1
  4008  001696  0E00               	movlw	0
  4009  001698  0100               	movlb	0	; () banked
  4010  00169A  6FD8               	movwf	___fldiv@a& (0+255),b
  4011  00169C  0E00               	movlw	0
  4012  00169E  6FD9               	movwf	(___fldiv@a+1)& (0+255),b
  4013  0016A0  0E00               	movlw	0
  4014  0016A2  6FDA               	movwf	(___fldiv@a+2)& (0+255),b
  4015  0016A4  0E00               	movlw	0
  4016  0016A6  6FDB               	movwf	(___fldiv@a+3)& (0+255),b
  4017  0016A8                     l8868:
  4018                           
  4019                           ; BSR set to: 0
  4020  0016A8  51D8               	movf	___fldiv@a& (0+255),w,b
  4021  0016AA  11D9               	iorwf	(___fldiv@a+1)& (0+255),w,b
  4022  0016AC  11DA               	iorwf	(___fldiv@a+2)& (0+255),w,b
  4023  0016AE  11DB               	iorwf	(___fldiv@a+3)& (0+255),w,b
  4024  0016B0  A4D8               	btfss	status,2,c
  4025  0016B2  EF5D  F00B         	goto	u9391
  4026  0016B6  EF5F  F00B         	goto	u9390
  4027  0016BA                     u9391:
  4028  0016BA  EF79  F00B         	goto	l8880
  4029  0016BE                     u9390:
  4030  0016BE                     
  4031                           ; BSR set to: 0
  4032  0016BE  0E00               	movlw	0
  4033  0016C0  6FD4               	movwf	___fldiv@b& (0+255),b
  4034  0016C2  0E00               	movlw	0
  4035  0016C4  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  4036  0016C6  0E00               	movlw	0
  4037  0016C8  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  4038  0016CA  0E00               	movlw	0
  4039  0016CC  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  4040  0016CE                     
  4041                           ; BSR set to: 0
  4042  0016CE  0E80               	movlw	128
  4043  0016D0  13D6               	iorwf	(___fldiv@b+2)& (0+255),f,b
  4044  0016D2  0E7F               	movlw	127
  4045  0016D4  13D7               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4046  0016D6                     l8874:
  4047                           
  4048                           ; BSR set to: 0
  4049  0016D6  0101               	movlb	1	; () banked
  4050  0016D8  5104               	movf	___fldiv@sign& (0+255),w,b
  4051  0016DA  0100               	movlb	0	; () banked
  4052  0016DC  13D7               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4053  0016DE                     
  4054                           ; BSR set to: 0
  4055  0016DE  C0D4  F0D4         	movff	___fldiv@b,?___fldiv
  4056  0016E2  C0D5  F0D5         	movff	___fldiv@b+1,?___fldiv+1
  4057  0016E6  C0D6  F0D6         	movff	___fldiv@b+2,?___fldiv+2
  4058  0016EA  C0D7  F0D7         	movff	___fldiv@b+3,?___fldiv+3
  4059  0016EE  EFF1  F00C         	goto	l2294
  4060  0016F2                     l8880:
  4061                           
  4062                           ; BSR set to: 0
  4063  0016F2  0101               	movlb	1	; () banked
  4064  0016F4  510B               	movf	___fldiv@bexp& (0+255),w,b
  4065  0016F6  A4D8               	btfss	status,2,c
  4066  0016F8  EF80  F00B         	goto	u9401
  4067  0016FC  EF82  F00B         	goto	u9400
  4068  001700                     u9401:
  4069  001700  EF8D  F00B         	goto	l8888
  4070  001704                     u9400:
  4071  001704                     
  4072                           ; BSR set to: 1
  4073  001704  0E00               	movlw	0
  4074  001706  0100               	movlb	0	; () banked
  4075  001708  6FD4               	movwf	?___fldiv& (0+255),b
  4076  00170A  0E00               	movlw	0
  4077  00170C  6FD5               	movwf	(?___fldiv+1)& (0+255),b
  4078  00170E  0E00               	movlw	0
  4079  001710  6FD6               	movwf	(?___fldiv+2)& (0+255),b
  4080  001712  0E00               	movlw	0
  4081  001714  6FD7               	movwf	(?___fldiv+3)& (0+255),b
  4082  001716  EFF1  F00C         	goto	l2294
  4083  00171A                     l8888:
  4084                           
  4085                           ; BSR set to: 1
  4086  00171A  510C               	movf	___fldiv@aexp& (0+255),w,b
  4087  00171C  C10B  F0DC         	movff	___fldiv@bexp,??___fldiv
  4088  001720  0100               	movlb	0	; () banked
  4089  001722  6BDD               	clrf	(??___fldiv+1)& (0+255),b
  4090  001724  5FDC               	subwf	??___fldiv& (0+255),f,b
  4091  001726  0E00               	movlw	0
  4092  001728  5BDD               	subwfb	(??___fldiv+1)& (0+255),f,b
  4093  00172A  0E7F               	movlw	127
  4094  00172C  25DC               	addwf	??___fldiv& (0+255),w,b
  4095  00172E  0101               	movlb	1	; () banked
  4096  001730  6F05               	movwf	___fldiv@new_exp& (0+255),b
  4097  001732  0E00               	movlw	0
  4098  001734  0100               	movlb	0	; () banked
  4099  001736  21DD               	addwfc	(??___fldiv+1)& (0+255),w,b
  4100  001738  0101               	movlb	1	; () banked
  4101  00173A  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4102  00173C                     
  4103                           ; BSR set to: 1
  4104  00173C  C0D4  F100         	movff	___fldiv@b,___fldiv@rem
  4105  001740  C0D5  F101         	movff	___fldiv@b+1,___fldiv@rem+1
  4106  001744  C0D6  F102         	movff	___fldiv@b+2,___fldiv@rem+2
  4107  001748  C0D7  F103         	movff	___fldiv@b+3,___fldiv@rem+3
  4108  00174C                     
  4109                           ; BSR set to: 1
  4110  00174C  0E00               	movlw	0
  4111  00174E  0100               	movlb	0	; () banked
  4112  001750  6FD4               	movwf	___fldiv@b& (0+255),b
  4113  001752  0E00               	movlw	0
  4114  001754  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  4115  001756  0E00               	movlw	0
  4116  001758  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  4117  00175A  0E00               	movlw	0
  4118  00175C  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  4119  00175E                     
  4120                           ; BSR set to: 0
  4121  00175E  0E00               	movlw	0
  4122  001760  0101               	movlb	1	; () banked
  4123  001762  6F07               	movwf	___fldiv@grs& (0+255),b
  4124  001764  0E00               	movlw	0
  4125  001766  6F08               	movwf	(___fldiv@grs+1)& (0+255),b
  4126  001768  0E00               	movlw	0
  4127  00176A  6F09               	movwf	(___fldiv@grs+2)& (0+255),b
  4128  00176C  0E00               	movlw	0
  4129  00176E  6F0A               	movwf	(___fldiv@grs+3)& (0+255),b
  4130  001770                     
  4131                           ; BSR set to: 1
  4132  001770  0E00               	movlw	0
  4133  001772  6F0C               	movwf	___fldiv@aexp& (0+255),b
  4134  001774  EF08  F00C         	goto	l2296
  4135  001778                     l8898:
  4136                           
  4137                           ; BSR set to: 1
  4138  001778  510C               	movf	___fldiv@aexp& (0+255),w,b
  4139  00177A  B4D8               	btfsc	status,2,c
  4140  00177C  EFC2  F00B         	goto	u9411
  4141  001780  EFC4  F00B         	goto	u9410
  4142  001784                     u9411:
  4143  001784  EFDF  F00B         	goto	l8906
  4144  001788                     u9410:
  4145  001788                     
  4146                           ; BSR set to: 1
  4147  001788  90D8               	bcf	status,0,c
  4148  00178A  3700               	rlcf	___fldiv@rem& (0+255),f,b
  4149  00178C  3701               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4150  00178E  3702               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4151  001790  3703               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4152  001792  0100               	movlb	0	; () banked
  4153  001794  90D8               	bcf	status,0,c
  4154  001796  37D4               	rlcf	___fldiv@b& (0+255),f,b
  4155  001798  37D5               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4156  00179A  37D6               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4157  00179C  37D7               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4158  00179E                     
  4159                           ; BSR set to: 0
  4160  00179E  0101               	movlb	1	; () banked
  4161  0017A0  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4162  0017A2  EFD5  F00B         	goto	u9421
  4163  0017A6  EFD7  F00B         	goto	u9420
  4164  0017AA                     u9421:
  4165  0017AA  EFD9  F00B         	goto	l2299
  4166  0017AE                     u9420:
  4167  0017AE                     
  4168                           ; BSR set to: 1
  4169  0017AE  0100               	movlb	0	; () banked
  4170  0017B0  81D4               	bsf	___fldiv@b& (0+255),0,b
  4171  0017B2                     l2299:
  4172  0017B2  0101               	movlb	1	; () banked
  4173  0017B4  90D8               	bcf	status,0,c
  4174  0017B6  3707               	rlcf	___fldiv@grs& (0+255),f,b
  4175  0017B8  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4176  0017BA  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4177  0017BC  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4178  0017BE                     l8906:
  4179                           
  4180                           ; BSR set to: 1
  4181  0017BE  0100               	movlb	0	; () banked
  4182  0017C0  51D8               	movf	___fldiv@a& (0+255),w,b
  4183  0017C2  0101               	movlb	1	; () banked
  4184  0017C4  5D00               	subwf	___fldiv@rem& (0+255),w,b
  4185  0017C6  0100               	movlb	0	; () banked
  4186  0017C8  51D9               	movf	(___fldiv@a+1)& (0+255),w,b
  4187  0017CA  0101               	movlb	1	; () banked
  4188  0017CC  5901               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4189  0017CE  0100               	movlb	0	; () banked
  4190  0017D0  51DA               	movf	(___fldiv@a+2)& (0+255),w,b
  4191  0017D2  0101               	movlb	1	; () banked
  4192  0017D4  5902               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4193  0017D6  0100               	movlb	0	; () banked
  4194  0017D8  51DB               	movf	(___fldiv@a+3)& (0+255),w,b
  4195  0017DA  0101               	movlb	1	; () banked
  4196  0017DC  5903               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4197  0017DE  A0D8               	btfss	status,0,c
  4198  0017E0  EFF4  F00B         	goto	u9431
  4199  0017E4  EFF6  F00B         	goto	u9430
  4200  0017E8                     u9431:
  4201  0017E8  EF07  F00C         	goto	l8912
  4202  0017EC                     u9430:
  4203  0017EC                     
  4204                           ; BSR set to: 1
  4205  0017EC  8D0A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4206  0017EE                     
  4207                           ; BSR set to: 1
  4208  0017EE  0100               	movlb	0	; () banked
  4209  0017F0  51D8               	movf	___fldiv@a& (0+255),w,b
  4210  0017F2  0101               	movlb	1	; () banked
  4211  0017F4  5F00               	subwf	___fldiv@rem& (0+255),f,b
  4212  0017F6  0100               	movlb	0	; () banked
  4213  0017F8  51D9               	movf	(___fldiv@a+1)& (0+255),w,b
  4214  0017FA  0101               	movlb	1	; () banked
  4215  0017FC  5B01               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4216  0017FE  0100               	movlb	0	; () banked
  4217  001800  51DA               	movf	(___fldiv@a+2)& (0+255),w,b
  4218  001802  0101               	movlb	1	; () banked
  4219  001804  5B02               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4220  001806  0100               	movlb	0	; () banked
  4221  001808  51DB               	movf	(___fldiv@a+3)& (0+255),w,b
  4222  00180A  0101               	movlb	1	; () banked
  4223  00180C  5B03               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4224  00180E                     l8912:
  4225                           
  4226                           ; BSR set to: 1
  4227  00180E  2B0C               	incf	___fldiv@aexp& (0+255),f,b
  4228  001810                     l2296:
  4229                           
  4230                           ; BSR set to: 1
  4231  001810  0E19               	movlw	25
  4232  001812  650C               	cpfsgt	___fldiv@aexp& (0+255),b
  4233  001814  EF0E  F00C         	goto	u9441
  4234  001818  EF10  F00C         	goto	u9440
  4235  00181C                     u9441:
  4236  00181C  EFBC  F00B         	goto	l8898
  4237  001820                     u9440:
  4238  001820                     
  4239                           ; BSR set to: 1
  4240  001820  5100               	movf	___fldiv@rem& (0+255),w,b
  4241  001822  1101               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4242  001824  1102               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4243  001826  1103               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4244  001828  B4D8               	btfsc	status,2,c
  4245  00182A  EF19  F00C         	goto	u9451
  4246  00182E  EF1B  F00C         	goto	u9450
  4247  001832                     u9451:
  4248  001832  EF36  F00C         	goto	l8924
  4249  001836                     u9450:
  4250  001836                     
  4251                           ; BSR set to: 1
  4252  001836  8107               	bsf	___fldiv@grs& (0+255),0,b
  4253  001838  EF36  F00C         	goto	l8924
  4254  00183C                     l8918:
  4255                           
  4256                           ; BSR set to: 0
  4257  00183C  90D8               	bcf	status,0,c
  4258  00183E  37D4               	rlcf	___fldiv@b& (0+255),f,b
  4259  001840  37D5               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4260  001842  37D6               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4261  001844  37D7               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4262  001846                     
  4263                           ; BSR set to: 0
  4264  001846  0101               	movlb	1	; () banked
  4265  001848  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4266  00184A  EF29  F00C         	goto	u9461
  4267  00184E  EF2B  F00C         	goto	u9460
  4268  001852                     u9461:
  4269  001852  EF2D  F00C         	goto	l2305
  4270  001856                     u9460:
  4271  001856                     
  4272                           ; BSR set to: 1
  4273  001856  0100               	movlb	0	; () banked
  4274  001858  81D4               	bsf	___fldiv@b& (0+255),0,b
  4275  00185A                     l2305:
  4276  00185A  0101               	movlb	1	; () banked
  4277  00185C  90D8               	bcf	status,0,c
  4278  00185E  3707               	rlcf	___fldiv@grs& (0+255),f,b
  4279  001860  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4280  001862  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4281  001864  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4282  001866  0705               	decf	___fldiv@new_exp& (0+255),f,b
  4283  001868  A0D8               	btfss	status,0,c
  4284  00186A  0706               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4285  00186C                     l8924:
  4286                           
  4287                           ; BSR set to: 1
  4288  00186C  0100               	movlb	0	; () banked
  4289  00186E  AFD6               	btfss	(___fldiv@b+2)& (0+255),7,b
  4290  001870  EF3C  F00C         	goto	u9471
  4291  001874  EF3E  F00C         	goto	u9470
  4292  001878                     u9471:
  4293  001878  EF1E  F00C         	goto	l8918
  4294  00187C                     u9470:
  4295  00187C                     
  4296                           ; BSR set to: 0
  4297  00187C  0E00               	movlw	0
  4298  00187E  0101               	movlb	1	; () banked
  4299  001880  6F0C               	movwf	___fldiv@aexp& (0+255),b
  4300  001882                     
  4301                           ; BSR set to: 1
  4302  001882  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4303  001884  EF46  F00C         	goto	u9481
  4304  001888  EF48  F00C         	goto	u9480
  4305  00188C                     u9481:
  4306  00188C  EF74  F00C         	goto	l2307
  4307  001890                     u9480:
  4308  001890                     
  4309                           ; BSR set to: 1
  4310  001890  0EFF               	movlw	255
  4311  001892  1507               	andwf	___fldiv@grs& (0+255),w,b
  4312  001894  0100               	movlb	0	; () banked
  4313  001896  6FDC               	movwf	??___fldiv& (0+255),b
  4314  001898  0EFF               	movlw	255
  4315  00189A  0101               	movlb	1	; () banked
  4316  00189C  1508               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4317  00189E  0100               	movlb	0	; () banked
  4318  0018A0  6FDD               	movwf	(??___fldiv+1)& (0+255),b
  4319  0018A2  0EFF               	movlw	255
  4320  0018A4  0101               	movlb	1	; () banked
  4321  0018A6  1509               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4322  0018A8  0100               	movlb	0	; () banked
  4323  0018AA  6FDE               	movwf	(??___fldiv+2)& (0+255),b
  4324  0018AC  0E7F               	movlw	127
  4325  0018AE  0101               	movlb	1	; () banked
  4326  0018B0  150A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4327  0018B2  0100               	movlb	0	; () banked
  4328  0018B4  6FDF               	movwf	(??___fldiv+3)& (0+255),b
  4329  0018B6  51DC               	movf	??___fldiv& (0+255),w,b
  4330  0018B8  11DD               	iorwf	(??___fldiv+1)& (0+255),w,b
  4331  0018BA  11DE               	iorwf	(??___fldiv+2)& (0+255),w,b
  4332  0018BC  11DF               	iorwf	(??___fldiv+3)& (0+255),w,b
  4333  0018BE  B4D8               	btfsc	status,2,c
  4334  0018C0  EF64  F00C         	goto	u9491
  4335  0018C4  EF66  F00C         	goto	u9490
  4336  0018C8                     u9491:
  4337  0018C8  EF6B  F00C         	goto	l2308
  4338  0018CC                     u9490:
  4339  0018CC                     l8932:
  4340                           
  4341                           ; BSR set to: 0
  4342  0018CC  0E01               	movlw	1
  4343  0018CE  0101               	movlb	1	; () banked
  4344  0018D0  6F0C               	movwf	___fldiv@aexp& (0+255),b
  4345  0018D2  EF74  F00C         	goto	l2307
  4346  0018D6                     l2308:
  4347                           
  4348                           ; BSR set to: 0
  4349  0018D6  A1D4               	btfss	___fldiv@b& (0+255),0,b
  4350  0018D8  EF70  F00C         	goto	u9501
  4351  0018DC  EF72  F00C         	goto	u9500
  4352  0018E0                     u9501:
  4353  0018E0  EF74  F00C         	goto	l2307
  4354  0018E4                     u9500:
  4355  0018E4  EF66  F00C         	goto	l8932
  4356  0018E8                     l2307:
  4357  0018E8  0101               	movlb	1	; () banked
  4358  0018EA  510C               	movf	___fldiv@aexp& (0+255),w,b
  4359  0018EC  B4D8               	btfsc	status,2,c
  4360  0018EE  EF7B  F00C         	goto	u9511
  4361  0018F2  EF7D  F00C         	goto	u9510
  4362  0018F6                     u9511:
  4363  0018F6  EFA3  F00C         	goto	l8944
  4364  0018FA                     u9510:
  4365  0018FA                     
  4366                           ; BSR set to: 1
  4367  0018FA  0E01               	movlw	1
  4368  0018FC  0100               	movlb	0	; () banked
  4369  0018FE  27D4               	addwf	___fldiv@b& (0+255),f,b
  4370  001900  0E00               	movlw	0
  4371  001902  23D5               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4372  001904  23D6               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4373  001906  23D7               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4374  001908                     
  4375                           ; BSR set to: 0
  4376  001908  A1D7               	btfss	(___fldiv@b+3)& (0+255),0,b
  4377  00190A  EF89  F00C         	goto	u9521
  4378  00190E  EF8B  F00C         	goto	u9520
  4379  001912                     u9521:
  4380  001912  EFA3  F00C         	goto	l8944
  4381  001916                     u9520:
  4382  001916                     
  4383                           ; BSR set to: 0
  4384  001916  C0D4  F0DC         	movff	___fldiv@b,??___fldiv
  4385  00191A  C0D5  F0DD         	movff	___fldiv@b+1,??___fldiv+1
  4386  00191E  C0D6  F0DE         	movff	___fldiv@b+2,??___fldiv+2
  4387  001922  C0D7  F0DF         	movff	___fldiv@b+3,??___fldiv+3
  4388  001926  35DF               	rlcf	(??___fldiv+3)& (0+255),w,b
  4389  001928  33DF               	rrcf	(??___fldiv+3)& (0+255),f,b
  4390  00192A  33DE               	rrcf	(??___fldiv+2)& (0+255),f,b
  4391  00192C  33DD               	rrcf	(??___fldiv+1)& (0+255),f,b
  4392  00192E  33DC               	rrcf	??___fldiv& (0+255),f,b
  4393  001930  C0DC  F0D4         	movff	??___fldiv,___fldiv@b
  4394  001934  C0DD  F0D5         	movff	??___fldiv+1,___fldiv@b+1
  4395  001938  C0DE  F0D6         	movff	??___fldiv+2,___fldiv@b+2
  4396  00193C  C0DF  F0D7         	movff	??___fldiv+3,___fldiv@b+3
  4397  001940                     
  4398                           ; BSR set to: 0
  4399  001940  0101               	movlb	1	; () banked
  4400  001942  4B05               	infsnz	___fldiv@new_exp& (0+255),f,b
  4401  001944  2B06               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4402  001946                     l8944:
  4403  001946  0101               	movlb	1	; () banked
  4404  001948  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4405  00194A  EFAF  F00C         	goto	u9531
  4406  00194E  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4407  001950  E108               	bnz	u9530
  4408  001952  2905               	incf	___fldiv@new_exp& (0+255),w,b
  4409  001954  A0D8               	btfss	status,0,c
  4410  001956  EFAF  F00C         	goto	u9531
  4411  00195A  EFB1  F00C         	goto	u9530
  4412  00195E                     u9531:
  4413  00195E  EFBD  F00C         	goto	l8948
  4414  001962                     u9530:
  4415  001962                     
  4416                           ; BSR set to: 1
  4417  001962  0E00               	movlw	0
  4418  001964  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4419  001966  6905               	setf	___fldiv@new_exp& (0+255),b
  4420  001968  0E00               	movlw	0
  4421  00196A  0100               	movlb	0	; () banked
  4422  00196C  6FD4               	movwf	___fldiv@b& (0+255),b
  4423  00196E  0E00               	movlw	0
  4424  001970  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  4425  001972  0E00               	movlw	0
  4426  001974  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  4427  001976  0E00               	movlw	0
  4428  001978  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  4429  00197A                     l8948:
  4430  00197A  0101               	movlb	1	; () banked
  4431  00197C  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4432  00197E  EFCB  F00C         	goto	u9540
  4433  001982  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4434  001984  E106               	bnz	u9541
  4435  001986  0505               	decf	___fldiv@new_exp& (0+255),w,b
  4436  001988  B0D8               	btfsc	status,0,c
  4437  00198A  EFC9  F00C         	goto	u9541
  4438  00198E  EFCB  F00C         	goto	u9540
  4439  001992                     u9541:
  4440  001992  EFDB  F00C         	goto	l8952
  4441  001996                     u9540:
  4442  001996                     
  4443                           ; BSR set to: 1
  4444  001996  0E00               	movlw	0
  4445  001998  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4446  00199A  0E00               	movlw	0
  4447  00199C  6F05               	movwf	___fldiv@new_exp& (0+255),b
  4448  00199E  0E00               	movlw	0
  4449  0019A0  0100               	movlb	0	; () banked
  4450  0019A2  6FD4               	movwf	___fldiv@b& (0+255),b
  4451  0019A4  0E00               	movlw	0
  4452  0019A6  6FD5               	movwf	(___fldiv@b+1)& (0+255),b
  4453  0019A8  0E00               	movlw	0
  4454  0019AA  6FD6               	movwf	(___fldiv@b+2)& (0+255),b
  4455  0019AC  0E00               	movlw	0
  4456  0019AE  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  4457  0019B0  0E00               	movlw	0
  4458  0019B2  0101               	movlb	1	; () banked
  4459  0019B4  6F04               	movwf	___fldiv@sign& (0+255),b
  4460  0019B6                     l8952:
  4461                           
  4462                           ; BSR set to: 1
  4463  0019B6  C105  F10B         	movff	___fldiv@new_exp,___fldiv@bexp
  4464  0019BA                     
  4465                           ; BSR set to: 1
  4466  0019BA  A10B               	btfss	___fldiv@bexp& (0+255),0,b
  4467  0019BC  EFE2  F00C         	goto	u9551
  4468  0019C0  EFE4  F00C         	goto	u9550
  4469  0019C4                     u9551:
  4470  0019C4  EFE8  F00C         	goto	l8958
  4471  0019C8                     u9550:
  4472  0019C8                     
  4473                           ; BSR set to: 1
  4474  0019C8  0100               	movlb	0	; () banked
  4475  0019CA  8FD6               	bsf	(___fldiv@b+2)& (0+255),7,b
  4476  0019CC  EFEA  F00C         	goto	l8960
  4477  0019D0                     l8958:
  4478                           
  4479                           ; BSR set to: 1
  4480  0019D0  0100               	movlb	0	; () banked
  4481  0019D2  9FD6               	bcf	(___fldiv@b+2)& (0+255),7,b
  4482  0019D4                     l8960:
  4483                           
  4484                           ; BSR set to: 0
  4485  0019D4  0101               	movlb	1	; () banked
  4486  0019D6  90D8               	bcf	status,0,c
  4487  0019D8  310B               	rrcf	___fldiv@bexp& (0+255),w,b
  4488  0019DA  0100               	movlb	0	; () banked
  4489  0019DC  6FD7               	movwf	(___fldiv@b+3)& (0+255),b
  4490  0019DE  EF6B  F00B         	goto	l8874
  4491  0019E2                     l2294:
  4492                           
  4493                           ; BSR set to: 0
  4494  0019E2  0012               	return		;funcret
  4495  0019E4                     __end_of___fldiv:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function ___fladd *****************
  4499 ;; Defined at:
  4500 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  b               4   22[BANK0 ] unsigned char 
  4503 ;;  a               4   26[BANK0 ] unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  grs             1   20[BANK1 ] unsigned char 
  4506 ;;  bexp            1   19[BANK1 ] unsigned char 
  4507 ;;  aexp            1   18[BANK1 ] unsigned char 
  4508 ;;  signs           1   17[BANK1 ] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  4   22[BANK0 ] unsigned char 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4518 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Totals:         0       8       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;Total ram usage:       16 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:   10
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_async_config_baud_rate_gen
  4529 ;;		_Servo_SetAngle
  4530 ;;		_CCP_PWM_Mode_Config
  4531 ;;		_I2C_Master_Mode_Clock_Configurations
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text18
  4536  001058                     __ptext18:
  4537                           	callstack 0
  4538  001058                     ___fladd:
  4539                           	callstack 17
  4540  001058  0100               	movlb	0	; () banked
  4541  00105A  51E3               	movf	(___fladd@b+3)& (0+255),w,b
  4542  00105C  0B80               	andlw	128
  4543  00105E  0101               	movlb	1	; () banked
  4544  001060  6F11               	movwf	___fladd@signs& (0+255),b
  4545  001062  0100               	movlb	0	; () banked
  4546  001064  51E3               	movf	(___fladd@b+3)& (0+255),w,b
  4547  001066  25E3               	addwf	(___fladd@b+3)& (0+255),w,b
  4548  001068  0101               	movlb	1	; () banked
  4549  00106A  6F13               	movwf	___fladd@bexp& (0+255),b
  4550  00106C                     
  4551                           ; BSR set to: 1
  4552  00106C  0100               	movlb	0	; () banked
  4553  00106E  AFE2               	btfss	(___fladd@b+2)& (0+255),7,b
  4554  001070  EF3C  F008         	goto	u8941
  4555  001074  EF3E  F008         	goto	u8940
  4556  001078                     u8941:
  4557  001078  EF40  F008         	goto	l8634
  4558  00107C                     u8940:
  4559  00107C                     
  4560                           ; BSR set to: 0
  4561  00107C  0101               	movlb	1	; () banked
  4562  00107E  8113               	bsf	___fladd@bexp& (0+255),0,b
  4563  001080                     l8634:
  4564  001080  0101               	movlb	1	; () banked
  4565  001082  5113               	movf	___fladd@bexp& (0+255),w,b
  4566  001084  B4D8               	btfsc	status,2,c
  4567  001086  EF47  F008         	goto	u8951
  4568  00108A  EF49  F008         	goto	u8950
  4569  00108E                     u8951:
  4570  00108E  EF60  F008         	goto	l8644
  4571  001092                     u8950:
  4572  001092                     
  4573                           ; BSR set to: 1
  4574  001092  2913               	incf	___fladd@bexp& (0+255),w,b
  4575  001094  A4D8               	btfss	status,2,c
  4576  001096  EF4F  F008         	goto	u8961
  4577  00109A  EF51  F008         	goto	u8960
  4578  00109E                     u8961:
  4579  00109E  EF5A  F008         	goto	l8640
  4580  0010A2                     u8960:
  4581  0010A2                     
  4582                           ; BSR set to: 1
  4583  0010A2  0E00               	movlw	0
  4584  0010A4  0100               	movlb	0	; () banked
  4585  0010A6  6FE0               	movwf	___fladd@b& (0+255),b
  4586  0010A8  0E00               	movlw	0
  4587  0010AA  6FE1               	movwf	(___fladd@b+1)& (0+255),b
  4588  0010AC  0E00               	movlw	0
  4589  0010AE  6FE2               	movwf	(___fladd@b+2)& (0+255),b
  4590  0010B0  0E00               	movlw	0
  4591  0010B2  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  4592  0010B4                     l8640:
  4593  0010B4  0100               	movlb	0	; () banked
  4594  0010B6  8FE2               	bsf	(___fladd@b+2)& (0+255),7,b
  4595  0010B8                     
  4596                           ; BSR set to: 0
  4597  0010B8  0E00               	movlw	0
  4598  0010BA  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  4599  0010BC  EF69  F008         	goto	l8646
  4600  0010C0                     l8644:
  4601                           
  4602                           ; BSR set to: 1
  4603  0010C0  0E00               	movlw	0
  4604  0010C2  0100               	movlb	0	; () banked
  4605  0010C4  6FE0               	movwf	___fladd@b& (0+255),b
  4606  0010C6  0E00               	movlw	0
  4607  0010C8  6FE1               	movwf	(___fladd@b+1)& (0+255),b
  4608  0010CA  0E00               	movlw	0
  4609  0010CC  6FE2               	movwf	(___fladd@b+2)& (0+255),b
  4610  0010CE  0E00               	movlw	0
  4611  0010D0  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  4612  0010D2                     l8646:
  4613                           
  4614                           ; BSR set to: 0
  4615  0010D2  51E7               	movf	(___fladd@a+3)& (0+255),w,b
  4616  0010D4  0B80               	andlw	128
  4617  0010D6  0101               	movlb	1	; () banked
  4618  0010D8  6F12               	movwf	___fladd@aexp& (0+255),b
  4619  0010DA                     
  4620                           ; BSR set to: 1
  4621  0010DA  5111               	movf	___fladd@signs& (0+255),w,b
  4622  0010DC  1912               	xorwf	___fladd@aexp& (0+255),w,b
  4623  0010DE  B4D8               	btfsc	status,2,c
  4624  0010E0  EF74  F008         	goto	u8971
  4625  0010E4  EF76  F008         	goto	u8970
  4626  0010E8                     u8971:
  4627  0010E8  EF77  F008         	goto	l8652
  4628  0010EC                     u8970:
  4629  0010EC                     
  4630                           ; BSR set to: 1
  4631  0010EC  8D11               	bsf	___fladd@signs& (0+255),6,b
  4632  0010EE                     l8652:
  4633                           
  4634                           ; BSR set to: 1
  4635  0010EE  0100               	movlb	0	; () banked
  4636  0010F0  51E7               	movf	(___fladd@a+3)& (0+255),w,b
  4637  0010F2  25E7               	addwf	(___fladd@a+3)& (0+255),w,b
  4638  0010F4  0101               	movlb	1	; () banked
  4639  0010F6  6F12               	movwf	___fladd@aexp& (0+255),b
  4640  0010F8                     
  4641                           ; BSR set to: 1
  4642  0010F8  0100               	movlb	0	; () banked
  4643  0010FA  AFE6               	btfss	(___fladd@a+2)& (0+255),7,b
  4644  0010FC  EF82  F008         	goto	u8981
  4645  001100  EF84  F008         	goto	u8980
  4646  001104                     u8981:
  4647  001104  EF86  F008         	goto	l8658
  4648  001108                     u8980:
  4649  001108                     
  4650                           ; BSR set to: 0
  4651  001108  0101               	movlb	1	; () banked
  4652  00110A  8112               	bsf	___fladd@aexp& (0+255),0,b
  4653  00110C                     l8658:
  4654  00110C  0101               	movlb	1	; () banked
  4655  00110E  5112               	movf	___fladd@aexp& (0+255),w,b
  4656  001110  B4D8               	btfsc	status,2,c
  4657  001112  EF8D  F008         	goto	u8991
  4658  001116  EF8F  F008         	goto	u8990
  4659  00111A                     u8991:
  4660  00111A  EFA6  F008         	goto	l8668
  4661  00111E                     u8990:
  4662  00111E                     
  4663                           ; BSR set to: 1
  4664  00111E  2912               	incf	___fladd@aexp& (0+255),w,b
  4665  001120  A4D8               	btfss	status,2,c
  4666  001122  EF95  F008         	goto	u9001
  4667  001126  EF97  F008         	goto	u9000
  4668  00112A                     u9001:
  4669  00112A  EFA0  F008         	goto	l8664
  4670  00112E                     u9000:
  4671  00112E                     
  4672                           ; BSR set to: 1
  4673  00112E  0E00               	movlw	0
  4674  001130  0100               	movlb	0	; () banked
  4675  001132  6FE4               	movwf	___fladd@a& (0+255),b
  4676  001134  0E00               	movlw	0
  4677  001136  6FE5               	movwf	(___fladd@a+1)& (0+255),b
  4678  001138  0E00               	movlw	0
  4679  00113A  6FE6               	movwf	(___fladd@a+2)& (0+255),b
  4680  00113C  0E00               	movlw	0
  4681  00113E  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  4682  001140                     l8664:
  4683  001140  0100               	movlb	0	; () banked
  4684  001142  8FE6               	bsf	(___fladd@a+2)& (0+255),7,b
  4685  001144                     
  4686                           ; BSR set to: 0
  4687  001144  0E00               	movlw	0
  4688  001146  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  4689  001148  EFAF  F008         	goto	l8670
  4690  00114C                     l8668:
  4691                           
  4692                           ; BSR set to: 1
  4693  00114C  0E00               	movlw	0
  4694  00114E  0100               	movlb	0	; () banked
  4695  001150  6FE4               	movwf	___fladd@a& (0+255),b
  4696  001152  0E00               	movlw	0
  4697  001154  6FE5               	movwf	(___fladd@a+1)& (0+255),b
  4698  001156  0E00               	movlw	0
  4699  001158  6FE6               	movwf	(___fladd@a+2)& (0+255),b
  4700  00115A  0E00               	movlw	0
  4701  00115C  6FE7               	movwf	(___fladd@a+3)& (0+255),b
  4702  00115E                     l8670:
  4703                           
  4704                           ; BSR set to: 0
  4705  00115E  0101               	movlb	1	; () banked
  4706  001160  5113               	movf	___fladd@bexp& (0+255),w,b
  4707  001162  5D12               	subwf	___fladd@aexp& (0+255),w,b
  4708  001164  B0D8               	btfsc	status,0,c
  4709  001166  EFB7  F008         	goto	u9011
  4710  00116A  EFB9  F008         	goto	u9010
  4711  00116E                     u9011:
  4712  00116E  EFE0  F008         	goto	l8706
  4713  001172                     u9010:
  4714  001172                     
  4715                           ; BSR set to: 1
  4716  001172  AD11               	btfss	___fladd@signs& (0+255),6,b
  4717  001174  EFBE  F008         	goto	u9021
  4718  001178  EFC0  F008         	goto	u9020
  4719  00117C                     u9021:
  4720  00117C  EFC2  F008         	goto	l8676
  4721  001180                     u9020:
  4722  001180                     
  4723                           ; BSR set to: 1
  4724  001180  0E80               	movlw	128
  4725  001182  1B11               	xorwf	___fladd@signs& (0+255),f,b
  4726  001184                     l8676:
  4727                           
  4728                           ; BSR set to: 1
  4729  001184  C113  F114         	movff	___fladd@bexp,___fladd@grs
  4730  001188                     
  4731                           ; BSR set to: 1
  4732  001188  C112  F113         	movff	___fladd@aexp,___fladd@bexp
  4733  00118C                     
  4734                           ; BSR set to: 1
  4735  00118C  C114  F112         	movff	___fladd@grs,___fladd@aexp
  4736  001190                     
  4737                           ; BSR set to: 1
  4738  001190  C0E0  F114         	movff	___fladd@b,___fladd@grs
  4739  001194                     
  4740                           ; BSR set to: 1
  4741  001194  C0E4  F0E0         	movff	___fladd@a,___fladd@b
  4742  001198                     
  4743                           ; BSR set to: 1
  4744  001198  C114  F0E4         	movff	___fladd@grs,___fladd@a
  4745  00119C                     
  4746                           ; BSR set to: 1
  4747  00119C  C0E1  F114         	movff	___fladd@b+1,___fladd@grs
  4748  0011A0                     
  4749                           ; BSR set to: 1
  4750  0011A0  C0E5  F0E1         	movff	___fladd@a+1,___fladd@b+1
  4751  0011A4                     
  4752                           ; BSR set to: 1
  4753  0011A4  C114  F0E5         	movff	___fladd@grs,___fladd@a+1
  4754  0011A8                     
  4755                           ; BSR set to: 1
  4756  0011A8  C0E2  F114         	movff	___fladd@b+2,___fladd@grs
  4757  0011AC                     
  4758                           ; BSR set to: 1
  4759  0011AC  C0E6  F0E2         	movff	___fladd@a+2,___fladd@b+2
  4760  0011B0                     
  4761                           ; BSR set to: 1
  4762  0011B0  C114  F0E6         	movff	___fladd@grs,___fladd@a+2
  4763  0011B4                     
  4764                           ; BSR set to: 1
  4765  0011B4  C0E3  F114         	movff	___fladd@b+3,___fladd@grs
  4766  0011B8                     
  4767                           ; BSR set to: 1
  4768  0011B8  C0E7  F0E3         	movff	___fladd@a+3,___fladd@b+3
  4769  0011BC                     
  4770                           ; BSR set to: 1
  4771  0011BC  C114  F0E7         	movff	___fladd@grs,___fladd@a+3
  4772  0011C0                     l8706:
  4773                           
  4774                           ; BSR set to: 1
  4775  0011C0  0E00               	movlw	0
  4776  0011C2  6F14               	movwf	___fladd@grs& (0+255),b
  4777  0011C4                     
  4778                           ; BSR set to: 1
  4779  0011C4  5113               	movf	___fladd@bexp& (0+255),w,b
  4780  0011C6  C112  F10D         	movff	___fladd@aexp,??___fladd
  4781  0011CA  6B0E               	clrf	(??___fladd+1)& (0+255),b
  4782  0011CC  5F0D               	subwf	??___fladd& (0+255),f,b
  4783  0011CE  0E00               	movlw	0
  4784  0011D0  5B0E               	subwfb	(??___fladd+1)& (0+255),f,b
  4785  0011D2  BF0E               	btfsc	(??___fladd+1)& (0+255),7,b
  4786  0011D4  EFF5  F008         	goto	u9031
  4787  0011D8  510E               	movf	(??___fladd+1)& (0+255),w,b
  4788  0011DA  E109               	bnz	u9030
  4789  0011DC  0E1A               	movlw	26
  4790  0011DE  5D0D               	subwf	??___fladd& (0+255),w,b
  4791  0011E0  A0D8               	btfss	status,0,c
  4792  0011E2  EFF5  F008         	goto	u9031
  4793  0011E6  EFF7  F008         	goto	u9030
  4794  0011EA                     u9031:
  4795  0011EA  EF35  F009         	goto	l2241
  4796  0011EE                     u9030:
  4797  0011EE                     
  4798                           ; BSR set to: 1
  4799  0011EE  0100               	movlb	0	; () banked
  4800  0011F0  51E0               	movf	___fladd@b& (0+255),w,b
  4801  0011F2  11E1               	iorwf	(___fladd@b+1)& (0+255),w,b
  4802  0011F4  11E2               	iorwf	(___fladd@b+2)& (0+255),w,b
  4803  0011F6  11E3               	iorwf	(___fladd@b+3)& (0+255),w,b
  4804  0011F8  A4D8               	btfss	status,2,c
  4805  0011FA  EF01  F009         	goto	u9041
  4806  0011FE  EF04  F009         	goto	u9040
  4807  001202                     u9041:
  4808  001202  0E01               	movlw	1
  4809  001204  EF05  F009         	goto	u9050
  4810  001208                     u9040:
  4811  001208  0E00               	movlw	0
  4812  00120A                     u9050:
  4813  00120A  0101               	movlb	1	; () banked
  4814  00120C  6F14               	movwf	___fladd@grs& (0+255),b
  4815  00120E                     
  4816                           ; BSR set to: 1
  4817  00120E  0E00               	movlw	0
  4818  001210  0100               	movlb	0	; () banked
  4819  001212  6FE0               	movwf	___fladd@b& (0+255),b
  4820  001214  0E00               	movlw	0
  4821  001216  6FE1               	movwf	(___fladd@b+1)& (0+255),b
  4822  001218  0E00               	movlw	0
  4823  00121A  6FE2               	movwf	(___fladd@b+2)& (0+255),b
  4824  00121C  0E00               	movlw	0
  4825  00121E  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  4826  001220                     
  4827                           ; BSR set to: 0
  4828  001220  C112  F113         	movff	___fladd@aexp,___fladd@bexp
  4829  001224  EF3E  F009         	goto	l2240
  4830  001228                     l2242:
  4831                           
  4832                           ; BSR set to: 1
  4833  001228  A114               	btfss	___fladd@grs& (0+255),0,b
  4834  00122A  EF19  F009         	goto	u9061
  4835  00122E  EF1B  F009         	goto	u9060
  4836  001232                     u9061:
  4837  001232  EF21  F009         	goto	l8718
  4838  001236                     u9060:
  4839  001236                     
  4840                           ; BSR set to: 1
  4841  001236  90D8               	bcf	status,0,c
  4842  001238  3114               	rrcf	___fladd@grs& (0+255),w,b
  4843  00123A  0901               	iorlw	1
  4844  00123C  6F14               	movwf	___fladd@grs& (0+255),b
  4845  00123E  EF23  F009         	goto	l8720
  4846  001242                     l8718:
  4847                           
  4848                           ; BSR set to: 1
  4849  001242  90D8               	bcf	status,0,c
  4850  001244  3314               	rrcf	___fladd@grs& (0+255),f,b
  4851  001246                     l8720:
  4852                           
  4853                           ; BSR set to: 1
  4854  001246  0100               	movlb	0	; () banked
  4855  001248  A1E0               	btfss	___fladd@b& (0+255),0,b
  4856  00124A  EF29  F009         	goto	u9071
  4857  00124E  EF2B  F009         	goto	u9070
  4858  001252                     u9071:
  4859  001252  EF2D  F009         	goto	l8724
  4860  001256                     u9070:
  4861  001256                     
  4862                           ; BSR set to: 0
  4863  001256  0101               	movlb	1	; () banked
  4864  001258  8F14               	bsf	___fladd@grs& (0+255),7,b
  4865  00125A                     l8724:
  4866  00125A  0100               	movlb	0	; () banked
  4867  00125C  35E3               	rlcf	(___fladd@b+3)& (0+255),w,b
  4868  00125E  33E3               	rrcf	(___fladd@b+3)& (0+255),f,b
  4869  001260  33E2               	rrcf	(___fladd@b+2)& (0+255),f,b
  4870  001262  33E1               	rrcf	(___fladd@b+1)& (0+255),f,b
  4871  001264  33E0               	rrcf	___fladd@b& (0+255),f,b
  4872  001266                     
  4873                           ; BSR set to: 0
  4874  001266  0101               	movlb	1	; () banked
  4875  001268  2B13               	incf	___fladd@bexp& (0+255),f,b
  4876  00126A                     l2241:
  4877                           
  4878                           ; BSR set to: 1
  4879  00126A  5112               	movf	___fladd@aexp& (0+255),w,b
  4880  00126C  5D13               	subwf	___fladd@bexp& (0+255),w,b
  4881  00126E  A0D8               	btfss	status,0,c
  4882  001270  EF3C  F009         	goto	u9081
  4883  001274  EF3E  F009         	goto	u9080
  4884  001278                     u9081:
  4885  001278  EF14  F009         	goto	l2242
  4886  00127C                     u9080:
  4887  00127C                     l2240:
  4888  00127C  0101               	movlb	1	; () banked
  4889  00127E  BD11               	btfsc	___fladd@signs& (0+255),6,b
  4890  001280  EF44  F009         	goto	u9091
  4891  001284  EF46  F009         	goto	u9090
  4892  001288                     u9091:
  4893  001288  EF8D  F009         	goto	l8752
  4894  00128C                     u9090:
  4895  00128C                     
  4896                           ; BSR set to: 1
  4897  00128C  5113               	movf	___fladd@bexp& (0+255),w,b
  4898  00128E  A4D8               	btfss	status,2,c
  4899  001290  EF4C  F009         	goto	u9101
  4900  001294  EF4E  F009         	goto	u9100
  4901  001298                     u9101:
  4902  001298  EF59  F009         	goto	l8734
  4903  00129C                     u9100:
  4904  00129C                     
  4905                           ; BSR set to: 1
  4906  00129C  0E00               	movlw	0
  4907  00129E  0100               	movlb	0	; () banked
  4908  0012A0  6FE0               	movwf	?___fladd& (0+255),b
  4909  0012A2  0E00               	movlw	0
  4910  0012A4  6FE1               	movwf	(?___fladd+1)& (0+255),b
  4911  0012A6  0E00               	movlw	0
  4912  0012A8  6FE2               	movwf	(?___fladd+2)& (0+255),b
  4913  0012AA  0E00               	movlw	0
  4914  0012AC  6FE3               	movwf	(?___fladd+3)& (0+255),b
  4915  0012AE  EFDA  F00A         	goto	l2249
  4916  0012B2                     l8734:
  4917                           
  4918                           ; BSR set to: 1
  4919  0012B2  0100               	movlb	0	; () banked
  4920  0012B4  51E4               	movf	___fladd@a& (0+255),w,b
  4921  0012B6  27E0               	addwf	___fladd@b& (0+255),f,b
  4922  0012B8  51E5               	movf	(___fladd@a+1)& (0+255),w,b
  4923  0012BA  23E1               	addwfc	(___fladd@b+1)& (0+255),f,b
  4924  0012BC  51E6               	movf	(___fladd@a+2)& (0+255),w,b
  4925  0012BE  23E2               	addwfc	(___fladd@b+2)& (0+255),f,b
  4926  0012C0  51E7               	movf	(___fladd@a+3)& (0+255),w,b
  4927  0012C2  23E3               	addwfc	(___fladd@b+3)& (0+255),f,b
  4928  0012C4                     
  4929                           ; BSR set to: 0
  4930  0012C4  A1E3               	btfss	(___fladd@b+3)& (0+255),0,b
  4931  0012C6  EF67  F009         	goto	u9111
  4932  0012CA  EF69  F009         	goto	u9110
  4933  0012CE                     u9111:
  4934  0012CE  EF37  F00A         	goto	l8788
  4935  0012D2                     u9110:
  4936  0012D2                     
  4937                           ; BSR set to: 0
  4938  0012D2  0101               	movlb	1	; () banked
  4939  0012D4  A114               	btfss	___fladd@grs& (0+255),0,b
  4940  0012D6  EF6F  F009         	goto	u9121
  4941  0012DA  EF71  F009         	goto	u9120
  4942  0012DE                     u9121:
  4943  0012DE  EF77  F009         	goto	l8742
  4944  0012E2                     u9120:
  4945  0012E2                     
  4946                           ; BSR set to: 1
  4947  0012E2  90D8               	bcf	status,0,c
  4948  0012E4  3114               	rrcf	___fladd@grs& (0+255),w,b
  4949  0012E6  0901               	iorlw	1
  4950  0012E8  6F14               	movwf	___fladd@grs& (0+255),b
  4951  0012EA  EF79  F009         	goto	l8744
  4952  0012EE                     l8742:
  4953                           
  4954                           ; BSR set to: 1
  4955  0012EE  90D8               	bcf	status,0,c
  4956  0012F0  3314               	rrcf	___fladd@grs& (0+255),f,b
  4957  0012F2                     l8744:
  4958                           
  4959                           ; BSR set to: 1
  4960  0012F2  0100               	movlb	0	; () banked
  4961  0012F4  A1E0               	btfss	___fladd@b& (0+255),0,b
  4962  0012F6  EF7F  F009         	goto	u9131
  4963  0012FA  EF81  F009         	goto	u9130
  4964  0012FE                     u9131:
  4965  0012FE  EF83  F009         	goto	l8748
  4966  001302                     u9130:
  4967  001302                     
  4968                           ; BSR set to: 0
  4969  001302  0101               	movlb	1	; () banked
  4970  001304  8F14               	bsf	___fladd@grs& (0+255),7,b
  4971  001306                     l8748:
  4972  001306  0100               	movlb	0	; () banked
  4973  001308  35E3               	rlcf	(___fladd@b+3)& (0+255),w,b
  4974  00130A  33E3               	rrcf	(___fladd@b+3)& (0+255),f,b
  4975  00130C  33E2               	rrcf	(___fladd@b+2)& (0+255),f,b
  4976  00130E  33E1               	rrcf	(___fladd@b+1)& (0+255),f,b
  4977  001310  33E0               	rrcf	___fladd@b& (0+255),f,b
  4978  001312                     
  4979                           ; BSR set to: 0
  4980  001312  0101               	movlb	1	; () banked
  4981  001314  2B13               	incf	___fladd@bexp& (0+255),f,b
  4982  001316  EF37  F00A         	goto	l8788
  4983  00131A                     l8752:
  4984                           
  4985                           ; BSR set to: 1
  4986  00131A  0100               	movlb	0	; () banked
  4987  00131C  51E4               	movf	___fladd@a& (0+255),w,b
  4988  00131E  5DE0               	subwf	___fladd@b& (0+255),w,b
  4989  001320  51E5               	movf	(___fladd@a+1)& (0+255),w,b
  4990  001322  59E1               	subwfb	(___fladd@b+1)& (0+255),w,b
  4991  001324  51E6               	movf	(___fladd@a+2)& (0+255),w,b
  4992  001326  59E2               	subwfb	(___fladd@b+2)& (0+255),w,b
  4993  001328  51E3               	movf	(___fladd@b+3)& (0+255),w,b
  4994  00132A  0A80               	xorlw	128
  4995  00132C  0101               	movlb	1	; () banked
  4996  00132E  6F0D               	movwf	??___fladd& (0+255),b
  4997  001330  0100               	movlb	0	; () banked
  4998  001332  51E7               	movf	(___fladd@a+3)& (0+255),w,b
  4999  001334  0A80               	xorlw	128
  5000  001336  0101               	movlb	1	; () banked
  5001  001338  590D               	subwfb	??___fladd& (0+255),w,b
  5002  00133A  B0D8               	btfsc	status,0,c
  5003  00133C  EFA2  F009         	goto	u9141
  5004  001340  EFA4  F009         	goto	u9140
  5005  001344                     u9141:
  5006  001344  EFE0  F009         	goto	l8762
  5007  001348                     u9140:
  5008  001348                     
  5009                           ; BSR set to: 1
  5010  001348  0100               	movlb	0	; () banked
  5011  00134A  51E0               	movf	___fladd@b& (0+255),w,b
  5012  00134C  5DE4               	subwf	___fladd@a& (0+255),w,b
  5013  00134E  0101               	movlb	1	; () banked
  5014  001350  6F0D               	movwf	??___fladd& (0+255),b
  5015  001352  0100               	movlb	0	; () banked
  5016  001354  51E1               	movf	(___fladd@b+1)& (0+255),w,b
  5017  001356  59E5               	subwfb	(___fladd@a+1)& (0+255),w,b
  5018  001358  0101               	movlb	1	; () banked
  5019  00135A  6F0E               	movwf	(??___fladd+1)& (0+255),b
  5020  00135C  0100               	movlb	0	; () banked
  5021  00135E  51E2               	movf	(___fladd@b+2)& (0+255),w,b
  5022  001360  59E6               	subwfb	(___fladd@a+2)& (0+255),w,b
  5023  001362  0101               	movlb	1	; () banked
  5024  001364  6F0F               	movwf	(??___fladd+2)& (0+255),b
  5025  001366  0100               	movlb	0	; () banked
  5026  001368  51E3               	movf	(___fladd@b+3)& (0+255),w,b
  5027  00136A  59E7               	subwfb	(___fladd@a+3)& (0+255),w,b
  5028  00136C  0101               	movlb	1	; () banked
  5029  00136E  6F10               	movwf	(??___fladd+3)& (0+255),b
  5030  001370  0EFF               	movlw	255
  5031  001372  250D               	addwf	??___fladd& (0+255),w,b
  5032  001374  0100               	movlb	0	; () banked
  5033  001376  6FE0               	movwf	___fladd@b& (0+255),b
  5034  001378  0EFF               	movlw	255
  5035  00137A  0101               	movlb	1	; () banked
  5036  00137C  210E               	addwfc	(??___fladd+1)& (0+255),w,b
  5037  00137E  0100               	movlb	0	; () banked
  5038  001380  6FE1               	movwf	(___fladd@b+1)& (0+255),b
  5039  001382  0EFF               	movlw	255
  5040  001384  0101               	movlb	1	; () banked
  5041  001386  210F               	addwfc	(??___fladd+2)& (0+255),w,b
  5042  001388  0100               	movlb	0	; () banked
  5043  00138A  6FE2               	movwf	(___fladd@b+2)& (0+255),b
  5044  00138C  0EFF               	movlw	255
  5045  00138E  0101               	movlb	1	; () banked
  5046  001390  2110               	addwfc	(??___fladd+3)& (0+255),w,b
  5047  001392  0100               	movlb	0	; () banked
  5048  001394  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  5049  001396  0E80               	movlw	128
  5050  001398  0101               	movlb	1	; () banked
  5051  00139A  1B11               	xorwf	___fladd@signs& (0+255),f,b
  5052  00139C                     
  5053                           ; BSR set to: 1
  5054  00139C  6D14               	negf	___fladd@grs& (0+255),b
  5055  00139E                     
  5056                           ; BSR set to: 1
  5057  00139E  5114               	movf	___fladd@grs& (0+255),w,b
  5058  0013A0  A4D8               	btfss	status,2,c
  5059  0013A2  EFD5  F009         	goto	u9151
  5060  0013A6  EFD7  F009         	goto	u9150
  5061  0013AA                     u9151:
  5062  0013AA  EFE9  F009         	goto	l2257
  5063  0013AE                     u9150:
  5064  0013AE                     
  5065                           ; BSR set to: 1
  5066  0013AE  0E01               	movlw	1
  5067  0013B0  0100               	movlb	0	; () banked
  5068  0013B2  27E0               	addwf	___fladd@b& (0+255),f,b
  5069  0013B4  0E00               	movlw	0
  5070  0013B6  23E1               	addwfc	(___fladd@b+1)& (0+255),f,b
  5071  0013B8  23E2               	addwfc	(___fladd@b+2)& (0+255),f,b
  5072  0013BA  23E3               	addwfc	(___fladd@b+3)& (0+255),f,b
  5073  0013BC  EFE9  F009         	goto	l2257
  5074  0013C0                     l8762:
  5075                           
  5076                           ; BSR set to: 1
  5077  0013C0  0100               	movlb	0	; () banked
  5078  0013C2  51E4               	movf	___fladd@a& (0+255),w,b
  5079  0013C4  5FE0               	subwf	___fladd@b& (0+255),f,b
  5080  0013C6  51E5               	movf	(___fladd@a+1)& (0+255),w,b
  5081  0013C8  5BE1               	subwfb	(___fladd@b+1)& (0+255),f,b
  5082  0013CA  51E6               	movf	(___fladd@a+2)& (0+255),w,b
  5083  0013CC  5BE2               	subwfb	(___fladd@b+2)& (0+255),f,b
  5084  0013CE  51E7               	movf	(___fladd@a+3)& (0+255),w,b
  5085  0013D0  5BE3               	subwfb	(___fladd@b+3)& (0+255),f,b
  5086  0013D2                     l2257:
  5087  0013D2  0100               	movlb	0	; () banked
  5088  0013D4  51E0               	movf	___fladd@b& (0+255),w,b
  5089  0013D6  11E1               	iorwf	(___fladd@b+1)& (0+255),w,b
  5090  0013D8  11E2               	iorwf	(___fladd@b+2)& (0+255),w,b
  5091  0013DA  11E3               	iorwf	(___fladd@b+3)& (0+255),w,b
  5092  0013DC  A4D8               	btfss	status,2,c
  5093  0013DE  EFF3  F009         	goto	u9161
  5094  0013E2  EFF5  F009         	goto	u9160
  5095  0013E6                     u9161:
  5096  0013E6  EF2F  F00A         	goto	l8786
  5097  0013EA                     u9160:
  5098  0013EA                     
  5099                           ; BSR set to: 0
  5100  0013EA  0101               	movlb	1	; () banked
  5101  0013EC  5114               	movf	___fladd@grs& (0+255),w,b
  5102  0013EE  A4D8               	btfss	status,2,c
  5103  0013F0  EFFC  F009         	goto	u9171
  5104  0013F4  EFFE  F009         	goto	u9170
  5105  0013F8                     u9171:
  5106  0013F8  EF2F  F00A         	goto	l8786
  5107  0013FC                     u9170:
  5108  0013FC                     
  5109                           ; BSR set to: 1
  5110  0013FC  0E00               	movlw	0
  5111  0013FE  0100               	movlb	0	; () banked
  5112  001400  6FE0               	movwf	?___fladd& (0+255),b
  5113  001402  0E00               	movlw	0
  5114  001404  6FE1               	movwf	(?___fladd+1)& (0+255),b
  5115  001406  0E00               	movlw	0
  5116  001408  6FE2               	movwf	(?___fladd+2)& (0+255),b
  5117  00140A  0E00               	movlw	0
  5118  00140C  6FE3               	movwf	(?___fladd+3)& (0+255),b
  5119  00140E  EFDA  F00A         	goto	l2249
  5120  001412                     l8770:
  5121                           
  5122                           ; BSR set to: 0
  5123  001412  90D8               	bcf	status,0,c
  5124  001414  37E0               	rlcf	___fladd@b& (0+255),f,b
  5125  001416  37E1               	rlcf	(___fladd@b+1)& (0+255),f,b
  5126  001418  37E2               	rlcf	(___fladd@b+2)& (0+255),f,b
  5127  00141A  37E3               	rlcf	(___fladd@b+3)& (0+255),f,b
  5128  00141C                     
  5129                           ; BSR set to: 0
  5130  00141C  0101               	movlb	1	; () banked
  5131  00141E  AF14               	btfss	___fladd@grs& (0+255),7,b
  5132  001420  EF14  F00A         	goto	u9181
  5133  001424  EF16  F00A         	goto	u9180
  5134  001428                     u9181:
  5135  001428  EF18  F00A         	goto	l8776
  5136  00142C                     u9180:
  5137  00142C                     
  5138                           ; BSR set to: 1
  5139  00142C  0100               	movlb	0	; () banked
  5140  00142E  81E0               	bsf	___fladd@b& (0+255),0,b
  5141  001430                     l8776:
  5142  001430  0101               	movlb	1	; () banked
  5143  001432  A114               	btfss	___fladd@grs& (0+255),0,b
  5144  001434  EF1E  F00A         	goto	u9191
  5145  001438  EF20  F00A         	goto	u9190
  5146  00143C                     u9191:
  5147  00143C  EF24  F00A         	goto	l8780
  5148  001440                     u9190:
  5149  001440                     
  5150                           ; BSR set to: 1
  5151  001440  80D8               	bsf	status,0,c
  5152  001442  3714               	rlcf	___fladd@grs& (0+255),f,b
  5153  001444  EF26  F00A         	goto	l8782
  5154  001448                     l8780:
  5155                           
  5156                           ; BSR set to: 1
  5157  001448  90D8               	bcf	status,0,c
  5158  00144A  3714               	rlcf	___fladd@grs& (0+255),f,b
  5159  00144C                     l8782:
  5160                           
  5161                           ; BSR set to: 1
  5162  00144C  5113               	movf	___fladd@bexp& (0+255),w,b
  5163  00144E  B4D8               	btfsc	status,2,c
  5164  001450  EF2C  F00A         	goto	u9201
  5165  001454  EF2E  F00A         	goto	u9200
  5166  001458                     u9201:
  5167  001458  EF2F  F00A         	goto	l8786
  5168  00145C                     u9200:
  5169  00145C                     
  5170                           ; BSR set to: 1
  5171  00145C  0713               	decf	___fladd@bexp& (0+255),f,b
  5172  00145E                     l8786:
  5173  00145E  0100               	movlb	0	; () banked
  5174  001460  AFE2               	btfss	(___fladd@b+2)& (0+255),7,b
  5175  001462  EF35  F00A         	goto	u9211
  5176  001466  EF37  F00A         	goto	u9210
  5177  00146A                     u9211:
  5178  00146A  EF09  F00A         	goto	l8770
  5179  00146E                     u9210:
  5180  00146E                     l8788:
  5181  00146E  0E00               	movlw	0
  5182  001470  0101               	movlb	1	; () banked
  5183  001472  6F12               	movwf	___fladd@aexp& (0+255),b
  5184  001474                     
  5185                           ; BSR set to: 1
  5186  001474  AF14               	btfss	___fladd@grs& (0+255),7,b
  5187  001476  EF3F  F00A         	goto	u9221
  5188  00147A  EF41  F00A         	goto	u9220
  5189  00147E                     u9221:
  5190  00147E  EF5B  F00A         	goto	l2266
  5191  001482                     u9220:
  5192  001482                     
  5193                           ; BSR set to: 1
  5194  001482  C114  F10D         	movff	___fladd@grs,??___fladd
  5195  001486  0E7F               	movlw	127
  5196  001488  170D               	andwf	??___fladd& (0+255),f,b
  5197  00148A  B4D8               	btfsc	status,2,c
  5198  00148C  EF4A  F00A         	goto	u9231
  5199  001490  EF4C  F00A         	goto	u9230
  5200  001494                     u9231:
  5201  001494  EF51  F00A         	goto	l2267
  5202  001498                     u9230:
  5203  001498                     l8794:
  5204  001498  0E01               	movlw	1
  5205  00149A  0101               	movlb	1	; () banked
  5206  00149C  6F12               	movwf	___fladd@aexp& (0+255),b
  5207  00149E  EF5B  F00A         	goto	l2266
  5208  0014A2                     l2267:
  5209                           
  5210                           ; BSR set to: 1
  5211  0014A2  0100               	movlb	0	; () banked
  5212  0014A4  A1E0               	btfss	___fladd@b& (0+255),0,b
  5213  0014A6  EF57  F00A         	goto	u9241
  5214  0014AA  EF59  F00A         	goto	u9240
  5215  0014AE                     u9241:
  5216  0014AE  EF5B  F00A         	goto	l2266
  5217  0014B2                     u9240:
  5218  0014B2  EF4C  F00A         	goto	l8794
  5219  0014B6                     l2266:
  5220  0014B6  0101               	movlb	1	; () banked
  5221  0014B8  5112               	movf	___fladd@aexp& (0+255),w,b
  5222  0014BA  B4D8               	btfsc	status,2,c
  5223  0014BC  EF62  F00A         	goto	u9251
  5224  0014C0  EF64  F00A         	goto	u9250
  5225  0014C4                     u9251:
  5226  0014C4  EF91  F00A         	goto	l8806
  5227  0014C8                     u9250:
  5228  0014C8                     
  5229                           ; BSR set to: 1
  5230  0014C8  0E01               	movlw	1
  5231  0014CA  0100               	movlb	0	; () banked
  5232  0014CC  27E0               	addwf	___fladd@b& (0+255),f,b
  5233  0014CE  0E00               	movlw	0
  5234  0014D0  23E1               	addwfc	(___fladd@b+1)& (0+255),f,b
  5235  0014D2  23E2               	addwfc	(___fladd@b+2)& (0+255),f,b
  5236  0014D4  23E3               	addwfc	(___fladd@b+3)& (0+255),f,b
  5237  0014D6                     
  5238                           ; BSR set to: 0
  5239  0014D6  A1E3               	btfss	(___fladd@b+3)& (0+255),0,b
  5240  0014D8  EF70  F00A         	goto	u9261
  5241  0014DC  EF72  F00A         	goto	u9260
  5242  0014E0                     u9261:
  5243  0014E0  EF91  F00A         	goto	l8806
  5244  0014E4                     u9260:
  5245  0014E4                     
  5246                           ; BSR set to: 0
  5247  0014E4  C0E0  F10D         	movff	___fladd@b,??___fladd
  5248  0014E8  C0E1  F10E         	movff	___fladd@b+1,??___fladd+1
  5249  0014EC  C0E2  F10F         	movff	___fladd@b+2,??___fladd+2
  5250  0014F0  C0E3  F110         	movff	___fladd@b+3,??___fladd+3
  5251  0014F4  0101               	movlb	1	; () banked
  5252  0014F6  3510               	rlcf	(??___fladd+3)& (0+255),w,b
  5253  0014F8  3310               	rrcf	(??___fladd+3)& (0+255),f,b
  5254  0014FA  330F               	rrcf	(??___fladd+2)& (0+255),f,b
  5255  0014FC  330E               	rrcf	(??___fladd+1)& (0+255),f,b
  5256  0014FE  330D               	rrcf	??___fladd& (0+255),f,b
  5257  001500  C10D  F0E0         	movff	??___fladd,___fladd@b
  5258  001504  C10E  F0E1         	movff	??___fladd+1,___fladd@b+1
  5259  001508  C10F  F0E2         	movff	??___fladd+2,___fladd@b+2
  5260  00150C  C110  F0E3         	movff	??___fladd+3,___fladd@b+3
  5261  001510  2913               	incf	___fladd@bexp& (0+255),w,b
  5262  001512  B4D8               	btfsc	status,2,c
  5263  001514  EF8E  F00A         	goto	u9271
  5264  001518  EF90  F00A         	goto	u9270
  5265  00151C                     u9271:
  5266  00151C  EF91  F00A         	goto	l8806
  5267  001520                     u9270:
  5268  001520                     
  5269                           ; BSR set to: 1
  5270  001520  2B13               	incf	___fladd@bexp& (0+255),f,b
  5271  001522                     l8806:
  5272  001522  0101               	movlb	1	; () banked
  5273  001524  2913               	incf	___fladd@bexp& (0+255),w,b
  5274  001526  B4D8               	btfsc	status,2,c
  5275  001528  EF98  F00A         	goto	u9281
  5276  00152C  EF9A  F00A         	goto	u9280
  5277  001530                     u9281:
  5278  001530  EFA2  F00A         	goto	l8810
  5279  001534                     u9280:
  5280  001534                     
  5281                           ; BSR set to: 1
  5282  001534  5113               	movf	___fladd@bexp& (0+255),w,b
  5283  001536  A4D8               	btfss	status,2,c
  5284  001538  EFA0  F00A         	goto	u9291
  5285  00153C  EFA2  F00A         	goto	u9290
  5286  001540                     u9291:
  5287  001540  EFB6  F00A         	goto	l8814
  5288  001544                     u9290:
  5289  001544                     l8810:
  5290                           
  5291                           ; BSR set to: 1
  5292  001544  0E00               	movlw	0
  5293  001546  0100               	movlb	0	; () banked
  5294  001548  6FE0               	movwf	___fladd@b& (0+255),b
  5295  00154A  0E00               	movlw	0
  5296  00154C  6FE1               	movwf	(___fladd@b+1)& (0+255),b
  5297  00154E  0E00               	movlw	0
  5298  001550  6FE2               	movwf	(___fladd@b+2)& (0+255),b
  5299  001552  0E00               	movlw	0
  5300  001554  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  5301  001556  0101               	movlb	1	; () banked
  5302  001558  5113               	movf	___fladd@bexp& (0+255),w,b
  5303  00155A  A4D8               	btfss	status,2,c
  5304  00155C  EFB2  F00A         	goto	u9301
  5305  001560  EFB4  F00A         	goto	u9300
  5306  001564                     u9301:
  5307  001564  EFB6  F00A         	goto	l8814
  5308  001568                     u9300:
  5309  001568                     
  5310                           ; BSR set to: 1
  5311  001568  0E00               	movlw	0
  5312  00156A  6F11               	movwf	___fladd@signs& (0+255),b
  5313  00156C                     l8814:
  5314                           
  5315                           ; BSR set to: 1
  5316  00156C  A113               	btfss	___fladd@bexp& (0+255),0,b
  5317  00156E  EFBB  F00A         	goto	u9311
  5318  001572  EFBD  F00A         	goto	u9310
  5319  001576                     u9311:
  5320  001576  EFC1  F00A         	goto	l8818
  5321  00157A                     u9310:
  5322  00157A                     
  5323                           ; BSR set to: 1
  5324  00157A  0100               	movlb	0	; () banked
  5325  00157C  8FE2               	bsf	(___fladd@b+2)& (0+255),7,b
  5326  00157E  EFC3  F00A         	goto	l8820
  5327  001582                     l8818:
  5328                           
  5329                           ; BSR set to: 1
  5330  001582  0100               	movlb	0	; () banked
  5331  001584  9FE2               	bcf	(___fladd@b+2)& (0+255),7,b
  5332  001586                     l8820:
  5333                           
  5334                           ; BSR set to: 0
  5335  001586  0101               	movlb	1	; () banked
  5336  001588  90D8               	bcf	status,0,c
  5337  00158A  3113               	rrcf	___fladd@bexp& (0+255),w,b
  5338  00158C  0100               	movlb	0	; () banked
  5339  00158E  6FE3               	movwf	(___fladd@b+3)& (0+255),b
  5340  001590                     
  5341                           ; BSR set to: 0
  5342  001590  0101               	movlb	1	; () banked
  5343  001592  AF11               	btfss	___fladd@signs& (0+255),7,b
  5344  001594  EFCE  F00A         	goto	u9321
  5345  001598  EFD0  F00A         	goto	u9320
  5346  00159C                     u9321:
  5347  00159C  EFD2  F00A         	goto	l8826
  5348  0015A0                     u9320:
  5349  0015A0                     
  5350                           ; BSR set to: 1
  5351  0015A0  0100               	movlb	0	; () banked
  5352  0015A2  8FE3               	bsf	(___fladd@b+3)& (0+255),7,b
  5353  0015A4                     l8826:
  5354  0015A4  C0E0  F0E0         	movff	___fladd@b,?___fladd
  5355  0015A8  C0E1  F0E1         	movff	___fladd@b+1,?___fladd+1
  5356  0015AC  C0E2  F0E2         	movff	___fladd@b+2,?___fladd+2
  5357  0015B0  C0E3  F0E3         	movff	___fladd@b+3,?___fladd+3
  5358  0015B4                     l2249:
  5359  0015B4  0012               	return		;funcret
  5360  0015B6                     __end_of___fladd:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _async_Tx_config *****************
  5364 ;; Defined at:
  5365 ;;		line 386 in file "MCAL/EUSART/mcal_EUSART.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  _tx_obj         2   41[COMRAM] PTR const struct .
  5368 ;;		 -> _uart_obj(12), 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  ret_val         1   43[COMRAM] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      unsigned char 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        3 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:   10
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_EUSART_Async_Init
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text19
  5395  002D1C                     __ptext19:
  5396                           	callstack 0
  5397  002D1C                     _async_Tx_config:
  5398                           	callstack 18
  5399  002D1C                     
  5400                           ;MCAL/EUSART/mcal_EUSART.c: 386: static Std_ReturnType async_Tx_config(const uart_tx_con
      +                          fig_st *_tx_obj );MCAL/EUSART/mcal_EUSART.c: 387: {;MCAL/EUSART/mcal_EUSART.c: 388:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5401  002D1C  0E01               	movlw	1
  5402  002D1E  6E2C               	movwf	async_Tx_config@ret_val^0,c
  5403  002D20                     
  5404                           ;MCAL/EUSART/mcal_EUSART.c: 390:     if(((void*)0) == _tx_obj)
  5405  002D20  502A               	movf	async_Tx_config@_tx_obj^0,w,c
  5406  002D22  102B               	iorwf	(async_Tx_config@_tx_obj+1)^0,w,c
  5407  002D24  A4D8               	btfss	status,2,c
  5408  002D26  EF97  F016         	goto	u9761
  5409  002D2A  EF99  F016         	goto	u9760
  5410  002D2E                     u9761:
  5411  002D2E  EF9D  F016         	goto	l9130
  5412  002D32                     u9760:
  5413  002D32                     
  5414                           ;MCAL/EUSART/mcal_EUSART.c: 391:     {;MCAL/EUSART/mcal_EUSART.c: 392:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5415  002D32  0E00               	movlw	0
  5416  002D34  6E2C               	movwf	async_Tx_config@ret_val^0,c
  5417                           
  5418                           ;MCAL/EUSART/mcal_EUSART.c: 393:     }
  5419  002D36  EFD4  F016         	goto	l9146
  5420  002D3A                     l9130:
  5421                           
  5422                           ;MCAL/EUSART/mcal_EUSART.c: 395:     {;MCAL/EUSART/mcal_EUSART.c: 396:         if(1 == _
      +                          tx_obj->tx_enable)
  5423  002D3A  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5424  002D3E  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5425  002D42  A4DF               	btfss	indf2,2,c
  5426  002D44  EFA6  F016         	goto	u9771
  5427  002D48  EFA8  F016         	goto	u9770
  5428  002D4C                     u9771:
  5429  002D4C  EFC6  F016         	goto	l9142
  5430  002D50                     u9770:
  5431  002D50                     
  5432                           ;MCAL/EUSART/mcal_EUSART.c: 397:         {;MCAL/EUSART/mcal_EUSART.c: 400:             (
      +                          TXSTAbits.TXEN = 0);
  5433  002D50  9AAC               	bcf	172,5,c	;volatile
  5434  002D52                     
  5435                           ;MCAL/EUSART/mcal_EUSART.c: 406:             if(1 == _tx_obj->tx_9th_bit_en )
  5436  002D52  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5437  002D56  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5438  002D5A  A6DF               	btfss	indf2,3,c
  5439  002D5C  EFB2  F016         	goto	u9781
  5440  002D60  EFB4  F016         	goto	u9780
  5441  002D64                     u9781:
  5442  002D64  EFB7  F016         	goto	l9138
  5443  002D68                     u9780:
  5444  002D68                     
  5445                           ;MCAL/EUSART/mcal_EUSART.c: 407:             {;MCAL/EUSART/mcal_EUSART.c: 408:          
      +                                 TXSTAbits.TX9 = 1 ;
  5446  002D68  8CAC               	bsf	172,6,c	;volatile
  5447                           
  5448                           ;MCAL/EUSART/mcal_EUSART.c: 409:             }
  5449  002D6A  EFC3  F016         	goto	l581
  5450  002D6E                     l9138:
  5451  002D6E  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5452  002D72  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5453  002D76  B6DF               	btfsc	indf2,3,c
  5454  002D78  EFC0  F016         	goto	u9791
  5455  002D7C  EFC2  F016         	goto	u9790
  5456  002D80                     u9791:
  5457  002D80  EFC3  F016         	goto	l581
  5458  002D84                     u9790:
  5459  002D84                     
  5460                           ;MCAL/EUSART/mcal_EUSART.c: 411:             {;MCAL/EUSART/mcal_EUSART.c: 412:          
      +                                 TXSTAbits.TX9 = 0 ;
  5461  002D84  9CAC               	bcf	172,6,c	;volatile
  5462  002D86                     l581:
  5463                           
  5464                           ;MCAL/EUSART/mcal_EUSART.c: 417:             (TXSTAbits.TXEN = 1);
  5465  002D86  8AAC               	bsf	172,5,c	;volatile
  5466                           
  5467                           ;MCAL/EUSART/mcal_EUSART.c: 418:         }
  5468  002D88  EFD4  F016         	goto	l9146
  5469  002D8C                     l9142:
  5470  002D8C  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5471  002D90  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5472  002D94  B4DF               	btfsc	indf2,2,c
  5473  002D96  EFCF  F016         	goto	u9801
  5474  002D9A  EFD1  F016         	goto	u9800
  5475  002D9E                     u9801:
  5476  002D9E  EFD4  F016         	goto	l584
  5477  002DA2                     u9800:
  5478  002DA2                     
  5479                           ;MCAL/EUSART/mcal_EUSART.c: 420:         {;MCAL/EUSART/mcal_EUSART.c: 422:             (
      +                          TXSTAbits.TXEN = 0);
  5480  002DA2  9AAC               	bcf	172,5,c	;volatile
  5481                           
  5482                           ;MCAL/EUSART/mcal_EUSART.c: 423:         }
  5483  002DA4  EFD4  F016         	goto	l9146
  5484  002DA8                     l584:
  5485  002DA8                     l9146:
  5486                           
  5487                           ;MCAL/EUSART/mcal_EUSART.c: 428:     return ret_val ;
  5488  002DA8  502C               	movf	async_Tx_config@ret_val^0,w,c
  5489  002DAA  0012               	return		;funcret
  5490  002DAC                     __end_of_async_Tx_config:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function _async_Rx_config *****************
  5494 ;; Defined at:
  5495 ;;		line 431 in file "MCAL/EUSART/mcal_EUSART.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  _rx_obj         2    0[BANK0 ] PTR const struct .
  5498 ;;		 -> _uart_obj(12), 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  ret_val         1   44[COMRAM] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      unsigned char 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;Total ram usage:        3 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:   11
  5517 ;; This function calls:
  5518 ;;		_Rx_config_interrupt
  5519 ;; This function is called by:
  5520 ;;		_EUSART_Async_Init
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text20
  5525  0029BE                     __ptext20:
  5526                           	callstack 0
  5527  0029BE                     _async_Rx_config:
  5528                           	callstack 17
  5529  0029BE                     
  5530                           ;MCAL/EUSART/mcal_EUSART.c: 431: static Std_ReturnType async_Rx_config(const uart_rx_con
      +                          fig_st *_rx_obj );MCAL/EUSART/mcal_EUSART.c: 432: {;MCAL/EUSART/mcal_EUSART.c: 433:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5531  0029BE  0E01               	movlw	1
  5532  0029C0  6E2D               	movwf	async_Rx_config@ret_val^0,c
  5533  0029C2                     
  5534                           ;MCAL/EUSART/mcal_EUSART.c: 435:     if(((void*)0) == _rx_obj)
  5535  0029C2  0100               	movlb	0	; () banked
  5536  0029C4  51CA               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5537  0029C6  11CB               	iorwf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5538  0029C8  A4D8               	btfss	status,2,c
  5539  0029CA  EFE9  F014         	goto	u9811
  5540  0029CE  EFEB  F014         	goto	u9810
  5541  0029D2                     u9811:
  5542  0029D2  EFEF  F014         	goto	l9156
  5543  0029D6                     u9810:
  5544  0029D6                     
  5545                           ; BSR set to: 0
  5546                           ;MCAL/EUSART/mcal_EUSART.c: 436:     {;MCAL/EUSART/mcal_EUSART.c: 437:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5547  0029D6  0E00               	movlw	0
  5548  0029D8  6E2D               	movwf	async_Rx_config@ret_val^0,c
  5549                           
  5550                           ;MCAL/EUSART/mcal_EUSART.c: 438:     }
  5551  0029DA  EF36  F015         	goto	l9174
  5552  0029DE                     l9156:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;MCAL/EUSART/mcal_EUSART.c: 440:     {;MCAL/EUSART/mcal_EUSART.c: 441:         if(1 == _
      +                          rx_obj->rx_enable)
  5556  0029DE  EE20 F006          	lfsr	2,6
  5557  0029E2  51CA               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5558  0029E4  26D9               	addwf	fsr2l,f,c
  5559  0029E6  51CB               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5560  0029E8  22DA               	addwfc	fsr2h,f,c
  5561  0029EA  A6DF               	btfss	indf2,3,c
  5562  0029EC  EFFA  F014         	goto	u9821
  5563  0029F0  EFFC  F014         	goto	u9820
  5564  0029F4                     u9821:
  5565  0029F4  EF26  F015         	goto	l9170
  5566  0029F8                     u9820:
  5567  0029F8                     
  5568                           ; BSR set to: 0
  5569                           ;MCAL/EUSART/mcal_EUSART.c: 442:         {;MCAL/EUSART/mcal_EUSART.c: 444:             (
      +                          RCSTAbits.CREN = 0);
  5570  0029F8  98AB               	bcf	171,4,c	;volatile
  5571  0029FA                     
  5572                           ; BSR set to: 0
  5573                           ;MCAL/EUSART/mcal_EUSART.c: 447:             ret_val = Rx_config_interrupt(_rx_obj);
  5574  0029FA  C0CA  F02A         	movff	async_Rx_config@_rx_obj,Rx_config_interrupt@_rx_obj
  5575  0029FE  C0CB  F02B         	movff	async_Rx_config@_rx_obj+1,Rx_config_interrupt@_rx_obj+1
  5576  002A02  EC3D  F016         	call	_Rx_config_interrupt	;wreg free
  5577  002A06  6E2D               	movwf	async_Rx_config@ret_val^0,c
  5578  002A08                     
  5579                           ;MCAL/EUSART/mcal_EUSART.c: 450:             if(1 == _rx_obj->rx_9th_bit_en )
  5580  002A08  0100               	movlb	0	; () banked
  5581  002A0A  EE20 F006          	lfsr	2,6
  5582  002A0E  51CA               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5583  002A10  26D9               	addwf	fsr2l,f,c
  5584  002A12  51CB               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5585  002A14  22DA               	addwfc	fsr2h,f,c
  5586  002A16  A8DF               	btfss	indf2,4,c
  5587  002A18  EF10  F015         	goto	u9831
  5588  002A1C  EF12  F015         	goto	u9830
  5589  002A20                     u9831:
  5590  002A20  EF15  F015         	goto	l9166
  5591  002A24                     u9830:
  5592  002A24                     
  5593                           ; BSR set to: 0
  5594                           ;MCAL/EUSART/mcal_EUSART.c: 451:             {;MCAL/EUSART/mcal_EUSART.c: 452:          
      +                                 RCSTAbits.RX9 = 1 ;
  5595  002A24  8CAB               	bsf	171,6,c	;volatile
  5596                           
  5597                           ;MCAL/EUSART/mcal_EUSART.c: 453:             }
  5598  002A26  EF23  F015         	goto	l594
  5599  002A2A                     l9166:
  5600                           
  5601                           ; BSR set to: 0
  5602  002A2A  EE20 F006          	lfsr	2,6
  5603  002A2E  51CA               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5604  002A30  26D9               	addwf	fsr2l,f,c
  5605  002A32  51CB               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5606  002A34  22DA               	addwfc	fsr2h,f,c
  5607  002A36  B8DF               	btfsc	indf2,4,c
  5608  002A38  EF20  F015         	goto	u9841
  5609  002A3C  EF22  F015         	goto	u9840
  5610  002A40                     u9841:
  5611  002A40  EF23  F015         	goto	l594
  5612  002A44                     u9840:
  5613  002A44                     
  5614                           ; BSR set to: 0
  5615                           ;MCAL/EUSART/mcal_EUSART.c: 455:             {;MCAL/EUSART/mcal_EUSART.c: 456:          
      +                                 RCSTAbits.RX9 = 0 ;
  5616  002A44  9CAB               	bcf	171,6,c	;volatile
  5617  002A46                     l594:
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;MCAL/EUSART/mcal_EUSART.c: 461:             (RCSTAbits.CREN = 1);
  5621  002A46  88AB               	bsf	171,4,c	;volatile
  5622                           
  5623                           ;MCAL/EUSART/mcal_EUSART.c: 462:         }
  5624  002A48  EF36  F015         	goto	l9174
  5625  002A4C                     l9170:
  5626                           
  5627                           ; BSR set to: 0
  5628  002A4C  EE20 F006          	lfsr	2,6
  5629  002A50  51CA               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5630  002A52  26D9               	addwf	fsr2l,f,c
  5631  002A54  51CB               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5632  002A56  22DA               	addwfc	fsr2h,f,c
  5633  002A58  B6DF               	btfsc	indf2,3,c
  5634  002A5A  EF31  F015         	goto	u9851
  5635  002A5E  EF33  F015         	goto	u9850
  5636  002A62                     u9851:
  5637  002A62  EF36  F015         	goto	l597
  5638  002A66                     u9850:
  5639  002A66                     
  5640                           ; BSR set to: 0
  5641                           ;MCAL/EUSART/mcal_EUSART.c: 464:         {;MCAL/EUSART/mcal_EUSART.c: 466:             (
      +                          RCSTAbits.CREN = 0);
  5642  002A66  98AB               	bcf	171,4,c	;volatile
  5643                           
  5644                           ;MCAL/EUSART/mcal_EUSART.c: 467:         }
  5645  002A68  EF36  F015         	goto	l9174
  5646  002A6C                     l597:
  5647  002A6C                     l9174:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;MCAL/EUSART/mcal_EUSART.c: 472:     return ret_val ;
  5651  002A6C  502D               	movf	async_Rx_config@ret_val^0,w,c
  5652  002A6E                     
  5653                           ; BSR set to: 0
  5654  002A6E  0012               	return		;funcret
  5655  002A70                     __end_of_async_Rx_config:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function _Rx_config_interrupt *****************
  5659 ;; Defined at:
  5660 ;;		line 518 in file "MCAL/EUSART/mcal_EUSART.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  _rx_obj         2   41[COMRAM] PTR const struct .
  5663 ;;		 -> _uart_obj(12), 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  ret_val         1   43[COMRAM] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      unsigned char 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;Total ram usage:        3 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:   10
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_async_Rx_config
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text21
  5690  002C7A                     __ptext21:
  5691                           	callstack 0
  5692  002C7A                     _Rx_config_interrupt:
  5693                           	callstack 17
  5694  002C7A                     
  5695                           ;MCAL/EUSART/mcal_EUSART.c: 518: static __attribute__((inline)) Std_ReturnType Rx_config
      +                          _interrupt(const uart_rx_config_st *_rx_obj);MCAL/EUSART/mcal_EUSART.c: 519: {;MCAL/EUSA
      +                          RT/mcal_EUSART.c: 521:      Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5696  002C7A  0E01               	movlw	1
  5697  002C7C  6E2C               	movwf	Rx_config_interrupt@ret_val^0,c
  5698  002C7E                     
  5699                           ;MCAL/EUSART/mcal_EUSART.c: 523:     if(((void*)0) == _rx_obj)
  5700  002C7E  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5701  002C80  102B               	iorwf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5702  002C82  A4D8               	btfss	status,2,c
  5703  002C84  EF46  F016         	goto	u8851
  5704  002C88  EF48  F016         	goto	u8850
  5705  002C8C                     u8851:
  5706  002C8C  EF4C  F016         	goto	l608
  5707  002C90                     u8850:
  5708  002C90                     
  5709                           ;MCAL/EUSART/mcal_EUSART.c: 524:     {;MCAL/EUSART/mcal_EUSART.c: 525:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5710  002C90  0E00               	movlw	0
  5711  002C92  6E2C               	movwf	Rx_config_interrupt@ret_val^0,c
  5712                           
  5713                           ;MCAL/EUSART/mcal_EUSART.c: 526:     }
  5714  002C94  EF8C  F016         	goto	l8600
  5715  002C98                     l608:
  5716                           
  5717                           ;MCAL/EUSART/mcal_EUSART.c: 528:     {;MCAL/EUSART/mcal_EUSART.c: 530:         (PIE1bits
      +                          .RCIE = 0);
  5718  002C98  9A9D               	bcf	157,5,c	;volatile
  5719  002C9A                     
  5720                           ;MCAL/EUSART/mcal_EUSART.c: 531:         eusart_Rx_InterruptHandler = _rx_obj->rx_Interr
      +                          uptHandler ;
  5721  002C9A  C02A  FFD9         	movff	Rx_config_interrupt@_rx_obj,fsr2l
  5722  002C9E  C02B  FFDA         	movff	Rx_config_interrupt@_rx_obj+1,fsr2h
  5723  002CA2  CFDE F042          	movff	postinc2,_eusart_Rx_InterruptHandler
  5724  002CA6  CFDD F043          	movff	postdec2,_eusart_Rx_InterruptHandler+1
  5725  002CAA                     
  5726                           ;MCAL/EUSART/mcal_EUSART.c: 532:         eusart_frameerr_CallBack = _rx_obj->ferr_Interr
      +                          uptHandler ;
  5727  002CAA  EE20 F004          	lfsr	2,4
  5728  002CAE  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5729  002CB0  26D9               	addwf	fsr2l,f,c
  5730  002CB2  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5731  002CB4  22DA               	addwfc	fsr2h,f,c
  5732  002CB6  CFDE F0FC          	movff	postinc2,_eusart_frameerr_CallBack
  5733  002CBA  CFDD F0FD          	movff	postdec2,_eusart_frameerr_CallBack+1
  5734  002CBE                     
  5735                           ;MCAL/EUSART/mcal_EUSART.c: 533:         eusart_overrunerr_CallBack = _rx_obj->oerr_Inte
      +                          rruptHandler ;
  5736  002CBE  EE20 F002          	lfsr	2,2
  5737  002CC2  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5738  002CC4  26D9               	addwf	fsr2l,f,c
  5739  002CC6  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5740  002CC8  22DA               	addwfc	fsr2h,f,c
  5741  002CCA  CFDE F0FE          	movff	postinc2,_eusart_overrunerr_CallBack
  5742  002CCE  CFDD F0FF          	movff	postdec2,_eusart_overrunerr_CallBack+1
  5743  002CD2                     
  5744                           ;MCAL/EUSART/mcal_EUSART.c: 536:                 (RCONbits.IPEN = 1 );
  5745  002CD2  8ED0               	bsf	208,7,c	;volatile
  5746  002CD4                     
  5747                           ;MCAL/EUSART/mcal_EUSART.c: 537:                 if(1 == _rx_obj->uart_rx_priority)
  5748  002CD4  EE20 F006          	lfsr	2,6
  5749  002CD8  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5750  002CDA  26D9               	addwf	fsr2l,f,c
  5751  002CDC  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5752  002CDE  22DA               	addwfc	fsr2h,f,c
  5753  002CE0  A0DF               	btfss	indf2,0,c
  5754  002CE2  EF75  F016         	goto	u8861
  5755  002CE6  EF77  F016         	goto	u8860
  5756  002CEA                     u8861:
  5757  002CEA  EF7B  F016         	goto	l8596
  5758  002CEE                     u8860:
  5759  002CEE                     
  5760                           ;MCAL/EUSART/mcal_EUSART.c: 538:                 {;MCAL/EUSART/mcal_EUSART.c: 539:      
      +                                         (IPR1bits.RCIP = 1);
  5761  002CEE  8A9F               	bsf	159,5,c	;volatile
  5762                           
  5763                           ;MCAL/EUSART/mcal_EUSART.c: 540:                     (INTCONbits.GIEH = 1);
  5764  002CF0  8EF2               	bsf	242,7,c	;volatile
  5765                           
  5766                           ;MCAL/EUSART/mcal_EUSART.c: 542:                 }
  5767  002CF2  EF8B  F016         	goto	l611
  5768  002CF6                     l8596:
  5769  002CF6  EE20 F006          	lfsr	2,6
  5770  002CFA  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5771  002CFC  26D9               	addwf	fsr2l,f,c
  5772  002CFE  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5773  002D00  22DA               	addwfc	fsr2h,f,c
  5774  002D02  B0DF               	btfsc	indf2,0,c
  5775  002D04  EF86  F016         	goto	u8871
  5776  002D08  EF88  F016         	goto	u8870
  5777  002D0C                     u8871:
  5778  002D0C  EF8B  F016         	goto	l611
  5779  002D10                     u8870:
  5780  002D10                     
  5781                           ;MCAL/EUSART/mcal_EUSART.c: 544:                 {;MCAL/EUSART/mcal_EUSART.c: 545:      
      +                                         (IPR1bits.RCIP = 0);
  5782  002D10  9A9F               	bcf	159,5,c	;volatile
  5783                           
  5784                           ;MCAL/EUSART/mcal_EUSART.c: 546:                     (INTCONbits.GIEH = 1);
  5785  002D12  8EF2               	bsf	242,7,c	;volatile
  5786                           
  5787                           ;MCAL/EUSART/mcal_EUSART.c: 547:                     (INTCONbits.GIEL = 1);
  5788  002D14  8CF2               	bsf	242,6,c	;volatile
  5789  002D16                     l611:
  5790                           
  5791                           ;MCAL/EUSART/mcal_EUSART.c: 555:         (PIE1bits.RCIE = 1);
  5792  002D16  8A9D               	bsf	157,5,c	;volatile
  5793  002D18                     l8600:
  5794                           
  5795                           ;MCAL/EUSART/mcal_EUSART.c: 560:     return ret_val ;
  5796  002D18  502C               	movf	Rx_config_interrupt@ret_val^0,w,c
  5797  002D1A  0012               	return		;funcret
  5798  002D1C                     __end_of_Rx_config_interrupt:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  5802 ;; Defined at:
  5803 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  _pin_config     2   41[COMRAM] PTR const struct .
  5806 ;;		 -> pind2(1), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  ERRORSTATUS     1    0        unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      unsigned char 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;Total ram usage:        8 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:   10
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_main
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text22
  5833  002EA8                     __ptext22:
  5834                           	callstack 0
  5835  002EA8                     _GPIO_Pin_Toggle_Logic:
  5836                           	callstack 20
  5837  002EA8                     
  5838                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  5839  002EA8  502A               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  5840  002EAA  102B               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  5841  002EAC  A4D8               	btfss	status,2,c
  5842  002EAE  EF5B  F017         	goto	u10241
  5843  002EB2  EF5D  F017         	goto	u10240
  5844  002EB6                     u10241:
  5845  002EB6  EF5F  F017         	goto	l9506
  5846  002EBA                     u10240:
  5847  002EBA                     
  5848                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  5849  002EBA  EF8D  F017         	goto	l726
  5850  002EBE                     l9506:
  5851                           
  5852                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  5853  002EBE  C02A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  5854  002EC2  C02B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  5855  002EC6  50DF               	movf	indf2,w,c
  5856  002EC8  0B07               	andlw	7
  5857  002ECA  0100               	movlb	0	; () banked
  5858  002ECC  6FCA               	movwf	??_GPIO_Pin_Toggle_Logic& (0+255),b
  5859  002ECE  0E01               	movlw	1
  5860  002ED0  6FCB               	movwf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),b
  5861  002ED2  2BCA               	incf	??_GPIO_Pin_Toggle_Logic& (0+255),f,b
  5862  002ED4  EF6E  F017         	goto	u10254
  5863  002ED8                     u10255:
  5864  002ED8  90D8               	bcf	status,0,c
  5865  002EDA  37CB               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),f,b
  5866  002EDC                     u10254:
  5867  002EDC  2FCA               	decfsz	??_GPIO_Pin_Toggle_Logic& (0+255),f,b
  5868  002EDE  EF6C  F017         	goto	u10255
  5869  002EE2  C02A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  5870  002EE6  C02B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  5871  002EEA  30DF               	rrcf	indf2,w,c
  5872  002EEC  32E8               	rrcf	wreg,f,c
  5873  002EEE  32E8               	rrcf	wreg,f,c
  5874  002EF0  0B07               	andlw	7
  5875  002EF2  0100               	movlb	0	; () banked
  5876  002EF4  6FCC               	movwf	(??_GPIO_Pin_Toggle_Logic+2)& (0+255),b
  5877  002EF6  51CC               	movf	(??_GPIO_Pin_Toggle_Logic+2)& (0+255),w,b
  5878  002EF8  0D02               	mullw	2
  5879  002EFA  0E8A               	movlw	low _lat_registers
  5880  002EFC  24F3               	addwf	243,w,c
  5881  002EFE  6ED9               	movwf	fsr2l,c
  5882  002F00  0E00               	movlw	high _lat_registers
  5883  002F02  20F4               	addwfc	prodh,w,c
  5884  002F04  6EDA               	movwf	fsr2h,c
  5885  002F06  CFDE F0CD          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  5886  002F0A  CFDD F0CE          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  5887  002F0E  C0CD  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  5888  002F12  C0CE  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  5889  002F16  51CB               	movf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),w,b
  5890  002F18  1ADF               	xorwf	indf2,f,c
  5891  002F1A                     l726:
  5892  002F1A  0012               	return		;funcret
  5893  002F1C                     __end_of_GPIO_Pin_Toggle_Logic:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _InterruptManagerLow *****************
  5897 ;; Defined at:
  5898 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        3 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    9
  5919 ;; This function calls:
  5920 ;;		_ADC_ISR
  5921 ;;		_INT1_ISR
  5922 ;;		_RB4_ISR
  5923 ;;		_RB5_ISR
  5924 ;;		_RB6_ISR
  5925 ;;		_RB7_ISR
  5926 ;; This function is called by:
  5927 ;;		Interrupt level 1
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	intcodelo
  5932  000018                     __pintcodelo:
  5933                           	callstack 0
  5934  000018                     _InterruptManagerLow:
  5935                           	callstack 16
  5936                           
  5937                           ;incstack = 0
  5938  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5939  00001A  CFD8 F027          	movff	status,??_InterruptManagerLow
  5940  00001E  CFE8 F028          	movff	wreg,??_InterruptManagerLow+1
  5941  000022  CFE0 F029          	movff	bsr,??_InterruptManagerLow+2
  5942  000026                     
  5943                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  5944  000026  A6F0               	btfss	240,3,c	;volatile
  5945  000028  EF18  F000         	goto	i1u790_21
  5946  00002C  EF1A  F000         	goto	i1u790_20
  5947  000030                     i1u790_21:
  5948  000030  EF23  F000         	goto	i1l995
  5949  000034                     i1u790_20:
  5950  000034  A0F0               	btfss	240,0,c	;volatile
  5951  000036  EF1F  F000         	goto	i1u791_21
  5952  00003A  EF21  F000         	goto	i1u791_20
  5953  00003E                     i1u791_21:
  5954  00003E  EF23  F000         	goto	i1l995
  5955  000042                     i1u791_20:
  5956  000042                     
  5957                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  5958  000042  EC21  F01B         	call	_INT1_ISR	;wreg free
  5959  000046                     i1l995:
  5960                           
  5961                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  5962  000046  A6F2               	btfss	242,3,c	;volatile
  5963  000048  EF28  F000         	goto	i1u792_21
  5964  00004C  EF2A  F000         	goto	i1u792_20
  5965  000050                     i1u792_21:
  5966  000050  EF43  F000         	goto	i1l997
  5967  000054                     i1u792_20:
  5968  000054  A0F2               	btfss	242,0,c	;volatile
  5969  000056  EF2F  F000         	goto	i1u793_21
  5970  00005A  EF31  F000         	goto	i1u793_20
  5971  00005E                     i1u793_21:
  5972  00005E  EF43  F000         	goto	i1l997
  5973  000062                     i1u793_20:
  5974  000062  A881               	btfss	129,4,c	;volatile
  5975  000064  EF36  F000         	goto	i1u794_21
  5976  000068  EF38  F000         	goto	i1u794_20
  5977  00006C                     i1u794_21:
  5978  00006C  EF43  F000         	goto	i1l997
  5979  000070                     i1u794_20:
  5980  000070  A04C               	btfss	_flags^0,0,c	;volatile
  5981  000072  EF3D  F000         	goto	i1u795_21
  5982  000076  EF3F  F000         	goto	i1u795_20
  5983  00007A                     i1u795_21:
  5984  00007A  EF43  F000         	goto	i1l997
  5985  00007E                     i1u795_20:
  5986  00007E                     
  5987                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  5988  00007E  904C               	bcf	_flags^0,0,c	;volatile
  5989  000080                     
  5990                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  5991  000080  0E01               	movlw	1
  5992  000082  EC0B  F01B         	call	_RB4_ISR
  5993  000086                     i1l997:
  5994                           
  5995                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  5996  000086  A6F2               	btfss	242,3,c	;volatile
  5997  000088  EF48  F000         	goto	i1u796_21
  5998  00008C  EF4A  F000         	goto	i1u796_20
  5999  000090                     i1u796_21:
  6000  000090  EF63  F000         	goto	i1l999
  6001  000094                     i1u796_20:
  6002  000094  A0F2               	btfss	242,0,c	;volatile
  6003  000096  EF4F  F000         	goto	i1u797_21
  6004  00009A  EF51  F000         	goto	i1u797_20
  6005  00009E                     i1u797_21:
  6006  00009E  EF63  F000         	goto	i1l999
  6007  0000A2                     i1u797_20:
  6008  0000A2  B881               	btfsc	129,4,c	;volatile
  6009  0000A4  EF56  F000         	goto	i1u798_21
  6010  0000A8  EF58  F000         	goto	i1u798_20
  6011  0000AC                     i1u798_21:
  6012  0000AC  EF63  F000         	goto	i1l999
  6013  0000B0                     i1u798_20:
  6014  0000B0  B04C               	btfsc	_flags^0,0,c	;volatile
  6015  0000B2  EF5D  F000         	goto	i1u799_21
  6016  0000B6  EF5F  F000         	goto	i1u799_20
  6017  0000BA                     i1u799_21:
  6018  0000BA  EF63  F000         	goto	i1l999
  6019  0000BE                     i1u799_20:
  6020  0000BE                     
  6021                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  6022  0000BE  804C               	bsf	_flags^0,0,c	;volatile
  6023  0000C0                     
  6024                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  6025  0000C0  0E00               	movlw	0
  6026  0000C2  EC0B  F01B         	call	_RB4_ISR
  6027  0000C6                     i1l999:
  6028                           
  6029                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  6030  0000C6  A6F2               	btfss	242,3,c	;volatile
  6031  0000C8  EF68  F000         	goto	i1u800_21
  6032  0000CC  EF6A  F000         	goto	i1u800_20
  6033  0000D0                     i1u800_21:
  6034  0000D0  EF83  F000         	goto	i1l1001
  6035  0000D4                     i1u800_20:
  6036  0000D4  A0F2               	btfss	242,0,c	;volatile
  6037  0000D6  EF6F  F000         	goto	i1u801_21
  6038  0000DA  EF71  F000         	goto	i1u801_20
  6039  0000DE                     i1u801_21:
  6040  0000DE  EF83  F000         	goto	i1l1001
  6041  0000E2                     i1u801_20:
  6042  0000E2  AA81               	btfss	129,5,c	;volatile
  6043  0000E4  EF76  F000         	goto	i1u802_21
  6044  0000E8  EF78  F000         	goto	i1u802_20
  6045  0000EC                     i1u802_21:
  6046  0000EC  EF83  F000         	goto	i1l1001
  6047  0000F0                     i1u802_20:
  6048  0000F0  A24C               	btfss	_flags^0,1,c	;volatile
  6049  0000F2  EF7D  F000         	goto	i1u803_21
  6050  0000F6  EF7F  F000         	goto	i1u803_20
  6051  0000FA                     i1u803_21:
  6052  0000FA  EF83  F000         	goto	i1l1001
  6053  0000FE                     i1u803_20:
  6054  0000FE                     
  6055                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  6056  0000FE  924C               	bcf	_flags^0,1,c	;volatile
  6057  000100                     
  6058                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  6059  000100  0E01               	movlw	1
  6060  000102  ECFE  F01A         	call	_RB5_ISR
  6061  000106                     i1l1001:
  6062                           
  6063                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  6064  000106  A6F2               	btfss	242,3,c	;volatile
  6065  000108  EF88  F000         	goto	i1u804_21
  6066  00010C  EF8A  F000         	goto	i1u804_20
  6067  000110                     i1u804_21:
  6068  000110  EFA3  F000         	goto	i1l1003
  6069  000114                     i1u804_20:
  6070  000114  A0F2               	btfss	242,0,c	;volatile
  6071  000116  EF8F  F000         	goto	i1u805_21
  6072  00011A  EF91  F000         	goto	i1u805_20
  6073  00011E                     i1u805_21:
  6074  00011E  EFA3  F000         	goto	i1l1003
  6075  000122                     i1u805_20:
  6076  000122  BA81               	btfsc	129,5,c	;volatile
  6077  000124  EF96  F000         	goto	i1u806_21
  6078  000128  EF98  F000         	goto	i1u806_20
  6079  00012C                     i1u806_21:
  6080  00012C  EFA3  F000         	goto	i1l1003
  6081  000130                     i1u806_20:
  6082  000130  B24C               	btfsc	_flags^0,1,c	;volatile
  6083  000132  EF9D  F000         	goto	i1u807_21
  6084  000136  EF9F  F000         	goto	i1u807_20
  6085  00013A                     i1u807_21:
  6086  00013A  EFA3  F000         	goto	i1l1003
  6087  00013E                     i1u807_20:
  6088  00013E                     
  6089                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  6090  00013E  824C               	bsf	_flags^0,1,c	;volatile
  6091  000140                     
  6092                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  6093  000140  0E00               	movlw	0
  6094  000142  ECFE  F01A         	call	_RB5_ISR
  6095  000146                     i1l1003:
  6096                           
  6097                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  6098  000146  A6F2               	btfss	242,3,c	;volatile
  6099  000148  EFA8  F000         	goto	i1u808_21
  6100  00014C  EFAA  F000         	goto	i1u808_20
  6101  000150                     i1u808_21:
  6102  000150  EFC3  F000         	goto	i1l1005
  6103  000154                     i1u808_20:
  6104  000154  A0F2               	btfss	242,0,c	;volatile
  6105  000156  EFAF  F000         	goto	i1u809_21
  6106  00015A  EFB1  F000         	goto	i1u809_20
  6107  00015E                     i1u809_21:
  6108  00015E  EFC3  F000         	goto	i1l1005
  6109  000162                     i1u809_20:
  6110  000162  AC81               	btfss	129,6,c	;volatile
  6111  000164  EFB6  F000         	goto	i1u810_21
  6112  000168  EFB8  F000         	goto	i1u810_20
  6113  00016C                     i1u810_21:
  6114  00016C  EFC3  F000         	goto	i1l1005
  6115  000170                     i1u810_20:
  6116  000170  A44C               	btfss	_flags^0,2,c	;volatile
  6117  000172  EFBD  F000         	goto	i1u811_21
  6118  000176  EFBF  F000         	goto	i1u811_20
  6119  00017A                     i1u811_21:
  6120  00017A  EFC3  F000         	goto	i1l1005
  6121  00017E                     i1u811_20:
  6122  00017E                     
  6123                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  6124  00017E  944C               	bcf	_flags^0,2,c	;volatile
  6125  000180                     
  6126                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  6127  000180  0E01               	movlw	1
  6128  000182  ECF1  F01A         	call	_RB6_ISR
  6129  000186                     i1l1005:
  6130                           
  6131                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  6132  000186  A6F2               	btfss	242,3,c	;volatile
  6133  000188  EFC8  F000         	goto	i1u812_21
  6134  00018C  EFCA  F000         	goto	i1u812_20
  6135  000190                     i1u812_21:
  6136  000190  EFE3  F000         	goto	i1l1007
  6137  000194                     i1u812_20:
  6138  000194  A0F2               	btfss	242,0,c	;volatile
  6139  000196  EFCF  F000         	goto	i1u813_21
  6140  00019A  EFD1  F000         	goto	i1u813_20
  6141  00019E                     i1u813_21:
  6142  00019E  EFE3  F000         	goto	i1l1007
  6143  0001A2                     i1u813_20:
  6144  0001A2  BC81               	btfsc	129,6,c	;volatile
  6145  0001A4  EFD6  F000         	goto	i1u814_21
  6146  0001A8  EFD8  F000         	goto	i1u814_20
  6147  0001AC                     i1u814_21:
  6148  0001AC  EFE3  F000         	goto	i1l1007
  6149  0001B0                     i1u814_20:
  6150  0001B0  B44C               	btfsc	_flags^0,2,c	;volatile
  6151  0001B2  EFDD  F000         	goto	i1u815_21
  6152  0001B6  EFDF  F000         	goto	i1u815_20
  6153  0001BA                     i1u815_21:
  6154  0001BA  EFE3  F000         	goto	i1l1007
  6155  0001BE                     i1u815_20:
  6156  0001BE                     
  6157                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  6158  0001BE  844C               	bsf	_flags^0,2,c	;volatile
  6159  0001C0                     
  6160                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  6161  0001C0  0E00               	movlw	0
  6162  0001C2  ECF1  F01A         	call	_RB6_ISR
  6163  0001C6                     i1l1007:
  6164                           
  6165                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  6166  0001C6  A6F2               	btfss	242,3,c	;volatile
  6167  0001C8  EFE8  F000         	goto	i1u816_21
  6168  0001CC  EFEA  F000         	goto	i1u816_20
  6169  0001D0                     i1u816_21:
  6170  0001D0  EF03  F001         	goto	i1l1009
  6171  0001D4                     i1u816_20:
  6172  0001D4  A0F2               	btfss	242,0,c	;volatile
  6173  0001D6  EFEF  F000         	goto	i1u817_21
  6174  0001DA  EFF1  F000         	goto	i1u817_20
  6175  0001DE                     i1u817_21:
  6176  0001DE  EF03  F001         	goto	i1l1009
  6177  0001E2                     i1u817_20:
  6178  0001E2  AE81               	btfss	129,7,c	;volatile
  6179  0001E4  EFF6  F000         	goto	i1u818_21
  6180  0001E8  EFF8  F000         	goto	i1u818_20
  6181  0001EC                     i1u818_21:
  6182  0001EC  EF03  F001         	goto	i1l1009
  6183  0001F0                     i1u818_20:
  6184  0001F0  A64C               	btfss	_flags^0,3,c	;volatile
  6185  0001F2  EFFD  F000         	goto	i1u819_21
  6186  0001F6  EFFF  F000         	goto	i1u819_20
  6187  0001FA                     i1u819_21:
  6188  0001FA  EF03  F001         	goto	i1l1009
  6189  0001FE                     i1u819_20:
  6190  0001FE                     
  6191                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  6192  0001FE  964C               	bcf	_flags^0,3,c	;volatile
  6193  000200                     
  6194                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  6195  000200  0E01               	movlw	1
  6196  000202  ECE4  F01A         	call	_RB7_ISR
  6197  000206                     i1l1009:
  6198                           
  6199                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  6200  000206  A6F2               	btfss	242,3,c	;volatile
  6201  000208  EF08  F001         	goto	i1u820_21
  6202  00020C  EF0A  F001         	goto	i1u820_20
  6203  000210                     i1u820_21:
  6204  000210  EF23  F001         	goto	i1l1011
  6205  000214                     i1u820_20:
  6206  000214  A0F2               	btfss	242,0,c	;volatile
  6207  000216  EF0F  F001         	goto	i1u821_21
  6208  00021A  EF11  F001         	goto	i1u821_20
  6209  00021E                     i1u821_21:
  6210  00021E  EF23  F001         	goto	i1l1011
  6211  000222                     i1u821_20:
  6212  000222  BE81               	btfsc	129,7,c	;volatile
  6213  000224  EF16  F001         	goto	i1u822_21
  6214  000228  EF18  F001         	goto	i1u822_20
  6215  00022C                     i1u822_21:
  6216  00022C  EF23  F001         	goto	i1l1011
  6217  000230                     i1u822_20:
  6218  000230  B64C               	btfsc	_flags^0,3,c	;volatile
  6219  000232  EF1D  F001         	goto	i1u823_21
  6220  000236  EF1F  F001         	goto	i1u823_20
  6221  00023A                     i1u823_21:
  6222  00023A  EF23  F001         	goto	i1l1011
  6223  00023E                     i1u823_20:
  6224  00023E                     
  6225                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  6226  00023E  864C               	bsf	_flags^0,3,c	;volatile
  6227  000240                     
  6228                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  6229  000240  0E00               	movlw	0
  6230  000242  ECE4  F01A         	call	_RB7_ISR
  6231  000246                     i1l1011:
  6232                           
  6233                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  6234  000246  AC9D               	btfss	157,6,c	;volatile
  6235  000248  EF28  F001         	goto	i1u824_21
  6236  00024C  EF2A  F001         	goto	i1u824_20
  6237  000250                     i1u824_21:
  6238  000250  EF33  F001         	goto	i1l1013
  6239  000254                     i1u824_20:
  6240  000254  AC9E               	btfss	158,6,c	;volatile
  6241  000256  EF2F  F001         	goto	i1u825_21
  6242  00025A  EF31  F001         	goto	i1u825_20
  6243  00025E                     i1u825_21:
  6244  00025E  EF33  F001         	goto	i1l1013
  6245  000262                     i1u825_20:
  6246  000262                     
  6247                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
  6248  000262  EC23  F01B         	call	_ADC_ISR	;wreg free
  6249  000266                     i1l1013:
  6250                           
  6251                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  6252  000266  A09D               	btfss	157,0,c	;volatile
  6253  000268  EF38  F001         	goto	i1u826_21
  6254  00026C  EF3A  F001         	goto	i1u826_20
  6255  000270                     i1u826_21:
  6256  000270  EF3B  F001         	goto	i1l1016
  6257  000274                     i1u826_20:
  6258  000274  509E               	movf	158,w,c	;volatile
  6259  000276                     i1l1016:
  6260  000276  C029  FFE0         	movff	??_InterruptManagerLow+2,bsr
  6261  00027A  C028  FFE8         	movff	??_InterruptManagerLow+1,wreg
  6262  00027E  C027  FFD8         	movff	??_InterruptManagerLow,status
  6263  000282  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6264  000284  0010               	retfie	
  6265  000286                     __end_of_InterruptManagerLow:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function _RB7_ISR *****************
  6269 ;; Defined at:
  6270 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  Handler_Sele    1    wreg     unsigned char 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      void 
  6277 ;; Registers used:
  6278 ;;		wreg, status,2
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;Total ram usage:        1 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    8
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_InterruptManagerLow
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text24
  6299  0035C8                     __ptext24:
  6300                           	callstack 0
  6301  0035C8                     _RB7_ISR:
  6302                           	callstack 16
  6303                           
  6304                           ;incstack = 0
  6305                           ;RB7_ISR@Handler_Select stored from wreg
  6306  0035C8  6E26               	movwf	RB7_ISR@Handler_Select^0,c
  6307  0035CA                     
  6308                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  6309  0035CA  90F2               	bcf	242,0,c	;volatile
  6310  0035CC                     
  6311                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  6312  0035CC  5026               	movf	RB7_ISR@Handler_Select^0,w,c
  6313  0035CE  B4D8               	btfsc	status,2,c
  6314  0035D0  EFEC  F01A         	goto	i1u699_21
  6315  0035D4  EFEE  F01A         	goto	i1u699_20
  6316  0035D8                     i1u699_21:
  6317  0035D8  EFF0  F01A         	goto	i1l7148
  6318  0035DC                     i1u699_20:
  6319  0035DC  EFF0  F01A         	goto	i1l1122
  6320  0035E0                     i1l7148:
  6321  0035E0                     i1l1122:
  6322  0035E0  0012               	return		;funcret
  6323  0035E2                     __end_of_RB7_ISR:
  6324                           	callstack 0
  6325                           
  6326 ;; *************** function _RB6_ISR *****************
  6327 ;; Defined at:
  6328 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  Handler_Sele    1    wreg     unsigned char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;Total ram usage:        1 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    8
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_InterruptManagerLow
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text25
  6357  0035E2                     __ptext25:
  6358                           	callstack 0
  6359  0035E2                     _RB6_ISR:
  6360                           	callstack 16
  6361                           
  6362                           ;incstack = 0
  6363                           ;RB6_ISR@Handler_Select stored from wreg
  6364  0035E2  6E26               	movwf	RB6_ISR@Handler_Select^0,c
  6365  0035E4                     
  6366                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  6367  0035E4  90F2               	bcf	242,0,c	;volatile
  6368  0035E6                     
  6369                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  6370  0035E6  5026               	movf	RB6_ISR@Handler_Select^0,w,c
  6371  0035E8  B4D8               	btfsc	status,2,c
  6372  0035EA  EFF9  F01A         	goto	i1u226_21
  6373  0035EE  EFFB  F01A         	goto	i1u226_20
  6374  0035F2                     i1u226_21:
  6375  0035F2  EFFD  F01A         	goto	i1l3904
  6376  0035F6                     i1u226_20:
  6377  0035F6  EFFD  F01A         	goto	i1l1113
  6378  0035FA                     i1l3904:
  6379  0035FA                     i1l1113:
  6380  0035FA  0012               	return		;funcret
  6381  0035FC                     __end_of_RB6_ISR:
  6382                           	callstack 0
  6383                           
  6384 ;; *************** function _RB5_ISR *****************
  6385 ;; Defined at:
  6386 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  Handler_Sele    1    wreg     unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;Total ram usage:        1 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    8
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_InterruptManagerLow
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text26
  6415  0035FC                     __ptext26:
  6416                           	callstack 0
  6417  0035FC                     _RB5_ISR:
  6418                           	callstack 16
  6419                           
  6420                           ;incstack = 0
  6421                           ;RB5_ISR@Handler_Select stored from wreg
  6422  0035FC  6E26               	movwf	RB5_ISR@Handler_Select^0,c
  6423  0035FE                     
  6424                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  6425  0035FE  90F2               	bcf	242,0,c	;volatile
  6426  003600                     
  6427                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  6428  003600  5026               	movf	RB5_ISR@Handler_Select^0,w,c
  6429  003602  B4D8               	btfsc	status,2,c
  6430  003604  EF06  F01B         	goto	i1u225_21
  6431  003608  EF08  F01B         	goto	i1u225_20
  6432  00360C                     i1u225_21:
  6433  00360C  EF0A  F01B         	goto	i1l3894
  6434  003610                     i1u225_20:
  6435  003610  EF0A  F01B         	goto	i1l1104
  6436  003614                     i1l3894:
  6437  003614                     i1l1104:
  6438  003614  0012               	return		;funcret
  6439  003616                     __end_of_RB5_ISR:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _RB4_ISR *****************
  6443 ;; Defined at:
  6444 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  Handler_Sele    1    wreg     unsigned char 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;Total ram usage:        1 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    8
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_InterruptManagerLow
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text27
  6473  003616                     __ptext27:
  6474                           	callstack 0
  6475  003616                     _RB4_ISR:
  6476                           	callstack 16
  6477                           
  6478                           ;incstack = 0
  6479                           ;RB4_ISR@Handler_Select stored from wreg
  6480  003616  6E26               	movwf	RB4_ISR@Handler_Select^0,c
  6481  003618                     
  6482                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  6483  003618  90F2               	bcf	242,0,c	;volatile
  6484  00361A                     
  6485                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  6486  00361A  5026               	movf	RB4_ISR@Handler_Select^0,w,c
  6487  00361C  B4D8               	btfsc	status,2,c
  6488  00361E  EF13  F01B         	goto	i1u224_21
  6489  003622  EF15  F01B         	goto	i1u224_20
  6490  003626                     i1u224_21:
  6491  003626  EF17  F01B         	goto	i1l3884
  6492  00362A                     i1u224_20:
  6493  00362A  EF17  F01B         	goto	i1l1095
  6494  00362E                     i1l3884:
  6495  00362E                     i1l1095:
  6496  00362E  0012               	return		;funcret
  6497  003630                     __end_of_RB4_ISR:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _INT1_ISR *****************
  6501 ;; Defined at:
  6502 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		None
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    8
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_InterruptManagerLow
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text28
  6531  003642                     __ptext28:
  6532                           	callstack 0
  6533  003642                     _INT1_ISR:
  6534                           	callstack 16
  6535  003642                     
  6536                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  6537  003642  90F0               	bcf	240,0,c	;volatile
  6538  003644  0012               	return		;funcret
  6539  003646                     __end_of_INT1_ISR:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function _ADC_ISR *****************
  6543 ;; Defined at:
  6544 ;;		line 327 in file "MCAL/ADC/mcal_adc.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		None
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    8
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_InterruptManagerLow
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text29
  6573  003646                     __ptext29:
  6574                           	callstack 0
  6575  003646                     _ADC_ISR:
  6576                           	callstack 16
  6577  003646  0012               	return		;funcret
  6578  003648                     __end_of_ADC_ISR:
  6579                           	callstack 0
  6580                           
  6581 ;; *************** function _InterruptManagerHigh *****************
  6582 ;; Defined at:
  6583 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;Total ram usage:        6 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    7
  6604 ;; This function calls:
  6605 ;;		_EUSART_Rx_ISR
  6606 ;;		_EUSART_Tx_ISR
  6607 ;;		_TMR0_ISR
  6608 ;; This function is called by:
  6609 ;;		Interrupt level 2
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	intcode
  6614  000008                     __pintcode:
  6615                           	callstack 0
  6616  000008                     _InterruptManagerHigh:
  6617                           	callstack 16
  6618                           
  6619                           ;incstack = 0
  6620  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6621  00000A  EDA1  F013         	call	int_func,f	;refresh shadow registers
  6622                           
  6623                           	psect	intcode_body
  6624  002742                     __pintcode_body:
  6625                           	callstack 16
  6626  002742                     int_func:
  6627                           	callstack 16
  6628  002742  0006               	pop		; remove dummy address from shadow register refresh
  6629  002744  CFFA F020          	movff	pclath,??_InterruptManagerHigh
  6630  002748  CFFB F021          	movff	pclatu,??_InterruptManagerHigh+1
  6631  00274C  CFD9 F022          	movff	fsr2l,??_InterruptManagerHigh+2
  6632  002750  CFDA F023          	movff	fsr2h,??_InterruptManagerHigh+3
  6633  002754  CFF3 F024          	movff	prodl,??_InterruptManagerHigh+4
  6634  002758  CFF4 F025          	movff	prodh,??_InterruptManagerHigh+5
  6635  00275C                     
  6636                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  6637  00275C  AAF2               	btfss	242,5,c	;volatile
  6638  00275E  EFB3  F013         	goto	i2u779_41
  6639  002762  EFB5  F013         	goto	i2u779_40
  6640  002766                     i2u779_41:
  6641  002766  EFBE  F013         	goto	i2l974
  6642  00276A                     i2u779_40:
  6643  00276A  A4F2               	btfss	242,2,c	;volatile
  6644  00276C  EFBA  F013         	goto	i2u780_41
  6645  002770  EFBC  F013         	goto	i2u780_40
  6646  002774                     i2u780_41:
  6647  002774  EFBE  F013         	goto	i2l974
  6648  002778                     i2u780_40:
  6649  002778                     
  6650                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  6651  002778  ECFD  F019         	call	_TMR0_ISR	;wreg free
  6652  00277C                     i2l974:
  6653                           
  6654                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  6655  00277C  A29D               	btfss	157,1,c	;volatile
  6656  00277E  EFC3  F013         	goto	i2u781_41
  6657  002782  EFC5  F013         	goto	i2u781_40
  6658  002786                     i2u781_41:
  6659  002786  EFC6  F013         	goto	i2l976
  6660  00278A                     i2u781_40:
  6661  00278A  509E               	movf	158,w,c	;volatile
  6662  00278C                     i2l976:
  6663                           
  6664                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  6665  00278C  A2A0               	btfss	160,1,c	;volatile
  6666  00278E  EFCB  F013         	goto	i2u782_41
  6667  002792  EFCD  F013         	goto	i2u782_40
  6668  002796                     i2u782_41:
  6669  002796  EFCE  F013         	goto	i2l978
  6670  00279A                     i2u782_40:
  6671  00279A  50A1               	movf	161,w,c	;volatile
  6672  00279C                     i2l978:
  6673                           
  6674                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  6675  00279C  A0A0               	btfss	160,0,c	;volatile
  6676  00279E  EFD3  F013         	goto	i2u783_41
  6677  0027A2  EFD5  F013         	goto	i2u783_40
  6678  0027A6                     i2u783_41:
  6679  0027A6  EFD6  F013         	goto	i2l980
  6680  0027AA                     i2u783_40:
  6681  0027AA  50A1               	movf	161,w,c	;volatile
  6682  0027AC                     i2l980:
  6683                           
  6684                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  6685  0027AC  AA9D               	btfss	157,5,c	;volatile
  6686  0027AE  EFDB  F013         	goto	i2u784_41
  6687  0027B2  EFDD  F013         	goto	i2u784_40
  6688  0027B6                     i2u784_41:
  6689  0027B6  EFE6  F013         	goto	i2l982
  6690  0027BA                     i2u784_40:
  6691  0027BA  AA9E               	btfss	158,5,c	;volatile
  6692  0027BC  EFE2  F013         	goto	i2u785_41
  6693  0027C0  EFE4  F013         	goto	i2u785_40
  6694  0027C4                     i2u785_41:
  6695  0027C4  EFE6  F013         	goto	i2l982
  6696  0027C8                     i2u785_40:
  6697  0027C8                     
  6698                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  6699  0027C8  ECA6  F01A         	call	_EUSART_Rx_ISR	;wreg free
  6700  0027CC                     i2l982:
  6701                           
  6702                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  6703  0027CC  A89D               	btfss	157,4,c	;volatile
  6704  0027CE  EFEB  F013         	goto	i2u786_41
  6705  0027D2  EFED  F013         	goto	i2u786_40
  6706  0027D6                     i2u786_41:
  6707  0027D6  EFF6  F013         	goto	i2l984
  6708  0027DA                     i2u786_40:
  6709  0027DA  A89E               	btfss	158,4,c	;volatile
  6710  0027DC  EFF2  F013         	goto	i2u787_41
  6711  0027E0  EFF4  F013         	goto	i2u787_40
  6712  0027E4                     i2u787_41:
  6713  0027E4  EFF6  F013         	goto	i2l984
  6714  0027E8                     i2u787_40:
  6715  0027E8                     
  6716                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  6717  0027E8  EC24  F01B         	call	_EUSART_Tx_ISR	;wreg free
  6718  0027EC                     i2l984:
  6719                           
  6720                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  6721  0027EC  A6A0               	btfss	160,3,c	;volatile
  6722  0027EE  EFFB  F013         	goto	i2u788_41
  6723  0027F2  EFFD  F013         	goto	i2u788_40
  6724  0027F6                     i2u788_41:
  6725  0027F6  EFFE  F013         	goto	i2l986
  6726  0027FA                     i2u788_40:
  6727  0027FA  50A1               	movf	161,w,c	;volatile
  6728  0027FC                     i2l986:
  6729                           
  6730                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  6731  0027FC  A69D               	btfss	157,3,c	;volatile
  6732  0027FE  EF03  F014         	goto	i2u789_41
  6733  002802  EF05  F014         	goto	i2u789_40
  6734  002806                     i2u789_41:
  6735  002806  EF06  F014         	goto	i2l989
  6736  00280A                     i2u789_40:
  6737  00280A  509E               	movf	158,w,c	;volatile
  6738  00280C                     i2l989:
  6739  00280C  C025  FFF4         	movff	??_InterruptManagerHigh+5,prodh
  6740  002810  C024  FFF3         	movff	??_InterruptManagerHigh+4,prodl
  6741  002814  C023  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  6742  002818  C022  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  6743  00281C  C021  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  6744  002820  C020  FFFA         	movff	??_InterruptManagerHigh,pclath
  6745  002824  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6746  002826  0011               	retfie		f
  6747  002828                     __end_of_InterruptManagerHigh:
  6748                           	callstack 0
  6749                           
  6750 ;; *************** function _TMR0_ISR *****************
  6751 ;; Defined at:
  6752 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;Total ram usage:        2 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    3
  6773 ;; This function calls:
  6774 ;;		Absolute function
  6775 ;;		_Timer0_Handler
  6776 ;; This function is called by:
  6777 ;;		_InterruptManagerHigh
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text31
  6782  0033FA                     __ptext31:
  6783                           	callstack 0
  6784  0033FA                     _TMR0_ISR:
  6785                           	callstack 19
  6786  0033FA                     
  6787                           ;MCAL/Timer0/hal_timer0.c: 220:     (INTCONbits.TMR0IF = 0);
  6788  0033FA  94F2               	bcf	242,2,c	;volatile
  6789  0033FC                     
  6790                           ;MCAL/Timer0/hal_timer0.c: 228:     TMR0H = (uint8_t) (( (preloaded_val + 2) >> 8));
  6791  0033FC  0E02               	movlw	2
  6792  0033FE  242E               	addwf	_preloaded_val^0,w,c
  6793  003400  6E0E               	movwf	??_TMR0_ISR^0,c
  6794  003402  0E00               	movlw	0
  6795  003404  202F               	addwfc	(_preloaded_val+1)^0,w,c
  6796  003406  6E0F               	movwf	(??_TMR0_ISR+1)^0,c
  6797  003408  C00F  F00E         	movff	??_TMR0_ISR+1,??_TMR0_ISR
  6798  00340C  6A0F               	clrf	(??_TMR0_ISR+1)^0,c
  6799  00340E  500E               	movf	??_TMR0_ISR^0,w,c
  6800  003410  6ED7               	movwf	215,c	;volatile
  6801                           
  6802                           ;MCAL/Timer0/hal_timer0.c: 229:     TMR0L = (uint8_t) ((preloaded_val + 2) & 0x00ff);
  6803  003412  502E               	movf	_preloaded_val^0,w,c
  6804  003414  0F02               	addlw	2
  6805  003416  6ED6               	movwf	214,c	;volatile
  6806                           
  6807                           ;MCAL/Timer0/hal_timer0.c: 231:     if(tmr0_InterruptHandler)
  6808  003418  5030               	movf	_tmr0_InterruptHandler^0,w,c
  6809  00341A  1031               	iorwf	(_tmr0_InterruptHandler+1)^0,w,c
  6810  00341C  B4D8               	btfsc	status,2,c
  6811  00341E  EF13  F01A         	goto	i2u697_41
  6812  003422  EF15  F01A         	goto	i2u697_40
  6813  003426                     i2u697_41:
  6814  003426  EF21  F01A         	goto	i2l1389
  6815  00342A                     i2u697_40:
  6816  00342A                     
  6817                           ;MCAL/Timer0/hal_timer0.c: 232:     {;MCAL/Timer0/hal_timer0.c: 233:         tmr0_Interr
      +                          uptHandler();
  6818  00342A  D802               	call	i2u698_48
  6819  00342C  EF21  F01A         	goto	i2u698_49
  6820  003430                     i2u698_48:
  6821  003430  0005               	push	
  6822  003432  6EFA               	movwf	pclath,c
  6823  003434  5030               	movf	_tmr0_InterruptHandler^0,w,c
  6824  003436  6EFD               	movwf	tosl,c
  6825  003438  5031               	movf	(_tmr0_InterruptHandler+1)^0,w,c
  6826  00343A  6EFE               	movwf	tosh,c
  6827  00343C  6AFF               	clrf	tosu,c
  6828  00343E  50FA               	movf	pclath,w,c
  6829  003440  0012               	return		;indir
  6830  003442                     i2u698_49:
  6831  003442                     i2l1389:
  6832  003442  0012               	return		;funcret
  6833  003444                     __end_of_TMR0_ISR:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _Timer0_Handler *****************
  6837 ;; Defined at:
  6838 ;;		line 249 in file "Robot/Navigation/robot_navigation.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;Total ram usage:        0 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    2
  6859 ;; This function calls:
  6860 ;;		_ECU_DC_Motor_Stop
  6861 ;; This function is called by:
  6862 ;;		_TMR0_ISR
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text32
  6867  0035A2                     __ptext32:
  6868                           	callstack 0
  6869  0035A2                     _Timer0_Handler:
  6870                           	callstack 19
  6871  0035A2                     
  6872                           ;Robot/Navigation/robot_navigation.c: 251:     ECU_DC_Motor_Stop(&W1_W5_W2_W6_Motor_Cont
      +                          rol);
  6873  0035A2  0E51               	movlw	low _W1_W5_W2_W6_Motor_Control
  6874  0035A4  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  6875  0035A6  0E00               	movlw	high _W1_W5_W2_W6_Motor_Control
  6876  0035A8  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  6877  0035AA  EC6A  F01A         	call	_ECU_DC_Motor_Stop	;wreg free
  6878                           
  6879                           ;Robot/Navigation/robot_navigation.c: 252:     ECU_DC_Motor_Stop(&W3_Motor_Control);
  6880  0035AE  0E4F               	movlw	low _W3_Motor_Control
  6881  0035B0  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  6882  0035B2  0E00               	movlw	high _W3_Motor_Control
  6883  0035B4  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  6884  0035B6  EC6A  F01A         	call	_ECU_DC_Motor_Stop	;wreg free
  6885                           
  6886                           ;Robot/Navigation/robot_navigation.c: 253:     ECU_DC_Motor_Stop(&W4_Motor_Control);
  6887  0035BA  0E4D               	movlw	low _W4_Motor_Control
  6888  0035BC  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  6889  0035BE  0E00               	movlw	high _W4_Motor_Control
  6890  0035C0  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  6891  0035C2  EC6A  F01A         	call	_ECU_DC_Motor_Stop	;wreg free
  6892  0035C6  0012               	return		;funcret
  6893  0035C8                     __end_of_Timer0_Handler:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function _ECU_DC_Motor_Stop *****************
  6897 ;; Defined at:
  6898 ;;		line 82 in file "ECU/DC_Motor/ecu_dc_motor.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  dc_motor        2   10[COMRAM] PTR const struct .
  6901 ;;		 -> W4_Motor_Control(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control(2), 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  ret_value       1    0        unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      unsigned char 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;Total ram usage:        3 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    1
  6920 ;; This function calls:
  6921 ;;		i2_GPIO_Pin_Write_Logic
  6922 ;; This function is called by:
  6923 ;;		_Timer0_Handler
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text33
  6928  0034D4                     __ptext33:
  6929                           	callstack 0
  6930  0034D4                     _ECU_DC_Motor_Stop:
  6931                           	callstack 19
  6932  0034D4                     
  6933                           ;ECU/DC_Motor/ecu_dc_motor.c: 85:     if(((void*)0) == dc_motor)
  6934  0034D4  500B               	movf	ECU_DC_Motor_Stop@dc_motor^0,w,c
  6935  0034D6  100C               	iorwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
  6936  0034D8  A4D8               	btfss	status,2,c
  6937  0034DA  EF71  F01A         	goto	i2u612_41
  6938  0034DE  EF73  F01A         	goto	i2u612_40
  6939  0034E2                     i2u612_41:
  6940  0034E2  EF75  F01A         	goto	i2l6450
  6941  0034E6                     i2u612_40:
  6942  0034E6                     
  6943                           ;ECU/DC_Motor/ecu_dc_motor.c: 88:     }
  6944  0034E6  EF87  F01A         	goto	i2l70
  6945  0034EA                     i2l6450:
  6946                           
  6947                           ;ECU/DC_Motor/ecu_dc_motor.c: 90:     {;ECU/DC_Motor/ecu_dc_motor.c: 91:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor[0x01U]) , GPIO_LOW );
  6948  0034EA  0E01               	movlw	1
  6949  0034EC  240B               	addwf	ECU_DC_Motor_Stop@dc_motor^0,w,c
  6950  0034EE  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  6951  0034F0  0E00               	movlw	0
  6952  0034F2  200C               	addwfc	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
  6953  0034F4  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6954  0034F6  0E00               	movlw	0
  6955  0034F8  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  6956  0034FA  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  6957                           
  6958                           ;ECU/DC_Motor/ecu_dc_motor.c: 92:         GPIO_Pin_Write_Logic(&(dc_motor->dc_motor[0x00
      +                          U]) , GPIO_LOW );
  6959  0034FE  C00B  F001         	movff	ECU_DC_Motor_Stop@dc_motor,i2GPIO_Pin_Write_Logic@_pin_config
  6960  003502  C00C  F002         	movff	ECU_DC_Motor_Stop@dc_motor+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  6961  003506  0E00               	movlw	0
  6962  003508  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  6963  00350A  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  6964  00350E                     i2l70:
  6965  00350E  0012               	return		;funcret
  6966  003510                     __end_of_ECU_DC_Motor_Stop:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function _EUSART_Tx_ISR *****************
  6970 ;; Defined at:
  6971 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		None
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:        0 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_InterruptManagerHigh
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text34
  6999  003648                     __ptext34:
  7000                           	callstack 0
  7001  003648                     _EUSART_Tx_ISR:
  7002                           	callstack 22
  7003  003648  0012               	return		;funcret
  7004  00364A                     __end_of_EUSART_Tx_ISR:
  7005                           	callstack 0
  7006                           
  7007 ;; *************** function _EUSART_Rx_ISR *****************
  7008 ;; Defined at:
  7009 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;Total ram usage:        0 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    6
  7030 ;; This function calls:
  7031 ;;		Absolute function
  7032 ;;		_usart_isr
  7033 ;; This function is called by:
  7034 ;;		_InterruptManagerHigh
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text35
  7039  00354C                     __ptext35:
  7040                           	callstack 0
  7041  00354C                     _EUSART_Rx_ISR:
  7042                           	callstack 16
  7043  00354C                     
  7044                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
  7045  00354C  5042               	movf	_eusart_Rx_InterruptHandler^0,w,c
  7046  00354E  1043               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
  7047  003550  B4D8               	btfsc	status,2,c
  7048  003552  EFAD  F01A         	goto	i2u693_41
  7049  003556  EFAF  F01A         	goto	i2u693_40
  7050  00355A                     i2u693_41:
  7051  00355A  EFBB  F01A         	goto	i2l647
  7052  00355E                     i2u693_40:
  7053  00355E                     
  7054                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
  7055  00355E  D802               	call	i2u694_48
  7056  003560  EFBB  F01A         	goto	i2u694_49
  7057  003564                     i2u694_48:
  7058  003564  0005               	push	
  7059  003566  6EFA               	movwf	pclath,c
  7060  003568  5042               	movf	_eusart_Rx_InterruptHandler^0,w,c
  7061  00356A  6EFD               	movwf	tosl,c
  7062  00356C  5043               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
  7063  00356E  6EFE               	movwf	tosh,c
  7064  003570  6AFF               	clrf	tosu,c
  7065  003572  50FA               	movf	pclath,w,c
  7066  003574  0012               	return		;indir
  7067  003576                     i2u694_49:
  7068  003576                     i2l647:
  7069  003576  0012               	return		;funcret
  7070  003578                     __end_of_EUSART_Rx_ISR:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function _usart_isr *****************
  7074 ;; Defined at:
  7075 ;;		line 206 in file "application.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;		None
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      void 
  7082 ;; Registers used:
  7083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;Total ram usage:        0 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    5
  7096 ;; This function calls:
  7097 ;;		_Bluetooth_Send_Data_Non_Blocking
  7098 ;;		_EUSART_Async_Read_Data
  7099 ;;		_lcd_4bit_send_char_data_pos
  7100 ;;		i2_GPIO_Pin_Toggle_Logic
  7101 ;; This function is called by:
  7102 ;;		_EUSART_Rx_ISR
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text36
  7107  003444                     __ptext36:
  7108                           	callstack 0
  7109  003444                     _usart_isr:
  7110                           	callstack 16
  7111  003444                     
  7112                           ;application.c: 208:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
  7113  003444  0E9E               	movlw	low __uart_obj
  7114  003446  6E06               	movwf	EUSART_Async_Read_Data@_eusart_obj^0,c
  7115  003448  0E00               	movlw	high __uart_obj
  7116  00344A  6E07               	movwf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,c
  7117  00344C  0E48               	movlw	low _datarecive
  7118  00344E  6E08               	movwf	EUSART_Async_Read_Data@data^0,c
  7119  003450  0E00               	movlw	high _datarecive
  7120  003452  6E09               	movwf	(EUSART_Async_Read_Data@data+1)^0,c
  7121  003454  ECD2  F00E         	call	_EUSART_Async_Read_Data	;wreg free
  7122                           
  7123                           ;application.c: 209:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
  7124  003458  0E9E               	movlw	low __uart_obj
  7125  00345A  6E0D               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
  7126  00345C  0E00               	movlw	high __uart_obj
  7127  00345E  6E0E               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
  7128  003460  C04B  F00F         	movff	_datasend,Bluetooth_Send_Data_Non_Blocking@data
  7129  003464  ECBC  F01A         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  7130  003468                     
  7131                           ;application.c: 210:     lcd_4bit_send_char_data_pos(&lcd1,2,4,datarecive);
  7132  003468  0EBE               	movlw	low _lcd1
  7133  00346A  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7134  00346C  0E00               	movlw	high _lcd1
  7135  00346E  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  7136  003470  0E02               	movlw	2
  7137  003472  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7138  003474  0E04               	movlw	4
  7139  003476  6E1D               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  7140  003478  C048  F01E         	movff	_datarecive,lcd_4bit_send_char_data_pos@data
  7141  00347C  EC88  F01A         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7142  003480                     
  7143                           ;application.c: 211:     GPIO_Pin_Toggle_Logic(&pind2);
  7144  003480  0E55               	movlw	low _pind2
  7145  003482  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
  7146  003484  0E00               	movlw	high _pind2
  7147  003486  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  7148  003488  ECC6  F017         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
  7149  00348C  0012               	return		;funcret
  7150  00348E                     __end_of_usart_isr:
  7151                           	callstack 0
  7152                           
  7153 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
  7154 ;; Defined at:
  7155 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  7158 ;;		 -> pind2(1), 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  ERRORSTATUS     1    0        unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      unsigned char 
  7163 ;; Registers used:
  7164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:        8 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_usart_isr
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text37
  7184  002F8C                     __ptext37:
  7185                           	callstack 0
  7186  002F8C                     i2_GPIO_Pin_Toggle_Logic:
  7187                           	callstack 20
  7188  002F8C                     
  7189                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  7190  002F8C  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  7191  002F8E  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  7192  002F90  A4D8               	btfss	status,2,c
  7193  002F92  EFCD  F017         	goto	i2u639_41
  7194  002F96  EFCF  F017         	goto	i2u639_40
  7195  002F9A                     i2u639_41:
  7196  002F9A  EFD1  F017         	goto	i2l6628
  7197  002F9E                     i2u639_40:
  7198  002F9E                     
  7199                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  7200  002F9E  EFFD  F017         	goto	i2l726
  7201  002FA2                     i2l6628:
  7202                           
  7203                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  7204  002FA2  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  7205  002FA6  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  7206  002FAA  50DF               	movf	indf2,w,c
  7207  002FAC  0B07               	andlw	7
  7208  002FAE  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
  7209  002FB0  0E01               	movlw	1
  7210  002FB2  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
  7211  002FB4  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
  7212  002FB6  EFDF  F017         	goto	i2u640_44
  7213  002FBA                     i2u640_45:
  7214  002FBA  90D8               	bcf	status,0,c
  7215  002FBC  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
  7216  002FBE                     i2u640_44:
  7217  002FBE  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
  7218  002FC0  EFDD  F017         	goto	i2u640_45
  7219  002FC4  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  7220  002FC8  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  7221  002FCC  30DF               	rrcf	indf2,w,c
  7222  002FCE  32E8               	rrcf	wreg,f,c
  7223  002FD0  32E8               	rrcf	wreg,f,c
  7224  002FD2  0B07               	andlw	7
  7225  002FD4  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
  7226  002FD6  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
  7227  002FD8  0D02               	mullw	2
  7228  002FDA  0E8A               	movlw	low _lat_registers
  7229  002FDC  24F3               	addwf	243,w,c
  7230  002FDE  6ED9               	movwf	fsr2l,c
  7231  002FE0  0E00               	movlw	high _lat_registers
  7232  002FE2  20F4               	addwfc	prodh,w,c
  7233  002FE4  6EDA               	movwf	fsr2h,c
  7234  002FE6  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
  7235  002FEA  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
  7236  002FEE  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
  7237  002FF2  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
  7238  002FF6  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
  7239  002FF8  1ADF               	xorwf	indf2,f,c
  7240  002FFA                     i2l726:
  7241  002FFA  0012               	return		;funcret
  7242  002FFC                     __end_ofi2_GPIO_Pin_Toggle_Logic:
  7243                           	callstack 0
  7244                           
  7245 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  7246 ;; Defined at:
  7247 ;;		line 117 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  lcd             2   25[COMRAM] PTR const struct .
  7250 ;;		 -> lcd1(6), 
  7251 ;;  row             1   27[COMRAM] unsigned char 
  7252 ;;  colum           1   28[COMRAM] unsigned char 
  7253 ;;  data            1   29[COMRAM] unsigned char 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  ERRORSTATUS     1    0        unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      unsigned char 
  7258 ;; Registers used:
  7259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7265 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;Total ram usage:        6 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    4
  7272 ;; This function calls:
  7273 ;;		i2_lcd_4bit_send_char_data
  7274 ;;		i2_lcd_4bits_set_courser
  7275 ;; This function is called by:
  7276 ;;		_usart_isr
  7277 ;;		_lcd_4bit_send_custom_char
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text38
  7282  003510                     __ptext38:
  7283                           	callstack 0
  7284  003510                     _lcd_4bit_send_char_data_pos:
  7285                           	callstack 16
  7286  003510                     
  7287                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 120:     if ( ((void*)0)==lcd)
  7288  003510  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  7289  003512  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  7290  003514  A4D8               	btfss	status,2,c
  7291  003516  EF8F  F01A         	goto	i2u614_41
  7292  00351A  EF91  F01A         	goto	i2u614_40
  7293  00351E                     i2u614_41:
  7294  00351E  EF93  F01A         	goto	i2l6472
  7295  003522                     i2u614_40:
  7296  003522                     
  7297                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 123:     }
  7298  003522  EFA5  F01A         	goto	i2l116
  7299  003526                     i2l6472:
  7300                           
  7301                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 125:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 12
      +                          6:        lcd_4bits_set_courser(lcd,row,colum);
  7302  003526  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,i2lcd_4bits_set_courser@lcd
  7303  00352A  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,i2lcd_4bits_set_courser@lcd+1
  7304  00352E  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,i2lcd_4bits_set_courser@row
  7305  003532  C01D  F016         	movff	lcd_4bit_send_char_data_pos@colum,i2lcd_4bits_set_courser@colum
  7306  003536  EC38  F015         	call	i2_lcd_4bits_set_courser	;wreg free
  7307                           
  7308                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 127:        lcd_4bit_send_char_data(lcd,data);
  7309  00353A  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,i2lcd_4bit_send_char_data@lcd
  7310  00353E  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,i2lcd_4bit_send_char_data@lcd+1
  7311  003542  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,i2lcd_4bit_send_char_data@data
  7312  003546  EC32  F019         	call	i2_lcd_4bit_send_char_data	;wreg free
  7313  00354A                     i2l116:
  7314  00354A  0012               	return		;funcret
  7315  00354C                     __end_of_lcd_4bit_send_char_data_pos:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function i2_lcd_4bits_set_courser *****************
  7319 ;; Defined at:
  7320 ;;		line 567 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  lcd             2   18[COMRAM] PTR const struct .
  7323 ;;		 -> lcd1(6), 
  7324 ;;  row             1   20[COMRAM] unsigned char 
  7325 ;;  colum           1   21[COMRAM] unsigned char 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  ERRORSTATUS     1    0        unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      unsigned char 
  7330 ;; Registers used:
  7331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;Total ram usage:        7 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:    3
  7344 ;; This function calls:
  7345 ;;		i2_lcd_4bit_send_command
  7346 ;; This function is called by:
  7347 ;;		_lcd_4bit_send_char_data_pos
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text39
  7352  002A70                     __ptext39:
  7353                           	callstack 0
  7354  002A70                     i2_lcd_4bits_set_courser:
  7355                           	callstack 16
  7356  002A70                     
  7357                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 570:         if ( ((void*)0)==lcd)
  7358  002A70  5013               	movf	i2lcd_4bits_set_courser@lcd^0,w,c
  7359  002A72  1014               	iorwf	(i2lcd_4bits_set_courser@lcd+1)^0,w,c
  7360  002A74  A4D8               	btfss	status,2,c
  7361  002A76  EF3F  F015         	goto	i2u594_41
  7362  002A7A  EF41  F015         	goto	i2u594_40
  7363  002A7E                     i2u594_41:
  7364  002A7E  EF43  F015         	goto	i2l6344
  7365  002A82                     i2u594_40:
  7366  002A82                     
  7367                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 573:     }
  7368  002A82  EF8F  F015         	goto	i2l252
  7369  002A86                     i2l6344:
  7370                           
  7371                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 575:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 57
      +                          6:             colum--;
  7372  002A86  0616               	decf	i2lcd_4bits_set_courser@colum^0,f,c
  7373                           
  7374                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 577:             switch (row)
  7375  002A88  EF72  F015         	goto	i2l6356
  7376  002A8C                     i2l6346:
  7377  002A8C  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  7378  002A90  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  7379  002A94  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  7380  002A96  0F80               	addlw	128
  7381  002A98  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  7382  002A9A  EC01  F019         	call	i2_lcd_4bit_send_command	;wreg free
  7383  002A9E  EF8F  F015         	goto	i2l252
  7384  002AA2                     i2l6348:
  7385  002AA2  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  7386  002AA6  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  7387  002AAA  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  7388  002AAC  0FC0               	addlw	192
  7389  002AAE  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  7390  002AB0  EC01  F019         	call	i2_lcd_4bit_send_command	;wreg free
  7391  002AB4  EF8F  F015         	goto	i2l252
  7392  002AB8                     i2l6350:
  7393  002AB8  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  7394  002ABC  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  7395  002AC0  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  7396  002AC2  0F94               	addlw	148
  7397  002AC4  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  7398  002AC6  EC01  F019         	call	i2_lcd_4bit_send_command	;wreg free
  7399  002ACA  EF8F  F015         	goto	i2l252
  7400  002ACE                     i2l6352:
  7401  002ACE  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  7402  002AD2  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  7403  002AD6  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  7404  002AD8  0FD4               	addlw	212
  7405  002ADA  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  7406  002ADC  EC01  F019         	call	i2_lcd_4bit_send_command	;wreg free
  7407  002AE0  EF8F  F015         	goto	i2l252
  7408  002AE4                     i2l6356:
  7409  002AE4  5015               	movf	i2lcd_4bits_set_courser@row^0,w,c
  7410  002AE6  6E17               	movwf	??i2_lcd_4bits_set_courser^0,c
  7411  002AE8  6A18               	clrf	(??i2_lcd_4bits_set_courser+1)^0,c
  7412                           
  7413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7414                           ; Switch size 1, requested type "simple"
  7415                           ; Number of cases is 1, Range of values is 0 to 0
  7416                           ; switch strategies available:
  7417                           ; Name         Instructions Cycles
  7418                           ; simple_byte            4     3 (average)
  7419                           ;	Chosen strategy is simple_byte
  7420  002AEA  5018               	movf	(??i2_lcd_4bits_set_courser+1)^0,w,c
  7421  002AEC  0A00               	xorlw	0	; case 0
  7422  002AEE  B4D8               	btfsc	status,2,c
  7423  002AF0  EF7C  F015         	goto	i2l10222
  7424  002AF4  EF8F  F015         	goto	i2l252
  7425  002AF8                     i2l10222:
  7426                           
  7427                           ; Switch size 1, requested type "simple"
  7428                           ; Number of cases is 4, Range of values is 1 to 4
  7429                           ; switch strategies available:
  7430                           ; Name         Instructions Cycles
  7431                           ; simple_byte           13     7 (average)
  7432                           ;	Chosen strategy is simple_byte
  7433  002AF8  5017               	movf	??i2_lcd_4bits_set_courser^0,w,c
  7434  002AFA  0A01               	xorlw	1	; case 1
  7435  002AFC  B4D8               	btfsc	status,2,c
  7436  002AFE  EF46  F015         	goto	i2l6346
  7437  002B02  0A03               	xorlw	3	; case 2
  7438  002B04  B4D8               	btfsc	status,2,c
  7439  002B06  EF51  F015         	goto	i2l6348
  7440  002B0A  0A01               	xorlw	1	; case 3
  7441  002B0C  B4D8               	btfsc	status,2,c
  7442  002B0E  EF5C  F015         	goto	i2l6350
  7443  002B12  0A07               	xorlw	7	; case 4
  7444  002B14  B4D8               	btfsc	status,2,c
  7445  002B16  EF67  F015         	goto	i2l6352
  7446  002B1A  EF8F  F015         	goto	i2l252
  7447  002B1E                     i2l252:
  7448  002B1E  0012               	return		;funcret
  7449  002B20                     __end_ofi2_lcd_4bits_set_courser:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function i2_lcd_4bit_send_command *****************
  7453 ;; Defined at:
  7454 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  lcd             2   14[COMRAM] PTR const struct .
  7457 ;;		 -> lcd1(6), 
  7458 ;;  command         1   16[COMRAM] unsigned char 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  ERRORSTATUS     1    0        unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      unsigned char 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7470 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;Total ram usage:        4 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:    2
  7477 ;; This function calls:
  7478 ;;		i2_GPIO_Pin_Write_Logic
  7479 ;;		i2_lcd_4bits_send_enable_signal
  7480 ;;		i2_lcd_send_4bits
  7481 ;; This function is called by:
  7482 ;;		i2_lcd_4bits_set_courser
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text40
  7487  003202                     __ptext40:
  7488                           	callstack 0
  7489  003202                     i2_lcd_4bit_send_command:
  7490                           	callstack 16
  7491  003202                     
  7492                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  7493  003202  500F               	movf	i2lcd_4bit_send_command@lcd^0,w,c
  7494  003204  1010               	iorwf	(i2lcd_4bit_send_command@lcd+1)^0,w,c
  7495  003206  A4D8               	btfss	status,2,c
  7496  003208  EF08  F019         	goto	i2u494_41
  7497  00320C  EF0A  F019         	goto	i2u494_40
  7498  003210                     i2u494_41:
  7499  003210  EF0C  F019         	goto	i2l5796
  7500  003214                     i2u494_40:
  7501  003214                     
  7502                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  7503  003214  EF31  F019         	goto	i2l106
  7504  003218                     i2l5796:
  7505  003218  C00F  F001         	movff	i2lcd_4bit_send_command@lcd,i2GPIO_Pin_Write_Logic@_pin_config
  7506  00321C  C010  F002         	movff	i2lcd_4bit_send_command@lcd+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  7507  003220  0E00               	movlw	0
  7508  003222  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7509  003224  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7510                           
  7511                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  7512  003228  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
  7513  00322C  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
  7514  003230  3811               	swapf	i2lcd_4bit_send_command@command^0,w,c
  7515  003232  0B0F               	andlw	15
  7516  003234  6E0D               	movwf	i2lcd_send_4bits@data_command^0,c
  7517  003236  EC17  F017         	call	i2_lcd_send_4bits	;wreg free
  7518                           
  7519                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  7520  00323A  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bits_send_enable_signal@lcd
  7521  00323E  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  7522  003242  EC47  F01A         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  7523                           
  7524                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  7525  003246  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
  7526  00324A  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
  7527  00324E  C011  F00D         	movff	i2lcd_4bit_send_command@command,i2lcd_send_4bits@data_command
  7528  003252  EC17  F017         	call	i2_lcd_send_4bits	;wreg free
  7529                           
  7530                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  7531  003256  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bits_send_enable_signal@lcd
  7532  00325A  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  7533  00325E  EC47  F01A         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  7534  003262                     i2l106:
  7535  003262  0012               	return		;funcret
  7536  003264                     __end_ofi2_lcd_4bit_send_command:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function i2_lcd_4bit_send_char_data *****************
  7540 ;; Defined at:
  7541 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  lcd             2   14[COMRAM] PTR const struct .
  7544 ;;		 -> lcd1(6), 
  7545 ;;  data            1   16[COMRAM] unsigned char 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;  ERRORSTATUS     1    0        unsigned char 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      unsigned char 
  7550 ;; Registers used:
  7551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7557 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;Total ram usage:        4 bytes
  7562 ;; Hardware stack levels used:    1
  7563 ;; Hardware stack levels required when called:    2
  7564 ;; This function calls:
  7565 ;;		i2_GPIO_Pin_Write_Logic
  7566 ;;		i2_lcd_4bits_send_enable_signal
  7567 ;;		i2_lcd_send_4bits
  7568 ;; This function is called by:
  7569 ;;		_lcd_4bit_send_char_data_pos
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           	psect	text41
  7574  003264                     __ptext41:
  7575                           	callstack 0
  7576  003264                     i2_lcd_4bit_send_char_data:
  7577                           	callstack 17
  7578  003264                     
  7579                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  7580  003264  500F               	movf	i2lcd_4bit_send_char_data@lcd^0,w,c
  7581  003266  1010               	iorwf	(i2lcd_4bit_send_char_data@lcd+1)^0,w,c
  7582  003268  A4D8               	btfss	status,2,c
  7583  00326A  EF39  F019         	goto	i2u593_41
  7584  00326E  EF3B  F019         	goto	i2u593_40
  7585  003272                     i2u593_41:
  7586  003272  EF3D  F019         	goto	i2l6334
  7587  003276                     i2u593_40:
  7588  003276                     
  7589                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  7590  003276  EF62  F019         	goto	i2l111
  7591  00327A                     i2l6334:
  7592  00327A  C00F  F001         	movff	i2lcd_4bit_send_char_data@lcd,i2GPIO_Pin_Write_Logic@_pin_config
  7593  00327E  C010  F002         	movff	i2lcd_4bit_send_char_data@lcd+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  7594  003282  0E01               	movlw	1
  7595  003284  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7596  003286  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7597                           
  7598                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  7599  00328A  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
  7600  00328E  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
  7601  003292  3811               	swapf	i2lcd_4bit_send_char_data@data^0,w,c
  7602  003294  0B0F               	andlw	15
  7603  003296  6E0D               	movwf	i2lcd_send_4bits@data_command^0,c
  7604  003298  EC17  F017         	call	i2_lcd_send_4bits	;wreg free
  7605                           
  7606                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  7607  00329C  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bits_send_enable_signal@lcd
  7608  0032A0  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  7609  0032A4  EC47  F01A         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  7610                           
  7611                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  7612  0032A8  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
  7613  0032AC  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
  7614  0032B0  C011  F00D         	movff	i2lcd_4bit_send_char_data@data,i2lcd_send_4bits@data_command
  7615  0032B4  EC17  F017         	call	i2_lcd_send_4bits	;wreg free
  7616                           
  7617                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  7618  0032B8  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bits_send_enable_signal@lcd
  7619  0032BC  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  7620  0032C0  EC47  F01A         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  7621  0032C4                     i2l111:
  7622  0032C4  0012               	return		;funcret
  7623  0032C6                     __end_ofi2_lcd_4bit_send_char_data:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function i2_lcd_send_4bits *****************
  7627 ;; Defined at:
  7628 ;;		line 505 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  lcd             2   10[COMRAM] PTR const struct .
  7631 ;;		 -> lcd1(6), 
  7632 ;;  data_command    1   12[COMRAM] unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  ERRORSTATUS     1    0        unsigned char 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      unsigned char 
  7637 ;; Registers used:
  7638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7644 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;Total ram usage:        4 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    1
  7651 ;; This function calls:
  7652 ;;		i2_GPIO_Pin_Write_Logic
  7653 ;; This function is called by:
  7654 ;;		i2_lcd_4bit_send_command
  7655 ;;		i2_lcd_4bit_send_char_data
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text42
  7660  002E2E                     __ptext42:
  7661                           	callstack 0
  7662  002E2E                     i2_lcd_send_4bits:
  7663                           	callstack 16
  7664  002E2E                     
  7665                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 508:         if ( ((void*)0)==lcd)
  7666  002E2E  500B               	movf	i2lcd_send_4bits@lcd^0,w,c
  7667  002E30  100C               	iorwf	(i2lcd_send_4bits@lcd+1)^0,w,c
  7668  002E32  A4D8               	btfss	status,2,c
  7669  002E34  EF1E  F017         	goto	i2u481_41
  7670  002E38  EF20  F017         	goto	i2u481_40
  7671  002E3C                     i2u481_41:
  7672  002E3C  EF22  F017         	goto	i2l5714
  7673  002E40                     i2u481_40:
  7674  002E40                     
  7675                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 511:     }
  7676  002E40  EF53  F017         	goto	i2l223
  7677  002E44                     i2l5714:
  7678                           
  7679                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 513:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 51
      +                          4:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  7680  002E44  0E02               	movlw	2
  7681  002E46  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  7682  002E48  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  7683  002E4A  0E00               	movlw	0
  7684  002E4C  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  7685  002E4E  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  7686  002E50  500D               	movf	i2lcd_send_4bits@data_command^0,w,c
  7687  002E52  0B01               	andlw	1
  7688  002E54  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7689  002E56  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7690                           
  7691                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  7692  002E5A  0E03               	movlw	3
  7693  002E5C  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  7694  002E5E  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  7695  002E60  0E00               	movlw	0
  7696  002E62  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  7697  002E64  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  7698  002E66  90D8               	bcf	status,0,c
  7699  002E68  300D               	rrcf	i2lcd_send_4bits@data_command^0,w,c
  7700  002E6A  0B01               	andlw	1
  7701  002E6C  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7702  002E6E  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7703                           
  7704                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 516:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  7705  002E72  0E04               	movlw	4
  7706  002E74  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  7707  002E76  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  7708  002E78  0E00               	movlw	0
  7709  002E7A  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  7710  002E7C  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  7711  002E7E  400D               	rrncf	i2lcd_send_4bits@data_command^0,w,c
  7712  002E80  42E8               	rrncf	wreg,f,c
  7713  002E82  0B3F               	andlw	63
  7714  002E84  0B01               	andlw	1
  7715  002E86  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7716  002E88  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7717                           
  7718                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 517:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  7719  002E8C  0E05               	movlw	5
  7720  002E8E  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  7721  002E90  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  7722  002E92  0E00               	movlw	0
  7723  002E94  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  7724  002E96  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  7725  002E98  380D               	swapf	i2lcd_send_4bits@data_command^0,w,c
  7726  002E9A  46E8               	rlncf	wreg,f,c
  7727  002E9C  0B1F               	andlw	31
  7728  002E9E  0B01               	andlw	1
  7729  002EA0  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7730  002EA2  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7731  002EA6                     i2l223:
  7732  002EA6  0012               	return		;funcret
  7733  002EA8                     __end_ofi2_lcd_send_4bits:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function i2_lcd_4bits_send_enable_signal *****************
  7737 ;; Defined at:
  7738 ;;		line 488 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  lcd             2   10[COMRAM] PTR const struct .
  7741 ;;		 -> lcd1(6), 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  ERRORSTATUS     1    0        unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      unsigned char 
  7746 ;; Registers used:
  7747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;Total ram usage:        3 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    1
  7760 ;; This function calls:
  7761 ;;		i2_GPIO_Pin_Write_Logic
  7762 ;; This function is called by:
  7763 ;;		i2_lcd_4bit_send_command
  7764 ;;		i2_lcd_4bit_send_char_data
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text43
  7769  00348E                     __ptext43:
  7770                           	callstack 0
  7771  00348E                     i2_lcd_4bits_send_enable_signal:
  7772                           	callstack 16
  7773  00348E                     
  7774                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 491:         if ( ((void*)0)==lcd)
  7775  00348E  500B               	movf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
  7776  003490  100C               	iorwf	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  7777  003492  A4D8               	btfss	status,2,c
  7778  003494  EF4E  F01A         	goto	i2u480_41
  7779  003498  EF50  F01A         	goto	i2u480_40
  7780  00349C                     i2u480_41:
  7781  00349C  EF52  F01A         	goto	i2l5700
  7782  0034A0                     i2u480_40:
  7783  0034A0                     
  7784                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 494:     }
  7785  0034A0  EF69  F01A         	goto	i2l218
  7786  0034A4                     i2l5700:
  7787                           
  7788                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 496:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 49
      +                          7:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  7789  0034A4  0E01               	movlw	1
  7790  0034A6  240B               	addwf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
  7791  0034A8  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  7792  0034AA  0E00               	movlw	0
  7793  0034AC  200C               	addwfc	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  7794  0034AE  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  7795  0034B0  0E01               	movlw	1
  7796  0034B2  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7797  0034B4  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7798  0034B8                     
  7799                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 498:             _delay((unsigned long)((5)*(24000
      +                          000/4000000.0)));
  7800  0034B8  0E0A               	movlw	10
  7801  0034BA                     i2u1087_47:
  7802  0034BA  2EE8               	decfsz	wreg,f,c
  7803  0034BC  D7FE               	bra	i2u1087_47
  7804  0034BE                     
  7805                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 499:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  7806  0034BE  0E01               	movlw	1
  7807  0034C0  240B               	addwf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
  7808  0034C2  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  7809  0034C4  0E00               	movlw	0
  7810  0034C6  200C               	addwfc	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  7811  0034C8  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  7812  0034CA  0E00               	movlw	0
  7813  0034CC  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  7814  0034CE  EC89  F012         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  7815  0034D2                     i2l218:
  7816  0034D2  0012               	return		;funcret
  7817  0034D4                     __end_ofi2_lcd_4bits_send_enable_signal:
  7818                           	callstack 0
  7819                           
  7820 ;; *************** function i2_GPIO_Pin_Write_Logic *****************
  7821 ;; Defined at:
  7822 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  7825 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  7826 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  7827 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  7828 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  7829 ;;  logic           1    2[COMRAM] enum E2958
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  ERRORSTATUS     1    9[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      unsigned char 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7841 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7843 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;Total ram usage:       10 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_ECU_DC_Motor_Stop
  7851 ;;		i2_lcd_4bit_send_command
  7852 ;;		i2_lcd_4bit_send_char_data
  7853 ;;		i2_lcd_4bits_send_enable_signal
  7854 ;;		i2_lcd_send_4bits
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text44
  7859  002512                     __ptext44:
  7860                           	callstack 0
  7861  002512                     i2_GPIO_Pin_Write_Logic:
  7862                           	callstack 19
  7863  002512                     
  7864                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  7865  002512  0E01               	movlw	1
  7866  002514  6E0A               	movwf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  7867  002516                     
  7868                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  7869  002516  5001               	movf	i2GPIO_Pin_Write_Logic@_pin_config^0,w,c
  7870  002518  1002               	iorwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  7871  00251A  B4D8               	btfsc	status,2,c
  7872  00251C  EF92  F012         	goto	i2u476_41
  7873  002520  EF94  F012         	goto	i2u476_40
  7874  002524                     i2u476_41:
  7875  002524  EFA3  F012         	goto	i2l5676
  7876  002528                     i2u476_40:
  7877  002528  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  7878  00252C  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  7879  002530  50DF               	movf	indf2,w,c
  7880  002532  0B07               	andlw	7
  7881  002534  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  7882  002536  0E07               	movlw	7
  7883  002538  6404               	cpfsgt	??i2_GPIO_Pin_Write_Logic^0,c
  7884  00253A  EFA1  F012         	goto	i2u477_41
  7885  00253E  EFA3  F012         	goto	i2u477_40
  7886  002542                     i2u477_41:
  7887  002542  EF06  F013         	goto	i2l5684
  7888  002546                     i2u477_40:
  7889  002546                     i2l5676:
  7890                           
  7891                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  7892  002546  0E00               	movlw	0
  7893  002548  6E0A               	movwf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  7894                           
  7895                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  7896  00254A  EF1B  F013         	goto	i2l5686
  7897  00254E                     i2l5678:
  7898                           
  7899                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  7900  00254E  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  7901  002552  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  7902  002556  50DF               	movf	indf2,w,c
  7903  002558  0B07               	andlw	7
  7904  00255A  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  7905  00255C  0E01               	movlw	1
  7906  00255E  6E05               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  7907  002560  2A04               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
  7908  002562  EFB5  F012         	goto	i2u478_44
  7909  002566                     i2u478_45:
  7910  002566  90D8               	bcf	status,0,c
  7911  002568  3605               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
  7912  00256A                     i2u478_44:
  7913  00256A  2E04               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
  7914  00256C  EFB3  F012         	goto	i2u478_45
  7915  002570  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  7916  002572  0AFF               	xorlw	255
  7917  002574  6E06               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
  7918  002576  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  7919  00257A  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  7920  00257E  30DF               	rrcf	indf2,w,c
  7921  002580  32E8               	rrcf	wreg,f,c
  7922  002582  32E8               	rrcf	wreg,f,c
  7923  002584  0B07               	andlw	7
  7924  002586  6E07               	movwf	(??i2_GPIO_Pin_Write_Logic+3)^0,c
  7925  002588  5007               	movf	(??i2_GPIO_Pin_Write_Logic+3)^0,w,c
  7926  00258A  0D02               	mullw	2
  7927  00258C  0E8A               	movlw	low _lat_registers
  7928  00258E  24F3               	addwf	243,w,c
  7929  002590  6ED9               	movwf	fsr2l,c
  7930  002592  0E00               	movlw	high _lat_registers
  7931  002594  20F4               	addwfc	prodh,w,c
  7932  002596  6EDA               	movwf	fsr2h,c
  7933  002598  CFDE F008          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+4
  7934  00259C  CFDD F009          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+5
  7935  0025A0  C008  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2l
  7936  0025A4  C009  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+5,fsr2h
  7937  0025A8  5006               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
  7938  0025AA  16DF               	andwf	indf2,f,c
  7939                           
  7940                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  7941  0025AC  EF1B  F013         	goto	i2l5686
  7942  0025B0                     i2l5680:
  7943                           
  7944                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  7945  0025B0  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  7946  0025B4  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  7947  0025B8  50DF               	movf	indf2,w,c
  7948  0025BA  0B07               	andlw	7
  7949  0025BC  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  7950  0025BE  0E01               	movlw	1
  7951  0025C0  6E05               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  7952  0025C2  2A04               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
  7953  0025C4  EFE6  F012         	goto	i2u479_44
  7954  0025C8                     i2u479_45:
  7955  0025C8  90D8               	bcf	status,0,c
  7956  0025CA  3605               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
  7957  0025CC                     i2u479_44:
  7958  0025CC  2E04               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
  7959  0025CE  EFE4  F012         	goto	i2u479_45
  7960  0025D2  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  7961  0025D6  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  7962  0025DA  30DF               	rrcf	indf2,w,c
  7963  0025DC  32E8               	rrcf	wreg,f,c
  7964  0025DE  32E8               	rrcf	wreg,f,c
  7965  0025E0  0B07               	andlw	7
  7966  0025E2  6E06               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
  7967  0025E4  5006               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
  7968  0025E6  0D02               	mullw	2
  7969  0025E8  0E8A               	movlw	low _lat_registers
  7970  0025EA  24F3               	addwf	243,w,c
  7971  0025EC  6ED9               	movwf	fsr2l,c
  7972  0025EE  0E00               	movlw	high _lat_registers
  7973  0025F0  20F4               	addwfc	prodh,w,c
  7974  0025F2  6EDA               	movwf	fsr2h,c
  7975  0025F4  CFDE F007          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+3
  7976  0025F8  CFDD F008          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+4
  7977  0025FC  C007  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+3,fsr2l
  7978  002600  C008  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2h
  7979  002604  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  7980  002606  12DF               	iorwf	indf2,f,c
  7981                           
  7982                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  7983  002608  EF1B  F013         	goto	i2l5686
  7984  00260C                     i2l5684:
  7985  00260C  5003               	movf	i2GPIO_Pin_Write_Logic@logic^0,w,c
  7986  00260E  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  7987  002610  6A05               	clrf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  7988                           
  7989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7990                           ; Switch size 1, requested type "simple"
  7991                           ; Number of cases is 1, Range of values is 0 to 0
  7992                           ; switch strategies available:
  7993                           ; Name         Instructions Cycles
  7994                           ; simple_byte            4     3 (average)
  7995                           ;	Chosen strategy is simple_byte
  7996  002612  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  7997  002614  0A00               	xorlw	0	; case 0
  7998  002616  B4D8               	btfsc	status,2,c
  7999  002618  EF10  F013         	goto	i2l10224
  8000  00261C  EFA3  F012         	goto	i2l5676
  8001  002620                     i2l10224:
  8002                           
  8003                           ; Switch size 1, requested type "simple"
  8004                           ; Number of cases is 2, Range of values is 0 to 1
  8005                           ; switch strategies available:
  8006                           ; Name         Instructions Cycles
  8007                           ; simple_byte            7     4 (average)
  8008                           ;	Chosen strategy is simple_byte
  8009  002620  5004               	movf	??i2_GPIO_Pin_Write_Logic^0,w,c
  8010  002622  0A00               	xorlw	0	; case 0
  8011  002624  B4D8               	btfsc	status,2,c
  8012  002626  EFA7  F012         	goto	i2l5678
  8013  00262A  0A01               	xorlw	1	; case 1
  8014  00262C  B4D8               	btfsc	status,2,c
  8015  00262E  EFD8  F012         	goto	i2l5680
  8016  002632  EFA3  F012         	goto	i2l5676
  8017  002636                     i2l5686:
  8018                           
  8019                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  8020  002636  500A               	movf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  8021  002638  0012               	return		;funcret
  8022  00263A                     __end_ofi2_GPIO_Pin_Write_Logic:
  8023                           	callstack 0
  8024                           
  8025 ;; *************** function _EUSART_Async_Read_Data *****************
  8026 ;; Defined at:
  8027 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
  8030 ;;		 -> _uart_obj(12), 
  8031 ;;  data            2    7[COMRAM] PTR unsigned short 
  8032 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  l_temp_data     2   18[COMRAM] unsigned short 
  8035 ;;  ret_val         1    0        unsigned char 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      unsigned char 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;Total ram usage:       15 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; Hardware stack levels required when called:    1
  8052 ;; This function calls:
  8053 ;;		_calc_parity_even
  8054 ;;		_calc_parity_odd
  8055 ;; This function is called by:
  8056 ;;		_usart_isr
  8057 ;;		_Bluetooth_Recieve_Data_Non_Blocking
  8058 ;;		_EUSART_Async_Read_Data_Blocking
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text45
  8063  001DA4                     __ptext45:
  8064                           	callstack 0
  8065  001DA4                     _EUSART_Async_Read_Data:
  8066                           	callstack 19
  8067  001DA4                     
  8068                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
  8069  001DA4  0E00               	movlw	0
  8070  001DA6  6E14               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
  8071  001DA8  0E00               	movlw	0
  8072  001DAA  6E13               	movwf	EUSART_Async_Read_Data@l_temp_data^0,c
  8073  001DAC                     
  8074                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
  8075  001DAC  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8076  001DAE  1007               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8077  001DB0  B4D8               	btfsc	status,2,c
  8078  001DB2  EFDD  F00E         	goto	i2u596_41
  8079  001DB6  EFDF  F00E         	goto	i2u596_40
  8080  001DBA                     i2u596_41:
  8081  001DBA  EFE8  F00E         	goto	i2l6378
  8082  001DBE                     i2u596_40:
  8083  001DBE  5008               	movf	EUSART_Async_Read_Data@data^0,w,c
  8084  001DC0  1009               	iorwf	(EUSART_Async_Read_Data@data+1)^0,w,c
  8085  001DC2  A4D8               	btfss	status,2,c
  8086  001DC4  EFE6  F00E         	goto	i2u597_41
  8087  001DC8  EFE8  F00E         	goto	i2u597_40
  8088  001DCC                     i2u597_41:
  8089  001DCC  EFEA  F00E         	goto	i2l498
  8090  001DD0                     i2u597_40:
  8091  001DD0                     i2l6378:
  8092                           
  8093                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
  8094  001DD0  EFC6  F00F         	goto	i2l6428
  8095  001DD4                     i2l498:
  8096                           
  8097                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
  8098  001DD4  AA9E               	btfss	158,5,c	;volatile
  8099  001DD6  EFEF  F00E         	goto	i2u598_41
  8100  001DDA  EFF1  F00E         	goto	i2u598_40
  8101  001DDE                     i2u598_41:
  8102  001DDE  EFE8  F00E         	goto	i2l6378
  8103  001DE2                     i2u598_40:
  8104  001DE2                     
  8105                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
  8106  001DE2  EE20 F009          	lfsr	2,9
  8107  001DE6  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8108  001DE8  26D9               	addwf	fsr2l,f,c
  8109  001DEA  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8110  001DEC  22DA               	addwfc	fsr2h,f,c
  8111  001DEE  B8DF               	btfsc	indf2,4,c
  8112  001DF0  EFFC  F00E         	goto	i2u599_41
  8113  001DF4  EFFE  F00E         	goto	i2u599_40
  8114  001DF8                     i2u599_41:
  8115  001DF8  EF0B  F00F         	goto	i2l6384
  8116  001DFC                     i2u599_40:
  8117  001DFC                     
  8118                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
  8119  001DFC  50AE               	movf	174,w,c	;volatile
  8120  001DFE  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
  8121  001E00  6A0B               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
  8122  001E02  C008  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
  8123  001E06  C009  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
  8124  001E0A  C00A  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
  8125  001E0E  C00B  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
  8126                           
  8127                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
  8128  001E12  EFC6  F00F         	goto	i2l6428
  8129  001E16                     i2l6384:
  8130  001E16  EE20 F009          	lfsr	2,9
  8131  001E1A  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8132  001E1C  26D9               	addwf	fsr2l,f,c
  8133  001E1E  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8134  001E20  22DA               	addwfc	fsr2h,f,c
  8135  001E22  A8DF               	btfss	indf2,4,c
  8136  001E24  EF16  F00F         	goto	i2u600_41
  8137  001E28  EF18  F00F         	goto	i2u600_40
  8138  001E2C                     i2u600_41:
  8139  001E2C  EFC6  F00F         	goto	i2l511
  8140  001E30                     i2u600_40:
  8141  001E30                     
  8142                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
  8143  001E30  EE20 F009          	lfsr	2,9
  8144  001E34  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8145  001E36  26D9               	addwf	fsr2l,f,c
  8146  001E38  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8147  001E3A  22DA               	addwfc	fsr2h,f,c
  8148  001E3C  30DF               	rrcf	indf2,w,c
  8149  001E3E  0B03               	andlw	3
  8150  001E40  0900               	iorlw	0
  8151  001E42  A4D8               	btfss	status,2,c
  8152  001E44  EF26  F00F         	goto	i2u601_41
  8153  001E48  EF28  F00F         	goto	i2u601_40
  8154  001E4C                     i2u601_41:
  8155  001E4C  EF4A  F00F         	goto	i2l6398
  8156  001E50                     i2u601_40:
  8157  001E50                     
  8158                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
  8159  001E50  CFAE F013          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
  8160  001E54  6A14               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
  8161                           
  8162                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
  8163  001E56  B0AB               	btfsc	4011,0,c	;volatile
  8164  001E58  EF30  F00F         	goto	i2u602_41
  8165  001E5C  EF32  F00F         	goto	i2u602_40
  8166  001E60                     i2u602_41:
  8167  001E60  EF38  F00F         	goto	i2l6392
  8168  001E64                     i2u602_40:
  8169  001E64  0E00               	movlw	0
  8170  001E66  6E0E               	movwf	(_EUSART_Async_Read_Data$1599+1)^0,c
  8171  001E68  0E00               	movlw	0
  8172  001E6A  6E0D               	movwf	_EUSART_Async_Read_Data$1599^0,c
  8173  001E6C  EF3C  F00F         	goto	i2l6394
  8174  001E70                     i2l6392:
  8175  001E70  0E01               	movlw	1
  8176  001E72  6E0E               	movwf	(_EUSART_Async_Read_Data$1599+1)^0,c
  8177  001E74  0E00               	movlw	0
  8178  001E76  6E0D               	movwf	_EUSART_Async_Read_Data$1599^0,c
  8179  001E78                     i2l6394:
  8180  001E78  500D               	movf	_EUSART_Async_Read_Data$1599^0,w,c
  8181  001E7A  2613               	addwf	EUSART_Async_Read_Data@l_temp_data^0,f,c
  8182  001E7C  500E               	movf	(_EUSART_Async_Read_Data$1599+1)^0,w,c
  8183  001E7E  2214               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
  8184  001E80                     
  8185                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
  8186  001E80  C008  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
  8187  001E84  C009  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
  8188  001E88  C013  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
  8189  001E8C  C014  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
  8190                           
  8191                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
  8192  001E90  EFC6  F00F         	goto	i2l6428
  8193  001E94                     i2l6398:
  8194  001E94  EE20 F009          	lfsr	2,9
  8195  001E98  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8196  001E9A  26D9               	addwf	fsr2l,f,c
  8197  001E9C  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8198  001E9E  22DA               	addwfc	fsr2h,f,c
  8199  001EA0  30DF               	rrcf	indf2,w,c
  8200  001EA2  0B03               	andlw	3
  8201  001EA4  06E8               	decf	wreg,f,c
  8202  001EA6  A4D8               	btfss	status,2,c
  8203  001EA8  EF58  F00F         	goto	i2u603_41
  8204  001EAC  EF5A  F00F         	goto	i2u603_40
  8205  001EB0                     i2u603_41:
  8206  001EB0  EF8F  F00F         	goto	i2l6412
  8207  001EB4                     i2u603_40:
  8208  001EB4                     
  8209                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
  8210  001EB4  CFAE F013          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
  8211  001EB8  6A14               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
  8212                           
  8213                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
  8214  001EBA  B0AB               	btfsc	171,0,c	;volatile
  8215  001EBC  EF62  F00F         	goto	i2u604_41
  8216  001EC0  EF64  F00F         	goto	i2u604_40
  8217  001EC4                     i2u604_41:
  8218  001EC4  EF6A  F00F         	goto	i2l6404
  8219  001EC8                     i2u604_40:
  8220  001EC8  0E00               	movlw	0
  8221  001ECA  6E10               	movwf	(_EUSART_Async_Read_Data$1600+1)^0,c
  8222  001ECC  0E00               	movlw	0
  8223  001ECE  6E0F               	movwf	_EUSART_Async_Read_Data$1600^0,c
  8224  001ED0  EF6E  F00F         	goto	i2l6406
  8225  001ED4                     i2l6404:
  8226  001ED4  0E01               	movlw	1
  8227  001ED6  6E10               	movwf	(_EUSART_Async_Read_Data$1600+1)^0,c
  8228  001ED8  0E00               	movlw	0
  8229  001EDA  6E0F               	movwf	_EUSART_Async_Read_Data$1600^0,c
  8230  001EDC                     i2l6406:
  8231  001EDC  500F               	movf	_EUSART_Async_Read_Data$1600^0,w,c
  8232  001EDE  2613               	addwf	EUSART_Async_Read_Data@l_temp_data^0,f,c
  8233  001EE0  5010               	movf	(_EUSART_Async_Read_Data$1600+1)^0,w,c
  8234  001EE2  2214               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
  8235  001EE4                     
  8236                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
  8237  001EE4  5013               	movf	EUSART_Async_Read_Data@l_temp_data^0,w,c
  8238  001EE6  EC69  F018         	call	_calc_parity_even
  8239  001EEA  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
  8240  001EEC  5014               	movf	(EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
  8241  001EEE  180A               	xorwf	??_EUSART_Async_Read_Data^0,w,c
  8242  001EF0  A4D8               	btfss	status,2,c
  8243  001EF2  EF7D  F00F         	goto	i2u605_41
  8244  001EF6  EF7F  F00F         	goto	i2u605_40
  8245  001EFA                     i2u605_41:
  8246  001EFA  EFC6  F00F         	goto	i2l511
  8247  001EFE                     i2u605_40:
  8248  001EFE                     i2l6410:
  8249                           
  8250                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
  8251  001EFE  0EFF               	movlw	255
  8252  001F00  1413               	andwf	EUSART_Async_Read_Data@l_temp_data^0,w,c
  8253  001F02  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
  8254  001F04  0E00               	movlw	0
  8255  001F06  1414               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
  8256  001F08  6E0B               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
  8257  001F0A  C008  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
  8258  001F0E  C009  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
  8259  001F12  C00A  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
  8260  001F16  C00B  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
  8261                           
  8262                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
  8263  001F1A  EFC6  F00F         	goto	i2l6428
  8264  001F1E                     i2l6412:
  8265  001F1E  EE20 F009          	lfsr	2,9
  8266  001F22  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8267  001F24  26D9               	addwf	fsr2l,f,c
  8268  001F26  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8269  001F28  22DA               	addwfc	fsr2h,f,c
  8270  001F2A  30DF               	rrcf	indf2,w,c
  8271  001F2C  0B03               	andlw	3
  8272  001F2E  0A02               	xorlw	2
  8273  001F30  A4D8               	btfss	status,2,c
  8274  001F32  EF9D  F00F         	goto	i2u606_41
  8275  001F36  EF9F  F00F         	goto	i2u606_40
  8276  001F3A                     i2u606_41:
  8277  001F3A  EFC6  F00F         	goto	i2l511
  8278  001F3E                     i2u606_40:
  8279  001F3E                     
  8280                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
  8281  001F3E  CFAE F013          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
  8282  001F42  6A14               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
  8283                           
  8284                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
  8285  001F44  B0AB               	btfsc	171,0,c	;volatile
  8286  001F46  EFA7  F00F         	goto	i2u607_41
  8287  001F4A  EFA9  F00F         	goto	i2u607_40
  8288  001F4E                     i2u607_41:
  8289  001F4E  EFAF  F00F         	goto	i2l6418
  8290  001F52                     i2u607_40:
  8291  001F52  0E00               	movlw	0
  8292  001F54  6E12               	movwf	(_EUSART_Async_Read_Data$1601+1)^0,c
  8293  001F56  0E00               	movlw	0
  8294  001F58  6E11               	movwf	_EUSART_Async_Read_Data$1601^0,c
  8295  001F5A  EFB3  F00F         	goto	i2l6420
  8296  001F5E                     i2l6418:
  8297  001F5E  0E01               	movlw	1
  8298  001F60  6E12               	movwf	(_EUSART_Async_Read_Data$1601+1)^0,c
  8299  001F62  0E00               	movlw	0
  8300  001F64  6E11               	movwf	_EUSART_Async_Read_Data$1601^0,c
  8301  001F66                     i2l6420:
  8302  001F66  5011               	movf	_EUSART_Async_Read_Data$1601^0,w,c
  8303  001F68  2613               	addwf	EUSART_Async_Read_Data@l_temp_data^0,f,c
  8304  001F6A  5012               	movf	(_EUSART_Async_Read_Data$1601+1)^0,w,c
  8305  001F6C  2214               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
  8306  001F6E                     
  8307                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
  8308  001F6E  5013               	movf	EUSART_Async_Read_Data@l_temp_data^0,w,c
  8309  001F70  EC35  F018         	call	_calc_parity_odd
  8310  001F74  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
  8311  001F76  5014               	movf	(EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
  8312  001F78  180A               	xorwf	??_EUSART_Async_Read_Data^0,w,c
  8313  001F7A  A4D8               	btfss	status,2,c
  8314  001F7C  EFC2  F00F         	goto	i2u608_41
  8315  001F80  EFC4  F00F         	goto	i2u608_40
  8316  001F84                     i2u608_41:
  8317  001F84  EFC6  F00F         	goto	i2l511
  8318  001F88                     i2u608_40:
  8319  001F88  EF7F  F00F         	goto	i2l6410
  8320  001F8C                     i2l511:
  8321  001F8C                     i2l6428:
  8322                           
  8323                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
  8324  001F8C  B2AB               	btfsc	171,1,c	;volatile
  8325  001F8E  EFCB  F00F         	goto	i2u609_41
  8326  001F92  EFCD  F00F         	goto	i2u609_40
  8327  001F96                     i2u609_41:
  8328  001F96  EFD4  F00F         	goto	i2l532
  8329  001F9A                     i2u609_40:
  8330  001F9A  A4AB               	btfss	171,2,c	;volatile
  8331  001F9C  EFD2  F00F         	goto	i2u610_41
  8332  001FA0  EFD4  F00F         	goto	i2u610_40
  8333  001FA4                     i2u610_41:
  8334  001FA4  EFD6  F00F         	goto	i2l533
  8335  001FA8                     i2u610_40:
  8336  001FA8                     i2l532:
  8337                           
  8338                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
  8339  001FA8  98AB               	bcf	171,4,c	;volatile
  8340                           
  8341                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
  8342  001FAA  88AB               	bsf	171,4,c	;volatile
  8343  001FAC                     i2l533:
  8344  001FAC  0012               	return		;funcret
  8345  001FAE                     __end_of_EUSART_Async_Read_Data:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
  8349 ;; Defined at:
  8350 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  _uart_obj       2   12[COMRAM] PTR const struct .
  8353 ;;		 -> _uart_obj(12), 
  8354 ;;  data            1   14[COMRAM] unsigned char 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  ret_val         1    0        unsigned char 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      unsigned char 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8366 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;Total ram usage:        4 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    2
  8373 ;; This function calls:
  8374 ;;		_EUSART_Async_Transmit_Data
  8375 ;; This function is called by:
  8376 ;;		_usart_isr
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text46
  8381  003578                     __ptext46:
  8382                           	callstack 0
  8383  003578                     _Bluetooth_Send_Data_Non_Blocking:
  8384                           	callstack 18
  8385  003578                     
  8386                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
  8387  003578  500D               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
  8388  00357A  100E               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
  8389  00357C  A4D8               	btfss	status,2,c
  8390  00357E  EFC3  F01A         	goto	i2u595_41
  8391  003582  EFC5  F01A         	goto	i2u595_40
  8392  003586                     i2u595_41:
  8393  003586  EFC7  F01A         	goto	i2l6368
  8394  00358A                     i2u595_40:
  8395  00358A                     
  8396                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
  8397  00358A  EFD0  F01A         	goto	i2l32
  8398  00358E                     i2l6368:
  8399                           
  8400                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
  8401  00358E  C00D  F006         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
  8402  003592  C00E  F007         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
  8403  003596  C00F  F008         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
  8404  00359A  6A09               	clrf	(EUSART_Async_Transmit_Data@data+1)^0,c
  8405  00359C  EC14  F014         	call	_EUSART_Async_Transmit_Data	;wreg free
  8406  0035A0                     i2l32:
  8407  0035A0  0012               	return		;funcret
  8408  0035A2                     __end_of_Bluetooth_Send_Data_Non_Blocking:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _EUSART_Async_Transmit_Data *****************
  8412 ;; Defined at:
  8413 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
  8416 ;;		 -> _uart_obj(12), 
  8417 ;;  data            2    7[COMRAM] unsigned short 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;  ret_val         1    0        unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      unsigned char 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;Total ram usage:        7 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    1
  8436 ;; This function calls:
  8437 ;;		_calc_parity_even
  8438 ;;		_calc_parity_odd
  8439 ;; This function is called by:
  8440 ;;		_Bluetooth_Send_Data_Non_Blocking
  8441 ;;		_EUSART_Async_Transmit_Data_Blocking
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text47
  8446  002828                     __ptext47:
  8447                           	callstack 0
  8448  002828                     _EUSART_Async_Transmit_Data:
  8449                           	callstack 18
  8450  002828                     
  8451                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
  8452  002828  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
  8453  00282A  1007               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
  8454  00282C  A4D8               	btfss	status,2,c
  8455  00282E  EF1B  F014         	goto	i2u495_41
  8456  002832  EF1D  F014         	goto	i2u495_40
  8457  002836                     i2u495_41:
  8458  002836  EF1F  F014         	goto	i2l5806
  8459  00283A                     i2u495_40:
  8460  00283A                     
  8461                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
  8462  00283A  EF85  F014         	goto	i2l495
  8463  00283E                     i2l5806:
  8464                           
  8465                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
  8466  00283E  EE20 F002          	lfsr	2,2
  8467  002842  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
  8468  002844  26D9               	addwf	fsr2l,f,c
  8469  002846  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
  8470  002848  22DA               	addwfc	fsr2h,f,c
  8471  00284A  A6DF               	btfss	indf2,3,c
  8472  00284C  EF2A  F014         	goto	i2u496_41
  8473  002850  EF2C  F014         	goto	i2u496_40
  8474  002854                     i2u496_41:
  8475  002854  EF83  F014         	goto	i2l5820
  8476  002858                     i2u496_40:
  8477  002858                     
  8478                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
  8479  002858  EE20 F002          	lfsr	2,2
  8480  00285C  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
  8481  00285E  26D9               	addwf	fsr2l,f,c
  8482  002860  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
  8483  002862  22DA               	addwfc	fsr2h,f,c
  8484  002864  50DF               	movf	indf2,w,c
  8485  002866  0B03               	andlw	3
  8486  002868  0900               	iorlw	0
  8487  00286A  A4D8               	btfss	status,2,c
  8488  00286C  EF3A  F014         	goto	i2u497_41
  8489  002870  EF3C  F014         	goto	i2u497_40
  8490  002874                     i2u497_41:
  8491  002874  EF4B  F014         	goto	i2l5812
  8492  002878                     i2u497_40:
  8493  002878                     
  8494                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
  8495  002878  C008  F00A         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
  8496  00287C  C009  F00B         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
  8497  002880  C00B  F00A         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
  8498  002884  6A0B               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
  8499  002886  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
  8500  002888  A0D8               	btfss	status,0,c
  8501  00288A  D002               	bra	i2u498_45
  8502  00288C  80AC               	bsf	172,0,c	;volatile
  8503  00288E  D001               	bra	i2u498_47
  8504  002890                     i2u498_45:
  8505  002890  90AC               	bcf	172,0,c	;volatile
  8506  002892                     i2u498_47:
  8507                           
  8508                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
  8509  002892  EF83  F014         	goto	i2l5820
  8510  002896                     i2l5812:
  8511  002896  EE20 F002          	lfsr	2,2
  8512  00289A  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
  8513  00289C  26D9               	addwf	fsr2l,f,c
  8514  00289E  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
  8515  0028A0  22DA               	addwfc	fsr2h,f,c
  8516  0028A2  50DF               	movf	indf2,w,c
  8517  0028A4  0B03               	andlw	3
  8518  0028A6  06E8               	decf	wreg,f,c
  8519  0028A8  A4D8               	btfss	status,2,c
  8520  0028AA  EF59  F014         	goto	i2u499_41
  8521  0028AE  EF5B  F014         	goto	i2u499_40
  8522  0028B2                     i2u499_41:
  8523  0028B2  EF67  F014         	goto	i2l5816
  8524  0028B6                     i2u499_40:
  8525  0028B6                     
  8526                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
  8527  0028B6  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
  8528  0028B8  EC69  F018         	call	_calc_parity_even
  8529  0028BC  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
  8530  0028BE  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
  8531  0028C0  A0D8               	btfss	status,0,c
  8532  0028C2  D002               	bra	i2u500_45
  8533  0028C4  80AC               	bsf	172,0,c	;volatile
  8534  0028C6  D001               	bra	i2u500_47
  8535  0028C8                     i2u500_45:
  8536  0028C8  90AC               	bcf	172,0,c	;volatile
  8537  0028CA                     i2u500_47:
  8538                           
  8539                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
  8540  0028CA  EF83  F014         	goto	i2l5820
  8541  0028CE                     i2l5816:
  8542  0028CE  EE20 F002          	lfsr	2,2
  8543  0028D2  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
  8544  0028D4  26D9               	addwf	fsr2l,f,c
  8545  0028D6  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
  8546  0028D8  22DA               	addwfc	fsr2h,f,c
  8547  0028DA  50DF               	movf	indf2,w,c
  8548  0028DC  0B03               	andlw	3
  8549  0028DE  0A02               	xorlw	2
  8550  0028E0  A4D8               	btfss	status,2,c
  8551  0028E2  EF75  F014         	goto	i2u501_41
  8552  0028E6  EF77  F014         	goto	i2u501_40
  8553  0028EA                     i2u501_41:
  8554  0028EA  EF83  F014         	goto	i2l491
  8555  0028EE                     i2u501_40:
  8556  0028EE                     
  8557                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
  8558  0028EE  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
  8559  0028F0  EC35  F018         	call	_calc_parity_odd
  8560  0028F4  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
  8561  0028F6  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
  8562  0028F8  A0D8               	btfss	status,0,c
  8563  0028FA  D002               	bra	i2u502_45
  8564  0028FC  80AC               	bsf	172,0,c	;volatile
  8565  0028FE  D001               	bra	i2u502_47
  8566  002900                     i2u502_45:
  8567  002900  90AC               	bcf	172,0,c	;volatile
  8568  002902                     i2u502_47:
  8569  002902  EF83  F014         	goto	i2l5820
  8570  002906                     i2l491:
  8571  002906                     i2l5820:
  8572                           
  8573                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
  8574  002906  C008  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
  8575  00290A                     i2l495:
  8576  00290A  0012               	return		;funcret
  8577  00290C                     __end_of_EUSART_Async_Transmit_Data:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _calc_parity_odd *****************
  8581 ;; Defined at:
  8582 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  data            1    wreg     unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  data            1    2[COMRAM] unsigned char 
  8587 ;;  l_counter       1    4[COMRAM] unsigned char 
  8588 ;;  number_of_on    1    3[COMRAM] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      unsigned char 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;Total ram usage:        5 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_EUSART_Async_Transmit_Data
  8608 ;;		_EUSART_Async_Read_Data
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text48
  8613  00306A                     __ptext48:
  8614                           	callstack 0
  8615  00306A                     _calc_parity_odd:
  8616                           	callstack 19
  8617                           
  8618                           ;incstack = 0
  8619                           ;calc_parity_odd@data stored from wreg
  8620  00306A  6E03               	movwf	calc_parity_odd@data^0,c
  8621  00306C                     
  8622                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
  8623  00306C  0E00               	movlw	0
  8624  00306E  6E04               	movwf	calc_parity_odd@number_of_ones^0,c
  8625                           
  8626                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
  8627  003070  0E00               	movlw	0
  8628  003072  6E05               	movwf	calc_parity_odd@l_counter^0,c
  8629                           
  8630                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
  8631  003074  0E00               	movlw	0
  8632  003076  6E05               	movwf	calc_parity_odd@l_counter^0,c
  8633  003078                     i2l5772:
  8634                           
  8635                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
  8636  003078  C005  F001         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
  8637  00307C  0E01               	movlw	1
  8638  00307E  6E02               	movwf	(??_calc_parity_odd+1)^0,c
  8639  003080  2A01               	incf	??_calc_parity_odd^0,f,c
  8640  003082  EF45  F018         	goto	i2u490_44
  8641  003086                     i2u490_45:
  8642  003086  90D8               	bcf	status,0,c
  8643  003088  3602               	rlcf	(??_calc_parity_odd+1)^0,f,c
  8644  00308A                     i2u490_44:
  8645  00308A  2E01               	decfsz	??_calc_parity_odd^0,f,c
  8646  00308C  EF43  F018         	goto	i2u490_45
  8647  003090  5002               	movf	(??_calc_parity_odd+1)^0,w,c
  8648  003092  1403               	andwf	calc_parity_odd@data^0,w,c
  8649  003094  0900               	iorlw	0
  8650  003096  B4D8               	btfsc	status,2,c
  8651  003098  EF50  F018         	goto	i2u491_41
  8652  00309C  EF52  F018         	goto	i2u491_40
  8653  0030A0                     i2u491_41:
  8654  0030A0  EF53  F018         	goto	i2l631
  8655  0030A4                     i2u491_40:
  8656  0030A4                     
  8657                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
  8658  0030A4  2A04               	incf	calc_parity_odd@number_of_ones^0,f,c
  8659  0030A6                     i2l631:
  8660                           
  8661                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
  8662  0030A6  2A05               	incf	calc_parity_odd@l_counter^0,f,c
  8663  0030A8  0E07               	movlw	7
  8664  0030AA  6405               	cpfsgt	calc_parity_odd@l_counter^0,c
  8665  0030AC  EF5A  F018         	goto	i2u492_41
  8666  0030B0  EF5C  F018         	goto	i2u492_40
  8667  0030B4                     i2u492_41:
  8668  0030B4  EF3C  F018         	goto	i2l5772
  8669  0030B8                     i2u492_40:
  8670  0030B8                     
  8671                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
  8672  0030B8  2A04               	incf	calc_parity_odd@number_of_ones^0,f,c
  8673  0030BA                     
  8674                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
  8675  0030BA  B004               	btfsc	calc_parity_odd@number_of_ones^0,0,c
  8676  0030BC  EF62  F018         	goto	i2u493_41
  8677  0030C0  EF64  F018         	goto	i2u493_40
  8678  0030C4                     i2u493_41:
  8679  0030C4  EF67  F018         	goto	i2l5786
  8680  0030C8                     i2u493_40:
  8681  0030C8                     
  8682                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
  8683  0030C8  0E01               	movlw	1
  8684  0030CA  EF68  F018         	goto	i2l633
  8685  0030CE                     i2l5786:
  8686                           
  8687                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
  8688  0030CE  0E00               	movlw	0
  8689  0030D0                     i2l633:
  8690  0030D0  0012               	return		;funcret
  8691  0030D2                     __end_of_calc_parity_odd:
  8692                           	callstack 0
  8693                           
  8694 ;; *************** function _calc_parity_even *****************
  8695 ;; Defined at:
  8696 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  data            1    wreg     unsigned char 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  data            1    2[COMRAM] unsigned char 
  8701 ;;  l_counter       1    4[COMRAM] unsigned char 
  8702 ;;  number_of_on    1    3[COMRAM] unsigned char 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      unsigned char 
  8705 ;; Registers used:
  8706 ;;		wreg, status,2, status,0
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;Total ram usage:        5 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_EUSART_Async_Transmit_Data
  8722 ;;		_EUSART_Async_Read_Data
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text49
  8727  0030D2                     __ptext49:
  8728                           	callstack 0
  8729  0030D2                     _calc_parity_even:
  8730                           	callstack 19
  8731                           
  8732                           ;incstack = 0
  8733                           ;calc_parity_even@data stored from wreg
  8734  0030D2  6E03               	movwf	calc_parity_even@data^0,c
  8735  0030D4                     
  8736                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
  8737  0030D4  0E00               	movlw	0
  8738  0030D6  6E04               	movwf	calc_parity_even@number_of_ones^0,c
  8739                           
  8740                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
  8741  0030D8  0E00               	movlw	0
  8742  0030DA  6E05               	movwf	calc_parity_even@l_counter^0,c
  8743                           
  8744                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
  8745  0030DC  0E00               	movlw	0
  8746  0030DE  6E05               	movwf	calc_parity_even@l_counter^0,c
  8747  0030E0                     i2l5748:
  8748                           
  8749                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
  8750  0030E0  C005  F001         	movff	calc_parity_even@l_counter,??_calc_parity_even
  8751  0030E4  0E01               	movlw	1
  8752  0030E6  6E02               	movwf	(??_calc_parity_even+1)^0,c
  8753  0030E8  2A01               	incf	??_calc_parity_even^0,f,c
  8754  0030EA  EF79  F018         	goto	i2u486_44
  8755  0030EE                     i2u486_45:
  8756  0030EE  90D8               	bcf	status,0,c
  8757  0030F0  3602               	rlcf	(??_calc_parity_even+1)^0,f,c
  8758  0030F2                     i2u486_44:
  8759  0030F2  2E01               	decfsz	??_calc_parity_even^0,f,c
  8760  0030F4  EF77  F018         	goto	i2u486_45
  8761  0030F8  5002               	movf	(??_calc_parity_even+1)^0,w,c
  8762  0030FA  1403               	andwf	calc_parity_even@data^0,w,c
  8763  0030FC  0900               	iorlw	0
  8764  0030FE  B4D8               	btfsc	status,2,c
  8765  003100  EF84  F018         	goto	i2u487_41
  8766  003104  EF86  F018         	goto	i2u487_40
  8767  003108                     i2u487_41:
  8768  003108  EF87  F018         	goto	i2l638
  8769  00310C                     i2u487_40:
  8770  00310C                     
  8771                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
  8772  00310C  2A04               	incf	calc_parity_even@number_of_ones^0,f,c
  8773  00310E                     i2l638:
  8774                           
  8775                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
  8776  00310E  2A05               	incf	calc_parity_even@l_counter^0,f,c
  8777  003110  0E07               	movlw	7
  8778  003112  6405               	cpfsgt	calc_parity_even@l_counter^0,c
  8779  003114  EF8E  F018         	goto	i2u488_41
  8780  003118  EF90  F018         	goto	i2u488_40
  8781  00311C                     i2u488_41:
  8782  00311C  EF70  F018         	goto	i2l5748
  8783  003120                     i2u488_40:
  8784  003120                     
  8785                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
  8786  003120  2A04               	incf	calc_parity_even@number_of_ones^0,f,c
  8787  003122                     
  8788                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
  8789  003122  A004               	btfss	calc_parity_even@number_of_ones^0,0,c
  8790  003124  EF96  F018         	goto	i2u489_41
  8791  003128  EF98  F018         	goto	i2u489_40
  8792  00312C                     i2u489_41:
  8793  00312C  EF9B  F018         	goto	i2l5762
  8794  003130                     i2u489_40:
  8795  003130                     
  8796                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
  8797  003130  0E01               	movlw	1
  8798  003132  EF9C  F018         	goto	i2l640
  8799  003136                     i2l5762:
  8800                           
  8801                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
  8802  003136  0E00               	movlw	0
  8803  003138                     i2l640:
  8804  003138  0012               	return		;funcret
  8805  00313A                     __end_of_calc_parity_even:
  8806                           	callstack 0
  8807                           
  8808                           	psect	text50
  8809  000000                     __ptext50:
  8810                           	callstack 0
  8811  000000                     
  8812                           	psect	rparam
  8813  0000                     
  8814                           	psect	temp
  8815  000056                     btemp:
  8816                           	callstack 0
  8817  000056                     	ds	1
  8818  0000                     int$flags	set	btemp
  8819  0000                     wtemp8	set	btemp+1
  8820  0000                     ttemp5	set	btemp+1
  8821  0000                     ttemp6	set	btemp+4
  8822  0000                     ttemp7	set	btemp+8
  8823                           
  8824                           	psect	idloc
  8825                           
  8826                           ;Config register IDLOC0 @ 0x200000
  8827                           ;	unspecified, using default values
  8828  200000                     	org	2097152
  8829  200000  FF                 	db	255
  8830                           
  8831                           ;Config register IDLOC1 @ 0x200001
  8832                           ;	unspecified, using default values
  8833  200001                     	org	2097153
  8834  200001  FF                 	db	255
  8835                           
  8836                           ;Config register IDLOC2 @ 0x200002
  8837                           ;	unspecified, using default values
  8838  200002                     	org	2097154
  8839  200002  FF                 	db	255
  8840                           
  8841                           ;Config register IDLOC3 @ 0x200003
  8842                           ;	unspecified, using default values
  8843  200003                     	org	2097155
  8844  200003  FF                 	db	255
  8845                           
  8846                           ;Config register IDLOC4 @ 0x200004
  8847                           ;	unspecified, using default values
  8848  200004                     	org	2097156
  8849  200004  FF                 	db	255
  8850                           
  8851                           ;Config register IDLOC5 @ 0x200005
  8852                           ;	unspecified, using default values
  8853  200005                     	org	2097157
  8854  200005  FF                 	db	255
  8855                           
  8856                           ;Config register IDLOC6 @ 0x200006
  8857                           ;	unspecified, using default values
  8858  200006                     	org	2097158
  8859  200006  FF                 	db	255
  8860                           
  8861                           ;Config register IDLOC7 @ 0x200007
  8862                           ;	unspecified, using default values
  8863  200007                     	org	2097159
  8864  200007  FF                 	db	255
  8865                           
  8866                           	psect	config
  8867                           
  8868                           ; Padding undefined space
  8869  300000                     	org	3145728
  8870  300000  FF                 	db	255
  8871                           
  8872                           ;Config register CONFIG1H @ 0x300001
  8873                           ;	Oscillator Selection bits
  8874                           ;	OSC = HS, HS oscillator
  8875                           ;	Fail-Safe Clock Monitor Enable bit
  8876                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8877                           ;	Internal/External Oscillator Switchover bit
  8878                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8879  300001                     	org	3145729
  8880  300001  02                 	db	2
  8881                           
  8882                           ;Config register CONFIG2L @ 0x300002
  8883                           ;	Power-up Timer Enable bit
  8884                           ;	PWRT = OFF, PWRT disabled
  8885                           ;	Brown-out Reset Enable bits
  8886                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8887                           ;	Brown Out Reset Voltage bits
  8888                           ;	BORV = 1, 
  8889  300002                     	org	3145730
  8890  300002  09                 	db	9
  8891                           
  8892                           ;Config register CONFIG2H @ 0x300003
  8893                           ;	Watchdog Timer Enable bit
  8894                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8895                           ;	Watchdog Timer Postscale Select bits
  8896                           ;	WDTPS = 512, 1:512
  8897  300003                     	org	3145731
  8898  300003  12                 	db	18
  8899                           
  8900                           ; Padding undefined space
  8901  300004                     	org	3145732
  8902  300004  FF                 	db	255
  8903                           
  8904                           ;Config register CONFIG3H @ 0x300005
  8905                           ;	CCP2 MUX bit
  8906                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8907                           ;	PORTB A/D Enable bit
  8908                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8909                           ;	Low-Power Timer1 Oscillator Enable bit
  8910                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8911                           ;	MCLR Pin Enable bit
  8912                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8913  300005                     	org	3145733
  8914  300005  81                 	db	129
  8915                           
  8916                           ;Config register CONFIG4L @ 0x300006
  8917                           ;	Stack Full/Underflow Reset Enable bit
  8918                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8919                           ;	Single-Supply ICSP Enable bit
  8920                           ;	LVP = OFF, Single-Supply ICSP disabled
  8921                           ;	Extended Instruction Set Enable bit
  8922                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8923                           ;	Background Debugger Enable bit
  8924                           ;	DEBUG = 0x1, unprogrammed default
  8925  300006                     	org	3145734
  8926  300006  81                 	db	129
  8927                           
  8928                           ; Padding undefined space
  8929  300007                     	org	3145735
  8930  300007  FF                 	db	255
  8931                           
  8932                           ;Config register CONFIG5L @ 0x300008
  8933                           ;	Code Protection bit
  8934                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8935                           ;	Code Protection bit
  8936                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8937                           ;	Code Protection bit
  8938                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8939                           ;	Code Protection bit
  8940                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8941  300008                     	org	3145736
  8942  300008  0F                 	db	15
  8943                           
  8944                           ;Config register CONFIG5H @ 0x300009
  8945                           ;	Boot Block Code Protection bit
  8946                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8947                           ;	Data EEPROM Code Protection bit
  8948                           ;	CPD = OFF, Data EEPROM not code-protected
  8949  300009                     	org	3145737
  8950  300009  C0                 	db	192
  8951                           
  8952                           ;Config register CONFIG6L @ 0x30000A
  8953                           ;	Write Protection bit
  8954                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8955                           ;	Write Protection bit
  8956                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8957                           ;	Write Protection bit
  8958                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8959                           ;	Write Protection bit
  8960                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8961  30000A                     	org	3145738
  8962  30000A  0F                 	db	15
  8963                           
  8964                           ;Config register CONFIG6H @ 0x30000B
  8965                           ;	Configuration Register Write Protection bit
  8966                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8967                           ;	Boot Block Write Protection bit
  8968                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8969                           ;	Data EEPROM Write Protection bit
  8970                           ;	WRTD = OFF, Data EEPROM not write-protected
  8971  30000B                     	org	3145739
  8972  30000B  E0                 	db	224
  8973                           
  8974                           ;Config register CONFIG7L @ 0x30000C
  8975                           ;	Table Read Protection bit
  8976                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8977                           ;	Table Read Protection bit
  8978                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8979                           ;	Table Read Protection bit
  8980                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8981                           ;	Table Read Protection bit
  8982                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8983  30000C                     	org	3145740
  8984  30000C  0F                 	db	15
  8985                           
  8986                           ;Config register CONFIG7H @ 0x30000D
  8987                           ;	Boot Block Table Read Protection bit
  8988                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8989  30000D                     	org	3145741
  8990  30000D  40                 	db	64
  8991                           tosu	equ	0xFFF
  8992                           tosh	equ	0xFFE
  8993                           tosl	equ	0xFFD
  8994                           stkptr	equ	0xFFC
  8995                           pclatu	equ	0xFFB
  8996                           pclath	equ	0xFFA
  8997                           pcl	equ	0xFF9
  8998                           tblptru	equ	0xFF8
  8999                           tblptrh	equ	0xFF7
  9000                           tblptrl	equ	0xFF6
  9001                           tablat	equ	0xFF5
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           indf0	equ	0xFEF
  9005                           postinc0	equ	0xFEE
  9006                           postdec0	equ	0xFED
  9007                           preinc0	equ	0xFEC
  9008                           plusw0	equ	0xFEB
  9009                           fsr0h	equ	0xFEA
  9010                           fsr0l	equ	0xFE9
  9011                           wreg	equ	0xFE8
  9012                           indf1	equ	0xFE7
  9013                           postinc1	equ	0xFE6
  9014                           postdec1	equ	0xFE5
  9015                           preinc1	equ	0xFE4
  9016                           plusw1	equ	0xFE3
  9017                           fsr1h	equ	0xFE2
  9018                           fsr1l	equ	0xFE1
  9019                           bsr	equ	0xFE0
  9020                           indf2	equ	0xFDF
  9021                           postinc2	equ	0xFDE
  9022                           postdec2	equ	0xFDD
  9023                           preinc2	equ	0xFDC
  9024                           plusw2	equ	0xFDB
  9025                           fsr2h	equ	0xFDA
  9026                           fsr2l	equ	0xFD9
  9027                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    0
    Data        87
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      85
    BANK0           128     32     128
    BANK1           256     37      63
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    _uart_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> usart_isr(), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S4568_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@temp_string(COMRAM[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@temp_string(COMRAM[6]), 

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Timer0.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Write_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Read_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    tmr0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), Absolute function(), 

    S3244$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Init@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S2849$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S2849$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2802$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S481$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S481$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S481$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind2(COMRAM[1]), pind1(COMRAM[1]), lcd1.lcd_data_pins(BANK0[4]), 
		 -> lcd1(BANK0[6]), CCP2_Obj(BANK0[10]), CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pind2(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind2(COMRAM[1]), pind1(COMRAM[1]), lcd1.lcd_data_pins(BANK0[4]), 
		 -> lcd1(BANK0[6]), CCP2_Obj(BANK0[10]), CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind2(COMRAM[1]), pind1(COMRAM[1]), lcd1.lcd_data_pins(BANK0[4]), 
		 -> lcd1(BANK0[6]), CCP2_Obj(BANK0[10]), CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_config_baud_rate_gen@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    Rx_config_interrupt@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_Rx_config@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    async_Tx_config@_tx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(COMRAM[1]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Init@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[15]), STR_10(CODE[15]), longtude(BANK1[13]), latitude(BANK1[13]), 
		 -> STR_9(CODE[4]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    ECU_DC_Motor_Stop@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _main->_GPIO_Pin_Write_Logic
    _lcd_4bit_send_char_data->_GPIO_Pin_Write_Logic
    _lcd_4bit_send_command->_GPIO_Pin_Write_Logic
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_Rx_config
    _async_config_baud_rate_gen->___fltol
    _async_config_baud_rate_gen->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _async_Rx_config->_Rx_config_interrupt

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _Timer0_Handler->_ECU_DC_Motor_Stop
    _ECU_DC_Motor_Stop->i2_GPIO_Pin_Write_Logic
    _usart_isr->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->i2_lcd_4bits_set_courser
    i2_lcd_4bits_set_courser->i2_lcd_4bit_send_command
    i2_lcd_4bit_send_command->i2_lcd_send_4bits
    i2_lcd_4bit_send_char_data->i2_lcd_send_4bits
    i2_lcd_send_4bits->i2_GPIO_Pin_Write_Logic
    i2_lcd_4bits_send_enable_signal->i2_GPIO_Pin_Write_Logic
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd
    _Bluetooth_Send_Data_Non_Blocking->_EUSART_Async_Transmit_Data
    _EUSART_Async_Transmit_Data->_calc_parity_even
    _EUSART_Async_Transmit_Data->_calc_parity_odd

Critical Paths under _main in BANK0

    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _application_intialize->_EUSART_Async_Init
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fladd
    ___fladd->___fldiv

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   84657
                                             35 BANK1      2     2      0
              _GPIO_Pin_Toggle_Logic
               _GPIO_Pin_Write_Logic
              _application_intialize
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   37205
                                             21 BANK0      7     1      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   18898
                                             14 BANK0      7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16243
                                             10 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   42584
                  _EUSART_Async_Init
                _GPIO_Pin_Initialize
                           _WDT_Init
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   25082
                                             14 BANK0      6     4      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18137
                                             10 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5629
                                              6 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    5083
                                              6 BANK0      3     1      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    6301
                                              6 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    4617
                                             41 COMRAM     4     1      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     437
                                             41 COMRAM     3     1      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _WDT_Init                                             1     1      0       7
                                             41 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Init                                    3     1      2   11194
                                             32 BANK1      3     1      2
                    _async_Rx_config
                    _async_Tx_config
         _async_config_baud_rate_gen
 ---------------------------------------------------------------------------------
 (3) _async_config_baud_rate_gen                          13    11      2    9867
                                             30 BANK0      2     0      2
                                             21 BANK1     11    11      0
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1171
                                             41 COMRAM     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     822
                                             41 COMRAM     4     0      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3213
                                             10 BANK0     12     4      8
                                              0 BANK1     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4132
                                             22 BANK0      8     0      8
                                             13 BANK1      8     8      0
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _async_Tx_config                                      3     1      2     282
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _async_Rx_config                                      3     1      2     629
                                             44 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                _Rx_config_interrupt
 ---------------------------------------------------------------------------------
 (4) _Rx_config_interrupt                                  3     1      2     313
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     251
                                             41 COMRAM     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManagerLow                                  3     3      0     134
                                             38 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptManagerHigh                                 6     6      0   10304
                                             31 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             2     2      0    1001
                                             13 COMRAM     2     2      0
                   Absolute function *
                     _Timer0_Handler *
 ---------------------------------------------------------------------------------
 (10) _Timer0_Handler                                      0     0      0    1001
                  _ECU_DC_Motor_Stop
 ---------------------------------------------------------------------------------
 (11) _ECU_DC_Motor_Stop                                   3     1      2    1001
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (9) _EUSART_Tx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Rx_ISR                                        0     0      0    9303
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (10) _usart_isr                                           0     0      0    9303
   _Bluetooth_Send_Data_Non_Blocking
             _EUSART_Async_Read_Data
        _lcd_4bit_send_char_data_pos
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (11) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) _lcd_4bit_send_char_data_pos                         6     1      5    7063
                                             25 COMRAM     6     1      5
          i2_lcd_4bit_send_char_data
            i2_lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (12) i2_lcd_4bits_set_courser                             7     3      4    3389
                                             18 COMRAM     7     3      4
            i2_lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (13) i2_lcd_4bit_send_command                             4     1      3    3082
                                             14 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
     i2_lcd_4bits_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (12) i2_lcd_4bit_send_char_data                           4     1      3    2926
                                             14 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
     i2_lcd_4bits_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (14) i2_lcd_send_4bits                                    4     1      3    1113
                                             10 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (14) i2_lcd_4bits_send_enable_signal                      3     1      2     877
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Write_Logic                             10     7      3     699
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (11) _EUSART_Async_Read_Data                             15    11      4    1172
                                              5 COMRAM    15    11      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (11) _Bluetooth_Send_Data_Non_Blocking                    4     1      3     968
                                             12 COMRAM     4     1      3
         _EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (12) _EUSART_Async_Transmit_Data                          7     3      4     742
                                              5 COMRAM     7     3      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (12) _calc_parity_odd                                     5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (12) _calc_parity_even                                    5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPIO_Pin_Write_Logic
   _application_intialize
     _EUSART_Async_Init
       _async_Rx_config
         _Rx_config_interrupt
       _async_Tx_config
       _async_config_baud_rate_gen
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _WDT_Init
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
         _GPIO_Pin_Write_Logic
       _lcd_send_4bits
         _GPIO_Pin_Write_Logic
     _lcd_4bits_set_courser
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       _Bluetooth_Send_Data_Non_Blocking
         _EUSART_Async_Transmit_Data
           _calc_parity_even
           _calc_parity_odd
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
       _lcd_4bit_send_char_data_pos
         i2_lcd_4bit_send_char_data
           i2_GPIO_Pin_Write_Logic
           i2_lcd_4bits_send_enable_signal
             i2_GPIO_Pin_Write_Logic
           i2_lcd_send_4bits
             i2_GPIO_Pin_Write_Logic
         i2_lcd_4bits_set_courser
           i2_lcd_4bit_send_command
             i2_GPIO_Pin_Write_Logic
             i2_lcd_4bits_send_enable_signal
               i2_GPIO_Pin_Write_Logic
             i2_lcd_send_4bits
               i2_GPIO_Pin_Write_Logic
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _Timer0_Handler *
       _ECU_DC_Motor_Stop
         i2_GPIO_Pin_Write_Logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     25      3F       7       24.6%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     20      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2D      55       1       67.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      34        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 10 16:26:21 2022

                             ___fldiv@aexp 010C                               ___fldiv@bexp 010B  
                                        _i 0045                               ___fldiv@sign 0104  
                          ?_lcd_send_4bits 00D0           lcd_4bit_send_command@ERRORSTATUS 00D7  
                              _SSPSTATbits 000FC7                                         bsr 000FE0  
                    ??_InterruptManagerLow 0027                 i2lcd_4bit_send_command@lcd 000F  
       __end_of_async_config_baud_rate_gen 1DA4                 _async_config_baud_rate_gen 19E4  
                                      l101 23E2                                        l111 319E  
                                      l106 2F8A                                        l223 2E2C  
                                      l136 2BCC                                        l218 33F8  
                                      l252 29BC                                        l600 2A6E  
                                      l611 2D16                                        l620 1A1E  
                                      l614 2D1A                                        l622 1ADA  
                                      l623 1B96                                        l608 2C98  
                                      l624 1C52                                        l626 1DA2  
                                      l714 2510                                        l731 3364  
                                      l581 2D86                                        l477 31B8  
                                      l726 2F1A                                        l479 3200  
                                      l584 2DA8                                        l594 2A46  
                                      l587 2DAA                                        l597 2A6C  
                                      l695 22AA                                        _PR2 000FCB  
     __end_of_lcd_4bits_send_enable_signal 33FA      __size_of_lcd_4bits_send_enable_signal 004A  
         ??i2_lcd_4bits_send_enable_signal 000D            ?i2_lcd_4bits_send_enable_signal 000B  
             _lcd_4bits_send_enable_signal 33B0                           _calc_parity_even 30D2  
                   ??_InterruptManagerHigh 0020                                        _gps 004A  
                _RB5_InterruptHandler_HIGH 003A                            __end_of_ADC_ISR 3648  
         lcd_4bit_send_char_data_pos@colum 001D   GPIO_Pin_Direction_Initialize@ERRORSTATUS 002C  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                                 _TXSTA1bits 000FAC  
                   ??_GPIO_Pin_Write_Logic 00CA                 __size_of_ECU_DC_Motor_Stop 003C  
                          __end_of_RB4_ISR 3630                            __end_of_RB5_ISR 3616  
                          __end_of_RB6_ISR 35FC                            __end_of_RB7_ISR 35E2  
             i2lcd_4bits_set_courser@colum 0016                               ___fltol@exp1 00CF  
                                     l2009 2740                                       l2240 127C  
                                     l2241 126A                                       l2305 185A  
                                     l2242 1228                                       l2307 18E8  
                                     l2308 18D6                                       l2257 13D2  
                                     l2249 15B4                                       l2266 14B6  
                                     l2370 2164                                       l2267 14A2  
                                     l2381 20FC                                       l2294 19E2  
                                     l2374 20A0                                       l1558 3314  
                                     l2367 2008                                       l2296 1810  
                                     l1584 3640                                       l2299 17B2  
                                     l9000 26F4                                       l9002 2700  
                                     l9004 2710                                       l9020 202E  
                                     l9012 1FB2                                       l9100 1BF2  
                                     l9006 2720                                       l9030 2088  
                                     l9014 1FC4                                       l9102 1C56  
                                     l9110 1D16                                       l9008 2730  
                                     l9040 20EC                                       l9032 208A  
                                     l9024 2042                                       l9016 1FD2  
                                     l9104 1CAE                                       l9112 1D60  
                                     l9200 22C0                                       l9130 2D3A  
                                     l9050 2144                                       l9042 210A  
                                     l9034 2096                                       l9026 204A  
                                     l9018 2018                                       l9106 1D0E  
                                     l9114 1D9E                                       l9202 22C4  
                                     l9140 2D84                                       l9132 2D50  
                                     l9124 2D1C                                       l9052 2152  
                                     l9044 210C                                       l9036 20D2  
                                     l9028 2056                                       l6900 363E  
                                     l9060 3316                                       l9220 2328  
                                     l9212 22E8                                       l9204 22C4  
                                     l9150 29BE                                       l9134 2D52  
                                     l9142 2D8C                                       l9126 2D20  
                                     l9054 2154                                       l9046 2110  
                                     l9038 20DE                                       l9062 332A  
                                     l9070 2F1C                                       l9230 2388  
                                     l9222 233A                                       l9214 2304  
                                     l9206 22D0                                       l8600 2D18  
                                     l9160 29FA                                       l9152 29C2  
                                     l9144 2DA2                                       l9136 2D68  
                                     l9128 2D32                                       l9048 2134  
                                     l9064 3332                                       l9072 2F1C  
                                     l9232 239A                                       l9224 235C  
                                     l9216 2308                                       l9162 2A08  
                                     l9170 2A4C                                       l9154 29D6  
                                     l9138 2D6E                                       l9146 2DA8  
                                     l9090 1A22                                       l9082 19E4  
                                     l8610 219C                                       l8530 23E4  
                                     l9066 3362                                       l9058 3316  
                                     l9074 2F30                                       l9234 23AC  
                                     l9226 2364                                       l9218 2318  
                                     l9242 313A                                       l9500 2EA8  
                                     l9172 2A66                                       l9164 2A24  
                                     l9156 29DE                                       l8700 11B4  
                                     l9092 1A7A                                       l9084 19EA  
                                     l9180 31A0                                       l8612 21A4  
                                     l8620 22A8                                       l8604 2166  
                                     l8540 2486                                       l8532 23E8  
                                     l9076 2F38                                       l9236 23BE  
                                     l9228 2376                                       l9244 313A  
                                     l9260 292A                                       l9252 290C  
                                     l9502 2EA8                                       l9166 2A2A  
                                     l9158 29F8                                       l9174 2A6C  
                                     l8710 11EE                                       l8702 11B8  
                                     l8630 106C                                       l9094 1ADE  
                                     l9086 19FE                                       l9190 31E2  
                                     l9182 31B4                                       l8614 2208  
                                     l8606 216A                                       l8534 23FA  
                                     l9078 2F86                                       l9238 23D0  
                                     l9510 32C6                                       l9246 314E  
                                     l9262 2940                                       l9270 2982  
                                     l9254 290C                                       l9504 2EBA  
                                     l9168 2A44                                       l8800 14D6  
                                     l8720 1246                                       l8712 120E  
                                     l8704 11BC                                       l8640 10B4  
                                     l8632 107C                                       l9096 1B36  
                                     l9088 1A08                                       l9192 31FE  
                                     l9184 31BA                                       l8608 217C  
                                     l8544 24E4                                       l8536 241A  
                                     l8560 2DC4                                       l9512 32F0  
                                     l9248 3152                                       l9264 2956  
                                     l9256 2920                                       l9360 2B20  
                                     l9506 2EBE                                       l8810 1544  
                                     l8802 14E4                                       l8730 129C  
                                     l8722 1256                                       l8714 1220  
                                     l8706 11C0                                       l8650 10EC  
                                     l8642 10B8                                       l8634 1080  
                                     l9098 1B9A                                       l9186 31CA  
                                     l9178 31A0                                       l8618 2266  
                                     l8538 2422                                       l8546 250E  
                                     l8570 33C8                                       l8554 2DAC  
                                     l9514 32F4                                       l9266 296C  
                                     l9258 2924                                       l9370 2B62  
                                     l9362 2B20                                       l8580 2C7E  
                                     l8820 1586                                       l8812 1568  
                                     l8804 1520                                       l8740 12E2  
                                     l8724 125A                                       l8716 1236  
                                     l8708 11C4                                       l8660 111E  
                                     l8652 10EE                                       l8636 1092  
                                     l8644 10C0                                       l8628 1058  
                                     l8900 1788                                       l9188 31CC  
                                     l8572 33DC                                       l8564 33B0  
                                     l8556 2DAC                                       l9196 22AC  
                                     l9516 3304                                       l9372 2B94  
                                     l9364 2B34                                       l8590 2CD2  
                                     l8582 2C90                                       l8822 1590  
                                     l8814 156C                                       l8806 1522  
                                     l8750 1312                                       l8742 12EE  
                                     l8734 12B2                                       l8726 1266  
                                     l8718 1242                                       l8670 115E  
                                     l8662 112E                                       l8654 10F8  
                                     l8646 10D2                                       l8638 10A2  
                                     l8910 17EE                                       l8902 179E  
                                     l8830 15B6                                       l8574 33E2  
                                     l8566 33B0                                       l8558 2DC0  
                                     l9198 22AC                                       l9374 2B9A  
                                     l9366 2B46                                       l8592 2CD4  
                                     l8584 2C9A                                       l8824 15A0  
                                     l8816 157A                                       l8808 1534  
                                     l8760 13AE                                       l8744 12F2  
                                     l8736 12C4                                       l8728 128C  
                                     l8752 131A                                       l8680 118C  
                                     l8672 1172                                       l8664 1140  
                                     l8656 1108                                       l8648 10DA  
                                     l8920 1846                                       l8912 180E  
                                     l8904 17AE                                       l8840 1600  
                                     l8832 15CA                                       l8568 33C4  
                                     l9368 2B4A                                       l8594 2CEE  
                                     l8586 2CAA                                       l8578 2C7A  
                                     l8826 15A4                                       l8818 1582  
                                     l8770 1412                                       l8754 1348  
                                     l8762 13C0                                       l8746 1302  
                                     l8738 12D2                                       l8690 11A0  
                                     l8682 1190                                       l8674 1180  
                                     l8666 1144                                       l8658 110C  
                                     l8930 1890                                       l8922 1856  
                                     l8914 1820                                       l8906 17BE  
                                     l8850 1638                                       l8842 1612  
                                     l8834 15DA                                       l6898 363E  
                                     l8596 2CF6                                       l8588 2CBE  
                                     l8780 1448                                       l8772 141C  
                                     l8764 13EA                                       l8756 139C  
                                     l8748 1306                                       l8692 11A4  
                                     l8684 1194                                       l8676 1184  
                                     l8668 114C                                       l8940 1916  
                                     l8932 18CC                                       l8916 1836  
                                     l8924 186C                                       l8908 17EC  
                                     l8860 1678                                       l8852 1642  
                                     l8844 1616                                       l8836 15DE  
                                     l8598 2D10                                       l8790 1474  
                                     l8782 144C                                       l8774 142C  
                                     l8766 13FC                                       l8758 139E  
                                     l8694 11A8                                       l8686 1198  
                                     l8678 1188                                       l8950 1996  
                                     l8942 1940                                       l8926 187C  
                                     l8918 183C                                       l8870 16BE  
                                     l8862 168A                                       l8854 1652  
                                     l8838 15F0                                       l8846 161E  
                                     l8792 1482                                       l8784 145C  
                                     l8776 1430                                       l8696 11AC  
                                     l8688 119C                                       l8960 19D4  
                                     l8952 19B6                                       l8936 18FA  
                                     l8944 1946                                       l8928 1882  
                                     l8872 16CE                                       l8880 16F2  
                                     l8864 168E                                       l8856 1656  
                                     l8848 1630                                       l8794 1498  
                                     l8778 1440                                       l8786 145E  
                                     l8698 11B0                                       l8954 19BA  
                                     l8946 1962                                       l8938 1908  
                                     l8890 173C                                       l8882 1704  
                                     l8874 16D6                                       l8858 1668  
                                     l8866 1696                                       l8970 2652  
                                     l8788 146E                                       l8956 19C8  
                                     l8948 197A                                       l8892 174C  
                                     l8884 1704                                       l8876 16DE  
                                     l8868 16A8                                       l8980 26A2  
                                     l8798 14C8                                       l8958 19D0  
                                     l8894 175E                                       l8990 26CC  
                                     l8982 26A6                                       l8974 2666  
                                     STR_1 1014                                       l8896 1770  
                                     l8888 171A                                       l8992 26D6  
                                     l8984 26B4                                       l8976 2690  
                                     l8968 263A                                       STR_2 1043  
                                     STR_3 1034                                       l8898 1778  
                                     l8994 26E0                                       l8978 2692  
                                     STR_4 1001                                       STR_5 1053  
                                     STR_9 104F                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     i2l32 35A0                                       u9000 112E  
                                     u9001 112A                                       u9010 1172  
                                     u9011 116E                                       u9100 129C  
                                     u9020 1180                                       u9101 1298  
                                     u9021 117C                                       i2l70 350E  
                                     u9110 12D2                                       u9030 11EE  
                                     u9111 12CE                                       u9031 11EA  
                                     u9200 145C                                       u9120 12E2  
                                     u9040 1208                                       u9201 1458  
                                     u9121 12DE                                       u9041 1202  
                                     u9210 146E                                       u9130 1302  
                                     u9050 120A                                       u9211 146A  
                                     u9131 12FE                                       u9300 1568  
                                     u9220 1482                                       u9140 1348  
                                     u9060 1236                                       u9301 1564  
                                     u9221 147E                                       u9141 1344  
                                     u9061 1232                                       u9310 157A  
                                     u9230 1498                                       u9150 13AE  
                                     u9070 1256                                       u9311 1576  
                                     u9231 1494                                       u9151 13AA  
                                     u9071 1252                                       u9320 15A0  
                                     u9240 14B2                                       u9160 13EA  
                                     u9080 127C                                       u9400 1704  
                                     u9321 159C                                       u9241 14AE  
                                     u9161 13E6                                       u9081 1278  
                                     u9401 1700                                       u9250 14C8  
                                     u9170 13FC                                       u9090 128C  
                                     u9410 1788                                       u9330 15DA  
                                     u9251 14C4                                       u9171 13F8  
                                     u9091 1288                                       u9411 1784  
                                     u9331 15D6                                       u9260 14E4  
                                     u9180 142C                                       u9500 18E4  
                                     u9420 17AE                                       u9340 15F0  
                                     u9261 14E0                                       u9181 1428  
                                     u9501 18E0                                       u9421 17AA  
                                     u9341 15EC                                       u9270 1520  
                                     u9190 1440                                       u9510 18FA  
                                     u9430 17EC                                       u9350 1600  
                                     u9271 151C                                       u9191 143C  
                                     u9511 18F6                                       u9431 17E8  
                                     u9351 15FC                                       u9280 1534  
                                     u9520 1916                                       u9440 1820  
                                     u9360 1652                                       u9600 26F0  
                                     u8800 241A                                       u9281 1530  
                                     u9521 1912                                       u9441 181C  
                                     u9361 164E                                       u9601 26EC  
                                     u8801 2416                                       u9290 1544  
                                     u9530 1962                                       u9450 1836  
                                     u9370 1668                                       u9610 2710  
                                     u9291 1540                                       u9531 195E  
                                     u9451 1832                                       u9371 1664  
                                     u9611 270C                                       u9540 1996  
                                     u9460 1856                                       u9380 1678  
                                     u9620 2720                                       u9700 210A  
                                     u9541 1992                                       u9461 1852  
                                     u9381 1674                                       u9621 271C  
                                     u9701 2106                                       u9550 19C8  
                                     u9470 187C                                       u9390 16BE  
                                     u9710 2144                                       u9630 1FC4  
                                     u8814 243E                                       u8830 2DC0  
                                     u9551 19C4                                       u9471 1878  
                                     u9391 16BA                                       u9711 2140  
                                     u9631 1FC0                                       u8815 243A  
                                     u8831 2DBC                                       u9800 2DA2  
                                     u9480 1890                                       u9560 2652  
                                     u9720 2152                                       u9640 1FD2  
                                     u8920 227E                                       u8904 21C0  
                                     u8824 24A2                                       u8840 33C4  
                                     u9801 2D9E                                       u9481 188C  
                                     u9561 264E                                       u9721 214E  
                                     u9641 1FCE                                       u8921 2278  
                                     u8905 21BC                                       u8825 249E  
                                     u8841 33C0                                       u8850 2C90  
                                     u9810 29D6                                       u9490 18CC  
                                     u9570 2686                                       u9650 202E  
                                     u8930 2280                                       u8914 2224  
                                     u9730 332A                                       u8851 2C8C  
                                     u9811 29D2                                       u9491 18C8  
                                     u9651 202A                                       u8915 2220  
                                     u9731 3326                                       u8860 2CEE  
                                     u9820 29F8                                       u8940 107C  
                                     u9580 26B4                                       u9660 2084  
                                     u9740 2F30                                       u9900 2920  
                                     u8861 2CEA                                       u9821 29F4  
                                     u8941 1078                                       u9581 26B0  
                                     u9661 2080                                       u9741 2F2C  
                                     u9901 291C                                       u8870 2D10  
                                     u9830 2A24                                       u8950 1092  
                                     u9590 26C8                                       u9670 20CE  
                                     u9750 19FE                                       u8790 23FA  
                                     u8871 2D0C                                       u9831 2A20  
                                     u8951 108E                                       u9591 26C4  
                                     u9575 267C                                       u9671 20CA  
                                     u9751 19FA                                       u8791 23F6  
                                     u9840 2A44                                       u9760 2D32  
                                     u8960 10A2                                       u9680 20EC  
                                     u8880 217C                                       u9841 2A40  
                                     u9761 2D2E                                       u8961 109E  
                                     u9681 20E8                                       u8881 2178  
                                     u9850 2A66                                       u9770 2D50  
                                     u8970 10EC                                       u9690 20FC  
                                     u8890 219C                                       u9851 2A62  
                                     u9771 2D4C                                       u8971 10E8  
                                     u9691 20F8                                       u8891 2198  
                                     u9780 2D68                                       u8980 1108  
                                     u9860 31B4                                       u9781 2D64  
                                     u8981 1104                                       u9861 31B0  
                                     u9790 2D84                                       u8990 111E  
                                     u9870 22C0                                       _RX9D 007D58  
                                     u9791 2D80                                       u8991 111A  
                                     u9871 22BC                                       u9880 2318  
                                     u9881 2314                                       u9890 314E  
                                     u9891 314A                    ??_application_intialize 002E  
                 _RB4_InterruptHandler_LOW 003C                                       _lcd1 00BE  
                                     _blue 0049                                       _main 2BCE  
                 _RB7_InterruptHandler_LOW 00F0                                       fsr0h 000FEA  
                                     indf0 000FEF                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0056                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0286  
         GPIO_Pin_Toggle_Logic@_pin_config 002A         i2GPIO_Pin_Toggle_Logic@_pin_config 0001  
                          ___fldiv@new_exp 0105                    ?_EUSART_Async_Read_Data 0006  
     Bluetooth_Send_Data_Non_Blocking@data 000F                               ___param_bank 000000  
                             fp__usart_isr 0000           __size_of_lcd_4bit_send_char_data 0066  
         __size_ofi2_lcd_4bit_send_command 0062                      _lcd_4bit_send_command 2F1C  
                         __end_of_INT1_ISR 3646                                      l10020 2BF2  
                                    l10030 2C56                                      l10022 2C02  
                                    l10024 2C1E                                      l10016 2BCE  
                                    l10026 2C2E                                      l10018 2BD2  
                                    l10220 1D3A                                      l10028 2C4A  
                                    l10214 2996                                      l10216 24F8  
                                    l10218 2292                              ___fltol@sign1 00CE  
                          __end_of___fladd 15B6                                      ?_main 0001  
                          __end_of___fldiv 19E4                                      STR_10 1025  
                          __end_of___fltol 2742                                      u10020 2B34  
                                    u10021 2B30                                      u10030 2B46  
                                    u10031 2B42                                      u10040 2B8C  
                                    u10050 2BBC                                      u10060 2BCC  
                                    u10061 2BC8                                      u10047 2B82  
                                    u10240 2EBA                                      u10241 2EB6  
                                    u10057 2BB2                                      u10254 2EDC  
                                    u10255 2ED8                                      u10807 2C0E  
                                    u10817 2C3A                                      u10827 2C62  
                                    u10837 2320                                      u10847 2342  
                                    u10857 235E                                      u10867 33DE  
                                    i2l111 32C4                                      i2l106 3262  
                                    i2l116 354A                                      i2l223 2EA6  
                                    i2l218 34D2                                      i2l252 2B1E  
                                    i2l511 1F8C                                      i2l532 1FA8  
                                    i2l533 1FAC                                      i2l631 30A6  
                                    i2l640 3138                                      i2l633 30D0  
                                    i2l714 2638                                      i2l491 2906  
                                    i2l643 3648                                      i2l638 310E  
                                    i2l726 2FFA                                      i2l495 290A  
                                    i2l647 3576                                      i2l498 1DD4  
                                    i1l995 0046                                      i1l997 0086  
                                    i1l999 00C6                                      i2l980 27AC  
                                    i2l982 27CC                                      i2l974 277C  
                                    i2l984 27EC                                      i2l976 278C  
                                    i2l986 27FC                                      i2l978 279C  
                                    i2l989 280C                                      _RCREG 000FAE  
                                    _TMR0H 000FD7                                      _TMR0L 000FD6  
                                    _SPBRG 000FAF                                      _PORTA 000F80  
                                    _PORTB 000F81                                      _PORTC 000F82  
                                    _PORTD 000F83                                      _PORTE 000F84  
                            _EUSART_Rx_ISR 354C                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            _EUSART_Tx_ISR 3648                                      _TXREG 000FAD  
            ?_lcd_4bits_send_enable_signal 00D0                           __end_of_TMR0_ISR 3444  
  async_config_baud_rate_gen@Baudrate_temp 0118                                      _flags 004C  
                                    _pind1 0054                                      _pind2 0055  
                   ?_lcd_4bits_set_courser 00D8                           __end_of_WDT_Init 3642  
                                    pclath 000FFA                                      tablat 000FF5  
               lcd_4bits_set_courser@colum 00DB                   __size_of_calc_parity_odd 0068  
                 __size_of_async_Rx_config 00B2      __end_of_lcd_4bit_send_string_data_pos 2BCE  
   __size_of_lcd_4bit_send_string_data_pos 00AE              _lcd_4bit_send_string_data_pos 2B20  
                                    ttemp5 0057                                      ttemp6 005A  
                                    ttemp7 005E                                      status 000FD8  
                                    wtemp8 0057             __end_of_EUSART_Async_Read_Data 1FAE  
                 __size_of_async_Tx_config 0090      async_config_baud_rate_gen@_eusart_obj 00E8  
              _I2C_DefaultInterruptHandler 00FA                            __initialization 2FFC  
                      _Rx_config_interrupt 2C7A                               __end_of_main 2C7A  
               _eusart_Rx_InterruptHandler 0042             __size_of_GPIO_Pin_Toggle_Logic 0074  
                      i2lcd_send_4bits@lcd 000B              __end_of_GPIO_Pin_Toggle_Logic 2F1C  
                                ??_ADC_ISR 0026                              _lat_registers 008A  
                                   ??_main 0123                              __activetblptr 000003  
                           ?_EUSART_Rx_ISR 0001                             ?_EUSART_Tx_ISR 0001  
                                ??_RB4_ISR 0026                                  ??_RB5_ISR 0026  
                                ??_RB6_ISR 0026                                  ??_RB7_ISR 0026  
                           _Timer0_Handler 35A2                      RB5_ISR@Handler_Select 0026  
                     ?_Rx_config_interrupt 002A                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR1L 000FBE  
                                   _CCPR2L 000FBB                    i2_lcd_4bits_set_courser 2A70  
                                   i1l1001 0106                                     i1l1011 0246  
                                   i1l1003 0146                                     i1l1013 0266  
                                   i1l1005 0186                                     i1l1007 01C6  
                                   i1l1104 3614                                     i1l1016 0276  
                                   i1l1113 35FA                                     i1l1009 0206  
                                   i1l1122 35E0                                     i1l1082 3644  
                                   i1l1095 362E                                     i1l1709 3646  
                                   i1l3900 35E6                                     i1l3904 35FA  
                                   i1l7142 35CA                                     i1l3880 361A  
                                   i1l7144 35CC                                     i2l1561 348C  
                                   i1l3874 3642                                     i1l3890 3600  
                                   i1l3884 362E                                     i1l7148 35E0  
                                   i2l1389 3442                                     i1l3878 3618  
                                   i1l3894 3614                                     i1l3888 35FE  
                                   i2l1489 35C6                                     i1l3898 35E4  
                                   i1l7800 00D4                                     i1l7810 0114  
                                   i1l7802 00E2                                     i1l7820 0154  
                                   i1l7812 0122                                     i1l7804 00F0  
                                   i1l7830 0194                                     i1l7822 0162  
                                   i1l7814 0130                                     i1l7806 00FE  
                                   i2l6400 1EB4                                     i1l7840 01D4  
                                   i1l7832 01A2                                     i1l7824 0170  
                                   i1l7816 013E                                     i1l7808 0100  
                                   i2l6410 1EFE                                     i2l6402 1EC8  
                                   i2l6330 3264                                     i2l7122 354C  
                                   i1l7850 0214                                     i1l7842 01E2  
                                   i1l7834 01B0                                     i1l7826 017E  
                                   i1l7818 0140                                     i2l6420 1F66  
                                   i2l6404 1ED4                                     i2l6412 1F1E  
                                   i2l5700 34A4                                     i2l6332 3276  
                                   i2l6340 2A70                                     i2l7124 355E  
                                   i2l7140 342A                                     i1l7860 0254  
                                   i1l7852 0222                                     i1l7844 01F0  
                                   i1l7836 01BE                                     i1l7828 0180  
                                   i1l7780 0054                                     i2l6430 1F9A  
                                   i2l6422 1F6E                                     i2l6414 1F3E  
                                   i2l6406 1EDC                                     i2l5702 34B8  
                                   i2l5710 2E2E                                     i2l6334 327A  
                                   i2l6350 2AB8                                     i2l6342 2A82  
                                   i1l7862 0262                                     i1l7854 0230  
                                   i1l7846 01FE                                     i1l7838 01C0  
                                   i1l7790 0094                                     i1l7782 0062  
                                   i1l7774 0026                                     i2l5800 2828  
                                   i2l6416 1F52                                     i2l6408 1EE4  
                                   i2l5704 34BE                                     i2l5712 2E40  
                                   i2l6328 3264                                     i2l6352 2ACE  
                                   i2l6344 2A86                                     i2l7136 33FA  
                                   i1l7864 0274                                     i1l7856 023E  
                                   i1l7848 0200                                     i1l7792 00A2  
                                   i1l7784 0070                                     i1l7776 0034  
                                   i2l5810 2878                                     i2l5802 2828  
                                   i2l6362 3578                                     i2l6418 1F5E  
                                   i2l5714 2E44                                     i2l6346 2A8C  
                                   i2l6338 2A70                                     i2l6450 34EA  
                                   i2l7138 33FC                                     i1l7858 0240  
                                   i1l7794 00B0                                     i1l7786 007E  
                                   i1l7778 0042                                     i2l5812 2896  
                                   i2l5820 2906                                     i2l5804 283A  
                                   i2l6364 3578                                     i2l6380 1DE2  
                                   i2l6428 1F8C                                     i2l6372 1DA4  
                                   i2l5708 2E2E                                     i2l6348 2AA2  
                                   i2l6356 2AE4                                     i2l6444 34D4  
                                   i1l7796 00BE                                     i1l7788 0080  
                                   i2l5750 310C                                     i2l5742 30D4  
                                   i2l5814 28B6                                     i2l5806 283E  
                                   i2l6366 358A                                     i2l6390 1E64  
                                   i2l6382 1DFC                                     i2l6374 1DAC  
                                   i2l5670 2512                                     i2l6470 3522  
                                   i2l6622 2F8C                                     i2l6446 34D4  
                                   i1l7798 00C0                                     i2l5752 3110  
                                   i2l5816 28CE                                     i2l5808 2858  
                                   i2l6368 358E                                     i2l6392 1E70  
                                   i2l6384 1E16                                     i2l6376 1DBE  
                                   i2l5680 25B0                                     i2l5672 2516  
                                   i2l6472 3526                                     i2l6624 2F8C  
                                   i2l6448 34E6                                     i2l5762 3136  
                                   i2l5754 3120                                     i2l5818 28EE  
                                   i2l6394 1E78                                     i2l6386 1E30  
                                   i2l6378 1DD0                                     i2l5674 2528  
                                   i2l6466 3510                                     i2l6626 2F9E  
                                   i2l5756 3122                                     i2l5748 30E0  
                                   i2l5780 30BA                                     i2l5772 3078  
                                   i2l6396 1E80                                     i2l6388 1E50  
                                   i2l5684 260C                                     i2l5676 2546  
                                   i2l6468 3510                                     i2l6628 2FA2  
                                   i2l5758 3130                                     i2l5782 30C8  
                                   i2l5774 30A4                                     i2l5766 306C  
                                   i2l6398 1E94                                     i2l5678 254E  
                                   i2l5686 2636                                     i2l5694 348E  
                                   i2l5790 3202                                     i2l5776 30A8  
                                   i2l5696 348E                                     i2l5792 3202  
                                   i2l6904 3444                                     i2l5786 30CE  
                                   i2l5778 30B8                                     i2l5698 34A0  
                                   i2l5794 3214                                     i2l6906 3468  
                                   i2l5796 3218                                     i2l6908 3480  
                                   i2l7740 275C                                     i2l7750 279A  
                                   i2l7742 276A                                     i2l7760 27C8  
                                   i2l7744 2778                                     i2l7770 280A  
                                   i2l7762 27DA                                     i2l7754 27AA  
                                   i2l7746 278A                                     i2l7764 27E8  
                                   i2l7766 27FA                                     i2l7758 27BA  
                                   i2l6896 35A2                             _Movement_State 0046  
                                   _SPBRGH 000FB0                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                   calc_parity_odd@l_counter 0005  
                         __end_of___xxtofl 2166                   ?i2_GPIO_Pin_Toggle_Logic 0001  
       lcd_4bit_send_string_data_pos@colum 00E2                                     _Timer0 00C4  
                   ?_lcd_4bit_send_command 00D4            ??_GPIO_Pin_Direction_Initialize 00CA  
                                ??___fladd 010D                                  ??___fldiv 00DC  
                 ??i2_GPIO_Pin_Write_Logic 0004                                  ??___fltol 00CA  
              __end_of_GPIO_Pin_Initialize 3366                                     clear_0 3042  
                                   clear_1 304E                                     clear_2 305A  
              ?_EUSART_Async_Transmit_Data 0006                          ?i2_lcd_send_4bits 000B  
                   __end_of_Timer0_Handler 35C8                               __pdataCOMRAM 0049  
                             __mediumconst 0000                         ??i2_lcd_send_4bits 000E  
    EUSART_Async_Transmit_Data@_eusart_obj 0006                                     tblptrh 000FF7  
                    ??_Rx_config_interrupt 002C                                     tblptrl 000FF6  
                                   tblptru 000FF8                               ___xxtofl@arg 00D0  
                             ___xxtofl@exp 00CF                               ___xxtofl@val 002A  
             __size_of_lcd_4bit_initialize 0138                                 __accesstop 0080  
                  __end_of__initialization 3060   __end_of_Bluetooth_Send_Data_Non_Blocking 35A2  
__size_of_Bluetooth_Send_Data_Non_Blocking 002A         ??_Bluetooth_Send_Data_Non_Blocking 0010  
        ?_Bluetooth_Send_Data_Non_Blocking 000D           _Bluetooth_Send_Data_Non_Blocking 3578  
                                ?_INT1_ISR 0001                              ___rparam_used 000001  
                 __end_of_calc_parity_even 313A                                 ___fltol@f1 002A  
                         ??_lcd_send_4bits 002E                 _I2C_Report_Write_Collision 00F6  
               ?i2_lcd_4bit_send_char_data 000F                    _lcd_4bit_send_char_data 313A  
           ?_lcd_4bit_send_string_data_pos 00DF                    i2_lcd_4bit_send_command 3202  
                        ??_calc_parity_odd 0001                             __pcstackCOMRAM 0001  
                        ??_async_Rx_config 002D                               __pidataBANK0 3366  
                                ?_TMR0_ISR 0001                          ??_async_Tx_config 002C  
              i2GPIO_Pin_Write_Logic@logic 0003                            ??_EUSART_Rx_ISR 0020  
                          ??_EUSART_Tx_ISR 0001                   lcd_4bit_send_command@lcd 00D4  
              ?_async_config_baud_rate_gen 00E8                                  ?_WDT_Init 0001  
                          ?_Timer0_Handler 0001                  ??i2_lcd_4bits_set_courser 0017  
                calc_parity_even@l_counter 0005               ?_lcd_4bit_send_char_data_pos 001A  
          __end_ofi2_GPIO_Pin_Toggle_Logic 2FFC                                 __pbssBANK0 00EA  
                               __pbssBANK1 0125                      _INT0_InterruptHandler 00F4  
                               ??_INT1_ISR 0026          i2lcd_4bits_send_enable_signal@lcd 000B  
          lcd_4bits_send_enable_signal@lcd 00D0             __size_of_application_intialize 0050  
            __end_of_application_intialize 3316                   _eusart_frameerr_CallBack 00FC  
                               _datarecive 0048                __end_of_InterruptManagerLow 0286  
                     calc_parity_even@data 0003          __end_ofi2_lcd_4bit_send_char_data 32C6  
       lcd_4bit_initialize@pin_lcd_counter 00DC                                 ??_TMR0_ISR 000E  
          __size_ofi2_GPIO_Pin_Write_Logic 0128                                    _ADC_ISR 3646  
    __end_of_GPIO_Pin_Direction_Initialize 22AC     __size_of_GPIO_Pin_Direction_Initialize 0146  
            _GPIO_Pin_Direction_Initialize 2166                                 ??_WDT_Init 002A  
                    _tmr0_InterruptHandler 0030                                    i2l10222 2AF8  
                                  i2l10224 2620                                    _RB4_ISR 3616  
                                  _RB5_ISR 35FC                                    _RB6_ISR 35E2  
                                  _RB7_ISR 35C8                                  ?___xxtofl 002A  
                _RB6_InterruptHandler_HIGH 0036                    ??_lcd_4bits_set_courser 00DC  
            __size_of_InterruptManagerHigh 2820                  ECU_DC_Motor_Stop@dc_motor 000B  
            __size_of_GPIO_Pin_Write_Logic 012E             EUSART_Async_Transmit_Data@data 0008  
                       __size_of_usart_isr 004A                             _tris_registers 0094  
                 _RB6_InterruptHandler_LOW 0034                  ??_lcd_4bit_send_char_data 002E  
                ??i2_lcd_4bit_send_command 0012                                    __Hparam 0000  
               _eusart_overrunerr_CallBack 00FE                                    __Lparam 0000  
                                  ___fladd 1058                                    ___fldiv 15B6  
                                  ___fltol 263A                               __psmallconst 1000  
                                  __pcinit 2FFC                                    __ramtop 1000  
                                  __ptext0 2BCE                                    __ptext1 2B20  
                                  __ptext2 290C                                    __ptext3 313A  
                                  __ptext4 32C6                                    __ptext5 22AC  
                                  __ptext6 2F1C                                    __ptext7 2DAC  
                                  __ptext8 33B0                                    __ptext9 3316  
             i2lcd_4bit_send_char_data@lcd 000F                                  _T0CONbits 000FD5  
                                  _counter 0044                                 ??___xxtofl 00CA  
                                _T3CONbits 000FB1                                    _gpstemp 0047  
                        _EUSART_Async_Init 31A0                         ?_EUSART_Async_Init 0120  
                   i2_GPIO_Pin_Write_Logic 2512                             __pintcode_body 2742  
                     end_of_initialization 3060                          lcd_send_4bits@lcd 00D0  
           calc_parity_even@number_of_ones 0004                                    int_func 2742  
                      ??_EUSART_Async_Init 002E                    ??_lcd_4bit_send_command 002E  
                                i2u1087_47 34BA          async_config_baud_rate_gen@ret_val 0117  
                                _RCSTAbits 000FAB                           _W3_Motor_Control 004F  
                                  postdec1 000FE5                                    postdec2 000FDD  
     __size_of_lcd_4bit_send_char_data_pos 003C                                    postinc0 000FEE  
                                  postinc2 000FDE                        _lcd_4bit_initialize 22AC  
                        __end_of_usart_isr 348E           __size_ofi2_GPIO_Pin_Toggle_Logic 0070  
          __end_of_lcd_4bit_send_char_data 31A0                      _INT1_InterruptHandler 0040  
                                _PORTBbits 000F81                      _GPIO_Pin_Toggle_Logic 2EA8  
                __end_of_EUSART_Async_Init 3202                                ___fladd@grs 0114  
               lcd_4bit_send_char_data@lcd 00D4             ?_GPIO_Pin_Direction_Initialize 002A  
                            ___xxtofl@sign 00CE                                  _TRISBbits 000F93  
                                _TRISCbits 000F94                      RB4_ISR@Handler_Select 0026  
                    RB7_ISR@Handler_Select 0026                                ___fldiv@grs 0107  
                              ___fldiv@rem 0100                            _calc_parity_odd 306A  
                          _async_Rx_config 29BE            lcd_4bit_send_char_data_pos@data 001E  
                     ?_lcd_4bit_initialize 00D8                                _CCP1CONbits 000FBD  
                __size_ofi2_lcd_send_4bits 007A                            _async_Tx_config 2D1C  
                              _CCP2CONbits 000FBA                                  _TXSTAbits 000FAC  
                        ?_calc_parity_even 0001                          __size_of_INT1_ISR 0004  
              ??i2_lcd_4bit_send_char_data 0012                 EUSART_Async_Read_Data@data 0008  
                       ??_calc_parity_even 0001                     async_Rx_config@_rx_obj 00CA  
            convert_uint16_to_string@F3203 00EA                           ??_Timer0_Handler 000E  
                              _BAUDCONbits 000FB8                              __pidataCOMRAM 3630  
                        __size_of_TMR0_ISR 004A                __end_of_Rx_config_interrupt 2D1C  
                   async_Rx_config@ret_val 002D               __size_of_GPIO_Pin_Initialize 0050  
                 EUSART_Async_Init@ret_val 0122                          __size_of_WDT_Init 0004  
                      start_initialization 2FFC          EUSART_Async_Read_Data@_eusart_obj 0006  
               i2lcd_4bits_set_courser@lcd 0013                 i2lcd_4bits_set_courser@row 0015  
          GPIO_Pin_Write_Logic@_pin_config 002A          i2GPIO_Pin_Write_Logic@_pin_config 0001  
                 ??_EUSART_Async_Read_Data 000A                      ??_lcd_4bit_initialize 00DA  
           GPIO_Pin_Initialize@_pin_config 00D0                                __pdataBANK0 0080  
                                 ?_ADC_ISR 0001                     ?_GPIO_Pin_Toggle_Logic 002A  
             lcd_4bit_send_command@command 00D6                      __end_of_EUSART_Rx_ISR 3578  
                                ___fladd@a 00E4                                  ___fladd@b 00E0  
               __size_of_EUSART_Async_Init 0062                      __end_of_EUSART_Tx_ISR 364A  
                                ___fldiv@a 00D8                                  ___fldiv@b 00D4  
                                 ?_RB4_ISR 0001                                   ?_RB5_ISR 0001  
                                 ?_RB6_ISR 0001                                   ?_RB7_ISR 0001  
                              __pbssCOMRAM 002E                    __end_of_calc_parity_odd 30D2  
                i2_lcd_4bit_send_char_data 3264                    __end_of_async_Rx_config 2A70  
                            __pcstackBANK0 00CA                              __pcstackBANK1 0100  
                        __size_of___xxtofl 01B8             __size_of_lcd_4bits_set_courser 00B2  
                  __end_of_async_Tx_config 2DAC              __end_of_lcd_4bits_set_courser 29BE  
             i2lcd_send_4bits@data_command 000D                      _INT2_InterruptHandler 00F2  
           ??_lcd_4bits_send_enable_signal 002E                        calc_parity_odd@data 0003  
             __end_of_InterruptManagerHigh 2828                  _W1_W5_W2_W6_Motor_Control 0051  
                    _application_intialize 32C6                                  __pintcode 0008  
             __end_of_GPIO_Pin_Write_Logic 2512                                   ?___fladd 00E0  
                                 ?___fldiv 00D4                                  __uart_obj 009E  
          GPIO_Pin_Write_Logic@ERRORSTATUS 002D          i2GPIO_Pin_Write_Logic@ERRORSTATUS 000A  
                                 ?___fltol 002A                 Rx_config_interrupt@_rx_obj 002A  
                  i2_GPIO_Pin_Toggle_Logic 2F8C                                __pintcodelo 0018  
             __size_of_InterruptManagerLow 026E                    __size_of_lcd_send_4bits 0082  
                 ?i2_lcd_4bits_set_courser 0013                                __smallconst 1000  
                _RB4_InterruptHandler_HIGH 003E                 Rx_config_interrupt@ret_val 002C  
                                 _CCP1_Obj 00B4                                   _CCP2_Obj 00AA  
                  ?i2_GPIO_Pin_Write_Logic 0001                  _RB7_InterruptHandler_HIGH 0032  
        EUSART_Async_Read_Data@l_temp_data 0013                     async_Tx_config@_tx_obj 002A  
           GPIO_Pin_Initialize@ERRORSTATUS 00D2            __size_of_EUSART_Async_Read_Data 020A  
                 _RB5_InterruptHandler_LOW 0038                                   _INT1_ISR 3642  
                         i2_lcd_send_4bits 2E2E                     async_Tx_config@ret_val 002C  
               lcd_send_4bits@data_command 00D2                                   _IPR1bits 000F9F  
                                 _IPR2bits 000FA2                                   _PIE1bits 000F9D  
                                 _PIE2bits 000FA0     __end_ofi2_lcd_4bits_send_enable_signal 34D4  
  __size_ofi2_lcd_4bits_send_enable_signal 0046             i2_lcd_4bits_send_enable_signal 348E  
                                 i1u224_20 362A                                   i1u224_21 3626  
           __size_of_lcd_4bit_send_command 0070                                   i1u225_20 3610  
                                 i1u225_21 360C                                   i1u226_20 35F6  
                                 i1u226_21 35F2              __end_of_lcd_4bit_send_command 2F8C  
                                 i1u800_20 00D4                                   i1u800_21 00D0  
                                 i1u801_20 00E2                                   i1u801_21 00DE  
                                 i1u810_20 0170                                   i1u802_20 00F0  
                                 i1u810_21 016C                                   i1u802_21 00EC  
                                 i1u811_20 017E                                   i1u803_20 00FE  
                                 i1u811_21 017A                                   i1u803_21 00FA  
                                 i1u820_20 0214                                   i1u812_20 0194  
                                 i1u804_20 0114                                   i1u820_21 0210  
                                 i1u812_21 0190                                   i1u804_21 0110  
                                 i1u821_20 0222                                   i1u813_20 01A2  
                                 i1u805_20 0122                                   i2u500_45 28C8  
                                 i1u821_21 021E                                   i1u813_21 019E  
                                 i1u805_21 011E                                   i2u500_47 28CA  
                                 i2u501_40 28EE                                   i2u501_41 28EA  
                                 i1u822_20 0230                                   i1u814_20 01B0  
                                 i1u806_20 0130                                   i1u822_21 022C  
                                 i1u814_21 01AC                                   i1u806_21 012C  
                                 i1u823_20 023E                                   i1u815_20 01BE  
                                 i1u807_20 013E                                   i2u502_45 2900  
                                 i1u823_21 023A                                   i1u815_21 01BA  
                                 i1u807_21 013A                                   i2u502_47 2902  
                                 i1u824_20 0254                                   i1u816_20 01D4  
                                 i1u808_20 0154                                   i1u824_21 0250  
                                 i1u816_21 01D0                                   i1u808_21 0150  
                                 i2u600_40 1E30                                   i2u600_41 1E2C  
                                 i1u825_20 0262                                   i1u817_20 01E2  
                                 i1u809_20 0162                                   i1u825_21 025E  
                                 i1u817_21 01DE                                   i1u809_21 015E  
                                 i2u601_40 1E50                                   i2u601_41 1E4C  
                                 _PIR1bits 000F9E                                   i1u826_20 0274  
                                 i1u818_20 01F0                                   i1u826_21 0270  
                                 i1u818_21 01EC                                   i2u610_40 1FA8  
                                 i2u602_40 1E64                                   i2u610_41 1FA4  
                                 i2u602_41 1E60                                   i1u819_20 01FE  
                                 i1u819_21 01FA                                   i2u603_40 1EB4  
                                 i2u603_41 1EB0                                   _PIR2bits 000FA1  
                                 i2u604_40 1EC8                                   i2u612_40 34E6  
                                 i2u604_41 1EC4                                   i2u612_41 34E2  
                                 i2u605_40 1EFE                                   i2u605_41 1EFA  
                                 i1u790_20 0034                                   i1u790_21 0030  
                                 i2u606_40 1F3E                                   i2u614_40 3522  
                                 i2u606_41 1F3A                                   i2u614_41 351E  
                                 i1u791_20 0042                                   i1u791_21 003E  
                                 i2u607_40 1F52                                   i2u607_41 1F4E  
                                 i1u792_20 0054                                   i1u792_21 0050  
                                 i2u608_40 1F88                                   i2u480_40 34A0  
                                 i2u608_41 1F84                                   i2u480_41 349C  
                                 i2u640_44 2FBE                                   i1u793_20 0062  
                                 i2u640_45 2FBA                                   i1u793_21 005E  
                                 i2u609_40 1F9A                                   i2u481_40 2E40  
                                 i2u609_41 1F96                                   i2u481_41 2E3C  
                                 i1u794_20 0070                                   i1u794_21 006C  
                                 i2u490_44 308A                                   i1u699_20 35DC  
                                 i1u795_20 007E                                   i2u490_45 3086  
                                 i1u699_21 35D8                                   i1u795_21 007A  
                                 i2u491_40 30A4                                   i2u491_41 30A0  
                                 i1u796_20 0094                                   i1u796_21 0090  
                                 i2u492_40 30B8                                   i2u476_40 2528  
                                 i2u492_41 30B4                                   i2u476_41 2524  
                                 i1u797_20 00A2                                   i1u797_21 009E  
                                 i2u493_40 30C8                                   i2u477_40 2546  
                                 i2u493_41 30C4                                   i2u477_41 2542  
                                 i1u798_20 00B0                                   i1u798_21 00AC  
                                 i2u494_40 3214                                   i2u494_41 3210  
                                 i2u486_44 30F2                                   i2u478_44 256A  
                                 i1u799_20 00BE                                   i2u486_45 30EE  
                                 i2u478_45 2566                                   i1u799_21 00BA  
                                 i2u487_40 310C                                   i2u495_40 283A  
                                 i2u639_40 2F9E                                   i2u487_41 3108  
                                 i2u495_41 2836                                   i2u639_41 2F9A  
                                 i2u479_44 25CC                                   i2u479_45 25C8  
                                 i2u488_40 3120                                   i2u496_40 2858  
                                 i2u488_41 311C                                   i2u496_41 2854  
                                 i2u489_40 3130                                   i2u497_40 2878  
                                 i2u593_40 3276                                   i2u489_41 312C  
                                 i2u497_41 2874                                   i2u593_41 3272  
                                 i2u594_40 2A82                                   i2u594_41 2A7E  
                                 i2u498_45 2890                                   i2u498_47 2892  
                                 i2u499_40 28B6                                   i2u595_40 358A  
                                 i2u499_41 28B2                                   i2u595_41 3586  
                                 i2u596_40 1DBE                                   i2u780_40 2778  
                                 i2u596_41 1DBA                                   i2u780_41 2774  
                                 i2u597_40 1DD0                                   i2u693_40 355E  
                                 i2u781_40 278A                                   i2u597_41 1DCC  
                                 i2u693_41 355A                                   i2u781_41 2786  
                                 i2u598_40 1DE2                                   i2u782_40 279A  
                                 i2u598_41 1DDE                                   i2u782_41 2796  
                                 i2u599_40 1DFC                                   i2u694_48 3564  
                                 i2u783_40 27AA                                   i2u599_41 1DF8  
                                 i2u694_49 3576                                   i2u783_41 27A6  
                                 i2u784_40 27BA                                   i2u784_41 27B6  
                                 i2u697_40 342A                                   i2u785_40 27C8  
                                 i2u697_41 3426                                   i2u785_41 27C4  
                                 i2u786_40 27DA                                   i2u786_41 27D6  
                                 i2u698_48 3430                                   i2u787_40 27E8  
                                 i2u779_40 276A                                   i2u698_49 3442  
                                 i2u787_41 27E4                                   i2u779_41 2766  
                                 i2u788_40 27FA                                   i2u788_41 27F6  
                                 i2u789_40 280A                                   i2u789_41 2806  
                                 _RCONbits 000FD0                                   _TMR0_ISR 33FA  
                         _W4_Motor_Control 004D                _I2C_Report_Receive_Overflow 00F8  
                         __size_of_ADC_ISR 0002                                   _WDT_Init 363E  
             ??_EUSART_Async_Transmit_Data 000A                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                                 _ADCON2bits 000FC0  
           __end_ofi2_GPIO_Pin_Write_Logic 263A             lcd_4bit_send_char_data_pos@lcd 001A  
           lcd_4bit_send_char_data_pos@row 001C                                  _usart_isr 3444  
                         ?_calc_parity_odd 0001                           __size_of_RB4_ISR 001A  
                         __size_of_RB5_ISR 001A                           __size_of_RB6_ISR 001A  
                         ?_async_Rx_config 00CA                           __size_of_RB7_ISR 001A  
      __end_of_lcd_4bit_send_char_data_pos 354C                _lcd_4bit_send_char_data_pos 3510  
                         ?_async_Tx_config 002A                                _INTCON2bits 000FF1  
                              _INTCON3bits 000FF0                   ?_lcd_4bit_send_char_data 00D4  
                                copy_data0 3010                                  copy_data1 3030  
                 ?i2_lcd_4bit_send_command 000F                _EUSART_Async_Read_Data$1600 000F  
              _EUSART_Async_Read_Data$1601 0011                _EUSART_Async_Read_Data$1599 000D  
            ??_lcd_4bit_send_char_data_pos 001F                     ?_application_intialize 0001  
                      _GPIO_Pin_Initialize 3316                                   __Hrparam 0000  
         lcd_4bit_send_string_data_pos@lcd 00DF           lcd_4bit_send_string_data_pos@row 00E1  
      __size_of_EUSART_Async_Transmit_Data 00E4           lcd_4bit_send_string_data_pos@str 00E3  
                                 __Lrparam 0000                  ??i2_GPIO_Pin_Toggle_Logic 0003  
          __end_ofi2_lcd_4bits_set_courser 2B20                     _EUSART_Async_Read_Data 1DA4  
                         __size_of___fladd 055E                           __size_of___fldiv 042E  
                         __size_of___fltol 0108                  GPIO_Pin_Write_Logic@logic 002C  
                            _preloaded_val 002E               ??_async_config_baud_rate_gen 0115  
                __size_of_calc_parity_even 0068                       ?_GPIO_Pin_Initialize 00D0  
                                 ___xxtofl 1FAE                                 ?_usart_isr 0001  
                                 _datasend 004B                      RB6_ISR@Handler_Select 0026  
                     _InterruptManagerHigh 0008                   lcd_4bits_set_courser@lcd 00D8  
                 lcd_4bits_set_courser@row 00DA                                   __ptext10 23E4  
                                 __ptext11 2166                                   __ptext20 29BE  
                                 __ptext12 363E            _async_config_baud_rate_gen$4998 011C  
                                 __ptext21 2C7A                                   __ptext13 31A0  
                                 __ptext22 2EA8                                   __ptext14 19E4  
                                 __ptext31 33FA                                   __ptext15 1FAE  
                                 __ptext40 3202                                   __ptext32 35A2  
                                 __ptext24 35C8                                   __ptext16 263A  
                                 __ptext41 3264                                   __ptext33 34D4  
                                 __ptext25 35E2                                   __ptext17 15B6  
                                 __ptext50 0000                                   __ptext42 2E2E  
                                 __ptext34 3648                                   __ptext26 35FC  
                                 __ptext18 1058                                   __ptext43 348E  
                                 __ptext35 354C                                   __ptext27 3616  
                                 __ptext19 2D1C                                   __ptext44 2512  
                                 __ptext36 3444                                   __ptext28 3642  
                                 __ptext45 1DA4                                   __ptext37 2F8C  
                                 __ptext29 3646                                   __ptext46 3578  
                                 __ptext38 3510                                   __ptext47 2828  
                                 __ptext39 2A70                                   __ptext48 306A  
                                 __ptext49 30D2  Bluetooth_Send_Data_Non_Blocking@_uart_obj 000D  
            i2lcd_4bit_send_char_data@data 0011                       _GPIO_Pin_Write_Logic 23E4  
                        _ECU_DC_Motor_Stop 34D4         __size_ofi2_lcd_4bit_send_char_data 0062  
                                 _latitude 0132                              __size_of_main 00AC  
                       ?_ECU_DC_Motor_Stop 000B                                   _longtude 0125  
                                 _selector 0053        __size_of_async_config_baud_rate_gen 03C0  
                  ??_GPIO_Pin_Toggle_Logic 00CA                        ??_ECU_DC_Motor_Stop 000D  
                                 int$flags 0056                             _lcd_send_4bits 2DAC  
                    ??_GPIO_Pin_Initialize 002E                                 _INTCONbits 000FF2  
            calc_parity_odd@number_of_ones 0004                __end_of_lcd_4bit_initialize 23E4  
          __end_ofi2_lcd_4bit_send_command 3264                      ?_InterruptManagerHigh 0001  
             __size_of_Rx_config_interrupt 00A2                  __end_of_ECU_DC_Motor_Stop 3510  
                    ?_GPIO_Pin_Write_Logic 002A                                   intlevel1 0000  
                                 intlevel2 0000             i2lcd_4bit_send_command@command 0011  
                      _InterruptManagerLow 0018   GPIO_Pin_Direction_Initialize@_pin_config 002A  
                               _RCSTA1bits 000FAB                     __end_of_lcd_send_4bits 2E2E  
       __end_of_EUSART_Async_Transmit_Data 290C                 _EUSART_Async_Transmit_Data 2828  
                     ?_InterruptManagerLow 0001                   __end_ofi2_lcd_send_4bits 2EA8  
                           _port_registers 0080                                ??_usart_isr 0020  
                              _SSPCON1bits 000FC6                                _SSPCON2bits 000FC5  
                  __size_of_Timer0_Handler 0026                                 _WDTCONbits 000FD1  
                        fp__Timer0_Handler 0000            ??_lcd_4bit_send_string_data_pos 002E  
                            ___fladd@signs 0111           __size_ofi2_lcd_4bits_set_courser 00B0  
                    _lcd_4bits_set_courser 290C                               ___fladd@aexp 0112  
                             ___fladd@bexp 0113               EUSART_Async_Init@_eusart_obj 0120  
              lcd_4bit_send_char_data@data 00D6                     __size_of_EUSART_Rx_ISR 002C  
                   __size_of_EUSART_Tx_ISR 0002                     lcd_4bit_initialize@lcd 00D8  
