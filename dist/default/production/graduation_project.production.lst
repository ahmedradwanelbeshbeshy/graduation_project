

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 08:33:53 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92  0000                     
    93                           ; Version 2.40
    94                           ; Generated 17/11/2021 GMT
    95                           ; 
    96                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F4620 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataCOMRAM
   130  00558E                     __pidataCOMRAM:
   131                           	callstack 0
   132                           
   133                           ;initializer for _flags
   134  00558E  0F                 	db	15
   135                           
   136                           ;initializer for _pinc0
   137  00558F  90                 	db	144
   138                           
   139                           	psect	idataBANK0
   140  00557C                     __pidataBANK0:
   141                           	callstack 0
   142                           
   143                           ;initializer for _lcd1
   144  00557C  18                 	db	24
   145  00557D  19                 	db	25
   146  00557E  1A                 	db	26
   147  00557F  1B                 	db	27
   148  005580  1C                 	db	28
   149  005581  1D                 	db	29
   150                           
   151                           ;initializer for _ultrasonic
   152  005582  09                 	db	9
   153  005583  48                 	db	72
   154                           
   155                           ;initializer for _W2_W4_W6_Motor_Control
   156  005584  1A                 	db	26
   157  005585  1B                 	db	27
   158                           
   159                           ;initializer for _W1_W3_W5_Motor_Control
   160  005586  18                 	db	24
   161  005587  19                 	db	25
   162                           
   163                           ;initializer for _pinc1
   164  005588  91                 	db	145
   165                           
   166                           	psect	idataBANK1
   167  00540A                     __pidataBANK1:
   168                           	callstack 0
   169                           
   170                           ;initializer for _port_registers
   171  00540A  80                 	db	128
   172  00540B  0F                 	db	15
   173  00540C  81                 	db	129
   174  00540D  0F                 	db	15
   175  00540E  82                 	db	130
   176  00540F  0F                 	db	15
   177  005410  83                 	db	131
   178  005411  0F                 	db	15
   179  005412  84                 	db	132
   180  005413  0F                 	db	15
   181                           
   182                           ;initializer for _lat_registers
   183  005414  89                 	db	137
   184  005415  0F                 	db	15
   185  005416  8A                 	db	138
   186  005417  0F                 	db	15
   187  005418  8B                 	db	139
   188  005419  0F                 	db	15
   189  00541A  8C                 	db	140
   190  00541B  0F                 	db	15
   191  00541C  8D                 	db	141
   192  00541D  0F                 	db	15
   193                           
   194                           ;initializer for _tris_registers
   195  00541E  92                 	db	146
   196  00541F  0F                 	db	15
   197  005420  93                 	db	147
   198  005421  0F                 	db	15
   199  005422  94                 	db	148
   200  005423  0F                 	db	15
   201  005424  95                 	db	149
   202  005425  0F                 	db	15
   203  005426  96                 	db	150
   204  005427  0F                 	db	15
   205                           
   206                           ;initializer for _CCP2_Obj
   207  005428  01                 	db	1
   208  005429  02                 	db	2
   209  00542A  00                 	db	0
   210  00542B  11                 	db	17
   211  00542C  00                 	db	0
   212  00542D  01F4               	dw	500
   213  00542F  0000               	dw	0
   214  005431  F9                 	db	249
   215  005432  00                 	db	0
   216  005433  0F                 	db	15
   217                           
   218                           ;initializer for _CCP1_Obj
   219  005434  00                 	db	0
   220  005435  02                 	db	2
   221  005436  00                 	db	0
   222  005437  12                 	db	18
   223  005438  00                 	db	0
   224  005439  01F4               	dw	500
   225  00543B  0000               	dw	0
   226  00543D  F9                 	db	249
   227  00543E  00                 	db	0
   228  00543F  0F                 	db	15
   229  0000                     _T2CONbits	set	4042
   230  0000                     _INTCON2bits	set	4081
   231  0000                     _SSPBUF	set	4041
   232  0000                     _SSPSTATbits	set	4039
   233  0000                     _SSPADD	set	4040
   234  0000                     _SSPCON2bits	set	4037
   235  0000                     _SSPCON1bits	set	4038
   236  0000                     _SPBRGH	set	4016
   237  0000                     _SPBRG	set	4015
   238  0000                     _RCREG	set	4014
   239  0000                     _TXREG	set	4013
   240  0000                     _TRISCbits	set	3988
   241  0000                     _TXSTA1bits	set	4012
   242  0000                     _PR2	set	4043
   243  0000                     _ADCON1bits	set	4033
   244  0000                     _ADRESL	set	4035
   245  0000                     _ADRESH	set	4036
   246  0000                     _TRISD	set	3989
   247  0000                     _TRISB	set	3987
   248  0000                     _TRISE	set	3990
   249  0000                     _PORTDbits	set	3971
   250  0000                     _LATDbits	set	3980
   251  0000                     _TRISDbits	set	3989
   252  0000                     _TRISBbits	set	3987
   253  0000                     _PORTBbits	set	3969
   254  0000                     _RCSTA1bits	set	4011
   255  0000                     _TXSTAbits	set	4012
   256  0000                     _TRISC	set	3988
   257  0000                     _RX9D	set	32088
   258  0000                     _ADCON2bits	set	4032
   259  0000                     _ADCON0bits	set	4034
   260  0000                     _PORTE	set	3972
   261  0000                     _PORTD	set	3971
   262  0000                     _PORTC	set	3970
   263  0000                     _PORTB	set	3969
   264  0000                     _PORTA	set	3968
   265  0000                     _LATA	set	3977
   266  0000                     _TRISA	set	3986
   267  0000                     _PIE1bits	set	3997
   268  0000                     _RCSTAbits	set	4011
   269  0000                     _T3CONbits	set	4017
   270  0000                     _CCP2CONbits	set	4026
   271  0000                     _CCP1CONbits	set	4029
   272  0000                     _CCPR1L	set	4030
   273  0000                     _CCPR2L	set	4027
   274  0000                     _TMR2	set	4044
   275  0000                     _RCONbits	set	4048
   276  0000                     _BAUDCONbits	set	4024
   277  0000                     _IPR2bits	set	4002
   278  0000                     _PIR2bits	set	4001
   279  0000                     _PIE2bits	set	4000
   280  0000                     _IPR1bits	set	3999
   281  0000                     _PIR1bits	set	3998
   282  0000                     _WDTCONbits	set	4049
   283  0000                     _T0CONbits	set	4053
   284  0000                     _INTCON3bits	set	4080
   285  0000                     _INTCONbits	set	4082
   286  0000                     _LATE	set	3981
   287  0000                     _LATD	set	3980
   288  0000                     _LATC	set	3979
   289  0000                     _LATB	set	3978
   290  0000                     _TMR0H	set	4055
   291  0000                     _TMR0L	set	4054
   292                           
   293                           	psect	smallconst
   294  001000                     __psmallconst:
   295                           	callstack 0
   296  001000  00                 	db	0
   297  001001  41                 	db	65	;'A'
   298  001002  54                 	db	84	;'T'
   299  001003  2B                 	db	43
   300  001004  55                 	db	85	;'U'
   301  001005  41                 	db	65	;'A'
   302  001006  52                 	db	82	;'R'
   303  001007  54                 	db	84	;'T'
   304  001008  3A                 	db	58	;':'
   305  001009  39                 	db	57	;'9'
   306  00100A  36                 	db	54	;'6'
   307  00100B  30                 	db	48	;'0'
   308  00100C  30                 	db	48	;'0'
   309  00100D  2C                 	db	44
   310  00100E  30                 	db	48	;'0'
   311  00100F  2C                 	db	44
   312  001010  30                 	db	48	;'0'
   313  001011  0D                 	db	13
   314  001012  0A                 	db	10
   315  001013  00                 	db	0
   316  001014  41                 	db	65	;'A'
   317  001015  54                 	db	84	;'T'
   318  001016  2B                 	db	43
   319  001017  52                 	db	82	;'R'
   320  001018  4E                 	db	78	;'N'
   321  001019  41                 	db	65	;'A'
   322  00101A  4D                 	db	77	;'M'
   323  00101B  45                 	db	69	;'E'
   324  00101C  3A                 	db	58	;':'
   325  00101D  52                 	db	82	;'R'
   326  00101E  6F                 	db	111	;'o'
   327  00101F  62                 	db	98	;'b'
   328  001020  6F                 	db	111	;'o'
   329  001021  74                 	db	116	;'t'
   330  001022  0D                 	db	13
   331  001023  0A                 	db	10
   332  001024  00                 	db	0
   333  001025                     STR_11:
   334  001025  20                 	db	32
   335  001026  20                 	db	32
   336  001027  20                 	db	32
   337  001028  20                 	db	32
   338  001029  20                 	db	32
   339  00102A  20                 	db	32
   340  00102B  20                 	db	32
   341  00102C  20                 	db	32
   342  00102D  20                 	db	32
   343  00102E  20                 	db	32
   344  00102F  20                 	db	32
   345  001030  20                 	db	32
   346  001031  20                 	db	32
   347  001032  20                 	db	32
   348  001033  00                 	db	0
   349  001034  41                 	db	65	;'A'
   350  001035  54                 	db	84	;'T'
   351  001036  2B                 	db	43
   352  001037  50                 	db	80	;'P'
   353  001038  53                 	db	83	;'S'
   354  001039  57                 	db	87	;'W'
   355  00103A  44                 	db	68	;'D'
   356  00103B  3A                 	db	58	;':'
   357  00103C  31                 	db	49	;'1'
   358  00103D  32                 	db	50	;'2'
   359  00103E  33                 	db	51	;'3'
   360  00103F  34                 	db	52	;'4'
   361  001040  0D                 	db	13
   362  001041  0A                 	db	10
   363  001042  00                 	db	0
   364  001043  41                 	db	65	;'A'
   365  001044  54                 	db	84	;'T'
   366  001045  2B                 	db	43
   367  001046  52                 	db	82	;'R'
   368  001047  4F                 	db	79	;'O'
   369  001048  4C                 	db	76	;'L'
   370  001049  45                 	db	69	;'E'
   371  00104A  3A                 	db	58	;':'
   372  00104B  30                 	db	48	;'0'
   373  00104C  0D                 	db	13
   374  00104D  0A                 	db	10
   375  00104E  00                 	db	0
   376  00104F                     STR_14:
   377  00104F  68                 	db	104	;'h'
   378  001050  75                 	db	117	;'u'
   379  001051  6D                 	db	109	;'m'
   380  001052  65                 	db	101	;'e'
   381  001053  3A                 	db	58	;':'
   382  001054  00                 	db	0
   383  001055                     STR_16:
   384  001055  74                 	db	116	;'t'
   385  001056  65                 	db	101	;'e'
   386  001057  6D                 	db	109	;'m'
   387  001058  70                 	db	112	;'p'
   388  001059  3A                 	db	58	;':'
   389  00105A  00                 	db	0
   390  00105B                     STR_22:
   391  00105B  49                 	db	73	;'I'
   392  00105C  4E                 	db	78	;'N'
   393  00105D  46                 	db	70	;'F'
   394  00105E  00                 	db	0
   395  00105F                     STR_26:
   396  00105F  4E                 	db	78	;'N'
   397  001060  41                 	db	65	;'A'
   398  001061  4E                 	db	78	;'N'
   399  001062  00                 	db	0
   400  001063                     STR_23:
   401  001063  69                 	db	105	;'i'
   402  001064  6E                 	db	110	;'n'
   403  001065  66                 	db	102	;'f'
   404  001066  00                 	db	0
   405  001067                     STR_27:
   406  001067  6E                 	db	110	;'n'
   407  001068  61                 	db	97	;'a'
   408  001069  6E                 	db	110	;'n'
   409  00106A  00                 	db	0
   410  00106B                     STR_13:
   411  00106B  2D                 	db	45
   412  00106C  3E                 	db	62	;'>'
   413  00106D  20                 	db	32
   414  00106E  00                 	db	0
   415  00106F                     STR_30:
   416  00106F  6C                 	db	108	;'l'
   417  001070  66                 	db	102	;'f'
   418  001071  00                 	db	0
   419  001072                     STR_9:
   420  001072  25                 	db	37
   421  001073  66                 	db	102	;'f'
   422  001074  00                 	db	0
   423  001075                     STR_5:
   424  001075  25                 	db	37
   425  001076  69                 	db	105	;'i'
   426  001077  00                 	db	0
   427  001078                     STR_15:
   428  001078  2E                 	db	46
   429  001079  00                 	db	0
   430  00107A                     STR_19:
   431  00107A  30                 	db	48	;'0'
   432  00107B  00                 	db	0
   433  00107C                     STR_18:
   434  00107C  31                 	db	49	;'1'
   435  00107D  00                 	db	0
   436  00107E  00                 	db	0	; dummy byte at the end
   437  0000                     
   438                           ; #config settings
   439                           
   440                           	psect	cinit
   441  004E50                     __pcinit:
   442                           	callstack 0
   443  004E50                     start_initialization:
   444                           	callstack 0
   445  004E50                     __initialization:
   446                           	callstack 0
   447                           
   448                           ; Initialize objects allocated to BANK1 (54 bytes)
   449                           ; load TBLPTR registers with __pidataBANK1
   450  004E50  0E0A               	movlw	low __pidataBANK1
   451  004E52  6EF6               	movwf	tblptrl,c
   452  004E54  0E54               	movlw	high __pidataBANK1
   453  004E56  6EF7               	movwf	tblptrh,c
   454  004E58  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   455  004E5A  6EF8               	movwf	tblptru,c
   456  004E5C  EE01  F084         	lfsr	0,__pdataBANK1
   457  004E60  EE10 F036          	lfsr	1,54
   458  004E64                     copy_data0:
   459  004E64  0009               	tblrd		*+
   460  004E66  CFF5 FFEE          	movff	tablat,postinc0
   461  004E6A  50E5               	movf	postdec1,w,c
   462  004E6C  50E1               	movf	fsr1l,w,c
   463  004E6E  E1FA               	bnz	copy_data0
   464                           
   465                           ; Initialize objects allocated to BANK0 (13 bytes)
   466                           ; load TBLPTR registers with __pidataBANK0
   467  004E70  0E7C               	movlw	low __pidataBANK0
   468  004E72  6EF6               	movwf	tblptrl,c
   469  004E74  0E55               	movlw	high __pidataBANK0
   470  004E76  6EF7               	movwf	tblptrh,c
   471  004E78  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   472  004E7A  6EF8               	movwf	tblptru,c
   473  004E7C  EE00  F0F2         	lfsr	0,__pdataBANK0
   474  004E80  EE10 F00D          	lfsr	1,13
   475  004E84                     copy_data1:
   476  004E84  0009               	tblrd		*+
   477  004E86  CFF5 FFEE          	movff	tablat,postinc0
   478  004E8A  50E5               	movf	postdec1,w,c
   479  004E8C  50E1               	movf	fsr1l,w,c
   480  004E8E  E1FA               	bnz	copy_data1
   481                           
   482                           ; Initialize objects allocated to COMRAM (2 bytes)
   483                           ; load TBLPTR registers with __pidataCOMRAM
   484  004E90  0E8E               	movlw	low __pidataCOMRAM
   485  004E92  6EF6               	movwf	tblptrl,c
   486  004E94  0E55               	movlw	high __pidataCOMRAM
   487  004E96  6EF7               	movwf	tblptrh,c
   488  004E98  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   489  004E9A  6EF8               	movwf	tblptru,c
   490  004E9C  0009               	tblrd		*+	;fetch initializer
   491  004E9E  CFF5 F078          	movff	tablat,__pdataCOMRAM
   492  004EA2  0009               	tblrd		*+	;fetch initializer
   493  004EA4  CFF5 F079          	movff	tablat,__pdataCOMRAM+1
   494                           
   495                           ; Clear objects allocated to BANK1 (132 bytes)
   496  004EA8  EE01  F000         	lfsr	0,__pbssBANK1
   497  004EAC  0E84               	movlw	132
   498  004EAE                     clear_0:
   499  004EAE  6AEE               	clrf	postinc0,c
   500  004EB0  06E8               	decf	wreg,f,c
   501  004EB2  E1FD               	bnz	clear_0
   502                           
   503                           ; Clear objects allocated to BANK0 (35 bytes)
   504  004EB4  EE00  F0CF         	lfsr	0,__pbssBANK0
   505  004EB8  0E23               	movlw	35
   506  004EBA                     clear_1:
   507  004EBA  6AEE               	clrf	postinc0,c
   508  004EBC  06E8               	decf	wreg,f,c
   509  004EBE  E1FD               	bnz	clear_1
   510                           
   511                           ; Clear objects allocated to COMRAM (6 bytes)
   512  004EC0  6A77               	clrf	(__pbssCOMRAM+5)& (0+255),c
   513  004EC2  6A76               	clrf	(__pbssCOMRAM+4)& (0+255),c
   514  004EC4  6A75               	clrf	(__pbssCOMRAM+3)& (0+255),c
   515  004EC6  6A74               	clrf	(__pbssCOMRAM+2)& (0+255),c
   516  004EC8  6A73               	clrf	(__pbssCOMRAM+1)& (0+255),c
   517  004ECA  6A72               	clrf	__pbssCOMRAM& (0+255),c
   518  004ECC                     end_of_initialization:
   519                           	callstack 0
   520  004ECC                     __end_of__initialization:
   521                           	callstack 0
   522  004ECC  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   523  004ECE  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   524  004ED0  0100               	movlb	0
   525  004ED2  EFC0  F014         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528  000072                     __pbssCOMRAM:
   529                           	callstack 0
   530  000072                     _prec:
   531                           	callstack 0
   532  000072                     	ds	2
   533  000074                     _flags@doprnt$F4927:
   534                           	callstack 0
   535  000074                     	ds	2
   536  000076                     _T_Decimal:
   537                           	callstack 0
   538  000076                     	ds	1
   539  000077                     _RH_Decimal:
   540                           	callstack 0
   541  000077                     	ds	1
   542                           
   543                           	psect	dataCOMRAM
   544  000078                     __pdataCOMRAM:
   545                           	callstack 0
   546  000078                     _flags:
   547                           	callstack 0
   548  000078                     	ds	1
   549  000079                     _pinc0:
   550                           	callstack 0
   551  000079                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554  0000CF                     __pbssBANK0:
   555                           	callstack 0
   556  0000CF                     _nout:
   557                           	callstack 0
   558  0000CF                     	ds	2
   559  0000D1                     _width:
   560                           	callstack 0
   561  0000D1                     	ds	2
   562  0000D3                     _RB7_InterruptHandler_LOW:
   563                           	callstack 0
   564  0000D3                     	ds	2
   565  0000D5                     _RB7_InterruptHandler_HIGH:
   566                           	callstack 0
   567  0000D5                     	ds	2
   568  0000D7                     _RB6_InterruptHandler_LOW:
   569                           	callstack 0
   570  0000D7                     	ds	2
   571  0000D9                     _RB6_InterruptHandler_HIGH:
   572                           	callstack 0
   573  0000D9                     	ds	2
   574  0000DB                     _RB5_InterruptHandler_LOW:
   575                           	callstack 0
   576  0000DB                     	ds	2
   577  0000DD                     _RB5_InterruptHandler_HIGH:
   578                           	callstack 0
   579  0000DD                     	ds	2
   580  0000DF                     _RB4_InterruptHandler_LOW:
   581                           	callstack 0
   582  0000DF                     	ds	2
   583  0000E1                     _RB4_InterruptHandler_HIGH:
   584                           	callstack 0
   585  0000E1                     	ds	2
   586  0000E3                     _INT1_InterruptHandler:
   587                           	callstack 0
   588  0000E3                     	ds	2
   589  0000E5                     _eusart_overrunerr_CallBack:
   590                           	callstack 0
   591  0000E5                     	ds	2
   592  0000E7                     _eusart_Rx_InterruptHandler:
   593                           	callstack 0
   594  0000E7                     	ds	2
   595  0000E9                     _Movement_State:
   596                           	callstack 0
   597  0000E9                     	ds	1
   598  0000EA                     _Timer2_PreLoaded_Value_Store:
   599                           	callstack 0
   600  0000EA                     	ds	1
   601  0000EB                     _distance:
   602                           	callstack 0
   603  0000EB                     	ds	4
   604  0000EF                     _Checksum:
   605                           	callstack 0
   606  0000EF                     	ds	1
   607  0000F0                     _T_Integral:
   608                           	callstack 0
   609  0000F0                     	ds	1
   610  0000F1                     _RH_Integral:
   611                           	callstack 0
   612  0000F1                     	ds	1
   613                           
   614                           	psect	dataBANK0
   615  0000F2                     __pdataBANK0:
   616                           	callstack 0
   617  0000F2                     _lcd1:
   618                           	callstack 0
   619  0000F2                     	ds	6
   620  0000F8                     _ultrasonic:
   621                           	callstack 0
   622  0000F8                     	ds	2
   623  0000FA                     _W2_W4_W6_Motor_Control:
   624                           	callstack 0
   625  0000FA                     	ds	2
   626  0000FC                     _W1_W3_W5_Motor_Control:
   627                           	callstack 0
   628  0000FC                     	ds	2
   629  0000FE                     _pinc1:
   630                           	callstack 0
   631  0000FE                     	ds	1
   632                           
   633                           	psect	bssBANK1
   634  000100                     __pbssBANK1:
   635                           	callstack 0
   636  000100                     	ds	9
   637  000109                     	ds	6
   638  00010F                     floorf@F526:
   639                           	callstack 0
   640  00010F                     	ds	4
   641  000113                     ___fpclassifyf@F465:
   642                           	callstack 0
   643  000113                     	ds	4
   644  000117                     	ds	2
   645  000119                     _preloaded_val:
   646                           	callstack 0
   647  000119                     	ds	2
   648  00011B                     _INT2_InterruptHandler:
   649                           	callstack 0
   650  00011B                     	ds	2
   651  00011D                     _INT0_InterruptHandler:
   652                           	callstack 0
   653  00011D                     	ds	2
   654  00011F                     _I2C_Report_Write_Collision:
   655                           	callstack 0
   656  00011F                     	ds	2
   657  000121                     _I2C_Report_Receive_Overflow:
   658                           	callstack 0
   659  000121                     	ds	2
   660  000123                     _I2C_DefaultInterruptHandler:
   661                           	callstack 0
   662  000123                     	ds	2
   663  000125                     _eusart_frameerr_CallBack:
   664                           	callstack 0
   665  000125                     	ds	2
   666  000127                     _dbuf:
   667                           	callstack 0
   668  000127                     	ds	80
   669  000177                     _dis:
   670                           	callstack 0
   671  000177                     	ds	9
   672  000180                     _timer0:
   673                           	callstack 0
   674  000180                     	ds	4
   675                           
   676                           	psect	dataBANK1
   677  000184                     __pdataBANK1:
   678                           	callstack 0
   679  000184                     _port_registers:
   680                           	callstack 0
   681  000184                     	ds	10
   682  00018E                     _lat_registers:
   683                           	callstack 0
   684  00018E                     	ds	10
   685  000198                     _tris_registers:
   686                           	callstack 0
   687  000198                     	ds	10
   688  0001A2                     _CCP2_Obj:
   689                           	callstack 0
   690  0001A2                     	ds	12
   691  0001AE                     _CCP1_Obj:
   692                           	callstack 0
   693  0001AE                     	ds	12
   694                           
   695                           	psect	cstackBANK1
   696  0001BA                     __pcstackBANK1:
   697                           	callstack 0
   698  0001BA                     convert_float32_to_string@value:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x0
   702  0001BA                     	ds	4
   703  0001BE                     convert_float32_to_string@str:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x4
   707  0001BE                     	ds	2
   708                           
   709                           	psect	cstackBANK0
   710  000080                     __pcstackBANK0:
   711                           	callstack 0
   712  000080                     _efgtoa$4970:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  000080                     	ds	2
   717  000082                     _efgtoa$4977:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x2
   721  000082                     	ds	2
   722  000084                     _efgtoa$4978:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x4
   726  000084                     	ds	2
   727  000086                     efgtoa@t:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x6
   731  000086                     	ds	2
   732  000088                     efgtoa@pp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x8
   736  000088                     	ds	2
   737  00008A                     efgtoa@ne:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xA
   741  00008A                     	ds	2
   742  00008C                     efgtoa@m:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0xC
   746  00008C                     	ds	2
   747  00008E                     efgtoa@ou:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0xE
   751  00008E                     	ds	4
   752  000092                     efgtoa@d:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x12
   756  000092                     	ds	2
   757  000094                     efgtoa@sign:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x14
   761  000094                     	ds	2
   762  000096                     efgtoa@p:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x16
   766  000096                     	ds	2
   767  000098                     efgtoa@w:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x18
   771  000098                     	ds	2
   772  00009A                     efgtoa@nmode:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x1A
   776  00009A                     	ds	1
   777  00009B                     efgtoa@mode:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x1B
   781  00009B                     	ds	1
   782  00009C                     efgtoa@h:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x1C
   786  00009C                     	ds	4
   787  0000A0                     efgtoa@l:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x20
   791  0000A0                     	ds	4
   792  0000A4                     efgtoa@i:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x24
   796  0000A4                     	ds	2
   797  0000A6                     efgtoa@g:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x26
   801  0000A6                     	ds	4
   802  0000AA                     efgtoa@e:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x2A
   806  0000AA                     	ds	2
   807  0000AC                     efgtoa@n:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x2C
   811  0000AC                     	ds	2
   812  0000AE                     efgtoa@u:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x2E
   816  0000AE                     	ds	4
   817  0000B2                     ?_vfprintf:
   818                           	callstack 0
   819  0000B2                     vfprintf@fp:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x32
   823  0000B2                     	ds	2
   824  0000B4                     vfprintf@fmt:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x34
   828  0000B4                     	ds	2
   829  0000B6                     vfprintf@ap:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x36
   833  0000B6                     	ds	2
   834  0000B8                     ?_sprintf:
   835                           	callstack 0
   836  0000B8                     sprintf@s:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x38
   840  0000B8                     	ds	2
   841  0000BA                     sprintf@fmt:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x3A
   845  0000BA                     	ds	6
   846  0000C0                     sprintf@ap:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x40
   850  0000C0                     	ds	2
   851  0000C2                     sprintf@f:
   852                           	callstack 0
   853                           
   854                           ; 11 bytes @ 0x42
   855  0000C2                     	ds	11
   856  0000CD                     ??_main:
   857                           
   858                           ; 1 bytes @ 0x4D
   859  0000CD                     	ds	2
   860                           
   861                           	psect	cstackCOMRAM
   862  000001                     __pcstackCOMRAM:
   863                           	callstack 0
   864  000001                     RB4_ISR@Handler_Select:
   865                           	callstack 0
   866  000001                     RB5_ISR@Handler_Select:
   867                           	callstack 0
   868  000001                     RB6_ISR@Handler_Select:
   869                           	callstack 0
   870  000001                     RB7_ISR@Handler_Select:
   871                           	callstack 0
   872  000001                     
   873                           ; 1 bytes @ 0x0
   874  000001                     	ds	1
   875  000002                     ??_InterruptManagerLow:
   876                           
   877                           ; 1 bytes @ 0x1
   878  000002                     	ds	3
   879  000005                     ??_DHT11_Start:
   880  000005                     ?_strlen:
   881                           	callstack 0
   882  000005                     ?___fpclassifyf:
   883                           	callstack 0
   884  000005                     ?_isupper:
   885                           	callstack 0
   886  000005                     ?_strncmp:
   887                           	callstack 0
   888  000005                     ?___awdiv:
   889                           	callstack 0
   890  000005                     ?___awmod:
   891                           	callstack 0
   892  000005                     ?___fladd:
   893                           	callstack 0
   894  000005                     ?___flmul:
   895                           	callstack 0
   896  000005                     ?___flneg:
   897                           	callstack 0
   898  000005                     ?___fltol:
   899                           	callstack 0
   900  000005                     ?___xxtofl:
   901                           	callstack 0
   902  000005                     ?___aodiv:
   903                           	callstack 0
   904  000005                     ?___aomod:
   905                           	callstack 0
   906  000005                     GPIO_Pin_Direction_Initialize@_pin_config:
   907                           	callstack 0
   908  000005                     GPIO_Pin_Write_Logic@_pin_config:
   909                           	callstack 0
   910  000005                     GPIO_Pin_Read_Logic@_pin_config:
   911                           	callstack 0
   912  000005                     HAL_Timer0_Read_Val@_tmr0_config:
   913                           	callstack 0
   914  000005                     HAL_Timer0_Write_Val@_tmr0_config:
   915                           	callstack 0
   916  000005                     DHT11_Read_Data@data:
   917                           	callstack 0
   918  000005                     ___awdiv@dividend:
   919                           	callstack 0
   920  000005                     ___awmod@dividend:
   921                           	callstack 0
   922  000005                     memset@dest:
   923                           	callstack 0
   924  000005                     isupper@c:
   925                           	callstack 0
   926  000005                     fputc@c:
   927                           	callstack 0
   928  000005                     strcpy@dest:
   929                           	callstack 0
   930  000005                     strlen@s:
   931                           	callstack 0
   932  000005                     strncmp@_l:
   933                           	callstack 0
   934  000005                     ___fleq@ff1:
   935                           	callstack 0
   936  000005                     ___flneg@f1:
   937                           	callstack 0
   938  000005                     ___fltol@f1:
   939                           	callstack 0
   940  000005                     ___fladd@b:
   941                           	callstack 0
   942  000005                     ___flmul@b:
   943                           	callstack 0
   944  000005                     ___xxtofl@val:
   945                           	callstack 0
   946  000005                     ___fpclassifyf@x:
   947                           	callstack 0
   948  000005                     ___aodiv@dividend:
   949                           	callstack 0
   950  000005                     ___aomod@dividend:
   951                           	callstack 0
   952                           
   953                           ; 8 bytes @ 0x4
   954  000005                     	ds	2
   955  000007                     ??_DHT11_Read_Data:
   956  000007                     ??_isupper:
   957  000007                     ??_GPIO_Pin_Direction_Initialize:
   958  000007                     GPIO_Pin_Write_Logic@logic:
   959                           	callstack 0
   960  000007                     GPIO_Pin_Read_Logic@logic:
   961                           	callstack 0
   962  000007                     HAL_Timer0_Read_Val@result:
   963                           	callstack 0
   964  000007                     HAL_Timer0_Write_Val@val:
   965                           	callstack 0
   966  000007                     ___awdiv@divisor:
   967                           	callstack 0
   968  000007                     ___awmod@divisor:
   969                           	callstack 0
   970  000007                     memset@c:
   971                           	callstack 0
   972  000007                     fputc@fp:
   973                           	callstack 0
   974  000007                     strcpy@src:
   975                           	callstack 0
   976  000007                     strlen@a:
   977                           	callstack 0
   978  000007                     strncmp@_r:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x6
   982  000007                     	ds	1
   983  000008                     ??_GPIO_Pin_Write_Logic:
   984  000008                     DHT11_Read_Data@i:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x7
   988  000008                     	ds	1
   989  000009                     ??_GPIO_Pin_Read_Logic:
   990  000009                     ??_fputc:
   991  000009                     ??___fpclassifyf:
   992  000009                     ??_strcpy:
   993  000009                     ??_HAL_Timer0_Read_Val:
   994  000009                     ??___fltol:
   995  000009                     ??___xxtofl:
   996  000009                     HAL_Timer0_Write_Val@ret_value:
   997                           	callstack 0
   998  000009                     ___awdiv@counter:
   999                           	callstack 0
  1000  000009                     ___awmod@counter:
  1001                           	callstack 0
  1002  000009                     Get_Temp_HUM@RH_Decimal:
  1003                           	callstack 0
  1004  000009                     memset@n:
  1005                           	callstack 0
  1006  000009                     strncmp@n:
  1007                           	callstack 0
  1008  000009                     ___fleq@ff2:
  1009                           	callstack 0
  1010  000009                     ___fladd@a:
  1011                           	callstack 0
  1012  000009                     ___flmul@a:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x8
  1016  000009                     	ds	1
  1017  00000A                     ___awdiv@sign:
  1018                           	callstack 0
  1019  00000A                     ___awmod@sign:
  1020                           	callstack 0
  1021  00000A                     HAL_Timer0_Init@_tmr0_config:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x9
  1025  00000A                     	ds	1
  1026  00000B                     ??_memset:
  1027  00000B                     ??_strncmp:
  1028  00000B                     ?_tolower:
  1029                           	callstack 0
  1030  00000B                     Get_Temp_HUM@RH_Integral:
  1031                           	callstack 0
  1032  00000B                     ___awdiv@quotient:
  1033                           	callstack 0
  1034  00000B                     strcpy@s:
  1035                           	callstack 0
  1036  00000B                     tolower@c:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0xA
  1040  00000B                     	ds	1
  1041  00000C                     ??_HAL_Timer0_Init:
  1042  00000C                     strncmp@l:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0xB
  1046  00000C                     	ds	1
  1047  00000D                     ??___fladd:
  1048  00000D                     ??___flmul:
  1049  00000D                     ??_tolower:
  1050  00000D                     ??___fleq:
  1051  00000D                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
  1052                           	callstack 0
  1053  00000D                     HAL_Timer0_Read_Val@l_high_byte:
  1054                           	callstack 0
  1055  00000D                     ___fltol@sign1:
  1056                           	callstack 0
  1057  00000D                     ___xxtofl@sign:
  1058                           	callstack 0
  1059  00000D                     Get_Temp_HUM@T_Decimal:
  1060                           	callstack 0
  1061  00000D                     memset@k:
  1062                           	callstack 0
  1063  00000D                     ___fpclassifyf@e:
  1064                           	callstack 0
  1065  00000D                     strcpy@d:
  1066                           	callstack 0
  1067  00000D                     ___aodiv@divisor:
  1068                           	callstack 0
  1069  00000D                     ___aomod@divisor:
  1070                           	callstack 0
  1071                           
  1072                           ; 8 bytes @ 0xC
  1073  00000D                     	ds	1
  1074  00000E                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1075                           	callstack 0
  1076  00000E                     HAL_Timer0_Read_Val@l_low_byte:
  1077                           	callstack 0
  1078  00000E                     ___fltol@exp1:
  1079                           	callstack 0
  1080  00000E                     ___xxtofl@exp:
  1081                           	callstack 0
  1082  00000E                     fputs@s:
  1083                           	callstack 0
  1084  00000E                     strncmp@r:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xD
  1088  00000E                     	ds	1
  1089  00000F                     lcd_4bits_send_enable_signal@lcd:
  1090                           	callstack 0
  1091  00000F                     lcd_send_4bits@lcd:
  1092                           	callstack 0
  1093  00000F                     GPIO_Pin_Initialize@_pin_config:
  1094                           	callstack 0
  1095  00000F                     Get_Temp_HUM@T_Integral:
  1096                           	callstack 0
  1097  00000F                     send_trig_pulse@ultrasonic_object:
  1098                           	callstack 0
  1099  00000F                     memset@s:
  1100                           	callstack 0
  1101  00000F                     ___xxtofl@arg:
  1102                           	callstack 0
  1103  00000F                     ___fpclassifyf@u:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0xE
  1107  00000F                     	ds	1
  1108  000010                     fputs@fp:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0xF
  1112  000010                     	ds	1
  1113  000011                     lcd_send_4bits@data_command:
  1114                           	callstack 0
  1115  000011                     GPIO_Pin_Initialize@ERRORSTATUS:
  1116                           	callstack 0
  1117  000011                     ___fladd@signs:
  1118                           	callstack 0
  1119  000011                     ___flmul@sign:
  1120                           	callstack 0
  1121  000011                     Get_Temp_HUM@Checksum:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x10
  1125  000011                     	ds	1
  1126  000012                     ___fladd@aexp:
  1127                           	callstack 0
  1128  000012                     ___flmul@aexp:
  1129                           	callstack 0
  1130  000012                     fputs@c:
  1131                           	callstack 0
  1132  000012                     lcd_4bit_send_command@lcd:
  1133                           	callstack 0
  1134  000012                     lcd_4bit_send_char_data@lcd:
  1135                           	callstack 0
  1136  000012                     Ultra_Sonic_Init@ultrasonic_object:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x11
  1140  000012                     	ds	1
  1141  000013                     ?___fldiv:
  1142                           	callstack 0
  1143  000013                     ___fladd@bexp:
  1144                           	callstack 0
  1145  000013                     fputs@i:
  1146                           	callstack 0
  1147  000013                     ___fldiv@b:
  1148                           	callstack 0
  1149  000013                     ___flmul@grs:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x12
  1153  000013                     	ds	1
  1154  000014                     lcd_4bit_send_command@command:
  1155                           	callstack 0
  1156  000014                     lcd_4bit_send_char_data@data:
  1157                           	callstack 0
  1158  000014                     ___fladd@grs:
  1159                           	callstack 0
  1160  000014                     Ultra_Sonic_Init@_tmr0_config:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x13
  1164  000014                     	ds	1
  1165  000015                     ?_pad:
  1166                           	callstack 0
  1167  000015                     lcd_4bit_send_command@ERRORSTATUS:
  1168                           	callstack 0
  1169  000015                     ___aodiv@counter:
  1170                           	callstack 0
  1171  000015                     ___aomod@counter:
  1172                           	callstack 0
  1173  000015                     pad@fp:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x14
  1177  000015                     	ds	1
  1178  000016                     ___aodiv@sign:
  1179                           	callstack 0
  1180  000016                     ___aomod@sign:
  1181                           	callstack 0
  1182  000016                     lcd_4bit_initialize@lcd:
  1183                           	callstack 0
  1184  000016                     lcd_4bits_set_courser@lcd:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x15
  1188  000016                     	ds	1
  1189  000017                     ?_abs:
  1190                           	callstack 0
  1191  000017                     ___flmul@bexp:
  1192                           	callstack 0
  1193  000017                     pad@buf:
  1194                           	callstack 0
  1195  000017                     abs@a:
  1196                           	callstack 0
  1197  000017                     ___fldiv@a:
  1198                           	callstack 0
  1199  000017                     ___aodiv@quotient:
  1200                           	callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x16
  1203  000017                     	ds	1
  1204  000018                     ??_lcd_4bit_initialize:
  1205  000018                     lcd_4bits_set_courser@row:
  1206                           	callstack 0
  1207  000018                     ___flmul@prod:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x17
  1211  000018                     	ds	1
  1212  000019                     ??_abs:
  1213  000019                     lcd_4bits_set_courser@colum:
  1214                           	callstack 0
  1215  000019                     pad@p:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x18
  1219  000019                     	ds	1
  1220  00001A                     ??_lcd_4bits_set_courser:
  1221  00001A                     lcd_4bit_initialize@pin_lcd_counter:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x19
  1225  00001A                     	ds	1
  1226  00001B                     ??___fldiv:
  1227  00001B                     ??_pad:
  1228                           
  1229                           ; 1 bytes @ 0x1A
  1230  00001B                     	ds	1
  1231  00001C                     lcd_4bit_send_char_data_pos@lcd:
  1232                           	callstack 0
  1233  00001C                     lcd_4bit_send_string_data_pos@lcd:
  1234                           	callstack 0
  1235  00001C                     ___flmul@temp:
  1236                           	callstack 0
  1237  00001C                     pad@i:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x1B
  1241  00001C                     	ds	2
  1242  00001E                     ?___flsub:
  1243                           	callstack 0
  1244  00001E                     lcd_4bit_send_char_data_pos@row:
  1245                           	callstack 0
  1246  00001E                     lcd_4bit_send_string_data_pos@row:
  1247                           	callstack 0
  1248  00001E                     pad@w:
  1249                           	callstack 0
  1250  00001E                     ___flge@ff1:
  1251                           	callstack 0
  1252  00001E                     ___flsub@b:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x1D
  1256  00001E                     	ds	1
  1257  00001F                     lcd_4bit_send_char_data_pos@colum:
  1258                           	callstack 0
  1259  00001F                     lcd_4bit_send_string_data_pos@colum:
  1260                           	callstack 0
  1261  00001F                     ___fldiv@rem:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x1E
  1265  00001F                     	ds	1
  1266  000020                     ?_dtoa:
  1267                           	callstack 0
  1268  000020                     lcd_4bit_send_char_data_pos@data:
  1269                           	callstack 0
  1270  000020                     lcd_4bit_send_string_data_pos@str:
  1271                           	callstack 0
  1272  000020                     dtoa@fp:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x1F
  1276  000020                     	ds	1
  1277  000021                     
  1278                           ; 1 bytes @ 0x20
  1279  000021                     	ds	1
  1280  000022                     ___flge@ff2:
  1281                           	callstack 0
  1282  000022                     ___flsub@a:
  1283                           	callstack 0
  1284  000022                     dtoa@d:
  1285                           	callstack 0
  1286                           
  1287                           ; 8 bytes @ 0x21
  1288  000022                     	ds	1
  1289  000023                     ___fldiv@sign:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x22
  1293  000023                     	ds	1
  1294  000024                     ___fldiv@new_exp:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x23
  1298  000024                     	ds	2
  1299  000026                     ??___flge:
  1300  000026                     ___fldiv@grs:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x25
  1304  000026                     	ds	4
  1305  00002A                     ??_dtoa:
  1306  00002A                     ___fldiv@bexp:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x29
  1310  00002A                     	ds	1
  1311  00002B                     ___fldiv@aexp:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x2A
  1315  00002B                     	ds	1
  1316  00002C                     ?_floorf:
  1317                           	callstack 0
  1318  00002C                     Get_Distance@ultrasonic_object:
  1319                           	callstack 0
  1320  00002C                     floorf@x:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0x2B
  1324  00002C                     	ds	2
  1325  00002E                     Get_Distance@_tmr0_config:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x2D
  1329  00002E                     	ds	2
  1330  000030                     ??_floorf:
  1331  000030                     Get_Distance@distance:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x2F
  1335  000030                     	ds	2
  1336  000032                     Get_Distance@timer_val:
  1337                           	callstack 0
  1338  000032                     _dtoa$4946:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x31
  1342  000032                     	ds	2
  1343  000034                     Get_Distance@logic:
  1344                           	callstack 0
  1345  000034                     dtoa@p:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x33
  1349  000034                     	ds	2
  1350  000036                     dtoa@w:
  1351                           	callstack 0
  1352  000036                     floorf@m:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x35
  1356  000036                     	ds	2
  1357  000038                     dtoa@s:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x37
  1361  000038                     	ds	2
  1362  00003A                     floorf@e:
  1363                           	callstack 0
  1364  00003A                     dtoa@n:
  1365                           	callstack 0
  1366                           
  1367                           ; 8 bytes @ 0x39
  1368  00003A                     	ds	2
  1369  00003C                     floorf@u:
  1370                           	callstack 0
  1371                           
  1372                           ; 4 bytes @ 0x3B
  1373  00003C                     	ds	4
  1374  000040                     ?_efgtoa:
  1375                           	callstack 0
  1376  000040                     efgtoa@fp:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x3F
  1380  000040                     	ds	2
  1381  000042                     dtoa@i:
  1382                           	callstack 0
  1383  000042                     efgtoa@f:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x41
  1387  000042                     	ds	4
  1388  000046                     efgtoa@c:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x45
  1392  000046                     	ds	1
  1393  000047                     ??_efgtoa:
  1394                           
  1395                           ; 1 bytes @ 0x46
  1396  000047                     	ds	5
  1397  00004C                     ?_vfpfcnvrt:
  1398                           	callstack 0
  1399  00004C                     vfpfcnvrt@fp:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x4B
  1403  00004C                     	ds	2
  1404  00004E                     vfpfcnvrt@fmt:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x4D
  1408  00004E                     	ds	2
  1409  000050                     vfpfcnvrt@ap:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x4F
  1413  000050                     	ds	2
  1414  000052                     ??_vfpfcnvrt:
  1415                           
  1416                           ; 1 bytes @ 0x51
  1417  000052                     	ds	4
  1418  000056                     vfpfcnvrt@ll:
  1419                           	callstack 0
  1420                           
  1421                           ; 8 bytes @ 0x55
  1422  000056                     	ds	8
  1423  00005E                     vfpfcnvrt@f:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x5D
  1427  00005E                     	ds	4
  1428  000062                     vfpfcnvrt@ct:
  1429                           	callstack 0
  1430                           
  1431                           ; 3 bytes @ 0x61
  1432  000062                     	ds	3
  1433  000065                     vfpfcnvrt@c:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x64
  1437  000065                     	ds	1
  1438  000066                     vfprintf@cfmt:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x65
  1442  000066                     	ds	2
  1443  000068                     convert_float32_to_string@temp_string:
  1444                           	callstack 0
  1445                           
  1446                           ; 9 bytes @ 0x67
  1447  000068                     	ds	9
  1448  000071                     convert_float32_to_string@data_counter:
  1449                           	callstack 0
  1450                           
  1451                           ; 1 bytes @ 0x70
  1452  000071                     	ds	1
  1453                           
  1454 ;;
  1455 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1456 ;;
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 97 in file "application.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2  1713[None  ] int 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:        2 bytes
  1478 ;; Hardware stack levels required when called: 13
  1479 ;; This function calls:
  1480 ;;		_GPIO_Pin_Write_Logic
  1481 ;;		_Get_Distance
  1482 ;;		_Get_Temp_HUM
  1483 ;;		___awdiv
  1484 ;;		___awmod
  1485 ;;		_application_intialize
  1486 ;;		_convert_float32_to_string
  1487 ;;		_lcd_4bit_send_char_data_pos
  1488 ;;		_lcd_4bit_send_string_data_pos
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text0
  1495  002980                     __ptext0:
  1496                           	callstack 0
  1497  002980                     _main:
  1498                           	callstack 18
  1499  002980                     
  1500                           ;application.c: 101:     application_intialize();
  1501  002980  ECB0  F029         	call	_application_intialize	;wreg free
  1502  002984                     
  1503                           ;application.c: 103:     lcd_4bit_send_string_data_pos(&lcd1,1,1,"              ");
  1504  002984  0EF2               	movlw	low _lcd1
  1505  002986  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1506  002988  0E00               	movlw	high _lcd1
  1507  00298A  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1508  00298C  0E01               	movlw	1
  1509  00298E  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1510  002990  0E01               	movlw	1
  1511  002992  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1512  002994  0E25               	movlw	low STR_11
  1513  002996  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1514  002998  0E10               	movlw	high STR_11
  1515  00299A  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1516  00299C  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1517  0029A0                     
  1518                           ;application.c: 104:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"              ");
  1519  0029A0  0EF2               	movlw	low _lcd1
  1520  0029A2  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1521  0029A4  0E00               	movlw	high _lcd1
  1522  0029A6  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1523  0029A8  0E02               	movlw	2
  1524  0029AA  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1525  0029AC  0E01               	movlw	1
  1526  0029AE  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1527  0029B0  0E25               	movlw	low STR_11
  1528  0029B2  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1529  0029B4  0E10               	movlw	high STR_11
  1530  0029B6  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1531  0029B8  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1532  0029BC                     
  1533                           ;application.c: 105:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-> ");
  1534  0029BC  0EF2               	movlw	low _lcd1
  1535  0029BE  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1536  0029C0  0E00               	movlw	high _lcd1
  1537  0029C2  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1538  0029C4  0E02               	movlw	2
  1539  0029C6  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1540  0029C8  0E01               	movlw	1
  1541  0029CA  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1542  0029CC  0E6B               	movlw	low STR_13
  1543  0029CE  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1544  0029D0  0E10               	movlw	high STR_13
  1545  0029D2  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1546  0029D4  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1547  0029D8                     
  1548                           ;application.c: 106:     GPIO_Pin_Write_Logic(&pinc0,GPIO_HIGH);
  1549  0029D8  0E79               	movlw	low _pinc0
  1550  0029DA  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1551  0029DC  0E00               	movlw	high _pinc0
  1552  0029DE  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1553  0029E0  0E01               	movlw	1
  1554  0029E2  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1555  0029E4  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  1556  0029E8                     
  1557                           ;application.c: 107:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1558  0029E8  0E0B               	movlw	11
  1559  0029EA  0100               	movlb	0	; () banked
  1560  0029EC  6FCE               	movwf	(??_main+1)& (0+255),b
  1561  0029EE  0E26               	movlw	38
  1562  0029F0  6FCD               	movwf	??_main& (0+255),b
  1563  0029F2  0E5D               	movlw	93
  1564  0029F4                     u13687:
  1565  0029F4  2EE8               	decfsz	wreg,f,c
  1566  0029F6  D7FE               	bra	u13687
  1567  0029F8  2FCD               	decfsz	??_main& (0+255),f,b
  1568  0029FA  D7FC               	bra	u13687
  1569  0029FC  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1570  0029FE  D7FA               	bra	u13687
  1571  002A00  D000               	nop2	
  1572  002A02                     
  1573                           ;application.c: 108:     GPIO_Pin_Write_Logic(&pinc0,GPIO_HIGH);
  1574  002A02  0E79               	movlw	low _pinc0
  1575  002A04  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1576  002A06  0E00               	movlw	high _pinc0
  1577  002A08  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1578  002A0A  0E01               	movlw	1
  1579  002A0C  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1580  002A0E  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  1581  002A12                     
  1582                           ;application.c: 109:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1583  002A12  0E06               	movlw	6
  1584  002A14  0100               	movlb	0	; () banked
  1585  002A16  6FCE               	movwf	(??_main+1)& (0+255),b
  1586  002A18  0E13               	movlw	19
  1587  002A1A  6FCD               	movwf	??_main& (0+255),b
  1588  002A1C  0EAD               	movlw	173
  1589  002A1E                     u13697:
  1590  002A1E  2EE8               	decfsz	wreg,f,c
  1591  002A20  D7FE               	bra	u13697
  1592  002A22  2FCD               	decfsz	??_main& (0+255),f,b
  1593  002A24  D7FC               	bra	u13697
  1594  002A26  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1595  002A28  D7FA               	bra	u13697
  1596  002A2A  D000               	nop2	
  1597  002A2C                     l11833:
  1598                           
  1599                           ;application.c: 112:     {;application.c: 117:        _delay((unsigned long)((500)*(8000
      +                          000/4000.0)));
  1600  002A2C  0E06               	movlw	6
  1601  002A2E  0100               	movlb	0	; () banked
  1602  002A30  6FCE               	movwf	(??_main+1)& (0+255),b
  1603  002A32  0E13               	movlw	19
  1604  002A34  6FCD               	movwf	??_main& (0+255),b
  1605  002A36  0EAD               	movlw	173
  1606  002A38                     u13707:
  1607  002A38  2EE8               	decfsz	wreg,f,c
  1608  002A3A  D7FE               	bra	u13707
  1609  002A3C  2FCD               	decfsz	??_main& (0+255),f,b
  1610  002A3E  D7FC               	bra	u13707
  1611  002A40  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1612  002A42  D7FA               	bra	u13707
  1613  002A44  D000               	nop2	
  1614  002A46                     
  1615                           ;application.c: 119:        Get_Temp_HUM(&RH_Decimal,&RH_Integral,&T_Decimal,&T_Integral
      +                          ,&Checksum);
  1616  002A46  0E77               	movlw	low _RH_Decimal
  1617  002A48  6E09               	movwf	Get_Temp_HUM@RH_Decimal^0,c
  1618  002A4A  0E00               	movlw	high _RH_Decimal
  1619  002A4C  6E0A               	movwf	(Get_Temp_HUM@RH_Decimal+1)^0,c
  1620  002A4E  0EF1               	movlw	low _RH_Integral
  1621  002A50  6E0B               	movwf	Get_Temp_HUM@RH_Integral^0,c
  1622  002A52  0E00               	movlw	high _RH_Integral
  1623  002A54  6E0C               	movwf	(Get_Temp_HUM@RH_Integral+1)^0,c
  1624  002A56  0E76               	movlw	low _T_Decimal
  1625  002A58  6E0D               	movwf	Get_Temp_HUM@T_Decimal^0,c
  1626  002A5A  0E00               	movlw	high _T_Decimal
  1627  002A5C  6E0E               	movwf	(Get_Temp_HUM@T_Decimal+1)^0,c
  1628  002A5E  0EF0               	movlw	low _T_Integral
  1629  002A60  6E0F               	movwf	Get_Temp_HUM@T_Integral^0,c
  1630  002A62  0E00               	movlw	high _T_Integral
  1631  002A64  6E10               	movwf	(Get_Temp_HUM@T_Integral+1)^0,c
  1632  002A66  0EEF               	movlw	low _Checksum
  1633  002A68  6E11               	movwf	Get_Temp_HUM@Checksum^0,c
  1634  002A6A  0E00               	movlw	high _Checksum
  1635  002A6C  6E12               	movwf	(Get_Temp_HUM@Checksum+1)^0,c
  1636  002A6E  EC8F  F026         	call	_Get_Temp_HUM	;wreg free
  1637  002A72                     
  1638                           ;application.c: 121:        lcd_4bit_send_string_data_pos(&lcd1,1,1,"hume:");
  1639  002A72  0EF2               	movlw	low _lcd1
  1640  002A74  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1641  002A76  0E00               	movlw	high _lcd1
  1642  002A78  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1643  002A7A  0E01               	movlw	1
  1644  002A7C  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1645  002A7E  0E01               	movlw	1
  1646  002A80  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1647  002A82  0E4F               	movlw	low STR_14
  1648  002A84  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1649  002A86  0E10               	movlw	high STR_14
  1650  002A88  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1651  002A8A  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1652  002A8E                     
  1653                           ;application.c: 122:        lcd_4bit_send_char_data_pos(&lcd1,1,6,48+RH_Decimal/10);
  1654  002A8E  0EF2               	movlw	low _lcd1
  1655  002A90  6E1C               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1656  002A92  0E00               	movlw	high _lcd1
  1657  002A94  6E1D               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1658  002A96  0E01               	movlw	1
  1659  002A98  6E1E               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1660  002A9A  0E06               	movlw	6
  1661  002A9C  6E1F               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  1662  002A9E  C077  F005         	movff	_RH_Decimal,___awdiv@dividend
  1663  002AA2  6A06               	clrf	(___awdiv@dividend+1)^0,c
  1664  002AA4  0E00               	movlw	0
  1665  002AA6  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1666  002AA8  0E0A               	movlw	10
  1667  002AAA  6E07               	movwf	___awdiv@divisor^0,c
  1668  002AAC  EC6B  F023         	call	___awdiv	;wreg free
  1669  002AB0  5005               	movf	?___awdiv^0,w,c
  1670  002AB2  0F30               	addlw	48
  1671  002AB4  6E20               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1672  002AB6  EC92  F029         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1673  002ABA                     
  1674                           ;application.c: 123:        lcd_4bit_send_char_data_pos(&lcd1,1,7,48+RH_Decimal%10);
  1675  002ABA  0EF2               	movlw	low _lcd1
  1676  002ABC  6E1C               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1677  002ABE  0E00               	movlw	high _lcd1
  1678  002AC0  6E1D               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1679  002AC2  0E01               	movlw	1
  1680  002AC4  6E1E               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1681  002AC6  0E07               	movlw	7
  1682  002AC8  6E1F               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  1683  002ACA  C077  F005         	movff	_RH_Decimal,___awmod@dividend
  1684  002ACE  6A06               	clrf	(___awmod@dividend+1)^0,c
  1685  002AD0  0E00               	movlw	0
  1686  002AD2  6E08               	movwf	(___awmod@divisor+1)^0,c
  1687  002AD4  0E0A               	movlw	10
  1688  002AD6  6E07               	movwf	___awmod@divisor^0,c
  1689  002AD8  ECE1  F024         	call	___awmod	;wreg free
  1690  002ADC  5005               	movf	?___awmod^0,w,c
  1691  002ADE  0F30               	addlw	48
  1692  002AE0  6E20               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1693  002AE2  EC92  F029         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1694  002AE6                     
  1695                           ;application.c: 124:        lcd_4bit_send_string_data_pos(&lcd1,1,8,".");
  1696  002AE6  0EF2               	movlw	low _lcd1
  1697  002AE8  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1698  002AEA  0E00               	movlw	high _lcd1
  1699  002AEC  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1700  002AEE  0E01               	movlw	1
  1701  002AF0  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1702  002AF2  0E08               	movlw	8
  1703  002AF4  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1704  002AF6  0E78               	movlw	low STR_15
  1705  002AF8  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1706  002AFA  0E10               	movlw	high STR_15
  1707  002AFC  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1708  002AFE  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1709  002B02                     
  1710                           ;application.c: 125:        lcd_4bit_send_char_data_pos(&lcd1,1,9,48+RH_Integral/10);
  1711  002B02  0EF2               	movlw	low _lcd1
  1712  002B04  6E1C               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1713  002B06  0E00               	movlw	high _lcd1
  1714  002B08  6E1D               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1715  002B0A  0E01               	movlw	1
  1716  002B0C  6E1E               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1717  002B0E  0E09               	movlw	9
  1718  002B10  6E1F               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  1719  002B12  C0F1  F005         	movff	_RH_Integral,___awdiv@dividend
  1720  002B16  6A06               	clrf	(___awdiv@dividend+1)^0,c
  1721  002B18  0E00               	movlw	0
  1722  002B1A  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1723  002B1C  0E0A               	movlw	10
  1724  002B1E  6E07               	movwf	___awdiv@divisor^0,c
  1725  002B20  EC6B  F023         	call	___awdiv	;wreg free
  1726  002B24  5005               	movf	?___awdiv^0,w,c
  1727  002B26  0F30               	addlw	48
  1728  002B28  6E20               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1729  002B2A  EC92  F029         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1730  002B2E                     
  1731                           ;application.c: 128:        lcd_4bit_send_string_data_pos(&lcd1,2,1,"temp:");
  1732  002B2E  0EF2               	movlw	low _lcd1
  1733  002B30  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1734  002B32  0E00               	movlw	high _lcd1
  1735  002B34  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1736  002B36  0E02               	movlw	2
  1737  002B38  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1738  002B3A  0E01               	movlw	1
  1739  002B3C  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1740  002B3E  0E55               	movlw	low STR_16
  1741  002B40  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1742  002B42  0E10               	movlw	high STR_16
  1743  002B44  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1744  002B46  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1745  002B4A                     
  1746                           ;application.c: 129:        lcd_4bit_send_char_data_pos(&lcd1,2,6,48+T_Decimal/10);
  1747  002B4A  0EF2               	movlw	low _lcd1
  1748  002B4C  6E1C               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1749  002B4E  0E00               	movlw	high _lcd1
  1750  002B50  6E1D               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1751  002B52  0E02               	movlw	2
  1752  002B54  6E1E               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1753  002B56  0E06               	movlw	6
  1754  002B58  6E1F               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  1755  002B5A  C076  F005         	movff	_T_Decimal,___awdiv@dividend
  1756  002B5E  6A06               	clrf	(___awdiv@dividend+1)^0,c
  1757  002B60  0E00               	movlw	0
  1758  002B62  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1759  002B64  0E0A               	movlw	10
  1760  002B66  6E07               	movwf	___awdiv@divisor^0,c
  1761  002B68  EC6B  F023         	call	___awdiv	;wreg free
  1762  002B6C  5005               	movf	?___awdiv^0,w,c
  1763  002B6E  0F30               	addlw	48
  1764  002B70  6E20               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1765  002B72  EC92  F029         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1766  002B76                     
  1767                           ;application.c: 130:        lcd_4bit_send_char_data_pos(&lcd1,2,7,48+T_Decimal%10);
  1768  002B76  0EF2               	movlw	low _lcd1
  1769  002B78  6E1C               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1770  002B7A  0E00               	movlw	high _lcd1
  1771  002B7C  6E1D               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1772  002B7E  0E02               	movlw	2
  1773  002B80  6E1E               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1774  002B82  0E07               	movlw	7
  1775  002B84  6E1F               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  1776  002B86  C076  F005         	movff	_T_Decimal,___awmod@dividend
  1777  002B8A  6A06               	clrf	(___awmod@dividend+1)^0,c
  1778  002B8C  0E00               	movlw	0
  1779  002B8E  6E08               	movwf	(___awmod@divisor+1)^0,c
  1780  002B90  0E0A               	movlw	10
  1781  002B92  6E07               	movwf	___awmod@divisor^0,c
  1782  002B94  ECE1  F024         	call	___awmod	;wreg free
  1783  002B98  5005               	movf	?___awmod^0,w,c
  1784  002B9A  0F30               	addlw	48
  1785  002B9C  6E20               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1786  002B9E  EC92  F029         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1787  002BA2                     
  1788                           ;application.c: 131:        lcd_4bit_send_string_data_pos(&lcd1,2,8,".");
  1789  002BA2  0EF2               	movlw	low _lcd1
  1790  002BA4  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1791  002BA6  0E00               	movlw	high _lcd1
  1792  002BA8  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1793  002BAA  0E02               	movlw	2
  1794  002BAC  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1795  002BAE  0E08               	movlw	8
  1796  002BB0  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1797  002BB2  0E78               	movlw	low STR_15
  1798  002BB4  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1799  002BB6  0E10               	movlw	high STR_15
  1800  002BB8  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1801  002BBA  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1802  002BBE                     
  1803                           ;application.c: 132:        lcd_4bit_send_char_data_pos(&lcd1,2,9,48+T_Integral/10);
  1804  002BBE  0EF2               	movlw	low _lcd1
  1805  002BC0  6E1C               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1806  002BC2  0E00               	movlw	high _lcd1
  1807  002BC4  6E1D               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1808  002BC6  0E02               	movlw	2
  1809  002BC8  6E1E               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1810  002BCA  0E09               	movlw	9
  1811  002BCC  6E1F               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  1812  002BCE  C0F0  F005         	movff	_T_Integral,___awdiv@dividend
  1813  002BD2  6A06               	clrf	(___awdiv@dividend+1)^0,c
  1814  002BD4  0E00               	movlw	0
  1815  002BD6  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1816  002BD8  0E0A               	movlw	10
  1817  002BDA  6E07               	movwf	___awdiv@divisor^0,c
  1818  002BDC  EC6B  F023         	call	___awdiv	;wreg free
  1819  002BE0  5005               	movf	?___awdiv^0,w,c
  1820  002BE2  0F30               	addlw	48
  1821  002BE4  6E20               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1822  002BE6  EC92  F029         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1823  002BEA                     
  1824                           ;application.c: 134:        if (Checksum==((RH_Decimal+RH_Integral+T_Decimal+T_Integral)
      +                          &0xff))
  1825  002BEA  0100               	movlb	0	; () banked
  1826  002BEC  51F1               	movf	_RH_Integral& (0+255),w,b
  1827  002BEE  C077  F0CD         	movff	_RH_Decimal,??_main
  1828  002BF2  6BCE               	clrf	(??_main+1)& (0+255),b
  1829  002BF4  27CD               	addwf	??_main& (0+255),f,b
  1830  002BF6  0E00               	movlw	0
  1831  002BF8  23CE               	addwfc	(??_main+1)& (0+255),f,b
  1832  002BFA  5076               	movf	_T_Decimal^0,w,c
  1833  002BFC  27CD               	addwf	??_main& (0+255),f,b
  1834  002BFE  0E00               	movlw	0
  1835  002C00  23CE               	addwfc	(??_main+1)& (0+255),f,b
  1836  002C02  51F0               	movf	_T_Integral& (0+255),w,b
  1837  002C04  27CD               	addwf	??_main& (0+255),f,b
  1838  002C06  0E00               	movlw	0
  1839  002C08  23CE               	addwfc	(??_main+1)& (0+255),f,b
  1840  002C0A  51CD               	movf	??_main& (0+255),w,b
  1841  002C0C  19EF               	xorwf	_Checksum& (0+255),w,b
  1842  002C0E  A4D8               	btfss	status,2,c
  1843  002C10  EF0C  F016         	goto	u13671
  1844  002C14  EF0E  F016         	goto	u13670
  1845  002C18                     u13671:
  1846  002C18  EF1E  F016         	goto	l11861
  1847  002C1C                     u13670:
  1848  002C1C                     
  1849                           ; BSR set to: 0
  1850                           ;application.c: 135:        {;application.c: 136:            lcd_4bit_send_string_data_p
      +                          os(&lcd1,2,13,"1");
  1851  002C1C  0EF2               	movlw	low _lcd1
  1852  002C1E  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1853  002C20  0E00               	movlw	high _lcd1
  1854  002C22  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1855  002C24  0E02               	movlw	2
  1856  002C26  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1857  002C28  0E0D               	movlw	13
  1858  002C2A  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1859  002C2C  0E7C               	movlw	low STR_18
  1860  002C2E  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1861  002C30  0E10               	movlw	high STR_18
  1862  002C32  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1863  002C34  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1864                           
  1865                           ;application.c: 137:        }
  1866  002C38  EF2C  F016         	goto	l11863
  1867  002C3C                     l11861:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;application.c: 139:        {;application.c: 140:            lcd_4bit_send_string_data_p
      +                          os(&lcd1,2,13,"0");
  1871  002C3C  0EF2               	movlw	low _lcd1
  1872  002C3E  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1873  002C40  0E00               	movlw	high _lcd1
  1874  002C42  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1875  002C44  0E02               	movlw	2
  1876  002C46  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1877  002C48  0E0D               	movlw	13
  1878  002C4A  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1879  002C4C  0E7A               	movlw	low STR_19
  1880  002C4E  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1881  002C50  0E10               	movlw	high STR_19
  1882  002C52  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1883  002C54  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1884  002C58                     l11863:
  1885                           
  1886                           ;application.c: 142:        _delay((unsigned long)((1000)*(8000000/4000.0)));
  1887  002C58  0E0B               	movlw	11
  1888  002C5A  0100               	movlb	0	; () banked
  1889  002C5C  6FCE               	movwf	(??_main+1)& (0+255),b
  1890  002C5E  0E26               	movlw	38
  1891  002C60  6FCD               	movwf	??_main& (0+255),b
  1892  002C62  0E5D               	movlw	93
  1893  002C64                     u13717:
  1894  002C64  2EE8               	decfsz	wreg,f,c
  1895  002C66  D7FE               	bra	u13717
  1896  002C68  2FCD               	decfsz	??_main& (0+255),f,b
  1897  002C6A  D7FC               	bra	u13717
  1898  002C6C  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1899  002C6E  D7FA               	bra	u13717
  1900  002C70  D000               	nop2	
  1901  002C72                     
  1902                           ;application.c: 143:        Get_Distance(&ultrasonic,&timer0,&distance);
  1903  002C72  0EF8               	movlw	low _ultrasonic
  1904  002C74  6E2C               	movwf	Get_Distance@ultrasonic_object^0,c
  1905  002C76  0E00               	movlw	high _ultrasonic
  1906  002C78  6E2D               	movwf	(Get_Distance@ultrasonic_object+1)^0,c
  1907  002C7A  0E80               	movlw	low _timer0
  1908  002C7C  6E2E               	movwf	Get_Distance@_tmr0_config^0,c
  1909  002C7E  0E01               	movlw	high _timer0
  1910  002C80  6E2F               	movwf	(Get_Distance@_tmr0_config+1)^0,c
  1911  002C82  0EEB               	movlw	low _distance
  1912  002C84  6E30               	movwf	Get_Distance@distance^0,c
  1913  002C86  0E00               	movlw	high _distance
  1914  002C88  6E31               	movwf	(Get_Distance@distance+1)^0,c
  1915  002C8A  ECA6  F020         	call	_Get_Distance	;wreg free
  1916  002C8E                     
  1917                           ;application.c: 145:        convert_float32_to_string(distance,dis);
  1918  002C8E  C0EB  F1BA         	movff	_distance,convert_float32_to_string@value
  1919  002C92  C0EC  F1BB         	movff	_distance+1,convert_float32_to_string@value+1
  1920  002C96  C0ED  F1BC         	movff	_distance+2,convert_float32_to_string@value+2
  1921  002C9A  C0EE  F1BD         	movff	_distance+3,convert_float32_to_string@value+3
  1922  002C9E  0E77               	movlw	low _dis
  1923  002CA0  0101               	movlb	1	; () banked
  1924  002CA2  6FBE               	movwf	convert_float32_to_string@str& (0+255),b
  1925  002CA4  0E01               	movlw	high _dis
  1926  002CA6  6FBF               	movwf	(convert_float32_to_string@str+1)& (0+255),b
  1927  002CA8  EC26  F022         	call	_convert_float32_to_string	;wreg free
  1928  002CAC                     
  1929                           ;application.c: 146:        lcd_4bit_send_string_data_pos(&lcd1,2,1,"             ");
  1930  002CAC  0EF2               	movlw	low _lcd1
  1931  002CAE  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1932  002CB0  0E00               	movlw	high _lcd1
  1933  002CB2  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1934  002CB4  0E02               	movlw	2
  1935  002CB6  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1936  002CB8  0E01               	movlw	1
  1937  002CBA  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1938  002CBC  0E26               	movlw	low (STR_11+1)
  1939  002CBE  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1940  002CC0  0E10               	movlw	high (STR_11+1)
  1941  002CC2  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1942  002CC4  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1943  002CC8                     
  1944                           ;application.c: 147:        lcd_4bit_send_string_data_pos(&lcd1,2,1,dis);
  1945  002CC8  0EF2               	movlw	low _lcd1
  1946  002CCA  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1947  002CCC  0E00               	movlw	high _lcd1
  1948  002CCE  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1949  002CD0  0E02               	movlw	2
  1950  002CD2  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1951  002CD4  0E01               	movlw	1
  1952  002CD6  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1953  002CD8  0E77               	movlw	low _dis
  1954  002CDA  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1955  002CDC  0E01               	movlw	high _dis
  1956  002CDE  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1957  002CE0  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1958  002CE4                     
  1959                           ;application.c: 148:        _delay((unsigned long)((2000)*(8000000/4000.0)));
  1960  002CE4  0E15               	movlw	21
  1961  002CE6  0100               	movlb	0	; () banked
  1962  002CE8  6FCE               	movwf	(??_main+1)& (0+255),b
  1963  002CEA  0E4B               	movlw	75
  1964  002CEC  6FCD               	movwf	??_main& (0+255),b
  1965  002CEE  0EBE               	movlw	190
  1966  002CF0                     u13727:
  1967  002CF0  2EE8               	decfsz	wreg,f,c
  1968  002CF2  D7FE               	bra	u13727
  1969  002CF4  2FCD               	decfsz	??_main& (0+255),f,b
  1970  002CF6  D7FC               	bra	u13727
  1971  002CF8  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1972  002CFA  D7FA               	bra	u13727
  1973  002CFC  F000               	nop	
  1974  002CFE                     
  1975                           ;application.c: 149:        lcd_4bit_send_string_data_pos(&lcd1,2,1,"              ");
  1976  002CFE  0EF2               	movlw	low _lcd1
  1977  002D00  6E1C               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
  1978  002D02  0E00               	movlw	high _lcd1
  1979  002D04  6E1D               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
  1980  002D06  0E02               	movlw	2
  1981  002D08  6E1E               	movwf	lcd_4bit_send_string_data_pos@row^0,c
  1982  002D0A  0E01               	movlw	1
  1983  002D0C  6E1F               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
  1984  002D0E  0E25               	movlw	low STR_11
  1985  002D10  6E20               	movwf	lcd_4bit_send_string_data_pos@str^0,c
  1986  002D12  0E10               	movlw	high STR_11
  1987  002D14  6E21               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
  1988  002D16  EC3B  F026         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1989  002D1A  EF16  F015         	goto	l11833
  1990  002D1E  EF43  F001         	goto	start
  1991  002D22                     __end_of_main:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _lcd_4bit_send_string_data_pos *****************
  1995 ;; Defined at:
  1996 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  lcd             2   27[COMRAM] PTR const struct .
  1999 ;;		 -> lcd1(6), 
  2000 ;;  row             1   29[COMRAM] unsigned char 
  2001 ;;  colum           1   30[COMRAM] unsigned char 
  2002 ;;  str             2   31[COMRAM] PTR unsigned char 
  2003 ;;		 -> STR_21(15), STR_20(14), dis(9), STR_19(2), 
  2004 ;;		 -> STR_18(2), STR_17(2), STR_16(6), STR_15(2), 
  2005 ;;		 -> STR_14(6), STR_13(4), STR_12(15), STR_11(15), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  ERRORSTATUS     1    0        unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2017 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;Total ram usage:        6 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 8
  2024 ;; This function calls:
  2025 ;;		_lcd_4bit_send_char_data
  2026 ;;		_lcd_4bits_set_courser
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text1
  2033  004C76                     __ptext1:
  2034                           	callstack 0
  2035  004C76                     _lcd_4bit_send_string_data_pos:
  2036                           	callstack 22
  2037  004C76                     
  2038                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
  2039  004C76  501C               	movf	lcd_4bit_send_string_data_pos@lcd^0,w,c
  2040  004C78  101D               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,w,c
  2041  004C7A  B4D8               	btfsc	status,2,c
  2042  004C7C  EF42  F026         	goto	u9371
  2043  004C80  EF44  F026         	goto	u9370
  2044  004C84                     u9371:
  2045  004C84  EF4D  F026         	goto	l8827
  2046  004C88                     u9370:
  2047  004C88  5020               	movf	lcd_4bit_send_string_data_pos@str^0,w,c
  2048  004C8A  1021               	iorwf	(lcd_4bit_send_string_data_pos@str+1)^0,w,c
  2049  004C8C  A4D8               	btfss	status,2,c
  2050  004C8E  EF4B  F026         	goto	u9381
  2051  004C92  EF4D  F026         	goto	u9380
  2052  004C96                     u9381:
  2053  004C96  EF4F  F026         	goto	l8829
  2054  004C9A                     u9380:
  2055  004C9A                     l8827:
  2056                           
  2057                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
  2058  004C9A  EF8E  F026         	goto	l155
  2059  004C9E                     l8829:
  2060                           
  2061                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
  2062  004C9E  C01C  F016         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
  2063  004CA2  C01D  F017         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  2064  004CA6  C01E  F018         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
  2065  004CAA  C01F  F019         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
  2066  004CAE  EC89  F024         	call	_lcd_4bits_set_courser	;wreg free
  2067                           
  2068                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  2069  004CB2  EF75  F026         	goto	l8835
  2070  004CB6                     l8831:
  2071                           
  2072                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
  2073  004CB6  C01C  F012         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
  2074  004CBA  C01D  F013         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2075  004CBE  C020  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  2076  004CC2  C021  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  2077  004CC6  0E00               	movlw	low (__smallconst shr (0+16))
  2078  004CC8  6EF8               	movwf	tblptru,c
  2079  004CCA  0E0F               	movlw	(high __ramtop+-1)
  2080  004CCC  64F7               	cpfsgt	tblptrh,c
  2081  004CCE  D003               	bra	u9397
  2082  004CD0  0008               	tblrd		*
  2083  004CD2  50F5               	movf	tablat,w,c
  2084  004CD4  D005               	bra	u9390
  2085  004CD6                     u9397:
  2086  004CD6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2087  004CDA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2088  004CDE  50EF               	movf	indf0,w,c
  2089  004CE0                     u9390:
  2090  004CE0  6E14               	movwf	lcd_4bit_send_char_data@data^0,c
  2091  004CE2  EC0F  F028         	call	_lcd_4bit_send_char_data	;wreg free
  2092  004CE6  4A20               	infsnz	lcd_4bit_send_string_data_pos@str^0,f,c
  2093  004CE8  2A21               	incf	(lcd_4bit_send_string_data_pos@str+1)^0,f,c
  2094  004CEA                     l8835:
  2095                           
  2096                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  2097  004CEA  C020  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  2098  004CEE  C021  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  2099  004CF2  0E00               	movlw	low (__smallconst shr (0+16))
  2100  004CF4  6EF8               	movwf	tblptru,c
  2101  004CF6  0E0F               	movlw	(high __ramtop+-1)
  2102  004CF8  64F7               	cpfsgt	tblptrh,c
  2103  004CFA  D003               	bra	u9407
  2104  004CFC  0008               	tblrd		*
  2105  004CFE  50F5               	movf	tablat,w,c
  2106  004D00  D005               	bra	u9400
  2107  004D02                     u9407:
  2108  004D02  CFF6 FFE9          	movff	tblptrl,fsr0l
  2109  004D06  CFF7 FFEA          	movff	tblptrh,fsr0h
  2110  004D0A  50EF               	movf	indf0,w,c
  2111  004D0C                     u9400:
  2112  004D0C  0900               	iorlw	0
  2113  004D0E  A4D8               	btfss	status,2,c
  2114  004D10  EF8C  F026         	goto	u9411
  2115  004D14  EF8E  F026         	goto	u9410
  2116  004D18                     u9411:
  2117  004D18  EF5B  F026         	goto	l8831
  2118  004D1C                     u9410:
  2119  004D1C                     l155:
  2120  004D1C  0012               	return		;funcret
  2121  004D1E                     __end_of_lcd_4bit_send_string_data_pos:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  2125 ;; Defined at:
  2126 ;;		line 117 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  lcd             2   27[COMRAM] PTR const struct .
  2129 ;;		 -> lcd1(6), 
  2130 ;;  row             1   29[COMRAM] unsigned char 
  2131 ;;  colum           1   30[COMRAM] unsigned char 
  2132 ;;  data            1   31[COMRAM] unsigned char 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  ERRORSTATUS     1    0        unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      unsigned char 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2144 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;Total ram usage:        5 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 8
  2151 ;; This function calls:
  2152 ;;		_lcd_4bit_send_char_data
  2153 ;;		_lcd_4bits_set_courser
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;;		_lcd_4bit_send_custom_char
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text2
  2161  005324                     __ptext2:
  2162                           	callstack 0
  2163  005324                     _lcd_4bit_send_char_data_pos:
  2164                           	callstack 22
  2165  005324                     
  2166                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 120:     if ( ((void*)0)==lcd)
  2167  005324  501C               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  2168  005326  101D               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  2169  005328  A4D8               	btfss	status,2,c
  2170  00532A  EF99  F029         	goto	u9361
  2171  00532E  EF9B  F029         	goto	u9360
  2172  005332                     u9361:
  2173  005332  EF9D  F029         	goto	l8817
  2174  005336                     u9360:
  2175  005336                     
  2176                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 123:     }
  2177  005336  EFAF  F029         	goto	l135
  2178  00533A                     l8817:
  2179                           
  2180                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 125:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 12
      +                          6:        lcd_4bits_set_courser(lcd,row,colum);
  2181  00533A  C01C  F016         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bits_set_courser@lcd
  2182  00533E  C01D  F017         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  2183  005342  C01E  F018         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bits_set_courser@row
  2184  005346  C01F  F019         	movff	lcd_4bit_send_char_data_pos@colum,lcd_4bits_set_courser@colum
  2185  00534A  EC89  F024         	call	_lcd_4bits_set_courser	;wreg free
  2186                           
  2187                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 127:        lcd_4bit_send_char_data(lcd,data);
  2188  00534E  C01C  F012         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  2189  005352  C01D  F013         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2190  005356  C020  F014         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  2191  00535A  EC0F  F028         	call	_lcd_4bit_send_char_data	;wreg free
  2192  00535E                     l135:
  2193  00535E  0012               	return		;funcret
  2194  005360                     __end_of_lcd_4bit_send_char_data_pos:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _lcd_4bits_set_courser *****************
  2198 ;; Defined at:
  2199 ;;		line 591 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  lcd             2   21[COMRAM] PTR const struct .
  2202 ;;		 -> lcd1(6), 
  2203 ;;  row             1   23[COMRAM] unsigned char 
  2204 ;;  colum           1   24[COMRAM] unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  ERRORSTATUS     1    0        unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      unsigned char 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        6 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 7
  2223 ;; This function calls:
  2224 ;;		_lcd_4bit_send_command
  2225 ;; This function is called by:
  2226 ;;		_lcd_4bit_send_char_data_pos
  2227 ;;		_lcd_4bit_send_string_data_pos
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text3
  2232  004912                     __ptext3:
  2233                           	callstack 0
  2234  004912                     _lcd_4bits_set_courser:
  2235                           	callstack 22
  2236  004912                     
  2237                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 594:         if ( ((void*)0)==lcd)
  2238  004912  5016               	movf	lcd_4bits_set_courser@lcd^0,w,c
  2239  004914  1017               	iorwf	(lcd_4bits_set_courser@lcd+1)^0,w,c
  2240  004916  A4D8               	btfss	status,2,c
  2241  004918  EF90  F024         	goto	u8911
  2242  00491C  EF92  F024         	goto	u8910
  2243  004920                     u8911:
  2244  004920  EF94  F024         	goto	l8433
  2245  004924                     u8910:
  2246  004924                     
  2247                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 597:     }
  2248  004924  EFE0  F024         	goto	l281
  2249  004928                     l8433:
  2250                           
  2251                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 599:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 60
      +                          0:             colum--;
  2252  004928  0619               	decf	lcd_4bits_set_courser@colum^0,f,c
  2253                           
  2254                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 601:             switch (row)
  2255  00492A  EFC3  F024         	goto	l8445
  2256  00492E                     l8435:
  2257  00492E  C016  F012         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2258  004932  C017  F013         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2259  004936  5019               	movf	lcd_4bits_set_courser@colum^0,w,c
  2260  004938  0F80               	addlw	128
  2261  00493A  6E14               	movwf	lcd_4bit_send_command@command^0,c
  2262  00493C  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  2263  004940  EFE0  F024         	goto	l281
  2264  004944                     l8437:
  2265  004944  C016  F012         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2266  004948  C017  F013         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2267  00494C  5019               	movf	lcd_4bits_set_courser@colum^0,w,c
  2268  00494E  0FC0               	addlw	192
  2269  004950  6E14               	movwf	lcd_4bit_send_command@command^0,c
  2270  004952  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  2271  004956  EFE0  F024         	goto	l281
  2272  00495A                     l8439:
  2273  00495A  C016  F012         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2274  00495E  C017  F013         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2275  004962  5019               	movf	lcd_4bits_set_courser@colum^0,w,c
  2276  004964  0F94               	addlw	148
  2277  004966  6E14               	movwf	lcd_4bit_send_command@command^0,c
  2278  004968  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  2279  00496C  EFE0  F024         	goto	l281
  2280  004970                     l8441:
  2281  004970  C016  F012         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2282  004974  C017  F013         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2283  004978  5019               	movf	lcd_4bits_set_courser@colum^0,w,c
  2284  00497A  0FD4               	addlw	212
  2285  00497C  6E14               	movwf	lcd_4bit_send_command@command^0,c
  2286  00497E  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  2287  004982  EFE0  F024         	goto	l281
  2288  004986                     l8445:
  2289  004986  5018               	movf	lcd_4bits_set_courser@row^0,w,c
  2290  004988  6E1A               	movwf	??_lcd_4bits_set_courser^0,c
  2291  00498A  6A1B               	clrf	(??_lcd_4bits_set_courser+1)^0,c
  2292                           
  2293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2294                           ; Switch size 1, requested type "simple"
  2295                           ; Number of cases is 1, Range of values is 0 to 0
  2296                           ; switch strategies available:
  2297                           ; Name         Instructions Cycles
  2298                           ; simple_byte            4     3 (average)
  2299                           ;	Chosen strategy is simple_byte
  2300  00498C  501B               	movf	(??_lcd_4bits_set_courser+1)^0,w,c
  2301  00498E  0A00               	xorlw	0	; case 0
  2302  004990  B4D8               	btfsc	status,2,c
  2303  004992  EFCD  F024         	goto	l11937
  2304  004996  EFE0  F024         	goto	l281
  2305  00499A                     l11937:
  2306                           
  2307                           ; Switch size 1, requested type "simple"
  2308                           ; Number of cases is 4, Range of values is 1 to 4
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte           13     7 (average)
  2312                           ;	Chosen strategy is simple_byte
  2313  00499A  501A               	movf	??_lcd_4bits_set_courser^0,w,c
  2314  00499C  0A01               	xorlw	1	; case 1
  2315  00499E  B4D8               	btfsc	status,2,c
  2316  0049A0  EF97  F024         	goto	l8435
  2317  0049A4  0A03               	xorlw	3	; case 2
  2318  0049A6  B4D8               	btfsc	status,2,c
  2319  0049A8  EFA2  F024         	goto	l8437
  2320  0049AC  0A01               	xorlw	1	; case 3
  2321  0049AE  B4D8               	btfsc	status,2,c
  2322  0049B0  EFAD  F024         	goto	l8439
  2323  0049B4  0A07               	xorlw	7	; case 4
  2324  0049B6  B4D8               	btfsc	status,2,c
  2325  0049B8  EFB8  F024         	goto	l8441
  2326  0049BC  EFE0  F024         	goto	l281
  2327  0049C0                     l281:
  2328  0049C0  0012               	return		;funcret
  2329  0049C2                     __end_of_lcd_4bits_set_courser:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _lcd_4bit_send_char_data *****************
  2333 ;; Defined at:
  2334 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  lcd             2   17[COMRAM] PTR const struct .
  2337 ;;		 -> lcd1(6), 
  2338 ;;  data            1   19[COMRAM] unsigned char 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  ERRORSTATUS     1    0        unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      unsigned char 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;Total ram usage:        3 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 6
  2357 ;; This function calls:
  2358 ;;		_GPIO_Pin_Write_Logic
  2359 ;;		_lcd_4bits_send_enable_signal
  2360 ;;		_lcd_send_4bits
  2361 ;; This function is called by:
  2362 ;;		_lcd_4bit_send_char_data_pos
  2363 ;;		_lcd_4bit_send_string_data_pos
  2364 ;;		_lcd_4bit_send_string_data
  2365 ;;		_lcd_4bit_send_custom_char
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text4
  2370  00501E                     __ptext4:
  2371                           	callstack 0
  2372  00501E                     _lcd_4bit_send_char_data:
  2373                           	callstack 23
  2374  00501E                     
  2375                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  2376  00501E  5012               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2377  005020  1013               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  2378  005022  A4D8               	btfss	status,2,c
  2379  005024  EF16  F028         	goto	u8901
  2380  005028  EF18  F028         	goto	u8900
  2381  00502C                     u8901:
  2382  00502C  EF1A  F028         	goto	l8423
  2383  005030                     u8900:
  2384  005030                     
  2385                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  2386  005030  EF3F  F028         	goto	l130
  2387  005034                     l8423:
  2388  005034  C012  F005         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  2389  005038  C013  F006         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  2390  00503C  0E01               	movlw	1
  2391  00503E  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2392  005040  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  2393                           
  2394                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  2395  005044  C012  F00F         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2396  005048  C013  F010         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2397  00504C  3814               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2398  00504E  0B0F               	andlw	15
  2399  005050  6E11               	movwf	lcd_send_4bits@data_command^0,c
  2400  005052  EC6B  F027         	call	_lcd_send_4bits	;wreg free
  2401                           
  2402                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  2403  005056  C012  F00F         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  2404  00505A  C013  F010         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2405  00505E  ECE6  F028         	call	_lcd_4bits_send_enable_signal	;wreg free
  2406                           
  2407                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  2408  005062  C012  F00F         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2409  005066  C013  F010         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2410  00506A  C014  F011         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  2411  00506E  EC6B  F027         	call	_lcd_send_4bits	;wreg free
  2412                           
  2413                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  2414  005072  C012  F00F         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  2415  005076  C013  F010         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2416  00507A  ECE6  F028         	call	_lcd_4bits_send_enable_signal	;wreg free
  2417  00507E                     l130:
  2418  00507E  0012               	return		;funcret
  2419  005080                     __end_of_lcd_4bit_send_char_data:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _convert_float32_to_string *****************
  2423 ;; Defined at:
  2424 ;;		line 481 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  value           4    0[BANK1 ] float 
  2427 ;;  str             2    4[BANK1 ] PTR unsigned char 
  2428 ;;		 -> dis(9), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  temp_string     9  103[COMRAM] unsigned char [9]
  2431 ;;  data_counter    1  112[COMRAM] unsigned char 
  2432 ;;  ERRORSTATUS     1    0        unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:        10       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:       16 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 12
  2449 ;; This function calls:
  2450 ;;		_memset
  2451 ;;		_sprintf
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text5
  2458  00444C                     __ptext5:
  2459                           	callstack 0
  2460  00444C                     _convert_float32_to_string:
  2461                           	callstack 18
  2462  00444C                     
  2463                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 484:     uint8 temp_string[9]={0};
  2464  00444C  EE20  F068         	lfsr	2,convert_float32_to_string@temp_string
  2465  004450  0E08               	movlw	8
  2466  004452                     u13381:
  2467  004452  6ADE               	clrf	postinc2,c
  2468  004454  06E8               	decf	wreg,f,c
  2469  004456  E2FD               	bc	u13381
  2470  004458                     
  2471                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 485:     uint8 data_counter=0;
  2472  004458  0E00               	movlw	0
  2473  00445A  6E71               	movwf	convert_float32_to_string@data_counter^0,c
  2474  00445C                     
  2475                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 486:     if ( ((void*)0)==str)
  2476  00445C  0101               	movlb	1	; () banked
  2477  00445E  51BE               	movf	convert_float32_to_string@str& (0+255),w,b
  2478  004460  11BF               	iorwf	(convert_float32_to_string@str+1)& (0+255),w,b
  2479  004462  A4D8               	btfss	status,2,c
  2480  004464  EF36  F022         	goto	u13391
  2481  004468  EF38  F022         	goto	u13390
  2482  00446C                     u13391:
  2483  00446C  EF3A  F022         	goto	l11491
  2484  004470                     u13390:
  2485  004470                     
  2486                           ; BSR set to: 1
  2487                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 489:     }
  2488  004470  EF97  F022         	goto	l242
  2489  004474                     l11491:
  2490                           
  2491                           ; BSR set to: 1
  2492                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 491:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 49
      +                          2:          memset(str,' ',8);
  2493  004474  C1BE  F005         	movff	convert_float32_to_string@str,memset@dest
  2494  004478  C1BF  F006         	movff	convert_float32_to_string@str+1,memset@dest+1
  2495  00447C  0E00               	movlw	0
  2496  00447E  6E08               	movwf	(memset@c+1)^0,c
  2497  004480  0E20               	movlw	32
  2498  004482  6E07               	movwf	memset@c^0,c
  2499  004484  0E00               	movlw	0
  2500  004486  6E0A               	movwf	(memset@n+1)^0,c
  2501  004488  0E08               	movlw	8
  2502  00448A  6E09               	movwf	memset@n^0,c
  2503  00448C  EC74  F01C         	call	_memset	;wreg free
  2504  004490                     
  2505                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 493:          str[8]='\0';
  2506  004490  0101               	movlb	1	; () banked
  2507  004492  EE20 F008          	lfsr	2,8
  2508  004496  51BE               	movf	convert_float32_to_string@str& (0+255),w,b
  2509  004498  26D9               	addwf	fsr2l,f,c
  2510  00449A  51BF               	movf	(convert_float32_to_string@str+1)& (0+255),w,b
  2511  00449C  22DA               	addwfc	fsr2h,f,c
  2512  00449E  0E00               	movlw	0
  2513  0044A0  6EDF               	movwf	indf2,c
  2514  0044A2                     
  2515                           ; BSR set to: 1
  2516                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 494:          sprintf((char*)temp_string,"%f",valu
      +                          e);
  2517  0044A2  0E68               	movlw	low convert_float32_to_string@temp_string
  2518  0044A4  0100               	movlb	0	; () banked
  2519  0044A6  6FB8               	movwf	sprintf@s& (0+255),b
  2520  0044A8  0E00               	movlw	high convert_float32_to_string@temp_string
  2521  0044AA  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  2522  0044AC  0E72               	movlw	low STR_9
  2523  0044AE  6FBA               	movwf	sprintf@fmt& (0+255),b
  2524  0044B0  0E10               	movlw	high STR_9
  2525  0044B2  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  2526  0044B4  C1BA  F0BC         	movff	convert_float32_to_string@value,?_sprintf+4
  2527  0044B8  C1BB  F0BD         	movff	convert_float32_to_string@value+1,?_sprintf+5
  2528  0044BC  C1BC  F0BE         	movff	convert_float32_to_string@value+2,?_sprintf+6
  2529  0044C0  C1BD  F0BF         	movff	convert_float32_to_string@value+3,?_sprintf+7
  2530  0044C4  EC6F  F028         	call	_sprintf	;wreg free
  2531                           
  2532                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 495:          while(temp_string[data_counter]!='\0
      +                          ')
  2533  0044C8  EF76  F022         	goto	l11501
  2534  0044CC                     l11497:
  2535                           
  2536                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 496:          {;ECU/LCD_for_test_gps/ecu_char_lcd.
      +                          c: 497:             str[data_counter] =temp_string[data_counter];
  2537  0044CC  0E68               	movlw	low convert_float32_to_string@temp_string
  2538  0044CE  2471               	addwf	convert_float32_to_string@data_counter^0,w,c
  2539  0044D0  6ED9               	movwf	fsr2l,c
  2540  0044D2  6ADA               	clrf	fsr2h,c
  2541  0044D4  0E00               	movlw	high convert_float32_to_string@temp_string
  2542  0044D6  22DA               	addwfc	fsr2h,f,c
  2543  0044D8  5071               	movf	convert_float32_to_string@data_counter^0,w,c
  2544  0044DA  0101               	movlb	1	; () banked
  2545  0044DC  25BE               	addwf	convert_float32_to_string@str& (0+255),w,b
  2546  0044DE  6EE1               	movwf	fsr1l,c
  2547  0044E0  0E00               	movlw	0
  2548  0044E2  21BF               	addwfc	(convert_float32_to_string@str+1)& (0+255),w,b
  2549  0044E4  6EE2               	movwf	fsr1h,c
  2550  0044E6  CFDF FFE7          	movff	indf2,indf1
  2551  0044EA                     
  2552                           ; BSR set to: 1
  2553                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 498:             data_counter++;
  2554  0044EA  2A71               	incf	convert_float32_to_string@data_counter^0,f,c
  2555  0044EC                     l11501:
  2556                           
  2557                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 495:          while(temp_string[data_counter]!='\0
      +                          ')
  2558  0044EC  0E68               	movlw	low convert_float32_to_string@temp_string
  2559  0044EE  2471               	addwf	convert_float32_to_string@data_counter^0,w,c
  2560  0044F0  6ED9               	movwf	fsr2l,c
  2561  0044F2  6ADA               	clrf	fsr2h,c
  2562  0044F4  0E00               	movlw	high convert_float32_to_string@temp_string
  2563  0044F6  22DA               	addwfc	fsr2h,f,c
  2564  0044F8  50DF               	movf	indf2,w,c
  2565  0044FA  A4D8               	btfss	status,2,c
  2566  0044FC  EF82  F022         	goto	u13401
  2567  004500  EF84  F022         	goto	u13400
  2568  004504                     u13401:
  2569  004504  EF66  F022         	goto	l11497
  2570  004508                     u13400:
  2571  004508                     
  2572                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 500:         sprintf(str,"%f",value);
  2573  004508  C1BE  F0B8         	movff	convert_float32_to_string@str,sprintf@s
  2574  00450C  C1BF  F0B9         	movff	convert_float32_to_string@str+1,sprintf@s+1
  2575  004510  0E72               	movlw	low STR_9
  2576  004512  0100               	movlb	0	; () banked
  2577  004514  6FBA               	movwf	sprintf@fmt& (0+255),b
  2578  004516  0E10               	movlw	high STR_9
  2579  004518  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  2580  00451A  C1BA  F0BC         	movff	convert_float32_to_string@value,?_sprintf+4
  2581  00451E  C1BB  F0BD         	movff	convert_float32_to_string@value+1,?_sprintf+5
  2582  004522  C1BC  F0BE         	movff	convert_float32_to_string@value+2,?_sprintf+6
  2583  004526  C1BD  F0BF         	movff	convert_float32_to_string@value+3,?_sprintf+7
  2584  00452A  EC6F  F028         	call	_sprintf	;wreg free
  2585  00452E                     l242:
  2586  00452E  0012               	return		;funcret
  2587  004530                     __end_of_convert_float32_to_string:
  2588                           	callstack 0
  2589                           
  2590 ;; *************** function _sprintf *****************
  2591 ;; Defined at:
  2592 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  s               2   56[BANK0 ] PTR unsigned char 
  2595 ;;		 -> dis(9), convert_float32_to_string@temp_string(9), convert_uint16_to_string@temp_string(6), 
  2596 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  2597 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2598 ;;		 -> STR_6(3), STR_5(3), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  f              11   66[BANK0 ] struct _IO_FILE
  2601 ;;  ap              2   64[BANK0 ] PTR void [1]
  2602 ;;		 -> ?_sprintf(2), 
  2603 ;;  ret             2    0        int 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2   56[BANK0 ] int 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:       21 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 11
  2620 ;; This function calls:
  2621 ;;		_vfprintf
  2622 ;; This function is called by:
  2623 ;;		_convert_float32_to_string
  2624 ;;		_convert_uint8_to_string
  2625 ;;		_convert_uint16_to_string
  2626 ;;		_convert_uint32_to_string
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text6
  2631  0050DE                     __ptext6:
  2632                           	callstack 0
  2633  0050DE                     _sprintf:
  2634                           	callstack 18
  2635  0050DE  0EBC               	movlw	low (?_sprintf+4)
  2636  0050E0  0100               	movlb	0	; () banked
  2637  0050E2  6FC0               	movwf	sprintf@ap& (0+255),b
  2638  0050E4  0E00               	movlw	high (?_sprintf+4)
  2639  0050E6  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  2640  0050E8  C0B8  F0C2         	movff	sprintf@s,sprintf@f
  2641  0050EC  C0B9  F0C3         	movff	sprintf@s+1,sprintf@f+1
  2642  0050F0                     
  2643                           ; BSR set to: 0
  2644  0050F0  0E00               	movlw	0
  2645  0050F2  6FC6               	movwf	(sprintf@f+4)& (0+255),b
  2646  0050F4  0E00               	movlw	0
  2647  0050F6  6FC5               	movwf	(sprintf@f+3)& (0+255),b
  2648  0050F8                     
  2649                           ; BSR set to: 0
  2650  0050F8  0E00               	movlw	0
  2651  0050FA  6FCC               	movwf	(sprintf@f+10)& (0+255),b
  2652  0050FC  0E00               	movlw	0
  2653  0050FE  6FCB               	movwf	(sprintf@f+9)& (0+255),b
  2654  005100                     
  2655                           ; BSR set to: 0
  2656  005100  0EC2               	movlw	low sprintf@f
  2657  005102  6FB2               	movwf	vfprintf@fp& (0+255),b
  2658  005104  0E00               	movlw	high sprintf@f
  2659  005106  6FB3               	movwf	(vfprintf@fp+1)& (0+255),b
  2660  005108  C0BA  F0B4         	movff	sprintf@fmt,vfprintf@fmt
  2661  00510C  C0BB  F0B5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2662  005110  0EC0               	movlw	low sprintf@ap
  2663  005112  6FB6               	movwf	vfprintf@ap& (0+255),b
  2664  005114  0E00               	movlw	high sprintf@ap
  2665  005116  6FB7               	movwf	(vfprintf@ap+1)& (0+255),b
  2666  005118  ECDD  F027         	call	_vfprintf	;wreg free
  2667  00511C  0100               	movlb	0	; () banked
  2668  00511E  51C5               	movf	(sprintf@f+3)& (0+255),w,b
  2669  005120  25B8               	addwf	sprintf@s& (0+255),w,b
  2670  005122  6ED9               	movwf	fsr2l,c
  2671  005124  51C6               	movf	(sprintf@f+4)& (0+255),w,b
  2672  005126  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  2673  005128  6EDA               	movwf	fsr2h,c
  2674  00512A  0E00               	movlw	0
  2675  00512C  6EDF               	movwf	indf2,c
  2676  00512E                     
  2677                           ; BSR set to: 0
  2678  00512E  0012               	return		;funcret
  2679  005130                     __end_of_sprintf:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _vfprintf *****************
  2683 ;; Defined at:
  2684 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  2687 ;;		 -> sprintf@f(11), 
  2688 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  2689 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2690 ;;		 -> STR_6(3), STR_5(3), 
  2691 ;;  ap              2   54[BANK0 ] PTR PTR void 
  2692 ;;		 -> sprintf@ap(2), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  cfmt            2  101[COMRAM] PTR unsigned char 
  2695 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2696 ;;		 -> STR_6(3), STR_5(3), 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2   50[BANK0 ] int 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        8 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 10
  2713 ;; This function calls:
  2714 ;;		_vfpfcnvrt
  2715 ;; This function is called by:
  2716 ;;		_sprintf
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text7
  2721  004FBA                     __ptext7:
  2722                           	callstack 0
  2723  004FBA                     _vfprintf:
  2724                           	callstack 18
  2725  004FBA                     
  2726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2727  004FBA  C0B4  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  2728  004FBE  C0B5  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2729  004FC2                     
  2730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2731  004FC2  0E00               	movlw	0
  2732  004FC4  0100               	movlb	0	; () banked
  2733  004FC6  6FD0               	movwf	(_nout+1)& (0+255),b
  2734  004FC8  0E00               	movlw	0
  2735  004FCA  6FCF               	movwf	_nout& (0+255),b
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2738  004FCC  EFFB  F027         	goto	l11435
  2739  004FD0                     l11433:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2743  004FD0  C0B2  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2744  004FD4  C0B3  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2745  004FD8  0E66               	movlw	low vfprintf@cfmt
  2746  004FDA  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  2747  004FDC  0E00               	movlw	high vfprintf@cfmt
  2748  004FDE  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2749  004FE0  C0B6  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  2750  004FE4  C0B7  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2751  004FE8  ECBD  F012         	call	_vfpfcnvrt	;wreg free
  2752  004FEC  504C               	movf	?_vfpfcnvrt^0,w,c
  2753  004FEE  0100               	movlb	0	; () banked
  2754  004FF0  27CF               	addwf	_nout& (0+255),f,b
  2755  004FF2  504D               	movf	(?_vfpfcnvrt+1)^0,w,c
  2756  004FF4  23D0               	addwfc	(_nout+1)& (0+255),f,b
  2757  004FF6                     l11435:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2761  004FF6  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  2762  004FFA  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2763  004FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2764  004FFE  6AF8               	clrf	tblptru,c
  2765  005000                     	endif
  2766  005000                     	if	0	;tblptru may be non-zero
  2767  005000                     	endif
  2768  005000  0008               	tblrd		*
  2769  005002  50F5               	movf	tablat,w,c
  2770  005004  0900               	iorlw	0
  2771  005006  A4D8               	btfss	status,2,c
  2772  005008  EF08  F028         	goto	u13321
  2773  00500C  EF0A  F028         	goto	u13320
  2774  005010                     u13321:
  2775  005010  EFE8  F027         	goto	l11433
  2776  005014                     u13320:
  2777  005014                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2780  005014  C0CF  F0B2         	movff	_nout,?_vfprintf
  2781  005018  C0D0  F0B3         	movff	_nout+1,?_vfprintf+1
  2782  00501C                     
  2783                           ; BSR set to: 0
  2784  00501C  0012               	return		;funcret
  2785  00501E                     __end_of_vfprintf:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _vfpfcnvrt *****************
  2789 ;; Defined at:
  2790 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  2793 ;;		 -> sprintf@f(11), 
  2794 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  2795 ;;		 -> vfprintf@cfmt(2), 
  2796 ;;  ap              2   79[COMRAM] PTR PTR void 
  2797 ;;		 -> sprintf@ap(2), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  ll              8   85[COMRAM] long long 
  2800 ;;  llu             8    0        unsigned long long 
  2801 ;;  f               4   93[COMRAM] unsigned long long 
  2802 ;;  ct              3   97[COMRAM] unsigned char [3]
  2803 ;;  vp              3    0        PTR void 
  2804 ;;  cp              3    0        PTR unsigned char 
  2805 ;;  i               2    0        int 
  2806 ;;  done            2    0        int 
  2807 ;;  c               1  100[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  2   75[COMRAM] int 
  2810 ;; Registers used:
  2811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2817 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;Total ram usage:       26 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 9
  2824 ;; This function calls:
  2825 ;;		_dtoa
  2826 ;;		_efgtoa
  2827 ;;		_fputc
  2828 ;;		_isupper
  2829 ;;		_strncmp
  2830 ;;		_tolower
  2831 ;; This function is called by:
  2832 ;;		_vfprintf
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text8
  2837  00257A                     __ptext8:
  2838                           	callstack 0
  2839  00257A                     _vfpfcnvrt:
  2840                           	callstack 18
  2841  00257A                     
  2842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2843  00257A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2844  00257E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2845  002582  CFDE FFF6          	movff	postinc2,tblptrl
  2846  002586  CFDD FFF7          	movff	postdec2,tblptrh
  2847  00258A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2848  00258A  6AF8               	clrf	tblptru,c
  2849  00258C                     	endif
  2850  00258C                     	if	0	;tblptru may be non-zero
  2851  00258C                     	endif
  2852  00258C  0008               	tblrd		*
  2853  00258E  50F5               	movf	tablat,w,c
  2854  002590  0A25               	xorlw	37
  2855  002592  A4D8               	btfss	status,2,c
  2856  002594  EFCE  F012         	goto	u13231
  2857  002598  EFD0  F012         	goto	u13230
  2858  00259C                     u13231:
  2859  00259C  EFA3  F014         	goto	l11421
  2860  0025A0                     u13230:
  2861  0025A0                     
  2862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2863  0025A0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2864  0025A4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2865  0025A8  2ADE               	incf	postinc2,f,c
  2866  0025AA  0E00               	movlw	0
  2867  0025AC  22DD               	addwfc	postdec2,f,c
  2868  0025AE                     
  2869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2870  0025AE  0E00               	movlw	0
  2871  0025B0  0100               	movlb	0	; () banked
  2872  0025B2  6FD2               	movwf	(_width+1)& (0+255),b
  2873  0025B4  0E00               	movlw	0
  2874  0025B6  6FD1               	movwf	_width& (0+255),b
  2875  0025B8  C0D1  F074         	movff	_width,_flags@doprnt$F4927
  2876  0025BC  C0D2  F075         	movff	_width+1,_flags@doprnt$F4927+1
  2877  0025C0                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2880  0025C0  6872               	setf	_prec^0,c
  2881  0025C2  6873               	setf	(_prec+1)^0,c
  2882  0025C4                     
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2885  0025C4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2886  0025C8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2887  0025CC  CFDE FFF6          	movff	postinc2,tblptrl
  2888  0025D0  CFDD FFF7          	movff	postdec2,tblptrh
  2889  0025D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2890  0025D4  6AF8               	clrf	tblptru,c
  2891  0025D6                     	endif
  2892  0025D6                     	if	0	;tblptru may be non-zero
  2893  0025D6                     	endif
  2894  0025D6  0008               	tblrd		*
  2895  0025D8  50F5               	movf	tablat,w,c
  2896  0025DA  6E0B               	movwf	tolower@c^0,c
  2897  0025DC  6A0C               	clrf	(tolower@c+1)^0,c
  2898  0025DE  EC0A  F029         	call	_tolower	;wreg free
  2899  0025E2  500B               	movf	?_tolower^0,w,c
  2900  0025E4  6E62               	movwf	vfpfcnvrt@ct^0,c
  2901  0025E6                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2903  0025E6  5062               	movf	vfpfcnvrt@ct^0,w,c
  2904  0025E8  B4D8               	btfsc	status,2,c
  2905  0025EA  EFF9  F012         	goto	u13241
  2906  0025EE  EFFB  F012         	goto	u13240
  2907  0025F2                     u13241:
  2908  0025F2  EF35  F013         	goto	l11367
  2909  0025F6                     u13240:
  2910  0025F6                     
  2911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2912  0025F6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2913  0025FA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2914  0025FE  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2915  002602  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2916  002606  0E01               	movlw	1
  2917  002608  2652               	addwf	??_vfpfcnvrt^0,f,c
  2918  00260A  0E00               	movlw	0
  2919  00260C  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2920  00260E  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2921  002612  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2922  002616                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2923  002616  6AF8               	clrf	tblptru,c
  2924  002618                     	endif
  2925  002618                     	if	0	;tblptru may be non-zero
  2926  002618                     	endif
  2927  002618  0008               	tblrd		*
  2928  00261A  50F5               	movf	tablat,w,c
  2929  00261C  6E0B               	movwf	tolower@c^0,c
  2930  00261E  6A0C               	clrf	(tolower@c+1)^0,c
  2931  002620  EC0A  F029         	call	_tolower	;wreg free
  2932  002624  500B               	movf	?_tolower^0,w,c
  2933  002626  6E63               	movwf	(vfpfcnvrt@ct+1)^0,c
  2934  002628                     
  2935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2936  002628  5063               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2937  00262A  B4D8               	btfsc	status,2,c
  2938  00262C  EF1A  F013         	goto	u13251
  2939  002630  EF1C  F013         	goto	u13250
  2940  002634                     u13251:
  2941  002634  EF35  F013         	goto	l11367
  2942  002638                     u13250:
  2943  002638                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2945  002638  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2946  00263C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  002640  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2948  002644  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2949  002648  0E02               	movlw	2
  2950  00264A  2652               	addwf	??_vfpfcnvrt^0,f,c
  2951  00264C  0E00               	movlw	0
  2952  00264E  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2953  002650  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2954  002654  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2955  002658                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2956  002658  6AF8               	clrf	tblptru,c
  2957  00265A                     	endif
  2958  00265A                     	if	0	;tblptru may be non-zero
  2959  00265A                     	endif
  2960  00265A  0008               	tblrd		*
  2961  00265C  50F5               	movf	tablat,w,c
  2962  00265E  6E0B               	movwf	tolower@c^0,c
  2963  002660  6A0C               	clrf	(tolower@c+1)^0,c
  2964  002662  EC0A  F029         	call	_tolower	;wreg free
  2965  002666  500B               	movf	?_tolower^0,w,c
  2966  002668  6E64               	movwf	(vfpfcnvrt@ct+2)^0,c
  2967  00266A                     l11367:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2970  00266A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2971  00266E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2972  002672  CFDE FFF6          	movff	postinc2,tblptrl
  2973  002676  CFDD FFF7          	movff	postdec2,tblptrh
  2974  00267A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2975  00267A  6AF8               	clrf	tblptru,c
  2976  00267C                     	endif
  2977  00267C                     	if	0	;tblptru may be non-zero
  2978  00267C                     	endif
  2979  00267C  0008               	tblrd		*
  2980  00267E  50F5               	movf	tablat,w,c
  2981  002680  0A64               	xorlw	100
  2982  002682  B4D8               	btfsc	status,2,c
  2983  002684  EF46  F013         	goto	u13261
  2984  002688  EF48  F013         	goto	u13260
  2985  00268C                     u13261:
  2986  00268C  EF5B  F013         	goto	l11371
  2987  002690                     u13260:
  2988  002690  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2989  002694  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2990  002698  CFDE FFF6          	movff	postinc2,tblptrl
  2991  00269C  CFDD FFF7          	movff	postdec2,tblptrh
  2992  0026A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2993  0026A0  6AF8               	clrf	tblptru,c
  2994  0026A2                     	endif
  2995  0026A2                     	if	0	;tblptru may be non-zero
  2996  0026A2                     	endif
  2997  0026A2  0008               	tblrd		*
  2998  0026A4  50F5               	movf	tablat,w,c
  2999  0026A6  0A69               	xorlw	105
  3000  0026A8  A4D8               	btfss	status,2,c
  3001  0026AA  EF59  F013         	goto	u13271
  3002  0026AE  EF5B  F013         	goto	u13270
  3003  0026B2                     u13271:
  3004  0026B2  EF9B  F013         	goto	l11377
  3005  0026B6                     u13270:
  3006  0026B6                     l11371:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3009  0026B6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3010  0026BA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3011  0026BE  2ADE               	incf	postinc2,f,c
  3012  0026C0  0E00               	movlw	0
  3013  0026C2  22DD               	addwfc	postdec2,f,c
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3016  0026C4  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3017  0026C8  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3018  0026CC  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3019  0026D0  0E02               	movlw	2
  3020  0026D2  26DE               	addwf	postinc2,f,c
  3021  0026D4  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3022  0026D8  0E00               	movlw	0
  3023  0026DA  22DD               	addwfc	postdec2,f,c
  3024  0026DC  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3025  0026E0  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3026  0026E4  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  3027  0026E8  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  3028  0026EC  0E00               	movlw	0
  3029  0026EE  BE57               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3030  0026F0  0EFF               	movlw	-1
  3031  0026F2  6E58               	movwf	(vfpfcnvrt@ll+2)^0,c
  3032  0026F4  6E59               	movwf	(vfpfcnvrt@ll+3)^0,c
  3033  0026F6  6E5A               	movwf	(vfpfcnvrt@ll+4)^0,c
  3034  0026F8  6E5B               	movwf	(vfpfcnvrt@ll+5)^0,c
  3035  0026FA  6E5C               	movwf	(vfpfcnvrt@ll+6)^0,c
  3036  0026FC  6E5D               	movwf	(vfpfcnvrt@ll+7)^0,c
  3037  0026FE                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3039  0026FE  C04C  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3040  002702  C04D  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3041  002706  C056  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3042  00270A  C057  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3043  00270E  C058  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3044  002712  C059  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3045  002716  C05A  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3046  00271A  C05B  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3047  00271E  C05C  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3048  002722  C05D  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3049  002726  EC5E  F018         	call	_dtoa	;wreg free
  3050  00272A  C020  F04C         	movff	?_dtoa,?_vfpfcnvrt
  3051  00272E  C021  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3052  002732  EFBF  F014         	goto	l2618
  3053  002736                     l11377:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3056  002736  0E66               	movlw	102
  3057  002738  1862               	xorwf	vfpfcnvrt@ct^0,w,c
  3058  00273A  A4D8               	btfss	status,2,c
  3059  00273C  EFA2  F013         	goto	u13281
  3060  002740  EFA4  F013         	goto	u13280
  3061  002744                     u13281:
  3062  002744  EFE5  F013         	goto	l11389
  3063  002748                     u13280:
  3064  002748                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3066  002748  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3067  00274C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3068  002750  CFDE FFF6          	movff	postinc2,tblptrl
  3069  002754  CFDD FFF7          	movff	postdec2,tblptrh
  3070  002758                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3071  002758  6AF8               	clrf	tblptru,c
  3072  00275A                     	endif
  3073  00275A                     	if	0	;tblptru may be non-zero
  3074  00275A                     	endif
  3075  00275A  0008               	tblrd		*
  3076  00275C  CFF5 F065          	movff	tablat,vfpfcnvrt@c
  3077  002760                     
  3078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3079  002760  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3080  002764  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3081  002768  2ADE               	incf	postinc2,f,c
  3082  00276A  0E00               	movlw	0
  3083  00276C  22DD               	addwfc	postdec2,f,c
  3084  00276E                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3086  00276E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3087  002772  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3088  002776  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3089  00277A  0E04               	movlw	4
  3090  00277C  26DE               	addwf	postinc2,f,c
  3091  00277E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3092  002782  0E00               	movlw	0
  3093  002784  22DD               	addwfc	postdec2,f,c
  3094  002786  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3095  00278A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3096  00278E  CFDE F05E          	movff	postinc2,vfpfcnvrt@f
  3097  002792  CFDE F05F          	movff	postinc2,vfpfcnvrt@f+1
  3098  002796  CFDE F060          	movff	postinc2,vfpfcnvrt@f+2
  3099  00279A  CFDE F061          	movff	postinc2,vfpfcnvrt@f+3
  3100  00279E                     l11385:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3103  00279E  C04C  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  3104  0027A2  C04D  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3105  0027A6  C05E  F042         	movff	vfpfcnvrt@f,efgtoa@f
  3106  0027AA  C05F  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3107  0027AE  C060  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3108  0027B2  C061  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3109  0027B6  C065  F046         	movff	vfpfcnvrt@c,efgtoa@c
  3110  0027BA  EC40  F008         	call	_efgtoa	;wreg free
  3111  0027BE  C040  F04C         	movff	?_efgtoa,?_vfpfcnvrt
  3112  0027C2  C041  F04D         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3113  0027C6  EFBF  F014         	goto	l2618
  3114  0027CA                     l11389:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3117  0027CA  0E62               	movlw	low vfpfcnvrt@ct
  3118  0027CC  6E05               	movwf	strncmp@_l^0,c
  3119  0027CE  0E00               	movlw	high vfpfcnvrt@ct
  3120  0027D0  6E06               	movwf	(strncmp@_l+1)^0,c
  3121  0027D2  0E6F               	movlw	low STR_30
  3122  0027D4  6E07               	movwf	strncmp@_r^0,c
  3123  0027D6  0E10               	movlw	high STR_30
  3124  0027D8  6E08               	movwf	(strncmp@_r+1)^0,c
  3125  0027DA  0E00               	movlw	0
  3126  0027DC  6E0A               	movwf	(strncmp@n+1)^0,c
  3127  0027DE  0E02               	movlw	2
  3128  0027E0  6E09               	movwf	strncmp@n^0,c
  3129  0027E2  EC98  F022         	call	_strncmp	;wreg free
  3130  0027E6  5005               	movf	?_strncmp^0,w,c
  3131  0027E8  1006               	iorwf	(?_strncmp+1)^0,w,c
  3132  0027EA  A4D8               	btfss	status,2,c
  3133  0027EC  EFFA  F013         	goto	u13291
  3134  0027F0  EFFC  F013         	goto	u13290
  3135  0027F4                     u13291:
  3136  0027F4  EF6C  F014         	goto	l11405
  3137  0027F8                     u13290:
  3138  0027F8                     
  3139                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3140  0027F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3141  0027FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3142  002800  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  3143  002804  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  3144  002808  0E01               	movlw	1
  3145  00280A  2652               	addwf	??_vfpfcnvrt^0,f,c
  3146  00280C  0E00               	movlw	0
  3147  00280E  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3148  002810  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3149  002814  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3150  002818                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3151  002818  6AF8               	clrf	tblptru,c
  3152  00281A                     	endif
  3153  00281A                     	if	0	;tblptru may be non-zero
  3154  00281A                     	endif
  3155  00281A  0008               	tblrd		*
  3156  00281C  CFF5 F065          	movff	tablat,vfpfcnvrt@c
  3157  002820  0EBF               	movlw	191
  3158  002822  6E52               	movwf	??_vfpfcnvrt^0,c
  3159  002824  0EFF               	movlw	255
  3160  002826  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  3161  002828  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3162  00282C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3163  002830  CFDE FFF6          	movff	postinc2,tblptrl
  3164  002834  CFDD FFF7          	movff	postdec2,tblptrh
  3165  002838                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3166  002838  6AF8               	clrf	tblptru,c
  3167  00283A                     	endif
  3168  00283A                     	if	0	;tblptru may be non-zero
  3169  00283A                     	endif
  3170  00283A  0008               	tblrd		*
  3171  00283C  50F5               	movf	tablat,w,c
  3172  00283E  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  3173  002840  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  3174  002842  5052               	movf	??_vfpfcnvrt^0,w,c
  3175  002844  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3176  002846  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  3177  002848  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3178  00284A  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  3179  00284C  E107               	bnz	u13301
  3180  00284E  0E1A               	movlw	26
  3181  002850  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3182  002852  B0D8               	btfsc	status,0,c
  3183  002854  EF2E  F014         	goto	u13301
  3184  002858  EF30  F014         	goto	u13300
  3185  00285C                     u13301:
  3186  00285C  EF4A  F014         	goto	l11399
  3187  002860                     u13300:
  3188  002860                     
  3189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3190  002860  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3191  002864  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3192  002868  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3193  00286C  0E04               	movlw	4
  3194  00286E  26DE               	addwf	postinc2,f,c
  3195  002870  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3196  002874  0E00               	movlw	0
  3197  002876  22DD               	addwfc	postdec2,f,c
  3198  002878  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3199  00287C  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3200  002880  CFDE F05E          	movff	postinc2,vfpfcnvrt@f
  3201  002884  CFDE F05F          	movff	postinc2,vfpfcnvrt@f+1
  3202  002888  CFDE F060          	movff	postinc2,vfpfcnvrt@f+2
  3203  00288C  CFDE F061          	movff	postinc2,vfpfcnvrt@f+3
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3206  002890  EF62  F014         	goto	l2624
  3207  002894                     l11399:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3210  002894  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3211  002898  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3212  00289C  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3213  0028A0  0E04               	movlw	4
  3214  0028A2  26DE               	addwf	postinc2,f,c
  3215  0028A4  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3216  0028A8  0E00               	movlw	0
  3217  0028AA  22DD               	addwfc	postdec2,f,c
  3218  0028AC  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3219  0028B0  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3220  0028B4  CFDE F05E          	movff	postinc2,vfpfcnvrt@f
  3221  0028B8  CFDE F05F          	movff	postinc2,vfpfcnvrt@f+1
  3222  0028BC  CFDE F060          	movff	postinc2,vfpfcnvrt@f+2
  3223  0028C0  CFDE F061          	movff	postinc2,vfpfcnvrt@f+3
  3224  0028C4                     l2624:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3227  0028C4  0E02               	movlw	2
  3228  0028C6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  0028CA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  0028CE  26DE               	addwf	postinc2,f,c
  3231  0028D0  0E00               	movlw	0
  3232  0028D2  22DD               	addwfc	postdec2,f,c
  3233  0028D4  EFCF  F013         	goto	l11385
  3234  0028D8                     l11405:
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3237  0028D8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3238  0028DC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3239  0028E0  CFDE FFF6          	movff	postinc2,tblptrl
  3240  0028E4  CFDD FFF7          	movff	postdec2,tblptrh
  3241  0028E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3242  0028E8  6AF8               	clrf	tblptru,c
  3243  0028EA                     	endif
  3244  0028EA                     	if	0	;tblptru may be non-zero
  3245  0028EA                     	endif
  3246  0028EA  0008               	tblrd		*
  3247  0028EC  50F5               	movf	tablat,w,c
  3248  0028EE  0A25               	xorlw	37
  3249  0028F0  A4D8               	btfss	status,2,c
  3250  0028F2  EF7D  F014         	goto	u13311
  3251  0028F6  EF7F  F014         	goto	u13310
  3252  0028FA                     u13311:
  3253  0028FA  EF96  F014         	goto	l11415
  3254  0028FE                     u13310:
  3255  0028FE                     
  3256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3257  0028FE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3258  002902  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3259  002906  2ADE               	incf	postinc2,f,c
  3260  002908  0E00               	movlw	0
  3261  00290A  22DD               	addwfc	postdec2,f,c
  3262  00290C                     
  3263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3264  00290C  0E00               	movlw	0
  3265  00290E  6E06               	movwf	(fputc@c+1)^0,c
  3266  002910  0E25               	movlw	37
  3267  002912  6E05               	movwf	fputc@c^0,c
  3268  002914  C04C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3269  002918  C04D  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3270  00291C  EC06  F023         	call	_fputc	;wreg free
  3271  002920                     l11411:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3274  002920  0E00               	movlw	0
  3275  002922  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  3276  002924  0E01               	movlw	1
  3277  002926  6E4C               	movwf	?_vfpfcnvrt^0,c
  3278  002928  EFBF  F014         	goto	l2618
  3279  00292C                     l11415:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3282  00292C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3283  002930  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3284  002934  2ADE               	incf	postinc2,f,c
  3285  002936  0E00               	movlw	0
  3286  002938  22DD               	addwfc	postdec2,f,c
  3287  00293A                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3289  00293A  0E00               	movlw	0
  3290  00293C  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  3291  00293E  0E00               	movlw	0
  3292  002940  6E4C               	movwf	?_vfpfcnvrt^0,c
  3293  002942  EFBF  F014         	goto	l2618
  3294  002946                     l11421:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3297  002946  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3298  00294A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3299  00294E  CFDE FFF6          	movff	postinc2,tblptrl
  3300  002952  CFDD FFF7          	movff	postdec2,tblptrh
  3301  002956                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3302  002956  6AF8               	clrf	tblptru,c
  3303  002958                     	endif
  3304  002958                     	if	0	;tblptru may be non-zero
  3305  002958                     	endif
  3306  002958  0008               	tblrd		*
  3307  00295A  50F5               	movf	tablat,w,c
  3308  00295C  6E05               	movwf	fputc@c^0,c
  3309  00295E  6A06               	clrf	(fputc@c+1)^0,c
  3310  002960  C04C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3311  002964  C04D  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3312  002968  EC06  F023         	call	_fputc	;wreg free
  3313  00296C                     
  3314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3315  00296C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3316  002970  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3317  002974  2ADE               	incf	postinc2,f,c
  3318  002976  0E00               	movlw	0
  3319  002978  22DD               	addwfc	postdec2,f,c
  3320  00297A  EF90  F014         	goto	l11411
  3321  00297E                     l2618:
  3322  00297E  0012               	return		;funcret
  3323  002980                     __end_of_vfpfcnvrt:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _strncmp *****************
  3327 ;; Defined at:
  3328 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  3331 ;;		 -> vfpfcnvrt@ct(3), 
  3332 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  3333 ;;		 -> STR_32(3), 
  3334 ;;  n               2    8[COMRAM] unsigned int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  r               2   13[COMRAM] PTR const unsigned char 
  3337 ;;		 -> STR_32(3), 
  3338 ;;  l               2   11[COMRAM] PTR const unsigned char 
  3339 ;;		 -> vfpfcnvrt@ct(3), 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2    4[COMRAM] int 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:       11 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 4
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_vfpfcnvrt
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text9
  3364  004530                     __ptext9:
  3365                           	callstack 0
  3366  004530                     _strncmp:
  3367                           	callstack 22
  3368  004530  C005  F00C         	movff	strncmp@_l,strncmp@l
  3369  004534  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  3370  004538  C007  F00E         	movff	strncmp@_r,strncmp@r
  3371  00453C  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  3372  004540  0609               	decf	strncmp@n^0,f,c
  3373  004542  A0D8               	btfss	status,0,c
  3374  004544  060A               	decf	(strncmp@n+1)^0,f,c
  3375  004546  2809               	incf	strncmp@n^0,w,c
  3376  004548  E106               	bnz	u13181
  3377  00454A  280A               	incf	(strncmp@n+1)^0,w,c
  3378  00454C  A4D8               	btfss	status,2,c
  3379  00454E  EFAB  F022         	goto	u13181
  3380  004552  EFAD  F022         	goto	u13180
  3381  004556                     u13181:
  3382  004556  EFBA  F022         	goto	l11337
  3383  00455A                     u13180:
  3384  00455A  0E00               	movlw	0
  3385  00455C  6E06               	movwf	(?_strncmp+1)^0,c
  3386  00455E  0E00               	movlw	0
  3387  004560  6E05               	movwf	?_strncmp^0,c
  3388  004562  EF05  F023         	goto	l2707
  3389  004566                     l11335:
  3390  004566  4A0C               	infsnz	strncmp@l^0,f,c
  3391  004568  2A0D               	incf	(strncmp@l+1)^0,f,c
  3392  00456A  4A0E               	infsnz	strncmp@r^0,f,c
  3393  00456C  2A0F               	incf	(strncmp@r+1)^0,f,c
  3394  00456E  0609               	decf	strncmp@n^0,f,c
  3395  004570  A0D8               	btfss	status,0,c
  3396  004572  060A               	decf	(strncmp@n+1)^0,f,c
  3397  004574                     l11337:
  3398  004574  C00C  FFD9         	movff	strncmp@l,fsr2l
  3399  004578  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  3400  00457C  50DF               	movf	indf2,w,c
  3401  00457E  B4D8               	btfsc	status,2,c
  3402  004580  EFC4  F022         	goto	u13191
  3403  004584  EFC6  F022         	goto	u13190
  3404  004588                     u13191:
  3405  004588  EFF3  F022         	goto	l11345
  3406  00458C                     u13190:
  3407  00458C  C00E  FFF6         	movff	strncmp@r,tblptrl
  3408  004590  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  3409  004594                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3410  004594  6AF8               	clrf	tblptru,c
  3411  004596                     	endif
  3412  004596                     	if	0	;tblptru may be non-zero
  3413  004596                     	endif
  3414  004596  0008               	tblrd		*
  3415  004598  50F5               	movf	tablat,w,c
  3416  00459A  0900               	iorlw	0
  3417  00459C  B4D8               	btfsc	status,2,c
  3418  00459E  EFD3  F022         	goto	u13201
  3419  0045A2  EFD5  F022         	goto	u13200
  3420  0045A6                     u13201:
  3421  0045A6  EFF3  F022         	goto	l11345
  3422  0045AA                     u13200:
  3423  0045AA  5009               	movf	strncmp@n^0,w,c
  3424  0045AC  100A               	iorwf	(strncmp@n+1)^0,w,c
  3425  0045AE  B4D8               	btfsc	status,2,c
  3426  0045B0  EFDC  F022         	goto	u13211
  3427  0045B4  EFDE  F022         	goto	u13210
  3428  0045B8                     u13211:
  3429  0045B8  EFF3  F022         	goto	l11345
  3430  0045BC                     u13210:
  3431  0045BC  C00C  FFD9         	movff	strncmp@l,fsr2l
  3432  0045C0  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  3433  0045C4  50DF               	movf	indf2,w,c
  3434  0045C6  6E0B               	movwf	??_strncmp^0,c
  3435  0045C8  C00E  FFF6         	movff	strncmp@r,tblptrl
  3436  0045CC  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  3437  0045D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3438  0045D0  6AF8               	clrf	tblptru,c
  3439  0045D2                     	endif
  3440  0045D2                     	if	0	;tblptru may be non-zero
  3441  0045D2                     	endif
  3442  0045D2  0008               	tblrd		*
  3443  0045D4  50F5               	movf	tablat,w,c
  3444  0045D6  180B               	xorwf	??_strncmp^0,w,c
  3445  0045D8  B4D8               	btfsc	status,2,c
  3446  0045DA  EFF1  F022         	goto	u13221
  3447  0045DE  EFF3  F022         	goto	u13220
  3448  0045E2                     u13221:
  3449  0045E2  EFB3  F022         	goto	l11335
  3450  0045E6                     u13220:
  3451  0045E6                     l11345:
  3452  0045E6  C00C  FFD9         	movff	strncmp@l,fsr2l
  3453  0045EA  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  3454  0045EE  50DF               	movf	indf2,w,c
  3455  0045F0  6E0B               	movwf	??_strncmp^0,c
  3456  0045F2  C00E  FFF6         	movff	strncmp@r,tblptrl
  3457  0045F6  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  3458  0045FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3459  0045FA  6AF8               	clrf	tblptru,c
  3460  0045FC                     	endif
  3461  0045FC                     	if	0	;tblptru may be non-zero
  3462  0045FC                     	endif
  3463  0045FC  0008               	tblrd		*
  3464  0045FE  50F5               	movf	tablat,w,c
  3465  004600  5C0B               	subwf	??_strncmp^0,w,c
  3466  004602  6E05               	movwf	?_strncmp^0,c
  3467  004604  6A06               	clrf	(?_strncmp+1)^0,c
  3468  004606  A0D8               	btfss	status,0,c
  3469  004608  0606               	decf	(?_strncmp+1)^0,f,c
  3470  00460A                     l2707:
  3471  00460A  0012               	return		;funcret
  3472  00460C                     __end_of_strncmp:
  3473                           	callstack 0
  3474                           
  3475 ;; *************** function _efgtoa *****************
  3476 ;; Defined at:
  3477 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3480 ;;		 -> sprintf@f(11), 
  3481 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
  3482 ;;  c               1   69[COMRAM] unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  u               4   46[BANK0 ] unsigned char 
  3485 ;;  g               4   38[BANK0 ] unsigned char 
  3486 ;;  l               4   32[BANK0 ] unsigned char 
  3487 ;;  h               4   28[BANK0 ] unsigned char 
  3488 ;;  ou              4   14[BANK0 ] unsigned char 
  3489 ;;  n               2   44[BANK0 ] int 
  3490 ;;  e               2   42[BANK0 ] int 
  3491 ;;  i               2   36[BANK0 ] int 
  3492 ;;  w               2   24[BANK0 ] int 
  3493 ;;  p               2   22[BANK0 ] int 
  3494 ;;  sign            2   20[BANK0 ] int 
  3495 ;;  d               2   18[BANK0 ] int 
  3496 ;;  m               2   12[BANK0 ] int 
  3497 ;;  ne              2   10[BANK0 ] int 
  3498 ;;  pp              2    8[BANK0 ] int 
  3499 ;;  t               2    6[BANK0 ] int 
  3500 ;;  mode            1   27[BANK0 ] unsigned char 
  3501 ;;  nmode           1   26[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2   63[COMRAM] int 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3511 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Totals:        12      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;Total ram usage:       62 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 8
  3518 ;; This function calls:
  3519 ;;		___awdiv
  3520 ;;		___awmod
  3521 ;;		___fladd
  3522 ;;		___fldiv
  3523 ;;		___fleq
  3524 ;;		___flge
  3525 ;;		___flmul
  3526 ;;		___flneg
  3527 ;;		___flsub
  3528 ;;		___fltol
  3529 ;;		___fpclassifyf
  3530 ;;		_floorf
  3531 ;;		_isupper
  3532 ;;		_pad
  3533 ;;		_strcpy
  3534 ;;		_tolower
  3535 ;; This function is called by:
  3536 ;;		_vfpfcnvrt
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text10
  3541  001080                     __ptext10:
  3542                           	callstack 0
  3543  001080                     _efgtoa:
  3544                           	callstack 18
  3545  001080                     
  3546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3547  001080  0E00               	movlw	0
  3548  001082  0100               	movlb	0	; () banked
  3549  001084  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  3550  001086  0E00               	movlw	0
  3551  001088  6F94               	movwf	efgtoa@sign& (0+255),b
  3552  00108A                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3555  00108A  C042  F0A6         	movff	efgtoa@f,efgtoa@g
  3556  00108E  C043  F0A7         	movff	efgtoa@f+1,efgtoa@g+1
  3557  001092  C044  F0A8         	movff	efgtoa@f+2,efgtoa@g+2
  3558  001096  C045  F0A9         	movff	efgtoa@f+3,efgtoa@g+3
  3559  00109A                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3562  00109A  BFA9               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3563  00109C  EF54  F008         	goto	u12700
  3564  0010A0  EF52  F008         	goto	u12701
  3565  0010A4                     u12701:
  3566  0010A4  EF6A  F008         	goto	l11033
  3567  0010A8                     u12700:
  3568  0010A8                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3571  0010A8  0E00               	movlw	0
  3572  0010AA  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  3573  0010AC  0E01               	movlw	1
  3574  0010AE  6F94               	movwf	efgtoa@sign& (0+255),b
  3575  0010B0                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3578  0010B0  C0A6  F005         	movff	efgtoa@g,___flneg@f1
  3579  0010B4  C0A7  F006         	movff	efgtoa@g+1,___flneg@f1+1
  3580  0010B8  C0A8  F007         	movff	efgtoa@g+2,___flneg@f1+2
  3581  0010BC  C0A9  F008         	movff	efgtoa@g+3,___flneg@f1+3
  3582  0010C0  ECE9  F029         	call	___flneg	;wreg free
  3583  0010C4  C005  F0A6         	movff	?___flneg,efgtoa@g
  3584  0010C8  C006  F0A7         	movff	?___flneg+1,efgtoa@g+1
  3585  0010CC  C007  F0A8         	movff	?___flneg+2,efgtoa@g+2
  3586  0010D0  C008  F0A9         	movff	?___flneg+3,efgtoa@g+3
  3587  0010D4                     l11033:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3590  0010D4  0E00               	movlw	0
  3591  0010D6  0100               	movlb	0	; () banked
  3592  0010D8  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  3593  0010DA  0E00               	movlw	0
  3594  0010DC  6FAC               	movwf	efgtoa@n& (0+255),b
  3595  0010DE                     
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3598  0010DE  C0D1  F098         	movff	_width,efgtoa@w
  3599  0010E2  C0D2  F099         	movff	_width+1,efgtoa@w+1
  3600  0010E6                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3603  0010E6  5194               	movf	efgtoa@sign& (0+255),w,b
  3604  0010E8  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3605  0010EA  A4D8               	btfss	status,2,c
  3606  0010EC  EF7A  F008         	goto	u12711
  3607  0010F0  EF7C  F008         	goto	u12710
  3608  0010F4                     u12711:
  3609  0010F4  EF83  F008         	goto	l11041
  3610  0010F8                     u12710:
  3611  0010F8                     
  3612                           ; BSR set to: 0
  3613  0010F8  A474               	btfss	_flags@doprnt$F4927^0,2,c
  3614  0010FA  EF81  F008         	goto	u12721
  3615  0010FE  EF83  F008         	goto	u12720
  3616  001102                     u12721:
  3617  001102  EF9D  F008         	goto	l11053
  3618  001106                     u12720:
  3619  001106                     l11041:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3623  001106  5194               	movf	efgtoa@sign& (0+255),w,b
  3624  001108  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3625  00110A  A4D8               	btfss	status,2,c
  3626  00110C  EF8A  F008         	goto	u12731
  3627  001110  EF8C  F008         	goto	u12730
  3628  001114                     u12731:
  3629  001114  EF92  F008         	goto	l11045
  3630  001118                     u12730:
  3631  001118                     
  3632                           ; BSR set to: 0
  3633  001118  0E00               	movlw	0
  3634  00111A  6F81               	movwf	(_efgtoa$4970+1)& (0+255),b
  3635  00111C  0E2B               	movlw	43
  3636  00111E  6F80               	movwf	_efgtoa$4970& (0+255),b
  3637  001120  EF96  F008         	goto	l11047
  3638  001124                     l11045:
  3639                           
  3640                           ; BSR set to: 0
  3641  001124  0E00               	movlw	0
  3642  001126  6F81               	movwf	(_efgtoa$4970+1)& (0+255),b
  3643  001128  0E2D               	movlw	45
  3644  00112A  6F80               	movwf	_efgtoa$4970& (0+255),b
  3645  00112C                     l11047:
  3646                           
  3647                           ; BSR set to: 0
  3648  00112C  C080  F127         	movff	_efgtoa$4970,_dbuf
  3649  001130                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3652  001130  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3653  001132  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3654  001134                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3657  001134  0798               	decf	efgtoa@w& (0+255),f,b
  3658  001136  A0D8               	btfss	status,0,c
  3659  001138  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  3660  00113A                     l11053:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3664  00113A  C0A6  F005         	movff	efgtoa@g,___fpclassifyf@x
  3665  00113E  C0A7  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3666  001142  C0A8  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3667  001146  C0A9  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3668  00114A  EC28  F021         	call	___fpclassifyf	;wreg free
  3669  00114E  0405               	decf	?___fpclassifyf^0,w,c
  3670  001150  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3671  001152  A4D8               	btfss	status,2,c
  3672  001154  EFAE  F008         	goto	u12741
  3673  001158  EFB0  F008         	goto	u12740
  3674  00115C                     u12741:
  3675  00115C  EFFB  F008         	goto	l11071
  3676  001160                     u12740:
  3677  001160  0EBF               	movlw	191
  3678  001162  6E47               	movwf	??_efgtoa^0,c
  3679  001164  0EFF               	movlw	255
  3680  001166  6E48               	movwf	(??_efgtoa+1)^0,c
  3681  001168  5046               	movf	efgtoa@c^0,w,c
  3682  00116A  6E49               	movwf	(??_efgtoa+2)^0,c
  3683  00116C  6A4A               	clrf	(??_efgtoa+3)^0,c
  3684  00116E  5047               	movf	??_efgtoa^0,w,c
  3685  001170  2649               	addwf	(??_efgtoa+2)^0,f,c
  3686  001172  5048               	movf	(??_efgtoa+1)^0,w,c
  3687  001174  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3688  001176  504A               	movf	(??_efgtoa+3)^0,w,c
  3689  001178  E107               	bnz	u12751
  3690  00117A  0E1A               	movlw	26
  3691  00117C  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3692  00117E  B0D8               	btfsc	status,0,c
  3693  001180  EFC4  F008         	goto	u12751
  3694  001184  EFC6  F008         	goto	u12750
  3695  001188                     u12751:
  3696  001188  EFD5  F008         	goto	l11063
  3697  00118C                     u12750:
  3698  00118C                     
  3699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3700  00118C  0E27               	movlw	low _dbuf
  3701  00118E  0100               	movlb	0	; () banked
  3702  001190  25AC               	addwf	efgtoa@n& (0+255),w,b
  3703  001192  6E05               	movwf	strcpy@dest^0,c
  3704  001194  0E01               	movlw	high _dbuf
  3705  001196  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3706  001198  6E06               	movwf	(strcpy@dest+1)^0,c
  3707  00119A  0E5B               	movlw	low STR_22
  3708  00119C  6E07               	movwf	strcpy@src^0,c
  3709  00119E  0E10               	movlw	high STR_22
  3710  0011A0  6E08               	movwf	(strcpy@src+1)^0,c
  3711  0011A2  EC40  F028         	call	_strcpy	;wreg free
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3714  0011A6  EFE2  F008         	goto	l11065
  3715  0011AA                     l11063:
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3718  0011AA  0E27               	movlw	low _dbuf
  3719  0011AC  0100               	movlb	0	; () banked
  3720  0011AE  25AC               	addwf	efgtoa@n& (0+255),w,b
  3721  0011B0  6E05               	movwf	strcpy@dest^0,c
  3722  0011B2  0E01               	movlw	high _dbuf
  3723  0011B4  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3724  0011B6  6E06               	movwf	(strcpy@dest+1)^0,c
  3725  0011B8  0E63               	movlw	low STR_23
  3726  0011BA  6E07               	movwf	strcpy@src^0,c
  3727  0011BC  0E10               	movlw	high STR_23
  3728  0011BE  6E08               	movwf	(strcpy@src+1)^0,c
  3729  0011C0  EC40  F028         	call	_strcpy	;wreg free
  3730  0011C4                     l11065:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3733  0011C4  0100               	movlb	0	; () banked
  3734  0011C6  0EFD               	movlw	253
  3735  0011C8  2798               	addwf	efgtoa@w& (0+255),f,b
  3736  0011CA  0EFF               	movlw	255
  3737  0011CC  2399               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3738  0011CE                     l11067:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3741  0011CE  C040  F015         	movff	efgtoa@fp,pad@fp
  3742  0011D2  C041  F016         	movff	efgtoa@fp+1,pad@fp+1
  3743  0011D6  0E27               	movlw	low _dbuf
  3744  0011D8  6E17               	movwf	pad@buf^0,c
  3745  0011DA  0E01               	movlw	high _dbuf
  3746  0011DC  6E18               	movwf	(pad@buf+1)^0,c
  3747  0011DE  C098  F019         	movff	efgtoa@w,pad@p
  3748  0011E2  C099  F01A         	movff	efgtoa@w+1,pad@p+1
  3749  0011E6  ECCD  F023         	call	_pad	;wreg free
  3750  0011EA  C015  F040         	movff	?_pad,?_efgtoa
  3751  0011EE  C016  F041         	movff	?_pad+1,?_efgtoa+1
  3752  0011F2  EF47  F00E         	goto	l2538
  3753  0011F6                     l11071:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3756  0011F6  C0A6  F005         	movff	efgtoa@g,___fpclassifyf@x
  3757  0011FA  C0A7  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3758  0011FE  C0A8  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3759  001202  C0A9  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3760  001206  EC28  F021         	call	___fpclassifyf	;wreg free
  3761  00120A  5005               	movf	?___fpclassifyf^0,w,c
  3762  00120C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3763  00120E  A4D8               	btfss	status,2,c
  3764  001210  EF0C  F009         	goto	u12761
  3765  001214  EF0E  F009         	goto	u12760
  3766  001218                     u12761:
  3767  001218  EF42  F009         	goto	l11089
  3768  00121C                     u12760:
  3769  00121C  0EBF               	movlw	191
  3770  00121E  6E47               	movwf	??_efgtoa^0,c
  3771  001220  0EFF               	movlw	255
  3772  001222  6E48               	movwf	(??_efgtoa+1)^0,c
  3773  001224  5046               	movf	efgtoa@c^0,w,c
  3774  001226  6E49               	movwf	(??_efgtoa+2)^0,c
  3775  001228  6A4A               	clrf	(??_efgtoa+3)^0,c
  3776  00122A  5047               	movf	??_efgtoa^0,w,c
  3777  00122C  2649               	addwf	(??_efgtoa+2)^0,f,c
  3778  00122E  5048               	movf	(??_efgtoa+1)^0,w,c
  3779  001230  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3780  001232  504A               	movf	(??_efgtoa+3)^0,w,c
  3781  001234  E107               	bnz	u12771
  3782  001236  0E1A               	movlw	26
  3783  001238  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3784  00123A  B0D8               	btfsc	status,0,c
  3785  00123C  EF22  F009         	goto	u12771
  3786  001240  EF24  F009         	goto	u12770
  3787  001244                     u12771:
  3788  001244  EF33  F009         	goto	l11081
  3789  001248                     u12770:
  3790  001248                     
  3791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3792  001248  0E27               	movlw	low _dbuf
  3793  00124A  0100               	movlb	0	; () banked
  3794  00124C  25AC               	addwf	efgtoa@n& (0+255),w,b
  3795  00124E  6E05               	movwf	strcpy@dest^0,c
  3796  001250  0E01               	movlw	high _dbuf
  3797  001252  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3798  001254  6E06               	movwf	(strcpy@dest+1)^0,c
  3799  001256  0E5F               	movlw	low STR_26
  3800  001258  6E07               	movwf	strcpy@src^0,c
  3801  00125A  0E10               	movlw	high STR_26
  3802  00125C  6E08               	movwf	(strcpy@src+1)^0,c
  3803  00125E  EC40  F028         	call	_strcpy	;wreg free
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3806  001262  EFE2  F008         	goto	l11065
  3807  001266                     l11081:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3810  001266  0E27               	movlw	low _dbuf
  3811  001268  0100               	movlb	0	; () banked
  3812  00126A  25AC               	addwf	efgtoa@n& (0+255),w,b
  3813  00126C  6E05               	movwf	strcpy@dest^0,c
  3814  00126E  0E01               	movlw	high _dbuf
  3815  001270  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3816  001272  6E06               	movwf	(strcpy@dest+1)^0,c
  3817  001274  0E67               	movlw	low STR_27
  3818  001276  6E07               	movwf	strcpy@src^0,c
  3819  001278  0E10               	movlw	high STR_27
  3820  00127A  6E08               	movwf	(strcpy@src+1)^0,c
  3821  00127C  EC40  F028         	call	_strcpy	;wreg free
  3822  001280  EFE2  F008         	goto	l11065
  3823  001284                     l11089:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3826  001284  0E00               	movlw	0
  3827  001286  0100               	movlb	0	; () banked
  3828  001288  6FAE               	movwf	efgtoa@u& (0+255),b
  3829  00128A  0E00               	movlw	0
  3830  00128C  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3831  00128E  0E80               	movlw	128
  3832  001290  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3833  001292  0E3F               	movlw	63
  3834  001294  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3837  001296  0E00               	movlw	0
  3838  001298  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3839  00129A  0E00               	movlw	0
  3840  00129C  6FAA               	movwf	efgtoa@e& (0+255),b
  3841  00129E                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3844  00129E  C0A6  F005         	movff	efgtoa@g,___fleq@ff1
  3845  0012A2  C0A7  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  3846  0012A6  C0A8  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  3847  0012AA  C0A9  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  3848  0012AE  0E00               	movlw	0
  3849  0012B0  6E09               	movwf	___fleq@ff2^0,c
  3850  0012B2  0E00               	movlw	0
  3851  0012B4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  3852  0012B6  0E00               	movlw	0
  3853  0012B8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  3854  0012BA  0E00               	movlw	0
  3855  0012BC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  3856  0012BE  EC91  F025         	call	___fleq	;wreg free
  3857  0012C2  B0D8               	btfsc	status,0,c
  3858  0012C4  EF66  F009         	goto	u12781
  3859  0012C8  EF68  F009         	goto	u12780
  3860  0012CC                     u12781:
  3861  0012CC  EFEB  F009         	goto	l11107
  3862  0012D0                     u12780:
  3863  0012D0  EF87  F009         	goto	l11099
  3864  0012D4                     l11095:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3867  0012D4  C0AE  F005         	movff	efgtoa@u,___flmul@b
  3868  0012D8  C0AF  F006         	movff	efgtoa@u+1,___flmul@b+1
  3869  0012DC  C0B0  F007         	movff	efgtoa@u+2,___flmul@b+2
  3870  0012E0  C0B1  F008         	movff	efgtoa@u+3,___flmul@b+3
  3871  0012E4  0E00               	movlw	0
  3872  0012E6  6E09               	movwf	___flmul@a^0,c
  3873  0012E8  0E00               	movlw	0
  3874  0012EA  6E0A               	movwf	(___flmul@a+1)^0,c
  3875  0012EC  0E20               	movlw	32
  3876  0012EE  6E0B               	movwf	(___flmul@a+2)^0,c
  3877  0012F0  0E41               	movlw	65
  3878  0012F2  6E0C               	movwf	(___flmul@a+3)^0,c
  3879  0012F4  ECA8  F010         	call	___flmul	;wreg free
  3880  0012F8  C005  F0AE         	movff	?___flmul,efgtoa@u
  3881  0012FC  C006  F0AF         	movff	?___flmul+1,efgtoa@u+1
  3882  001300  C007  F0B0         	movff	?___flmul+2,efgtoa@u+2
  3883  001304  C008  F0B1         	movff	?___flmul+3,efgtoa@u+3
  3884  001308                     
  3885                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3886  001308  0100               	movlb	0	; () banked
  3887  00130A  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  3888  00130C  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3889  00130E                     l11099:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3892  00130E  C0A6  F01E         	movff	efgtoa@g,___flge@ff1
  3893  001312  C0A7  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3894  001316  C0A8  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3895  00131A  C0A9  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3896  00131E  0E00               	movlw	0
  3897  001320  6E09               	movwf	___flmul@a^0,c
  3898  001322  0E00               	movlw	0
  3899  001324  6E0A               	movwf	(___flmul@a+1)^0,c
  3900  001326  0E20               	movlw	32
  3901  001328  6E0B               	movwf	(___flmul@a+2)^0,c
  3902  00132A  0E41               	movlw	65
  3903  00132C  6E0C               	movwf	(___flmul@a+3)^0,c
  3904  00132E  C0AE  F005         	movff	efgtoa@u,___flmul@b
  3905  001332  C0AF  F006         	movff	efgtoa@u+1,___flmul@b+1
  3906  001336  C0B0  F007         	movff	efgtoa@u+2,___flmul@b+2
  3907  00133A  C0B1  F008         	movff	efgtoa@u+3,___flmul@b+3
  3908  00133E  ECA8  F010         	call	___flmul	;wreg free
  3909  001342  C005  F022         	movff	?___flmul,___flge@ff2
  3910  001346  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3911  00134A  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3912  00134E  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3913  001352  EC24  F020         	call	___flge	;wreg free
  3914  001356  B0D8               	btfsc	status,0,c
  3915  001358  EFB0  F009         	goto	u12791
  3916  00135C  EFB2  F009         	goto	u12790
  3917  001360                     u12791:
  3918  001360  EF6A  F009         	goto	l11095
  3919  001364                     u12790:
  3920  001364  EFD2  F009         	goto	l11105
  3921  001368                     l11101:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3924  001368  C0AE  F013         	movff	efgtoa@u,___fldiv@b
  3925  00136C  C0AF  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3926  001370  C0B0  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3927  001374  C0B1  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3928  001378  0E00               	movlw	0
  3929  00137A  6E17               	movwf	___fldiv@a^0,c
  3930  00137C  0E00               	movlw	0
  3931  00137E  6E18               	movwf	(___fldiv@a+1)^0,c
  3932  001380  0E20               	movlw	32
  3933  001382  6E19               	movwf	(___fldiv@a+2)^0,c
  3934  001384  0E41               	movlw	65
  3935  001386  6E1A               	movwf	(___fldiv@a+3)^0,c
  3936  001388  EC91  F016         	call	___fldiv	;wreg free
  3937  00138C  C013  F0AE         	movff	?___fldiv,efgtoa@u
  3938  001390  C014  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3939  001394  C015  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3940  001398  C016  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3941  00139C                     
  3942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3943  00139C  0100               	movlb	0	; () banked
  3944  00139E  07AA               	decf	efgtoa@e& (0+255),f,b
  3945  0013A0  A0D8               	btfss	status,0,c
  3946  0013A2  07AB               	decf	(efgtoa@e+1)& (0+255),f,b
  3947  0013A4                     l11105:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3950  0013A4  C0A6  F01E         	movff	efgtoa@g,___flge@ff1
  3951  0013A8  C0A7  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3952  0013AC  C0A8  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3953  0013B0  C0A9  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3954  0013B4  C0AE  F022         	movff	efgtoa@u,___flge@ff2
  3955  0013B8  C0AF  F023         	movff	efgtoa@u+1,___flge@ff2+1
  3956  0013BC  C0B0  F024         	movff	efgtoa@u+2,___flge@ff2+2
  3957  0013C0  C0B1  F025         	movff	efgtoa@u+3,___flge@ff2+3
  3958  0013C4  EC24  F020         	call	___flge	;wreg free
  3959  0013C8  A0D8               	btfss	status,0,c
  3960  0013CA  EFE9  F009         	goto	u12801
  3961  0013CE  EFEB  F009         	goto	u12800
  3962  0013D2                     u12801:
  3963  0013D2  EFB4  F009         	goto	l11101
  3964  0013D6                     u12800:
  3965  0013D6                     l11107:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3968  0013D6  C046  F00B         	movff	efgtoa@c,tolower@c
  3969  0013DA  6A0C               	clrf	(tolower@c+1)^0,c
  3970  0013DC  EC0A  F029         	call	_tolower	;wreg free
  3971  0013E0  500B               	movf	?_tolower^0,w,c
  3972  0013E2  0100               	movlb	0	; () banked
  3973  0013E4  6F9B               	movwf	efgtoa@mode& (0+255),b
  3974  0013E6                     
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3977  0013E6  C09B  F09A         	movff	efgtoa@mode,efgtoa@nmode
  3978  0013EA                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3981  0013EA  0E67               	movlw	103
  3982  0013EC  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3983  0013EE  A4D8               	btfss	status,2,c
  3984  0013F0  EFFC  F009         	goto	u12811
  3985  0013F4  EFFE  F009         	goto	u12810
  3986  0013F8                     u12811:
  3987  0013F8  EF24  F00A         	goto	l11121
  3988  0013FC                     u12810:
  3989  0013FC                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3992  0013FC  5072               	movf	_prec^0,w,c
  3993  0013FE  1073               	iorwf	(_prec+1)^0,w,c
  3994  001400  A4D8               	btfss	status,2,c
  3995  001402  EF05  F00A         	goto	u12821
  3996  001406  EF07  F00A         	goto	u12820
  3997  00140A                     u12821:
  3998  00140A  EF0B  F00A         	goto	l11117
  3999  00140E                     u12820:
  4000  00140E                     
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4003  00140E  0E00               	movlw	0
  4004  001410  6E73               	movwf	(_prec+1)^0,c
  4005  001412  0E01               	movlw	1
  4006  001414  6E72               	movwf	_prec^0,c
  4007  001416                     l11117:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4011  001416  BE73               	btfsc	(_prec+1)^0,7,c
  4012  001418  EF18  F00A         	goto	u12830
  4013  00141C  5073               	movf	(_prec+1)^0,w,c
  4014  00141E  E106               	bnz	u12831
  4015  001420  0472               	decf	_prec^0,w,c
  4016  001422  B0D8               	btfsc	status,0,c
  4017  001424  EF16  F00A         	goto	u12831
  4018  001428  EF18  F00A         	goto	u12830
  4019  00142C                     u12831:
  4020  00142C  EF1E  F00A         	goto	l2554
  4021  001430                     u12830:
  4022  001430                     l11119:
  4023                           
  4024                           ; BSR set to: 0
  4025  001430  0E00               	movlw	0
  4026  001432  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  4027  001434  0E06               	movlw	6
  4028  001436  6F96               	movwf	efgtoa@p& (0+255),b
  4029  001438  EF2D  F00A         	goto	l11127
  4030  00143C                     l2554:
  4031                           
  4032                           ; BSR set to: 0
  4033  00143C  C072  F096         	movff	_prec,efgtoa@p
  4034  001440  C073  F097         	movff	_prec+1,efgtoa@p+1
  4035  001444  EF2D  F00A         	goto	l11127
  4036  001448                     l11121:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4040  001448  BE73               	btfsc	(_prec+1)^0,7,c
  4041  00144A  EF29  F00A         	goto	u12841
  4042  00144E  EF2B  F00A         	goto	u12840
  4043  001452                     u12841:
  4044  001452  EF18  F00A         	goto	l11119
  4045  001456                     u12840:
  4046  001456  EF1E  F00A         	goto	l2554
  4047  00145A                     l11127:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4051  00145A  0E67               	movlw	103
  4052  00145C  199B               	xorwf	efgtoa@mode& (0+255),w,b
  4053  00145E  A4D8               	btfss	status,2,c
  4054  001460  EF34  F00A         	goto	u12851
  4055  001464  EF36  F00A         	goto	u12850
  4056  001468                     u12851:
  4057  001468  EF65  F00A         	goto	l11137
  4058  00146C                     u12850:
  4059  00146C                     
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4062  00146C  AFAB               	btfss	(efgtoa@e+1)& (0+255),7,b
  4063  00146E  EF44  F00A         	goto	u12860
  4064  001472  0EFC               	movlw	252
  4065  001474  5DAA               	subwf	efgtoa@e& (0+255),w,b
  4066  001476  0EFF               	movlw	255
  4067  001478  59AB               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4068  00147A  A0D8               	btfss	status,0,c
  4069  00147C  EF42  F00A         	goto	u12861
  4070  001480  EF44  F00A         	goto	u12860
  4071  001484                     u12861:
  4072  001484  EF63  F00A         	goto	l11135
  4073  001488                     u12860:
  4074  001488                     
  4075                           ; BSR set to: 0
  4076  001488  0EFF               	movlw	255
  4077  00148A  6E47               	movwf	??_efgtoa^0,c
  4078  00148C  0EFF               	movlw	255
  4079  00148E  6E48               	movwf	(??_efgtoa+1)^0,c
  4080  001490  C096  F049         	movff	efgtoa@p,??_efgtoa+2
  4081  001494  C097  F04A         	movff	efgtoa@p+1,??_efgtoa+3
  4082  001498  5047               	movf	??_efgtoa^0,w,c
  4083  00149A  2649               	addwf	(??_efgtoa+2)^0,f,c
  4084  00149C  5048               	movf	(??_efgtoa+1)^0,w,c
  4085  00149E  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4086  0014A0  51AA               	movf	efgtoa@e& (0+255),w,b
  4087  0014A2  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4088  0014A4  504A               	movf	(??_efgtoa+3)^0,w,c
  4089  0014A6  0A80               	xorlw	128
  4090  0014A8  6E4B               	movwf	(??_efgtoa+4)^0,c
  4091  0014AA  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  4092  0014AC  0A80               	xorlw	128
  4093  0014AE  584B               	subwfb	(??_efgtoa+4)^0,w,c
  4094  0014B0  A0D8               	btfss	status,0,c
  4095  0014B2  EF5D  F00A         	goto	u12871
  4096  0014B6  EF5F  F00A         	goto	u12870
  4097  0014BA                     u12871:
  4098  0014BA  EF63  F00A         	goto	l11135
  4099  0014BE                     u12870:
  4100  0014BE                     
  4101                           ; BSR set to: 0
  4102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4103  0014BE  0E66               	movlw	102
  4104  0014C0  6F9A               	movwf	efgtoa@nmode& (0+255),b
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4107  0014C2  EF65  F00A         	goto	l11137
  4108  0014C6                     l11135:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4112  0014C6  0E65               	movlw	101
  4113  0014C8  6F9A               	movwf	efgtoa@nmode& (0+255),b
  4114  0014CA                     l11137:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4118  0014CA  C096  F08C         	movff	efgtoa@p,efgtoa@m
  4119  0014CE  C097  F08D         	movff	efgtoa@p+1,efgtoa@m+1
  4120  0014D2                     
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4123  0014D2  0E67               	movlw	103
  4124  0014D4  199B               	xorwf	efgtoa@mode& (0+255),w,b
  4125  0014D6  A4D8               	btfss	status,2,c
  4126  0014D8  EF70  F00A         	goto	u12881
  4127  0014DC  EF72  F00A         	goto	u12880
  4128  0014E0                     u12881:
  4129  0014E0  EF82  F00A         	goto	l11145
  4130  0014E4                     u12880:
  4131  0014E4                     
  4132                           ; BSR set to: 0
  4133  0014E4  0E66               	movlw	102
  4134  0014E6  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4135  0014E8  A4D8               	btfss	status,2,c
  4136  0014EA  EF79  F00A         	goto	u12891
  4137  0014EE  EF7B  F00A         	goto	u12890
  4138  0014F2                     u12891:
  4139  0014F2  EF84  F00A         	goto	l11147
  4140  0014F6                     u12890:
  4141  0014F6                     
  4142                           ; BSR set to: 0
  4143  0014F6  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4144  0014F8  EF82  F00A         	goto	u12900
  4145  0014FC  EF80  F00A         	goto	u12901
  4146  001500                     u12901:
  4147  001500  EF84  F00A         	goto	l11147
  4148  001504                     u12900:
  4149  001504                     l11145:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4153  001504  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  4154  001506  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  4155  001508                     l11147:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4159  001508  0E66               	movlw	102
  4160  00150A  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4161  00150C  A4D8               	btfss	status,2,c
  4162  00150E  EF8B  F00A         	goto	u12911
  4163  001512  EF8D  F00A         	goto	u12910
  4164  001516                     u12911:
  4165  001516  EFAD  F00A         	goto	l11157
  4166  00151A                     u12910:
  4167  00151A                     
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4170  00151A  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4171  00151C  EF94  F00A         	goto	u12920
  4172  001520  EF92  F00A         	goto	u12921
  4173  001524                     u12921:
  4174  001524  EFA0  F00A         	goto	l11153
  4175  001528                     u12920:
  4176  001528                     
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4179  001528  0E00               	movlw	0
  4180  00152A  6FAE               	movwf	efgtoa@u& (0+255),b
  4181  00152C  0E00               	movlw	0
  4182  00152E  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  4183  001530  0E80               	movlw	128
  4184  001532  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  4185  001534  0E3F               	movlw	63
  4186  001536  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4189  001538  0E00               	movlw	0
  4190  00153A  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  4191  00153C  0E00               	movlw	0
  4192  00153E  6FAA               	movwf	efgtoa@e& (0+255),b
  4193  001540                     l11153:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4197  001540  0E67               	movlw	103
  4198  001542  199B               	xorwf	efgtoa@mode& (0+255),w,b
  4199  001544  B4D8               	btfsc	status,2,c
  4200  001546  EFA7  F00A         	goto	u12931
  4201  00154A  EFA9  F00A         	goto	u12930
  4202  00154E                     u12931:
  4203  00154E  EFAD  F00A         	goto	l11157
  4204  001552                     u12930:
  4205  001552                     
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4208  001552  51AA               	movf	efgtoa@e& (0+255),w,b
  4209  001554  278C               	addwf	efgtoa@m& (0+255),f,b
  4210  001556  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  4211  001558  238D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4212  00155A                     l11157:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4216  00155A  0E00               	movlw	0
  4217  00155C  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  4218  00155E  0E00               	movlw	0
  4219  001560  6FA4               	movwf	efgtoa@i& (0+255),b
  4220  001562                     
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4223  001562  C0A6  F09C         	movff	efgtoa@g,efgtoa@h
  4224  001566  C0A7  F09D         	movff	efgtoa@g+1,efgtoa@h+1
  4225  00156A  C0A8  F09E         	movff	efgtoa@g+2,efgtoa@h+2
  4226  00156E  C0A9  F09F         	movff	efgtoa@g+3,efgtoa@h+3
  4227  001572                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4230  001572  C0AE  F08E         	movff	efgtoa@u,efgtoa@ou
  4231  001576  C0AF  F08F         	movff	efgtoa@u+1,efgtoa@ou+1
  4232  00157A  C0B0  F090         	movff	efgtoa@u+2,efgtoa@ou+2
  4233  00157E  C0B1  F091         	movff	efgtoa@u+3,efgtoa@ou+3
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4236  001582  EF3E  F00B         	goto	l11171
  4237  001586                     l11163:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4241  001586  C09C  F013         	movff	efgtoa@h,___fldiv@b
  4242  00158A  C09D  F014         	movff	efgtoa@h+1,___fldiv@b+1
  4243  00158E  C09E  F015         	movff	efgtoa@h+2,___fldiv@b+2
  4244  001592  C09F  F016         	movff	efgtoa@h+3,___fldiv@b+3
  4245  001596  C0AE  F017         	movff	efgtoa@u,___fldiv@a
  4246  00159A  C0AF  F018         	movff	efgtoa@u+1,___fldiv@a+1
  4247  00159E  C0B0  F019         	movff	efgtoa@u+2,___fldiv@a+2
  4248  0015A2  C0B1  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  4249  0015A6  EC91  F016         	call	___fldiv	;wreg free
  4250  0015AA  C013  F02C         	movff	?___fldiv,floorf@x
  4251  0015AE  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  4252  0015B2  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  4253  0015B6  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  4254  0015BA  ECCD  F019         	call	_floorf	;wreg free
  4255  0015BE  C02C  F0A0         	movff	?_floorf,efgtoa@l
  4256  0015C2  C02D  F0A1         	movff	?_floorf+1,efgtoa@l+1
  4257  0015C6  C02E  F0A2         	movff	?_floorf+2,efgtoa@l+2
  4258  0015CA  C02F  F0A3         	movff	?_floorf+3,efgtoa@l+3
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4261  0015CE  C0A0  F005         	movff	efgtoa@l,___fltol@f1
  4262  0015D2  C0A1  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4263  0015D6  C0A2  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4264  0015DA  C0A3  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4265  0015DE  ECA1  F01F         	call	___fltol	;wreg free
  4266  0015E2  C005  F092         	movff	?___fltol,efgtoa@d
  4267  0015E6  C006  F093         	movff	?___fltol+1,efgtoa@d+1
  4268  0015EA                     
  4269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4270  0015EA  C09C  F01E         	movff	efgtoa@h,___flsub@b
  4271  0015EE  C09D  F01F         	movff	efgtoa@h+1,___flsub@b+1
  4272  0015F2  C09E  F020         	movff	efgtoa@h+2,___flsub@b+2
  4273  0015F6  C09F  F021         	movff	efgtoa@h+3,___flsub@b+3
  4274  0015FA  C0AE  F009         	movff	efgtoa@u,___flmul@a
  4275  0015FE  C0AF  F00A         	movff	efgtoa@u+1,___flmul@a+1
  4276  001602  C0B0  F00B         	movff	efgtoa@u+2,___flmul@a+2
  4277  001606  C0B1  F00C         	movff	efgtoa@u+3,___flmul@a+3
  4278  00160A  C0A0  F005         	movff	efgtoa@l,___flmul@b
  4279  00160E  C0A1  F006         	movff	efgtoa@l+1,___flmul@b+1
  4280  001612  C0A2  F007         	movff	efgtoa@l+2,___flmul@b+2
  4281  001616  C0A3  F008         	movff	efgtoa@l+3,___flmul@b+3
  4282  00161A  ECA8  F010         	call	___flmul	;wreg free
  4283  00161E  C005  F022         	movff	?___flmul,___flsub@a
  4284  001622  C006  F023         	movff	?___flmul+1,___flsub@a+1
  4285  001626  C007  F024         	movff	?___flmul+2,___flsub@a+2
  4286  00162A  C008  F025         	movff	?___flmul+3,___flsub@a+3
  4287  00162E  EC2D  F029         	call	___flsub	;wreg free
  4288  001632  C01E  F09C         	movff	?___flsub,efgtoa@h
  4289  001636  C01F  F09D         	movff	?___flsub+1,efgtoa@h+1
  4290  00163A  C020  F09E         	movff	?___flsub+2,efgtoa@h+2
  4291  00163E  C021  F09F         	movff	?___flsub+3,efgtoa@h+3
  4292  001642                     
  4293                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4294  001642  C0AE  F013         	movff	efgtoa@u,___fldiv@b
  4295  001646  C0AF  F014         	movff	efgtoa@u+1,___fldiv@b+1
  4296  00164A  C0B0  F015         	movff	efgtoa@u+2,___fldiv@b+2
  4297  00164E  C0B1  F016         	movff	efgtoa@u+3,___fldiv@b+3
  4298  001652  0E00               	movlw	0
  4299  001654  6E17               	movwf	___fldiv@a^0,c
  4300  001656  0E00               	movlw	0
  4301  001658  6E18               	movwf	(___fldiv@a+1)^0,c
  4302  00165A  0E20               	movlw	32
  4303  00165C  6E19               	movwf	(___fldiv@a+2)^0,c
  4304  00165E  0E41               	movlw	65
  4305  001660  6E1A               	movwf	(___fldiv@a+3)^0,c
  4306  001662  EC91  F016         	call	___fldiv	;wreg free
  4307  001666  C013  F0AE         	movff	?___fldiv,efgtoa@u
  4308  00166A  C014  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  4309  00166E  C015  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  4310  001672  C016  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  4311  001676                     
  4312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4313  001676  0100               	movlb	0	; () banked
  4314  001678  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  4315  00167A  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  4316  00167C                     l11171:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4320  00167C  518C               	movf	efgtoa@m& (0+255),w,b
  4321  00167E  5DA4               	subwf	efgtoa@i& (0+255),w,b
  4322  001680  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  4323  001682  0A80               	xorlw	128
  4324  001684  6E47               	movwf	??_efgtoa^0,c
  4325  001686  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  4326  001688  0A80               	xorlw	128
  4327  00168A  5847               	subwfb	??_efgtoa^0,w,c
  4328  00168C  A0D8               	btfss	status,0,c
  4329  00168E  EF4B  F00B         	goto	u12941
  4330  001692  EF4D  F00B         	goto	u12940
  4331  001696                     u12941:
  4332  001696  EFC3  F00A         	goto	l11163
  4333  00169A                     u12940:
  4334  00169A                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4337  00169A  C0AE  F005         	movff	efgtoa@u,___flmul@b
  4338  00169E  C0AF  F006         	movff	efgtoa@u+1,___flmul@b+1
  4339  0016A2  C0B0  F007         	movff	efgtoa@u+2,___flmul@b+2
  4340  0016A6  C0B1  F008         	movff	efgtoa@u+3,___flmul@b+3
  4341  0016AA  0E00               	movlw	0
  4342  0016AC  6E09               	movwf	___flmul@a^0,c
  4343  0016AE  0E00               	movlw	0
  4344  0016B0  6E0A               	movwf	(___flmul@a+1)^0,c
  4345  0016B2  0EA0               	movlw	160
  4346  0016B4  6E0B               	movwf	(___flmul@a+2)^0,c
  4347  0016B6  0E40               	movlw	64
  4348  0016B8  6E0C               	movwf	(___flmul@a+3)^0,c
  4349  0016BA  ECA8  F010         	call	___flmul	;wreg free
  4350  0016BE  C005  F0A0         	movff	?___flmul,efgtoa@l
  4351  0016C2  C006  F0A1         	movff	?___flmul+1,efgtoa@l+1
  4352  0016C6  C007  F0A2         	movff	?___flmul+2,efgtoa@l+2
  4353  0016CA  C008  F0A3         	movff	?___flmul+3,efgtoa@l+3
  4354  0016CE                     
  4355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4356  0016CE  C09C  F01E         	movff	efgtoa@h,___flge@ff1
  4357  0016D2  C09D  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  4358  0016D6  C09E  F020         	movff	efgtoa@h+2,___flge@ff1+2
  4359  0016DA  C09F  F021         	movff	efgtoa@h+3,___flge@ff1+3
  4360  0016DE  C0A0  F022         	movff	efgtoa@l,___flge@ff2
  4361  0016E2  C0A1  F023         	movff	efgtoa@l+1,___flge@ff2+1
  4362  0016E6  C0A2  F024         	movff	efgtoa@l+2,___flge@ff2+2
  4363  0016EA  C0A3  F025         	movff	efgtoa@l+3,___flge@ff2+3
  4364  0016EE  EC24  F020         	call	___flge	;wreg free
  4365  0016F2  B0D8               	btfsc	status,0,c
  4366  0016F4  EF7E  F00B         	goto	u12951
  4367  0016F8  EF80  F00B         	goto	u12950
  4368  0016FC                     u12951:
  4369  0016FC  EF8B  F00B         	goto	l11179
  4370  001700                     u12950:
  4371  001700                     
  4372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4373  001700  0E00               	movlw	0
  4374  001702  0100               	movlb	0	; () banked
  4375  001704  6FA0               	movwf	efgtoa@l& (0+255),b
  4376  001706  0E00               	movlw	0
  4377  001708  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  4378  00170A  0E00               	movlw	0
  4379  00170C  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  4380  00170E  0E00               	movlw	0
  4381  001710  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4384  001712  EFB4  F00B         	goto	l11185
  4385  001716                     l11179:
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4388  001716  C09C  F005         	movff	efgtoa@h,___fleq@ff1
  4389  00171A  C09D  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  4390  00171E  C09E  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  4391  001722  C09F  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  4392  001726  C0A0  F009         	movff	efgtoa@l,___fleq@ff2
  4393  00172A  C0A1  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  4394  00172E  C0A2  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  4395  001732  C0A3  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  4396  001736  EC91  F025         	call	___fleq	;wreg free
  4397  00173A  A0D8               	btfss	status,0,c
  4398  00173C  EFA2  F00B         	goto	u12961
  4399  001740  EFA4  F00B         	goto	u12960
  4400  001744                     u12961:
  4401  001744  EFB4  F00B         	goto	l11185
  4402  001748                     u12960:
  4403  001748  0100               	movlb	0	; () banked
  4404  00174A  B192               	btfsc	efgtoa@d& (0+255),0,b
  4405  00174C  EFAA  F00B         	goto	u12971
  4406  001750  EFAC  F00B         	goto	u12970
  4407  001754                     u12971:
  4408  001754  EFB4  F00B         	goto	l11185
  4409  001758                     u12970:
  4410  001758                     
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4413  001758  0E00               	movlw	0
  4414  00175A  6FA0               	movwf	efgtoa@l& (0+255),b
  4415  00175C  0E00               	movlw	0
  4416  00175E  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  4417  001760  0E00               	movlw	0
  4418  001762  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  4419  001764  0E00               	movlw	0
  4420  001766  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  4421  001768                     l11185:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4424  001768  C0A6  F005         	movff	efgtoa@g,___fladd@b
  4425  00176C  C0A7  F006         	movff	efgtoa@g+1,___fladd@b+1
  4426  001770  C0A8  F007         	movff	efgtoa@g+2,___fladd@b+2
  4427  001774  C0A9  F008         	movff	efgtoa@g+3,___fladd@b+3
  4428  001778  C0A0  F009         	movff	efgtoa@l,___fladd@a
  4429  00177C  C0A1  F00A         	movff	efgtoa@l+1,___fladd@a+1
  4430  001780  C0A2  F00B         	movff	efgtoa@l+2,___fladd@a+2
  4431  001784  C0A3  F00C         	movff	efgtoa@l+3,___fladd@a+3
  4432  001788  EC48  F00E         	call	___fladd	;wreg free
  4433  00178C  C005  F09C         	movff	?___fladd,efgtoa@h
  4434  001790  C006  F09D         	movff	?___fladd+1,efgtoa@h+1
  4435  001794  C007  F09E         	movff	?___fladd+2,efgtoa@h+2
  4436  001798  C008  F09F         	movff	?___fladd+3,efgtoa@h+3
  4437  00179C                     
  4438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4439  00179C  C09C  F01E         	movff	efgtoa@h,___flge@ff1
  4440  0017A0  C09D  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  4441  0017A4  C09E  F020         	movff	efgtoa@h+2,___flge@ff1+2
  4442  0017A8  C09F  F021         	movff	efgtoa@h+3,___flge@ff1+3
  4443  0017AC  0E00               	movlw	0
  4444  0017AE  6E09               	movwf	___flmul@a^0,c
  4445  0017B0  0E00               	movlw	0
  4446  0017B2  6E0A               	movwf	(___flmul@a+1)^0,c
  4447  0017B4  0E20               	movlw	32
  4448  0017B6  6E0B               	movwf	(___flmul@a+2)^0,c
  4449  0017B8  0E41               	movlw	65
  4450  0017BA  6E0C               	movwf	(___flmul@a+3)^0,c
  4451  0017BC  C08E  F005         	movff	efgtoa@ou,___flmul@b
  4452  0017C0  C08F  F006         	movff	efgtoa@ou+1,___flmul@b+1
  4453  0017C4  C090  F007         	movff	efgtoa@ou+2,___flmul@b+2
  4454  0017C8  C091  F008         	movff	efgtoa@ou+3,___flmul@b+3
  4455  0017CC  ECA8  F010         	call	___flmul	;wreg free
  4456  0017D0  C005  F022         	movff	?___flmul,___flge@ff2
  4457  0017D4  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  4458  0017D8  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  4459  0017DC  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  4460  0017E0  EC24  F020         	call	___flge	;wreg free
  4461  0017E4  A0D8               	btfss	status,0,c
  4462  0017E6  EFF7  F00B         	goto	u12981
  4463  0017EA  EFF9  F00B         	goto	u12980
  4464  0017EE                     u12981:
  4465  0017EE  EF22  F00C         	goto	l11197
  4466  0017F2                     u12980:
  4467  0017F2                     
  4468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4469  0017F2  0100               	movlb	0	; () banked
  4470  0017F4  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  4471  0017F6  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  4472  0017F8                     
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4475  0017F8  C08E  F005         	movff	efgtoa@ou,___flmul@b
  4476  0017FC  C08F  F006         	movff	efgtoa@ou+1,___flmul@b+1
  4477  001800  C090  F007         	movff	efgtoa@ou+2,___flmul@b+2
  4478  001804  C091  F008         	movff	efgtoa@ou+3,___flmul@b+3
  4479  001808  0E00               	movlw	0
  4480  00180A  6E09               	movwf	___flmul@a^0,c
  4481  00180C  0E00               	movlw	0
  4482  00180E  6E0A               	movwf	(___flmul@a+1)^0,c
  4483  001810  0E20               	movlw	32
  4484  001812  6E0B               	movwf	(___flmul@a+2)^0,c
  4485  001814  0E41               	movlw	65
  4486  001816  6E0C               	movwf	(___flmul@a+3)^0,c
  4487  001818  ECA8  F010         	call	___flmul	;wreg free
  4488  00181C  C005  F08E         	movff	?___flmul,efgtoa@ou
  4489  001820  C006  F08F         	movff	?___flmul+1,efgtoa@ou+1
  4490  001824  C007  F090         	movff	?___flmul+2,efgtoa@ou+2
  4491  001828  C008  F091         	movff	?___flmul+3,efgtoa@ou+3
  4492  00182C                     
  4493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4494  00182C  0E66               	movlw	102
  4495  00182E  0100               	movlb	0	; () banked
  4496  001830  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4497  001832  A4D8               	btfss	status,2,c
  4498  001834  EF1E  F00C         	goto	u12991
  4499  001838  EF20  F00C         	goto	u12990
  4500  00183C                     u12991:
  4501  00183C  EF22  F00C         	goto	l11197
  4502  001840                     u12990:
  4503  001840                     
  4504                           ; BSR set to: 0
  4505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4506  001840  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  4507  001842  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  4508  001844                     l11197:
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4511  001844  C08E  F0AE         	movff	efgtoa@ou,efgtoa@u
  4512  001848  C08F  F0AF         	movff	efgtoa@ou+1,efgtoa@u+1
  4513  00184C  C090  F0B0         	movff	efgtoa@ou+2,efgtoa@u+2
  4514  001850  C091  F0B1         	movff	efgtoa@ou+3,efgtoa@u+3
  4515  001854                     
  4516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4517  001854  0E65               	movlw	101
  4518  001856  0100               	movlb	0	; () banked
  4519  001858  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4520  00185A  B4D8               	btfsc	status,2,c
  4521  00185C  EF32  F00C         	goto	u13001
  4522  001860  EF34  F00C         	goto	u13000
  4523  001864                     u13001:
  4524  001864  EF3A  F00C         	goto	l11203
  4525  001868                     u13000:
  4526  001868                     
  4527                           ; BSR set to: 0
  4528  001868  C0AA  F08A         	movff	efgtoa@e,efgtoa@ne
  4529  00186C  C0AB  F08B         	movff	efgtoa@e+1,efgtoa@ne+1
  4530  001870  EF3E  F00C         	goto	l2582
  4531  001874                     l11203:
  4532                           
  4533                           ; BSR set to: 0
  4534  001874  0E00               	movlw	0
  4535  001876  6F8B               	movwf	(efgtoa@ne+1)& (0+255),b
  4536  001878  0E00               	movlw	0
  4537  00187A  6F8A               	movwf	efgtoa@ne& (0+255),b
  4538  00187C                     l2582:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4542  00187C  0E00               	movlw	0
  4543  00187E  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4544  001880  0E00               	movlw	0
  4545  001882  6F88               	movwf	efgtoa@pp& (0+255),b
  4546                           
  4547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4548  001884  0E00               	movlw	0
  4549  001886  6F87               	movwf	(efgtoa@t+1)& (0+255),b
  4550  001888  0E00               	movlw	0
  4551  00188A  6F86               	movwf	efgtoa@t& (0+255),b
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4554  00188C  0E00               	movlw	0
  4555  00188E  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  4556  001890  0E00               	movlw	0
  4557  001892  6FA4               	movwf	efgtoa@i& (0+255),b
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4560  001894  EF3A  F00D         	goto	l11253
  4561  001898                     l11205:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4565  001898  C09C  F013         	movff	efgtoa@h,___fldiv@b
  4566  00189C  C09D  F014         	movff	efgtoa@h+1,___fldiv@b+1
  4567  0018A0  C09E  F015         	movff	efgtoa@h+2,___fldiv@b+2
  4568  0018A4  C09F  F016         	movff	efgtoa@h+3,___fldiv@b+3
  4569  0018A8  C0AE  F017         	movff	efgtoa@u,___fldiv@a
  4570  0018AC  C0AF  F018         	movff	efgtoa@u+1,___fldiv@a+1
  4571  0018B0  C0B0  F019         	movff	efgtoa@u+2,___fldiv@a+2
  4572  0018B4  C0B1  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  4573  0018B8  EC91  F016         	call	___fldiv	;wreg free
  4574  0018BC  C013  F02C         	movff	?___fldiv,floorf@x
  4575  0018C0  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  4576  0018C4  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  4577  0018C8  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  4578  0018CC  ECCD  F019         	call	_floorf	;wreg free
  4579  0018D0  C02C  F0A0         	movff	?_floorf,efgtoa@l
  4580  0018D4  C02D  F0A1         	movff	?_floorf+1,efgtoa@l+1
  4581  0018D8  C02E  F0A2         	movff	?_floorf+2,efgtoa@l+2
  4582  0018DC  C02F  F0A3         	movff	?_floorf+3,efgtoa@l+3
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4585  0018E0  C0A0  F005         	movff	efgtoa@l,___fltol@f1
  4586  0018E4  C0A1  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4587  0018E8  C0A2  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4588  0018EC  C0A3  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4589  0018F0  ECA1  F01F         	call	___fltol	;wreg free
  4590  0018F4  C005  F092         	movff	?___fltol,efgtoa@d
  4591  0018F8  C006  F093         	movff	?___fltol+1,efgtoa@d+1
  4592  0018FC                     
  4593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4594  0018FC  B874               	btfsc	_flags@doprnt$F4927^0,4,c
  4595  0018FE  EF83  F00C         	goto	u13011
  4596  001902  EF85  F00C         	goto	u13010
  4597  001906                     u13011:
  4598  001906  EFA3  F00C         	goto	l11217
  4599  00190A                     u13010:
  4600  00190A  0100               	movlb	0	; () banked
  4601  00190C  5192               	movf	efgtoa@d& (0+255),w,b
  4602  00190E  1193               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4603  001910  A4D8               	btfss	status,2,c
  4604  001912  EF8D  F00C         	goto	u13021
  4605  001916  EF8F  F00C         	goto	u13020
  4606  00191A                     u13021:
  4607  00191A  EFA3  F00C         	goto	l11217
  4608  00191E                     u13020:
  4609  00191E                     
  4610                           ; BSR set to: 0
  4611  00191E  0E67               	movlw	103
  4612  001920  199B               	xorwf	efgtoa@mode& (0+255),w,b
  4613  001922  A4D8               	btfss	status,2,c
  4614  001924  EF96  F00C         	goto	u13031
  4615  001928  EF98  F00C         	goto	u13030
  4616  00192C                     u13031:
  4617  00192C  EFA3  F00C         	goto	l11217
  4618  001930                     u13030:
  4619  001930                     
  4620                           ; BSR set to: 0
  4621  001930  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4622  001932  EF9F  F00C         	goto	u13040
  4623  001936  EF9D  F00C         	goto	u13041
  4624  00193A                     u13041:
  4625  00193A  EFA3  F00C         	goto	l11217
  4626  00193E                     u13040:
  4627  00193E                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4630  00193E  4B86               	infsnz	efgtoa@t& (0+255),f,b
  4631  001940  2B87               	incf	(efgtoa@t+1)& (0+255),f,b
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4634  001942  EFEE  F00C         	goto	l11245
  4635  001946                     l11217:
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4638  001946  0100               	movlb	0	; () banked
  4639  001948  5188               	movf	efgtoa@pp& (0+255),w,b
  4640  00194A  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4641  00194C  A4D8               	btfss	status,2,c
  4642  00194E  EFAB  F00C         	goto	u13051
  4643  001952  EFAD  F00C         	goto	u13050
  4644  001956                     u13051:
  4645  001956  EFD7  F00C         	goto	l11237
  4646  00195A                     u13050:
  4647  00195A                     
  4648                           ; BSR set to: 0
  4649  00195A  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4650  00195C  EFB4  F00C         	goto	u13060
  4651  001960  EFB2  F00C         	goto	u13061
  4652  001964                     u13061:
  4653  001964  EFD7  F00C         	goto	l11237
  4654  001968                     u13060:
  4655  001968                     
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4658  001968  0E27               	movlw	low _dbuf
  4659  00196A  25AC               	addwf	efgtoa@n& (0+255),w,b
  4660  00196C  6ED9               	movwf	fsr2l,c
  4661  00196E  0E01               	movlw	high _dbuf
  4662  001970  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4663  001972  6EDA               	movwf	fsr2h,c
  4664  001974  0E2E               	movlw	46
  4665  001976  6EDF               	movwf	indf2,c
  4666  001978                     
  4667                           ; BSR set to: 0
  4668  001978  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4669  00197A  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4670  00197C                     
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4673  00197C  0798               	decf	efgtoa@w& (0+255),f,b
  4674  00197E  A0D8               	btfss	status,0,c
  4675  001980  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4676  001982                     
  4677                           ; BSR set to: 0
  4678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4679  001982  0E00               	movlw	0
  4680  001984  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4681  001986  0E01               	movlw	1
  4682  001988  6F88               	movwf	efgtoa@pp& (0+255),b
  4683  00198A  EFD7  F00C         	goto	l11237
  4684  00198E                     l11229:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4688  00198E  0E27               	movlw	low _dbuf
  4689  001990  25AC               	addwf	efgtoa@n& (0+255),w,b
  4690  001992  6ED9               	movwf	fsr2l,c
  4691  001994  0E01               	movlw	high _dbuf
  4692  001996  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4693  001998  6EDA               	movwf	fsr2h,c
  4694  00199A  0E30               	movlw	48
  4695  00199C  6EDF               	movwf	indf2,c
  4696  00199E                     
  4697                           ; BSR set to: 0
  4698  00199E  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4699  0019A0  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4700  0019A2                     
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4703  0019A2  0798               	decf	efgtoa@w& (0+255),f,b
  4704  0019A4  A0D8               	btfss	status,0,c
  4705  0019A6  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4706  0019A8                     
  4707                           ; BSR set to: 0
  4708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4709  0019A8  0786               	decf	efgtoa@t& (0+255),f,b
  4710  0019AA  A0D8               	btfss	status,0,c
  4711  0019AC  0787               	decf	(efgtoa@t+1)& (0+255),f,b
  4712  0019AE                     l11237:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4716  0019AE  5186               	movf	efgtoa@t& (0+255),w,b
  4717  0019B0  1187               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4718  0019B2  A4D8               	btfss	status,2,c
  4719  0019B4  EFDE  F00C         	goto	u13071
  4720  0019B8  EFE0  F00C         	goto	u13070
  4721  0019BC                     u13071:
  4722  0019BC  EFC7  F00C         	goto	l11229
  4723  0019C0                     u13070:
  4724  0019C0                     
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4727  0019C0  0E27               	movlw	low _dbuf
  4728  0019C2  25AC               	addwf	efgtoa@n& (0+255),w,b
  4729  0019C4  6ED9               	movwf	fsr2l,c
  4730  0019C6  0E01               	movlw	high _dbuf
  4731  0019C8  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4732  0019CA  6EDA               	movwf	fsr2h,c
  4733  0019CC  5192               	movf	efgtoa@d& (0+255),w,b
  4734  0019CE  0F30               	addlw	48
  4735  0019D0  6EDF               	movwf	indf2,c
  4736  0019D2                     
  4737                           ; BSR set to: 0
  4738  0019D2  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4739  0019D4  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4740  0019D6                     
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4743  0019D6  0798               	decf	efgtoa@w& (0+255),f,b
  4744  0019D8  A0D8               	btfss	status,0,c
  4745  0019DA  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4746  0019DC                     l11245:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4750  0019DC  C09C  F01E         	movff	efgtoa@h,___flsub@b
  4751  0019E0  C09D  F01F         	movff	efgtoa@h+1,___flsub@b+1
  4752  0019E4  C09E  F020         	movff	efgtoa@h+2,___flsub@b+2
  4753  0019E8  C09F  F021         	movff	efgtoa@h+3,___flsub@b+3
  4754  0019EC  C0AE  F009         	movff	efgtoa@u,___flmul@a
  4755  0019F0  C0AF  F00A         	movff	efgtoa@u+1,___flmul@a+1
  4756  0019F4  C0B0  F00B         	movff	efgtoa@u+2,___flmul@a+2
  4757  0019F8  C0B1  F00C         	movff	efgtoa@u+3,___flmul@a+3
  4758  0019FC  C0A0  F005         	movff	efgtoa@l,___flmul@b
  4759  001A00  C0A1  F006         	movff	efgtoa@l+1,___flmul@b+1
  4760  001A04  C0A2  F007         	movff	efgtoa@l+2,___flmul@b+2
  4761  001A08  C0A3  F008         	movff	efgtoa@l+3,___flmul@b+3
  4762  001A0C  ECA8  F010         	call	___flmul	;wreg free
  4763  001A10  C005  F022         	movff	?___flmul,___flsub@a
  4764  001A14  C006  F023         	movff	?___flmul+1,___flsub@a+1
  4765  001A18  C007  F024         	movff	?___flmul+2,___flsub@a+2
  4766  001A1C  C008  F025         	movff	?___flmul+3,___flsub@a+3
  4767  001A20  EC2D  F029         	call	___flsub	;wreg free
  4768  001A24  C01E  F09C         	movff	?___flsub,efgtoa@h
  4769  001A28  C01F  F09D         	movff	?___flsub+1,efgtoa@h+1
  4770  001A2C  C020  F09E         	movff	?___flsub+2,efgtoa@h+2
  4771  001A30  C021  F09F         	movff	?___flsub+3,efgtoa@h+3
  4772  001A34                     
  4773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4774  001A34  C0AE  F013         	movff	efgtoa@u,___fldiv@b
  4775  001A38  C0AF  F014         	movff	efgtoa@u+1,___fldiv@b+1
  4776  001A3C  C0B0  F015         	movff	efgtoa@u+2,___fldiv@b+2
  4777  001A40  C0B1  F016         	movff	efgtoa@u+3,___fldiv@b+3
  4778  001A44  0E00               	movlw	0
  4779  001A46  6E17               	movwf	___fldiv@a^0,c
  4780  001A48  0E00               	movlw	0
  4781  001A4A  6E18               	movwf	(___fldiv@a+1)^0,c
  4782  001A4C  0E20               	movlw	32
  4783  001A4E  6E19               	movwf	(___fldiv@a+2)^0,c
  4784  001A50  0E41               	movlw	65
  4785  001A52  6E1A               	movwf	(___fldiv@a+3)^0,c
  4786  001A54  EC91  F016         	call	___fldiv	;wreg free
  4787  001A58  C013  F0AE         	movff	?___fldiv,efgtoa@u
  4788  001A5C  C014  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  4789  001A60  C015  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  4790  001A64  C016  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  4791  001A68                     
  4792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4793  001A68  0100               	movlb	0	; () banked
  4794  001A6A  078A               	decf	efgtoa@ne& (0+255),f,b
  4795  001A6C  A0D8               	btfss	status,0,c
  4796  001A6E  078B               	decf	(efgtoa@ne+1)& (0+255),f,b
  4797  001A70                     
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4800  001A70  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  4801  001A72  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  4802  001A74                     l11253:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4806  001A74  518C               	movf	efgtoa@m& (0+255),w,b
  4807  001A76  5DA4               	subwf	efgtoa@i& (0+255),w,b
  4808  001A78  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  4809  001A7A  0A80               	xorlw	128
  4810  001A7C  6E47               	movwf	??_efgtoa^0,c
  4811  001A7E  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  4812  001A80  0A80               	xorlw	128
  4813  001A82  5847               	subwfb	??_efgtoa^0,w,c
  4814  001A84  B0D8               	btfsc	status,0,c
  4815  001A86  EF47  F00D         	goto	u13081
  4816  001A8A  EF49  F00D         	goto	u13080
  4817  001A8E                     u13081:
  4818  001A8E  EF57  F00D         	goto	l11257
  4819  001A92                     u13080:
  4820  001A92                     
  4821                           ; BSR set to: 0
  4822  001A92  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4823  001A94  EF55  F00D         	goto	u13091
  4824  001A98  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  4825  001A9A  E109               	bnz	u13090
  4826  001A9C  0E4B               	movlw	75
  4827  001A9E  5DAC               	subwf	efgtoa@n& (0+255),w,b
  4828  001AA0  A0D8               	btfss	status,0,c
  4829  001AA2  EF55  F00D         	goto	u13091
  4830  001AA6  EF57  F00D         	goto	u13090
  4831  001AAA                     u13091:
  4832  001AAA  EF4C  F00C         	goto	l11205
  4833  001AAE                     u13090:
  4834  001AAE                     l11257:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4838  001AAE  5188               	movf	efgtoa@pp& (0+255),w,b
  4839  001AB0  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4840  001AB2  A4D8               	btfss	status,2,c
  4841  001AB4  EF5E  F00D         	goto	u13101
  4842  001AB8  EF60  F00D         	goto	u13100
  4843  001ABC                     u13101:
  4844  001ABC  EF71  F00D         	goto	l11265
  4845  001AC0                     u13100:
  4846  001AC0                     
  4847                           ; BSR set to: 0
  4848  001AC0  A874               	btfss	_flags@doprnt$F4927^0,4,c
  4849  001AC2  EF65  F00D         	goto	u13111
  4850  001AC6  EF67  F00D         	goto	u13110
  4851  001ACA                     u13111:
  4852  001ACA  EF71  F00D         	goto	l11265
  4853  001ACE                     u13110:
  4854  001ACE                     
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4857  001ACE  0E27               	movlw	low _dbuf
  4858  001AD0  25AC               	addwf	efgtoa@n& (0+255),w,b
  4859  001AD2  6ED9               	movwf	fsr2l,c
  4860  001AD4  0E01               	movlw	high _dbuf
  4861  001AD6  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4862  001AD8  6EDA               	movwf	fsr2h,c
  4863  001ADA  0E2E               	movlw	46
  4864  001ADC  6EDF               	movwf	indf2,c
  4865  001ADE                     
  4866                           ; BSR set to: 0
  4867  001ADE  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4868  001AE0  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4869  001AE2                     l11265:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4873  001AE2  0E27               	movlw	low _dbuf
  4874  001AE4  25AC               	addwf	efgtoa@n& (0+255),w,b
  4875  001AE6  6ED9               	movwf	fsr2l,c
  4876  001AE8  0E01               	movlw	high _dbuf
  4877  001AEA  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4878  001AEC  6EDA               	movwf	fsr2h,c
  4879  001AEE  0E00               	movlw	0
  4880  001AF0  6EDF               	movwf	indf2,c
  4881  001AF2                     
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4884  001AF2  0E65               	movlw	101
  4885  001AF4  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4886  001AF6  A4D8               	btfss	status,2,c
  4887  001AF8  EF80  F00D         	goto	u13121
  4888  001AFC  EF82  F00D         	goto	u13120
  4889  001B00                     u13121:
  4890  001B00  EFE7  F008         	goto	l11067
  4891  001B04                     u13120:
  4892  001B04                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4895  001B04  0E00               	movlw	0
  4896  001B06  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  4897  001B08  0E4F               	movlw	79
  4898  001B0A  6FA4               	movwf	efgtoa@i& (0+255),b
  4899  001B0C                     
  4900                           ; BSR set to: 0
  4901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4902  001B0C  0E27               	movlw	low _dbuf
  4903  001B0E  25A4               	addwf	efgtoa@i& (0+255),w,b
  4904  001B10  6ED9               	movwf	fsr2l,c
  4905  001B12  0E01               	movlw	high _dbuf
  4906  001B14  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4907  001B16  6EDA               	movwf	fsr2h,c
  4908  001B18  0E00               	movlw	0
  4909  001B1A  6EDF               	movwf	indf2,c
  4910  001B1C                     
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4913  001B1C  0E00               	movlw	0
  4914  001B1E  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  4915  001B20  0E00               	movlw	0
  4916  001B22  6F94               	movwf	efgtoa@sign& (0+255),b
  4917  001B24                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4920  001B24  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4921  001B26  EF99  F00D         	goto	u13130
  4922  001B2A  EF97  F00D         	goto	u13131
  4923  001B2E                     u13131:
  4924  001B2E  EFA1  F00D         	goto	l11281
  4925  001B32                     u13130:
  4926  001B32                     
  4927                           ; BSR set to: 0
  4928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4929  001B32  0E00               	movlw	0
  4930  001B34  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  4931  001B36  0E01               	movlw	1
  4932  001B38  6F94               	movwf	efgtoa@sign& (0+255),b
  4933  001B3A                     
  4934                           ; BSR set to: 0
  4935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4936  001B3A  6DAA               	negf	efgtoa@e& (0+255),b
  4937  001B3C  1FAB               	comf	(efgtoa@e+1)& (0+255),f,b
  4938  001B3E  B0D8               	btfsc	status,0,c
  4939  001B40  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  4940  001B42                     l11281:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4944  001B42  0E00               	movlw	0
  4945  001B44  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  4946  001B46  0E02               	movlw	2
  4947  001B48  6F96               	movwf	efgtoa@p& (0+255),b
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4950  001B4A  EFD2  F00D         	goto	l11293
  4951  001B4E                     l11283:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4955  001B4E  07A4               	decf	efgtoa@i& (0+255),f,b
  4956  001B50  A0D8               	btfss	status,0,c
  4957  001B52  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4958  001B54                     
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4961  001B54  0E27               	movlw	low _dbuf
  4962  001B56  25A4               	addwf	efgtoa@i& (0+255),w,b
  4963  001B58  6ED9               	movwf	fsr2l,c
  4964  001B5A  0E01               	movlw	high _dbuf
  4965  001B5C  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4966  001B5E  6EDA               	movwf	fsr2h,c
  4967  001B60  C0AA  F005         	movff	efgtoa@e,___awmod@dividend
  4968  001B64  C0AB  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4969  001B68  0E00               	movlw	0
  4970  001B6A  6E08               	movwf	(___awmod@divisor+1)^0,c
  4971  001B6C  0E0A               	movlw	10
  4972  001B6E  6E07               	movwf	___awmod@divisor^0,c
  4973  001B70  ECE1  F024         	call	___awmod	;wreg free
  4974  001B74  5005               	movf	?___awmod^0,w,c
  4975  001B76  0F30               	addlw	48
  4976  001B78  6EDF               	movwf	indf2,c
  4977  001B7A                     
  4978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4979  001B7A  C0AA  F005         	movff	efgtoa@e,___awdiv@dividend
  4980  001B7E  C0AB  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4981  001B82  0E00               	movlw	0
  4982  001B84  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4983  001B86  0E0A               	movlw	10
  4984  001B88  6E07               	movwf	___awdiv@divisor^0,c
  4985  001B8A  EC6B  F023         	call	___awdiv	;wreg free
  4986  001B8E  C005  F0AA         	movff	?___awdiv,efgtoa@e
  4987  001B92  C006  F0AB         	movff	?___awdiv+1,efgtoa@e+1
  4988  001B96                     
  4989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4990  001B96  0100               	movlb	0	; () banked
  4991  001B98  0796               	decf	efgtoa@p& (0+255),f,b
  4992  001B9A  A0D8               	btfss	status,0,c
  4993  001B9C  0797               	decf	(efgtoa@p+1)& (0+255),f,b
  4994  001B9E                     
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4997  001B9E  0798               	decf	efgtoa@w& (0+255),f,b
  4998  001BA0  A0D8               	btfss	status,0,c
  4999  001BA2  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  5000  001BA4                     l11293:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5004  001BA4  51AA               	movf	efgtoa@e& (0+255),w,b
  5005  001BA6  11AB               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5006  001BA8  A4D8               	btfss	status,2,c
  5007  001BAA  EFD9  F00D         	goto	u13141
  5008  001BAE  EFDB  F00D         	goto	u13140
  5009  001BB2                     u13141:
  5010  001BB2  EFA7  F00D         	goto	l11283
  5011  001BB6                     u13140:
  5012  001BB6                     
  5013                           ; BSR set to: 0
  5014  001BB6  BF97               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5015  001BB8  EFE8  F00D         	goto	u13150
  5016  001BBC  5197               	movf	(efgtoa@p+1)& (0+255),w,b
  5017  001BBE  E106               	bnz	u13151
  5018  001BC0  0596               	decf	efgtoa@p& (0+255),w,b
  5019  001BC2  B0D8               	btfsc	status,0,c
  5020  001BC4  EFE6  F00D         	goto	u13151
  5021  001BC8  EFE8  F00D         	goto	u13150
  5022  001BCC                     u13151:
  5023  001BCC  EFA7  F00D         	goto	l11283
  5024  001BD0                     u13150:
  5025  001BD0                     
  5026                           ; BSR set to: 0
  5027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5028  001BD0  07A4               	decf	efgtoa@i& (0+255),f,b
  5029  001BD2  A0D8               	btfss	status,0,c
  5030  001BD4  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  5031  001BD6                     
  5032                           ; BSR set to: 0
  5033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5034  001BD6  5194               	movf	efgtoa@sign& (0+255),w,b
  5035  001BD8  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5036  001BDA  A4D8               	btfss	status,2,c
  5037  001BDC  EFF2  F00D         	goto	u13161
  5038  001BE0  EFF4  F00D         	goto	u13160
  5039  001BE4                     u13161:
  5040  001BE4  EFFA  F00D         	goto	l11303
  5041  001BE8                     u13160:
  5042  001BE8                     
  5043                           ; BSR set to: 0
  5044  001BE8  0E00               	movlw	0
  5045  001BEA  6F83               	movwf	(_efgtoa$4977+1)& (0+255),b
  5046  001BEC  0E2B               	movlw	43
  5047  001BEE  6F82               	movwf	_efgtoa$4977& (0+255),b
  5048  001BF0  EFFE  F00D         	goto	l11305
  5049  001BF4                     l11303:
  5050                           
  5051                           ; BSR set to: 0
  5052  001BF4  0E00               	movlw	0
  5053  001BF6  6F83               	movwf	(_efgtoa$4977+1)& (0+255),b
  5054  001BF8  0E2D               	movlw	45
  5055  001BFA  6F82               	movwf	_efgtoa$4977& (0+255),b
  5056  001BFC                     l11305:
  5057                           
  5058                           ; BSR set to: 0
  5059  001BFC  0E27               	movlw	low _dbuf
  5060  001BFE  25A4               	addwf	efgtoa@i& (0+255),w,b
  5061  001C00  6ED9               	movwf	fsr2l,c
  5062  001C02  0E01               	movlw	high _dbuf
  5063  001C04  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5064  001C06  6EDA               	movwf	fsr2h,c
  5065  001C08  C082  FFDF         	movff	_efgtoa$4977,indf2
  5066  001C0C                     
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5069  001C0C  0798               	decf	efgtoa@w& (0+255),f,b
  5070  001C0E  A0D8               	btfss	status,0,c
  5071  001C10  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  5072  001C12                     
  5073                           ; BSR set to: 0
  5074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5075  001C12  07A4               	decf	efgtoa@i& (0+255),f,b
  5076  001C14  A0D8               	btfss	status,0,c
  5077  001C16  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  5078  001C18                     
  5079                           ; BSR set to: 0
  5080  001C18  0EBF               	movlw	191
  5081  001C1A  6E47               	movwf	??_efgtoa^0,c
  5082  001C1C  0EFF               	movlw	255
  5083  001C1E  6E48               	movwf	(??_efgtoa+1)^0,c
  5084  001C20  5046               	movf	efgtoa@c^0,w,c
  5085  001C22  6E49               	movwf	(??_efgtoa+2)^0,c
  5086  001C24  6A4A               	clrf	(??_efgtoa+3)^0,c
  5087  001C26  5047               	movf	??_efgtoa^0,w,c
  5088  001C28  2649               	addwf	(??_efgtoa+2)^0,f,c
  5089  001C2A  5048               	movf	(??_efgtoa+1)^0,w,c
  5090  001C2C  224A               	addwfc	(??_efgtoa+3)^0,f,c
  5091  001C2E  504A               	movf	(??_efgtoa+3)^0,w,c
  5092  001C30  E109               	bnz	u13170
  5093  001C32  0E1A               	movlw	26
  5094  001C34  5C49               	subwf	(??_efgtoa+2)^0,w,c
  5095  001C36  A0D8               	btfss	status,0,c
  5096  001C38  EF20  F00E         	goto	u13171
  5097  001C3C  EF22  F00E         	goto	u13170
  5098  001C40                     u13171:
  5099  001C40  EF28  F00E         	goto	l11317
  5100  001C44                     u13170:
  5101  001C44                     
  5102                           ; BSR set to: 0
  5103  001C44  0E00               	movlw	0
  5104  001C46  6F85               	movwf	(_efgtoa$4978+1)& (0+255),b
  5105  001C48  0E65               	movlw	101
  5106  001C4A  6F84               	movwf	_efgtoa$4978& (0+255),b
  5107  001C4C  EF2C  F00E         	goto	l11319
  5108  001C50                     l11317:
  5109                           
  5110                           ; BSR set to: 0
  5111  001C50  0E00               	movlw	0
  5112  001C52  6F85               	movwf	(_efgtoa$4978+1)& (0+255),b
  5113  001C54  0E45               	movlw	69
  5114  001C56  6F84               	movwf	_efgtoa$4978& (0+255),b
  5115  001C58                     l11319:
  5116                           
  5117                           ; BSR set to: 0
  5118  001C58  0E27               	movlw	low _dbuf
  5119  001C5A  25A4               	addwf	efgtoa@i& (0+255),w,b
  5120  001C5C  6ED9               	movwf	fsr2l,c
  5121  001C5E  0E01               	movlw	high _dbuf
  5122  001C60  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5123  001C62  6EDA               	movwf	fsr2h,c
  5124  001C64  C084  FFDF         	movff	_efgtoa$4978,indf2
  5125  001C68                     
  5126                           ; BSR set to: 0
  5127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5128  001C68  0798               	decf	efgtoa@w& (0+255),f,b
  5129  001C6A  A0D8               	btfss	status,0,c
  5130  001C6C  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  5131  001C6E                     
  5132                           ; BSR set to: 0
  5133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5134  001C6E  0E27               	movlw	low _dbuf
  5135  001C70  25AC               	addwf	efgtoa@n& (0+255),w,b
  5136  001C72  6E05               	movwf	strcpy@dest^0,c
  5137  001C74  0E01               	movlw	high _dbuf
  5138  001C76  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5139  001C78  6E06               	movwf	(strcpy@dest+1)^0,c
  5140  001C7A  0E27               	movlw	low _dbuf
  5141  001C7C  25A4               	addwf	efgtoa@i& (0+255),w,b
  5142  001C7E  6E07               	movwf	strcpy@src^0,c
  5143  001C80  0E01               	movlw	high _dbuf
  5144  001C82  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5145  001C84  6E08               	movwf	(strcpy@src+1)^0,c
  5146  001C86  EC40  F028         	call	_strcpy	;wreg free
  5147  001C8A  EFE7  F008         	goto	l11067
  5148  001C8E                     l2538:
  5149  001C8E  0012               	return		;funcret
  5150  001C90                     __end_of_efgtoa:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function _tolower *****************
  5154 ;; Defined at:
  5155 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  c               2   10[COMRAM] int 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  2   10[COMRAM] int 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;Total ram usage:        6 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 5
  5176 ;; This function calls:
  5177 ;;		_isupper
  5178 ;; This function is called by:
  5179 ;;		_efgtoa
  5180 ;;		_vfpfcnvrt
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text11
  5185  005214                     __ptext11:
  5186                           	callstack 0
  5187  005214                     _tolower:
  5188                           	callstack 21
  5189  005214  0EBF               	movlw	191
  5190  005216  6E0D               	movwf	??_tolower^0,c
  5191  005218  0EFF               	movlw	255
  5192  00521A  6E0E               	movwf	(??_tolower+1)^0,c
  5193  00521C  C00B  F00F         	movff	tolower@c,??_tolower+2
  5194  005220  C00C  F010         	movff	tolower@c+1,??_tolower+3
  5195  005224  500D               	movf	??_tolower^0,w,c
  5196  005226  260F               	addwf	(??_tolower+2)^0,f,c
  5197  005228  500E               	movf	(??_tolower+1)^0,w,c
  5198  00522A  2210               	addwfc	(??_tolower+3)^0,f,c
  5199  00522C  5010               	movf	(??_tolower+3)^0,w,c
  5200  00522E  E107               	bnz	u12441
  5201  005230  0E1A               	movlw	26
  5202  005232  5C0F               	subwf	(??_tolower+2)^0,w,c
  5203  005234  B0D8               	btfsc	status,0,c
  5204  005236  EF1F  F029         	goto	u12441
  5205  00523A  EF21  F029         	goto	u12440
  5206  00523E                     u12441:
  5207  00523E  EF28  F029         	goto	l2717
  5208  005242                     u12440:
  5209  005242  0E20               	movlw	32
  5210  005244  100B               	iorwf	tolower@c^0,w,c
  5211  005246  6E0B               	movwf	?_tolower^0,c
  5212  005248  500C               	movf	(tolower@c+1)^0,w,c
  5213  00524A  6E0C               	movwf	(?_tolower+1)^0,c
  5214  00524C  EF2C  F029         	goto	l2720
  5215  005250                     l2717:
  5216  005250  C00B  F00B         	movff	tolower@c,?_tolower
  5217  005254  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  5218  005258                     l2720:
  5219  005258  0012               	return		;funcret
  5220  00525A                     __end_of_tolower:
  5221                           	callstack 0
  5222                           
  5223 ;; *************** function _isupper *****************
  5224 ;; Defined at:
  5225 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  c               2    4[COMRAM] int 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  2    4[COMRAM] int 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;Total ram usage:        6 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; Hardware stack levels required when called: 4
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_efgtoa
  5250 ;;		_vfpfcnvrt
  5251 ;;		_tolower
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text12
  5256  00539A                     __ptext12:
  5257                           	callstack 0
  5258  00539A                     _isupper:
  5259                           	callstack 21
  5260  00539A  0EBF               	movlw	191
  5261  00539C  6E07               	movwf	??_isupper^0,c
  5262  00539E  0EFF               	movlw	255
  5263  0053A0  6E08               	movwf	(??_isupper+1)^0,c
  5264  0053A2  C005  F009         	movff	isupper@c,??_isupper+2
  5265  0053A6  C006  F00A         	movff	isupper@c+1,??_isupper+3
  5266  0053AA  5007               	movf	??_isupper^0,w,c
  5267  0053AC  2609               	addwf	(??_isupper+2)^0,f,c
  5268  0053AE  5008               	movf	(??_isupper+1)^0,w,c
  5269  0053B0  220A               	addwfc	(??_isupper+3)^0,f,c
  5270  0053B2  500A               	movf	(??_isupper+3)^0,w,c
  5271  0053B4  E10A               	bnz	u11450
  5272  0053B6  0E1A               	movlw	26
  5273  0053B8  5C09               	subwf	(??_isupper+2)^0,w,c
  5274  0053BA  A0D8               	btfss	status,0,c
  5275  0053BC  EFE2  F029         	goto	u11451
  5276  0053C0  EFE5  F029         	goto	u11450
  5277  0053C4                     u11451:
  5278  0053C4  0E01               	movlw	1
  5279  0053C6  EFE6  F029         	goto	u11460
  5280  0053CA                     u11450:
  5281  0053CA  0E00               	movlw	0
  5282  0053CC                     u11460:
  5283  0053CC  6E05               	movwf	?_isupper^0,c
  5284  0053CE  6A06               	clrf	(?_isupper+1)^0,c
  5285  0053D0  0012               	return		;funcret
  5286  0053D2                     __end_of_isupper:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _strcpy *****************
  5290 ;; Defined at:
  5291 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  dest            2    4[COMRAM] PTR unsigned char 
  5294 ;;		 -> dbuf(80), 
  5295 ;;  src             2    6[COMRAM] PTR const unsigned char 
  5296 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  5297 ;;		 -> dbuf(80), 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  d               2   12[COMRAM] PTR unsigned char 
  5300 ;;		 -> dbuf(80), 
  5301 ;;  s               2   10[COMRAM] PTR const unsigned char 
  5302 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  5303 ;;		 -> dbuf(80), 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  2    4[COMRAM] PTR unsigned char 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:       10 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 4
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_efgtoa
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text13
  5328  005080                     __ptext13:
  5329                           	callstack 0
  5330  005080                     _strcpy:
  5331                           	callstack 21
  5332  005080  C007  F00B         	movff	strcpy@src,strcpy@s
  5333  005084  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  5334  005088  C005  F00D         	movff	strcpy@dest,strcpy@d
  5335  00508C  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  5336  005090                     l10921:
  5337  005090  500B               	movf	strcpy@s^0,w,c
  5338  005092  6E09               	movwf	??_strcpy^0,c
  5339  005094  500C               	movf	(strcpy@s+1)^0,w,c
  5340  005096  6E0A               	movwf	(??_strcpy+1)^0,c
  5341  005098  4A0B               	infsnz	strcpy@s^0,f,c
  5342  00509A  2A0C               	incf	(strcpy@s+1)^0,f,c
  5343  00509C  C009  FFF6         	movff	??_strcpy,tblptrl
  5344  0050A0  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  5345  0050A4  0E00               	movlw	low (__smallconst shr (0+16))
  5346  0050A6  6EF8               	movwf	tblptru,c
  5347  0050A8  C00D  FFD9         	movff	strcpy@d,fsr2l
  5348  0050AC  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  5349  0050B0  4A0D               	infsnz	strcpy@d^0,f,c
  5350  0050B2  2A0E               	incf	(strcpy@d+1)^0,f,c
  5351  0050B4  0E0F               	movlw	(high __ramtop+-1)
  5352  0050B6  64F7               	cpfsgt	tblptrh,c
  5353  0050B8  D003               	bra	u12427
  5354  0050BA  0008               	tblrd		*
  5355  0050BC  50F5               	movf	tablat,w,c
  5356  0050BE  D005               	bra	u12420
  5357  0050C0                     u12427:
  5358  0050C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5359  0050C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5360  0050C8  50EF               	movf	indf0,w,c
  5361  0050CA                     u12420:
  5362  0050CA  6EDF               	movwf	indf2,c
  5363  0050CC  50DF               	movf	indf2,w,c
  5364  0050CE  A4D8               	btfss	status,2,c
  5365  0050D0  EF6C  F028         	goto	u12431
  5366  0050D4  EF6E  F028         	goto	u12430
  5367  0050D8                     u12431:
  5368  0050D8  EF48  F028         	goto	l10921
  5369  0050DC                     u12430:
  5370  0050DC  0012               	return		;funcret
  5371  0050DE                     __end_of_strcpy:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _floorf *****************
  5375 ;; Defined at:
  5376 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  x               4   43[COMRAM] float 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  u               4   59[COMRAM] struct .
  5381 ;;  m               4   53[COMRAM] unsigned long 
  5382 ;;  e               2   57[COMRAM] int 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  4   43[COMRAM] float 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:       20 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 4
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_efgtoa
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text14
  5407  00339A                     __ptext14:
  5408                           	callstack 0
  5409  00339A                     _floorf:
  5410                           	callstack 21
  5411  00339A  C10F  F03C         	movff	floorf@F526,floorf@u
  5412  00339E  C110  F03D         	movff	floorf@F526+1,floorf@u+1
  5413  0033A2  C111  F03E         	movff	floorf@F526+2,floorf@u+2
  5414  0033A6  C112  F03F         	movff	floorf@F526+3,floorf@u+3
  5415  0033AA  C02C  F03C         	movff	floorf@x,floorf@u
  5416  0033AE  C02D  F03D         	movff	floorf@x+1,floorf@u+1
  5417  0033B2  C02E  F03E         	movff	floorf@x+2,floorf@u+2
  5418  0033B6  C02F  F03F         	movff	floorf@x+3,floorf@u+3
  5419  0033BA  0E81               	movlw	129
  5420  0033BC  6E30               	movwf	??_floorf^0,c
  5421  0033BE  0EFF               	movlw	255
  5422  0033C0  6E31               	movwf	(??_floorf+1)^0,c
  5423  0033C2  C03C  F032         	movff	floorf@u,??_floorf+2
  5424  0033C6  C03D  F033         	movff	floorf@u+1,??_floorf+3
  5425  0033CA  C03E  F034         	movff	floorf@u+2,??_floorf+4
  5426  0033CE  C03F  F035         	movff	floorf@u+3,??_floorf+5
  5427  0033D2  0E18               	movlw	24
  5428  0033D4  EFF1  F019         	goto	u12450
  5429  0033D8                     u12455:
  5430  0033D8  90D8               	bcf	status,0,c
  5431  0033DA  3235               	rrcf	(??_floorf+5)^0,f,c
  5432  0033DC  3234               	rrcf	(??_floorf+4)^0,f,c
  5433  0033DE  3233               	rrcf	(??_floorf+3)^0,f,c
  5434  0033E0  3232               	rrcf	(??_floorf+2)^0,f,c
  5435  0033E2                     u12450:
  5436  0033E2  2EE8               	decfsz	wreg,f,c
  5437  0033E4  EFEC  F019         	goto	u12455
  5438  0033E8  5032               	movf	(??_floorf+2)^0,w,c
  5439  0033EA  2430               	addwf	??_floorf^0,w,c
  5440  0033EC  6E3A               	movwf	floorf@e^0,c
  5441  0033EE  0E00               	movlw	0
  5442  0033F0  2031               	addwfc	(??_floorf+1)^0,w,c
  5443  0033F2  6E3B               	movwf	(floorf@e+1)^0,c
  5444  0033F4  BE3B               	btfsc	(floorf@e+1)^0,7,c
  5445  0033F6  EF06  F01A         	goto	u12461
  5446  0033FA  503B               	movf	(floorf@e+1)^0,w,c
  5447  0033FC  E109               	bnz	u12460
  5448  0033FE  0E17               	movlw	23
  5449  003400  5C3A               	subwf	floorf@e^0,w,c
  5450  003402  A0D8               	btfss	status,0,c
  5451  003404  EF06  F01A         	goto	u12461
  5452  003408  EF08  F01A         	goto	u12460
  5453  00340C                     u12461:
  5454  00340C  EF12  F01A         	goto	l10939
  5455  003410                     u12460:
  5456  003410                     l10937:
  5457  003410  C02C  F02C         	movff	floorf@x,?_floorf
  5458  003414  C02D  F02D         	movff	floorf@x+1,?_floorf+1
  5459  003418  C02E  F02E         	movff	floorf@x+2,?_floorf+2
  5460  00341C  C02F  F02F         	movff	floorf@x+3,?_floorf+3
  5461  003420  EFD5  F01A         	goto	l2655
  5462  003424                     l10939:
  5463  003424  BE3B               	btfsc	(floorf@e+1)^0,7,c
  5464  003426  EF17  F01A         	goto	u12471
  5465  00342A  EF19  F01A         	goto	u12470
  5466  00342E                     u12471:
  5467  00342E  EF89  F01A         	goto	l10949
  5468  003432                     u12470:
  5469  003432  C03A  F030         	movff	floorf@e,??_floorf
  5470  003436  0EFF               	movlw	255
  5471  003438  6E31               	movwf	(??_floorf+1)^0,c
  5472  00343A  0EFF               	movlw	255
  5473  00343C  6E32               	movwf	(??_floorf+2)^0,c
  5474  00343E  0E7F               	movlw	127
  5475  003440  6E33               	movwf	(??_floorf+3)^0,c
  5476  003442  0E00               	movlw	0
  5477  003444  6E34               	movwf	(??_floorf+4)^0,c
  5478  003446                     u12485:
  5479  003446  6630               	tstfsz	??_floorf^0,c
  5480  003448  EF28  F01A         	goto	u12486
  5481  00344C  EF30  F01A         	goto	u12487
  5482  003450                     u12486:
  5483  003450  3434               	rlcf	(??_floorf+4)^0,w,c
  5484  003452  3234               	rrcf	(??_floorf+4)^0,f,c
  5485  003454  3233               	rrcf	(??_floorf+3)^0,f,c
  5486  003456  3232               	rrcf	(??_floorf+2)^0,f,c
  5487  003458  3231               	rrcf	(??_floorf+1)^0,f,c
  5488  00345A  2E30               	decfsz	??_floorf^0,f,c
  5489  00345C  EF23  F01A         	goto	u12485
  5490  003460                     u12487:
  5491  003460  C031  F036         	movff	??_floorf+1,floorf@m
  5492  003464  C032  F037         	movff	??_floorf+2,floorf@m+1
  5493  003468  C033  F038         	movff	??_floorf+3,floorf@m+2
  5494  00346C  C034  F039         	movff	??_floorf+4,floorf@m+3
  5495  003470  5036               	movf	floorf@m^0,w,c
  5496  003472  143C               	andwf	floorf@u^0,w,c
  5497  003474  6E30               	movwf	??_floorf^0,c
  5498  003476  5037               	movf	(floorf@m+1)^0,w,c
  5499  003478  143D               	andwf	(floorf@u+1)^0,w,c
  5500  00347A  6E31               	movwf	(??_floorf+1)^0,c
  5501  00347C  5038               	movf	(floorf@m+2)^0,w,c
  5502  00347E  143E               	andwf	(floorf@u+2)^0,w,c
  5503  003480  6E32               	movwf	(??_floorf+2)^0,c
  5504  003482  5039               	movf	(floorf@m+3)^0,w,c
  5505  003484  143F               	andwf	(floorf@u+3)^0,w,c
  5506  003486  6E33               	movwf	(??_floorf+3)^0,c
  5507  003488  5030               	movf	??_floorf^0,w,c
  5508  00348A  1031               	iorwf	(??_floorf+1)^0,w,c
  5509  00348C  1032               	iorwf	(??_floorf+2)^0,w,c
  5510  00348E  1033               	iorwf	(??_floorf+3)^0,w,c
  5511  003490  A4D8               	btfss	status,2,c
  5512  003492  EF4D  F01A         	goto	u12491
  5513  003496  EF4F  F01A         	goto	u12490
  5514  00349A                     u12491:
  5515  00349A  EF51  F01A         	goto	l10945
  5516  00349E                     u12490:
  5517  00349E  EF08  F01A         	goto	l10937
  5518  0034A2                     l10945:
  5519  0034A2  C03C  F030         	movff	floorf@u,??_floorf
  5520  0034A6  C03D  F031         	movff	floorf@u+1,??_floorf+1
  5521  0034AA  C03E  F032         	movff	floorf@u+2,??_floorf+2
  5522  0034AE  C03F  F033         	movff	floorf@u+3,??_floorf+3
  5523  0034B2  0E20               	movlw	32
  5524  0034B4  EF61  F01A         	goto	u12500
  5525  0034B8                     u12505:
  5526  0034B8  90D8               	bcf	status,0,c
  5527  0034BA  3233               	rrcf	(??_floorf+3)^0,f,c
  5528  0034BC  3232               	rrcf	(??_floorf+2)^0,f,c
  5529  0034BE  3231               	rrcf	(??_floorf+1)^0,f,c
  5530  0034C0  3230               	rrcf	??_floorf^0,f,c
  5531  0034C2                     u12500:
  5532  0034C2  2EE8               	decfsz	wreg,f,c
  5533  0034C4  EF5C  F01A         	goto	u12505
  5534  0034C8  5030               	movf	??_floorf^0,w,c
  5535  0034CA  1031               	iorwf	(??_floorf+1)^0,w,c
  5536  0034CC  1032               	iorwf	(??_floorf+2)^0,w,c
  5537  0034CE  1033               	iorwf	(??_floorf+3)^0,w,c
  5538  0034D0  B4D8               	btfsc	status,2,c
  5539  0034D2  EF6D  F01A         	goto	u12511
  5540  0034D6  EF6F  F01A         	goto	u12510
  5541  0034DA                     u12511:
  5542  0034DA  EF77  F01A         	goto	l2658
  5543  0034DE                     u12510:
  5544  0034DE  5036               	movf	floorf@m^0,w,c
  5545  0034E0  263C               	addwf	floorf@u^0,f,c
  5546  0034E2  5037               	movf	(floorf@m+1)^0,w,c
  5547  0034E4  223D               	addwfc	(floorf@u+1)^0,f,c
  5548  0034E6  5038               	movf	(floorf@m+2)^0,w,c
  5549  0034E8  223E               	addwfc	(floorf@u+2)^0,f,c
  5550  0034EA  5039               	movf	(floorf@m+3)^0,w,c
  5551  0034EC  223F               	addwfc	(floorf@u+3)^0,f,c
  5552  0034EE                     l2658:
  5553  0034EE  1C36               	comf	floorf@m^0,w,c
  5554  0034F0  6E30               	movwf	??_floorf^0,c
  5555  0034F2  1C37               	comf	(floorf@m+1)^0,w,c
  5556  0034F4  6E31               	movwf	(??_floorf+1)^0,c
  5557  0034F6  1C38               	comf	(floorf@m+2)^0,w,c
  5558  0034F8  6E32               	movwf	(??_floorf+2)^0,c
  5559  0034FA  1C39               	comf	(floorf@m+3)^0,w,c
  5560  0034FC  6E33               	movwf	(??_floorf+3)^0,c
  5561  0034FE  5030               	movf	??_floorf^0,w,c
  5562  003500  163C               	andwf	floorf@u^0,f,c
  5563  003502  5031               	movf	(??_floorf+1)^0,w,c
  5564  003504  163D               	andwf	(floorf@u+1)^0,f,c
  5565  003506  5032               	movf	(??_floorf+2)^0,w,c
  5566  003508  163E               	andwf	(floorf@u+2)^0,f,c
  5567  00350A  5033               	movf	(??_floorf+3)^0,w,c
  5568  00350C  163F               	andwf	(floorf@u+3)^0,f,c
  5569  00350E  EFCD  F01A         	goto	l10957
  5570  003512                     l10949:
  5571  003512  C03C  F030         	movff	floorf@u,??_floorf
  5572  003516  C03D  F031         	movff	floorf@u+1,??_floorf+1
  5573  00351A  C03E  F032         	movff	floorf@u+2,??_floorf+2
  5574  00351E  C03F  F033         	movff	floorf@u+3,??_floorf+3
  5575  003522  0E20               	movlw	32
  5576  003524  EF99  F01A         	goto	u12520
  5577  003528                     u12525:
  5578  003528  90D8               	bcf	status,0,c
  5579  00352A  3233               	rrcf	(??_floorf+3)^0,f,c
  5580  00352C  3232               	rrcf	(??_floorf+2)^0,f,c
  5581  00352E  3231               	rrcf	(??_floorf+1)^0,f,c
  5582  003530  3230               	rrcf	??_floorf^0,f,c
  5583  003532                     u12520:
  5584  003532  2EE8               	decfsz	wreg,f,c
  5585  003534  EF94  F01A         	goto	u12525
  5586  003538  5030               	movf	??_floorf^0,w,c
  5587  00353A  1031               	iorwf	(??_floorf+1)^0,w,c
  5588  00353C  1032               	iorwf	(??_floorf+2)^0,w,c
  5589  00353E  1033               	iorwf	(??_floorf+3)^0,w,c
  5590  003540  A4D8               	btfss	status,2,c
  5591  003542  EFA5  F01A         	goto	u12531
  5592  003546  EFA7  F01A         	goto	u12530
  5593  00354A                     u12531:
  5594  00354A  EFB1  F01A         	goto	l10953
  5595  00354E                     u12530:
  5596  00354E  0E00               	movlw	0
  5597  003550  6E3C               	movwf	floorf@u^0,c
  5598  003552  0E00               	movlw	0
  5599  003554  6E3D               	movwf	(floorf@u+1)^0,c
  5600  003556  0E00               	movlw	0
  5601  003558  6E3E               	movwf	(floorf@u+2)^0,c
  5602  00355A  0E00               	movlw	0
  5603  00355C  6E3F               	movwf	(floorf@u+3)^0,c
  5604  00355E  EFCD  F01A         	goto	l10957
  5605  003562                     l10953:
  5606  003562  90D8               	bcf	status,0,c
  5607  003564  343C               	rlcf	floorf@u^0,w,c
  5608  003566  6E30               	movwf	??_floorf^0,c
  5609  003568  343D               	rlcf	(floorf@u+1)^0,w,c
  5610  00356A  6E31               	movwf	(??_floorf+1)^0,c
  5611  00356C  343E               	rlcf	(floorf@u+2)^0,w,c
  5612  00356E  6E32               	movwf	(??_floorf+2)^0,c
  5613  003570  343F               	rlcf	(floorf@u+3)^0,w,c
  5614  003572  6E33               	movwf	(??_floorf+3)^0,c
  5615  003574  5030               	movf	??_floorf^0,w,c
  5616  003576  1031               	iorwf	(??_floorf+1)^0,w,c
  5617  003578  1032               	iorwf	(??_floorf+2)^0,w,c
  5618  00357A  1033               	iorwf	(??_floorf+3)^0,w,c
  5619  00357C  B4D8               	btfsc	status,2,c
  5620  00357E  EFC3  F01A         	goto	u12541
  5621  003582  EFC5  F01A         	goto	u12540
  5622  003586                     u12541:
  5623  003586  EFCD  F01A         	goto	l10957
  5624  00358A                     u12540:
  5625  00358A  0E00               	movlw	0
  5626  00358C  6E3C               	movwf	floorf@u^0,c
  5627  00358E  0E00               	movlw	0
  5628  003590  6E3D               	movwf	(floorf@u+1)^0,c
  5629  003592  0E80               	movlw	128
  5630  003594  6E3E               	movwf	(floorf@u+2)^0,c
  5631  003596  0EBF               	movlw	191
  5632  003598  6E3F               	movwf	(floorf@u+3)^0,c
  5633  00359A                     l10957:
  5634  00359A  C03C  F02C         	movff	floorf@u,?_floorf
  5635  00359E  C03D  F02D         	movff	floorf@u+1,?_floorf+1
  5636  0035A2  C03E  F02E         	movff	floorf@u+2,?_floorf+2
  5637  0035A6  C03F  F02F         	movff	floorf@u+3,?_floorf+3
  5638  0035AA                     l2655:
  5639  0035AA  0012               	return		;funcret
  5640  0035AC                     __end_of_floorf:
  5641                           	callstack 0
  5642                           
  5643 ;; *************** function ___fpclassifyf *****************
  5644 ;; Defined at:
  5645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  x               4    4[COMRAM] float 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  u               4   14[COMRAM] struct .
  5650 ;;  e               2   12[COMRAM] int 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2    4[COMRAM] int 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:       14 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 4
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_efgtoa
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text15
  5675  004250                     __ptext15:
  5676                           	callstack 0
  5677  004250                     ___fpclassifyf:
  5678                           	callstack 21
  5679  004250  C113  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5680  004254  C114  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5681  004258  C115  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5682  00425C  C116  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5683  004260  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5684  004264  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5685  004268  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5686  00426C  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5687  004270  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5688  004274  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5689  004278  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5690  00427C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5691  004280  0E18               	movlw	24
  5692  004282  EF48  F021         	goto	u12350
  5693  004286                     u12355:
  5694  004286  90D8               	bcf	status,0,c
  5695  004288  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5696  00428A  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5697  00428C  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5698  00428E  3209               	rrcf	??___fpclassifyf^0,f,c
  5699  004290                     u12350:
  5700  004290  2EE8               	decfsz	wreg,f,c
  5701  004292  EF43  F021         	goto	u12355
  5702  004296  5009               	movf	??___fpclassifyf^0,w,c
  5703  004298  6E0D               	movwf	___fpclassifyf@e^0,c
  5704  00429A  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5705  00429C  500D               	movf	___fpclassifyf@e^0,w,c
  5706  00429E  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5707  0042A0  A4D8               	btfss	status,2,c
  5708  0042A2  EF55  F021         	goto	u12361
  5709  0042A6  EF57  F021         	goto	u12360
  5710  0042AA                     u12361:
  5711  0042AA  EF77  F021         	goto	l10909
  5712  0042AE                     u12360:
  5713  0042AE  90D8               	bcf	status,0,c
  5714  0042B0  340F               	rlcf	___fpclassifyf@u^0,w,c
  5715  0042B2  6E09               	movwf	??___fpclassifyf^0,c
  5716  0042B4  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5717  0042B6  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5718  0042B8  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5719  0042BA  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5720  0042BC  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5721  0042BE  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5722  0042C0  5009               	movf	??___fpclassifyf^0,w,c
  5723  0042C2  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5724  0042C4  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5725  0042C6  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5726  0042C8  A4D8               	btfss	status,2,c
  5727  0042CA  EF69  F021         	goto	u12371
  5728  0042CE  EF6B  F021         	goto	u12370
  5729  0042D2                     u12371:
  5730  0042D2  EF71  F021         	goto	l10905
  5731  0042D6                     u12370:
  5732  0042D6  0E00               	movlw	0
  5733  0042D8  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5734  0042DA  0E02               	movlw	2
  5735  0042DC  6E05               	movwf	?___fpclassifyf^0,c
  5736  0042DE  EFA6  F021         	goto	l2641
  5737  0042E2                     l10905:
  5738  0042E2  0E00               	movlw	0
  5739  0042E4  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5740  0042E6  0E03               	movlw	3
  5741  0042E8  6E05               	movwf	?___fpclassifyf^0,c
  5742  0042EA  EFA6  F021         	goto	l2641
  5743  0042EE                     l10909:
  5744  0042EE  280D               	incf	___fpclassifyf@e^0,w,c
  5745  0042F0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5746  0042F2  A4D8               	btfss	status,2,c
  5747  0042F4  EF7E  F021         	goto	u12381
  5748  0042F8  EF80  F021         	goto	u12380
  5749  0042FC                     u12381:
  5750  0042FC  EFA2  F021         	goto	l10915
  5751  004300                     u12380:
  5752  004300  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5753  004304  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5754  004308  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5755  00430C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5756  004310  0E09               	movlw	9
  5757  004312                     u12395:
  5758  004312  90D8               	bcf	status,0,c
  5759  004314  3609               	rlcf	??___fpclassifyf^0,f,c
  5760  004316  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5761  004318  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5762  00431A  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5763  00431C  2EE8               	decfsz	wreg,f,c
  5764  00431E  EF89  F021         	goto	u12395
  5765  004322  5009               	movf	??___fpclassifyf^0,w,c
  5766  004324  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5767  004326  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5768  004328  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5769  00432A  B4D8               	btfsc	status,2,c
  5770  00432C  EF9A  F021         	goto	u12401
  5771  004330  EF9D  F021         	goto	u12400
  5772  004334                     u12401:
  5773  004334  0E01               	movlw	1
  5774  004336  EF9E  F021         	goto	u12410
  5775  00433A                     u12400:
  5776  00433A  0E00               	movlw	0
  5777  00433C                     u12410:
  5778  00433C  6E05               	movwf	?___fpclassifyf^0,c
  5779  00433E  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5780  004340  EFA6  F021         	goto	l2641
  5781  004344                     l10915:
  5782  004344  0E00               	movlw	0
  5783  004346  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5784  004348  0E04               	movlw	4
  5785  00434A  6E05               	movwf	?___fpclassifyf^0,c
  5786  00434C                     l2641:
  5787  00434C  0012               	return		;funcret
  5788  00434E                     __end_of___fpclassifyf:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function ___fltol *****************
  5792 ;; Defined at:
  5793 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  f1              4    4[COMRAM] int 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  exp1            1   13[COMRAM] unsigned char 
  5798 ;;  sign1           1   12[COMRAM] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  4    4[COMRAM] long 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;Total ram usage:       10 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 4
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_efgtoa
  5819 ;;		_Servo_SetAngle
  5820 ;;		_CCP_PWM_Set_Duty
  5821 ;;		_async_config_baud_rate_gen
  5822 ;;		_I2C_Master_Mode_Clock_Configurations
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text16
  5827  003F42                     __ptext16:
  5828                           	callstack 0
  5829  003F42                     ___fltol:
  5830                           	callstack 21
  5831  003F42  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5832  003F44  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5833  003F46  6E0E               	movwf	___fltol@exp1^0,c
  5834  003F48  500E               	movf	___fltol@exp1^0,w,c
  5835  003F4A  A4D8               	btfss	status,2,c
  5836  003F4C  EFAA  F01F         	goto	u12231
  5837  003F50  EFAC  F01F         	goto	u12230
  5838  003F54                     u12231:
  5839  003F54  EFB6  F01F         	goto	l10833
  5840  003F58                     u12230:
  5841  003F58                     l10829:
  5842  003F58  0E00               	movlw	0
  5843  003F5A  6E05               	movwf	?___fltol^0,c
  5844  003F5C  0E00               	movlw	0
  5845  003F5E  6E06               	movwf	(?___fltol+1)^0,c
  5846  003F60  0E00               	movlw	0
  5847  003F62  6E07               	movwf	(?___fltol+2)^0,c
  5848  003F64  0E00               	movlw	0
  5849  003F66  6E08               	movwf	(?___fltol+3)^0,c
  5850  003F68  EF23  F020         	goto	l2061
  5851  003F6C                     l10833:
  5852  003F6C  C005  F009         	movff	___fltol@f1,??___fltol
  5853  003F70  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5854  003F74  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5855  003F78  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5856  003F7C  0E20               	movlw	32
  5857  003F7E  EFC6  F01F         	goto	u12240
  5858  003F82                     u12245:
  5859  003F82  90D8               	bcf	status,0,c
  5860  003F84  320C               	rrcf	(??___fltol+3)^0,f,c
  5861  003F86  320B               	rrcf	(??___fltol+2)^0,f,c
  5862  003F88  320A               	rrcf	(??___fltol+1)^0,f,c
  5863  003F8A  3209               	rrcf	??___fltol^0,f,c
  5864  003F8C                     u12240:
  5865  003F8C  2EE8               	decfsz	wreg,f,c
  5866  003F8E  EFC1  F01F         	goto	u12245
  5867  003F92  5009               	movf	??___fltol^0,w,c
  5868  003F94  6E0D               	movwf	___fltol@sign1^0,c
  5869  003F96  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5870  003F98  0EFF               	movlw	255
  5871  003F9A  1605               	andwf	___fltol@f1^0,f,c
  5872  003F9C  0EFF               	movlw	255
  5873  003F9E  1606               	andwf	(___fltol@f1+1)^0,f,c
  5874  003FA0  0EFF               	movlw	255
  5875  003FA2  1607               	andwf	(___fltol@f1+2)^0,f,c
  5876  003FA4  0E00               	movlw	0
  5877  003FA6  1608               	andwf	(___fltol@f1+3)^0,f,c
  5878  003FA8  0E96               	movlw	150
  5879  003FAA  5E0E               	subwf	___fltol@exp1^0,f,c
  5880  003FAC  BE0E               	btfsc	___fltol@exp1^0,7,c
  5881  003FAE  EFDD  F01F         	goto	u12250
  5882  003FB2  EFDB  F01F         	goto	u12251
  5883  003FB6                     u12251:
  5884  003FB6  EFF3  F01F         	goto	l10853
  5885  003FBA                     u12250:
  5886  003FBA  500E               	movf	___fltol@exp1^0,w,c
  5887  003FBC  0A80               	xorlw	128
  5888  003FBE  0F97               	addlw	151
  5889  003FC0  B0D8               	btfsc	status,0,c
  5890  003FC2  EFE5  F01F         	goto	u12261
  5891  003FC6  EFE7  F01F         	goto	u12260
  5892  003FCA                     u12261:
  5893  003FCA  EFE9  F01F         	goto	l10849
  5894  003FCE                     u12260:
  5895  003FCE  EFAC  F01F         	goto	l10829
  5896  003FD2                     l10849:
  5897  003FD2  90D8               	bcf	status,0,c
  5898  003FD4  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5899  003FD6  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5900  003FD8  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5901  003FDA  3205               	rrcf	___fltol@f1^0,f,c
  5902  003FDC  3E0E               	incfsz	___fltol@exp1^0,f,c
  5903  003FDE  EFE9  F01F         	goto	l10849
  5904  003FE2  EF0B  F020         	goto	l10863
  5905  003FE6                     l10853:
  5906  003FE6  0E1F               	movlw	31
  5907  003FE8  640E               	cpfsgt	___fltol@exp1^0,c
  5908  003FEA  EFF9  F01F         	goto	u12271
  5909  003FEE  EFFB  F01F         	goto	u12270
  5910  003FF2                     u12271:
  5911  003FF2  EF03  F020         	goto	l10861
  5912  003FF6                     u12270:
  5913  003FF6  EFAC  F01F         	goto	l10829
  5914  003FFA                     l10859:
  5915  003FFA  90D8               	bcf	status,0,c
  5916  003FFC  3605               	rlcf	___fltol@f1^0,f,c
  5917  003FFE  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5918  004000  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5919  004002  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5920  004004  060E               	decf	___fltol@exp1^0,f,c
  5921  004006                     l10861:
  5922  004006  500E               	movf	___fltol@exp1^0,w,c
  5923  004008  A4D8               	btfss	status,2,c
  5924  00400A  EF09  F020         	goto	u12281
  5925  00400E  EF0B  F020         	goto	u12280
  5926  004012                     u12281:
  5927  004012  EFFD  F01F         	goto	l10859
  5928  004016                     u12280:
  5929  004016                     l10863:
  5930  004016  500D               	movf	___fltol@sign1^0,w,c
  5931  004018  B4D8               	btfsc	status,2,c
  5932  00401A  EF11  F020         	goto	u12291
  5933  00401E  EF13  F020         	goto	u12290
  5934  004022                     u12291:
  5935  004022  EF1B  F020         	goto	l10867
  5936  004026                     u12290:
  5937  004026  1E08               	comf	(___fltol@f1+3)^0,f,c
  5938  004028  1E07               	comf	(___fltol@f1+2)^0,f,c
  5939  00402A  1E06               	comf	(___fltol@f1+1)^0,f,c
  5940  00402C  6C05               	negf	___fltol@f1^0,c
  5941  00402E  0E00               	movlw	0
  5942  004030  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5943  004032  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5944  004034  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5945  004036                     l10867:
  5946  004036  C005  F005         	movff	___fltol@f1,?___fltol
  5947  00403A  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5948  00403E  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5949  004042  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5950  004046                     l2061:
  5951  004046  0012               	return		;funcret
  5952  004048                     __end_of___fltol:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function ___flsub *****************
  5956 ;; Defined at:
  5957 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  b               4   29[COMRAM] long 
  5960 ;;  a               4   33[COMRAM] long 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  4   29[COMRAM] long 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5972 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;Total ram usage:        8 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 5
  5979 ;; This function calls:
  5980 ;;		___fladd
  5981 ;; This function is called by:
  5982 ;;		_efgtoa
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text17
  5987  00525A                     __ptext17:
  5988                           	callstack 0
  5989  00525A                     ___flsub:
  5990                           	callstack 20
  5991  00525A  0E00               	movlw	0
  5992  00525C  1A22               	xorwf	___flsub@a^0,f,c
  5993  00525E  0E00               	movlw	0
  5994  005260  1A23               	xorwf	(___flsub@a+1)^0,f,c
  5995  005262  0E00               	movlw	0
  5996  005264  1A24               	xorwf	(___flsub@a+2)^0,f,c
  5997  005266  0E80               	movlw	128
  5998  005268  1A25               	xorwf	(___flsub@a+3)^0,f,c
  5999  00526A  C01E  F005         	movff	___flsub@b,___fladd@b
  6000  00526E  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  6001  005272  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  6002  005276  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  6003  00527A  C022  F009         	movff	___flsub@a,___fladd@a
  6004  00527E  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  6005  005282  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  6006  005286  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  6007  00528A  EC48  F00E         	call	___fladd	;wreg free
  6008  00528E  C005  F01E         	movff	?___fladd,?___flsub
  6009  005292  C006  F01F         	movff	?___fladd+1,?___flsub+1
  6010  005296  C007  F020         	movff	?___fladd+2,?___flsub+2
  6011  00529A  C008  F021         	movff	?___fladd+3,?___flsub+3
  6012  00529E  0012               	return		;funcret
  6013  0052A0                     __end_of___flsub:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function ___fladd *****************
  6017 ;; Defined at:
  6018 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  b               4    4[COMRAM] long 
  6021 ;;  a               4    8[COMRAM] long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  grs             1   19[COMRAM] unsigned char 
  6024 ;;  bexp            1   18[COMRAM] unsigned char 
  6025 ;;  aexp            1   17[COMRAM] unsigned char 
  6026 ;;  signs           1   16[COMRAM] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4    4[COMRAM] unsigned char 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;Total ram usage:       16 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 4
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		___flsub
  6047 ;;		_efgtoa
  6048 ;;		_Servo_SetAngle
  6049 ;;		_async_config_baud_rate_gen
  6050 ;;		_I2C_Master_Mode_Clock_Configurations
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text18
  6055  001C90                     __ptext18:
  6056                           	callstack 0
  6057  001C90                     ___fladd:
  6058                           	callstack 20
  6059  001C90  5008               	movf	(___fladd@b+3)^0,w,c
  6060  001C92  0B80               	andlw	128
  6061  001C94  6E11               	movwf	___fladd@signs^0,c
  6062  001C96  5008               	movf	(___fladd@b+3)^0,w,c
  6063  001C98  2408               	addwf	(___fladd@b+3)^0,w,c
  6064  001C9A  6E13               	movwf	___fladd@bexp^0,c
  6065  001C9C  AE07               	btfss	(___fladd@b+2)^0,7,c
  6066  001C9E  EF53  F00E         	goto	u11041
  6067  001CA2  EF55  F00E         	goto	u11040
  6068  001CA6                     u11041:
  6069  001CA6  EF56  F00E         	goto	l10129
  6070  001CAA                     u11040:
  6071  001CAA  8013               	bsf	___fladd@bexp^0,0,c
  6072  001CAC                     l10129:
  6073  001CAC  5013               	movf	___fladd@bexp^0,w,c
  6074  001CAE  B4D8               	btfsc	status,2,c
  6075  001CB0  EF5C  F00E         	goto	u11051
  6076  001CB4  EF5E  F00E         	goto	u11050
  6077  001CB8                     u11051:
  6078  001CB8  EF73  F00E         	goto	l10139
  6079  001CBC                     u11050:
  6080  001CBC  2813               	incf	___fladd@bexp^0,w,c
  6081  001CBE  A4D8               	btfss	status,2,c
  6082  001CC0  EF64  F00E         	goto	u11061
  6083  001CC4  EF66  F00E         	goto	u11060
  6084  001CC8                     u11061:
  6085  001CC8  EF6E  F00E         	goto	l10135
  6086  001CCC                     u11060:
  6087  001CCC  0E00               	movlw	0
  6088  001CCE  6E05               	movwf	___fladd@b^0,c
  6089  001CD0  0E00               	movlw	0
  6090  001CD2  6E06               	movwf	(___fladd@b+1)^0,c
  6091  001CD4  0E00               	movlw	0
  6092  001CD6  6E07               	movwf	(___fladd@b+2)^0,c
  6093  001CD8  0E00               	movlw	0
  6094  001CDA  6E08               	movwf	(___fladd@b+3)^0,c
  6095  001CDC                     l10135:
  6096  001CDC  8E07               	bsf	(___fladd@b+2)^0,7,c
  6097  001CDE  0E00               	movlw	0
  6098  001CE0  6E08               	movwf	(___fladd@b+3)^0,c
  6099  001CE2  EF7B  F00E         	goto	l10141
  6100  001CE6                     l10139:
  6101  001CE6  0E00               	movlw	0
  6102  001CE8  6E05               	movwf	___fladd@b^0,c
  6103  001CEA  0E00               	movlw	0
  6104  001CEC  6E06               	movwf	(___fladd@b+1)^0,c
  6105  001CEE  0E00               	movlw	0
  6106  001CF0  6E07               	movwf	(___fladd@b+2)^0,c
  6107  001CF2  0E00               	movlw	0
  6108  001CF4  6E08               	movwf	(___fladd@b+3)^0,c
  6109  001CF6                     l10141:
  6110  001CF6  500C               	movf	(___fladd@a+3)^0,w,c
  6111  001CF8  0B80               	andlw	128
  6112  001CFA  6E12               	movwf	___fladd@aexp^0,c
  6113  001CFC  5011               	movf	___fladd@signs^0,w,c
  6114  001CFE  1812               	xorwf	___fladd@aexp^0,w,c
  6115  001D00  B4D8               	btfsc	status,2,c
  6116  001D02  EF85  F00E         	goto	u11071
  6117  001D06  EF87  F00E         	goto	u11070
  6118  001D0A                     u11071:
  6119  001D0A  EF88  F00E         	goto	l10147
  6120  001D0E                     u11070:
  6121  001D0E  8C11               	bsf	___fladd@signs^0,6,c
  6122  001D10                     l10147:
  6123  001D10  500C               	movf	(___fladd@a+3)^0,w,c
  6124  001D12  240C               	addwf	(___fladd@a+3)^0,w,c
  6125  001D14  6E12               	movwf	___fladd@aexp^0,c
  6126  001D16  AE0B               	btfss	(___fladd@a+2)^0,7,c
  6127  001D18  EF90  F00E         	goto	u11081
  6128  001D1C  EF92  F00E         	goto	u11080
  6129  001D20                     u11081:
  6130  001D20  EF93  F00E         	goto	l10153
  6131  001D24                     u11080:
  6132  001D24  8012               	bsf	___fladd@aexp^0,0,c
  6133  001D26                     l10153:
  6134  001D26  5012               	movf	___fladd@aexp^0,w,c
  6135  001D28  B4D8               	btfsc	status,2,c
  6136  001D2A  EF99  F00E         	goto	u11091
  6137  001D2E  EF9B  F00E         	goto	u11090
  6138  001D32                     u11091:
  6139  001D32  EFB0  F00E         	goto	l10163
  6140  001D36                     u11090:
  6141  001D36  2812               	incf	___fladd@aexp^0,w,c
  6142  001D38  A4D8               	btfss	status,2,c
  6143  001D3A  EFA1  F00E         	goto	u11101
  6144  001D3E  EFA3  F00E         	goto	u11100
  6145  001D42                     u11101:
  6146  001D42  EFAB  F00E         	goto	l10159
  6147  001D46                     u11100:
  6148  001D46  0E00               	movlw	0
  6149  001D48  6E09               	movwf	___fladd@a^0,c
  6150  001D4A  0E00               	movlw	0
  6151  001D4C  6E0A               	movwf	(___fladd@a+1)^0,c
  6152  001D4E  0E00               	movlw	0
  6153  001D50  6E0B               	movwf	(___fladd@a+2)^0,c
  6154  001D52  0E00               	movlw	0
  6155  001D54  6E0C               	movwf	(___fladd@a+3)^0,c
  6156  001D56                     l10159:
  6157  001D56  8E0B               	bsf	(___fladd@a+2)^0,7,c
  6158  001D58  0E00               	movlw	0
  6159  001D5A  6E0C               	movwf	(___fladd@a+3)^0,c
  6160  001D5C  EFB8  F00E         	goto	l10165
  6161  001D60                     l10163:
  6162  001D60  0E00               	movlw	0
  6163  001D62  6E09               	movwf	___fladd@a^0,c
  6164  001D64  0E00               	movlw	0
  6165  001D66  6E0A               	movwf	(___fladd@a+1)^0,c
  6166  001D68  0E00               	movlw	0
  6167  001D6A  6E0B               	movwf	(___fladd@a+2)^0,c
  6168  001D6C  0E00               	movlw	0
  6169  001D6E  6E0C               	movwf	(___fladd@a+3)^0,c
  6170  001D70                     l10165:
  6171  001D70  5013               	movf	___fladd@bexp^0,w,c
  6172  001D72  5C12               	subwf	___fladd@aexp^0,w,c
  6173  001D74  B0D8               	btfsc	status,0,c
  6174  001D76  EFBF  F00E         	goto	u11111
  6175  001D7A  EFC1  F00E         	goto	u11110
  6176  001D7E                     u11111:
  6177  001D7E  EFE8  F00E         	goto	l10201
  6178  001D82                     u11110:
  6179  001D82  AC11               	btfss	___fladd@signs^0,6,c
  6180  001D84  EFC6  F00E         	goto	u11121
  6181  001D88  EFC8  F00E         	goto	u11120
  6182  001D8C                     u11121:
  6183  001D8C  EFCA  F00E         	goto	l10171
  6184  001D90                     u11120:
  6185  001D90  0E80               	movlw	128
  6186  001D92  1A11               	xorwf	___fladd@signs^0,f,c
  6187  001D94                     l10171:
  6188  001D94  C013  F014         	movff	___fladd@bexp,___fladd@grs
  6189  001D98  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6190  001D9C  C014  F012         	movff	___fladd@grs,___fladd@aexp
  6191  001DA0  C005  F014         	movff	___fladd@b,___fladd@grs
  6192  001DA4  C009  F005         	movff	___fladd@a,___fladd@b
  6193  001DA8  C014  F009         	movff	___fladd@grs,___fladd@a
  6194  001DAC  C006  F014         	movff	___fladd@b+1,___fladd@grs
  6195  001DB0  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  6196  001DB4  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  6197  001DB8  C007  F014         	movff	___fladd@b+2,___fladd@grs
  6198  001DBC  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  6199  001DC0  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  6200  001DC4  C008  F014         	movff	___fladd@b+3,___fladd@grs
  6201  001DC8  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  6202  001DCC  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  6203  001DD0                     l10201:
  6204  001DD0  0E00               	movlw	0
  6205  001DD2  6E14               	movwf	___fladd@grs^0,c
  6206  001DD4  5013               	movf	___fladd@bexp^0,w,c
  6207  001DD6  C012  F00D         	movff	___fladd@aexp,??___fladd
  6208  001DDA  6A0E               	clrf	(??___fladd+1)^0,c
  6209  001DDC  5E0D               	subwf	??___fladd^0,f,c
  6210  001DDE  0E00               	movlw	0
  6211  001DE0  5A0E               	subwfb	(??___fladd+1)^0,f,c
  6212  001DE2  BE0E               	btfsc	(??___fladd+1)^0,7,c
  6213  001DE4  EFFD  F00E         	goto	u11131
  6214  001DE8  500E               	movf	(??___fladd+1)^0,w,c
  6215  001DEA  E109               	bnz	u11130
  6216  001DEC  0E1A               	movlw	26
  6217  001DEE  5C0D               	subwf	??___fladd^0,w,c
  6218  001DF0  A0D8               	btfss	status,0,c
  6219  001DF2  EFFD  F00E         	goto	u11131
  6220  001DF6  EFFF  F00E         	goto	u11130
  6221  001DFA                     u11131:
  6222  001DFA  EF36  F00F         	goto	l2293
  6223  001DFE                     u11130:
  6224  001DFE  5005               	movf	___fladd@b^0,w,c
  6225  001E00  1006               	iorwf	(___fladd@b+1)^0,w,c
  6226  001E02  1007               	iorwf	(___fladd@b+2)^0,w,c
  6227  001E04  1008               	iorwf	(___fladd@b+3)^0,w,c
  6228  001E06  A4D8               	btfss	status,2,c
  6229  001E08  EF08  F00F         	goto	u11141
  6230  001E0C  EF0B  F00F         	goto	u11140
  6231  001E10                     u11141:
  6232  001E10  0E01               	movlw	1
  6233  001E12  EF0C  F00F         	goto	u11150
  6234  001E16                     u11140:
  6235  001E16  0E00               	movlw	0
  6236  001E18                     u11150:
  6237  001E18  6E14               	movwf	___fladd@grs^0,c
  6238  001E1A  0E00               	movlw	0
  6239  001E1C  6E05               	movwf	___fladd@b^0,c
  6240  001E1E  0E00               	movlw	0
  6241  001E20  6E06               	movwf	(___fladd@b+1)^0,c
  6242  001E22  0E00               	movlw	0
  6243  001E24  6E07               	movwf	(___fladd@b+2)^0,c
  6244  001E26  0E00               	movlw	0
  6245  001E28  6E08               	movwf	(___fladd@b+3)^0,c
  6246  001E2A  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6247  001E2E  EF3F  F00F         	goto	l2292
  6248  001E32                     l2294:
  6249  001E32  A014               	btfss	___fladd@grs^0,0,c
  6250  001E34  EF1E  F00F         	goto	u11161
  6251  001E38  EF20  F00F         	goto	u11160
  6252  001E3C                     u11161:
  6253  001E3C  EF26  F00F         	goto	l10213
  6254  001E40                     u11160:
  6255  001E40  90D8               	bcf	status,0,c
  6256  001E42  3014               	rrcf	___fladd@grs^0,w,c
  6257  001E44  0901               	iorlw	1
  6258  001E46  6E14               	movwf	___fladd@grs^0,c
  6259  001E48  EF28  F00F         	goto	l10215
  6260  001E4C                     l10213:
  6261  001E4C  90D8               	bcf	status,0,c
  6262  001E4E  3214               	rrcf	___fladd@grs^0,f,c
  6263  001E50                     l10215:
  6264  001E50  A005               	btfss	___fladd@b^0,0,c
  6265  001E52  EF2D  F00F         	goto	u11171
  6266  001E56  EF2F  F00F         	goto	u11170
  6267  001E5A                     u11171:
  6268  001E5A  EF30  F00F         	goto	l10219
  6269  001E5E                     u11170:
  6270  001E5E  8E14               	bsf	___fladd@grs^0,7,c
  6271  001E60                     l10219:
  6272  001E60  3408               	rlcf	(___fladd@b+3)^0,w,c
  6273  001E62  3208               	rrcf	(___fladd@b+3)^0,f,c
  6274  001E64  3207               	rrcf	(___fladd@b+2)^0,f,c
  6275  001E66  3206               	rrcf	(___fladd@b+1)^0,f,c
  6276  001E68  3205               	rrcf	___fladd@b^0,f,c
  6277  001E6A  2A13               	incf	___fladd@bexp^0,f,c
  6278  001E6C                     l2293:
  6279  001E6C  5012               	movf	___fladd@aexp^0,w,c
  6280  001E6E  5C13               	subwf	___fladd@bexp^0,w,c
  6281  001E70  A0D8               	btfss	status,0,c
  6282  001E72  EF3D  F00F         	goto	u11181
  6283  001E76  EF3F  F00F         	goto	u11180
  6284  001E7A                     u11181:
  6285  001E7A  EF19  F00F         	goto	l2294
  6286  001E7E                     u11180:
  6287  001E7E                     l2292:
  6288  001E7E  BC11               	btfsc	___fladd@signs^0,6,c
  6289  001E80  EF44  F00F         	goto	u11191
  6290  001E84  EF46  F00F         	goto	u11190
  6291  001E88                     u11191:
  6292  001E88  EF86  F00F         	goto	l10247
  6293  001E8C                     u11190:
  6294  001E8C  5013               	movf	___fladd@bexp^0,w,c
  6295  001E8E  A4D8               	btfss	status,2,c
  6296  001E90  EF4C  F00F         	goto	u11201
  6297  001E94  EF4E  F00F         	goto	u11200
  6298  001E98                     u11201:
  6299  001E98  EF58  F00F         	goto	l10229
  6300  001E9C                     u11200:
  6301  001E9C  0E00               	movlw	0
  6302  001E9E  6E05               	movwf	?___fladd^0,c
  6303  001EA0  0E00               	movlw	0
  6304  001EA2  6E06               	movwf	(?___fladd+1)^0,c
  6305  001EA4  0E00               	movlw	0
  6306  001EA6  6E07               	movwf	(?___fladd+2)^0,c
  6307  001EA8  0E00               	movlw	0
  6308  001EAA  6E08               	movwf	(?___fladd+3)^0,c
  6309  001EAC  EFA7  F010         	goto	l2301
  6310  001EB0                     l10229:
  6311  001EB0  5009               	movf	___fladd@a^0,w,c
  6312  001EB2  2605               	addwf	___fladd@b^0,f,c
  6313  001EB4  500A               	movf	(___fladd@a+1)^0,w,c
  6314  001EB6  2206               	addwfc	(___fladd@b+1)^0,f,c
  6315  001EB8  500B               	movf	(___fladd@a+2)^0,w,c
  6316  001EBA  2207               	addwfc	(___fladd@b+2)^0,f,c
  6317  001EBC  500C               	movf	(___fladd@a+3)^0,w,c
  6318  001EBE  2208               	addwfc	(___fladd@b+3)^0,f,c
  6319  001EC0  A008               	btfss	(___fladd@b+3)^0,0,c
  6320  001EC2  EF65  F00F         	goto	u11211
  6321  001EC6  EF67  F00F         	goto	u11210
  6322  001ECA                     u11211:
  6323  001ECA  EF13  F010         	goto	l10283
  6324  001ECE                     u11210:
  6325  001ECE  A014               	btfss	___fladd@grs^0,0,c
  6326  001ED0  EF6C  F00F         	goto	u11221
  6327  001ED4  EF6E  F00F         	goto	u11220
  6328  001ED8                     u11221:
  6329  001ED8  EF74  F00F         	goto	l10237
  6330  001EDC                     u11220:
  6331  001EDC  90D8               	bcf	status,0,c
  6332  001EDE  3014               	rrcf	___fladd@grs^0,w,c
  6333  001EE0  0901               	iorlw	1
  6334  001EE2  6E14               	movwf	___fladd@grs^0,c
  6335  001EE4  EF76  F00F         	goto	l10239
  6336  001EE8                     l10237:
  6337  001EE8  90D8               	bcf	status,0,c
  6338  001EEA  3214               	rrcf	___fladd@grs^0,f,c
  6339  001EEC                     l10239:
  6340  001EEC  A005               	btfss	___fladd@b^0,0,c
  6341  001EEE  EF7B  F00F         	goto	u11231
  6342  001EF2  EF7D  F00F         	goto	u11230
  6343  001EF6                     u11231:
  6344  001EF6  EF7E  F00F         	goto	l10243
  6345  001EFA                     u11230:
  6346  001EFA  8E14               	bsf	___fladd@grs^0,7,c
  6347  001EFC                     l10243:
  6348  001EFC  3408               	rlcf	(___fladd@b+3)^0,w,c
  6349  001EFE  3208               	rrcf	(___fladd@b+3)^0,f,c
  6350  001F00  3207               	rrcf	(___fladd@b+2)^0,f,c
  6351  001F02  3206               	rrcf	(___fladd@b+1)^0,f,c
  6352  001F04  3205               	rrcf	___fladd@b^0,f,c
  6353  001F06  2A13               	incf	___fladd@bexp^0,f,c
  6354  001F08  EF13  F010         	goto	l10283
  6355  001F0C                     l10247:
  6356  001F0C  5009               	movf	___fladd@a^0,w,c
  6357  001F0E  5C05               	subwf	___fladd@b^0,w,c
  6358  001F10  500A               	movf	(___fladd@a+1)^0,w,c
  6359  001F12  5806               	subwfb	(___fladd@b+1)^0,w,c
  6360  001F14  500B               	movf	(___fladd@a+2)^0,w,c
  6361  001F16  5807               	subwfb	(___fladd@b+2)^0,w,c
  6362  001F18  5008               	movf	(___fladd@b+3)^0,w,c
  6363  001F1A  0A80               	xorlw	128
  6364  001F1C  6E0D               	movwf	??___fladd^0,c
  6365  001F1E  500C               	movf	(___fladd@a+3)^0,w,c
  6366  001F20  0A80               	xorlw	128
  6367  001F22  580D               	subwfb	??___fladd^0,w,c
  6368  001F24  B0D8               	btfsc	status,0,c
  6369  001F26  EF97  F00F         	goto	u11241
  6370  001F2A  EF99  F00F         	goto	u11240
  6371  001F2E                     u11241:
  6372  001F2E  EFC4  F00F         	goto	l10257
  6373  001F32                     u11240:
  6374  001F32  5005               	movf	___fladd@b^0,w,c
  6375  001F34  5C09               	subwf	___fladd@a^0,w,c
  6376  001F36  6E0D               	movwf	??___fladd^0,c
  6377  001F38  5006               	movf	(___fladd@b+1)^0,w,c
  6378  001F3A  580A               	subwfb	(___fladd@a+1)^0,w,c
  6379  001F3C  6E0E               	movwf	(??___fladd+1)^0,c
  6380  001F3E  5007               	movf	(___fladd@b+2)^0,w,c
  6381  001F40  580B               	subwfb	(___fladd@a+2)^0,w,c
  6382  001F42  6E0F               	movwf	(??___fladd+2)^0,c
  6383  001F44  5008               	movf	(___fladd@b+3)^0,w,c
  6384  001F46  580C               	subwfb	(___fladd@a+3)^0,w,c
  6385  001F48  6E10               	movwf	(??___fladd+3)^0,c
  6386  001F4A  0EFF               	movlw	255
  6387  001F4C  240D               	addwf	??___fladd^0,w,c
  6388  001F4E  6E05               	movwf	___fladd@b^0,c
  6389  001F50  0EFF               	movlw	255
  6390  001F52  200E               	addwfc	(??___fladd+1)^0,w,c
  6391  001F54  6E06               	movwf	(___fladd@b+1)^0,c
  6392  001F56  0EFF               	movlw	255
  6393  001F58  200F               	addwfc	(??___fladd+2)^0,w,c
  6394  001F5A  6E07               	movwf	(___fladd@b+2)^0,c
  6395  001F5C  0EFF               	movlw	255
  6396  001F5E  2010               	addwfc	(??___fladd+3)^0,w,c
  6397  001F60  6E08               	movwf	(___fladd@b+3)^0,c
  6398  001F62  0E80               	movlw	128
  6399  001F64  1A11               	xorwf	___fladd@signs^0,f,c
  6400  001F66  6C14               	negf	___fladd@grs^0,c
  6401  001F68  5014               	movf	___fladd@grs^0,w,c
  6402  001F6A  A4D8               	btfss	status,2,c
  6403  001F6C  EFBA  F00F         	goto	u11251
  6404  001F70  EFBC  F00F         	goto	u11250
  6405  001F74                     u11251:
  6406  001F74  EFCC  F00F         	goto	l2309
  6407  001F78                     u11250:
  6408  001F78  0E01               	movlw	1
  6409  001F7A  2605               	addwf	___fladd@b^0,f,c
  6410  001F7C  0E00               	movlw	0
  6411  001F7E  2206               	addwfc	(___fladd@b+1)^0,f,c
  6412  001F80  2207               	addwfc	(___fladd@b+2)^0,f,c
  6413  001F82  2208               	addwfc	(___fladd@b+3)^0,f,c
  6414  001F84  EFCC  F00F         	goto	l2309
  6415  001F88                     l10257:
  6416  001F88  5009               	movf	___fladd@a^0,w,c
  6417  001F8A  5E05               	subwf	___fladd@b^0,f,c
  6418  001F8C  500A               	movf	(___fladd@a+1)^0,w,c
  6419  001F8E  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6420  001F90  500B               	movf	(___fladd@a+2)^0,w,c
  6421  001F92  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6422  001F94  500C               	movf	(___fladd@a+3)^0,w,c
  6423  001F96  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6424  001F98                     l2309:
  6425  001F98  5005               	movf	___fladd@b^0,w,c
  6426  001F9A  1006               	iorwf	(___fladd@b+1)^0,w,c
  6427  001F9C  1007               	iorwf	(___fladd@b+2)^0,w,c
  6428  001F9E  1008               	iorwf	(___fladd@b+3)^0,w,c
  6429  001FA0  A4D8               	btfss	status,2,c
  6430  001FA2  EFD5  F00F         	goto	u11261
  6431  001FA6  EFD7  F00F         	goto	u11260
  6432  001FAA                     u11261:
  6433  001FAA  EF0C  F010         	goto	l10281
  6434  001FAE                     u11260:
  6435  001FAE  5014               	movf	___fladd@grs^0,w,c
  6436  001FB0  A4D8               	btfss	status,2,c
  6437  001FB2  EFDD  F00F         	goto	u11271
  6438  001FB6  EFDF  F00F         	goto	u11270
  6439  001FBA                     u11271:
  6440  001FBA  EF0C  F010         	goto	l10281
  6441  001FBE                     u11270:
  6442  001FBE  0E00               	movlw	0
  6443  001FC0  6E05               	movwf	?___fladd^0,c
  6444  001FC2  0E00               	movlw	0
  6445  001FC4  6E06               	movwf	(?___fladd+1)^0,c
  6446  001FC6  0E00               	movlw	0
  6447  001FC8  6E07               	movwf	(?___fladd+2)^0,c
  6448  001FCA  0E00               	movlw	0
  6449  001FCC  6E08               	movwf	(?___fladd+3)^0,c
  6450  001FCE  EFA7  F010         	goto	l2301
  6451  001FD2                     l10265:
  6452  001FD2  90D8               	bcf	status,0,c
  6453  001FD4  3605               	rlcf	___fladd@b^0,f,c
  6454  001FD6  3606               	rlcf	(___fladd@b+1)^0,f,c
  6455  001FD8  3607               	rlcf	(___fladd@b+2)^0,f,c
  6456  001FDA  3608               	rlcf	(___fladd@b+3)^0,f,c
  6457  001FDC  AE14               	btfss	___fladd@grs^0,7,c
  6458  001FDE  EFF3  F00F         	goto	u11281
  6459  001FE2  EFF5  F00F         	goto	u11280
  6460  001FE6                     u11281:
  6461  001FE6  EFF6  F00F         	goto	l10271
  6462  001FEA                     u11280:
  6463  001FEA  8005               	bsf	___fladd@b^0,0,c
  6464  001FEC                     l10271:
  6465  001FEC  A014               	btfss	___fladd@grs^0,0,c
  6466  001FEE  EFFB  F00F         	goto	u11291
  6467  001FF2  EFFD  F00F         	goto	u11290
  6468  001FF6                     u11291:
  6469  001FF6  EF01  F010         	goto	l10275
  6470  001FFA                     u11290:
  6471  001FFA  80D8               	bsf	status,0,c
  6472  001FFC  3614               	rlcf	___fladd@grs^0,f,c
  6473  001FFE  EF03  F010         	goto	l10277
  6474  002002                     l10275:
  6475  002002  90D8               	bcf	status,0,c
  6476  002004  3614               	rlcf	___fladd@grs^0,f,c
  6477  002006                     l10277:
  6478  002006  5013               	movf	___fladd@bexp^0,w,c
  6479  002008  B4D8               	btfsc	status,2,c
  6480  00200A  EF09  F010         	goto	u11301
  6481  00200E  EF0B  F010         	goto	u11300
  6482  002012                     u11301:
  6483  002012  EF0C  F010         	goto	l10281
  6484  002016                     u11300:
  6485  002016  0613               	decf	___fladd@bexp^0,f,c
  6486  002018                     l10281:
  6487  002018  AE07               	btfss	(___fladd@b+2)^0,7,c
  6488  00201A  EF11  F010         	goto	u11311
  6489  00201E  EF13  F010         	goto	u11310
  6490  002022                     u11311:
  6491  002022  EFE9  F00F         	goto	l10265
  6492  002026                     u11310:
  6493  002026                     l10283:
  6494  002026  0E00               	movlw	0
  6495  002028  6E12               	movwf	___fladd@aexp^0,c
  6496  00202A  AE14               	btfss	___fladd@grs^0,7,c
  6497  00202C  EF1A  F010         	goto	u11321
  6498  002030  EF1C  F010         	goto	u11320
  6499  002034                     u11321:
  6500  002034  EF34  F010         	goto	l2318
  6501  002038                     u11320:
  6502  002038  C014  F00D         	movff	___fladd@grs,??___fladd
  6503  00203C  0E7F               	movlw	127
  6504  00203E  160D               	andwf	??___fladd^0,f,c
  6505  002040  B4D8               	btfsc	status,2,c
  6506  002042  EF25  F010         	goto	u11331
  6507  002046  EF27  F010         	goto	u11330
  6508  00204A                     u11331:
  6509  00204A  EF2B  F010         	goto	l2319
  6510  00204E                     u11330:
  6511  00204E                     l10289:
  6512  00204E  0E01               	movlw	1
  6513  002050  6E12               	movwf	___fladd@aexp^0,c
  6514  002052  EF34  F010         	goto	l2318
  6515  002056                     l2319:
  6516  002056  A005               	btfss	___fladd@b^0,0,c
  6517  002058  EF30  F010         	goto	u11341
  6518  00205C  EF32  F010         	goto	u11340
  6519  002060                     u11341:
  6520  002060  EF34  F010         	goto	l2318
  6521  002064                     u11340:
  6522  002064  EF27  F010         	goto	l10289
  6523  002068                     l2318:
  6524  002068  5012               	movf	___fladd@aexp^0,w,c
  6525  00206A  B4D8               	btfsc	status,2,c
  6526  00206C  EF3A  F010         	goto	u11351
  6527  002070  EF3C  F010         	goto	u11350
  6528  002074                     u11351:
  6529  002074  EF67  F010         	goto	l10301
  6530  002078                     u11350:
  6531  002078  0E01               	movlw	1
  6532  00207A  2605               	addwf	___fladd@b^0,f,c
  6533  00207C  0E00               	movlw	0
  6534  00207E  2206               	addwfc	(___fladd@b+1)^0,f,c
  6535  002080  2207               	addwfc	(___fladd@b+2)^0,f,c
  6536  002082  2208               	addwfc	(___fladd@b+3)^0,f,c
  6537  002084  A008               	btfss	(___fladd@b+3)^0,0,c
  6538  002086  EF47  F010         	goto	u11361
  6539  00208A  EF49  F010         	goto	u11360
  6540  00208E                     u11361:
  6541  00208E  EF67  F010         	goto	l10301
  6542  002092                     u11360:
  6543  002092  C005  F00D         	movff	___fladd@b,??___fladd
  6544  002096  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6545  00209A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6546  00209E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6547  0020A2  3410               	rlcf	(??___fladd+3)^0,w,c
  6548  0020A4  3210               	rrcf	(??___fladd+3)^0,f,c
  6549  0020A6  320F               	rrcf	(??___fladd+2)^0,f,c
  6550  0020A8  320E               	rrcf	(??___fladd+1)^0,f,c
  6551  0020AA  320D               	rrcf	??___fladd^0,f,c
  6552  0020AC  C00D  F005         	movff	??___fladd,___fladd@b
  6553  0020B0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6554  0020B4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6555  0020B8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6556  0020BC  2813               	incf	___fladd@bexp^0,w,c
  6557  0020BE  B4D8               	btfsc	status,2,c
  6558  0020C0  EF64  F010         	goto	u11371
  6559  0020C4  EF66  F010         	goto	u11370
  6560  0020C8                     u11371:
  6561  0020C8  EF67  F010         	goto	l10301
  6562  0020CC                     u11370:
  6563  0020CC  2A13               	incf	___fladd@bexp^0,f,c
  6564  0020CE                     l10301:
  6565  0020CE  2813               	incf	___fladd@bexp^0,w,c
  6566  0020D0  B4D8               	btfsc	status,2,c
  6567  0020D2  EF6D  F010         	goto	u11381
  6568  0020D6  EF6F  F010         	goto	u11380
  6569  0020DA                     u11381:
  6570  0020DA  EF77  F010         	goto	l10305
  6571  0020DE                     u11380:
  6572  0020DE  5013               	movf	___fladd@bexp^0,w,c
  6573  0020E0  A4D8               	btfss	status,2,c
  6574  0020E2  EF75  F010         	goto	u11391
  6575  0020E6  EF77  F010         	goto	u11390
  6576  0020EA                     u11391:
  6577  0020EA  EF89  F010         	goto	l10309
  6578  0020EE                     u11390:
  6579  0020EE                     l10305:
  6580  0020EE  0E00               	movlw	0
  6581  0020F0  6E05               	movwf	___fladd@b^0,c
  6582  0020F2  0E00               	movlw	0
  6583  0020F4  6E06               	movwf	(___fladd@b+1)^0,c
  6584  0020F6  0E00               	movlw	0
  6585  0020F8  6E07               	movwf	(___fladd@b+2)^0,c
  6586  0020FA  0E00               	movlw	0
  6587  0020FC  6E08               	movwf	(___fladd@b+3)^0,c
  6588  0020FE  5013               	movf	___fladd@bexp^0,w,c
  6589  002100  A4D8               	btfss	status,2,c
  6590  002102  EF85  F010         	goto	u11401
  6591  002106  EF87  F010         	goto	u11400
  6592  00210A                     u11401:
  6593  00210A  EF89  F010         	goto	l10309
  6594  00210E                     u11400:
  6595  00210E  0E00               	movlw	0
  6596  002110  6E11               	movwf	___fladd@signs^0,c
  6597  002112                     l10309:
  6598  002112  A013               	btfss	___fladd@bexp^0,0,c
  6599  002114  EF8E  F010         	goto	u11411
  6600  002118  EF90  F010         	goto	u11410
  6601  00211C                     u11411:
  6602  00211C  EF93  F010         	goto	l10313
  6603  002120                     u11410:
  6604  002120  8E07               	bsf	(___fladd@b+2)^0,7,c
  6605  002122  EF94  F010         	goto	l10315
  6606  002126                     l10313:
  6607  002126  9E07               	bcf	(___fladd@b+2)^0,7,c
  6608  002128                     l10315:
  6609  002128  90D8               	bcf	status,0,c
  6610  00212A  3013               	rrcf	___fladd@bexp^0,w,c
  6611  00212C  6E08               	movwf	(___fladd@b+3)^0,c
  6612  00212E  AE11               	btfss	___fladd@signs^0,7,c
  6613  002130  EF9C  F010         	goto	u11421
  6614  002134  EF9E  F010         	goto	u11420
  6615  002138                     u11421:
  6616  002138  EF9F  F010         	goto	l10321
  6617  00213C                     u11420:
  6618  00213C  8E08               	bsf	(___fladd@b+3)^0,7,c
  6619  00213E                     l10321:
  6620  00213E  C005  F005         	movff	___fladd@b,?___fladd
  6621  002142  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6622  002146  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6623  00214A  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6624  00214E                     l2301:
  6625  00214E  0012               	return		;funcret
  6626  002150                     __end_of___fladd:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function ___flneg *****************
  6630 ;; Defined at:
  6631 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  f1              4    4[COMRAM] unsigned char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  4    4[COMRAM] unsigned char 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        4 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 4
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_efgtoa
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text19
  6660  0053D2                     __ptext19:
  6661                           	callstack 0
  6662  0053D2                     ___flneg:
  6663                           	callstack 21
  6664  0053D2  5005               	movf	___flneg@f1^0,w,c
  6665  0053D4  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6666  0053D6  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6667  0053D8  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6668  0053DA  B4D8               	btfsc	status,2,c
  6669  0053DC  EFF2  F029         	goto	u12221
  6670  0053E0  EFF4  F029         	goto	u12220
  6671  0053E4                     u12221:
  6672  0053E4  EFFC  F029         	goto	l10823
  6673  0053E8                     u12220:
  6674  0053E8  0E00               	movlw	0
  6675  0053EA  1A05               	xorwf	___flneg@f1^0,f,c
  6676  0053EC  0E00               	movlw	0
  6677  0053EE  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6678  0053F0  0E00               	movlw	0
  6679  0053F2  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6680  0053F4  0E80               	movlw	128
  6681  0053F6  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6682  0053F8                     l10823:
  6683  0053F8  C005  F005         	movff	___flneg@f1,?___flneg
  6684  0053FC  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6685  005400  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6686  005404  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6687  005408  0012               	return		;funcret
  6688  00540A                     __end_of___flneg:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function ___flmul *****************
  6692 ;; Defined at:
  6693 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  b               4    4[COMRAM] unsigned char 
  6696 ;;  a               4    8[COMRAM] unsigned char 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  prod            4   23[COMRAM] struct .
  6699 ;;  grs             4   18[COMRAM] unsigned long 
  6700 ;;  temp            2   27[COMRAM] struct .
  6701 ;;  bexp            1   22[COMRAM] unsigned char 
  6702 ;;  aexp            1   17[COMRAM] unsigned char 
  6703 ;;  sign            1   16[COMRAM] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  4    4[COMRAM] unsigned char 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, prodl, prodh
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6713 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;Total ram usage:       25 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 4
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_efgtoa
  6724 ;;		_Servo_SetAngle
  6725 ;;		_CCP_PWM_Set_Duty
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text20
  6730  002150                     __ptext20:
  6731                           	callstack 0
  6732  002150                     ___flmul:
  6733                           	callstack 21
  6734  002150  5008               	movf	(___flmul@b+3)^0,w,c
  6735  002152  0B80               	andlw	128
  6736  002154  6E11               	movwf	___flmul@sign^0,c
  6737  002156  5008               	movf	(___flmul@b+3)^0,w,c
  6738  002158  2408               	addwf	(___flmul@b+3)^0,w,c
  6739  00215A  6E17               	movwf	___flmul@bexp^0,c
  6740  00215C  AE07               	btfss	(___flmul@b+2)^0,7,c
  6741  00215E  EFB3  F010         	goto	u11831
  6742  002162  EFB5  F010         	goto	u11830
  6743  002166                     u11831:
  6744  002166  EFB6  F010         	goto	l10571
  6745  00216A                     u11830:
  6746  00216A  8017               	bsf	___flmul@bexp^0,0,c
  6747  00216C                     l10571:
  6748  00216C  5017               	movf	___flmul@bexp^0,w,c
  6749  00216E  B4D8               	btfsc	status,2,c
  6750  002170  EFBC  F010         	goto	u11841
  6751  002174  EFBE  F010         	goto	u11840
  6752  002178                     u11841:
  6753  002178  EFD1  F010         	goto	l10579
  6754  00217C                     u11840:
  6755  00217C  2817               	incf	___flmul@bexp^0,w,c
  6756  00217E  A4D8               	btfss	status,2,c
  6757  002180  EFC4  F010         	goto	u11851
  6758  002184  EFC6  F010         	goto	u11850
  6759  002188                     u11851:
  6760  002188  EFCE  F010         	goto	l10577
  6761  00218C                     u11850:
  6762  00218C  0E00               	movlw	0
  6763  00218E  6E05               	movwf	___flmul@b^0,c
  6764  002190  0E00               	movlw	0
  6765  002192  6E06               	movwf	(___flmul@b+1)^0,c
  6766  002194  0E00               	movlw	0
  6767  002196  6E07               	movwf	(___flmul@b+2)^0,c
  6768  002198  0E00               	movlw	0
  6769  00219A  6E08               	movwf	(___flmul@b+3)^0,c
  6770  00219C                     l10577:
  6771  00219C  8E07               	bsf	(___flmul@b+2)^0,7,c
  6772  00219E  EFD9  F010         	goto	l10581
  6773  0021A2                     l10579:
  6774  0021A2  0E00               	movlw	0
  6775  0021A4  6E05               	movwf	___flmul@b^0,c
  6776  0021A6  0E00               	movlw	0
  6777  0021A8  6E06               	movwf	(___flmul@b+1)^0,c
  6778  0021AA  0E00               	movlw	0
  6779  0021AC  6E07               	movwf	(___flmul@b+2)^0,c
  6780  0021AE  0E00               	movlw	0
  6781  0021B0  6E08               	movwf	(___flmul@b+3)^0,c
  6782  0021B2                     l10581:
  6783  0021B2  500C               	movf	(___flmul@a+3)^0,w,c
  6784  0021B4  0B80               	andlw	128
  6785  0021B6  1A11               	xorwf	___flmul@sign^0,f,c
  6786  0021B8  500C               	movf	(___flmul@a+3)^0,w,c
  6787  0021BA  240C               	addwf	(___flmul@a+3)^0,w,c
  6788  0021BC  6E12               	movwf	___flmul@aexp^0,c
  6789  0021BE  AE0B               	btfss	(___flmul@a+2)^0,7,c
  6790  0021C0  EFE4  F010         	goto	u11861
  6791  0021C4  EFE6  F010         	goto	u11860
  6792  0021C8                     u11861:
  6793  0021C8  EFE7  F010         	goto	l10589
  6794  0021CC                     u11860:
  6795  0021CC  8012               	bsf	___flmul@aexp^0,0,c
  6796  0021CE                     l10589:
  6797  0021CE  5012               	movf	___flmul@aexp^0,w,c
  6798  0021D0  B4D8               	btfsc	status,2,c
  6799  0021D2  EFED  F010         	goto	u11871
  6800  0021D6  EFEF  F010         	goto	u11870
  6801  0021DA                     u11871:
  6802  0021DA  EF02  F011         	goto	l10597
  6803  0021DE                     u11870:
  6804  0021DE  2812               	incf	___flmul@aexp^0,w,c
  6805  0021E0  A4D8               	btfss	status,2,c
  6806  0021E2  EFF5  F010         	goto	u11881
  6807  0021E6  EFF7  F010         	goto	u11880
  6808  0021EA                     u11881:
  6809  0021EA  EFFF  F010         	goto	l10595
  6810  0021EE                     u11880:
  6811  0021EE  0E00               	movlw	0
  6812  0021F0  6E09               	movwf	___flmul@a^0,c
  6813  0021F2  0E00               	movlw	0
  6814  0021F4  6E0A               	movwf	(___flmul@a+1)^0,c
  6815  0021F6  0E00               	movlw	0
  6816  0021F8  6E0B               	movwf	(___flmul@a+2)^0,c
  6817  0021FA  0E00               	movlw	0
  6818  0021FC  6E0C               	movwf	(___flmul@a+3)^0,c
  6819  0021FE                     l10595:
  6820  0021FE  8E0B               	bsf	(___flmul@a+2)^0,7,c
  6821  002200  EF0A  F011         	goto	l2378
  6822  002204                     l10597:
  6823  002204  0E00               	movlw	0
  6824  002206  6E09               	movwf	___flmul@a^0,c
  6825  002208  0E00               	movlw	0
  6826  00220A  6E0A               	movwf	(___flmul@a+1)^0,c
  6827  00220C  0E00               	movlw	0
  6828  00220E  6E0B               	movwf	(___flmul@a+2)^0,c
  6829  002210  0E00               	movlw	0
  6830  002212  6E0C               	movwf	(___flmul@a+3)^0,c
  6831  002214                     l2378:
  6832  002214  5012               	movf	___flmul@aexp^0,w,c
  6833  002216  B4D8               	btfsc	status,2,c
  6834  002218  EF10  F011         	goto	u11891
  6835  00221C  EF12  F011         	goto	u11890
  6836  002220                     u11891:
  6837  002220  EF1A  F011         	goto	l10601
  6838  002224                     u11890:
  6839  002224  5017               	movf	___flmul@bexp^0,w,c
  6840  002226  A4D8               	btfss	status,2,c
  6841  002228  EF18  F011         	goto	u11901
  6842  00222C  EF1A  F011         	goto	u11900
  6843  002230                     u11901:
  6844  002230  EF24  F011         	goto	l10605
  6845  002234                     u11900:
  6846  002234                     l10601:
  6847  002234  0E00               	movlw	0
  6848  002236  6E05               	movwf	?___flmul^0,c
  6849  002238  0E00               	movlw	0
  6850  00223A  6E06               	movwf	(?___flmul+1)^0,c
  6851  00223C  0E00               	movlw	0
  6852  00223E  6E07               	movwf	(?___flmul+2)^0,c
  6853  002240  0E00               	movlw	0
  6854  002242  6E08               	movwf	(?___flmul+3)^0,c
  6855  002244  EFBC  F012         	goto	l2382
  6856  002248                     l10605:
  6857  002248  500B               	movf	(___flmul@a+2)^0,w,c
  6858  00224A  0205               	mulwf	___flmul@b^0,c
  6859  00224C  CFF3 F01C          	movff	prodl,___flmul@temp
  6860  002250  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6861  002254  501C               	movf	___flmul@temp^0,w,c
  6862  002256  6E13               	movwf	___flmul@grs^0,c
  6863  002258  6A14               	clrf	(___flmul@grs+1)^0,c
  6864  00225A  6A15               	clrf	(___flmul@grs+2)^0,c
  6865  00225C  6A16               	clrf	(___flmul@grs+3)^0,c
  6866  00225E  501D               	movf	(___flmul@temp+1)^0,w,c
  6867  002260  6E18               	movwf	___flmul@prod^0,c
  6868  002262  6A19               	clrf	(___flmul@prod+1)^0,c
  6869  002264  6A1A               	clrf	(___flmul@prod+2)^0,c
  6870  002266  6A1B               	clrf	(___flmul@prod+3)^0,c
  6871  002268  500A               	movf	(___flmul@a+1)^0,w,c
  6872  00226A  0206               	mulwf	(___flmul@b+1)^0,c
  6873  00226C  CFF3 F01C          	movff	prodl,___flmul@temp
  6874  002270  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6875  002274  501C               	movf	___flmul@temp^0,w,c
  6876  002276  2613               	addwf	___flmul@grs^0,f,c
  6877  002278  0E00               	movlw	0
  6878  00227A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6879  00227C  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6880  00227E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6881  002280  501D               	movf	(___flmul@temp+1)^0,w,c
  6882  002282  2618               	addwf	___flmul@prod^0,f,c
  6883  002284  0E00               	movlw	0
  6884  002286  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6885  002288  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6886  00228A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6887  00228C  5009               	movf	___flmul@a^0,w,c
  6888  00228E  0207               	mulwf	(___flmul@b+2)^0,c
  6889  002290  CFF3 F01C          	movff	prodl,___flmul@temp
  6890  002294  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6891  002298  501C               	movf	___flmul@temp^0,w,c
  6892  00229A  2613               	addwf	___flmul@grs^0,f,c
  6893  00229C  0E00               	movlw	0
  6894  00229E  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6895  0022A0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6896  0022A2  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6897  0022A4  501D               	movf	(___flmul@temp+1)^0,w,c
  6898  0022A6  2618               	addwf	___flmul@prod^0,f,c
  6899  0022A8  0E00               	movlw	0
  6900  0022AA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6901  0022AC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6902  0022AE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6903  0022B0  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6904  0022B4  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6905  0022B8  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6906  0022BC  6A13               	clrf	___flmul@grs^0,c
  6907  0022BE  5009               	movf	___flmul@a^0,w,c
  6908  0022C0  0206               	mulwf	(___flmul@b+1)^0,c
  6909  0022C2  CFF3 F01C          	movff	prodl,___flmul@temp
  6910  0022C6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6911  0022CA  501C               	movf	___flmul@temp^0,w,c
  6912  0022CC  2613               	addwf	___flmul@grs^0,f,c
  6913  0022CE  501D               	movf	(___flmul@temp+1)^0,w,c
  6914  0022D0  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6915  0022D2  0E00               	movlw	0
  6916  0022D4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6917  0022D6  0E00               	movlw	0
  6918  0022D8  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6919  0022DA  500A               	movf	(___flmul@a+1)^0,w,c
  6920  0022DC  0205               	mulwf	___flmul@b^0,c
  6921  0022DE  CFF3 F01C          	movff	prodl,___flmul@temp
  6922  0022E2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6923  0022E6  501C               	movf	___flmul@temp^0,w,c
  6924  0022E8  2613               	addwf	___flmul@grs^0,f,c
  6925  0022EA  501D               	movf	(___flmul@temp+1)^0,w,c
  6926  0022EC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6927  0022EE  0E00               	movlw	0
  6928  0022F0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6929  0022F2  0E00               	movlw	0
  6930  0022F4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6931  0022F6  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6932  0022FA  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6933  0022FE  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6934  002302  6A13               	clrf	___flmul@grs^0,c
  6935  002304  5009               	movf	___flmul@a^0,w,c
  6936  002306  0205               	mulwf	___flmul@b^0,c
  6937  002308  CFF3 F01C          	movff	prodl,___flmul@temp
  6938  00230C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6939  002310  501C               	movf	___flmul@temp^0,w,c
  6940  002312  2613               	addwf	___flmul@grs^0,f,c
  6941  002314  501D               	movf	(___flmul@temp+1)^0,w,c
  6942  002316  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6943  002318  0E00               	movlw	0
  6944  00231A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6945  00231C  0E00               	movlw	0
  6946  00231E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6947  002320  500B               	movf	(___flmul@a+2)^0,w,c
  6948  002322  0206               	mulwf	(___flmul@b+1)^0,c
  6949  002324  CFF3 F01C          	movff	prodl,___flmul@temp
  6950  002328  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6951  00232C  501C               	movf	___flmul@temp^0,w,c
  6952  00232E  2618               	addwf	___flmul@prod^0,f,c
  6953  002330  501D               	movf	(___flmul@temp+1)^0,w,c
  6954  002332  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6955  002334  0E00               	movlw	0
  6956  002336  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6957  002338  0E00               	movlw	0
  6958  00233A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6959  00233C  500A               	movf	(___flmul@a+1)^0,w,c
  6960  00233E  0207               	mulwf	(___flmul@b+2)^0,c
  6961  002340  CFF3 F01C          	movff	prodl,___flmul@temp
  6962  002344  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6963  002348  501C               	movf	___flmul@temp^0,w,c
  6964  00234A  2618               	addwf	___flmul@prod^0,f,c
  6965  00234C  501D               	movf	(___flmul@temp+1)^0,w,c
  6966  00234E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6967  002350  0E00               	movlw	0
  6968  002352  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6969  002354  0E00               	movlw	0
  6970  002356  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6971  002358  500B               	movf	(___flmul@a+2)^0,w,c
  6972  00235A  0207               	mulwf	(___flmul@b+2)^0,c
  6973  00235C  CFF3 F01C          	movff	prodl,___flmul@temp
  6974  002360  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6975  002364  501C               	movf	___flmul@temp^0,w,c
  6976  002366  6E0D               	movwf	??___flmul^0,c
  6977  002368  501D               	movf	(___flmul@temp+1)^0,w,c
  6978  00236A  6E0E               	movwf	(??___flmul+1)^0,c
  6979  00236C  6A0F               	clrf	(??___flmul+2)^0,c
  6980  00236E  6A10               	clrf	(??___flmul+3)^0,c
  6981  002370  C00F  F010         	movff	??___flmul+2,??___flmul+3
  6982  002374  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  6983  002378  C00D  F00E         	movff	??___flmul,??___flmul+1
  6984  00237C  6A0D               	clrf	??___flmul^0,c
  6985  00237E  500D               	movf	??___flmul^0,w,c
  6986  002380  2618               	addwf	___flmul@prod^0,f,c
  6987  002382  500E               	movf	(??___flmul+1)^0,w,c
  6988  002384  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6989  002386  500F               	movf	(??___flmul+2)^0,w,c
  6990  002388  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6991  00238A  5010               	movf	(??___flmul+3)^0,w,c
  6992  00238C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6993  00238E  C013  F00D         	movff	___flmul@grs,??___flmul
  6994  002392  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  6995  002396  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  6996  00239A  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  6997  00239E  0E19               	movlw	25
  6998  0023A0  EFD7  F011         	goto	u11910
  6999  0023A4                     u11915:
  7000  0023A4  90D8               	bcf	status,0,c
  7001  0023A6  3210               	rrcf	(??___flmul+3)^0,f,c
  7002  0023A8  320F               	rrcf	(??___flmul+2)^0,f,c
  7003  0023AA  320E               	rrcf	(??___flmul+1)^0,f,c
  7004  0023AC  320D               	rrcf	??___flmul^0,f,c
  7005  0023AE                     u11910:
  7006  0023AE  2EE8               	decfsz	wreg,f,c
  7007  0023B0  EFD2  F011         	goto	u11915
  7008  0023B4  500D               	movf	??___flmul^0,w,c
  7009  0023B6  2618               	addwf	___flmul@prod^0,f,c
  7010  0023B8  500E               	movf	(??___flmul+1)^0,w,c
  7011  0023BA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  7012  0023BC  500F               	movf	(??___flmul+2)^0,w,c
  7013  0023BE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  7014  0023C0  5010               	movf	(??___flmul+3)^0,w,c
  7015  0023C2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  7016  0023C4  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  7017  0023C8  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  7018  0023CC  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  7019  0023D0  6A13               	clrf	___flmul@grs^0,c
  7020  0023D2  5012               	movf	___flmul@aexp^0,w,c
  7021  0023D4  C017  F00D         	movff	___flmul@bexp,??___flmul
  7022  0023D8  6A0E               	clrf	(??___flmul+1)^0,c
  7023  0023DA  260D               	addwf	??___flmul^0,f,c
  7024  0023DC  0E00               	movlw	0
  7025  0023DE  220E               	addwfc	(??___flmul+1)^0,f,c
  7026  0023E0  0E82               	movlw	130
  7027  0023E2  240D               	addwf	??___flmul^0,w,c
  7028  0023E4  6E1C               	movwf	___flmul@temp^0,c
  7029  0023E6  0EFF               	movlw	255
  7030  0023E8  200E               	addwfc	(??___flmul+1)^0,w,c
  7031  0023EA  6E1D               	movwf	(___flmul@temp+1)^0,c
  7032  0023EC  EF0D  F012         	goto	l10653
  7033  0023F0                     l10647:
  7034  0023F0  90D8               	bcf	status,0,c
  7035  0023F2  3618               	rlcf	___flmul@prod^0,f,c
  7036  0023F4  3619               	rlcf	(___flmul@prod+1)^0,f,c
  7037  0023F6  361A               	rlcf	(___flmul@prod+2)^0,f,c
  7038  0023F8  361B               	rlcf	(___flmul@prod+3)^0,f,c
  7039  0023FA  AE16               	btfss	(___flmul@grs+3)^0,7,c
  7040  0023FC  EF02  F012         	goto	u11921
  7041  002400  EF04  F012         	goto	u11920
  7042  002404                     u11921:
  7043  002404  EF05  F012         	goto	l2385
  7044  002408                     u11920:
  7045  002408  8018               	bsf	___flmul@prod^0,0,c
  7046  00240A                     l2385:
  7047  00240A  90D8               	bcf	status,0,c
  7048  00240C  3613               	rlcf	___flmul@grs^0,f,c
  7049  00240E  3614               	rlcf	(___flmul@grs+1)^0,f,c
  7050  002410  3615               	rlcf	(___flmul@grs+2)^0,f,c
  7051  002412  3616               	rlcf	(___flmul@grs+3)^0,f,c
  7052  002414  061C               	decf	___flmul@temp^0,f,c
  7053  002416  A0D8               	btfss	status,0,c
  7054  002418  061D               	decf	(___flmul@temp+1)^0,f,c
  7055  00241A                     l10653:
  7056  00241A  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  7057  00241C  EF12  F012         	goto	u11931
  7058  002420  EF14  F012         	goto	u11930
  7059  002424                     u11931:
  7060  002424  EFF8  F011         	goto	l10647
  7061  002428                     u11930:
  7062  002428  0E00               	movlw	0
  7063  00242A  6E12               	movwf	___flmul@aexp^0,c
  7064  00242C  AE16               	btfss	(___flmul@grs+3)^0,7,c
  7065  00242E  EF1B  F012         	goto	u11941
  7066  002432  EF1D  F012         	goto	u11940
  7067  002436                     u11941:
  7068  002436  EF41  F012         	goto	l2387
  7069  00243A                     u11940:
  7070  00243A  0EFF               	movlw	255
  7071  00243C  1413               	andwf	___flmul@grs^0,w,c
  7072  00243E  6E0D               	movwf	??___flmul^0,c
  7073  002440  0EFF               	movlw	255
  7074  002442  1414               	andwf	(___flmul@grs+1)^0,w,c
  7075  002444  6E0E               	movwf	(??___flmul+1)^0,c
  7076  002446  0EFF               	movlw	255
  7077  002448  1415               	andwf	(___flmul@grs+2)^0,w,c
  7078  00244A  6E0F               	movwf	(??___flmul+2)^0,c
  7079  00244C  0E7F               	movlw	127
  7080  00244E  1416               	andwf	(___flmul@grs+3)^0,w,c
  7081  002450  6E10               	movwf	(??___flmul+3)^0,c
  7082  002452  500D               	movf	??___flmul^0,w,c
  7083  002454  100E               	iorwf	(??___flmul+1)^0,w,c
  7084  002456  100F               	iorwf	(??___flmul+2)^0,w,c
  7085  002458  1010               	iorwf	(??___flmul+3)^0,w,c
  7086  00245A  B4D8               	btfsc	status,2,c
  7087  00245C  EF32  F012         	goto	u11951
  7088  002460  EF34  F012         	goto	u11950
  7089  002464                     u11951:
  7090  002464  EF38  F012         	goto	l2388
  7091  002468                     u11950:
  7092  002468                     l10661:
  7093  002468  0E01               	movlw	1
  7094  00246A  6E12               	movwf	___flmul@aexp^0,c
  7095  00246C  EF41  F012         	goto	l2387
  7096  002470                     l2388:
  7097  002470  A018               	btfss	___flmul@prod^0,0,c
  7098  002472  EF3D  F012         	goto	u11961
  7099  002476  EF3F  F012         	goto	u11960
  7100  00247A                     u11961:
  7101  00247A  EF41  F012         	goto	l2387
  7102  00247E                     u11960:
  7103  00247E  EF34  F012         	goto	l10661
  7104  002482                     l2387:
  7105  002482  5012               	movf	___flmul@aexp^0,w,c
  7106  002484  B4D8               	btfsc	status,2,c
  7107  002486  EF47  F012         	goto	u11971
  7108  00248A  EF49  F012         	goto	u11970
  7109  00248E                     u11971:
  7110  00248E  EF6D  F012         	goto	l10673
  7111  002492                     u11970:
  7112  002492  0E01               	movlw	1
  7113  002494  2618               	addwf	___flmul@prod^0,f,c
  7114  002496  0E00               	movlw	0
  7115  002498  2219               	addwfc	(___flmul@prod+1)^0,f,c
  7116  00249A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  7117  00249C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  7118  00249E  A01B               	btfss	(___flmul@prod+3)^0,0,c
  7119  0024A0  EF54  F012         	goto	u11981
  7120  0024A4  EF56  F012         	goto	u11980
  7121  0024A8                     u11981:
  7122  0024A8  EF6D  F012         	goto	l10673
  7123  0024AC                     u11980:
  7124  0024AC  C018  F00D         	movff	___flmul@prod,??___flmul
  7125  0024B0  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  7126  0024B4  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  7127  0024B8  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  7128  0024BC  3410               	rlcf	(??___flmul+3)^0,w,c
  7129  0024BE  3210               	rrcf	(??___flmul+3)^0,f,c
  7130  0024C0  320F               	rrcf	(??___flmul+2)^0,f,c
  7131  0024C2  320E               	rrcf	(??___flmul+1)^0,f,c
  7132  0024C4  320D               	rrcf	??___flmul^0,f,c
  7133  0024C6  C00D  F018         	movff	??___flmul,___flmul@prod
  7134  0024CA  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  7135  0024CE  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  7136  0024D2  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  7137  0024D6  4A1C               	infsnz	___flmul@temp^0,f,c
  7138  0024D8  2A1D               	incf	(___flmul@temp+1)^0,f,c
  7139  0024DA                     l10673:
  7140  0024DA  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  7141  0024DC  EF78  F012         	goto	u11991
  7142  0024E0  501D               	movf	(___flmul@temp+1)^0,w,c
  7143  0024E2  E108               	bnz	u11990
  7144  0024E4  281C               	incf	___flmul@temp^0,w,c
  7145  0024E6  A0D8               	btfss	status,0,c
  7146  0024E8  EF78  F012         	goto	u11991
  7147  0024EC  EF7A  F012         	goto	u11990
  7148  0024F0                     u11991:
  7149  0024F0  EF84  F012         	goto	l10677
  7150  0024F4                     u11990:
  7151  0024F4  0E00               	movlw	0
  7152  0024F6  6E18               	movwf	___flmul@prod^0,c
  7153  0024F8  0E00               	movlw	0
  7154  0024FA  6E19               	movwf	(___flmul@prod+1)^0,c
  7155  0024FC  0E80               	movlw	128
  7156  0024FE  6E1A               	movwf	(___flmul@prod+2)^0,c
  7157  002500  0E7F               	movlw	127
  7158  002502  6E1B               	movwf	(___flmul@prod+3)^0,c
  7159  002504  EFB2  F012         	goto	l10689
  7160  002508                     l10677:
  7161  002508  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  7162  00250A  EF91  F012         	goto	u12000
  7163  00250E  501D               	movf	(___flmul@temp+1)^0,w,c
  7164  002510  E106               	bnz	u12001
  7165  002512  041C               	decf	___flmul@temp^0,w,c
  7166  002514  B0D8               	btfsc	status,0,c
  7167  002516  EF8F  F012         	goto	u12001
  7168  00251A  EF91  F012         	goto	u12000
  7169  00251E                     u12001:
  7170  00251E  EF9D  F012         	goto	l2395
  7171  002522                     u12000:
  7172  002522  0E00               	movlw	0
  7173  002524  6E18               	movwf	___flmul@prod^0,c
  7174  002526  0E00               	movlw	0
  7175  002528  6E19               	movwf	(___flmul@prod+1)^0,c
  7176  00252A  0E00               	movlw	0
  7177  00252C  6E1A               	movwf	(___flmul@prod+2)^0,c
  7178  00252E  0E00               	movlw	0
  7179  002530  6E1B               	movwf	(___flmul@prod+3)^0,c
  7180  002532  0E00               	movlw	0
  7181  002534  6E11               	movwf	___flmul@sign^0,c
  7182  002536  EFB2  F012         	goto	l10689
  7183  00253A                     l2395:
  7184  00253A  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  7185  00253E  0EFF               	movlw	255
  7186  002540  1618               	andwf	___flmul@prod^0,f,c
  7187  002542  0EFF               	movlw	255
  7188  002544  1619               	andwf	(___flmul@prod+1)^0,f,c
  7189  002546  0E7F               	movlw	127
  7190  002548  161A               	andwf	(___flmul@prod+2)^0,f,c
  7191  00254A  0E00               	movlw	0
  7192  00254C  161B               	andwf	(___flmul@prod+3)^0,f,c
  7193  00254E  A017               	btfss	___flmul@bexp^0,0,c
  7194  002550  EFAC  F012         	goto	u12011
  7195  002554  EFAE  F012         	goto	u12010
  7196  002558                     u12011:
  7197  002558  EFAF  F012         	goto	l10687
  7198  00255C                     u12010:
  7199  00255C  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  7200  00255E                     l10687:
  7201  00255E  90D8               	bcf	status,0,c
  7202  002560  3017               	rrcf	___flmul@bexp^0,w,c
  7203  002562  6E1B               	movwf	(___flmul@prod+3)^0,c
  7204  002564                     l10689:
  7205  002564  5011               	movf	___flmul@sign^0,w,c
  7206  002566  121B               	iorwf	(___flmul@prod+3)^0,f,c
  7207  002568  C018  F005         	movff	___flmul@prod,?___flmul
  7208  00256C  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  7209  002570  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  7210  002574  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  7211  002578                     l2382:
  7212  002578  0012               	return		;funcret
  7213  00257A                     __end_of___flmul:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function ___flge *****************
  7217 ;; Defined at:
  7218 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  ff1             4   29[COMRAM] unsigned char 
  7221 ;;  ff2             4   33[COMRAM] unsigned char 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;		None               void
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;Total ram usage:       12 bytes
  7238 ;; Hardware stack levels used: 1
  7239 ;; Hardware stack levels required when called: 4
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_efgtoa
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text21
  7248  004048                     __ptext21:
  7249                           	callstack 0
  7250  004048                     ___flge:
  7251                           	callstack 21
  7252  004048  0E00               	movlw	0
  7253  00404A  141E               	andwf	___flge@ff1^0,w,c
  7254  00404C  6E26               	movwf	??___flge^0,c
  7255  00404E  0E00               	movlw	0
  7256  004050  141F               	andwf	(___flge@ff1+1)^0,w,c
  7257  004052  6E27               	movwf	(??___flge+1)^0,c
  7258  004054  0E80               	movlw	128
  7259  004056  1420               	andwf	(___flge@ff1+2)^0,w,c
  7260  004058  6E28               	movwf	(??___flge+2)^0,c
  7261  00405A  0E7F               	movlw	127
  7262  00405C  1421               	andwf	(___flge@ff1+3)^0,w,c
  7263  00405E  6E29               	movwf	(??___flge+3)^0,c
  7264  004060  5026               	movf	??___flge^0,w,c
  7265  004062  1027               	iorwf	(??___flge+1)^0,w,c
  7266  004064  1028               	iorwf	(??___flge+2)^0,w,c
  7267  004066  1029               	iorwf	(??___flge+3)^0,w,c
  7268  004068  A4D8               	btfss	status,2,c
  7269  00406A  EF39  F020         	goto	u12171
  7270  00406E  EF3B  F020         	goto	u12170
  7271  004072                     u12171:
  7272  004072  EF43  F020         	goto	l10801
  7273  004076                     u12170:
  7274  004076  0E00               	movlw	0
  7275  004078  6E1E               	movwf	___flge@ff1^0,c
  7276  00407A  0E00               	movlw	0
  7277  00407C  6E1F               	movwf	(___flge@ff1+1)^0,c
  7278  00407E  0E00               	movlw	0
  7279  004080  6E20               	movwf	(___flge@ff1+2)^0,c
  7280  004082  0E00               	movlw	0
  7281  004084  6E21               	movwf	(___flge@ff1+3)^0,c
  7282  004086                     l10801:
  7283  004086  0E00               	movlw	0
  7284  004088  1422               	andwf	___flge@ff2^0,w,c
  7285  00408A  6E26               	movwf	??___flge^0,c
  7286  00408C  0E00               	movlw	0
  7287  00408E  1423               	andwf	(___flge@ff2+1)^0,w,c
  7288  004090  6E27               	movwf	(??___flge+1)^0,c
  7289  004092  0E80               	movlw	128
  7290  004094  1424               	andwf	(___flge@ff2+2)^0,w,c
  7291  004096  6E28               	movwf	(??___flge+2)^0,c
  7292  004098  0E7F               	movlw	127
  7293  00409A  1425               	andwf	(___flge@ff2+3)^0,w,c
  7294  00409C  6E29               	movwf	(??___flge+3)^0,c
  7295  00409E  5026               	movf	??___flge^0,w,c
  7296  0040A0  1027               	iorwf	(??___flge+1)^0,w,c
  7297  0040A2  1028               	iorwf	(??___flge+2)^0,w,c
  7298  0040A4  1029               	iorwf	(??___flge+3)^0,w,c
  7299  0040A6  A4D8               	btfss	status,2,c
  7300  0040A8  EF58  F020         	goto	u12181
  7301  0040AC  EF5A  F020         	goto	u12180
  7302  0040B0                     u12181:
  7303  0040B0  EF62  F020         	goto	l10805
  7304  0040B4                     u12180:
  7305  0040B4  0E00               	movlw	0
  7306  0040B6  6E22               	movwf	___flge@ff2^0,c
  7307  0040B8  0E00               	movlw	0
  7308  0040BA  6E23               	movwf	(___flge@ff2+1)^0,c
  7309  0040BC  0E00               	movlw	0
  7310  0040BE  6E24               	movwf	(___flge@ff2+2)^0,c
  7311  0040C0  0E00               	movlw	0
  7312  0040C2  6E25               	movwf	(___flge@ff2+3)^0,c
  7313  0040C4                     l10805:
  7314  0040C4  AE21               	btfss	(___flge@ff1+3)^0,7,c
  7315  0040C6  EF67  F020         	goto	u12191
  7316  0040CA  EF69  F020         	goto	u12190
  7317  0040CE                     u12191:
  7318  0040CE  EF72  F020         	goto	l10809
  7319  0040D2                     u12190:
  7320  0040D2  6C1E               	negf	___flge@ff1^0,c
  7321  0040D4  1E1F               	comf	(___flge@ff1+1)^0,f,c
  7322  0040D6  B0D8               	btfsc	status,0,c
  7323  0040D8  2A1F               	incf	(___flge@ff1+1)^0,f,c
  7324  0040DA  1E20               	comf	(___flge@ff1+2)^0,f,c
  7325  0040DC  B0D8               	btfsc	status,0,c
  7326  0040DE  2A20               	incf	(___flge@ff1+2)^0,f,c
  7327  0040E0  0E80               	movlw	128
  7328  0040E2  5621               	subfwb	(___flge@ff1+3)^0,f,c
  7329  0040E4                     l10809:
  7330  0040E4  AE25               	btfss	(___flge@ff2+3)^0,7,c
  7331  0040E6  EF77  F020         	goto	u12201
  7332  0040EA  EF79  F020         	goto	u12200
  7333  0040EE                     u12201:
  7334  0040EE  EF82  F020         	goto	l2029
  7335  0040F2                     u12200:
  7336  0040F2  6C22               	negf	___flge@ff2^0,c
  7337  0040F4  1E23               	comf	(___flge@ff2+1)^0,f,c
  7338  0040F6  B0D8               	btfsc	status,0,c
  7339  0040F8  2A23               	incf	(___flge@ff2+1)^0,f,c
  7340  0040FA  1E24               	comf	(___flge@ff2+2)^0,f,c
  7341  0040FC  B0D8               	btfsc	status,0,c
  7342  0040FE  2A24               	incf	(___flge@ff2+2)^0,f,c
  7343  004100  0E80               	movlw	128
  7344  004102  5625               	subfwb	(___flge@ff2+3)^0,f,c
  7345  004104                     l2029:
  7346  004104  0E00               	movlw	0
  7347  004106  1A1E               	xorwf	___flge@ff1^0,f,c
  7348  004108  0E00               	movlw	0
  7349  00410A  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  7350  00410C  0E00               	movlw	0
  7351  00410E  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  7352  004110  0E80               	movlw	128
  7353  004112  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  7354  004114  0E00               	movlw	0
  7355  004116  1A22               	xorwf	___flge@ff2^0,f,c
  7356  004118  0E00               	movlw	0
  7357  00411A  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  7358  00411C  0E00               	movlw	0
  7359  00411E  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  7360  004120  0E80               	movlw	128
  7361  004122  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  7362  004124  5022               	movf	___flge@ff2^0,w,c
  7363  004126  5C1E               	subwf	___flge@ff1^0,w,c
  7364  004128  5023               	movf	(___flge@ff2+1)^0,w,c
  7365  00412A  581F               	subwfb	(___flge@ff1+1)^0,w,c
  7366  00412C  5024               	movf	(___flge@ff2+2)^0,w,c
  7367  00412E  5820               	subwfb	(___flge@ff1+2)^0,w,c
  7368  004130  5025               	movf	(___flge@ff2+3)^0,w,c
  7369  004132  5821               	subwfb	(___flge@ff1+3)^0,w,c
  7370  004134  B0D8               	btfsc	status,0,c
  7371  004136  EF9F  F020         	goto	u12211
  7372  00413A  EFA1  F020         	goto	u12210
  7373  00413E                     u12211:
  7374  00413E  EFA4  F020         	goto	l10815
  7375  004142                     u12210:
  7376  004142  90D8               	bcf	status,0,c
  7377  004144  EFA5  F020         	goto	l2034
  7378  004148                     l10815:
  7379  004148  80D8               	bsf	status,0,c
  7380  00414A                     l2034:
  7381  00414A  0012               	return		;funcret
  7382  00414C                     __end_of___flge:
  7383                           	callstack 0
  7384                           
  7385 ;; *************** function ___fleq *****************
  7386 ;; Defined at:
  7387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  ff1             4    4[COMRAM] unsigned char 
  7390 ;;  ff2             4    8[COMRAM] unsigned char 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;		None               void
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;Total ram usage:       12 bytes
  7407 ;; Hardware stack levels used: 1
  7408 ;; Hardware stack levels required when called: 4
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_efgtoa
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text22
  7417  004B22                     __ptext22:
  7418                           	callstack 0
  7419  004B22                     ___fleq:
  7420                           	callstack 21
  7421  004B22  0E00               	movlw	0
  7422  004B24  1405               	andwf	___fleq@ff1^0,w,c
  7423  004B26  6E0D               	movwf	??___fleq^0,c
  7424  004B28  0E00               	movlw	0
  7425  004B2A  1406               	andwf	(___fleq@ff1+1)^0,w,c
  7426  004B2C  6E0E               	movwf	(??___fleq+1)^0,c
  7427  004B2E  0E80               	movlw	128
  7428  004B30  1407               	andwf	(___fleq@ff1+2)^0,w,c
  7429  004B32  6E0F               	movwf	(??___fleq+2)^0,c
  7430  004B34  0E7F               	movlw	127
  7431  004B36  1408               	andwf	(___fleq@ff1+3)^0,w,c
  7432  004B38  6E10               	movwf	(??___fleq+3)^0,c
  7433  004B3A  500D               	movf	??___fleq^0,w,c
  7434  004B3C  100E               	iorwf	(??___fleq+1)^0,w,c
  7435  004B3E  100F               	iorwf	(??___fleq+2)^0,w,c
  7436  004B40  1010               	iorwf	(??___fleq+3)^0,w,c
  7437  004B42  A4D8               	btfss	status,2,c
  7438  004B44  EFA6  F025         	goto	u12141
  7439  004B48  EFA8  F025         	goto	u12140
  7440  004B4C                     u12141:
  7441  004B4C  EFB0  F025         	goto	l10785
  7442  004B50                     u12140:
  7443  004B50  0E00               	movlw	0
  7444  004B52  6E05               	movwf	___fleq@ff1^0,c
  7445  004B54  0E00               	movlw	0
  7446  004B56  6E06               	movwf	(___fleq@ff1+1)^0,c
  7447  004B58  0E00               	movlw	0
  7448  004B5A  6E07               	movwf	(___fleq@ff1+2)^0,c
  7449  004B5C  0E00               	movlw	0
  7450  004B5E  6E08               	movwf	(___fleq@ff1+3)^0,c
  7451  004B60                     l10785:
  7452  004B60  0E00               	movlw	0
  7453  004B62  1409               	andwf	___fleq@ff2^0,w,c
  7454  004B64  6E0D               	movwf	??___fleq^0,c
  7455  004B66  0E00               	movlw	0
  7456  004B68  140A               	andwf	(___fleq@ff2+1)^0,w,c
  7457  004B6A  6E0E               	movwf	(??___fleq+1)^0,c
  7458  004B6C  0E80               	movlw	128
  7459  004B6E  140B               	andwf	(___fleq@ff2+2)^0,w,c
  7460  004B70  6E0F               	movwf	(??___fleq+2)^0,c
  7461  004B72  0E7F               	movlw	127
  7462  004B74  140C               	andwf	(___fleq@ff2+3)^0,w,c
  7463  004B76  6E10               	movwf	(??___fleq+3)^0,c
  7464  004B78  500D               	movf	??___fleq^0,w,c
  7465  004B7A  100E               	iorwf	(??___fleq+1)^0,w,c
  7466  004B7C  100F               	iorwf	(??___fleq+2)^0,w,c
  7467  004B7E  1010               	iorwf	(??___fleq+3)^0,w,c
  7468  004B80  A4D8               	btfss	status,2,c
  7469  004B82  EFC5  F025         	goto	u12151
  7470  004B86  EFC7  F025         	goto	u12150
  7471  004B8A                     u12151:
  7472  004B8A  EFCF  F025         	goto	l10789
  7473  004B8E                     u12150:
  7474  004B8E  0E00               	movlw	0
  7475  004B90  6E09               	movwf	___fleq@ff2^0,c
  7476  004B92  0E00               	movlw	0
  7477  004B94  6E0A               	movwf	(___fleq@ff2+1)^0,c
  7478  004B96  0E00               	movlw	0
  7479  004B98  6E0B               	movwf	(___fleq@ff2+2)^0,c
  7480  004B9A  0E00               	movlw	0
  7481  004B9C  6E0C               	movwf	(___fleq@ff2+3)^0,c
  7482  004B9E                     l10789:
  7483  004B9E  5009               	movf	___fleq@ff2^0,w,c
  7484  004BA0  1805               	xorwf	___fleq@ff1^0,w,c
  7485  004BA2  E10F               	bnz	u12160
  7486  004BA4  500A               	movf	(___fleq@ff2+1)^0,w,c
  7487  004BA6  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  7488  004BA8  E10C               	bnz	u12160
  7489  004BAA  500B               	movf	(___fleq@ff2+2)^0,w,c
  7490  004BAC  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  7491  004BAE  E109               	bnz	u12160
  7492  004BB0  500C               	movf	(___fleq@ff2+3)^0,w,c
  7493  004BB2  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  7494  004BB4  B4D8               	btfsc	status,2,c
  7495  004BB6  EFDF  F025         	goto	u12161
  7496  004BBA  EFE1  F025         	goto	u12160
  7497  004BBE                     u12161:
  7498  004BBE  EFE4  F025         	goto	l10793
  7499  004BC2                     u12160:
  7500  004BC2  90D8               	bcf	status,0,c
  7501  004BC4  EFE5  F025         	goto	l2023
  7502  004BC8                     l10793:
  7503  004BC8  80D8               	bsf	status,0,c
  7504  004BCA                     l2023:
  7505  004BCA  0012               	return		;funcret
  7506  004BCC                     __end_of___fleq:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function ___awmod *****************
  7510 ;; Defined at:
  7511 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  dividend        2    4[COMRAM] int 
  7514 ;;  divisor         2    6[COMRAM] int 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  sign            1    9[COMRAM] unsigned char 
  7517 ;;  counter         1    8[COMRAM] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  2    4[COMRAM] int 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;Total ram usage:        6 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 4
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_main
  7538 ;;		_efgtoa
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text23
  7543  0049C2                     __ptext23:
  7544                           	callstack 0
  7545  0049C2                     ___awmod:
  7546                           	callstack 21
  7547  0049C2  0E00               	movlw	0
  7548  0049C4  6E0A               	movwf	___awmod@sign^0,c
  7549  0049C6  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  7550  0049C8  EFEA  F024         	goto	u12080
  7551  0049CC  EFE8  F024         	goto	u12081
  7552  0049D0                     u12081:
  7553  0049D0  EFF0  F024         	goto	l10753
  7554  0049D4                     u12080:
  7555  0049D4  6C05               	negf	___awmod@dividend^0,c
  7556  0049D6  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7557  0049D8  B0D8               	btfsc	status,0,c
  7558  0049DA  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7559  0049DC  0E01               	movlw	1
  7560  0049DE  6E0A               	movwf	___awmod@sign^0,c
  7561  0049E0                     l10753:
  7562  0049E0  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  7563  0049E2  EFF7  F024         	goto	u12090
  7564  0049E6  EFF5  F024         	goto	u12091
  7565  0049EA                     u12091:
  7566  0049EA  EFFB  F024         	goto	l10757
  7567  0049EE                     u12090:
  7568  0049EE  6C07               	negf	___awmod@divisor^0,c
  7569  0049F0  1E08               	comf	(___awmod@divisor+1)^0,f,c
  7570  0049F2  B0D8               	btfsc	status,0,c
  7571  0049F4  2A08               	incf	(___awmod@divisor+1)^0,f,c
  7572  0049F6                     l10757:
  7573  0049F6  5007               	movf	___awmod@divisor^0,w,c
  7574  0049F8  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  7575  0049FA  B4D8               	btfsc	status,2,c
  7576  0049FC  EF02  F025         	goto	u12101
  7577  004A00  EF04  F025         	goto	u12100
  7578  004A04                     u12101:
  7579  004A04  EF28  F025         	goto	l10773
  7580  004A08                     u12100:
  7581  004A08  0E01               	movlw	1
  7582  004A0A  6E09               	movwf	___awmod@counter^0,c
  7583  004A0C  EF0C  F025         	goto	l10763
  7584  004A10                     l10761:
  7585  004A10  90D8               	bcf	status,0,c
  7586  004A12  3607               	rlcf	___awmod@divisor^0,f,c
  7587  004A14  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  7588  004A16  2A09               	incf	___awmod@counter^0,f,c
  7589  004A18                     l10763:
  7590  004A18  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  7591  004A1A  EF11  F025         	goto	u12111
  7592  004A1E  EF13  F025         	goto	u12110
  7593  004A22                     u12111:
  7594  004A22  EF08  F025         	goto	l10761
  7595  004A26                     u12110:
  7596  004A26                     l10765:
  7597  004A26  5007               	movf	___awmod@divisor^0,w,c
  7598  004A28  5C05               	subwf	___awmod@dividend^0,w,c
  7599  004A2A  5008               	movf	(___awmod@divisor+1)^0,w,c
  7600  004A2C  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  7601  004A2E  A0D8               	btfss	status,0,c
  7602  004A30  EF1C  F025         	goto	u12121
  7603  004A34  EF1E  F025         	goto	u12120
  7604  004A38                     u12121:
  7605  004A38  EF22  F025         	goto	l10769
  7606  004A3C                     u12120:
  7607  004A3C  5007               	movf	___awmod@divisor^0,w,c
  7608  004A3E  5E05               	subwf	___awmod@dividend^0,f,c
  7609  004A40  5008               	movf	(___awmod@divisor+1)^0,w,c
  7610  004A42  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  7611  004A44                     l10769:
  7612  004A44  90D8               	bcf	status,0,c
  7613  004A46  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  7614  004A48  3207               	rrcf	___awmod@divisor^0,f,c
  7615  004A4A  2E09               	decfsz	___awmod@counter^0,f,c
  7616  004A4C  EF13  F025         	goto	l10765
  7617  004A50                     l10773:
  7618  004A50  500A               	movf	___awmod@sign^0,w,c
  7619  004A52  B4D8               	btfsc	status,2,c
  7620  004A54  EF2E  F025         	goto	u12131
  7621  004A58  EF30  F025         	goto	u12130
  7622  004A5C                     u12131:
  7623  004A5C  EF34  F025         	goto	l10777
  7624  004A60                     u12130:
  7625  004A60  6C05               	negf	___awmod@dividend^0,c
  7626  004A62  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7627  004A64  B0D8               	btfsc	status,0,c
  7628  004A66  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7629  004A68                     l10777:
  7630  004A68  C005  F005         	movff	___awmod@dividend,?___awmod
  7631  004A6C  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  7632  004A70  0012               	return		;funcret
  7633  004A72                     __end_of___awmod:
  7634                           	callstack 0
  7635                           
  7636 ;; *************** function ___awdiv *****************
  7637 ;; Defined at:
  7638 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  dividend        2    4[COMRAM] int 
  7641 ;;  divisor         2    6[COMRAM] int 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  quotient        2   10[COMRAM] int 
  7644 ;;  sign            1    9[COMRAM] unsigned char 
  7645 ;;  counter         1    8[COMRAM] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  2    4[COMRAM] int 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;Total ram usage:        8 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 4
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_main
  7666 ;;		_efgtoa
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text24
  7671  0046D6                     __ptext24:
  7672                           	callstack 0
  7673  0046D6                     ___awdiv:
  7674                           	callstack 21
  7675  0046D6  0E00               	movlw	0
  7676  0046D8  6E0A               	movwf	___awdiv@sign^0,c
  7677  0046DA  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7678  0046DC  EF74  F023         	goto	u12020
  7679  0046E0  EF72  F023         	goto	u12021
  7680  0046E4                     u12021:
  7681  0046E4  EF7A  F023         	goto	l10709
  7682  0046E8                     u12020:
  7683  0046E8  6C07               	negf	___awdiv@divisor^0,c
  7684  0046EA  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7685  0046EC  B0D8               	btfsc	status,0,c
  7686  0046EE  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7687  0046F0  0E01               	movlw	1
  7688  0046F2  6E0A               	movwf	___awdiv@sign^0,c
  7689  0046F4                     l10709:
  7690  0046F4  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7691  0046F6  EF81  F023         	goto	u12030
  7692  0046FA  EF7F  F023         	goto	u12031
  7693  0046FE                     u12031:
  7694  0046FE  EF87  F023         	goto	l10715
  7695  004702                     u12030:
  7696  004702  6C05               	negf	___awdiv@dividend^0,c
  7697  004704  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7698  004706  B0D8               	btfsc	status,0,c
  7699  004708  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7700  00470A  0E01               	movlw	1
  7701  00470C  1A0A               	xorwf	___awdiv@sign^0,f,c
  7702  00470E                     l10715:
  7703  00470E  0E00               	movlw	0
  7704  004710  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7705  004712  0E00               	movlw	0
  7706  004714  6E0B               	movwf	___awdiv@quotient^0,c
  7707  004716  5007               	movf	___awdiv@divisor^0,w,c
  7708  004718  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7709  00471A  B4D8               	btfsc	status,2,c
  7710  00471C  EF92  F023         	goto	u12041
  7711  004720  EF94  F023         	goto	u12040
  7712  004724                     u12041:
  7713  004724  EFBC  F023         	goto	l10737
  7714  004728                     u12040:
  7715  004728  0E01               	movlw	1
  7716  00472A  6E09               	movwf	___awdiv@counter^0,c
  7717  00472C  EF9C  F023         	goto	l10723
  7718  004730                     l10721:
  7719  004730  90D8               	bcf	status,0,c
  7720  004732  3607               	rlcf	___awdiv@divisor^0,f,c
  7721  004734  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7722  004736  2A09               	incf	___awdiv@counter^0,f,c
  7723  004738                     l10723:
  7724  004738  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7725  00473A  EFA1  F023         	goto	u12051
  7726  00473E  EFA3  F023         	goto	u12050
  7727  004742                     u12051:
  7728  004742  EF98  F023         	goto	l10721
  7729  004746                     u12050:
  7730  004746                     l10725:
  7731  004746  90D8               	bcf	status,0,c
  7732  004748  360B               	rlcf	___awdiv@quotient^0,f,c
  7733  00474A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7734  00474C  5007               	movf	___awdiv@divisor^0,w,c
  7735  00474E  5C05               	subwf	___awdiv@dividend^0,w,c
  7736  004750  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7737  004752  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7738  004754  A0D8               	btfss	status,0,c
  7739  004756  EFAF  F023         	goto	u12061
  7740  00475A  EFB1  F023         	goto	u12060
  7741  00475E                     u12061:
  7742  00475E  EFB6  F023         	goto	l10733
  7743  004762                     u12060:
  7744  004762  5007               	movf	___awdiv@divisor^0,w,c
  7745  004764  5E05               	subwf	___awdiv@dividend^0,f,c
  7746  004766  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7747  004768  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7748  00476A  800B               	bsf	___awdiv@quotient^0,0,c
  7749  00476C                     l10733:
  7750  00476C  90D8               	bcf	status,0,c
  7751  00476E  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7752  004770  3207               	rrcf	___awdiv@divisor^0,f,c
  7753  004772  2E09               	decfsz	___awdiv@counter^0,f,c
  7754  004774  EFA3  F023         	goto	l10725
  7755  004778                     l10737:
  7756  004778  500A               	movf	___awdiv@sign^0,w,c
  7757  00477A  B4D8               	btfsc	status,2,c
  7758  00477C  EFC2  F023         	goto	u12071
  7759  004780  EFC4  F023         	goto	u12070
  7760  004784                     u12071:
  7761  004784  EFC8  F023         	goto	l10741
  7762  004788                     u12070:
  7763  004788  6C0B               	negf	___awdiv@quotient^0,c
  7764  00478A  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7765  00478C  B0D8               	btfsc	status,0,c
  7766  00478E  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7767  004790                     l10741:
  7768  004790  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7769  004794  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7770  004798  0012               	return		;funcret
  7771  00479A                     __end_of___awdiv:
  7772                           	callstack 0
  7773                           
  7774 ;; *************** function _dtoa *****************
  7775 ;; Defined at:
  7776 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  7779 ;;		 -> sprintf@f(11), 
  7780 ;;  d               8   33[COMRAM] long long 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  n               8   57[COMRAM] long long 
  7783 ;;  i               2   65[COMRAM] int 
  7784 ;;  s               2   55[COMRAM] int 
  7785 ;;  w               2   53[COMRAM] int 
  7786 ;;  p               2   51[COMRAM] int 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2   31[COMRAM] int 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7796 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;Total ram usage:       36 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; Hardware stack levels required when called: 8
  7803 ;; This function calls:
  7804 ;;		___aodiv
  7805 ;;		___aomod
  7806 ;;		_abs
  7807 ;;		_pad
  7808 ;; This function is called by:
  7809 ;;		_vfpfcnvrt
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text25
  7814  0030BC                     __ptext25:
  7815                           	callstack 0
  7816  0030BC                     _dtoa:
  7817                           	callstack 18
  7818  0030BC                     
  7819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7820  0030BC  C022  F03A         	movff	dtoa@d,dtoa@n
  7821  0030C0  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  7822  0030C4  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  7823  0030C8  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  7824  0030CC  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  7825  0030D0  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  7826  0030D4  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  7827  0030D8  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  7828  0030DC                     
  7829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7830  0030DC  BE41               	btfsc	(dtoa@n+7)^0,7,c
  7831  0030DE  EF73  F018         	goto	u12551
  7832  0030E2  EF76  F018         	goto	u12550
  7833  0030E6                     u12551:
  7834  0030E6  0E01               	movlw	1
  7835  0030E8  EF77  F018         	goto	u12560
  7836  0030EC                     u12550:
  7837  0030EC  0E00               	movlw	0
  7838  0030EE                     u12560:
  7839  0030EE  6E38               	movwf	dtoa@s^0,c
  7840  0030F0  6A39               	clrf	(dtoa@s+1)^0,c
  7841                           
  7842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7843  0030F2  5038               	movf	dtoa@s^0,w,c
  7844  0030F4  1039               	iorwf	(dtoa@s+1)^0,w,c
  7845  0030F6  B4D8               	btfsc	status,2,c
  7846  0030F8  EF80  F018         	goto	u12571
  7847  0030FC  EF82  F018         	goto	u12570
  7848  003100                     u12571:
  7849  003100  EF92  F018         	goto	l10967
  7850  003104                     u12570:
  7851  003104                     
  7852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7853  003104  1E41               	comf	(dtoa@n+7)^0,f,c
  7854  003106  1E40               	comf	(dtoa@n+6)^0,f,c
  7855  003108  1E3F               	comf	(dtoa@n+5)^0,f,c
  7856  00310A  1E3E               	comf	(dtoa@n+4)^0,f,c
  7857  00310C  1E3D               	comf	(dtoa@n+3)^0,f,c
  7858  00310E  1E3C               	comf	(dtoa@n+2)^0,f,c
  7859  003110  1E3B               	comf	(dtoa@n+1)^0,f,c
  7860  003112  6C3A               	negf	dtoa@n^0,c
  7861  003114  0E00               	movlw	0
  7862  003116  223B               	addwfc	(dtoa@n+1)^0,f,c
  7863  003118  223C               	addwfc	(dtoa@n+2)^0,f,c
  7864  00311A  223D               	addwfc	(dtoa@n+3)^0,f,c
  7865  00311C  223E               	addwfc	(dtoa@n+4)^0,f,c
  7866  00311E  223F               	addwfc	(dtoa@n+5)^0,f,c
  7867  003120  2240               	addwfc	(dtoa@n+6)^0,f,c
  7868  003122  2241               	addwfc	(dtoa@n+7)^0,f,c
  7869  003124                     l10967:
  7870                           
  7871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7872  003124  BE73               	btfsc	(_prec+1)^0,7,c
  7873  003126  EF97  F018         	goto	u12581
  7874  00312A  EF99  F018         	goto	u12580
  7875  00312E                     u12581:
  7876  00312E  EF9A  F018         	goto	l10971
  7877  003132                     u12580:
  7878  003132                     
  7879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7880  003132  9274               	bcf	_flags@doprnt$F4927^0,1,c
  7881  003134                     l10971:
  7882                           
  7883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7884  003134  BE73               	btfsc	(_prec+1)^0,7,c
  7885  003136  EFA7  F018         	goto	u12590
  7886  00313A  5073               	movf	(_prec+1)^0,w,c
  7887  00313C  E106               	bnz	u12591
  7888  00313E  0472               	decf	_prec^0,w,c
  7889  003140  B0D8               	btfsc	status,0,c
  7890  003142  EFA5  F018         	goto	u12591
  7891  003146  EFA7  F018         	goto	u12590
  7892  00314A                     u12591:
  7893  00314A  EFAD  F018         	goto	l2502
  7894  00314E                     u12590:
  7895  00314E  0E00               	movlw	0
  7896  003150  6E35               	movwf	(dtoa@p+1)^0,c
  7897  003152  0E01               	movlw	1
  7898  003154  6E34               	movwf	dtoa@p^0,c
  7899  003156  EFB1  F018         	goto	l2504
  7900  00315A                     l2502:
  7901  00315A  C072  F034         	movff	_prec,dtoa@p
  7902  00315E  C073  F035         	movff	_prec+1,dtoa@p+1
  7903  003162                     l2504:
  7904                           
  7905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7906  003162  C0D1  F036         	movff	_width,dtoa@w
  7907  003166  C0D2  F037         	movff	_width+1,dtoa@w+1
  7908  00316A                     
  7909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7910  00316A  5038               	movf	dtoa@s^0,w,c
  7911  00316C  1039               	iorwf	(dtoa@s+1)^0,w,c
  7912  00316E  A4D8               	btfss	status,2,c
  7913  003170  EFBC  F018         	goto	u12601
  7914  003174  EFBE  F018         	goto	u12600
  7915  003178                     u12601:
  7916  003178  EFC5  F018         	goto	l10979
  7917  00317C                     u12600:
  7918  00317C  A474               	btfss	_flags@doprnt$F4927^0,2,c
  7919  00317E  EFC3  F018         	goto	u12611
  7920  003182  EFC5  F018         	goto	u12610
  7921  003186                     u12611:
  7922  003186  EFC8  F018         	goto	l10981
  7923  00318A                     u12610:
  7924  00318A                     l10979:
  7925                           
  7926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  7927  00318A  0636               	decf	dtoa@w^0,f,c
  7928  00318C  A0D8               	btfss	status,0,c
  7929  00318E  0637               	decf	(dtoa@w+1)^0,f,c
  7930  003190                     l10981:
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7933  003190  0E00               	movlw	0
  7934  003192  6E43               	movwf	(dtoa@i+1)^0,c
  7935  003194  0E4F               	movlw	79
  7936  003196  6E42               	movwf	dtoa@i^0,c
  7937  003198                     
  7938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7939  003198  0E00               	movlw	0
  7940  00319A  0101               	movlb	1	; () banked
  7941  00319C  6F76               	movwf	(_dbuf+79)& (0+255),b
  7942                           
  7943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7944  00319E  EF4D  F019         	goto	l10995
  7945  0031A2                     l10985:
  7946                           
  7947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  7948  0031A2  0642               	decf	dtoa@i^0,f,c
  7949  0031A4  A0D8               	btfss	status,0,c
  7950  0031A6  0643               	decf	(dtoa@i+1)^0,f,c
  7951  0031A8                     
  7952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7953  0031A8  0E27               	movlw	low _dbuf
  7954  0031AA  2442               	addwf	dtoa@i^0,w,c
  7955  0031AC  6ED9               	movwf	fsr2l,c
  7956  0031AE  0E01               	movlw	high _dbuf
  7957  0031B0  2043               	addwfc	(dtoa@i+1)^0,w,c
  7958  0031B2  6EDA               	movwf	fsr2h,c
  7959  0031B4  C03A  F005         	movff	dtoa@n,___aomod@dividend
  7960  0031B8  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  7961  0031BC  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  7962  0031C0  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  7963  0031C4  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  7964  0031C8  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  7965  0031CC  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  7966  0031D0  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  7967  0031D4  0E0A               	movlw	10
  7968  0031D6  6E0D               	movwf	___aomod@divisor^0,c
  7969  0031D8  0E00               	movlw	0
  7970  0031DA  6E0E               	movwf	(___aomod@divisor+1)^0,c
  7971  0031DC  0E00               	movlw	0
  7972  0031DE  6E0F               	movwf	(___aomod@divisor+2)^0,c
  7973  0031E0  0E00               	movlw	0
  7974  0031E2  6E10               	movwf	(___aomod@divisor+3)^0,c
  7975  0031E4  0E00               	movlw	0
  7976  0031E6  6E11               	movwf	(___aomod@divisor+4)^0,c
  7977  0031E8  0E00               	movlw	0
  7978  0031EA  6E12               	movwf	(___aomod@divisor+5)^0,c
  7979  0031EC  0E00               	movlw	0
  7980  0031EE  6E13               	movwf	(___aomod@divisor+6)^0,c
  7981  0031F0  0E00               	movlw	0
  7982  0031F2  6E14               	movwf	(___aomod@divisor+7)^0,c
  7983  0031F4  EC2F  F01D         	call	___aomod	;wreg free
  7984  0031F8  C005  F02A         	movff	?___aomod,??_dtoa
  7985  0031FC  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  7986  003200  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  7987  003204  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  7988  003208  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  7989  00320C  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  7990  003210  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  7991  003214  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  7992  003218  C02A  F017         	movff	??_dtoa,abs@a
  7993  00321C  C02C  F018         	movff	??_dtoa+2,abs@a+1
  7994  003220  EC72  F029         	call	_abs	;wreg free
  7995  003224  5017               	movf	?_abs^0,w,c
  7996  003226  0F30               	addlw	48
  7997  003228  6EDF               	movwf	indf2,c
  7998  00322A                     
  7999                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  8000  00322A  0634               	decf	dtoa@p^0,f,c
  8001  00322C  A0D8               	btfss	status,0,c
  8002  00322E  0635               	decf	(dtoa@p+1)^0,f,c
  8003  003230                     
  8004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  8005  003230  0636               	decf	dtoa@w^0,f,c
  8006  003232  A0D8               	btfss	status,0,c
  8007  003234  0637               	decf	(dtoa@w+1)^0,f,c
  8008  003236                     
  8009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8010  003236  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  8011  00323A  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  8012  00323E  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  8013  003242  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  8014  003246  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  8015  00324A  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  8016  00324E  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  8017  003252  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  8018  003256  0E0A               	movlw	10
  8019  003258  6E0D               	movwf	___aodiv@divisor^0,c
  8020  00325A  0E00               	movlw	0
  8021  00325C  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  8022  00325E  0E00               	movlw	0
  8023  003260  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  8024  003262  0E00               	movlw	0
  8025  003264  6E10               	movwf	(___aodiv@divisor+3)^0,c
  8026  003266  0E00               	movlw	0
  8027  003268  6E11               	movwf	(___aodiv@divisor+4)^0,c
  8028  00326A  0E00               	movlw	0
  8029  00326C  6E12               	movwf	(___aodiv@divisor+5)^0,c
  8030  00326E  0E00               	movlw	0
  8031  003270  6E13               	movwf	(___aodiv@divisor+6)^0,c
  8032  003272  0E00               	movlw	0
  8033  003274  6E14               	movwf	(___aodiv@divisor+7)^0,c
  8034  003276  ECB0  F01B         	call	___aodiv	;wreg free
  8035  00327A  C005  F03A         	movff	?___aodiv,dtoa@n
  8036  00327E  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  8037  003282  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  8038  003286  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  8039  00328A  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  8040  00328E  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  8041  003292  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  8042  003296  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  8043  00329A                     l10995:
  8044                           
  8045                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8046  00329A  BE43               	btfsc	(dtoa@i+1)^0,7,c
  8047  00329C  EF58  F019         	goto	u12621
  8048  0032A0  5043               	movf	(dtoa@i+1)^0,w,c
  8049  0032A2  E108               	bnz	u12620
  8050  0032A4  0442               	decf	dtoa@i^0,w,c
  8051  0032A6  A0D8               	btfss	status,0,c
  8052  0032A8  EF58  F019         	goto	u12621
  8053  0032AC  EF5A  F019         	goto	u12620
  8054  0032B0                     u12621:
  8055  0032B0  EF8A  F019         	goto	l11005
  8056  0032B4                     u12620:
  8057  0032B4  503A               	movf	dtoa@n^0,w,c
  8058  0032B6  103B               	iorwf	(dtoa@n+1)^0,w,c
  8059  0032B8  103C               	iorwf	(dtoa@n+2)^0,w,c
  8060  0032BA  103D               	iorwf	(dtoa@n+3)^0,w,c
  8061  0032BC  103E               	iorwf	(dtoa@n+4)^0,w,c
  8062  0032BE  103F               	iorwf	(dtoa@n+5)^0,w,c
  8063  0032C0  1040               	iorwf	(dtoa@n+6)^0,w,c
  8064  0032C2  1041               	iorwf	(dtoa@n+7)^0,w,c
  8065  0032C4  A4D8               	btfss	status,2,c
  8066  0032C6  EF67  F019         	goto	u12631
  8067  0032CA  EF69  F019         	goto	u12630
  8068  0032CE                     u12631:
  8069  0032CE  EFD1  F018         	goto	l10985
  8070  0032D2                     u12630:
  8071  0032D2  BE35               	btfsc	(dtoa@p+1)^0,7,c
  8072  0032D4  EF76  F019         	goto	u12640
  8073  0032D8  5035               	movf	(dtoa@p+1)^0,w,c
  8074  0032DA  E106               	bnz	u12641
  8075  0032DC  0434               	decf	dtoa@p^0,w,c
  8076  0032DE  B0D8               	btfsc	status,0,c
  8077  0032E0  EF74  F019         	goto	u12641
  8078  0032E4  EF76  F019         	goto	u12640
  8079  0032E8                     u12641:
  8080  0032E8  EFD1  F018         	goto	l10985
  8081  0032EC                     u12640:
  8082  0032EC  BE37               	btfsc	(dtoa@w+1)^0,7,c
  8083  0032EE  EF81  F019         	goto	u12651
  8084  0032F2  5037               	movf	(dtoa@w+1)^0,w,c
  8085  0032F4  E108               	bnz	u12650
  8086  0032F6  0436               	decf	dtoa@w^0,w,c
  8087  0032F8  A0D8               	btfss	status,0,c
  8088  0032FA  EF81  F019         	goto	u12651
  8089  0032FE  EF83  F019         	goto	u12650
  8090  003302                     u12651:
  8091  003302  EF8A  F019         	goto	l11005
  8092  003306                     u12650:
  8093  003306  B274               	btfsc	_flags@doprnt$F4927^0,1,c
  8094  003308  EF88  F019         	goto	u12661
  8095  00330C  EF8A  F019         	goto	u12660
  8096  003310                     u12661:
  8097  003310  EFD1  F018         	goto	l10985
  8098  003314                     u12660:
  8099  003314                     l11005:
  8100                           
  8101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8102  003314  5038               	movf	dtoa@s^0,w,c
  8103  003316  1039               	iorwf	(dtoa@s+1)^0,w,c
  8104  003318  A4D8               	btfss	status,2,c
  8105  00331A  EF91  F019         	goto	u12671
  8106  00331E  EF93  F019         	goto	u12670
  8107  003322                     u12671:
  8108  003322  EF9A  F019         	goto	l11009
  8109  003326                     u12670:
  8110  003326  A474               	btfss	_flags@doprnt$F4927^0,2,c
  8111  003328  EF98  F019         	goto	u12681
  8112  00332C  EF9A  F019         	goto	u12680
  8113  003330                     u12681:
  8114  003330  EFB8  F019         	goto	l11019
  8115  003334                     u12680:
  8116  003334                     l11009:
  8117                           
  8118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  8119  003334  0642               	decf	dtoa@i^0,f,c
  8120  003336  A0D8               	btfss	status,0,c
  8121  003338  0643               	decf	(dtoa@i+1)^0,f,c
  8122  00333A                     
  8123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8124  00333A  5038               	movf	dtoa@s^0,w,c
  8125  00333C  1039               	iorwf	(dtoa@s+1)^0,w,c
  8126  00333E  A4D8               	btfss	status,2,c
  8127  003340  EFA4  F019         	goto	u12691
  8128  003344  EFA6  F019         	goto	u12690
  8129  003348                     u12691:
  8130  003348  EFAC  F019         	goto	l11015
  8131  00334C                     u12690:
  8132  00334C  0E00               	movlw	0
  8133  00334E  6E33               	movwf	(_dtoa$4946+1)^0,c
  8134  003350  0E2B               	movlw	43
  8135  003352  6E32               	movwf	_dtoa$4946^0,c
  8136  003354  EFB0  F019         	goto	l11017
  8137  003358                     l11015:
  8138  003358  0E00               	movlw	0
  8139  00335A  6E33               	movwf	(_dtoa$4946+1)^0,c
  8140  00335C  0E2D               	movlw	45
  8141  00335E  6E32               	movwf	_dtoa$4946^0,c
  8142  003360                     l11017:
  8143  003360  0E27               	movlw	low _dbuf
  8144  003362  2442               	addwf	dtoa@i^0,w,c
  8145  003364  6ED9               	movwf	fsr2l,c
  8146  003366  0E01               	movlw	high _dbuf
  8147  003368  2043               	addwfc	(dtoa@i+1)^0,w,c
  8148  00336A  6EDA               	movwf	fsr2h,c
  8149  00336C  C032  FFDF         	movff	_dtoa$4946,indf2
  8150  003370                     l11019:
  8151                           
  8152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8153  003370  C020  F015         	movff	dtoa@fp,pad@fp
  8154  003374  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  8155  003378  0E27               	movlw	low _dbuf
  8156  00337A  2442               	addwf	dtoa@i^0,w,c
  8157  00337C  6E17               	movwf	pad@buf^0,c
  8158  00337E  0E01               	movlw	high _dbuf
  8159  003380  2043               	addwfc	(dtoa@i+1)^0,w,c
  8160  003382  6E18               	movwf	(pad@buf+1)^0,c
  8161  003384  C036  F019         	movff	dtoa@w,pad@p
  8162  003388  C037  F01A         	movff	dtoa@w+1,pad@p+1
  8163  00338C  ECCD  F023         	call	_pad	;wreg free
  8164  003390  C015  F020         	movff	?_pad,?_dtoa
  8165  003394  C016  F021         	movff	?_pad+1,?_dtoa+1
  8166  003398  0012               	return		;funcret
  8167  00339A                     __end_of_dtoa:
  8168                           	callstack 0
  8169                           
  8170 ;; *************** function _pad *****************
  8171 ;; Defined at:
  8172 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  8175 ;;		 -> sprintf@f(11), 
  8176 ;;  buf             2   22[COMRAM] PTR unsigned char 
  8177 ;;		 -> dbuf(80), 
  8178 ;;  p               2   24[COMRAM] int 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  w               2   29[COMRAM] int 
  8181 ;;  i               2   27[COMRAM] int 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  2   20[COMRAM] int 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:       11 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 7
  8198 ;; This function calls:
  8199 ;;		_fputc
  8200 ;;		_fputs
  8201 ;;		_strlen
  8202 ;; This function is called by:
  8203 ;;		_dtoa
  8204 ;;		_efgtoa
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text26
  8209  00479A                     __ptext26:
  8210                           	callstack 0
  8211  00479A                     _pad:
  8212                           	callstack 18
  8213  00479A                     
  8214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8215  00479A  A074               	btfss	_flags@doprnt$F4927^0,0,c
  8216  00479C  EFD2  F023         	goto	u12301
  8217  0047A0  EFD4  F023         	goto	u12300
  8218  0047A4                     u12301:
  8219  0047A4  EFDE  F023         	goto	l10875
  8220  0047A8                     u12300:
  8221  0047A8                     
  8222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8223  0047A8  C017  F00E         	movff	pad@buf,fputs@s
  8224  0047AC  C018  F00F         	movff	pad@buf+1,fputs@s+1
  8225  0047B0  C015  F010         	movff	pad@fp,fputs@fp
  8226  0047B4  C016  F011         	movff	pad@fp+1,fputs@fp+1
  8227  0047B8  EC50  F029         	call	_fputs	;wreg free
  8228  0047BC                     l10875:
  8229                           
  8230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8231  0047BC  BE1A               	btfsc	(pad@p+1)^0,7,c
  8232  0047BE  EFE3  F023         	goto	u12311
  8233  0047C2  EFE5  F023         	goto	u12310
  8234  0047C6                     u12311:
  8235  0047C6  EFEB  F023         	goto	l10879
  8236  0047CA                     u12310:
  8237  0047CA  C019  F01E         	movff	pad@p,pad@w
  8238  0047CE  C01A  F01F         	movff	pad@p+1,pad@w+1
  8239  0047D2  EFEF  F023         	goto	l2491
  8240  0047D6                     l10879:
  8241  0047D6  0E00               	movlw	0
  8242  0047D8  6E1F               	movwf	(pad@w+1)^0,c
  8243  0047DA  0E00               	movlw	0
  8244  0047DC  6E1E               	movwf	pad@w^0,c
  8245  0047DE                     l2491:
  8246                           
  8247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8248  0047DE  0E00               	movlw	0
  8249  0047E0  6E1D               	movwf	(pad@i+1)^0,c
  8250  0047E2  0E00               	movlw	0
  8251  0047E4  6E1C               	movwf	pad@i^0,c
  8252                           
  8253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8254  0047E6  EF01  F024         	goto	l10885
  8255  0047EA                     l10881:
  8256                           
  8257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8258  0047EA  0E00               	movlw	0
  8259  0047EC  6E06               	movwf	(fputc@c+1)^0,c
  8260  0047EE  0E20               	movlw	32
  8261  0047F0  6E05               	movwf	fputc@c^0,c
  8262  0047F2  C015  F007         	movff	pad@fp,fputc@fp
  8263  0047F6  C016  F008         	movff	pad@fp+1,fputc@fp+1
  8264  0047FA  EC06  F023         	call	_fputc	;wreg free
  8265  0047FE                     
  8266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8267  0047FE  4A1C               	infsnz	pad@i^0,f,c
  8268  004800  2A1D               	incf	(pad@i+1)^0,f,c
  8269  004802                     l10885:
  8270                           
  8271                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8272  004802  501E               	movf	pad@w^0,w,c
  8273  004804  5C1C               	subwf	pad@i^0,w,c
  8274  004806  501D               	movf	(pad@i+1)^0,w,c
  8275  004808  0A80               	xorlw	128
  8276  00480A  6E1B               	movwf	??_pad^0,c
  8277  00480C  501F               	movf	(pad@w+1)^0,w,c
  8278  00480E  0A80               	xorlw	128
  8279  004810  581B               	subwfb	??_pad^0,w,c
  8280  004812  A0D8               	btfss	status,0,c
  8281  004814  EF0E  F024         	goto	u12321
  8282  004818  EF10  F024         	goto	u12320
  8283  00481C                     u12321:
  8284  00481C  EFF5  F023         	goto	l10881
  8285  004820                     u12320:
  8286  004820                     
  8287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8288  004820  B074               	btfsc	_flags@doprnt$F4927^0,0,c
  8289  004822  EF15  F024         	goto	u12331
  8290  004826  EF17  F024         	goto	u12330
  8291  00482A                     u12331:
  8292  00482A  EF21  F024         	goto	l10889
  8293  00482E                     u12330:
  8294  00482E                     
  8295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8296  00482E  C017  F00E         	movff	pad@buf,fputs@s
  8297  004832  C018  F00F         	movff	pad@buf+1,fputs@s+1
  8298  004836  C015  F010         	movff	pad@fp,fputs@fp
  8299  00483A  C016  F011         	movff	pad@fp+1,fputs@fp+1
  8300  00483E  EC50  F029         	call	_fputs	;wreg free
  8301  004842                     l10889:
  8302                           
  8303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8304  004842  C017  F005         	movff	pad@buf,strlen@s
  8305  004846  C018  F006         	movff	pad@buf+1,strlen@s+1
  8306  00484A  EC20  F02A         	call	_strlen	;wreg free
  8307  00484E  501E               	movf	pad@w^0,w,c
  8308  004850  2405               	addwf	?_strlen^0,w,c
  8309  004852  6E15               	movwf	?_pad^0,c
  8310  004854  501F               	movf	(pad@w+1)^0,w,c
  8311  004856  2006               	addwfc	(?_strlen+1)^0,w,c
  8312  004858  6E16               	movwf	(?_pad+1)^0,c
  8313  00485A  0012               	return		;funcret
  8314  00485C                     __end_of_pad:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _strlen *****************
  8318 ;; Defined at:
  8319 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  s               2    4[COMRAM] PTR const unsigned char 
  8322 ;;		 -> dbuf(80), 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  a               2    6[COMRAM] PTR const unsigned char 
  8325 ;;		 -> dbuf(80), 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  2    4[COMRAM] unsigned int 
  8328 ;; Registers used:
  8329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;Total ram usage:        4 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 4
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_pad
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text27
  8350  005440                     __ptext27:
  8351                           	callstack 0
  8352  005440                     _strlen:
  8353                           	callstack 20
  8354  005440  C005  F007         	movff	strlen@s,strlen@a
  8355  005444  C006  F008         	movff	strlen@s+1,strlen@a+1
  8356  005448  EF28  F02A         	goto	l10337
  8357  00544C                     l10335:
  8358  00544C  4A05               	infsnz	strlen@s^0,f,c
  8359  00544E  2A06               	incf	(strlen@s+1)^0,f,c
  8360  005450                     l10337:
  8361  005450  C005  FFD9         	movff	strlen@s,fsr2l
  8362  005454  C006  FFDA         	movff	strlen@s+1,fsr2h
  8363  005458  50DF               	movf	indf2,w,c
  8364  00545A  A4D8               	btfss	status,2,c
  8365  00545C  EF32  F02A         	goto	u11441
  8366  005460  EF34  F02A         	goto	u11440
  8367  005464                     u11441:
  8368  005464  EF26  F02A         	goto	l10335
  8369  005468                     u11440:
  8370  005468  5007               	movf	strlen@a^0,w,c
  8371  00546A  5C05               	subwf	strlen@s^0,w,c
  8372  00546C  6E05               	movwf	?_strlen^0,c
  8373  00546E  5008               	movf	(strlen@a+1)^0,w,c
  8374  005470  5806               	subwfb	(strlen@s+1)^0,w,c
  8375  005472  6E06               	movwf	(?_strlen+1)^0,c
  8376  005474  0012               	return		;funcret
  8377  005476                     __end_of_strlen:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function _fputs *****************
  8381 ;; Defined at:
  8382 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8385 ;;		 -> dbuf(80), 
  8386 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  8387 ;;		 -> sprintf@f(11), 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  i               2   18[COMRAM] int 
  8390 ;;  c               1   17[COMRAM] unsigned char 
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  2   13[COMRAM] int 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8403 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8404 ;;Total ram usage:        7 bytes
  8405 ;; Hardware stack levels used: 1
  8406 ;; Hardware stack levels required when called: 6
  8407 ;; This function calls:
  8408 ;;		_fputc
  8409 ;; This function is called by:
  8410 ;;		_pad
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text28
  8415  0052A0                     __ptext28:
  8416                           	callstack 0
  8417  0052A0                     _fputs:
  8418                           	callstack 18
  8419  0052A0  0E00               	movlw	0
  8420  0052A2  6E14               	movwf	(fputs@i+1)^0,c
  8421  0052A4  0E00               	movlw	0
  8422  0052A6  6E13               	movwf	fputs@i^0,c
  8423  0052A8  EF61  F029         	goto	l10331
  8424  0052AC                     l10327:
  8425  0052AC  C012  F005         	movff	fputs@c,fputc@c
  8426  0052B0  6A06               	clrf	(fputc@c+1)^0,c
  8427  0052B2  C010  F007         	movff	fputs@fp,fputc@fp
  8428  0052B6  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  8429  0052BA  EC06  F023         	call	_fputc	;wreg free
  8430  0052BE  4A13               	infsnz	fputs@i^0,f,c
  8431  0052C0  2A14               	incf	(fputs@i+1)^0,f,c
  8432  0052C2                     l10331:
  8433  0052C2  5013               	movf	fputs@i^0,w,c
  8434  0052C4  240E               	addwf	fputs@s^0,w,c
  8435  0052C6  6ED9               	movwf	fsr2l,c
  8436  0052C8  5014               	movf	(fputs@i+1)^0,w,c
  8437  0052CA  200F               	addwfc	(fputs@s+1)^0,w,c
  8438  0052CC  6EDA               	movwf	fsr2h,c
  8439  0052CE  50DF               	movf	indf2,w,c
  8440  0052D0  6E12               	movwf	fputs@c^0,c
  8441  0052D2  5012               	movf	fputs@c^0,w,c
  8442  0052D4  A4D8               	btfss	status,2,c
  8443  0052D6  EF6F  F029         	goto	u11431
  8444  0052DA  EF71  F029         	goto	u11430
  8445  0052DE                     u11431:
  8446  0052DE  EF56  F029         	goto	l10327
  8447  0052E2                     u11430:
  8448  0052E2  0012               	return		;funcret
  8449  0052E4                     __end_of_fputs:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _fputc *****************
  8453 ;; Defined at:
  8454 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  c               2    4[COMRAM] int 
  8457 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  8458 ;;		 -> sprintf@f(11), 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  2    4[COMRAM] int 
  8463 ;; Registers used:
  8464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        9 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 5
  8477 ;; This function calls:
  8478 ;;		_putch
  8479 ;; This function is called by:
  8480 ;;		_pad
  8481 ;;		_vfpfcnvrt
  8482 ;;		_fputs
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text29
  8487  00460C                     __ptext29:
  8488                           	callstack 0
  8489  00460C                     _fputc:
  8490                           	callstack 21
  8491  00460C  5007               	movf	fputc@fp^0,w,c
  8492  00460E  1008               	iorwf	(fputc@fp+1)^0,w,c
  8493  004610  B4D8               	btfsc	status,2,c
  8494  004612  EF0D  F023         	goto	u11001
  8495  004616  EF0F  F023         	goto	u11000
  8496  00461A                     u11001:
  8497  00461A  EF18  F023         	goto	l10113
  8498  00461E                     u11000:
  8499  00461E  5007               	movf	fputc@fp^0,w,c
  8500  004620  1008               	iorwf	(fputc@fp+1)^0,w,c
  8501  004622  A4D8               	btfss	status,2,c
  8502  004624  EF16  F023         	goto	u11011
  8503  004628  EF18  F023         	goto	u11010
  8504  00462C                     u11011:
  8505  00462C  EF1D  F023         	goto	l10115
  8506  004630                     u11010:
  8507  004630                     l10113:
  8508  004630  5005               	movf	fputc@c^0,w,c
  8509  004632  ECC8  F02A         	call	_putch
  8510  004636  EF6A  F023         	goto	l2680
  8511  00463A                     l10115:
  8512  00463A  EE20 F009          	lfsr	2,9
  8513  00463E  5007               	movf	fputc@fp^0,w,c
  8514  004640  26D9               	addwf	fsr2l,f,c
  8515  004642  5008               	movf	(fputc@fp+1)^0,w,c
  8516  004644  22DA               	addwfc	fsr2h,f,c
  8517  004646  50DE               	movf	postinc2,w,c
  8518  004648  10DE               	iorwf	postinc2,w,c
  8519  00464A  B4D8               	btfsc	status,2,c
  8520  00464C  EF2A  F023         	goto	u11021
  8521  004650  EF2C  F023         	goto	u11020
  8522  004654                     u11021:
  8523  004654  EF47  F023         	goto	l10119
  8524  004658                     u11020:
  8525  004658  EE20 F009          	lfsr	2,9
  8526  00465C  5007               	movf	fputc@fp^0,w,c
  8527  00465E  26D9               	addwf	fsr2l,f,c
  8528  004660  5008               	movf	(fputc@fp+1)^0,w,c
  8529  004662  22DA               	addwfc	fsr2h,f,c
  8530  004664  EE10 F003          	lfsr	1,3
  8531  004668  5007               	movf	fputc@fp^0,w,c
  8532  00466A  26E1               	addwf	fsr1l,f,c
  8533  00466C  5008               	movf	(fputc@fp+1)^0,w,c
  8534  00466E  22E2               	addwfc	fsr1h,f,c
  8535  004670  50DE               	movf	postinc2,w,c
  8536  004672  5CE6               	subwf	postinc1,w,c
  8537  004674  50E6               	movf	postinc1,w,c
  8538  004676  0A80               	xorlw	128
  8539  004678  6E0D               	movwf	(??_fputc+4)^0,c
  8540  00467A  50DE               	movf	postinc2,w,c
  8541  00467C  0A80               	xorlw	128
  8542  00467E  580D               	subwfb	(??_fputc+4)^0,w,c
  8543  004680  B0D8               	btfsc	status,0,c
  8544  004682  EF45  F023         	goto	u11031
  8545  004686  EF47  F023         	goto	u11030
  8546  00468A                     u11031:
  8547  00468A  EF6A  F023         	goto	l2680
  8548  00468E                     u11030:
  8549  00468E                     l10119:
  8550  00468E  EE20 F003          	lfsr	2,3
  8551  004692  5007               	movf	fputc@fp^0,w,c
  8552  004694  26D9               	addwf	fsr2l,f,c
  8553  004696  5008               	movf	(fputc@fp+1)^0,w,c
  8554  004698  22DA               	addwfc	fsr2h,f,c
  8555  00469A  CFDE F009          	movff	postinc2,??_fputc
  8556  00469E  CFDD F00A          	movff	postdec2,??_fputc+1
  8557  0046A2  C007  FFD9         	movff	fputc@fp,fsr2l
  8558  0046A6  C008  FFDA         	movff	fputc@fp+1,fsr2h
  8559  0046AA  CFDE F00B          	movff	postinc2,??_fputc+2
  8560  0046AE  CFDD F00C          	movff	postdec2,??_fputc+3
  8561  0046B2  5009               	movf	??_fputc^0,w,c
  8562  0046B4  240B               	addwf	(??_fputc+2)^0,w,c
  8563  0046B6  6ED9               	movwf	fsr2l,c
  8564  0046B8  500A               	movf	(??_fputc+1)^0,w,c
  8565  0046BA  200C               	addwfc	(??_fputc+3)^0,w,c
  8566  0046BC  6EDA               	movwf	fsr2h,c
  8567  0046BE  C005  FFDF         	movff	fputc@c,indf2
  8568  0046C2  EE20 F003          	lfsr	2,3
  8569  0046C6  5007               	movf	fputc@fp^0,w,c
  8570  0046C8  26D9               	addwf	fsr2l,f,c
  8571  0046CA  5008               	movf	(fputc@fp+1)^0,w,c
  8572  0046CC  22DA               	addwfc	fsr2h,f,c
  8573  0046CE  2ADE               	incf	postinc2,f,c
  8574  0046D0  0E00               	movlw	0
  8575  0046D2  22DD               	addwfc	postdec2,f,c
  8576  0046D4                     l2680:
  8577  0046D4  0012               	return		;funcret
  8578  0046D6                     __end_of_fputc:
  8579                           	callstack 0
  8580                           
  8581 ;; *************** function _putch *****************
  8582 ;; Defined at:
  8583 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  c               1    wreg     unsigned char 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  c               1    0[COMRAM] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;Total ram usage:        0 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; Hardware stack levels required when called: 4
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_fputc
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text30
  8612  005590                     __ptext30:
  8613                           	callstack 0
  8614  005590                     _putch:
  8615                           	callstack 21
  8616  005590  0012               	return		;funcret
  8617  005592                     __end_of_putch:
  8618                           	callstack 0
  8619                           
  8620 ;; *************** function _abs *****************
  8621 ;; Defined at:
  8622 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  a               2   22[COMRAM] int 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  2   22[COMRAM] int 
  8629 ;; Registers used:
  8630 ;;		wreg, status,2, status,0
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;Total ram usage:        4 bytes
  8641 ;; Hardware stack levels used: 1
  8642 ;; Hardware stack levels required when called: 4
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_dtoa
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text31
  8651  0052E4                     __ptext31:
  8652                           	callstack 0
  8653  0052E4                     _abs:
  8654                           	callstack 21
  8655  0052E4  BE18               	btfsc	(abs@a+1)^0,7,c
  8656  0052E6  EF7F  F029         	goto	u12340
  8657  0052EA  5018               	movf	(abs@a+1)^0,w,c
  8658  0052EC  E106               	bnz	u12341
  8659  0052EE  0417               	decf	abs@a^0,w,c
  8660  0052F0  B0D8               	btfsc	status,0,c
  8661  0052F2  EF7D  F029         	goto	u12341
  8662  0052F6  EF7F  F029         	goto	u12340
  8663  0052FA                     u12341:
  8664  0052FA  EF8D  F029         	goto	l2646
  8665  0052FE                     u12340:
  8666  0052FE  C017  F019         	movff	abs@a,??_abs
  8667  005302  C018  F01A         	movff	abs@a+1,??_abs+1
  8668  005306  1E19               	comf	??_abs^0,f,c
  8669  005308  1E1A               	comf	(??_abs+1)^0,f,c
  8670  00530A  4A19               	infsnz	??_abs^0,f,c
  8671  00530C  2A1A               	incf	(??_abs+1)^0,f,c
  8672  00530E  C019  F017         	movff	??_abs,?_abs
  8673  005312  C01A  F018         	movff	??_abs+1,?_abs+1
  8674  005316  EF91  F029         	goto	l2649
  8675  00531A                     l2646:
  8676  00531A  C017  F017         	movff	abs@a,?_abs
  8677  00531E  C018  F018         	movff	abs@a+1,?_abs+1
  8678  005322                     l2649:
  8679  005322  0012               	return		;funcret
  8680  005324                     __end_of_abs:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function ___aomod *****************
  8684 ;; Defined at:
  8685 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  dividend        8    4[COMRAM] long long 
  8688 ;;  divisor         8   12[COMRAM] long long 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  sign            1   21[COMRAM] unsigned char 
  8691 ;;  counter         1   20[COMRAM] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  8    4[COMRAM] long long 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8701 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;Total ram usage:       18 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; Hardware stack levels required when called: 4
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_dtoa
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           	psect	text32
  8716  003A5E                     __ptext32:
  8717                           	callstack 0
  8718  003A5E                     ___aomod:
  8719                           	callstack 21
  8720  003A5E  0E00               	movlw	0
  8721  003A60  6E16               	movwf	___aomod@sign^0,c
  8722  003A62  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  8723  003A64  EF38  F01D         	goto	u11540
  8724  003A68  EF36  F01D         	goto	u11541
  8725  003A6C                     u11541:
  8726  003A6C  EF4A  F01D         	goto	l10399
  8727  003A70                     u11540:
  8728  003A70  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8729  003A72  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8730  003A74  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8731  003A76  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8732  003A78  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8733  003A7A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8734  003A7C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8735  003A7E  6C05               	negf	___aomod@dividend^0,c
  8736  003A80  0E00               	movlw	0
  8737  003A82  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8738  003A84  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8739  003A86  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8740  003A88  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8741  003A8A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8742  003A8C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8743  003A8E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8744  003A90  0E01               	movlw	1
  8745  003A92  6E16               	movwf	___aomod@sign^0,c
  8746  003A94                     l10399:
  8747  003A94  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  8748  003A96  EF51  F01D         	goto	u11550
  8749  003A9A  EF4F  F01D         	goto	u11551
  8750  003A9E                     u11551:
  8751  003A9E  EF61  F01D         	goto	l10403
  8752  003AA2                     u11550:
  8753  003AA2  1E14               	comf	(___aomod@divisor+7)^0,f,c
  8754  003AA4  1E13               	comf	(___aomod@divisor+6)^0,f,c
  8755  003AA6  1E12               	comf	(___aomod@divisor+5)^0,f,c
  8756  003AA8  1E11               	comf	(___aomod@divisor+4)^0,f,c
  8757  003AAA  1E10               	comf	(___aomod@divisor+3)^0,f,c
  8758  003AAC  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  8759  003AAE  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  8760  003AB0  6C0D               	negf	___aomod@divisor^0,c
  8761  003AB2  0E00               	movlw	0
  8762  003AB4  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  8763  003AB6  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  8764  003AB8  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  8765  003ABA  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  8766  003ABC  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  8767  003ABE  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  8768  003AC0  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  8769  003AC2                     l10403:
  8770  003AC2  500D               	movf	___aomod@divisor^0,w,c
  8771  003AC4  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  8772  003AC6  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  8773  003AC8  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  8774  003ACA  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  8775  003ACC  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  8776  003ACE  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  8777  003AD0  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  8778  003AD2  B4D8               	btfsc	status,2,c
  8779  003AD4  EF6E  F01D         	goto	u11561
  8780  003AD8  EF70  F01D         	goto	u11560
  8781  003ADC                     u11561:
  8782  003ADC  EFB8  F01D         	goto	l10419
  8783  003AE0                     u11560:
  8784  003AE0  0E01               	movlw	1
  8785  003AE2  6E15               	movwf	___aomod@counter^0,c
  8786  003AE4  EF7E  F01D         	goto	l10409
  8787  003AE8                     l10407:
  8788  003AE8  90D8               	bcf	status,0,c
  8789  003AEA  360D               	rlcf	___aomod@divisor^0,f,c
  8790  003AEC  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  8791  003AEE  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  8792  003AF0  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  8793  003AF2  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  8794  003AF4  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  8795  003AF6  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  8796  003AF8  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  8797  003AFA  2A15               	incf	___aomod@counter^0,f,c
  8798  003AFC                     l10409:
  8799  003AFC  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  8800  003AFE  EF83  F01D         	goto	u11571
  8801  003B02  EF85  F01D         	goto	u11570
  8802  003B06                     u11571:
  8803  003B06  EF74  F01D         	goto	l10407
  8804  003B0A                     u11570:
  8805  003B0A                     l10411:
  8806  003B0A  500D               	movf	___aomod@divisor^0,w,c
  8807  003B0C  5C05               	subwf	___aomod@dividend^0,w,c
  8808  003B0E  500E               	movf	(___aomod@divisor+1)^0,w,c
  8809  003B10  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  8810  003B12  500F               	movf	(___aomod@divisor+2)^0,w,c
  8811  003B14  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  8812  003B16  5010               	movf	(___aomod@divisor+3)^0,w,c
  8813  003B18  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  8814  003B1A  5011               	movf	(___aomod@divisor+4)^0,w,c
  8815  003B1C  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  8816  003B1E  5012               	movf	(___aomod@divisor+5)^0,w,c
  8817  003B20  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  8818  003B22  5013               	movf	(___aomod@divisor+6)^0,w,c
  8819  003B24  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  8820  003B26  5014               	movf	(___aomod@divisor+7)^0,w,c
  8821  003B28  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  8822  003B2A  A0D8               	btfss	status,0,c
  8823  003B2C  EF9A  F01D         	goto	u11581
  8824  003B30  EF9C  F01D         	goto	u11580
  8825  003B34                     u11581:
  8826  003B34  EFAC  F01D         	goto	l10415
  8827  003B38                     u11580:
  8828  003B38  500D               	movf	___aomod@divisor^0,w,c
  8829  003B3A  5E05               	subwf	___aomod@dividend^0,f,c
  8830  003B3C  500E               	movf	(___aomod@divisor+1)^0,w,c
  8831  003B3E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  8832  003B40  500F               	movf	(___aomod@divisor+2)^0,w,c
  8833  003B42  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  8834  003B44  5010               	movf	(___aomod@divisor+3)^0,w,c
  8835  003B46  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  8836  003B48  5011               	movf	(___aomod@divisor+4)^0,w,c
  8837  003B4A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  8838  003B4C  5012               	movf	(___aomod@divisor+5)^0,w,c
  8839  003B4E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  8840  003B50  5013               	movf	(___aomod@divisor+6)^0,w,c
  8841  003B52  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  8842  003B54  5014               	movf	(___aomod@divisor+7)^0,w,c
  8843  003B56  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  8844  003B58                     l10415:
  8845  003B58  90D8               	bcf	status,0,c
  8846  003B5A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  8847  003B5C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  8848  003B5E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  8849  003B60  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  8850  003B62  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  8851  003B64  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  8852  003B66  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  8853  003B68  320D               	rrcf	___aomod@divisor^0,f,c
  8854  003B6A  2E15               	decfsz	___aomod@counter^0,f,c
  8855  003B6C  EF85  F01D         	goto	l10411
  8856  003B70                     l10419:
  8857  003B70  5016               	movf	___aomod@sign^0,w,c
  8858  003B72  B4D8               	btfsc	status,2,c
  8859  003B74  EFBE  F01D         	goto	u11591
  8860  003B78  EFC0  F01D         	goto	u11590
  8861  003B7C                     u11591:
  8862  003B7C  EFD0  F01D         	goto	l10423
  8863  003B80                     u11590:
  8864  003B80  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8865  003B82  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8866  003B84  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8867  003B86  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8868  003B88  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8869  003B8A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8870  003B8C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8871  003B8E  6C05               	negf	___aomod@dividend^0,c
  8872  003B90  0E00               	movlw	0
  8873  003B92  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8874  003B94  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8875  003B96  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8876  003B98  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8877  003B9A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8878  003B9C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8879  003B9E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8880  003BA0                     l10423:
  8881  003BA0  C005  F005         	movff	___aomod@dividend,?___aomod
  8882  003BA4  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  8883  003BA8  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  8884  003BAC  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  8885  003BB0  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  8886  003BB4  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  8887  003BB8  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  8888  003BBC  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  8889  003BC0  0012               	return		;funcret
  8890  003BC2                     __end_of___aomod:
  8891                           	callstack 0
  8892                           
  8893 ;; *************** function ___aodiv *****************
  8894 ;; Defined at:
  8895 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  dividend        8    4[COMRAM] long long 
  8898 ;;  divisor         8   12[COMRAM] long long 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  quotient        8   22[COMRAM] long long 
  8901 ;;  sign            1   21[COMRAM] unsigned char 
  8902 ;;  counter         1   20[COMRAM] unsigned char 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  8    4[COMRAM] long long 
  8905 ;; Registers used:
  8906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8912 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;Total ram usage:       26 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 4
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_dtoa
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text33
  8927  003760                     __ptext33:
  8928                           	callstack 0
  8929  003760                     ___aodiv:
  8930                           	callstack 21
  8931  003760  0E00               	movlw	0
  8932  003762  6E16               	movwf	___aodiv@sign^0,c
  8933  003764  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  8934  003766  EFB9  F01B         	goto	u11470
  8935  00376A  EFB7  F01B         	goto	u11471
  8936  00376E                     u11471:
  8937  00376E  EFCB  F01B         	goto	l10355
  8938  003772                     u11470:
  8939  003772  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  8940  003774  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  8941  003776  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  8942  003778  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  8943  00377A  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  8944  00377C  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  8945  00377E  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  8946  003780  6C0D               	negf	___aodiv@divisor^0,c
  8947  003782  0E00               	movlw	0
  8948  003784  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  8949  003786  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  8950  003788  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  8951  00378A  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  8952  00378C  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  8953  00378E  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  8954  003790  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  8955  003792  0E01               	movlw	1
  8956  003794  6E16               	movwf	___aodiv@sign^0,c
  8957  003796                     l10355:
  8958  003796  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  8959  003798  EFD2  F01B         	goto	u11480
  8960  00379C  EFD0  F01B         	goto	u11481
  8961  0037A0                     u11481:
  8962  0037A0  EFE4  F01B         	goto	l10361
  8963  0037A4                     u11480:
  8964  0037A4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  8965  0037A6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  8966  0037A8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  8967  0037AA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  8968  0037AC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  8969  0037AE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  8970  0037B0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  8971  0037B2  6C05               	negf	___aodiv@dividend^0,c
  8972  0037B4  0E00               	movlw	0
  8973  0037B6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  8974  0037B8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  8975  0037BA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  8976  0037BC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  8977  0037BE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  8978  0037C0  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  8979  0037C2  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  8980  0037C4  0E01               	movlw	1
  8981  0037C6  1A16               	xorwf	___aodiv@sign^0,f,c
  8982  0037C8                     l10361:
  8983  0037C8  EE20  F017         	lfsr	2,___aodiv@quotient
  8984  0037CC  0E07               	movlw	7
  8985  0037CE                     u11491:
  8986  0037CE  6ADE               	clrf	postinc2,c
  8987  0037D0  06E8               	decf	wreg,f,c
  8988  0037D2  E2FD               	bc	u11491
  8989  0037D4  500D               	movf	___aodiv@divisor^0,w,c
  8990  0037D6  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  8991  0037D8  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  8992  0037DA  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  8993  0037DC  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  8994  0037DE  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  8995  0037E0  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  8996  0037E2  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  8997  0037E4  B4D8               	btfsc	status,2,c
  8998  0037E6  EFF7  F01B         	goto	u11501
  8999  0037EA  EFF9  F01B         	goto	u11500
  9000  0037EE                     u11501:
  9001  0037EE  EF4B  F01C         	goto	l10383
  9002  0037F2                     u11500:
  9003  0037F2  0E01               	movlw	1
  9004  0037F4  6E15               	movwf	___aodiv@counter^0,c
  9005  0037F6  EF07  F01C         	goto	l10369
  9006  0037FA                     l10367:
  9007  0037FA  90D8               	bcf	status,0,c
  9008  0037FC  360D               	rlcf	___aodiv@divisor^0,f,c
  9009  0037FE  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  9010  003800  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  9011  003802  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  9012  003804  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  9013  003806  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  9014  003808  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  9015  00380A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  9016  00380C  2A15               	incf	___aodiv@counter^0,f,c
  9017  00380E                     l10369:
  9018  00380E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  9019  003810  EF0C  F01C         	goto	u11511
  9020  003814  EF0E  F01C         	goto	u11510
  9021  003818                     u11511:
  9022  003818  EFFD  F01B         	goto	l10367
  9023  00381C                     u11510:
  9024  00381C                     l10371:
  9025  00381C  90D8               	bcf	status,0,c
  9026  00381E  3617               	rlcf	___aodiv@quotient^0,f,c
  9027  003820  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  9028  003822  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  9029  003824  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  9030  003826  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  9031  003828  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  9032  00382A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  9033  00382C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  9034  00382E  500D               	movf	___aodiv@divisor^0,w,c
  9035  003830  5C05               	subwf	___aodiv@dividend^0,w,c
  9036  003832  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9037  003834  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  9038  003836  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9039  003838  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  9040  00383A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9041  00383C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  9042  00383E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9043  003840  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  9044  003842  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9045  003844  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  9046  003846  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9047  003848  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  9048  00384A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9049  00384C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  9050  00384E  A0D8               	btfss	status,0,c
  9051  003850  EF2C  F01C         	goto	u11521
  9052  003854  EF2E  F01C         	goto	u11520
  9053  003858                     u11521:
  9054  003858  EF3F  F01C         	goto	l10379
  9055  00385C                     u11520:
  9056  00385C  500D               	movf	___aodiv@divisor^0,w,c
  9057  00385E  5E05               	subwf	___aodiv@dividend^0,f,c
  9058  003860  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9059  003862  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  9060  003864  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9061  003866  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  9062  003868  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9063  00386A  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  9064  00386C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9065  00386E  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  9066  003870  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9067  003872  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  9068  003874  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9069  003876  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  9070  003878  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9071  00387A  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  9072  00387C  8017               	bsf	___aodiv@quotient^0,0,c
  9073  00387E                     l10379:
  9074  00387E  90D8               	bcf	status,0,c
  9075  003880  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  9076  003882  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  9077  003884  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  9078  003886  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  9079  003888  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  9080  00388A  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  9081  00388C  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  9082  00388E  320D               	rrcf	___aodiv@divisor^0,f,c
  9083  003890  2E15               	decfsz	___aodiv@counter^0,f,c
  9084  003892  EF0E  F01C         	goto	l10371
  9085  003896                     l10383:
  9086  003896  5016               	movf	___aodiv@sign^0,w,c
  9087  003898  B4D8               	btfsc	status,2,c
  9088  00389A  EF51  F01C         	goto	u11531
  9089  00389E  EF53  F01C         	goto	u11530
  9090  0038A2                     u11531:
  9091  0038A2  EF63  F01C         	goto	l10387
  9092  0038A6                     u11530:
  9093  0038A6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  9094  0038A8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  9095  0038AA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  9096  0038AC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  9097  0038AE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  9098  0038B0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  9099  0038B2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  9100  0038B4  6C17               	negf	___aodiv@quotient^0,c
  9101  0038B6  0E00               	movlw	0
  9102  0038B8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  9103  0038BA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  9104  0038BC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  9105  0038BE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  9106  0038C0  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  9107  0038C2  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  9108  0038C4  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  9109  0038C6                     l10387:
  9110  0038C6  C017  F005         	movff	___aodiv@quotient,?___aodiv
  9111  0038CA  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  9112  0038CE  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  9113  0038D2  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  9114  0038D6  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  9115  0038DA  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  9116  0038DE  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  9117  0038E2  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  9118  0038E6  0012               	return		;funcret
  9119  0038E8                     __end_of___aodiv:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _memset *****************
  9123 ;; Defined at:
  9124 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  dest            2    4[COMRAM] PTR void 
  9127 ;;		 -> dis(9), 
  9128 ;;  c               2    6[COMRAM] int 
  9129 ;;  n               2    8[COMRAM] unsigned int 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  s               2   14[COMRAM] PTR unsigned char 
  9132 ;;		 -> dis(9), 
  9133 ;;  k               2   12[COMRAM] unsigned int 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  2    4[COMRAM] PTR void 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9143 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;Total ram usage:       12 bytes
  9148 ;; Hardware stack levels used: 1
  9149 ;; Hardware stack levels required when called: 4
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_convert_float32_to_string
  9154 ;;		_convert_uint8_to_string
  9155 ;;		_convert_uint16_to_string
  9156 ;;		_convert_uint32_to_string
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text34
  9161  0038E8                     __ptext34:
  9162                           	callstack 0
  9163  0038E8                     _memset:
  9164                           	callstack 25
  9165  0038E8  C005  F00F         	movff	memset@dest,memset@s
  9166  0038EC  C006  F010         	movff	memset@dest+1,memset@s+1
  9167  0038F0  5009               	movf	memset@n^0,w,c
  9168  0038F2  100A               	iorwf	(memset@n+1)^0,w,c
  9169  0038F4  A4D8               	btfss	status,2,c
  9170  0038F6  EF7F  F01C         	goto	u13331
  9171  0038FA  EF81  F01C         	goto	u13330
  9172  0038FE                     u13331:
  9173  0038FE  EF83  F01C         	goto	l11441
  9174  003902                     u13330:
  9175  003902  EF2E  F01D         	goto	l2439
  9176  003906                     l11441:
  9177  003906  C00F  FFD9         	movff	memset@s,fsr2l
  9178  00390A  C010  FFDA         	movff	memset@s+1,fsr2h
  9179  00390E  C007  FFDF         	movff	memset@c,indf2
  9180  003912  5009               	movf	memset@n^0,w,c
  9181  003914  240F               	addwf	memset@s^0,w,c
  9182  003916  6E0B               	movwf	??_memset^0,c
  9183  003918  500A               	movf	(memset@n+1)^0,w,c
  9184  00391A  2010               	addwfc	(memset@s+1)^0,w,c
  9185  00391C  6E0C               	movwf	(??_memset+1)^0,c
  9186  00391E  0EFF               	movlw	255
  9187  003920  240B               	addwf	??_memset^0,w,c
  9188  003922  6ED9               	movwf	fsr2l,c
  9189  003924  0EFF               	movlw	255
  9190  003926  200C               	addwfc	(??_memset+1)^0,w,c
  9191  003928  6EDA               	movwf	fsr2h,c
  9192  00392A  C007  FFDF         	movff	memset@c,indf2
  9193  00392E  500A               	movf	(memset@n+1)^0,w,c
  9194  003930  E107               	bnz	u13341
  9195  003932  0E03               	movlw	3
  9196  003934  5C09               	subwf	memset@n^0,w,c
  9197  003936  B0D8               	btfsc	status,0,c
  9198  003938  EFA0  F01C         	goto	u13341
  9199  00393C  EFA2  F01C         	goto	u13340
  9200  003940                     u13341:
  9201  003940  EFA4  F01C         	goto	l11447
  9202  003944                     u13340:
  9203  003944  EF2E  F01D         	goto	l2439
  9204  003948                     l11447:
  9205  003948  EE20 F001          	lfsr	2,1
  9206  00394C  500F               	movf	memset@s^0,w,c
  9207  00394E  26D9               	addwf	fsr2l,f,c
  9208  003950  5010               	movf	(memset@s+1)^0,w,c
  9209  003952  22DA               	addwfc	fsr2h,f,c
  9210  003954  C007  FFDF         	movff	memset@c,indf2
  9211  003958  EE20 F002          	lfsr	2,2
  9212  00395C  500F               	movf	memset@s^0,w,c
  9213  00395E  26D9               	addwf	fsr2l,f,c
  9214  003960  5010               	movf	(memset@s+1)^0,w,c
  9215  003962  22DA               	addwfc	fsr2h,f,c
  9216  003964  C007  FFDF         	movff	memset@c,indf2
  9217  003968  5009               	movf	memset@n^0,w,c
  9218  00396A  240F               	addwf	memset@s^0,w,c
  9219  00396C  6E0B               	movwf	??_memset^0,c
  9220  00396E  500A               	movf	(memset@n+1)^0,w,c
  9221  003970  2010               	addwfc	(memset@s+1)^0,w,c
  9222  003972  6E0C               	movwf	(??_memset+1)^0,c
  9223  003974  0EFE               	movlw	254
  9224  003976  240B               	addwf	??_memset^0,w,c
  9225  003978  6ED9               	movwf	fsr2l,c
  9226  00397A  0EFF               	movlw	255
  9227  00397C  200C               	addwfc	(??_memset+1)^0,w,c
  9228  00397E  6EDA               	movwf	fsr2h,c
  9229  003980  C007  FFDF         	movff	memset@c,indf2
  9230  003984  5009               	movf	memset@n^0,w,c
  9231  003986  240F               	addwf	memset@s^0,w,c
  9232  003988  6E0B               	movwf	??_memset^0,c
  9233  00398A  500A               	movf	(memset@n+1)^0,w,c
  9234  00398C  2010               	addwfc	(memset@s+1)^0,w,c
  9235  00398E  6E0C               	movwf	(??_memset+1)^0,c
  9236  003990  0EFD               	movlw	253
  9237  003992  240B               	addwf	??_memset^0,w,c
  9238  003994  6ED9               	movwf	fsr2l,c
  9239  003996  0EFF               	movlw	255
  9240  003998  200C               	addwfc	(??_memset+1)^0,w,c
  9241  00399A  6EDA               	movwf	fsr2h,c
  9242  00399C  C007  FFDF         	movff	memset@c,indf2
  9243  0039A0  500A               	movf	(memset@n+1)^0,w,c
  9244  0039A2  E107               	bnz	u13351
  9245  0039A4  0E07               	movlw	7
  9246  0039A6  5C09               	subwf	memset@n^0,w,c
  9247  0039A8  B0D8               	btfsc	status,0,c
  9248  0039AA  EFD9  F01C         	goto	u13351
  9249  0039AE  EFDB  F01C         	goto	u13350
  9250  0039B2                     u13351:
  9251  0039B2  EFDD  F01C         	goto	l11453
  9252  0039B6                     u13350:
  9253  0039B6  EF2E  F01D         	goto	l2439
  9254  0039BA                     l11453:
  9255  0039BA  EE20 F003          	lfsr	2,3
  9256  0039BE  500F               	movf	memset@s^0,w,c
  9257  0039C0  26D9               	addwf	fsr2l,f,c
  9258  0039C2  5010               	movf	(memset@s+1)^0,w,c
  9259  0039C4  22DA               	addwfc	fsr2h,f,c
  9260  0039C6  C007  FFDF         	movff	memset@c,indf2
  9261  0039CA  5009               	movf	memset@n^0,w,c
  9262  0039CC  240F               	addwf	memset@s^0,w,c
  9263  0039CE  6E0B               	movwf	??_memset^0,c
  9264  0039D0  500A               	movf	(memset@n+1)^0,w,c
  9265  0039D2  2010               	addwfc	(memset@s+1)^0,w,c
  9266  0039D4  6E0C               	movwf	(??_memset+1)^0,c
  9267  0039D6  0EFC               	movlw	252
  9268  0039D8  240B               	addwf	??_memset^0,w,c
  9269  0039DA  6ED9               	movwf	fsr2l,c
  9270  0039DC  0EFF               	movlw	255
  9271  0039DE  200C               	addwfc	(??_memset+1)^0,w,c
  9272  0039E0  6EDA               	movwf	fsr2h,c
  9273  0039E2  C007  FFDF         	movff	memset@c,indf2
  9274  0039E6  500A               	movf	(memset@n+1)^0,w,c
  9275  0039E8  E107               	bnz	u13361
  9276  0039EA  0E09               	movlw	9
  9277  0039EC  5C09               	subwf	memset@n^0,w,c
  9278  0039EE  B0D8               	btfsc	status,0,c
  9279  0039F0  EFFC  F01C         	goto	u13361
  9280  0039F4  EFFE  F01C         	goto	u13360
  9281  0039F8                     u13361:
  9282  0039F8  EF00  F01D         	goto	l11459
  9283  0039FC                     u13360:
  9284  0039FC  EF2E  F01D         	goto	l2439
  9285  003A00                     l11459:
  9286  003A00  C00F  F00B         	movff	memset@s,??_memset
  9287  003A04  C010  F00C         	movff	memset@s+1,??_memset+1
  9288  003A08  1E0B               	comf	??_memset^0,f,c
  9289  003A0A  1E0C               	comf	(??_memset+1)^0,f,c
  9290  003A0C  4A0B               	infsnz	??_memset^0,f,c
  9291  003A0E  2A0C               	incf	(??_memset+1)^0,f,c
  9292  003A10  0E03               	movlw	3
  9293  003A12  140B               	andwf	??_memset^0,w,c
  9294  003A14  6E0D               	movwf	memset@k^0,c
  9295  003A16  6A0E               	clrf	(memset@k+1)^0,c
  9296  003A18  500D               	movf	memset@k^0,w,c
  9297  003A1A  260F               	addwf	memset@s^0,f,c
  9298  003A1C  500E               	movf	(memset@k+1)^0,w,c
  9299  003A1E  2210               	addwfc	(memset@s+1)^0,f,c
  9300  003A20  500D               	movf	memset@k^0,w,c
  9301  003A22  5E09               	subwf	memset@n^0,f,c
  9302  003A24  500E               	movf	(memset@k+1)^0,w,c
  9303  003A26  5A0A               	subwfb	(memset@n+1)^0,f,c
  9304  003A28  0EFC               	movlw	252
  9305  003A2A  1609               	andwf	memset@n^0,f,c
  9306  003A2C  0EFF               	movlw	255
  9307  003A2E  160A               	andwf	(memset@n+1)^0,f,c
  9308  003A30  EF25  F01D         	goto	l11467
  9309  003A34                     l11461:
  9310  003A34  C00F  FFD9         	movff	memset@s,fsr2l
  9311  003A38  C010  FFDA         	movff	memset@s+1,fsr2h
  9312  003A3C  C007  FFDF         	movff	memset@c,indf2
  9313  003A40  0609               	decf	memset@n^0,f,c
  9314  003A42  A0D8               	btfss	status,0,c
  9315  003A44  060A               	decf	(memset@n+1)^0,f,c
  9316  003A46  4A0F               	infsnz	memset@s^0,f,c
  9317  003A48  2A10               	incf	(memset@s+1)^0,f,c
  9318  003A4A                     l11467:
  9319  003A4A  5009               	movf	memset@n^0,w,c
  9320  003A4C  100A               	iorwf	(memset@n+1)^0,w,c
  9321  003A4E  A4D8               	btfss	status,2,c
  9322  003A50  EF2C  F01D         	goto	u13371
  9323  003A54  EF2E  F01D         	goto	u13370
  9324  003A58                     u13371:
  9325  003A58  EF1A  F01D         	goto	l11461
  9326  003A5C                     u13370:
  9327  003A5C                     l2439:
  9328  003A5C  0012               	return		;funcret
  9329  003A5E                     __end_of_memset:
  9330                           	callstack 0
  9331                           
  9332 ;; *************** function _application_intialize *****************
  9333 ;; Defined at:
  9334 ;;		line 155 in file "application.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;		None
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;Total ram usage:        0 bytes
  9353 ;; Hardware stack levels used: 1
  9354 ;; Hardware stack levels required when called: 8
  9355 ;; This function calls:
  9356 ;;		_GPIO_Pin_Initialize
  9357 ;;		_Ultra_Sonic_Init
  9358 ;;		_lcd_4bit_initialize
  9359 ;; This function is called by:
  9360 ;;		_main
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text35
  9365  005360                     __ptext35:
  9366                           	callstack 0
  9367  005360                     _application_intialize:
  9368                           	callstack 22
  9369  005360                     
  9370                           ;application.c: 157:     GPIO_Pin_Initialize(&pinc0);
  9371  005360  0E79               	movlw	low _pinc0
  9372  005362  6E0F               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  9373  005364  0E00               	movlw	high _pinc0
  9374  005366  6E10               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  9375  005368  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9376                           
  9377                           ;application.c: 158:     GPIO_Pin_Initialize(&pinc1);
  9378  00536C  0EFE               	movlw	low _pinc1
  9379  00536E  6E0F               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  9380  005370  0E00               	movlw	high _pinc1
  9381  005372  6E10               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  9382  005374  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9383                           
  9384                           ;application.c: 159:     lcd_4bit_initialize(&lcd1);
  9385  005378  0EF2               	movlw	low _lcd1
  9386  00537A  6E16               	movwf	lcd_4bit_initialize@lcd^0,c
  9387  00537C  0E00               	movlw	high _lcd1
  9388  00537E  6E17               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  9389  005380  EC15  F01F         	call	_lcd_4bit_initialize	;wreg free
  9390                           
  9391                           ;application.c: 160:     Ultra_Sonic_Init(&ultrasonic,&timer0);
  9392  005384  0EF8               	movlw	low _ultrasonic
  9393  005386  6E12               	movwf	Ultra_Sonic_Init@ultrasonic_object^0,c
  9394  005388  0E00               	movlw	high _ultrasonic
  9395  00538A  6E13               	movwf	(Ultra_Sonic_Init@ultrasonic_object+1)^0,c
  9396  00538C  0E80               	movlw	low _timer0
  9397  00538E  6E14               	movwf	Ultra_Sonic_Init@_tmr0_config^0,c
  9398  005390  0E01               	movlw	high _timer0
  9399  005392  6E15               	movwf	(Ultra_Sonic_Init@_tmr0_config+1)^0,c
  9400  005394  EC98  F028         	call	_Ultra_Sonic_Init	;wreg free
  9401  005398  0012               	return		;funcret
  9402  00539A                     __end_of_application_intialize:
  9403                           	callstack 0
  9404                           
  9405 ;; *************** function _lcd_4bit_initialize *****************
  9406 ;; Defined at:
  9407 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  lcd             2   21[COMRAM] PTR const struct .
  9410 ;;		 -> lcd1(6), 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  pin_lcd_coun    1   25[COMRAM] unsigned char 
  9413 ;;  ERRORSTATUS     1    0        unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      unsigned char 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9427 ;;Total ram usage:        5 bytes
  9428 ;; Hardware stack levels used: 1
  9429 ;; Hardware stack levels required when called: 7
  9430 ;; This function calls:
  9431 ;;		_GPIO_Pin_Initialize
  9432 ;;		_lcd_4bit_send_command
  9433 ;; This function is called by:
  9434 ;;		_application_intialize
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	text36
  9439  003E2A                     __ptext36:
  9440                           	callstack 0
  9441  003E2A                     _lcd_4bit_initialize:
  9442                           	callstack 22
  9443  003E2A                     
  9444                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  9445  003E2A  5016               	movf	lcd_4bit_initialize@lcd^0,w,c
  9446  003E2C  1017               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  9447  003E2E  A4D8               	btfss	status,2,c
  9448  003E30  EF1C  F01F         	goto	u8881
  9449  003E34  EF1E  F01F         	goto	u8880
  9450  003E38                     u8881:
  9451  003E38  EF20  F01F         	goto	l8377
  9452  003E3C                     u8880:
  9453  003E3C                     
  9454                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  9455  003E3C  EFA0  F01F         	goto	l120
  9456  003E40                     l8377:
  9457  003E40  C016  F00F         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  9458  003E44  C017  F010         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  9459  003E48  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9460  003E4C  0E01               	movlw	1
  9461  003E4E  2416               	addwf	lcd_4bit_initialize@lcd^0,w,c
  9462  003E50  6E0F               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  9463  003E52  0E00               	movlw	0
  9464  003E54  2017               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  9465  003E56  6E10               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  9466  003E58  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9467                           
  9468                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  9469  003E5C  0E00               	movlw	0
  9470  003E5E  6E1A               	movwf	lcd_4bit_initialize@pin_lcd_counter^0,c
  9471  003E60                     l8387:
  9472  003E60  501A               	movf	lcd_4bit_initialize@pin_lcd_counter^0,w,c
  9473  003E62  2416               	addwf	lcd_4bit_initialize@lcd^0,w,c
  9474  003E64  6E18               	movwf	??_lcd_4bit_initialize^0,c
  9475  003E66  0E00               	movlw	0
  9476  003E68  2017               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  9477  003E6A  6E19               	movwf	(??_lcd_4bit_initialize+1)^0,c
  9478  003E6C  0E02               	movlw	2
  9479  003E6E  2418               	addwf	??_lcd_4bit_initialize^0,w,c
  9480  003E70  6E0F               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  9481  003E72  0E00               	movlw	0
  9482  003E74  2019               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  9483  003E76  6E10               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  9484  003E78  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9485  003E7C                     
  9486                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  9487  003E7C  2A1A               	incf	lcd_4bit_initialize@pin_lcd_counter^0,f,c
  9488  003E7E  0E03               	movlw	3
  9489  003E80  641A               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter^0,c
  9490  003E82  EF45  F01F         	goto	u8891
  9491  003E86  EF47  F01F         	goto	u8890
  9492  003E8A                     u8891:
  9493  003E8A  EF30  F01F         	goto	l8387
  9494  003E8E                     u8890:
  9495  003E8E                     
  9496                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(8000000/4
      +                          000.0)));
  9497  003E8E  0E34               	movlw	52
  9498  003E90  6E18               	movwf	??_lcd_4bit_initialize^0,c
  9499  003E92  0EF2               	movlw	242
  9500  003E94                     u13737:
  9501  003E94  2EE8               	decfsz	wreg,f,c
  9502  003E96  D7FE               	bra	u13737
  9503  003E98  2E18               	decfsz	??_lcd_4bit_initialize^0,f,c
  9504  003E9A  D7FC               	bra	u13737
  9505  003E9C  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9506  003EA0  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9507  003EA4  0E38               	movlw	56
  9508  003EA6  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9509  003EA8  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9510  003EAC                     
  9511                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(8000000/40
      +                          00.0)));
  9512  003EAC  0E0D               	movlw	13
  9513  003EAE  6E18               	movwf	??_lcd_4bit_initialize^0,c
  9514  003EB0  0EFC               	movlw	252
  9515  003EB2                     u13747:
  9516  003EB2  2EE8               	decfsz	wreg,f,c
  9517  003EB4  D7FE               	bra	u13747
  9518  003EB6  2E18               	decfsz	??_lcd_4bit_initialize^0,f,c
  9519  003EB8  D7FC               	bra	u13747
  9520  003EBA  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9521  003EBE  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9522  003EC2  0E38               	movlw	56
  9523  003EC4  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9524  003EC6  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9525  003ECA                     
  9526                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(8000000/
      +                          4000000.0)));
  9527  003ECA  0E64               	movlw	100
  9528  003ECC                     u13757:
  9529  003ECC  2EE8               	decfsz	wreg,f,c
  9530  003ECE  D7FE               	bra	u13757
  9531  003ED0  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9532  003ED4  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9533  003ED8  0E38               	movlw	56
  9534  003EDA  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9535  003EDC  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9536  003EE0  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9537  003EE4  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9538  003EE8  0E01               	movlw	1
  9539  003EEA  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9540  003EEC  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9541  003EF0  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9542  003EF4  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9543  003EF8  0E02               	movlw	2
  9544  003EFA  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9545  003EFC  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9546  003F00  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9547  003F04  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9548  003F08  0E06               	movlw	6
  9549  003F0A  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9550  003F0C  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9551  003F10  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9552  003F14  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9553  003F18  0E0D               	movlw	13
  9554  003F1A  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9555  003F1C  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9556  003F20  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9557  003F24  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9558  003F28  0E28               	movlw	40
  9559  003F2A  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9560  003F2C  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9561  003F30  C016  F012         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9562  003F34  C017  F013         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9563  003F38  0E80               	movlw	128
  9564  003F3A  6E14               	movwf	lcd_4bit_send_command@command^0,c
  9565  003F3C  ECA8  F027         	call	_lcd_4bit_send_command	;wreg free
  9566  003F40                     l120:
  9567  003F40  0012               	return		;funcret
  9568  003F42                     __end_of_lcd_4bit_initialize:
  9569                           	callstack 0
  9570                           
  9571 ;; *************** function _lcd_4bit_send_command *****************
  9572 ;; Defined at:
  9573 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  lcd             2   17[COMRAM] PTR const struct .
  9576 ;;		 -> lcd1(6), 
  9577 ;;  command         1   19[COMRAM] unsigned char 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  ERRORSTATUS     1   20[COMRAM] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      unsigned char 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9589 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;Total ram usage:        4 bytes
  9594 ;; Hardware stack levels used: 1
  9595 ;; Hardware stack levels required when called: 6
  9596 ;; This function calls:
  9597 ;;		_GPIO_Pin_Write_Logic
  9598 ;;		_lcd_4bits_send_enable_signal
  9599 ;;		_lcd_send_4bits
  9600 ;; This function is called by:
  9601 ;;		_lcd_4bit_initialize
  9602 ;;		_lcd_4bits_set_courser
  9603 ;;		_lcd_4bit_send_custom_char
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text37
  9608  004F50                     __ptext37:
  9609                           	callstack 0
  9610  004F50                     _lcd_4bit_send_command:
  9611                           	callstack 22
  9612  004F50                     
  9613                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  9614  004F50  5012               	movf	lcd_4bit_send_command@lcd^0,w,c
  9615  004F52  1013               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  9616  004F54  A4D8               	btfss	status,2,c
  9617  004F56  EFAF  F027         	goto	u8711
  9618  004F5A  EFB1  F027         	goto	u8710
  9619  004F5E                     u8711:
  9620  004F5E  EFB5  F027         	goto	l8285
  9621  004F62                     u8710:
  9622  004F62                     
  9623                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
  9624  004F62  0E00               	movlw	0
  9625  004F64  6E15               	movwf	lcd_4bit_send_command@ERRORSTATUS^0,c
  9626                           
  9627                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  9628  004F66  EFDB  F027         	goto	l8287
  9629  004F6A                     l8285:
  9630                           
  9631                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
  9632  004F6A  C012  F005         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
  9633  004F6E  C013  F006         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  9634  004F72  0E00               	movlw	0
  9635  004F74  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9636  004F76  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9637  004F7A  6E15               	movwf	lcd_4bit_send_command@ERRORSTATUS^0,c
  9638                           
  9639                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  9640  004F7C  C012  F00F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  9641  004F80  C013  F010         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  9642  004F84  3814               	swapf	lcd_4bit_send_command@command^0,w,c
  9643  004F86  0B0F               	andlw	15
  9644  004F88  6E11               	movwf	lcd_send_4bits@data_command^0,c
  9645  004F8A  EC6B  F027         	call	_lcd_send_4bits	;wreg free
  9646                           
  9647                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  9648  004F8E  C012  F00F         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  9649  004F92  C013  F010         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  9650  004F96  ECE6  F028         	call	_lcd_4bits_send_enable_signal	;wreg free
  9651                           
  9652                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  9653  004F9A  C012  F00F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  9654  004F9E  C013  F010         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  9655  004FA2  C014  F011         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  9656  004FA6  EC6B  F027         	call	_lcd_send_4bits	;wreg free
  9657                           
  9658                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  9659  004FAA  C012  F00F         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  9660  004FAE  C013  F010         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  9661  004FB2  ECE6  F028         	call	_lcd_4bits_send_enable_signal	;wreg free
  9662  004FB6                     l8287:
  9663                           
  9664                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
  9665  004FB6  5015               	movf	lcd_4bit_send_command@ERRORSTATUS^0,w,c
  9666  004FB8  0012               	return		;funcret
  9667  004FBA                     __end_of_lcd_4bit_send_command:
  9668                           	callstack 0
  9669                           
  9670 ;; *************** function _lcd_send_4bits *****************
  9671 ;; Defined at:
  9672 ;;		line 529 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;  lcd             2   14[COMRAM] PTR const struct .
  9675 ;;		 -> lcd1(6), 
  9676 ;;  data_command    1   16[COMRAM] unsigned char 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  ERRORSTATUS     1    0        unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      unsigned char 
  9681 ;; Registers used:
  9682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9688 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;Total ram usage:        3 bytes
  9693 ;; Hardware stack levels used: 1
  9694 ;; Hardware stack levels required when called: 5
  9695 ;; This function calls:
  9696 ;;		_GPIO_Pin_Write_Logic
  9697 ;; This function is called by:
  9698 ;;		_lcd_4bit_send_command
  9699 ;;		_lcd_4bit_send_char_data
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           	psect	text38
  9704  004ED6                     __ptext38:
  9705                           	callstack 0
  9706  004ED6                     _lcd_send_4bits:
  9707                           	callstack 22
  9708  004ED6                     
  9709                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 532:         if ( ((void*)0)==lcd)
  9710  004ED6  500F               	movf	lcd_send_4bits@lcd^0,w,c
  9711  004ED8  1010               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  9712  004EDA  A4D8               	btfss	status,2,c
  9713  004EDC  EF72  F027         	goto	u8521
  9714  004EE0  EF74  F027         	goto	u8520
  9715  004EE4                     u8521:
  9716  004EE4  EF76  F027         	goto	l8133
  9717  004EE8                     u8520:
  9718  004EE8                     
  9719                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 535:     }
  9720  004EE8  EFA7  F027         	goto	l252
  9721  004EEC                     l8133:
  9722                           
  9723                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 537:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 53
      +                          8:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  9724  004EEC  0E02               	movlw	2
  9725  004EEE  240F               	addwf	lcd_send_4bits@lcd^0,w,c
  9726  004EF0  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  9727  004EF2  0E00               	movlw	0
  9728  004EF4  2010               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  9729  004EF6  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9730  004EF8  5011               	movf	lcd_send_4bits@data_command^0,w,c
  9731  004EFA  0B01               	andlw	1
  9732  004EFC  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9733  004EFE  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9734                           
  9735                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 539:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  9736  004F02  0E03               	movlw	3
  9737  004F04  240F               	addwf	lcd_send_4bits@lcd^0,w,c
  9738  004F06  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  9739  004F08  0E00               	movlw	0
  9740  004F0A  2010               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  9741  004F0C  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9742  004F0E  90D8               	bcf	status,0,c
  9743  004F10  3011               	rrcf	lcd_send_4bits@data_command^0,w,c
  9744  004F12  0B01               	andlw	1
  9745  004F14  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9746  004F16  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9747                           
  9748                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 540:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  9749  004F1A  0E04               	movlw	4
  9750  004F1C  240F               	addwf	lcd_send_4bits@lcd^0,w,c
  9751  004F1E  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  9752  004F20  0E00               	movlw	0
  9753  004F22  2010               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  9754  004F24  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9755  004F26  4011               	rrncf	lcd_send_4bits@data_command^0,w,c
  9756  004F28  42E8               	rrncf	wreg,f,c
  9757  004F2A  0B3F               	andlw	63
  9758  004F2C  0B01               	andlw	1
  9759  004F2E  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9760  004F30  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9761                           
  9762                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 541:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  9763  004F34  0E05               	movlw	5
  9764  004F36  240F               	addwf	lcd_send_4bits@lcd^0,w,c
  9765  004F38  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  9766  004F3A  0E00               	movlw	0
  9767  004F3C  2010               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  9768  004F3E  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9769  004F40  3811               	swapf	lcd_send_4bits@data_command^0,w,c
  9770  004F42  46E8               	rlncf	wreg,f,c
  9771  004F44  0B1F               	andlw	31
  9772  004F46  0B01               	andlw	1
  9773  004F48  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9774  004F4A  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9775  004F4E                     l252:
  9776  004F4E  0012               	return		;funcret
  9777  004F50                     __end_of_lcd_send_4bits:
  9778                           	callstack 0
  9779                           
  9780 ;; *************** function _lcd_4bits_send_enable_signal *****************
  9781 ;; Defined at:
  9782 ;;		line 512 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  lcd             2   14[COMRAM] PTR const struct .
  9785 ;;		 -> lcd1(6), 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  ERRORSTATUS     1    0        unsigned char 
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      unsigned char 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;Total ram usage:        2 bytes
  9802 ;; Hardware stack levels used: 1
  9803 ;; Hardware stack levels required when called: 5
  9804 ;; This function calls:
  9805 ;;		_GPIO_Pin_Write_Logic
  9806 ;; This function is called by:
  9807 ;;		_lcd_4bit_send_command
  9808 ;;		_lcd_4bit_send_char_data
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text39
  9813  0051CC                     __ptext39:
  9814                           	callstack 0
  9815  0051CC                     _lcd_4bits_send_enable_signal:
  9816                           	callstack 22
  9817  0051CC                     
  9818                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:         if ( ((void*)0)==lcd)
  9819  0051CC  500F               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  9820  0051CE  1010               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  9821  0051D0  A4D8               	btfss	status,2,c
  9822  0051D2  EFED  F028         	goto	u8531
  9823  0051D6  EFEF  F028         	goto	u8530
  9824  0051DA                     u8531:
  9825  0051DA  EFF1  F028         	goto	l8143
  9826  0051DE                     u8530:
  9827  0051DE                     
  9828                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 518:     }
  9829  0051DE  EF09  F029         	goto	l247
  9830  0051E2                     l8143:
  9831                           
  9832                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 520:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 52
      +                          1:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  9833  0051E2  0E01               	movlw	1
  9834  0051E4  240F               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  9835  0051E6  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  9836  0051E8  0E00               	movlw	0
  9837  0051EA  2010               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  9838  0051EC  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9839  0051EE  0E01               	movlw	1
  9840  0051F0  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9841  0051F2  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9842  0051F6                     
  9843                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 522:             _delay((unsigned long)((5)*(80000
      +                          00/4000000.0)));
  9844  0051F6  0E03               	movlw	3
  9845  0051F8                     u13767:
  9846  0051F8  2EE8               	decfsz	wreg,f,c
  9847  0051FA  D7FE               	bra	u13767
  9848  0051FC  F000               	nop	
  9849  0051FE                     
  9850                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 523:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  9851  0051FE  0E01               	movlw	1
  9852  005200  240F               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  9853  005202  6E05               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  9854  005204  0E00               	movlw	0
  9855  005206  2010               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  9856  005208  6E06               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9857  00520A  0E00               	movlw	0
  9858  00520C  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9859  00520E  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
  9860  005212                     l247:
  9861  005212  0012               	return		;funcret
  9862  005214                     __end_of_lcd_4bits_send_enable_signal:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function _Ultra_Sonic_Init *****************
  9866 ;; Defined at:
  9867 ;;		line 9 in file "Robot/sensors/ULTRA_SONIC/ultarsonic.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  ultrasonic_o    2   17[COMRAM] PTR const struct .
  9870 ;;		 -> ultrasonic(2), 
  9871 ;;  _tmr0_config    2   19[COMRAM] PTR const struct .
  9872 ;;		 -> timer0(4), 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  ERRORSTATUS     1    0        unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      unsigned char 
  9877 ;; Registers used:
  9878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;Total ram usage:        4 bytes
  9889 ;; Hardware stack levels used: 1
  9890 ;; Hardware stack levels required when called: 6
  9891 ;; This function calls:
  9892 ;;		_GPIO_Pin_Initialize
  9893 ;;		_HAL_Timer0_Init
  9894 ;; This function is called by:
  9895 ;;		_application_intialize
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text40
  9900  005130                     __ptext40:
  9901                           	callstack 0
  9902  005130                     _Ultra_Sonic_Init:
  9903                           	callstack 23
  9904  005130                     
  9905                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 12:     if ( ((void*)0)==ultrasonic_object||((v
      +                          oid*)0)==_tmr0_config)
  9906  005130  5012               	movf	Ultra_Sonic_Init@ultrasonic_object^0,w,c
  9907  005132  1013               	iorwf	(Ultra_Sonic_Init@ultrasonic_object+1)^0,w,c
  9908  005134  B4D8               	btfsc	status,2,c
  9909  005136  EF9F  F028         	goto	u9201
  9910  00513A  EFA1  F028         	goto	u9200
  9911  00513E                     u9201:
  9912  00513E  EFAA  F028         	goto	l8711
  9913  005142                     u9200:
  9914  005142  5014               	movf	Ultra_Sonic_Init@_tmr0_config^0,w,c
  9915  005144  1015               	iorwf	(Ultra_Sonic_Init@_tmr0_config+1)^0,w,c
  9916  005146  A4D8               	btfss	status,2,c
  9917  005148  EFA8  F028         	goto	u9211
  9918  00514C  EFAA  F028         	goto	u9210
  9919  005150                     u9211:
  9920  005150  EFAC  F028         	goto	l8713
  9921  005154                     u9210:
  9922  005154                     l8711:
  9923                           
  9924                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 15:     }
  9925  005154  EFC0  F028         	goto	l1747
  9926  005158                     l8713:
  9927                           
  9928                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 17:     {;Robot/sensors/ULTRA_SONIC/ultarsonic.
      +                          c: 18:         GPIO_Pin_Initialize(&(ultrasonic_object->trig_pin));
  9929  005158  C012  F00F         	movff	Ultra_Sonic_Init@ultrasonic_object,GPIO_Pin_Initialize@_pin_config
  9930  00515C  C013  F010         	movff	Ultra_Sonic_Init@ultrasonic_object+1,GPIO_Pin_Initialize@_pin_config+1
  9931  005160  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9932                           
  9933                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 19:         GPIO_Pin_Initialize(&(ultrasonic_ob
      +                          ject->echo_pin));
  9934  005164  0E01               	movlw	1
  9935  005166  2412               	addwf	Ultra_Sonic_Init@ultrasonic_object^0,w,c
  9936  005168  6E0F               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  9937  00516A  0E00               	movlw	0
  9938  00516C  2013               	addwfc	(Ultra_Sonic_Init@ultrasonic_object+1)^0,w,c
  9939  00516E  6E10               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  9940  005170  ECC1  F028         	call	_GPIO_Pin_Initialize	;wreg free
  9941  005174                     
  9942                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 20:         HAL_Timer0_Init(_tmr0_config);
  9943  005174  C014  F00A         	movff	Ultra_Sonic_Init@_tmr0_config,HAL_Timer0_Init@_tmr0_config
  9944  005178  C015  F00B         	movff	Ultra_Sonic_Init@_tmr0_config+1,HAL_Timer0_Init@_tmr0_config+1
  9945  00517C  ECA7  F021         	call	_HAL_Timer0_Init	;wreg free
  9946  005180                     l1747:
  9947  005180  0012               	return		;funcret
  9948  005182                     __end_of_Ultra_Sonic_Init:
  9949                           	callstack 0
  9950                           
  9951 ;; *************** function _HAL_Timer0_Init *****************
  9952 ;; Defined at:
  9953 ;;		line 25 in file "MCAL/Timer0/hal_timer0.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  _tmr0_config    2    9[COMRAM] PTR const struct .
  9956 ;;		 -> timer0(4), 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  ret_value       1    0        unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      unsigned char 
  9961 ;; Registers used:
  9962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;Total ram usage:        3 bytes
  9973 ;; Hardware stack levels used: 1
  9974 ;; Hardware stack levels required when called: 5
  9975 ;; This function calls:
  9976 ;;		_HAL_Timer0_Write_Val
  9977 ;; This function is called by:
  9978 ;;		_Ultra_Sonic_Init
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           	psect	text41
  9983  00434E                     __ptext41:
  9984                           	callstack 0
  9985  00434E                     _HAL_Timer0_Init:
  9986                           	callstack 23
  9987  00434E                     
  9988                           ;MCAL/Timer0/hal_timer0.c: 29:     if(((void*)0) == _tmr0_config)
  9989  00434E  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  9990  004350  100B               	iorwf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  9991  004352  A4D8               	btfss	status,2,c
  9992  004354  EFAE  F021         	goto	u8761
  9993  004358  EFB0  F021         	goto	u8760
  9994  00435C                     u8761:
  9995  00435C  EFB2  F021         	goto	l1497
  9996  004360                     u8760:
  9997  004360                     
  9998                           ;MCAL/Timer0/hal_timer0.c: 32:     }
  9999  004360  EF25  F022         	goto	l1504
 10000  004364                     l1497:
 10001                           
 10002                           ;MCAL/Timer0/hal_timer0.c: 34:     {;MCAL/Timer0/hal_timer0.c: 36:         (T0CONbits.TM
      +                          R0ON = 0 );
 10003  004364  9ED5               	bcf	213,7,c	;volatile
 10004  004366                     
 10005                           ;MCAL/Timer0/hal_timer0.c: 38:         (T0CONbits.T08BIT = _tmr0_config->reg_bit_size);
 10006  004366  EE20 F003          	lfsr	2,3
 10007  00436A  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10008  00436C  26D9               	addwf	fsr2l,f,c
 10009  00436E  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10010  004370  22DA               	addwfc	fsr2h,f,c
 10011  004372  A2DF               	btfss	indf2,1,c
 10012  004374  D002               	bra	u8775
 10013  004376  8CD5               	bsf	213,6,c	;volatile
 10014  004378  D001               	bra	u8777
 10015  00437A                     u8775:
 10016  00437A  9CD5               	bcf	213,6,c	;volatile
 10017  00437C                     u8777:
 10018                           
 10019                           ;MCAL/Timer0/hal_timer0.c: 40:         if(0x00U == _tmr0_config->prescaler_enable )
 10020  00437C  EE20 F003          	lfsr	2,3
 10021  004380  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10022  004382  26D9               	addwf	fsr2l,f,c
 10023  004384  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10024  004386  22DA               	addwfc	fsr2h,f,c
 10025  004388  B4DF               	btfsc	indf2,2,c
 10026  00438A  EFC9  F021         	goto	u8781
 10027  00438E  EFCB  F021         	goto	u8780
 10028  004392                     u8781:
 10029  004392  EFD9  F021         	goto	l8331
 10030  004396                     u8780:
 10031  004396                     
 10032                           ;MCAL/Timer0/hal_timer0.c: 41:         {;MCAL/Timer0/hal_timer0.c: 42:             (T0CO
      +                          Nbits.T0PS = _tmr0_config->prescalar_value );
 10033  004396  C00A  FFD9         	movff	HAL_Timer0_Init@_tmr0_config,fsr2l
 10034  00439A  C00B  FFDA         	movff	HAL_Timer0_Init@_tmr0_config+1,fsr2h
 10035  00439E  50DF               	movf	indf2,w,c
 10036  0043A0  6E0C               	movwf	??_HAL_Timer0_Init^0,c
 10037  0043A2  50D5               	movf	213,w,c	;volatile
 10038  0043A4  180C               	xorwf	??_HAL_Timer0_Init^0,w,c
 10039  0043A6  0BF8               	andlw	-8
 10040  0043A8  180C               	xorwf	??_HAL_Timer0_Init^0,w,c
 10041  0043AA  6ED5               	movwf	213,c	;volatile
 10042  0043AC                     
 10043                           ;MCAL/Timer0/hal_timer0.c: 43:             (T0CONbits.PSA = 0 );
 10044  0043AC  96D5               	bcf	213,3,c	;volatile
 10045                           
 10046                           ;MCAL/Timer0/hal_timer0.c: 44:         }
 10047  0043AE  EFE7  F021         	goto	l8335
 10048  0043B2                     l8331:
 10049  0043B2  EE20 F003          	lfsr	2,3
 10050  0043B6  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10051  0043B8  26D9               	addwf	fsr2l,f,c
 10052  0043BA  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10053  0043BC  22DA               	addwfc	fsr2h,f,c
 10054  0043BE  A4DF               	btfss	indf2,2,c
 10055  0043C0  EFE4  F021         	goto	u8791
 10056  0043C4  EFE6  F021         	goto	u8790
 10057  0043C8                     u8791:
 10058  0043C8  EFE7  F021         	goto	l8335
 10059  0043CC                     u8790:
 10060  0043CC                     
 10061                           ;MCAL/Timer0/hal_timer0.c: 46:         {;MCAL/Timer0/hal_timer0.c: 47:             (T0CO
      +                          Nbits.PSA = 1 );
 10062  0043CC  86D5               	bsf	213,3,c	;volatile
 10063  0043CE                     l8335:
 10064                           
 10065                           ;MCAL/Timer0/hal_timer0.c: 52:         if( 0x01U == _tmr0_config->timer_mode)
 10066  0043CE  EE20 F003          	lfsr	2,3
 10067  0043D2  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10068  0043D4  26D9               	addwf	fsr2l,f,c
 10069  0043D6  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10070  0043D8  22DA               	addwfc	fsr2h,f,c
 10071  0043DA  A0DF               	btfss	indf2,0,c
 10072  0043DC  EFF2  F021         	goto	u8801
 10073  0043E0  EFF4  F021         	goto	u8800
 10074  0043E4                     u8801:
 10075  0043E4  EF00  F022         	goto	l8341
 10076  0043E8                     u8800:
 10077  0043E8                     
 10078                           ;MCAL/Timer0/hal_timer0.c: 53:         {;MCAL/Timer0/hal_timer0.c: 55:              (T0C
      +                          ONbits.T0SE = _tmr0_config->edge);
 10079  0043E8  EE20 F003          	lfsr	2,3
 10080  0043EC  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10081  0043EE  26D9               	addwf	fsr2l,f,c
 10082  0043F0  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10083  0043F2  22DA               	addwfc	fsr2h,f,c
 10084  0043F4  A6DF               	btfss	indf2,3,c
 10085  0043F6  D002               	bra	u8815
 10086  0043F8  88D5               	bsf	213,4,c	;volatile
 10087  0043FA  D001               	bra	u8817
 10088  0043FC                     u8815:
 10089  0043FC  98D5               	bcf	213,4,c	;volatile
 10090  0043FE                     u8817:
 10091  0043FE                     
 10092                           ;MCAL/Timer0/hal_timer0.c: 58:             (TRISA|=( (uint8)1<<GPIO_PIN4 ));
 10093  0043FE  8892               	bsf	146,4,c	;volatile
 10094  004400                     l8341:
 10095                           
 10096                           ;MCAL/Timer0/hal_timer0.c: 60:         (T0CONbits.T0CS = _tmr0_config->timer_mode);
 10097  004400  EE20 F003          	lfsr	2,3
 10098  004404  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10099  004406  26D9               	addwf	fsr2l,f,c
 10100  004408  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10101  00440A  22DA               	addwfc	fsr2h,f,c
 10102  00440C  A0DF               	btfss	indf2,0,c
 10103  00440E  D002               	bra	u8825
 10104  004410  8AD5               	bsf	213,5,c	;volatile
 10105  004412  D001               	bra	u8827
 10106  004414                     u8825:
 10107  004414  9AD5               	bcf	213,5,c	;volatile
 10108  004416                     u8827:
 10109  004416  C00A  F005         	movff	HAL_Timer0_Init@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
 10110  00441A  C00B  F006         	movff	HAL_Timer0_Init@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
 10111  00441E  EE20 F001          	lfsr	2,1
 10112  004422  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10113  004424  26D9               	addwf	fsr2l,f,c
 10114  004426  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10115  004428  22DA               	addwfc	fsr2h,f,c
 10116  00442A  CFDE F007          	movff	postinc2,HAL_Timer0_Write_Val@val
 10117  00442E  CFDD F008          	movff	postdec2,HAL_Timer0_Write_Val@val+1
 10118  004432  EC66  F02A         	call	_HAL_Timer0_Write_Val	;wreg free
 10119  004436                     
 10120                           ;MCAL/Timer0/hal_timer0.c: 64:         preloaded_val = _tmr0_config->preloaded_value ;
 10121  004436  EE20 F001          	lfsr	2,1
 10122  00443A  500A               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
 10123  00443C  26D9               	addwf	fsr2l,f,c
 10124  00443E  500B               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
 10125  004440  22DA               	addwfc	fsr2h,f,c
 10126  004442  CFDE F119          	movff	postinc2,_preloaded_val
 10127  004446  CFDD F11A          	movff	postdec2,_preloaded_val+1
 10128  00444A                     l1504:
 10129  00444A  0012               	return		;funcret
 10130  00444C                     __end_of_HAL_Timer0_Init:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function _GPIO_Pin_Initialize *****************
 10134 ;; Defined at:
 10135 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  _pin_config     2   14[COMRAM] PTR const struct .
 10138 ;;		 -> pinc1(1), pinc0(1), ultrasonic(2), lcd1.lcd_data_pins(4), 
 10139 ;;		 -> lcd1(6), CCP2_Obj(12), CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), 
 10140 ;;		 -> W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2), W1_W3_W5_Motor_Control(2), 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  ERRORSTATUS     1   16[COMRAM] unsigned char 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      unsigned char 
 10145 ;; Registers used:
 10146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;Total ram usage:        3 bytes
 10157 ;; Hardware stack levels used: 1
 10158 ;; Hardware stack levels required when called: 5
 10159 ;; This function calls:
 10160 ;;		_GPIO_Pin_Direction_Initialize
 10161 ;;		_GPIO_Pin_Write_Logic
 10162 ;; This function is called by:
 10163 ;;		_lcd_4bit_initialize
 10164 ;;		_application_intialize
 10165 ;;		_Ultra_Sonic_Init
 10166 ;;		_ECU_DC_Motor_Init
 10167 ;;		_IR_Sensor_Init
 10168 ;;		_lcd_8bit_initialize
 10169 ;;		_CCP_Init
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text42
 10174  005182                     __ptext42:
 10175                           	callstack 0
 10176  005182                     _GPIO_Pin_Initialize:
 10177                           	callstack 23
 10178  005182                     
 10179                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
 10180  005182  500F               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
 10181  005184  1010               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
 10182  005186  A4D8               	btfss	status,2,c
 10183  005188  EFC8  F028         	goto	u8701
 10184  00518C  EFCA  F028         	goto	u8700
 10185  005190                     u8701:
 10186  005190  EFCE  F028         	goto	l8273
 10187  005194                     u8700:
 10188  005194                     
 10189                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
 10190  005194  0E00               	movlw	0
 10191  005196  6E11               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
 10192                           
 10193                           ;MCAL/GPIO/hal_gpio.c: 164:     }
 10194  005198  EFE4  F028         	goto	l8275
 10195  00519C                     l8273:
 10196                           
 10197                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
 10198  00519C  C00F  F005         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
 10199  0051A0  C010  F006         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
 10200  0051A4  ECE1  F01D         	call	_GPIO_Pin_Direction_Initialize	;wreg free
 10201  0051A8  6E11               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
 10202                           
 10203                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
 10204  0051AA  C00F  F005         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
 10205  0051AE  C010  F006         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
 10206  0051B2  C00F  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
 10207  0051B6  C010  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
 10208  0051BA  0E00               	movlw	0
 10209  0051BC  BEDF               	btfsc	indf2,7,c
 10210  0051BE  0E01               	movlw	1
 10211  0051C0  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10212  0051C2  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
 10213  0051C6  6E11               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
 10214  0051C8                     l8275:
 10215                           
 10216                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
 10217  0051C8  5011               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
 10218  0051CA  0012               	return		;funcret
 10219  0051CC                     __end_of_GPIO_Pin_Initialize:
 10220                           	callstack 0
 10221                           
 10222 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
 10223 ;; Defined at:
 10224 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  _pin_config     2    4[COMRAM] PTR const struct .
 10227 ;;		 -> pinc1(1), pinc0(1), ultrasonic(2), lcd1.lcd_data_pins(4), 
 10228 ;;		 -> lcd1(6), CCP2_Obj(12), CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), 
 10229 ;;		 -> W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2), W1_W3_W5_Motor_Control(2), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;  ERRORSTATUS     1   12[COMRAM] unsigned char 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      unsigned char 
 10234 ;; Registers used:
 10235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;Total ram usage:        9 bytes
 10246 ;; Hardware stack levels used: 1
 10247 ;; Hardware stack levels required when called: 4
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_GPIO_Pin_Initialize
 10252 ;;		_interrupt_RBx_pin_init
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text43
 10257  003BC2                     __ptext43:
 10258                           	callstack 0
 10259  003BC2                     _GPIO_Pin_Direction_Initialize:
 10260                           	callstack 23
 10261  003BC2                     
 10262                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
 10263  003BC2  0E01               	movlw	1
 10264  003BC4  6E0D               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
 10265  003BC6                     
 10266                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 10267  003BC6  5005               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
 10268  003BC8  1006               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
 10269  003BCA  B4D8               	btfsc	status,2,c
 10270  003BCC  EFEA  F01D         	goto	u8541
 10271  003BD0  EFEC  F01D         	goto	u8540
 10272  003BD4                     u8541:
 10273  003BD4  EFFB  F01D         	goto	l8157
 10274  003BD8                     u8540:
 10275  003BD8  C005  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10276  003BDC  C006  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10277  003BE0  50DF               	movf	223,w,c
 10278  003BE2  0B07               	andlw	7
 10279  003BE4  6E07               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
 10280  003BE6  0E07               	movlw	7
 10281  003BE8  6407               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
 10282  003BEA  EFF9  F01D         	goto	u8551
 10283  003BEE  EFFB  F01D         	goto	u8550
 10284  003BF2                     u8551:
 10285  003BF2  EF5E  F01E         	goto	l8165
 10286  003BF6                     u8550:
 10287  003BF6                     l8157:
 10288                           
 10289                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 10290  003BF6  0E00               	movlw	0
 10291  003BF8  6E0D               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
 10292                           
 10293                           ;MCAL/GPIO/hal_gpio.c: 31:     }
 10294  003BFA  EF7F  F01E         	goto	l8167
 10295  003BFE                     l8159:
 10296                           
 10297                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
 10298  003BFE  C005  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10299  003C02  C006  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10300  003C06  50DF               	movf	223,w,c
 10301  003C08  0B07               	andlw	7
 10302  003C0A  6E07               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
 10303  003C0C  0E01               	movlw	1
 10304  003C0E  6E08               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
 10305  003C10  2A07               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
 10306  003C12  EF0D  F01E         	goto	u8564
 10307  003C16                     u8565:
 10308  003C16  90D8               	bcf	status,0,c
 10309  003C18  3608               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
 10310  003C1A                     u8564:
 10311  003C1A  2E07               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
 10312  003C1C  EF0B  F01E         	goto	u8565
 10313  003C20  5008               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
 10314  003C22  0AFF               	xorlw	255
 10315  003C24  6E09               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
 10316  003C26  C005  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10317  003C2A  C006  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10318  003C2E  30DF               	rrcf	223,w,c
 10319  003C30  32E8               	rrcf	wreg,f,c
 10320  003C32  32E8               	rrcf	wreg,f,c
 10321  003C34  0B07               	andlw	7
 10322  003C36  6E0A               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
 10323  003C38  500A               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
 10324  003C3A  0D02               	mullw	2
 10325  003C3C  0E98               	movlw	low _tris_registers
 10326  003C3E  24F3               	addwf	243,w,c
 10327  003C40  6ED9               	movwf	fsr2l,c
 10328  003C42  0E01               	movlw	high _tris_registers
 10329  003C44  20F4               	addwfc	prodh,w,c
 10330  003C46  6EDA               	movwf	fsr2h,c
 10331  003C48  CFDE F00B          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
 10332  003C4C  CFDD F00C          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
 10333  003C50  C00B  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
 10334  003C54  C00C  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
 10335  003C58  5009               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
 10336  003C5A  16DF               	andwf	indf2,f,c
 10337                           
 10338                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
 10339  003C5C  EF7F  F01E         	goto	l8167
 10340  003C60                     l8161:
 10341                           
 10342                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
 10343  003C60  C005  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10344  003C64  C006  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10345  003C68  50DF               	movf	223,w,c
 10346  003C6A  0B07               	andlw	7
 10347  003C6C  6E07               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
 10348  003C6E  0E01               	movlw	1
 10349  003C70  6E08               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
 10350  003C72  2A07               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
 10351  003C74  EF3E  F01E         	goto	u8574
 10352  003C78                     u8575:
 10353  003C78  90D8               	bcf	status,0,c
 10354  003C7A  3608               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
 10355  003C7C                     u8574:
 10356  003C7C  2E07               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
 10357  003C7E  EF3C  F01E         	goto	u8575
 10358  003C82  C005  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10359  003C86  C006  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10360  003C8A  30DF               	rrcf	223,w,c
 10361  003C8C  32E8               	rrcf	wreg,f,c
 10362  003C8E  32E8               	rrcf	wreg,f,c
 10363  003C90  0B07               	andlw	7
 10364  003C92  6E09               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
 10365  003C94  5009               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
 10366  003C96  0D02               	mullw	2
 10367  003C98  0E98               	movlw	low _tris_registers
 10368  003C9A  24F3               	addwf	243,w,c
 10369  003C9C  6ED9               	movwf	fsr2l,c
 10370  003C9E  0E01               	movlw	high _tris_registers
 10371  003CA0  20F4               	addwfc	prodh,w,c
 10372  003CA2  6EDA               	movwf	fsr2h,c
 10373  003CA4  CFDE F00A          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
 10374  003CA8  CFDD F00B          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
 10375  003CAC  C00A  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
 10376  003CB0  C00B  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
 10377  003CB4  5008               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
 10378  003CB6  12DF               	iorwf	indf2,f,c
 10379                           
 10380                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
 10381  003CB8  EF7F  F01E         	goto	l8167
 10382  003CBC                     l8165:
 10383  003CBC  C005  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10384  003CC0  C006  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10385  003CC4  BCDF               	btfsc	indf2,6,c
 10386  003CC6  EF67  F01E         	goto	u8581
 10387  003CCA  EF6A  F01E         	goto	u8580
 10388  003CCE                     u8581:
 10389  003CCE  0E01               	movlw	1
 10390  003CD0  EF6B  F01E         	goto	u8590
 10391  003CD4                     u8580:
 10392  003CD4  0E00               	movlw	0
 10393  003CD6                     u8590:
 10394  003CD6  6E07               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
 10395  003CD8  6A08               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
 10396                           
 10397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10398                           ; Switch size 1, requested type "simple"
 10399                           ; Number of cases is 1, Range of values is 0 to 0
 10400                           ; switch strategies available:
 10401                           ; Name         Instructions Cycles
 10402                           ; simple_byte            4     3 (average)
 10403                           ;	Chosen strategy is simple_byte
 10404  003CDA  5008               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
 10405  003CDC  0A00               	xorlw	0	; case 0
 10406  003CDE  B4D8               	btfsc	status,2,c
 10407  003CE0  EF74  F01E         	goto	l11939
 10408  003CE4  EFFB  F01D         	goto	l8157
 10409  003CE8                     l11939:
 10410                           
 10411                           ; Switch size 1, requested type "simple"
 10412                           ; Number of cases is 2, Range of values is 0 to 1
 10413                           ; switch strategies available:
 10414                           ; Name         Instructions Cycles
 10415                           ; simple_byte            7     4 (average)
 10416                           ;	Chosen strategy is simple_byte
 10417  003CE8  5007               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
 10418  003CEA  0A00               	xorlw	0	; case 0
 10419  003CEC  B4D8               	btfsc	status,2,c
 10420  003CEE  EFFF  F01D         	goto	l8159
 10421  003CF2  0A01               	xorlw	1	; case 1
 10422  003CF4  B4D8               	btfsc	status,2,c
 10423  003CF6  EF30  F01E         	goto	l8161
 10424  003CFA  EFFB  F01D         	goto	l8157
 10425  003CFE                     l8167:
 10426                           
 10427                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
 10428  003CFE  500D               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
 10429  003D00  0012               	return		;funcret
 10430  003D02                     __end_of_GPIO_Pin_Direction_Initialize:
 10431                           	callstack 0
 10432                           
 10433 ;; *************** function _Get_Temp_HUM *****************
 10434 ;; Defined at:
 10435 ;;		line 13 in file "Robot/sensors/DHT11/DHT11.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  RH_Decimal      2    8[COMRAM] PTR unsigned char 
 10438 ;;		 -> RH_Decimal(1), 
 10439 ;;  RH_Integral     2   10[COMRAM] PTR unsigned char 
 10440 ;;		 -> RH_Integral(1), 
 10441 ;;  T_Decimal       2   12[COMRAM] PTR unsigned char 
 10442 ;;		 -> T_Decimal(1), 
 10443 ;;  T_Integral      2   14[COMRAM] PTR unsigned char 
 10444 ;;		 -> T_Integral(1), 
 10445 ;;  Checksum        2   16[COMRAM] PTR unsigned char 
 10446 ;;		 -> Checksum(1), 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  ERRORSTATUS     1    0        unsigned char 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  1    wreg      unsigned char 
 10451 ;; Registers used:
 10452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10458 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;Total ram usage:       10 bytes
 10463 ;; Hardware stack levels used: 1
 10464 ;; Hardware stack levels required when called: 5
 10465 ;; This function calls:
 10466 ;;		_DHT11_Check_Response
 10467 ;;		_DHT11_Read_Data
 10468 ;;		_DHT11_Start
 10469 ;; This function is called by:
 10470 ;;		_main
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           	psect	text44
 10475  004D1E                     __ptext44:
 10476                           	callstack 0
 10477  004D1E                     _Get_Temp_HUM:
 10478                           	callstack 25
 10479  004D1E                     
 10480                           ;Robot/sensors/DHT11/DHT11.c: 16:     if ( ((void*)0)==RH_Decimal||((void*)0)==RH_Integr
      +                          al||((void*)0)==T_Decimal||((void*)0)==T_Integral||((void*)0)==Checksum)
 10481  004D1E  5009               	movf	Get_Temp_HUM@RH_Decimal^0,w,c
 10482  004D20  100A               	iorwf	(Get_Temp_HUM@RH_Decimal+1)^0,w,c
 10483  004D22  B4D8               	btfsc	status,2,c
 10484  004D24  EF96  F026         	goto	u9791
 10485  004D28  EF98  F026         	goto	u9790
 10486  004D2C                     u9791:
 10487  004D2C  EFBC  F026         	goto	l9137
 10488  004D30                     u9790:
 10489  004D30  500B               	movf	Get_Temp_HUM@RH_Integral^0,w,c
 10490  004D32  100C               	iorwf	(Get_Temp_HUM@RH_Integral+1)^0,w,c
 10491  004D34  B4D8               	btfsc	status,2,c
 10492  004D36  EF9F  F026         	goto	u9801
 10493  004D3A  EFA1  F026         	goto	u9800
 10494  004D3E                     u9801:
 10495  004D3E  EFBC  F026         	goto	l9137
 10496  004D42                     u9800:
 10497  004D42  500D               	movf	Get_Temp_HUM@T_Decimal^0,w,c
 10498  004D44  100E               	iorwf	(Get_Temp_HUM@T_Decimal+1)^0,w,c
 10499  004D46  B4D8               	btfsc	status,2,c
 10500  004D48  EFA8  F026         	goto	u9811
 10501  004D4C  EFAA  F026         	goto	u9810
 10502  004D50                     u9811:
 10503  004D50  EFBC  F026         	goto	l9137
 10504  004D54                     u9810:
 10505  004D54  500F               	movf	Get_Temp_HUM@T_Integral^0,w,c
 10506  004D56  1010               	iorwf	(Get_Temp_HUM@T_Integral+1)^0,w,c
 10507  004D58  B4D8               	btfsc	status,2,c
 10508  004D5A  EFB1  F026         	goto	u9821
 10509  004D5E  EFB3  F026         	goto	u9820
 10510  004D62                     u9821:
 10511  004D62  EFBC  F026         	goto	l9137
 10512  004D66                     u9820:
 10513  004D66  5011               	movf	Get_Temp_HUM@Checksum^0,w,c
 10514  004D68  1012               	iorwf	(Get_Temp_HUM@Checksum+1)^0,w,c
 10515  004D6A  A4D8               	btfss	status,2,c
 10516  004D6C  EFBA  F026         	goto	u9831
 10517  004D70  EFBC  F026         	goto	u9830
 10518  004D74                     u9831:
 10519  004D74  EFBE  F026         	goto	l9139
 10520  004D78                     u9830:
 10521  004D78                     l9137:
 10522                           
 10523                           ;Robot/sensors/DHT11/DHT11.c: 19:     }
 10524  004D78  EFE0  F026         	goto	l1635
 10525  004D7C                     l9139:
 10526                           
 10527                           ;Robot/sensors/DHT11/DHT11.c: 21:     {;Robot/sensors/DHT11/DHT11.c: 22:        DHT11_St
      +                          art();
 10528  004D7C  EC7B  F02A         	call	_DHT11_Start	;wreg free
 10529  004D80                     
 10530                           ;Robot/sensors/DHT11/DHT11.c: 23:        DHT11_Check_Response();
 10531  004D80  EC3B  F02A         	call	_DHT11_Check_Response	;wreg free
 10532  004D84                     
 10533                           ;Robot/sensors/DHT11/DHT11.c: 24:        DHT11_Read_Data(RH_Decimal);
 10534  004D84  C009  F005         	movff	Get_Temp_HUM@RH_Decimal,DHT11_Read_Data@data
 10535  004D88  C00A  F006         	movff	Get_Temp_HUM@RH_Decimal+1,DHT11_Read_Data@data+1
 10536  004D8C  ECE1  F026         	call	_DHT11_Read_Data	;wreg free
 10537  004D90                     
 10538                           ;Robot/sensors/DHT11/DHT11.c: 25:        DHT11_Read_Data(RH_Integral);
 10539  004D90  C00B  F005         	movff	Get_Temp_HUM@RH_Integral,DHT11_Read_Data@data
 10540  004D94  C00C  F006         	movff	Get_Temp_HUM@RH_Integral+1,DHT11_Read_Data@data+1
 10541  004D98  ECE1  F026         	call	_DHT11_Read_Data	;wreg free
 10542  004D9C                     
 10543                           ;Robot/sensors/DHT11/DHT11.c: 26:        DHT11_Read_Data(T_Decimal);
 10544  004D9C  C00D  F005         	movff	Get_Temp_HUM@T_Decimal,DHT11_Read_Data@data
 10545  004DA0  C00E  F006         	movff	Get_Temp_HUM@T_Decimal+1,DHT11_Read_Data@data+1
 10546  004DA4  ECE1  F026         	call	_DHT11_Read_Data	;wreg free
 10547  004DA8                     
 10548                           ;Robot/sensors/DHT11/DHT11.c: 27:        DHT11_Read_Data(T_Integral);
 10549  004DA8  C00F  F005         	movff	Get_Temp_HUM@T_Integral,DHT11_Read_Data@data
 10550  004DAC  C010  F006         	movff	Get_Temp_HUM@T_Integral+1,DHT11_Read_Data@data+1
 10551  004DB0  ECE1  F026         	call	_DHT11_Read_Data	;wreg free
 10552  004DB4                     
 10553                           ;Robot/sensors/DHT11/DHT11.c: 28:        DHT11_Read_Data(Checksum);
 10554  004DB4  C011  F005         	movff	Get_Temp_HUM@Checksum,DHT11_Read_Data@data
 10555  004DB8  C012  F006         	movff	Get_Temp_HUM@Checksum+1,DHT11_Read_Data@data+1
 10556  004DBC  ECE1  F026         	call	_DHT11_Read_Data	;wreg free
 10557  004DC0                     l1635:
 10558  004DC0  0012               	return		;funcret
 10559  004DC2                     __end_of_Get_Temp_HUM:
 10560                           	callstack 0
 10561                           
 10562 ;; *************** function _DHT11_Start *****************
 10563 ;; Defined at:
 10564 ;;		line 32 in file "Robot/sensors/DHT11/DHT11.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;		None
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  1    wreg      void 
 10571 ;; Registers used:
 10572 ;;		wreg
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10580 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10582 ;;Total ram usage:        1 bytes
 10583 ;; Hardware stack levels used: 1
 10584 ;; Hardware stack levels required when called: 4
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_Get_Temp_HUM
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           	psect	text45
 10593  0054F6                     __ptext45:
 10594                           	callstack 0
 10595  0054F6                     _DHT11_Start:
 10596                           	callstack 25
 10597  0054F6                     
 10598                           ;Robot/sensors/DHT11/DHT11.c: 34:     TRISDbits.TRISD7=GPIO_DIRECTION_OUTPUT;
 10599  0054F6  9E95               	bcf	149,7,c	;volatile
 10600                           
 10601                           ;Robot/sensors/DHT11/DHT11.c: 35:     LATDbits.LATD7=GPIO_LOW;
 10602  0054F8  9E8C               	bcf	140,7,c	;volatile
 10603  0054FA                     
 10604                           ;Robot/sensors/DHT11/DHT11.c: 36:     _delay((unsigned long)((18)*(8000000/4000.0)));
 10605  0054FA  0E2F               	movlw	47
 10606  0054FC  6E05               	movwf	??_DHT11_Start^0,c
 10607  0054FE  0EC0               	movlw	192
 10608  005500                     u13777:
 10609  005500  2EE8               	decfsz	wreg,f,c
 10610  005502  D7FE               	bra	u13777
 10611  005504  2E05               	decfsz	??_DHT11_Start^0,f,c
 10612  005506  D7FC               	bra	u13777
 10613  005508                     
 10614                           ;Robot/sensors/DHT11/DHT11.c: 37:     LATDbits.LATD7=GPIO_HIGH;
 10615  005508  8E8C               	bsf	140,7,c	;volatile
 10616                           
 10617                           ;Robot/sensors/DHT11/DHT11.c: 38:     _delay((unsigned long)((30)*(8000000/4000000.0)));
 10618  00550A  0E14               	movlw	20
 10619  00550C                     u13787:
 10620  00550C  2EE8               	decfsz	wreg,f,c
 10621  00550E  D7FE               	bra	u13787
 10622  005510                     
 10623                           ;Robot/sensors/DHT11/DHT11.c: 39:     TRISDbits.TRISD7=GPIO_DIRECTION_INPUT;
 10624  005510  8E95               	bsf	149,7,c	;volatile
 10625  005512  0012               	return		;funcret
 10626  005514                     __end_of_DHT11_Start:
 10627                           	callstack 0
 10628                           
 10629 ;; *************** function _DHT11_Read_Data *****************
 10630 ;; Defined at:
 10631 ;;		line 47 in file "Robot/sensors/DHT11/DHT11.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  data            2    4[COMRAM] PTR unsigned char 
 10634 ;;		 -> Checksum(1), T_Integral(1), T_Decimal(1), RH_Integral(1), 
 10635 ;;		 -> RH_Decimal(1), 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  i               1    7[COMRAM] unsigned char 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      void 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;Total ram usage:        4 bytes
 10652 ;; Hardware stack levels used: 1
 10653 ;; Hardware stack levels required when called: 4
 10654 ;; This function calls:
 10655 ;;		Nothing
 10656 ;; This function is called by:
 10657 ;;		_Get_Temp_HUM
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           	psect	text46
 10662  004DC2                     __ptext46:
 10663                           	callstack 0
 10664  004DC2                     _DHT11_Read_Data:
 10665                           	callstack 25
 10666  004DC2                     
 10667                           ;Robot/sensors/DHT11/DHT11.c: 47: static void DHT11_Read_Data(uint8* data);Robot/sensors
      +                          /DHT11/DHT11.c: 48: {;Robot/sensors/DHT11/DHT11.c: 49:   uint8 i;;Robot/sensors/DHT11/DH
      +                          T11.c: 50:   *data = 0;
 10668  004DC2  C005  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 10669  004DC6  C006  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 10670  004DCA  0E00               	movlw	0
 10671  004DCC  6EDF               	movwf	indf2,c
 10672  004DCE                     
 10673                           ;Robot/sensors/DHT11/DHT11.c: 51:     for(i=0;i<8;i++)
 10674  004DCE  0E00               	movlw	0
 10675  004DD0  6E08               	movwf	DHT11_Read_Data@i^0,c
 10676  004DD2                     l1655:
 10677  004DD2  AE83               	btfss	131,7,c	;volatile
 10678  004DD4  EFEE  F026         	goto	u9161
 10679  004DD8  EFF0  F026         	goto	u9160
 10680  004DDC                     u9161:
 10681  004DDC  EFE9  F026         	goto	l1655
 10682  004DE0                     u9160:
 10683  004DE0                     
 10684                           ;Robot/sensors/DHT11/DHT11.c: 54:         _delay((unsigned long)((40)*(8000000/4000000.0
      +                          )));
 10685  004DE0  0E1A               	movlw	26
 10686  004DE2                     u13797:
 10687  004DE2  2EE8               	decfsz	wreg,f,c
 10688  004DE4  D7FE               	bra	u13797
 10689  004DE6  D000               	nop2	
 10690  004DE8                     
 10691                           ;Robot/sensors/DHT11/DHT11.c: 55:         if(PORTDbits.RD7 & 1)
 10692  004DE8  AE83               	btfss	131,7,c	;volatile
 10693  004DEA  EFF9  F026         	goto	u9171
 10694  004DEE  EFFB  F026         	goto	u9170
 10695  004DF2                     u9171:
 10696  004DF2  EF0A  F027         	goto	l8699
 10697  004DF6                     u9170:
 10698  004DF6                     
 10699                           ;Robot/sensors/DHT11/DHT11.c: 56:         {;Robot/sensors/DHT11/DHT11.c: 57:            
      +                           *data = (((*data)<<1)|1);
 10700  004DF6  C005  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 10701  004DFA  C006  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 10702  004DFE  50DF               	movf	indf2,w,c
 10703  004E00  6E07               	movwf	??_DHT11_Read_Data^0,c
 10704  004E02  80D8               	bsf	status,0,c
 10705  004E04  3407               	rlcf	??_DHT11_Read_Data^0,w,c
 10706  004E06  C005  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 10707  004E0A  C006  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 10708  004E0E  6EDF               	movwf	indf2,c
 10709                           
 10710                           ;Robot/sensors/DHT11/DHT11.c: 59:         }
 10711  004E10  EF17  F027         	goto	l1660
 10712  004E14                     l8699:
 10713                           
 10714                           ;Robot/sensors/DHT11/DHT11.c: 61:         {;Robot/sensors/DHT11/DHT11.c: 62:            
      +                           *data = ((*data)<<1);
 10715  004E14  C005  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 10716  004E18  C006  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 10717  004E1C  50DF               	movf	indf2,w,c
 10718  004E1E  6E07               	movwf	??_DHT11_Read_Data^0,c
 10719  004E20  90D8               	bcf	status,0,c
 10720  004E22  3407               	rlcf	??_DHT11_Read_Data^0,w,c
 10721  004E24  C005  FFD9         	movff	DHT11_Read_Data@data,fsr2l
 10722  004E28  C006  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
 10723  004E2C  6EDF               	movwf	indf2,c
 10724  004E2E                     l1660:
 10725  004E2E  BE83               	btfsc	131,7,c	;volatile
 10726  004E30  EF1C  F027         	goto	u9181
 10727  004E34  EF1E  F027         	goto	u9180
 10728  004E38                     u9181:
 10729  004E38  EF17  F027         	goto	l1660
 10730  004E3C                     u9180:
 10731  004E3C                     
 10732                           ;Robot/sensors/DHT11/DHT11.c: 66:     }
 10733  004E3C  2A08               	incf	DHT11_Read_Data@i^0,f,c
 10734  004E3E  0E07               	movlw	7
 10735  004E40  6408               	cpfsgt	DHT11_Read_Data@i^0,c
 10736  004E42  EF25  F027         	goto	u9191
 10737  004E46  EF27  F027         	goto	u9190
 10738  004E4A                     u9191:
 10739  004E4A  EFE9  F026         	goto	l1655
 10740  004E4E                     u9190:
 10741  004E4E  0012               	return		;funcret
 10742  004E50                     __end_of_DHT11_Read_Data:
 10743                           	callstack 0
 10744                           
 10745 ;; *************** function _DHT11_Check_Response *****************
 10746 ;; Defined at:
 10747 ;;		line 41 in file "Robot/sensors/DHT11/DHT11.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		None
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used: 1
 10767 ;; Hardware stack levels required when called: 4
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_Get_Temp_HUM
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text47
 10776  005476                     __ptext47:
 10777                           	callstack 0
 10778  005476                     _DHT11_Check_Response:
 10779                           	callstack 25
 10780  005476                     l1641:
 10781  005476  BE83               	btfsc	131,7,c	;volatile
 10782  005478  EF40  F02A         	goto	u9131
 10783  00547C  EF42  F02A         	goto	u9130
 10784  005480                     u9131:
 10785  005480  EF3B  F02A         	goto	l1641
 10786  005484                     u9130:
 10787  005484                     l1644:
 10788  005484  AE83               	btfss	131,7,c	;volatile
 10789  005486  EF47  F02A         	goto	u9141
 10790  00548A  EF49  F02A         	goto	u9140
 10791  00548E                     u9141:
 10792  00548E  EF42  F02A         	goto	l1644
 10793  005492                     u9140:
 10794  005492                     l1647:
 10795  005492  BE83               	btfsc	131,7,c	;volatile
 10796  005494  EF4E  F02A         	goto	u9151
 10797  005498  EF50  F02A         	goto	u9150
 10798  00549C                     u9151:
 10799  00549C  EF49  F02A         	goto	l1647
 10800  0054A0                     u9150:
 10801  0054A0  0012               	return		;funcret
 10802  0054A2                     __end_of_DHT11_Check_Response:
 10803                           	callstack 0
 10804                           
 10805 ;; *************** function _Get_Distance *****************
 10806 ;; Defined at:
 10807 ;;		line 25 in file "Robot/sensors/ULTRA_SONIC/ultarsonic.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  ultrasonic_o    2   43[COMRAM] PTR const struct .
 10810 ;;		 -> ultrasonic(2), 
 10811 ;;  _tmr0_config    2   45[COMRAM] PTR const struct .
 10812 ;;		 -> timer0(4), 
 10813 ;;  distance        2   47[COMRAM] PTR float 
 10814 ;;		 -> distance(4), 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;  timer_val       2   49[COMRAM] unsigned short 
 10817 ;;  logic           1   51[COMRAM] enum E2967
 10818 ;;  ERRORSTATUS     1    0        unsigned char 
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      unsigned char 
 10821 ;; Registers used:
 10822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10828 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10831 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10832 ;;Total ram usage:        9 bytes
 10833 ;; Hardware stack levels used: 1
 10834 ;; Hardware stack levels required when called: 6
 10835 ;; This function calls:
 10836 ;;		_GPIO_Pin_Read_Logic
 10837 ;;		_HAL_Timer0_Read_Val
 10838 ;;		_HAL_Timer0_Write_Val
 10839 ;;		___fldiv
 10840 ;;		___xxtofl
 10841 ;;		_send_trig_pulse
 10842 ;; This function is called by:
 10843 ;;		_main
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text48
 10848  00414C                     __ptext48:
 10849                           	callstack 0
 10850  00414C                     _Get_Distance:
 10851                           	callstack 24
 10852  00414C                     
 10853                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 25: Std_ReturnType Get_Distance(const ultrasoni
      +                          c_config_st* ultrasonic_object,const timer0_config_st *_tmr0_config,float32* distance);R
      +                          obot/sensors/ULTRA_SONIC/ultarsonic.c: 26: {;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 27:
      +                               logic_et logic=0;
 10854  00414C  0E00               	movlw	0
 10855  00414E  6E34               	movwf	Get_Distance@logic^0,c
 10856                           
 10857                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 28:     uint16 timer_val=0;
 10858  004150  0E00               	movlw	0
 10859  004152  6E33               	movwf	(Get_Distance@timer_val+1)^0,c
 10860  004154  0E00               	movlw	0
 10861  004156  6E32               	movwf	Get_Distance@timer_val^0,c
 10862  004158                     
 10863                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 30:     if ( ((void*)0)==distance)
 10864  004158  5030               	movf	Get_Distance@distance^0,w,c
 10865  00415A  1031               	iorwf	(Get_Distance@distance+1)^0,w,c
 10866  00415C  A4D8               	btfss	status,2,c
 10867  00415E  EFB3  F020         	goto	u13441
 10868  004162  EFB5  F020         	goto	u13440
 10869  004166                     u13441:
 10870  004166  EFB7  F020         	goto	l1750
 10871  00416A                     u13440:
 10872  00416A                     
 10873                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 34:     }
 10874  00416A  EF27  F021         	goto	l1758
 10875  00416E                     l1750:
 10876                           
 10877                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 36:     {;Robot/sensors/ULTRA_SONIC/ultarsonic.
      +                          c: 37:         (T0CONbits.TMR0ON = 0 );
 10878  00416E  9ED5               	bcf	213,7,c	;volatile
 10879  004170                     
 10880                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 38:         HAL_Timer0_Write_Val(_tmr0_config ,
      +                          0);
 10881  004170  C02E  F005         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
 10882  004174  C02F  F006         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
 10883  004178  0E00               	movlw	0
 10884  00417A  6E08               	movwf	(HAL_Timer0_Write_Val@val+1)^0,c
 10885  00417C  0E00               	movlw	0
 10886  00417E  6E07               	movwf	HAL_Timer0_Write_Val@val^0,c
 10887  004180  EC66  F02A         	call	_HAL_Timer0_Write_Val	;wreg free
 10888  004184                     
 10889                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 39:         send_trig_pulse(ultrasonic_object);
 10890  004184  C02C  F00F         	movff	Get_Distance@ultrasonic_object,send_trig_pulse@ultrasonic_object
 10891  004188  C02D  F010         	movff	Get_Distance@ultrasonic_object+1,send_trig_pulse@ultrasonic_object+1
 10892  00418C  EC51  F02A         	call	_send_trig_pulse	;wreg free
 10893                           
 10894                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 40:         while(!logic)
 10895  004190  EFD6  F020         	goto	l11539
 10896  004194                     l11537:
 10897                           
 10898                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 41:         {;Robot/sensors/ULTRA_SONIC/ultarso
      +                          nic.c: 42:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
 10899  004194  0E01               	movlw	1
 10900  004196  242C               	addwf	Get_Distance@ultrasonic_object^0,w,c
 10901  004198  6E05               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
 10902  00419A  0E00               	movlw	0
 10903  00419C  202D               	addwfc	(Get_Distance@ultrasonic_object+1)^0,w,c
 10904  00419E  6E06               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
 10905  0041A0  0E34               	movlw	low Get_Distance@logic
 10906  0041A2  6E07               	movwf	GPIO_Pin_Read_Logic@logic^0,c
 10907  0041A4  0E00               	movlw	high Get_Distance@logic
 10908  0041A6  6E08               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
 10909  0041A8  ECE6  F025         	call	_GPIO_Pin_Read_Logic	;wreg free
 10910  0041AC                     l11539:
 10911                           
 10912                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 40:         while(!logic)
 10913  0041AC  5034               	movf	Get_Distance@logic^0,w,c
 10914  0041AE  B4D8               	btfsc	status,2,c
 10915  0041B0  EFDC  F020         	goto	u13451
 10916  0041B4  EFDE  F020         	goto	u13450
 10917  0041B8                     u13451:
 10918  0041B8  EFCA  F020         	goto	l11537
 10919  0041BC                     u13450:
 10920  0041BC                     
 10921                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 44:         (T0CONbits.TMR0ON = 1 );
 10922  0041BC  8ED5               	bsf	213,7,c	;volatile
 10923                           
 10924                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 45:         while(logic)
 10925  0041BE  EFED  F020         	goto	l11543
 10926  0041C2                     l11541:
 10927                           
 10928                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 46:         {;Robot/sensors/ULTRA_SONIC/ultarso
      +                          nic.c: 47:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
 10929  0041C2  0E01               	movlw	1
 10930  0041C4  242C               	addwf	Get_Distance@ultrasonic_object^0,w,c
 10931  0041C6  6E05               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
 10932  0041C8  0E00               	movlw	0
 10933  0041CA  202D               	addwfc	(Get_Distance@ultrasonic_object+1)^0,w,c
 10934  0041CC  6E06               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
 10935  0041CE  0E34               	movlw	low Get_Distance@logic
 10936  0041D0  6E07               	movwf	GPIO_Pin_Read_Logic@logic^0,c
 10937  0041D2  0E00               	movlw	high Get_Distance@logic
 10938  0041D4  6E08               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
 10939  0041D6  ECE6  F025         	call	_GPIO_Pin_Read_Logic	;wreg free
 10940  0041DA                     l11543:
 10941                           
 10942                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 45:         while(logic)
 10943  0041DA  5034               	movf	Get_Distance@logic^0,w,c
 10944  0041DC  A4D8               	btfss	status,2,c
 10945  0041DE  EFF3  F020         	goto	u13461
 10946  0041E2  EFF5  F020         	goto	u13460
 10947  0041E6                     u13461:
 10948  0041E6  EFE1  F020         	goto	l11541
 10949  0041EA                     u13460:
 10950  0041EA                     
 10951                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 49:         (T0CONbits.TMR0ON = 0 );
 10952  0041EA  9ED5               	bcf	213,7,c	;volatile
 10953  0041EC                     
 10954                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 50:         HAL_Timer0_Read_Val(_tmr0_config ,&
      +                          timer_val);
 10955  0041EC  C02E  F005         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Read_Val@_tmr0_config
 10956  0041F0  C02F  F006         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Read_Val@_tmr0_config+1
 10957  0041F4  0E32               	movlw	low Get_Distance@timer_val
 10958  0041F6  6E07               	movwf	HAL_Timer0_Read_Val@result^0,c
 10959  0041F8  0E00               	movlw	high Get_Distance@timer_val
 10960  0041FA  6E08               	movwf	(HAL_Timer0_Read_Val@result+1)^0,c
 10961  0041FC  EC39  F025         	call	_HAL_Timer0_Read_Val	;wreg free
 10962                           
 10963                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 52:         *distance=timer_val/(float32)58.8;
 10964  004200  C032  F005         	movff	Get_Distance@timer_val,___xxtofl@val
 10965  004204  C033  F006         	movff	Get_Distance@timer_val+1,___xxtofl@val+1
 10966  004208  6A07               	clrf	(___xxtofl@val+2)^0,c
 10967  00420A  6A08               	clrf	(___xxtofl@val+3)^0,c
 10968  00420C  0E00               	movlw	0
 10969  00420E  ECD6  F01A         	call	___xxtofl
 10970  004212  C005  F013         	movff	?___xxtofl,___fldiv@b
 10971  004216  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
 10972  00421A  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
 10973  00421E  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
 10974  004222  0E33               	movlw	51
 10975  004224  6E17               	movwf	___fldiv@a^0,c
 10976  004226  0E33               	movlw	51
 10977  004228  6E18               	movwf	(___fldiv@a+1)^0,c
 10978  00422A  0E6B               	movlw	107
 10979  00422C  6E19               	movwf	(___fldiv@a+2)^0,c
 10980  00422E  0E42               	movlw	66
 10981  004230  6E1A               	movwf	(___fldiv@a+3)^0,c
 10982  004232  EC91  F016         	call	___fldiv	;wreg free
 10983  004236  C030  FFD9         	movff	Get_Distance@distance,fsr2l
 10984  00423A  C031  FFDA         	movff	Get_Distance@distance+1,fsr2h
 10985  00423E  C013  FFDE         	movff	?___fldiv,postinc2
 10986  004242  C014  FFDE         	movff	?___fldiv+1,postinc2
 10987  004246  C015  FFDE         	movff	?___fldiv+2,postinc2
 10988  00424A  C016  FFDE         	movff	?___fldiv+3,postinc2
 10989  00424E                     l1758:
 10990  00424E  0012               	return		;funcret
 10991  004250                     __end_of_Get_Distance:
 10992                           	callstack 0
 10993                           
 10994 ;; *************** function _send_trig_pulse *****************
 10995 ;; Defined at:
 10996 ;;		line 57 in file "Robot/sensors/ULTRA_SONIC/ultarsonic.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  ultrasonic_o    2   14[COMRAM] PTR const struct .
 10999 ;;		 -> ultrasonic(2), 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;Total ram usage:        2 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; Hardware stack levels required when called: 5
 11018 ;; This function calls:
 11019 ;;		_GPIO_Pin_Write_Logic
 11020 ;; This function is called by:
 11021 ;;		_Get_Distance
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025                           	psect	text49
 11026  0054A2                     __ptext49:
 11027                           	callstack 0
 11028  0054A2                     _send_trig_pulse:
 11029                           	callstack 24
 11030  0054A2                     
 11031                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 57: static void send_trig_pulse(const ultrasoni
      +                          c_config_st* ultrasonic_object);Robot/sensors/ULTRA_SONIC/ultarsonic.c: 58: {;Robot/sens
      +                          ors/ULTRA_SONIC/ultarsonic.c: 59:     GPIO_Pin_Write_Logic(&(ultrasonic_object->trig_pin
      +                          ),GPIO_HIGH);
 11032  0054A2  C00F  F005         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
 11033  0054A6  C010  F006         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
 11034  0054AA  0E01               	movlw	1
 11035  0054AC  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11036  0054AE  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
 11037  0054B2                     
 11038                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 60:     _delay((unsigned long)((10)*(8000000/40
      +                          00000.0)));
 11039  0054B2  0E06               	movlw	6
 11040  0054B4                     u13807:
 11041  0054B4  2EE8               	decfsz	wreg,f,c
 11042  0054B6  D7FE               	bra	u13807
 11043  0054B8  D000               	nop2	
 11044  0054BA                     
 11045                           ;Robot/sensors/ULTRA_SONIC/ultarsonic.c: 61:     GPIO_Pin_Write_Logic(&(ultrasonic_objec
      +                          t->trig_pin),GPIO_LOW);
 11046  0054BA  C00F  F005         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
 11047  0054BE  C010  F006         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
 11048  0054C2  0E00               	movlw	0
 11049  0054C4  6E07               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11050  0054C6  EC81  F01E         	call	_GPIO_Pin_Write_Logic	;wreg free
 11051  0054CA  0012               	return		;funcret
 11052  0054CC                     __end_of_send_trig_pulse:
 11053                           	callstack 0
 11054                           
 11055 ;; *************** function _GPIO_Pin_Write_Logic *****************
 11056 ;; Defined at:
 11057 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;  _pin_config     2    4[COMRAM] PTR const struct .
 11060 ;;		 -> pinc1(1), pinc0(1), ultrasonic(2), lcd1.lcd_data_pins(4), 
 11061 ;;		 -> lcd1(6), CCP2_Obj(12), CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), 
 11062 ;;		 -> W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2), W1_W3_W5_Motor_Control(2), 
 11063 ;;  logic           1    6[COMRAM] enum E2967
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;  ERRORSTATUS     1   13[COMRAM] unsigned char 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      unsigned char 
 11068 ;; Registers used:
 11069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11075 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;Total ram usage:       10 bytes
 11080 ;; Hardware stack levels used: 1
 11081 ;; Hardware stack levels required when called: 4
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		_lcd_4bit_send_command
 11086 ;;		_lcd_4bit_send_char_data
 11087 ;;		_lcd_4bits_send_enable_signal
 11088 ;;		_lcd_send_4bits
 11089 ;;		_GPIO_Pin_Initialize
 11090 ;;		_main
 11091 ;;		_send_trig_pulse
 11092 ;;		_ECU_DC_Motor_Run_Left
 11093 ;;		_ECU_DC_Motor_Run_Right
 11094 ;;		_ECU_DC_Motor_Stop
 11095 ;;		_lcd_8bit_send_command
 11096 ;;		_lcd_8bit_send_char_data
 11097 ;;		_lcd_8bits_send_enable_signal
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text50
 11102  003D02                     __ptext50:
 11103                           	callstack 0
 11104  003D02                     _GPIO_Pin_Write_Logic:
 11105                           	callstack 22
 11106  003D02                     
 11107                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 11108  003D02  0E01               	movlw	1
 11109  003D04  6E0E               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 11110  003D06                     
 11111                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 11112  003D06  5005               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
 11113  003D08  1006               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 11114  003D0A  B4D8               	btfsc	status,2,c
 11115  003D0C  EF8A  F01E         	goto	u7801
 11116  003D10  EF8C  F01E         	goto	u7800
 11117  003D14                     u7801:
 11118  003D14  EF9B  F01E         	goto	l7721
 11119  003D18                     u7800:
 11120  003D18  C005  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11121  003D1C  C006  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11122  003D20  50DF               	movf	223,w,c
 11123  003D22  0B07               	andlw	7
 11124  003D24  6E08               	movwf	??_GPIO_Pin_Write_Logic^0,c
 11125  003D26  0E07               	movlw	7
 11126  003D28  6408               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
 11127  003D2A  EF99  F01E         	goto	u7811
 11128  003D2E  EF9B  F01E         	goto	u7810
 11129  003D32                     u7811:
 11130  003D32  EFFE  F01E         	goto	l7729
 11131  003D36                     u7810:
 11132  003D36                     l7721:
 11133                           
 11134                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 11135  003D36  0E00               	movlw	0
 11136  003D38  6E0E               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 11137                           
 11138                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 11139  003D3A  EF13  F01F         	goto	l7731
 11140  003D3E                     l7723:
 11141                           
 11142                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 11143  003D3E  C005  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11144  003D42  C006  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11145  003D46  50DF               	movf	223,w,c
 11146  003D48  0B07               	andlw	7
 11147  003D4A  6E08               	movwf	??_GPIO_Pin_Write_Logic^0,c
 11148  003D4C  0E01               	movlw	1
 11149  003D4E  6E09               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
 11150  003D50  2A08               	incf	??_GPIO_Pin_Write_Logic^0,f,c
 11151  003D52  EFAD  F01E         	goto	u7824
 11152  003D56                     u7825:
 11153  003D56  90D8               	bcf	status,0,c
 11154  003D58  3609               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
 11155  003D5A                     u7824:
 11156  003D5A  2E08               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
 11157  003D5C  EFAB  F01E         	goto	u7825
 11158  003D60  5009               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
 11159  003D62  0AFF               	xorlw	255
 11160  003D64  6E0A               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
 11161  003D66  C005  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11162  003D6A  C006  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11163  003D6E  30DF               	rrcf	223,w,c
 11164  003D70  32E8               	rrcf	wreg,f,c
 11165  003D72  32E8               	rrcf	wreg,f,c
 11166  003D74  0B07               	andlw	7
 11167  003D76  6E0B               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
 11168  003D78  500B               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
 11169  003D7A  0D02               	mullw	2
 11170  003D7C  0E8E               	movlw	low _lat_registers
 11171  003D7E  24F3               	addwf	243,w,c
 11172  003D80  6ED9               	movwf	fsr2l,c
 11173  003D82  0E01               	movlw	high _lat_registers
 11174  003D84  20F4               	addwfc	prodh,w,c
 11175  003D86  6EDA               	movwf	fsr2h,c
 11176  003D88  CFDE F00C          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
 11177  003D8C  CFDD F00D          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
 11178  003D90  C00C  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
 11179  003D94  C00D  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
 11180  003D98  500A               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
 11181  003D9A  16DF               	andwf	indf2,f,c
 11182                           
 11183                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 11184  003D9C  EF13  F01F         	goto	l7731
 11185  003DA0                     l7725:
 11186                           
 11187                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 11188  003DA0  C005  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11189  003DA4  C006  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11190  003DA8  50DF               	movf	223,w,c
 11191  003DAA  0B07               	andlw	7
 11192  003DAC  6E08               	movwf	??_GPIO_Pin_Write_Logic^0,c
 11193  003DAE  0E01               	movlw	1
 11194  003DB0  6E09               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
 11195  003DB2  2A08               	incf	??_GPIO_Pin_Write_Logic^0,f,c
 11196  003DB4  EFDE  F01E         	goto	u7834
 11197  003DB8                     u7835:
 11198  003DB8  90D8               	bcf	status,0,c
 11199  003DBA  3609               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
 11200  003DBC                     u7834:
 11201  003DBC  2E08               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
 11202  003DBE  EFDC  F01E         	goto	u7835
 11203  003DC2  C005  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11204  003DC6  C006  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11205  003DCA  30DF               	rrcf	223,w,c
 11206  003DCC  32E8               	rrcf	wreg,f,c
 11207  003DCE  32E8               	rrcf	wreg,f,c
 11208  003DD0  0B07               	andlw	7
 11209  003DD2  6E0A               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
 11210  003DD4  500A               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
 11211  003DD6  0D02               	mullw	2
 11212  003DD8  0E8E               	movlw	low _lat_registers
 11213  003DDA  24F3               	addwf	243,w,c
 11214  003DDC  6ED9               	movwf	fsr2l,c
 11215  003DDE  0E01               	movlw	high _lat_registers
 11216  003DE0  20F4               	addwfc	prodh,w,c
 11217  003DE2  6EDA               	movwf	fsr2h,c
 11218  003DE4  CFDE F00B          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
 11219  003DE8  CFDD F00C          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
 11220  003DEC  C00B  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
 11221  003DF0  C00C  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
 11222  003DF4  5009               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
 11223  003DF6  12DF               	iorwf	indf2,f,c
 11224                           
 11225                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 11226  003DF8  EF13  F01F         	goto	l7731
 11227  003DFC                     l7729:
 11228  003DFC  5007               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
 11229  003DFE  6E08               	movwf	??_GPIO_Pin_Write_Logic^0,c
 11230  003E00  6A09               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
 11231                           
 11232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11233                           ; Switch size 1, requested type "simple"
 11234                           ; Number of cases is 1, Range of values is 0 to 0
 11235                           ; switch strategies available:
 11236                           ; Name         Instructions Cycles
 11237                           ; simple_byte            4     3 (average)
 11238                           ;	Chosen strategy is simple_byte
 11239  003E02  5009               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
 11240  003E04  0A00               	xorlw	0	; case 0
 11241  003E06  B4D8               	btfsc	status,2,c
 11242  003E08  EF08  F01F         	goto	l11941
 11243  003E0C  EF9B  F01E         	goto	l7721
 11244  003E10                     l11941:
 11245                           
 11246                           ; Switch size 1, requested type "simple"
 11247                           ; Number of cases is 2, Range of values is 0 to 1
 11248                           ; switch strategies available:
 11249                           ; Name         Instructions Cycles
 11250                           ; simple_byte            7     4 (average)
 11251                           ;	Chosen strategy is simple_byte
 11252  003E10  5008               	movf	??_GPIO_Pin_Write_Logic^0,w,c
 11253  003E12  0A00               	xorlw	0	; case 0
 11254  003E14  B4D8               	btfsc	status,2,c
 11255  003E16  EF9F  F01E         	goto	l7723
 11256  003E1A  0A01               	xorlw	1	; case 1
 11257  003E1C  B4D8               	btfsc	status,2,c
 11258  003E1E  EFD0  F01E         	goto	l7725
 11259  003E22  EF9B  F01E         	goto	l7721
 11260  003E26                     l7731:
 11261                           
 11262                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 11263  003E26  500E               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
 11264  003E28  0012               	return		;funcret
 11265  003E2A                     __end_of_GPIO_Pin_Write_Logic:
 11266                           	callstack 0
 11267                           
 11268 ;; *************** function ___xxtofl *****************
 11269 ;; Defined at:
 11270 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  sign            1    wreg     unsigned char 
 11273 ;;  val             4    4[COMRAM] long 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;  sign            1   12[COMRAM] unsigned char 
 11276 ;;  arg             4   14[COMRAM] unsigned long 
 11277 ;;  exp             1   13[COMRAM] unsigned char 
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  4    4[COMRAM] unsigned char 
 11280 ;; Registers used:
 11281 ;;		wreg, status,2, status,0
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11288 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;Total ram usage:       14 bytes
 11292 ;; Hardware stack levels used: 1
 11293 ;; Hardware stack levels required when called: 4
 11294 ;; This function calls:
 11295 ;;		Nothing
 11296 ;; This function is called by:
 11297 ;;		_Get_Distance
 11298 ;;		_Servo_SetAngle
 11299 ;;		_CCP_PWM_Set_Duty
 11300 ;;		_async_config_baud_rate_gen
 11301 ;;		_I2C_Master_Mode_Clock_Configurations
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text51
 11306  0035AC                     __ptext51:
 11307                           	callstack 0
 11308  0035AC                     ___xxtofl:
 11309                           	callstack 25
 11310                           
 11311                           ;incstack = 0
 11312                           ;___xxtofl@sign stored from wreg
 11313  0035AC  6E0D               	movwf	___xxtofl@sign^0,c
 11314  0035AE  500D               	movf	___xxtofl@sign^0,w,c
 11315  0035B0  B4D8               	btfsc	status,2,c
 11316  0035B2  EFDD  F01A         	goto	u9221
 11317  0035B6  EFDF  F01A         	goto	u9220
 11318  0035BA                     u9221:
 11319  0035BA  EF01  F01B         	goto	l2419
 11320  0035BE                     u9220:
 11321  0035BE  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
 11322  0035C0  EFE6  F01A         	goto	u9230
 11323  0035C4  EFE4  F01A         	goto	u9231
 11324  0035C8                     u9231:
 11325  0035C8  EF01  F01B         	goto	l2419
 11326  0035CC                     u9230:
 11327  0035CC  C005  F009         	movff	___xxtofl@val,??___xxtofl
 11328  0035D0  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
 11329  0035D4  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
 11330  0035D8  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
 11331  0035DC  1E09               	comf	??___xxtofl^0,f,c
 11332  0035DE  1E0A               	comf	(??___xxtofl+1)^0,f,c
 11333  0035E0  1E0B               	comf	(??___xxtofl+2)^0,f,c
 11334  0035E2  1E0C               	comf	(??___xxtofl+3)^0,f,c
 11335  0035E4  2A09               	incf	??___xxtofl^0,f,c
 11336  0035E6  0E00               	movlw	0
 11337  0035E8  220A               	addwfc	(??___xxtofl+1)^0,f,c
 11338  0035EA  220B               	addwfc	(??___xxtofl+2)^0,f,c
 11339  0035EC  220C               	addwfc	(??___xxtofl+3)^0,f,c
 11340  0035EE  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
 11341  0035F2  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
 11342  0035F6  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
 11343  0035FA  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
 11344  0035FE  EF09  F01B         	goto	l8731
 11345  003602                     l2419:
 11346  003602  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
 11347  003606  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11348  00360A  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11349  00360E  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11350  003612                     l8731:
 11351  003612  5005               	movf	___xxtofl@val^0,w,c
 11352  003614  1006               	iorwf	(___xxtofl@val+1)^0,w,c
 11353  003616  1007               	iorwf	(___xxtofl@val+2)^0,w,c
 11354  003618  1008               	iorwf	(___xxtofl@val+3)^0,w,c
 11355  00361A  A4D8               	btfss	status,2,c
 11356  00361C  EF12  F01B         	goto	u9241
 11357  003620  EF14  F01B         	goto	u9240
 11358  003624                     u9241:
 11359  003624  EF1E  F01B         	goto	l8737
 11360  003628                     u9240:
 11361  003628  0E00               	movlw	0
 11362  00362A  6E05               	movwf	?___xxtofl^0,c
 11363  00362C  0E00               	movlw	0
 11364  00362E  6E06               	movwf	(?___xxtofl+1)^0,c
 11365  003630  0E00               	movlw	0
 11366  003632  6E07               	movwf	(?___xxtofl+2)^0,c
 11367  003634  0E00               	movlw	0
 11368  003636  6E08               	movwf	(?___xxtofl+3)^0,c
 11369  003638  EFAF  F01B         	goto	l2422
 11370  00363C                     l8737:
 11371  00363C  0E96               	movlw	150
 11372  00363E  6E0E               	movwf	___xxtofl@exp^0,c
 11373  003640  EF28  F01B         	goto	l8741
 11374  003644                     l8739:
 11375  003644  2A0E               	incf	___xxtofl@exp^0,f,c
 11376  003646  90D8               	bcf	status,0,c
 11377  003648  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
 11378  00364A  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
 11379  00364C  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
 11380  00364E  320F               	rrcf	___xxtofl@arg^0,f,c
 11381  003650                     l8741:
 11382  003650  0E00               	movlw	0
 11383  003652  140F               	andwf	___xxtofl@arg^0,w,c
 11384  003654  6E09               	movwf	??___xxtofl^0,c
 11385  003656  0E00               	movlw	0
 11386  003658  1410               	andwf	(___xxtofl@arg+1)^0,w,c
 11387  00365A  6E0A               	movwf	(??___xxtofl+1)^0,c
 11388  00365C  0E00               	movlw	0
 11389  00365E  1411               	andwf	(___xxtofl@arg+2)^0,w,c
 11390  003660  6E0B               	movwf	(??___xxtofl+2)^0,c
 11391  003662  0EFE               	movlw	254
 11392  003664  1412               	andwf	(___xxtofl@arg+3)^0,w,c
 11393  003666  6E0C               	movwf	(??___xxtofl+3)^0,c
 11394  003668  5009               	movf	??___xxtofl^0,w,c
 11395  00366A  100A               	iorwf	(??___xxtofl+1)^0,w,c
 11396  00366C  100B               	iorwf	(??___xxtofl+2)^0,w,c
 11397  00366E  100C               	iorwf	(??___xxtofl+3)^0,w,c
 11398  003670  A4D8               	btfss	status,2,c
 11399  003672  EF3D  F01B         	goto	u9251
 11400  003676  EF3F  F01B         	goto	u9250
 11401  00367A                     u9251:
 11402  00367A  EF22  F01B         	goto	l8739
 11403  00367E                     u9250:
 11404  00367E  EF4D  F01B         	goto	l2426
 11405  003682                     l8743:
 11406  003682  2A0E               	incf	___xxtofl@exp^0,f,c
 11407  003684  0E01               	movlw	1
 11408  003686  260F               	addwf	___xxtofl@arg^0,f,c
 11409  003688  0E00               	movlw	0
 11410  00368A  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
 11411  00368C  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
 11412  00368E  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
 11413  003690  90D8               	bcf	status,0,c
 11414  003692  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
 11415  003694  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
 11416  003696  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
 11417  003698  320F               	rrcf	___xxtofl@arg^0,f,c
 11418  00369A                     l2426:
 11419  00369A  0E00               	movlw	0
 11420  00369C  140F               	andwf	___xxtofl@arg^0,w,c
 11421  00369E  6E09               	movwf	??___xxtofl^0,c
 11422  0036A0  0E00               	movlw	0
 11423  0036A2  1410               	andwf	(___xxtofl@arg+1)^0,w,c
 11424  0036A4  6E0A               	movwf	(??___xxtofl+1)^0,c
 11425  0036A6  0E00               	movlw	0
 11426  0036A8  1411               	andwf	(___xxtofl@arg+2)^0,w,c
 11427  0036AA  6E0B               	movwf	(??___xxtofl+2)^0,c
 11428  0036AC  0EFF               	movlw	255
 11429  0036AE  1412               	andwf	(___xxtofl@arg+3)^0,w,c
 11430  0036B0  6E0C               	movwf	(??___xxtofl+3)^0,c
 11431  0036B2  5009               	movf	??___xxtofl^0,w,c
 11432  0036B4  100A               	iorwf	(??___xxtofl+1)^0,w,c
 11433  0036B6  100B               	iorwf	(??___xxtofl+2)^0,w,c
 11434  0036B8  100C               	iorwf	(??___xxtofl+3)^0,w,c
 11435  0036BA  A4D8               	btfss	status,2,c
 11436  0036BC  EF62  F01B         	goto	u9261
 11437  0036C0  EF64  F01B         	goto	u9260
 11438  0036C4                     u9261:
 11439  0036C4  EF41  F01B         	goto	l8743
 11440  0036C8                     u9260:
 11441  0036C8  EF6C  F01B         	goto	l8751
 11442  0036CC                     l8749:
 11443  0036CC  060E               	decf	___xxtofl@exp^0,f,c
 11444  0036CE  90D8               	bcf	status,0,c
 11445  0036D0  360F               	rlcf	___xxtofl@arg^0,f,c
 11446  0036D2  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
 11447  0036D4  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
 11448  0036D6  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
 11449  0036D8                     l8751:
 11450  0036D8  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
 11451  0036DA  EF71  F01B         	goto	u9271
 11452  0036DE  EF73  F01B         	goto	u9270
 11453  0036E2                     u9271:
 11454  0036E2  EF7B  F01B         	goto	l2433
 11455  0036E6                     u9270:
 11456  0036E6  0E02               	movlw	2
 11457  0036E8  600E               	cpfslt	___xxtofl@exp^0,c
 11458  0036EA  EF79  F01B         	goto	u9281
 11459  0036EE  EF7B  F01B         	goto	u9280
 11460  0036F2                     u9281:
 11461  0036F2  EF66  F01B         	goto	l8749
 11462  0036F6                     u9280:
 11463  0036F6                     l2433:
 11464  0036F6  B00E               	btfsc	___xxtofl@exp^0,0,c
 11465  0036F8  EF80  F01B         	goto	u9291
 11466  0036FC  EF82  F01B         	goto	u9290
 11467  003700                     u9291:
 11468  003700  EF83  F01B         	goto	l8757
 11469  003704                     u9290:
 11470  003704  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
 11471  003706                     l8757:
 11472  003706  90D8               	bcf	status,0,c
 11473  003708  320E               	rrcf	___xxtofl@exp^0,f,c
 11474  00370A  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
 11475  00370E  6A0A               	clrf	(??___xxtofl+1)^0,c
 11476  003710  6A0B               	clrf	(??___xxtofl+2)^0,c
 11477  003712  6A0C               	clrf	(??___xxtofl+3)^0,c
 11478  003714  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
 11479  003718  6A0B               	clrf	(??___xxtofl+2)^0,c
 11480  00371A  6A0A               	clrf	(??___xxtofl+1)^0,c
 11481  00371C  6A09               	clrf	??___xxtofl^0,c
 11482  00371E  5009               	movf	??___xxtofl^0,w,c
 11483  003720  120F               	iorwf	___xxtofl@arg^0,f,c
 11484  003722  500A               	movf	(??___xxtofl+1)^0,w,c
 11485  003724  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
 11486  003726  500B               	movf	(??___xxtofl+2)^0,w,c
 11487  003728  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
 11488  00372A  500C               	movf	(??___xxtofl+3)^0,w,c
 11489  00372C  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
 11490  00372E  500D               	movf	___xxtofl@sign^0,w,c
 11491  003730  B4D8               	btfsc	status,2,c
 11492  003732  EF9D  F01B         	goto	u9301
 11493  003736  EF9F  F01B         	goto	u9300
 11494  00373A                     u9301:
 11495  00373A  EFA7  F01B         	goto	l8767
 11496  00373E                     u9300:
 11497  00373E  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
 11498  003740  EFA6  F01B         	goto	u9310
 11499  003744  EFA4  F01B         	goto	u9311
 11500  003748                     u9311:
 11501  003748  EFA7  F01B         	goto	l8767
 11502  00374C                     u9310:
 11503  00374C  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
 11504  00374E                     l8767:
 11505  00374E  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
 11506  003752  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
 11507  003756  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
 11508  00375A  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
 11509  00375E                     l2422:
 11510  00375E  0012               	return		;funcret
 11511  003760                     __end_of___xxtofl:
 11512                           	callstack 0
 11513                           
 11514 ;; *************** function ___fldiv *****************
 11515 ;; Defined at:
 11516 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;  b               4   18[COMRAM] unsigned char 
 11519 ;;  a               4   22[COMRAM] unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  grs             4   37[COMRAM] unsigned long 
 11522 ;;  rem             4   30[COMRAM] unsigned long 
 11523 ;;  new_exp         2   35[COMRAM] short 
 11524 ;;  aexp            1   42[COMRAM] unsigned char 
 11525 ;;  bexp            1   41[COMRAM] unsigned char 
 11526 ;;  sign            1   34[COMRAM] unsigned char 
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  4   18[COMRAM] unsigned char 
 11529 ;; Registers used:
 11530 ;;		wreg, status,2, status,0
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11536 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11537 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11538 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11539 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;Total ram usage:       25 bytes
 11541 ;; Hardware stack levels used: 1
 11542 ;; Hardware stack levels required when called: 4
 11543 ;; This function calls:
 11544 ;;		Nothing
 11545 ;; This function is called by:
 11546 ;;		_Get_Distance
 11547 ;;		_efgtoa
 11548 ;;		_CCP_PWM_Set_Duty
 11549 ;;		_async_config_baud_rate_gen
 11550 ;;		_I2C_Master_Mode_Clock_Configurations
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text52
 11555  002D22                     __ptext52:
 11556                           	callstack 0
 11557  002D22                     ___fldiv:
 11558                           	callstack 21
 11559  002D22  5016               	movf	(___fldiv@b+3)^0,w,c
 11560  002D24  0B80               	andlw	128
 11561  002D26  6E23               	movwf	___fldiv@sign^0,c
 11562  002D28  5016               	movf	(___fldiv@b+3)^0,w,c
 11563  002D2A  2416               	addwf	(___fldiv@b+3)^0,w,c
 11564  002D2C  6E2A               	movwf	___fldiv@bexp^0,c
 11565  002D2E  AE15               	btfss	(___fldiv@b+2)^0,7,c
 11566  002D30  EF9C  F016         	goto	u11601
 11567  002D34  EF9E  F016         	goto	u11600
 11568  002D38                     u11601:
 11569  002D38  EF9F  F016         	goto	l10433
 11570  002D3C                     u11600:
 11571  002D3C  802A               	bsf	___fldiv@bexp^0,0,c
 11572  002D3E                     l10433:
 11573  002D3E  502A               	movf	___fldiv@bexp^0,w,c
 11574  002D40  B4D8               	btfsc	status,2,c
 11575  002D42  EFA5  F016         	goto	u11611
 11576  002D46  EFA7  F016         	goto	u11610
 11577  002D4A                     u11611:
 11578  002D4A  EFBC  F016         	goto	l10443
 11579  002D4E                     u11610:
 11580  002D4E  282A               	incf	___fldiv@bexp^0,w,c
 11581  002D50  A4D8               	btfss	status,2,c
 11582  002D52  EFAD  F016         	goto	u11621
 11583  002D56  EFAF  F016         	goto	u11620
 11584  002D5A                     u11621:
 11585  002D5A  EFB7  F016         	goto	l10439
 11586  002D5E                     u11620:
 11587  002D5E  0E00               	movlw	0
 11588  002D60  6E13               	movwf	___fldiv@b^0,c
 11589  002D62  0E00               	movlw	0
 11590  002D64  6E14               	movwf	(___fldiv@b+1)^0,c
 11591  002D66  0E00               	movlw	0
 11592  002D68  6E15               	movwf	(___fldiv@b+2)^0,c
 11593  002D6A  0E00               	movlw	0
 11594  002D6C  6E16               	movwf	(___fldiv@b+3)^0,c
 11595  002D6E                     l10439:
 11596  002D6E  8E15               	bsf	(___fldiv@b+2)^0,7,c
 11597  002D70  0E00               	movlw	0
 11598  002D72  6E16               	movwf	(___fldiv@b+3)^0,c
 11599  002D74  EFC4  F016         	goto	l10445
 11600  002D78                     l10443:
 11601  002D78  0E00               	movlw	0
 11602  002D7A  6E13               	movwf	___fldiv@b^0,c
 11603  002D7C  0E00               	movlw	0
 11604  002D7E  6E14               	movwf	(___fldiv@b+1)^0,c
 11605  002D80  0E00               	movlw	0
 11606  002D82  6E15               	movwf	(___fldiv@b+2)^0,c
 11607  002D84  0E00               	movlw	0
 11608  002D86  6E16               	movwf	(___fldiv@b+3)^0,c
 11609  002D88                     l10445:
 11610  002D88  501A               	movf	(___fldiv@a+3)^0,w,c
 11611  002D8A  0B80               	andlw	128
 11612  002D8C  1A23               	xorwf	___fldiv@sign^0,f,c
 11613  002D8E  501A               	movf	(___fldiv@a+3)^0,w,c
 11614  002D90  241A               	addwf	(___fldiv@a+3)^0,w,c
 11615  002D92  6E2B               	movwf	___fldiv@aexp^0,c
 11616  002D94  AE19               	btfss	(___fldiv@a+2)^0,7,c
 11617  002D96  EFCF  F016         	goto	u11631
 11618  002D9A  EFD1  F016         	goto	u11630
 11619  002D9E                     u11631:
 11620  002D9E  EFD2  F016         	goto	l10453
 11621  002DA2                     u11630:
 11622  002DA2  802B               	bsf	___fldiv@aexp^0,0,c
 11623  002DA4                     l10453:
 11624  002DA4  502B               	movf	___fldiv@aexp^0,w,c
 11625  002DA6  B4D8               	btfsc	status,2,c
 11626  002DA8  EFD8  F016         	goto	u11641
 11627  002DAC  EFDA  F016         	goto	u11640
 11628  002DB0                     u11641:
 11629  002DB0  EFEF  F016         	goto	l10463
 11630  002DB4                     u11640:
 11631  002DB4  282B               	incf	___fldiv@aexp^0,w,c
 11632  002DB6  A4D8               	btfss	status,2,c
 11633  002DB8  EFE0  F016         	goto	u11651
 11634  002DBC  EFE2  F016         	goto	u11650
 11635  002DC0                     u11651:
 11636  002DC0  EFEA  F016         	goto	l10459
 11637  002DC4                     u11650:
 11638  002DC4  0E00               	movlw	0
 11639  002DC6  6E17               	movwf	___fldiv@a^0,c
 11640  002DC8  0E00               	movlw	0
 11641  002DCA  6E18               	movwf	(___fldiv@a+1)^0,c
 11642  002DCC  0E00               	movlw	0
 11643  002DCE  6E19               	movwf	(___fldiv@a+2)^0,c
 11644  002DD0  0E00               	movlw	0
 11645  002DD2  6E1A               	movwf	(___fldiv@a+3)^0,c
 11646  002DD4                     l10459:
 11647  002DD4  8E19               	bsf	(___fldiv@a+2)^0,7,c
 11648  002DD6  0E00               	movlw	0
 11649  002DD8  6E1A               	movwf	(___fldiv@a+3)^0,c
 11650  002DDA  EFF7  F016         	goto	l10465
 11651  002DDE                     l10463:
 11652  002DDE  0E00               	movlw	0
 11653  002DE0  6E17               	movwf	___fldiv@a^0,c
 11654  002DE2  0E00               	movlw	0
 11655  002DE4  6E18               	movwf	(___fldiv@a+1)^0,c
 11656  002DE6  0E00               	movlw	0
 11657  002DE8  6E19               	movwf	(___fldiv@a+2)^0,c
 11658  002DEA  0E00               	movlw	0
 11659  002DEC  6E1A               	movwf	(___fldiv@a+3)^0,c
 11660  002DEE                     l10465:
 11661  002DEE  5017               	movf	___fldiv@a^0,w,c
 11662  002DF0  1018               	iorwf	(___fldiv@a+1)^0,w,c
 11663  002DF2  1019               	iorwf	(___fldiv@a+2)^0,w,c
 11664  002DF4  101A               	iorwf	(___fldiv@a+3)^0,w,c
 11665  002DF6  A4D8               	btfss	status,2,c
 11666  002DF8  EF00  F017         	goto	u11661
 11667  002DFC  EF02  F017         	goto	u11660
 11668  002E00                     u11661:
 11669  002E00  EF1A  F017         	goto	l10477
 11670  002E04                     u11660:
 11671  002E04  0E00               	movlw	0
 11672  002E06  6E13               	movwf	___fldiv@b^0,c
 11673  002E08  0E00               	movlw	0
 11674  002E0A  6E14               	movwf	(___fldiv@b+1)^0,c
 11675  002E0C  0E00               	movlw	0
 11676  002E0E  6E15               	movwf	(___fldiv@b+2)^0,c
 11677  002E10  0E00               	movlw	0
 11678  002E12  6E16               	movwf	(___fldiv@b+3)^0,c
 11679  002E14  0E80               	movlw	128
 11680  002E16  1215               	iorwf	(___fldiv@b+2)^0,f,c
 11681  002E18  0E7F               	movlw	127
 11682  002E1A  1216               	iorwf	(___fldiv@b+3)^0,f,c
 11683  002E1C                     l10471:
 11684  002E1C  5023               	movf	___fldiv@sign^0,w,c
 11685  002E1E  1216               	iorwf	(___fldiv@b+3)^0,f,c
 11686  002E20  C013  F013         	movff	___fldiv@b,?___fldiv
 11687  002E24  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
 11688  002E28  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
 11689  002E2C  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
 11690  002E30  EF5D  F018         	goto	l2346
 11691  002E34                     l10477:
 11692  002E34  502A               	movf	___fldiv@bexp^0,w,c
 11693  002E36  A4D8               	btfss	status,2,c
 11694  002E38  EF20  F017         	goto	u11671
 11695  002E3C  EF22  F017         	goto	u11670
 11696  002E40                     u11671:
 11697  002E40  EF2C  F017         	goto	l10485
 11698  002E44                     u11670:
 11699  002E44  0E00               	movlw	0
 11700  002E46  6E13               	movwf	?___fldiv^0,c
 11701  002E48  0E00               	movlw	0
 11702  002E4A  6E14               	movwf	(?___fldiv+1)^0,c
 11703  002E4C  0E00               	movlw	0
 11704  002E4E  6E15               	movwf	(?___fldiv+2)^0,c
 11705  002E50  0E00               	movlw	0
 11706  002E52  6E16               	movwf	(?___fldiv+3)^0,c
 11707  002E54  EF5D  F018         	goto	l2346
 11708  002E58                     l10485:
 11709  002E58  502B               	movf	___fldiv@aexp^0,w,c
 11710  002E5A  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
 11711  002E5E  6A1C               	clrf	(??___fldiv+1)^0,c
 11712  002E60  5E1B               	subwf	??___fldiv^0,f,c
 11713  002E62  0E00               	movlw	0
 11714  002E64  5A1C               	subwfb	(??___fldiv+1)^0,f,c
 11715  002E66  0E7F               	movlw	127
 11716  002E68  241B               	addwf	??___fldiv^0,w,c
 11717  002E6A  6E24               	movwf	___fldiv@new_exp^0,c
 11718  002E6C  0E00               	movlw	0
 11719  002E6E  201C               	addwfc	(??___fldiv+1)^0,w,c
 11720  002E70  6E25               	movwf	(___fldiv@new_exp+1)^0,c
 11721  002E72  C013  F01F         	movff	___fldiv@b,___fldiv@rem
 11722  002E76  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
 11723  002E7A  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
 11724  002E7E  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
 11725  002E82  0E00               	movlw	0
 11726  002E84  6E13               	movwf	___fldiv@b^0,c
 11727  002E86  0E00               	movlw	0
 11728  002E88  6E14               	movwf	(___fldiv@b+1)^0,c
 11729  002E8A  0E00               	movlw	0
 11730  002E8C  6E15               	movwf	(___fldiv@b+2)^0,c
 11731  002E8E  0E00               	movlw	0
 11732  002E90  6E16               	movwf	(___fldiv@b+3)^0,c
 11733  002E92  0E00               	movlw	0
 11734  002E94  6E26               	movwf	___fldiv@grs^0,c
 11735  002E96  0E00               	movlw	0
 11736  002E98  6E27               	movwf	(___fldiv@grs+1)^0,c
 11737  002E9A  0E00               	movlw	0
 11738  002E9C  6E28               	movwf	(___fldiv@grs+2)^0,c
 11739  002E9E  0E00               	movlw	0
 11740  002EA0  6E29               	movwf	(___fldiv@grs+3)^0,c
 11741  002EA2  0E00               	movlw	0
 11742  002EA4  6E2B               	movwf	___fldiv@aexp^0,c
 11743  002EA6  EF8D  F017         	goto	l2348
 11744  002EAA                     l10495:
 11745  002EAA  502B               	movf	___fldiv@aexp^0,w,c
 11746  002EAC  B4D8               	btfsc	status,2,c
 11747  002EAE  EF5B  F017         	goto	u11681
 11748  002EB2  EF5D  F017         	goto	u11680
 11749  002EB6                     u11681:
 11750  002EB6  EF74  F017         	goto	l10503
 11751  002EBA                     u11680:
 11752  002EBA  90D8               	bcf	status,0,c
 11753  002EBC  361F               	rlcf	___fldiv@rem^0,f,c
 11754  002EBE  3620               	rlcf	(___fldiv@rem+1)^0,f,c
 11755  002EC0  3621               	rlcf	(___fldiv@rem+2)^0,f,c
 11756  002EC2  3622               	rlcf	(___fldiv@rem+3)^0,f,c
 11757  002EC4  90D8               	bcf	status,0,c
 11758  002EC6  3613               	rlcf	___fldiv@b^0,f,c
 11759  002EC8  3614               	rlcf	(___fldiv@b+1)^0,f,c
 11760  002ECA  3615               	rlcf	(___fldiv@b+2)^0,f,c
 11761  002ECC  3616               	rlcf	(___fldiv@b+3)^0,f,c
 11762  002ECE  AE29               	btfss	(___fldiv@grs+3)^0,7,c
 11763  002ED0  EF6C  F017         	goto	u11691
 11764  002ED4  EF6E  F017         	goto	u11690
 11765  002ED8                     u11691:
 11766  002ED8  EF6F  F017         	goto	l2351
 11767  002EDC                     u11690:
 11768  002EDC  8013               	bsf	___fldiv@b^0,0,c
 11769  002EDE                     l2351:
 11770  002EDE  90D8               	bcf	status,0,c
 11771  002EE0  3626               	rlcf	___fldiv@grs^0,f,c
 11772  002EE2  3627               	rlcf	(___fldiv@grs+1)^0,f,c
 11773  002EE4  3628               	rlcf	(___fldiv@grs+2)^0,f,c
 11774  002EE6  3629               	rlcf	(___fldiv@grs+3)^0,f,c
 11775  002EE8                     l10503:
 11776  002EE8  5017               	movf	___fldiv@a^0,w,c
 11777  002EEA  5C1F               	subwf	___fldiv@rem^0,w,c
 11778  002EEC  5018               	movf	(___fldiv@a+1)^0,w,c
 11779  002EEE  5820               	subwfb	(___fldiv@rem+1)^0,w,c
 11780  002EF0  5019               	movf	(___fldiv@a+2)^0,w,c
 11781  002EF2  5821               	subwfb	(___fldiv@rem+2)^0,w,c
 11782  002EF4  501A               	movf	(___fldiv@a+3)^0,w,c
 11783  002EF6  5822               	subwfb	(___fldiv@rem+3)^0,w,c
 11784  002EF8  A0D8               	btfss	status,0,c
 11785  002EFA  EF81  F017         	goto	u11701
 11786  002EFE  EF83  F017         	goto	u11700
 11787  002F02                     u11701:
 11788  002F02  EF8C  F017         	goto	l10509
 11789  002F06                     u11700:
 11790  002F06  8C29               	bsf	(___fldiv@grs+3)^0,6,c
 11791  002F08  5017               	movf	___fldiv@a^0,w,c
 11792  002F0A  5E1F               	subwf	___fldiv@rem^0,f,c
 11793  002F0C  5018               	movf	(___fldiv@a+1)^0,w,c
 11794  002F0E  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
 11795  002F10  5019               	movf	(___fldiv@a+2)^0,w,c
 11796  002F12  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
 11797  002F14  501A               	movf	(___fldiv@a+3)^0,w,c
 11798  002F16  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
 11799  002F18                     l10509:
 11800  002F18  2A2B               	incf	___fldiv@aexp^0,f,c
 11801  002F1A                     l2348:
 11802  002F1A  0E19               	movlw	25
 11803  002F1C  642B               	cpfsgt	___fldiv@aexp^0,c
 11804  002F1E  EF93  F017         	goto	u11711
 11805  002F22  EF95  F017         	goto	u11710
 11806  002F26                     u11711:
 11807  002F26  EF55  F017         	goto	l10495
 11808  002F2A                     u11710:
 11809  002F2A  501F               	movf	___fldiv@rem^0,w,c
 11810  002F2C  1020               	iorwf	(___fldiv@rem+1)^0,w,c
 11811  002F2E  1021               	iorwf	(___fldiv@rem+2)^0,w,c
 11812  002F30  1022               	iorwf	(___fldiv@rem+3)^0,w,c
 11813  002F32  B4D8               	btfsc	status,2,c
 11814  002F34  EF9E  F017         	goto	u11721
 11815  002F38  EFA0  F017         	goto	u11720
 11816  002F3C                     u11721:
 11817  002F3C  EFB8  F017         	goto	l10521
 11818  002F40                     u11720:
 11819  002F40  8026               	bsf	___fldiv@grs^0,0,c
 11820  002F42  EFB8  F017         	goto	l10521
 11821  002F46                     l10515:
 11822  002F46  90D8               	bcf	status,0,c
 11823  002F48  3613               	rlcf	___fldiv@b^0,f,c
 11824  002F4A  3614               	rlcf	(___fldiv@b+1)^0,f,c
 11825  002F4C  3615               	rlcf	(___fldiv@b+2)^0,f,c
 11826  002F4E  3616               	rlcf	(___fldiv@b+3)^0,f,c
 11827  002F50  AE29               	btfss	(___fldiv@grs+3)^0,7,c
 11828  002F52  EFAD  F017         	goto	u11731
 11829  002F56  EFAF  F017         	goto	u11730
 11830  002F5A                     u11731:
 11831  002F5A  EFB0  F017         	goto	l2357
 11832  002F5E                     u11730:
 11833  002F5E  8013               	bsf	___fldiv@b^0,0,c
 11834  002F60                     l2357:
 11835  002F60  90D8               	bcf	status,0,c
 11836  002F62  3626               	rlcf	___fldiv@grs^0,f,c
 11837  002F64  3627               	rlcf	(___fldiv@grs+1)^0,f,c
 11838  002F66  3628               	rlcf	(___fldiv@grs+2)^0,f,c
 11839  002F68  3629               	rlcf	(___fldiv@grs+3)^0,f,c
 11840  002F6A  0624               	decf	___fldiv@new_exp^0,f,c
 11841  002F6C  A0D8               	btfss	status,0,c
 11842  002F6E  0625               	decf	(___fldiv@new_exp+1)^0,f,c
 11843  002F70                     l10521:
 11844  002F70  AE15               	btfss	(___fldiv@b+2)^0,7,c
 11845  002F72  EFBD  F017         	goto	u11741
 11846  002F76  EFBF  F017         	goto	u11740
 11847  002F7A                     u11741:
 11848  002F7A  EFA3  F017         	goto	l10515
 11849  002F7E                     u11740:
 11850  002F7E  0E00               	movlw	0
 11851  002F80  6E2B               	movwf	___fldiv@aexp^0,c
 11852  002F82  AE29               	btfss	(___fldiv@grs+3)^0,7,c
 11853  002F84  EFC6  F017         	goto	u11751
 11854  002F88  EFC8  F017         	goto	u11750
 11855  002F8C                     u11751:
 11856  002F8C  EFEC  F017         	goto	l2359
 11857  002F90                     u11750:
 11858  002F90  0EFF               	movlw	255
 11859  002F92  1426               	andwf	___fldiv@grs^0,w,c
 11860  002F94  6E1B               	movwf	??___fldiv^0,c
 11861  002F96  0EFF               	movlw	255
 11862  002F98  1427               	andwf	(___fldiv@grs+1)^0,w,c
 11863  002F9A  6E1C               	movwf	(??___fldiv+1)^0,c
 11864  002F9C  0EFF               	movlw	255
 11865  002F9E  1428               	andwf	(___fldiv@grs+2)^0,w,c
 11866  002FA0  6E1D               	movwf	(??___fldiv+2)^0,c
 11867  002FA2  0E7F               	movlw	127
 11868  002FA4  1429               	andwf	(___fldiv@grs+3)^0,w,c
 11869  002FA6  6E1E               	movwf	(??___fldiv+3)^0,c
 11870  002FA8  501B               	movf	??___fldiv^0,w,c
 11871  002FAA  101C               	iorwf	(??___fldiv+1)^0,w,c
 11872  002FAC  101D               	iorwf	(??___fldiv+2)^0,w,c
 11873  002FAE  101E               	iorwf	(??___fldiv+3)^0,w,c
 11874  002FB0  B4D8               	btfsc	status,2,c
 11875  002FB2  EFDD  F017         	goto	u11761
 11876  002FB6  EFDF  F017         	goto	u11760
 11877  002FBA                     u11761:
 11878  002FBA  EFE3  F017         	goto	l2360
 11879  002FBE                     u11760:
 11880  002FBE                     l10529:
 11881  002FBE  0E01               	movlw	1
 11882  002FC0  6E2B               	movwf	___fldiv@aexp^0,c
 11883  002FC2  EFEC  F017         	goto	l2359
 11884  002FC6                     l2360:
 11885  002FC6  A013               	btfss	___fldiv@b^0,0,c
 11886  002FC8  EFE8  F017         	goto	u11771
 11887  002FCC  EFEA  F017         	goto	u11770
 11888  002FD0                     u11771:
 11889  002FD0  EFEC  F017         	goto	l2359
 11890  002FD4                     u11770:
 11891  002FD4  EFDF  F017         	goto	l10529
 11892  002FD8                     l2359:
 11893  002FD8  502B               	movf	___fldiv@aexp^0,w,c
 11894  002FDA  B4D8               	btfsc	status,2,c
 11895  002FDC  EFF2  F017         	goto	u11781
 11896  002FE0  EFF4  F017         	goto	u11780
 11897  002FE4                     u11781:
 11898  002FE4  EF18  F018         	goto	l10541
 11899  002FE8                     u11780:
 11900  002FE8  0E01               	movlw	1
 11901  002FEA  2613               	addwf	___fldiv@b^0,f,c
 11902  002FEC  0E00               	movlw	0
 11903  002FEE  2214               	addwfc	(___fldiv@b+1)^0,f,c
 11904  002FF0  2215               	addwfc	(___fldiv@b+2)^0,f,c
 11905  002FF2  2216               	addwfc	(___fldiv@b+3)^0,f,c
 11906  002FF4  A016               	btfss	(___fldiv@b+3)^0,0,c
 11907  002FF6  EFFF  F017         	goto	u11791
 11908  002FFA  EF01  F018         	goto	u11790
 11909  002FFE                     u11791:
 11910  002FFE  EF18  F018         	goto	l10541
 11911  003002                     u11790:
 11912  003002  C013  F01B         	movff	___fldiv@b,??___fldiv
 11913  003006  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
 11914  00300A  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
 11915  00300E  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
 11916  003012  341E               	rlcf	(??___fldiv+3)^0,w,c
 11917  003014  321E               	rrcf	(??___fldiv+3)^0,f,c
 11918  003016  321D               	rrcf	(??___fldiv+2)^0,f,c
 11919  003018  321C               	rrcf	(??___fldiv+1)^0,f,c
 11920  00301A  321B               	rrcf	??___fldiv^0,f,c
 11921  00301C  C01B  F013         	movff	??___fldiv,___fldiv@b
 11922  003020  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
 11923  003024  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
 11924  003028  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
 11925  00302C  4A24               	infsnz	___fldiv@new_exp^0,f,c
 11926  00302E  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
 11927  003030                     l10541:
 11928  003030  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11929  003032  EF23  F018         	goto	u11801
 11930  003036  5025               	movf	(___fldiv@new_exp+1)^0,w,c
 11931  003038  E108               	bnz	u11800
 11932  00303A  2824               	incf	___fldiv@new_exp^0,w,c
 11933  00303C  A0D8               	btfss	status,0,c
 11934  00303E  EF23  F018         	goto	u11801
 11935  003042  EF25  F018         	goto	u11800
 11936  003046                     u11801:
 11937  003046  EF30  F018         	goto	l10545
 11938  00304A                     u11800:
 11939  00304A  0E00               	movlw	0
 11940  00304C  6E25               	movwf	(___fldiv@new_exp+1)^0,c
 11941  00304E  6824               	setf	___fldiv@new_exp^0,c
 11942  003050  0E00               	movlw	0
 11943  003052  6E13               	movwf	___fldiv@b^0,c
 11944  003054  0E00               	movlw	0
 11945  003056  6E14               	movwf	(___fldiv@b+1)^0,c
 11946  003058  0E00               	movlw	0
 11947  00305A  6E15               	movwf	(___fldiv@b+2)^0,c
 11948  00305C  0E00               	movlw	0
 11949  00305E  6E16               	movwf	(___fldiv@b+3)^0,c
 11950  003060                     l10545:
 11951  003060  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11952  003062  EF3D  F018         	goto	u11810
 11953  003066  5025               	movf	(___fldiv@new_exp+1)^0,w,c
 11954  003068  E106               	bnz	u11811
 11955  00306A  0424               	decf	___fldiv@new_exp^0,w,c
 11956  00306C  B0D8               	btfsc	status,0,c
 11957  00306E  EF3B  F018         	goto	u11811
 11958  003072  EF3D  F018         	goto	u11810
 11959  003076                     u11811:
 11960  003076  EF4B  F018         	goto	l10549
 11961  00307A                     u11810:
 11962  00307A  0E00               	movlw	0
 11963  00307C  6E25               	movwf	(___fldiv@new_exp+1)^0,c
 11964  00307E  0E00               	movlw	0
 11965  003080  6E24               	movwf	___fldiv@new_exp^0,c
 11966  003082  0E00               	movlw	0
 11967  003084  6E13               	movwf	___fldiv@b^0,c
 11968  003086  0E00               	movlw	0
 11969  003088  6E14               	movwf	(___fldiv@b+1)^0,c
 11970  00308A  0E00               	movlw	0
 11971  00308C  6E15               	movwf	(___fldiv@b+2)^0,c
 11972  00308E  0E00               	movlw	0
 11973  003090  6E16               	movwf	(___fldiv@b+3)^0,c
 11974  003092  0E00               	movlw	0
 11975  003094  6E23               	movwf	___fldiv@sign^0,c
 11976  003096                     l10549:
 11977  003096  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
 11978  00309A  A02A               	btfss	___fldiv@bexp^0,0,c
 11979  00309C  EF52  F018         	goto	u11821
 11980  0030A0  EF54  F018         	goto	u11820
 11981  0030A4                     u11821:
 11982  0030A4  EF57  F018         	goto	l10555
 11983  0030A8                     u11820:
 11984  0030A8  8E15               	bsf	(___fldiv@b+2)^0,7,c
 11985  0030AA  EF58  F018         	goto	l10557
 11986  0030AE                     l10555:
 11987  0030AE  9E15               	bcf	(___fldiv@b+2)^0,7,c
 11988  0030B0                     l10557:
 11989  0030B0  90D8               	bcf	status,0,c
 11990  0030B2  302A               	rrcf	___fldiv@bexp^0,w,c
 11991  0030B4  6E16               	movwf	(___fldiv@b+3)^0,c
 11992  0030B6  EF0E  F017         	goto	l10471
 11993  0030BA                     l2346:
 11994  0030BA  0012               	return		;funcret
 11995  0030BC                     __end_of___fldiv:
 11996                           	callstack 0
 11997                           
 11998 ;; *************** function _HAL_Timer0_Write_Val *****************
 11999 ;; Defined at:
 12000 ;;		line 179 in file "MCAL/Timer0/hal_timer0.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  _tmr0_config    2    4[COMRAM] PTR const struct .
 12003 ;;		 -> timer0(4), 
 12004 ;;  val             2    6[COMRAM] unsigned short 
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  ret_value       1    8[COMRAM] unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      unsigned char 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2, status,0
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12019 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12020 ;;Total ram usage:        5 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; Hardware stack levels required when called: 4
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_HAL_Timer0_Init
 12027 ;;		_Get_Distance
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text53
 12032  0054CC                     __ptext53:
 12033                           	callstack 0
 12034  0054CC                     _HAL_Timer0_Write_Val:
 12035                           	callstack 23
 12036  0054CC                     
 12037                           ;MCAL/Timer0/hal_timer0.c: 179: Std_ReturnType HAL_Timer0_Write_Val(const timer0_config_
      +                          st *_tmr0_config ,;MCAL/Timer0/hal_timer0.c: 180:         uint16_t val);MCAL/Timer0/hal_
      +                          timer0.c: 181: {;MCAL/Timer0/hal_timer0.c: 182:     Std_ReturnType ret_value = (Std_Retu
      +                          rnType) 0x01 ;
 12038  0054CC  0E01               	movlw	1
 12039  0054CE  6E09               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 12040  0054D0                     
 12041                           ;MCAL/Timer0/hal_timer0.c: 184:     if(((void*)0) == _tmr0_config)
 12042  0054D0  5005               	movf	HAL_Timer0_Write_Val@_tmr0_config^0,w,c
 12043  0054D2  1006               	iorwf	(HAL_Timer0_Write_Val@_tmr0_config+1)^0,w,c
 12044  0054D4  A4D8               	btfss	status,2,c
 12045  0054D6  EF6F  F02A         	goto	u8601
 12046  0054DA  EF71  F02A         	goto	u8600
 12047  0054DE                     u8601:
 12048  0054DE  EF75  F02A         	goto	l8181
 12049  0054E2                     u8600:
 12050  0054E2                     
 12051                           ;MCAL/Timer0/hal_timer0.c: 185:     {;MCAL/Timer0/hal_timer0.c: 186:         ret_value =
      +                           (Std_ReturnType) 0x00 ;
 12052  0054E2  0E00               	movlw	0
 12053  0054E4  6E09               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 12054                           
 12055                           ;MCAL/Timer0/hal_timer0.c: 187:     }
 12056  0054E6  EF79  F02A         	goto	l1524
 12057  0054EA                     l8181:
 12058                           
 12059                           ;MCAL/Timer0/hal_timer0.c: 189:     {;MCAL/Timer0/hal_timer0.c: 190:        TMR0H=(val)>
      +                          >8;
 12060  0054EA  5008               	movf	(HAL_Timer0_Write_Val@val+1)^0,w,c
 12061  0054EC  6ED7               	movwf	215,c	;volatile
 12062  0054EE                     
 12063                           ;MCAL/Timer0/hal_timer0.c: 191:        TMR0L=(uint8)(val);
 12064  0054EE  C007  FFD6         	movff	HAL_Timer0_Write_Val@val,4054	;volatile
 12065  0054F2                     l1524:
 12066                           
 12067                           ;MCAL/Timer0/hal_timer0.c: 213:     return ret_value ;
 12068  0054F2  5009               	movf	HAL_Timer0_Write_Val@ret_value^0,w,c
 12069  0054F4  0012               	return		;funcret
 12070  0054F6                     __end_of_HAL_Timer0_Write_Val:
 12071                           	callstack 0
 12072                           
 12073 ;; *************** function _HAL_Timer0_Read_Val *****************
 12074 ;; Defined at:
 12075 ;;		line 141 in file "MCAL/Timer0/hal_timer0.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  _tmr0_config    2    4[COMRAM] PTR const struct .
 12078 ;;		 -> timer0(4), 
 12079 ;;  result          2    6[COMRAM] PTR unsigned short 
 12080 ;;		 -> Get_Distance@timer_val(2), 
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;  l_low_byte      1   13[COMRAM] unsigned char 
 12083 ;;  l_high_byte     1   12[COMRAM] unsigned char 
 12084 ;;  ret_value       1    0        unsigned char 
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      unsigned char 
 12087 ;; Registers used:
 12088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12097 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12098 ;;Total ram usage:       10 bytes
 12099 ;; Hardware stack levels used: 1
 12100 ;; Hardware stack levels required when called: 4
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_Get_Distance
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           	psect	text54
 12109  004A72                     __ptext54:
 12110                           	callstack 0
 12111  004A72                     _HAL_Timer0_Read_Val:
 12112                           	callstack 25
 12113  004A72                     
 12114                           ;MCAL/Timer0/hal_timer0.c: 145:     uint8_t l_low_byte = 0;
 12115  004A72  0E00               	movlw	0
 12116  004A74  6E0E               	movwf	HAL_Timer0_Read_Val@l_low_byte^0,c
 12117                           
 12118                           ;MCAL/Timer0/hal_timer0.c: 146:     uint8_t l_high_byte = 0;
 12119  004A76  0E00               	movlw	0
 12120  004A78  6E0D               	movwf	HAL_Timer0_Read_Val@l_high_byte^0,c
 12121  004A7A                     
 12122                           ;MCAL/Timer0/hal_timer0.c: 148:     if((((void*)0) == _tmr0_config) || (((void*)0) == re
      +                          sult))
 12123  004A7A  5005               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 12124  004A7C  1006               	iorwf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 12125  004A7E  B4D8               	btfsc	status,2,c
 12126  004A80  EF44  F025         	goto	u9091
 12127  004A84  EF46  F025         	goto	u9090
 12128  004A88                     u9091:
 12129  004A88  EF4F  F025         	goto	l8657
 12130  004A8C                     u9090:
 12131  004A8C  5007               	movf	HAL_Timer0_Read_Val@result^0,w,c
 12132  004A8E  1008               	iorwf	(HAL_Timer0_Read_Val@result+1)^0,w,c
 12133  004A90  A4D8               	btfss	status,2,c
 12134  004A92  EF4D  F025         	goto	u9101
 12135  004A96  EF4F  F025         	goto	u9100
 12136  004A9A                     u9101:
 12137  004A9A  EF51  F025         	goto	l8659
 12138  004A9E                     u9100:
 12139  004A9E                     l8657:
 12140                           
 12141                           ;MCAL/Timer0/hal_timer0.c: 151:     }
 12142  004A9E  EF90  F025         	goto	l1520
 12143  004AA2                     l8659:
 12144                           
 12145                           ;MCAL/Timer0/hal_timer0.c: 153:     {;MCAL/Timer0/hal_timer0.c: 154:         if( 0x00U =
      +                          = _tmr0_config->reg_bit_size)
 12146  004AA2  EE20 F003          	lfsr	2,3
 12147  004AA6  5005               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 12148  004AA8  26D9               	addwf	fsr2l,f,c
 12149  004AAA  5006               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 12150  004AAC  22DA               	addwfc	fsr2h,f,c
 12151  004AAE  B2DF               	btfsc	indf2,1,c
 12152  004AB0  EF5C  F025         	goto	u9111
 12153  004AB4  EF5E  F025         	goto	u9110
 12154  004AB8                     u9111:
 12155  004AB8  EF76  F025         	goto	l8665
 12156  004ABC                     u9110:
 12157  004ABC                     
 12158                           ;MCAL/Timer0/hal_timer0.c: 155:         {;MCAL/Timer0/hal_timer0.c: 156:             l_l
      +                          ow_byte = TMR0L ;
 12159  004ABC  CFD6 F00E          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 12160                           
 12161                           ;MCAL/Timer0/hal_timer0.c: 157:             l_high_byte = TMR0H ;
 12162  004AC0  CFD7 F00D          	movff	4055,HAL_Timer0_Read_Val@l_high_byte	;volatile
 12163  004AC4                     
 12164                           ;MCAL/Timer0/hal_timer0.c: 158:             *result = (uint16_t) (l_low_byte + (l_high_b
      +                          yte << 8));
 12165  004AC4  500D               	movf	HAL_Timer0_Read_Val@l_high_byte^0,w,c
 12166  004AC6  6E0A               	movwf	(??_HAL_Timer0_Read_Val+1)^0,c
 12167  004AC8  6A09               	clrf	??_HAL_Timer0_Read_Val^0,c
 12168  004ACA  500E               	movf	HAL_Timer0_Read_Val@l_low_byte^0,w,c
 12169  004ACC  6E0B               	movwf	(??_HAL_Timer0_Read_Val+2)^0,c
 12170  004ACE  6A0C               	clrf	(??_HAL_Timer0_Read_Val+3)^0,c
 12171  004AD0  5009               	movf	??_HAL_Timer0_Read_Val^0,w,c
 12172  004AD2  260B               	addwf	(??_HAL_Timer0_Read_Val+2)^0,f,c
 12173  004AD4  500A               	movf	(??_HAL_Timer0_Read_Val+1)^0,w,c
 12174  004AD6  220C               	addwfc	(??_HAL_Timer0_Read_Val+3)^0,f,c
 12175  004AD8  C007  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 12176  004ADC  C008  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 12177  004AE0  C00B  FFDE         	movff	??_HAL_Timer0_Read_Val+2,postinc2
 12178  004AE4  C00C  FFDD         	movff	??_HAL_Timer0_Read_Val+3,postdec2
 12179                           
 12180                           ;MCAL/Timer0/hal_timer0.c: 159:         }
 12181  004AE8  EF90  F025         	goto	l1520
 12182  004AEC                     l8665:
 12183  004AEC  EE20 F003          	lfsr	2,3
 12184  004AF0  5005               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 12185  004AF2  26D9               	addwf	fsr2l,f,c
 12186  004AF4  5006               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 12187  004AF6  22DA               	addwfc	fsr2h,f,c
 12188  004AF8  A2DF               	btfss	indf2,1,c
 12189  004AFA  EF81  F025         	goto	u9121
 12190  004AFE  EF83  F025         	goto	u9120
 12191  004B02                     u9121:
 12192  004B02  EF4F  F025         	goto	l8657
 12193  004B06                     u9120:
 12194  004B06                     
 12195                           ;MCAL/Timer0/hal_timer0.c: 161:         {;MCAL/Timer0/hal_timer0.c: 162:             l_l
      +                          ow_byte = TMR0L ;
 12196  004B06  CFD6 F00E          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 12197  004B0A                     
 12198                           ;MCAL/Timer0/hal_timer0.c: 163:             *result = (uint16_t) (l_low_byte);
 12199  004B0A  500E               	movf	HAL_Timer0_Read_Val@l_low_byte^0,w,c
 12200  004B0C  6E09               	movwf	??_HAL_Timer0_Read_Val^0,c
 12201  004B0E  6A0A               	clrf	(??_HAL_Timer0_Read_Val+1)^0,c
 12202  004B10  C007  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 12203  004B14  C008  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 12204  004B18  C009  FFDE         	movff	??_HAL_Timer0_Read_Val,postinc2
 12205  004B1C  C00A  FFDD         	movff	??_HAL_Timer0_Read_Val+1,postdec2
 12206  004B20                     l1520:
 12207  004B20  0012               	return		;funcret
 12208  004B22                     __end_of_HAL_Timer0_Read_Val:
 12209                           	callstack 0
 12210                           
 12211 ;; *************** function _GPIO_Pin_Read_Logic *****************
 12212 ;; Defined at:
 12213 ;;		line 114 in file "MCAL/GPIO/hal_gpio.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;  _pin_config     2    4[COMRAM] PTR const struct .
 12216 ;;		 -> ultrasonic(2), 
 12217 ;;  logic           2    6[COMRAM] PTR enum E2967
 12218 ;;		 -> Get_Distance@logic(1), 
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;  ERRORSTATUS     1    0        unsigned char 
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      unsigned char 
 12223 ;; Registers used:
 12224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12232 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12233 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12234 ;;Total ram usage:        9 bytes
 12235 ;; Hardware stack levels used: 1
 12236 ;; Hardware stack levels required when called: 4
 12237 ;; This function calls:
 12238 ;;		Nothing
 12239 ;; This function is called by:
 12240 ;;		_Get_Distance
 12241 ;;		_IR_Sensor_Detect
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text55
 12246  004BCC                     __ptext55:
 12247                           	callstack 0
 12248  004BCC                     _GPIO_Pin_Read_Logic:
 12249                           	callstack 25
 12250  004BCC                     
 12251                           ;MCAL/GPIO/hal_gpio.c: 117:           if ( ((void*)0)==_pin_config||((void*)0)==logic||_
      +                          pin_config->pin> 8 -1)
 12252  004BCC  5005               	movf	GPIO_Pin_Read_Logic@_pin_config^0,w,c
 12253  004BCE  1006               	iorwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,w,c
 12254  004BD0  B4D8               	btfsc	status,2,c
 12255  004BD2  EFED  F025         	goto	u8841
 12256  004BD6  EFEF  F025         	goto	u8840
 12257  004BDA                     u8841:
 12258  004BDA  EF07  F026         	goto	l8365
 12259  004BDE                     u8840:
 12260  004BDE  5007               	movf	GPIO_Pin_Read_Logic@logic^0,w,c
 12261  004BE0  1008               	iorwf	(GPIO_Pin_Read_Logic@logic+1)^0,w,c
 12262  004BE2  B4D8               	btfsc	status,2,c
 12263  004BE4  EFF6  F025         	goto	u8851
 12264  004BE8  EFF8  F025         	goto	u8850
 12265  004BEC                     u8851:
 12266  004BEC  EF07  F026         	goto	l8365
 12267  004BF0                     u8850:
 12268  004BF0  C005  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 12269  004BF4  C006  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 12270  004BF8  50DF               	movf	223,w,c
 12271  004BFA  0B07               	andlw	7
 12272  004BFC  6E09               	movwf	??_GPIO_Pin_Read_Logic^0,c
 12273  004BFE  0E07               	movlw	7
 12274  004C00  6409               	cpfsgt	??_GPIO_Pin_Read_Logic^0,c
 12275  004C02  EF05  F026         	goto	u8861
 12276  004C06  EF07  F026         	goto	u8860
 12277  004C0A                     u8861:
 12278  004C0A  EF09  F026         	goto	l8367
 12279  004C0E                     u8860:
 12280  004C0E                     l8365:
 12281                           
 12282                           ;MCAL/GPIO/hal_gpio.c: 120:     }
 12283  004C0E  EF3A  F026         	goto	l877
 12284  004C12                     l8367:
 12285                           
 12286                           ;MCAL/GPIO/hal_gpio.c: 122:     {;MCAL/GPIO/hal_gpio.c: 123:          *logic= (( *port_r
      +                          egisters[_pin_config->port]>>_pin_config->pin )&(uint8)1);
 12287  004C12  C005  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 12288  004C16  C006  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 12289  004C1A  50DF               	movf	223,w,c
 12290  004C1C  0B07               	andlw	7
 12291  004C1E  6E09               	movwf	??_GPIO_Pin_Read_Logic^0,c
 12292  004C20  C005  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 12293  004C24  C006  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 12294  004C28  30DF               	rrcf	223,w,c
 12295  004C2A  32E8               	rrcf	wreg,f,c
 12296  004C2C  32E8               	rrcf	wreg,f,c
 12297  004C2E  0B07               	andlw	7
 12298  004C30  6E0A               	movwf	(??_GPIO_Pin_Read_Logic+1)^0,c
 12299  004C32  500A               	movf	(??_GPIO_Pin_Read_Logic+1)^0,w,c
 12300  004C34  0D02               	mullw	2
 12301  004C36  0E84               	movlw	low _port_registers
 12302  004C38  24F3               	addwf	243,w,c
 12303  004C3A  6ED9               	movwf	fsr2l,c
 12304  004C3C  0E01               	movlw	high _port_registers
 12305  004C3E  20F4               	addwfc	prodh,w,c
 12306  004C40  6EDA               	movwf	fsr2h,c
 12307  004C42  CFDE F00B          	movff	postinc2,??_GPIO_Pin_Read_Logic+2
 12308  004C46  CFDD F00C          	movff	postdec2,??_GPIO_Pin_Read_Logic+3
 12309  004C4A  C00B  FFD9         	movff	??_GPIO_Pin_Read_Logic+2,fsr2l
 12310  004C4E  C00C  FFDA         	movff	??_GPIO_Pin_Read_Logic+3,fsr2h
 12311  004C52  50DF               	movf	indf2,w,c
 12312  004C54  6E0D               	movwf	(??_GPIO_Pin_Read_Logic+4)^0,c
 12313  004C56  2A09               	incf	??_GPIO_Pin_Read_Logic^0,f,c
 12314  004C58  EF30  F026         	goto	u8874
 12315  004C5C                     u8875:
 12316  004C5C  90D8               	bcf	status,0,c
 12317  004C5E  320D               	rrcf	(??_GPIO_Pin_Read_Logic+4)^0,f,c
 12318  004C60                     u8874:
 12319  004C60  2E09               	decfsz	??_GPIO_Pin_Read_Logic^0,f,c
 12320  004C62  EF2E  F026         	goto	u8875
 12321  004C66  500D               	movf	(??_GPIO_Pin_Read_Logic+4)^0,w,c
 12322  004C68  0B01               	andlw	1
 12323  004C6A  C007  FFD9         	movff	GPIO_Pin_Read_Logic@logic,fsr2l
 12324  004C6E  C008  FFDA         	movff	GPIO_Pin_Read_Logic@logic+1,fsr2h
 12325  004C72  6EDF               	movwf	indf2,c
 12326  004C74                     l877:
 12327  004C74  0012               	return		;funcret
 12328  004C76                     __end_of_GPIO_Pin_Read_Logic:
 12329                           	callstack 0
 12330                           
 12331 ;; *************** function _InterruptManagerLow *****************
 12332 ;; Defined at:
 12333 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;		None
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;		None
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      void 
 12340 ;; Registers used:
 12341 ;;		wreg, status,2, cstack
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;Total ram usage:        3 bytes
 12352 ;; Hardware stack levels used: 1
 12353 ;; Hardware stack levels required when called: 3
 12354 ;; This function calls:
 12355 ;;		_ADC_ISR
 12356 ;;		_INT1_ISR
 12357 ;;		_RB4_ISR
 12358 ;;		_RB5_ISR
 12359 ;;		_RB6_ISR
 12360 ;;		_RB7_ISR
 12361 ;; This function is called by:
 12362 ;;		Interrupt level 1
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	intcodelo
 12367  000018                     __pintcodelo:
 12368                           	callstack 0
 12369  000018                     _InterruptManagerLow:
 12370                           	callstack 18
 12371                           
 12372                           ;incstack = 0
 12373  000018  807A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12374  00001A  CFD8 F002          	movff	status,??_InterruptManagerLow
 12375  00001E  CFE8 F003          	movff	wreg,??_InterruptManagerLow+1
 12376  000022  CFE0 F004          	movff	bsr,??_InterruptManagerLow+2
 12377  000026                     
 12378                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
 12379  000026  A6F0               	btfss	240,3,c	;volatile
 12380  000028  EF18  F000         	goto	i1u1057_21
 12381  00002C  EF1A  F000         	goto	i1u1057_20
 12382  000030                     i1u1057_21:
 12383  000030  EF23  F000         	goto	i1l1151
 12384  000034                     i1u1057_20:
 12385  000034  A0F0               	btfss	240,0,c	;volatile
 12386  000036  EF1F  F000         	goto	i1u1058_21
 12387  00003A  EF21  F000         	goto	i1u1058_20
 12388  00003E                     i1u1058_21:
 12389  00003E  EF23  F000         	goto	i1l1151
 12390  000042                     i1u1058_20:
 12391  000042                     
 12392                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
 12393  000042  ECC5  F02A         	call	_INT1_ISR	;wreg free
 12394  000046                     i1l1151:
 12395                           
 12396                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12397  000046  A6F2               	btfss	242,3,c	;volatile
 12398  000048  EF28  F000         	goto	i1u1059_21
 12399  00004C  EF2A  F000         	goto	i1u1059_20
 12400  000050                     i1u1059_21:
 12401  000050  EF43  F000         	goto	i1l1153
 12402  000054                     i1u1059_20:
 12403  000054  A0F2               	btfss	242,0,c	;volatile
 12404  000056  EF2F  F000         	goto	i1u1060_21
 12405  00005A  EF31  F000         	goto	i1u1060_20
 12406  00005E                     i1u1060_21:
 12407  00005E  EF43  F000         	goto	i1l1153
 12408  000062                     i1u1060_20:
 12409  000062  A881               	btfss	129,4,c	;volatile
 12410  000064  EF36  F000         	goto	i1u1061_21
 12411  000068  EF38  F000         	goto	i1u1061_20
 12412  00006C                     i1u1061_21:
 12413  00006C  EF43  F000         	goto	i1l1153
 12414  000070                     i1u1061_20:
 12415  000070  A078               	btfss	_flags^0,0,c	;volatile
 12416  000072  EF3D  F000         	goto	i1u1062_21
 12417  000076  EF3F  F000         	goto	i1u1062_20
 12418  00007A                     i1u1062_21:
 12419  00007A  EF43  F000         	goto	i1l1153
 12420  00007E                     i1u1062_20:
 12421  00007E                     
 12422                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
 12423  00007E  9078               	bcf	_flags^0,0,c	;volatile
 12424  000080                     
 12425                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
 12426  000080  0E01               	movlw	1
 12427  000082  ECB1  F02A         	call	_RB4_ISR
 12428  000086                     i1l1153:
 12429                           
 12430                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12431  000086  A6F2               	btfss	242,3,c	;volatile
 12432  000088  EF48  F000         	goto	i1u1063_21
 12433  00008C  EF4A  F000         	goto	i1u1063_20
 12434  000090                     i1u1063_21:
 12435  000090  EF63  F000         	goto	i1l1155
 12436  000094                     i1u1063_20:
 12437  000094  A0F2               	btfss	242,0,c	;volatile
 12438  000096  EF4F  F000         	goto	i1u1064_21
 12439  00009A  EF51  F000         	goto	i1u1064_20
 12440  00009E                     i1u1064_21:
 12441  00009E  EF63  F000         	goto	i1l1155
 12442  0000A2                     i1u1064_20:
 12443  0000A2  B881               	btfsc	129,4,c	;volatile
 12444  0000A4  EF56  F000         	goto	i1u1065_21
 12445  0000A8  EF58  F000         	goto	i1u1065_20
 12446  0000AC                     i1u1065_21:
 12447  0000AC  EF63  F000         	goto	i1l1155
 12448  0000B0                     i1u1065_20:
 12449  0000B0  B078               	btfsc	_flags^0,0,c	;volatile
 12450  0000B2  EF5D  F000         	goto	i1u1066_21
 12451  0000B6  EF5F  F000         	goto	i1u1066_20
 12452  0000BA                     i1u1066_21:
 12453  0000BA  EF63  F000         	goto	i1l1155
 12454  0000BE                     i1u1066_20:
 12455  0000BE                     
 12456                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
 12457  0000BE  8078               	bsf	_flags^0,0,c	;volatile
 12458  0000C0                     
 12459                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
 12460  0000C0  0E00               	movlw	0
 12461  0000C2  ECB1  F02A         	call	_RB4_ISR
 12462  0000C6                     i1l1155:
 12463                           
 12464                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12465  0000C6  A6F2               	btfss	242,3,c	;volatile
 12466  0000C8  EF68  F000         	goto	i1u1067_21
 12467  0000CC  EF6A  F000         	goto	i1u1067_20
 12468  0000D0                     i1u1067_21:
 12469  0000D0  EF83  F000         	goto	i1l1157
 12470  0000D4                     i1u1067_20:
 12471  0000D4  A0F2               	btfss	242,0,c	;volatile
 12472  0000D6  EF6F  F000         	goto	i1u1068_21
 12473  0000DA  EF71  F000         	goto	i1u1068_20
 12474  0000DE                     i1u1068_21:
 12475  0000DE  EF83  F000         	goto	i1l1157
 12476  0000E2                     i1u1068_20:
 12477  0000E2  AA81               	btfss	129,5,c	;volatile
 12478  0000E4  EF76  F000         	goto	i1u1069_21
 12479  0000E8  EF78  F000         	goto	i1u1069_20
 12480  0000EC                     i1u1069_21:
 12481  0000EC  EF83  F000         	goto	i1l1157
 12482  0000F0                     i1u1069_20:
 12483  0000F0  A278               	btfss	_flags^0,1,c	;volatile
 12484  0000F2  EF7D  F000         	goto	i1u1070_21
 12485  0000F6  EF7F  F000         	goto	i1u1070_20
 12486  0000FA                     i1u1070_21:
 12487  0000FA  EF83  F000         	goto	i1l1157
 12488  0000FE                     i1u1070_20:
 12489  0000FE                     
 12490                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
 12491  0000FE  9278               	bcf	_flags^0,1,c	;volatile
 12492  000100                     
 12493                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
 12494  000100  0E01               	movlw	1
 12495  000102  ECA4  F02A         	call	_RB5_ISR
 12496  000106                     i1l1157:
 12497                           
 12498                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12499  000106  A6F2               	btfss	242,3,c	;volatile
 12500  000108  EF88  F000         	goto	i1u1071_21
 12501  00010C  EF8A  F000         	goto	i1u1071_20
 12502  000110                     i1u1071_21:
 12503  000110  EFA3  F000         	goto	i1l1159
 12504  000114                     i1u1071_20:
 12505  000114  A0F2               	btfss	242,0,c	;volatile
 12506  000116  EF8F  F000         	goto	i1u1072_21
 12507  00011A  EF91  F000         	goto	i1u1072_20
 12508  00011E                     i1u1072_21:
 12509  00011E  EFA3  F000         	goto	i1l1159
 12510  000122                     i1u1072_20:
 12511  000122  BA81               	btfsc	129,5,c	;volatile
 12512  000124  EF96  F000         	goto	i1u1073_21
 12513  000128  EF98  F000         	goto	i1u1073_20
 12514  00012C                     i1u1073_21:
 12515  00012C  EFA3  F000         	goto	i1l1159
 12516  000130                     i1u1073_20:
 12517  000130  B278               	btfsc	_flags^0,1,c	;volatile
 12518  000132  EF9D  F000         	goto	i1u1074_21
 12519  000136  EF9F  F000         	goto	i1u1074_20
 12520  00013A                     i1u1074_21:
 12521  00013A  EFA3  F000         	goto	i1l1159
 12522  00013E                     i1u1074_20:
 12523  00013E                     
 12524                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
 12525  00013E  8278               	bsf	_flags^0,1,c	;volatile
 12526  000140                     
 12527                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
 12528  000140  0E00               	movlw	0
 12529  000142  ECA4  F02A         	call	_RB5_ISR
 12530  000146                     i1l1159:
 12531                           
 12532                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12533  000146  A6F2               	btfss	242,3,c	;volatile
 12534  000148  EFA8  F000         	goto	i1u1075_21
 12535  00014C  EFAA  F000         	goto	i1u1075_20
 12536  000150                     i1u1075_21:
 12537  000150  EFC3  F000         	goto	i1l1161
 12538  000154                     i1u1075_20:
 12539  000154  A0F2               	btfss	242,0,c	;volatile
 12540  000156  EFAF  F000         	goto	i1u1076_21
 12541  00015A  EFB1  F000         	goto	i1u1076_20
 12542  00015E                     i1u1076_21:
 12543  00015E  EFC3  F000         	goto	i1l1161
 12544  000162                     i1u1076_20:
 12545  000162  AC81               	btfss	129,6,c	;volatile
 12546  000164  EFB6  F000         	goto	i1u1077_21
 12547  000168  EFB8  F000         	goto	i1u1077_20
 12548  00016C                     i1u1077_21:
 12549  00016C  EFC3  F000         	goto	i1l1161
 12550  000170                     i1u1077_20:
 12551  000170  A478               	btfss	_flags^0,2,c	;volatile
 12552  000172  EFBD  F000         	goto	i1u1078_21
 12553  000176  EFBF  F000         	goto	i1u1078_20
 12554  00017A                     i1u1078_21:
 12555  00017A  EFC3  F000         	goto	i1l1161
 12556  00017E                     i1u1078_20:
 12557  00017E                     
 12558                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
 12559  00017E  9478               	bcf	_flags^0,2,c	;volatile
 12560  000180                     
 12561                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
 12562  000180  0E01               	movlw	1
 12563  000182  EC97  F02A         	call	_RB6_ISR
 12564  000186                     i1l1161:
 12565                           
 12566                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12567  000186  A6F2               	btfss	242,3,c	;volatile
 12568  000188  EFC8  F000         	goto	i1u1079_21
 12569  00018C  EFCA  F000         	goto	i1u1079_20
 12570  000190                     i1u1079_21:
 12571  000190  EFE3  F000         	goto	i1l1163
 12572  000194                     i1u1079_20:
 12573  000194  A0F2               	btfss	242,0,c	;volatile
 12574  000196  EFCF  F000         	goto	i1u1080_21
 12575  00019A  EFD1  F000         	goto	i1u1080_20
 12576  00019E                     i1u1080_21:
 12577  00019E  EFE3  F000         	goto	i1l1163
 12578  0001A2                     i1u1080_20:
 12579  0001A2  BC81               	btfsc	129,6,c	;volatile
 12580  0001A4  EFD6  F000         	goto	i1u1081_21
 12581  0001A8  EFD8  F000         	goto	i1u1081_20
 12582  0001AC                     i1u1081_21:
 12583  0001AC  EFE3  F000         	goto	i1l1163
 12584  0001B0                     i1u1081_20:
 12585  0001B0  B478               	btfsc	_flags^0,2,c	;volatile
 12586  0001B2  EFDD  F000         	goto	i1u1082_21
 12587  0001B6  EFDF  F000         	goto	i1u1082_20
 12588  0001BA                     i1u1082_21:
 12589  0001BA  EFE3  F000         	goto	i1l1163
 12590  0001BE                     i1u1082_20:
 12591  0001BE                     
 12592                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
 12593  0001BE  8478               	bsf	_flags^0,2,c	;volatile
 12594  0001C0                     
 12595                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
 12596  0001C0  0E00               	movlw	0
 12597  0001C2  EC97  F02A         	call	_RB6_ISR
 12598  0001C6                     i1l1163:
 12599                           
 12600                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12601  0001C6  A6F2               	btfss	242,3,c	;volatile
 12602  0001C8  EFE8  F000         	goto	i1u1083_21
 12603  0001CC  EFEA  F000         	goto	i1u1083_20
 12604  0001D0                     i1u1083_21:
 12605  0001D0  EF03  F001         	goto	i1l1165
 12606  0001D4                     i1u1083_20:
 12607  0001D4  A0F2               	btfss	242,0,c	;volatile
 12608  0001D6  EFEF  F000         	goto	i1u1084_21
 12609  0001DA  EFF1  F000         	goto	i1u1084_20
 12610  0001DE                     i1u1084_21:
 12611  0001DE  EF03  F001         	goto	i1l1165
 12612  0001E2                     i1u1084_20:
 12613  0001E2  AE81               	btfss	129,7,c	;volatile
 12614  0001E4  EFF6  F000         	goto	i1u1085_21
 12615  0001E8  EFF8  F000         	goto	i1u1085_20
 12616  0001EC                     i1u1085_21:
 12617  0001EC  EF03  F001         	goto	i1l1165
 12618  0001F0                     i1u1085_20:
 12619  0001F0  A678               	btfss	_flags^0,3,c	;volatile
 12620  0001F2  EFFD  F000         	goto	i1u1086_21
 12621  0001F6  EFFF  F000         	goto	i1u1086_20
 12622  0001FA                     i1u1086_21:
 12623  0001FA  EF03  F001         	goto	i1l1165
 12624  0001FE                     i1u1086_20:
 12625  0001FE                     
 12626                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
 12627  0001FE  9678               	bcf	_flags^0,3,c	;volatile
 12628  000200                     
 12629                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
 12630  000200  0E01               	movlw	1
 12631  000202  EC8A  F02A         	call	_RB7_ISR
 12632  000206                     i1l1165:
 12633                           
 12634                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12635  000206  A6F2               	btfss	242,3,c	;volatile
 12636  000208  EF08  F001         	goto	i1u1087_21
 12637  00020C  EF0A  F001         	goto	i1u1087_20
 12638  000210                     i1u1087_21:
 12639  000210  EF23  F001         	goto	i1l1167
 12640  000214                     i1u1087_20:
 12641  000214  A0F2               	btfss	242,0,c	;volatile
 12642  000216  EF0F  F001         	goto	i1u1088_21
 12643  00021A  EF11  F001         	goto	i1u1088_20
 12644  00021E                     i1u1088_21:
 12645  00021E  EF23  F001         	goto	i1l1167
 12646  000222                     i1u1088_20:
 12647  000222  BE81               	btfsc	129,7,c	;volatile
 12648  000224  EF16  F001         	goto	i1u1089_21
 12649  000228  EF18  F001         	goto	i1u1089_20
 12650  00022C                     i1u1089_21:
 12651  00022C  EF23  F001         	goto	i1l1167
 12652  000230                     i1u1089_20:
 12653  000230  B678               	btfsc	_flags^0,3,c	;volatile
 12654  000232  EF1D  F001         	goto	i1u1090_21
 12655  000236  EF1F  F001         	goto	i1u1090_20
 12656  00023A                     i1u1090_21:
 12657  00023A  EF23  F001         	goto	i1l1167
 12658  00023E                     i1u1090_20:
 12659  00023E                     
 12660                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
 12661  00023E  8678               	bsf	_flags^0,3,c	;volatile
 12662  000240                     
 12663                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
 12664  000240  0E00               	movlw	0
 12665  000242  EC8A  F02A         	call	_RB7_ISR
 12666  000246                     i1l1167:
 12667                           
 12668                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
 12669  000246  AC9D               	btfss	157,6,c	;volatile
 12670  000248  EF28  F001         	goto	i1u1091_21
 12671  00024C  EF2A  F001         	goto	i1u1091_20
 12672  000250                     i1u1091_21:
 12673  000250  EF33  F001         	goto	i1l1169
 12674  000254                     i1u1091_20:
 12675  000254  AC9E               	btfss	158,6,c	;volatile
 12676  000256  EF2F  F001         	goto	i1u1092_21
 12677  00025A  EF31  F001         	goto	i1u1092_20
 12678  00025E                     i1u1092_21:
 12679  00025E  EF33  F001         	goto	i1l1169
 12680  000262                     i1u1092_20:
 12681  000262                     
 12682                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
 12683  000262  ECC9  F02A         	call	_ADC_ISR	;wreg free
 12684  000266                     i1l1169:
 12685                           
 12686                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
 12687  000266  A09D               	btfss	157,0,c	;volatile
 12688  000268  EF38  F001         	goto	i1u1093_21
 12689  00026C  EF3A  F001         	goto	i1u1093_20
 12690  000270                     i1u1093_21:
 12691  000270  EF3B  F001         	goto	i1l1172
 12692  000274                     i1u1093_20:
 12693  000274  509E               	movf	158,w,c	;volatile
 12694  000276                     i1l1172:
 12695  000276  C004  FFE0         	movff	??_InterruptManagerLow+2,bsr
 12696  00027A  C003  FFE8         	movff	??_InterruptManagerLow+1,wreg
 12697  00027E  C002  FFD8         	movff	??_InterruptManagerLow,status
 12698  000282  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12699  000284  0010               	retfie	
 12700  000286                     __end_of_InterruptManagerLow:
 12701                           	callstack 0
 12702                           
 12703 ;; *************** function _RB7_ISR *****************
 12704 ;; Defined at:
 12705 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12706 ;; Parameters:    Size  Location     Type
 12707 ;;  Handler_Sele    1    wreg     unsigned char 
 12708 ;; Auto vars:     Size  Location     Type
 12709 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  1    wreg      void 
 12712 ;; Registers used:
 12713 ;;		wreg, status,2
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;Total ram usage:        1 bytes
 12724 ;; Hardware stack levels used: 1
 12725 ;; Hardware stack levels required when called: 2
 12726 ;; This function calls:
 12727 ;;		Nothing
 12728 ;; This function is called by:
 12729 ;;		_InterruptManagerLow
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           	psect	text57
 12734  005514                     __ptext57:
 12735                           	callstack 0
 12736  005514                     _RB7_ISR:
 12737                           	callstack 18
 12738                           
 12739                           ;incstack = 0
 12740                           ;RB7_ISR@Handler_Select stored from wreg
 12741  005514  6E01               	movwf	RB7_ISR@Handler_Select^0,c
 12742  005516                     
 12743                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
 12744  005516  90F2               	bcf	242,0,c	;volatile
 12745  005518                     
 12746                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
 12747  005518  5001               	movf	RB7_ISR@Handler_Select^0,w,c
 12748  00551A  B4D8               	btfsc	status,2,c
 12749  00551C  EF92  F02A         	goto	i1u967_21
 12750  005520  EF94  F02A         	goto	i1u967_20
 12751  005524                     i1u967_21:
 12752  005524  EF96  F02A         	goto	i1l9029
 12753  005528                     i1u967_20:
 12754  005528  EF96  F02A         	goto	i1l1278
 12755  00552C                     i1l9029:
 12756  00552C                     i1l1278:
 12757  00552C  0012               	return		;funcret
 12758  00552E                     __end_of_RB7_ISR:
 12759                           	callstack 0
 12760                           
 12761 ;; *************** function _RB6_ISR *****************
 12762 ;; Defined at:
 12763 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  Handler_Sele    1    wreg     unsigned char 
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
 12768 ;; Return value:  Size  Location     Type
 12769 ;;                  1    wreg      void 
 12770 ;; Registers used:
 12771 ;;		wreg, status,2
 12772 ;; Tracked objects:
 12773 ;;		On entry : 0/0
 12774 ;;		On exit  : 0/0
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12781 ;;Total ram usage:        1 bytes
 12782 ;; Hardware stack levels used: 1
 12783 ;; Hardware stack levels required when called: 2
 12784 ;; This function calls:
 12785 ;;		Nothing
 12786 ;; This function is called by:
 12787 ;;		_InterruptManagerLow
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791                           	psect	text58
 12792  00552E                     __ptext58:
 12793                           	callstack 0
 12794  00552E                     _RB6_ISR:
 12795                           	callstack 18
 12796                           
 12797                           ;incstack = 0
 12798                           ;RB6_ISR@Handler_Select stored from wreg
 12799  00552E  6E01               	movwf	RB6_ISR@Handler_Select^0,c
 12800  005530                     
 12801                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
 12802  005530  90F2               	bcf	242,0,c	;volatile
 12803  005532                     
 12804                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
 12805  005532  5001               	movf	RB6_ISR@Handler_Select^0,w,c
 12806  005534  B4D8               	btfsc	status,2,c
 12807  005536  EF9F  F02A         	goto	i1u966_21
 12808  00553A  EFA1  F02A         	goto	i1u966_20
 12809  00553E                     i1u966_21:
 12810  00553E  EFA3  F02A         	goto	i1l9019
 12811  005542                     i1u966_20:
 12812  005542  EFA3  F02A         	goto	i1l1269
 12813  005546                     i1l9019:
 12814  005546                     i1l1269:
 12815  005546  0012               	return		;funcret
 12816  005548                     __end_of_RB6_ISR:
 12817                           	callstack 0
 12818                           
 12819 ;; *************** function _RB5_ISR *****************
 12820 ;; Defined at:
 12821 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  Handler_Sele    1    wreg     unsigned char 
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1    wreg      void 
 12828 ;; Registers used:
 12829 ;;		wreg, status,2
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 0/0
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12839 ;;Total ram usage:        1 bytes
 12840 ;; Hardware stack levels used: 1
 12841 ;; Hardware stack levels required when called: 2
 12842 ;; This function calls:
 12843 ;;		Nothing
 12844 ;; This function is called by:
 12845 ;;		_InterruptManagerLow
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849                           	psect	text59
 12850  005548                     __ptext59:
 12851                           	callstack 0
 12852  005548                     _RB5_ISR:
 12853                           	callstack 18
 12854                           
 12855                           ;incstack = 0
 12856                           ;RB5_ISR@Handler_Select stored from wreg
 12857  005548  6E01               	movwf	RB5_ISR@Handler_Select^0,c
 12858  00554A                     
 12859                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
 12860  00554A  90F2               	bcf	242,0,c	;volatile
 12861  00554C                     
 12862                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
 12863  00554C  5001               	movf	RB5_ISR@Handler_Select^0,w,c
 12864  00554E  B4D8               	btfsc	status,2,c
 12865  005550  EFAC  F02A         	goto	i1u965_21
 12866  005554  EFAE  F02A         	goto	i1u965_20
 12867  005558                     i1u965_21:
 12868  005558  EFB0  F02A         	goto	i1l9009
 12869  00555C                     i1u965_20:
 12870  00555C  EFB0  F02A         	goto	i1l1260
 12871  005560                     i1l9009:
 12872  005560                     i1l1260:
 12873  005560  0012               	return		;funcret
 12874  005562                     __end_of_RB5_ISR:
 12875                           	callstack 0
 12876                           
 12877 ;; *************** function _RB4_ISR *****************
 12878 ;; Defined at:
 12879 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;  Handler_Sele    1    wreg     unsigned char 
 12882 ;; Auto vars:     Size  Location     Type
 12883 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  1    wreg      void 
 12886 ;; Registers used:
 12887 ;;		wreg, status,2
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12897 ;;Total ram usage:        1 bytes
 12898 ;; Hardware stack levels used: 1
 12899 ;; Hardware stack levels required when called: 2
 12900 ;; This function calls:
 12901 ;;		Nothing
 12902 ;; This function is called by:
 12903 ;;		_InterruptManagerLow
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           	psect	text60
 12908  005562                     __ptext60:
 12909                           	callstack 0
 12910  005562                     _RB4_ISR:
 12911                           	callstack 18
 12912                           
 12913                           ;incstack = 0
 12914                           ;RB4_ISR@Handler_Select stored from wreg
 12915  005562  6E01               	movwf	RB4_ISR@Handler_Select^0,c
 12916  005564                     
 12917                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
 12918  005564  90F2               	bcf	242,0,c	;volatile
 12919  005566                     
 12920                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
 12921  005566  5001               	movf	RB4_ISR@Handler_Select^0,w,c
 12922  005568  B4D8               	btfsc	status,2,c
 12923  00556A  EFB9  F02A         	goto	i1u964_21
 12924  00556E  EFBB  F02A         	goto	i1u964_20
 12925  005572                     i1u964_21:
 12926  005572  EFBD  F02A         	goto	i1l8999
 12927  005576                     i1u964_20:
 12928  005576  EFBD  F02A         	goto	i1l1251
 12929  00557A                     i1l8999:
 12930  00557A                     i1l1251:
 12931  00557A  0012               	return		;funcret
 12932  00557C                     __end_of_RB4_ISR:
 12933                           	callstack 0
 12934                           
 12935 ;; *************** function _INT1_ISR *****************
 12936 ;; Defined at:
 12937 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12938 ;; Parameters:    Size  Location     Type
 12939 ;;		None
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;		None
 12942 ;; Return value:  Size  Location     Type
 12943 ;;                  1    wreg      void 
 12944 ;; Registers used:
 12945 ;;		None
 12946 ;; Tracked objects:
 12947 ;;		On entry : 0/0
 12948 ;;		On exit  : 0/0
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12955 ;;Total ram usage:        0 bytes
 12956 ;; Hardware stack levels used: 1
 12957 ;; Hardware stack levels required when called: 2
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_InterruptManagerLow
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text61
 12966  00558A                     __ptext61:
 12967                           	callstack 0
 12968  00558A                     _INT1_ISR:
 12969                           	callstack 18
 12970  00558A                     
 12971                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
 12972  00558A  90F0               	bcf	240,0,c	;volatile
 12973  00558C  0012               	return		;funcret
 12974  00558E                     __end_of_INT1_ISR:
 12975                           	callstack 0
 12976                           
 12977 ;; *************** function _ADC_ISR *****************
 12978 ;; Defined at:
 12979 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		None
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12997 ;;Total ram usage:        0 bytes
 12998 ;; Hardware stack levels used: 1
 12999 ;; Hardware stack levels required when called: 2
 13000 ;; This function calls:
 13001 ;;		Nothing
 13002 ;; This function is called by:
 13003 ;;		_InterruptManagerLow
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text62
 13008  005592                     __ptext62:
 13009                           	callstack 0
 13010  005592                     _ADC_ISR:
 13011                           	callstack 18
 13012  005592  0012               	return		;funcret
 13013  005594                     __end_of_ADC_ISR:
 13014                           	callstack 0
 13015                           
 13016 ;; *************** function _InterruptManagerHigh *****************
 13017 ;; Defined at:
 13018 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		wreg, status,2, status,0, cstack
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;Total ram usage:        0 bytes
 13037 ;; Hardware stack levels used: 1
 13038 ;; Hardware stack levels required when called: 1
 13039 ;; This function calls:
 13040 ;;		_EUSART_Rx_ISR
 13041 ;;		_EUSART_Tx_ISR
 13042 ;;		_TMR0_ISR
 13043 ;; This function is called by:
 13044 ;;		Interrupt level 2
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           	psect	intcode
 13049  000008                     __pintcode:
 13050                           	callstack 0
 13051  000008                     _InterruptManagerHigh:
 13052                           	callstack 18
 13053                           
 13054                           ;incstack = 0
 13055  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13056  00000A  ED2E  F024         	call	int_func,f	;refresh shadow registers
 13057                           
 13058                           	psect	intcode_body
 13059  00485C                     __pintcode_body:
 13060                           	callstack 18
 13061  00485C                     int_func:
 13062                           	callstack 18
 13063  00485C  0006               	pop		; remove dummy address from shadow register refresh
 13064  00485E                     
 13065                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
 13066  00485E  AAF2               	btfss	242,5,c	;volatile
 13067  004860  EF34  F024         	goto	i2u1046_41
 13068  004864  EF36  F024         	goto	i2u1046_40
 13069  004868                     i2u1046_41:
 13070  004868  EF3F  F024         	goto	i2l1130
 13071  00486C                     i2u1046_40:
 13072  00486C  A4F2               	btfss	242,2,c	;volatile
 13073  00486E  EF3B  F024         	goto	i2u1047_41
 13074  004872  EF3D  F024         	goto	i2u1047_40
 13075  004876                     i2u1047_41:
 13076  004876  EF3F  F024         	goto	i2l1130
 13077  00487A                     i2u1047_40:
 13078  00487A                     
 13079                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
 13080  00487A  ECCA  F02A         	call	_TMR0_ISR	;wreg free
 13081  00487E                     i2l1130:
 13082                           
 13083                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
 13084  00487E  A29D               	btfss	157,1,c	;volatile
 13085  004880  EF44  F024         	goto	i2u1048_41
 13086  004884  EF46  F024         	goto	i2u1048_40
 13087  004888                     i2u1048_41:
 13088  004888  EF47  F024         	goto	i2l1132
 13089  00488C                     i2u1048_40:
 13090  00488C  509E               	movf	158,w,c	;volatile
 13091  00488E                     i2l1132:
 13092                           
 13093                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
 13094  00488E  A2A0               	btfss	160,1,c	;volatile
 13095  004890  EF4C  F024         	goto	i2u1049_41
 13096  004894  EF4E  F024         	goto	i2u1049_40
 13097  004898                     i2u1049_41:
 13098  004898  EF4F  F024         	goto	i2l1134
 13099  00489C                     i2u1049_40:
 13100  00489C  50A1               	movf	161,w,c	;volatile
 13101  00489E                     i2l1134:
 13102                           
 13103                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
 13104  00489E  A0A0               	btfss	160,0,c	;volatile
 13105  0048A0  EF54  F024         	goto	i2u1050_41
 13106  0048A4  EF56  F024         	goto	i2u1050_40
 13107  0048A8                     i2u1050_41:
 13108  0048A8  EF57  F024         	goto	i2l1136
 13109  0048AC                     i2u1050_40:
 13110  0048AC  50A1               	movf	161,w,c	;volatile
 13111  0048AE                     i2l1136:
 13112                           
 13113                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
 13114  0048AE  AA9D               	btfss	157,5,c	;volatile
 13115  0048B0  EF5C  F024         	goto	i2u1051_41
 13116  0048B4  EF5E  F024         	goto	i2u1051_40
 13117  0048B8                     i2u1051_41:
 13118  0048B8  EF67  F024         	goto	i2l1138
 13119  0048BC                     i2u1051_40:
 13120  0048BC  AA9E               	btfss	158,5,c	;volatile
 13121  0048BE  EF63  F024         	goto	i2u1052_41
 13122  0048C2  EF65  F024         	goto	i2u1052_40
 13123  0048C6                     i2u1052_41:
 13124  0048C6  EF67  F024         	goto	i2l1138
 13125  0048CA                     i2u1052_40:
 13126  0048CA                     
 13127                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
 13128  0048CA  ECCC  F02A         	call	_EUSART_Rx_ISR	;wreg free
 13129  0048CE                     i2l1138:
 13130                           
 13131                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
 13132  0048CE  A89D               	btfss	157,4,c	;volatile
 13133  0048D0  EF6C  F024         	goto	i2u1053_41
 13134  0048D4  EF6E  F024         	goto	i2u1053_40
 13135  0048D8                     i2u1053_41:
 13136  0048D8  EF77  F024         	goto	i2l1140
 13137  0048DC                     i2u1053_40:
 13138  0048DC  A89E               	btfss	158,4,c	;volatile
 13139  0048DE  EF73  F024         	goto	i2u1054_41
 13140  0048E2  EF75  F024         	goto	i2u1054_40
 13141  0048E6                     i2u1054_41:
 13142  0048E6  EF77  F024         	goto	i2l1140
 13143  0048EA                     i2u1054_40:
 13144  0048EA                     
 13145                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
 13146  0048EA  ECCB  F02A         	call	_EUSART_Tx_ISR	;wreg free
 13147  0048EE                     i2l1140:
 13148                           
 13149                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
 13150  0048EE  A6A0               	btfss	160,3,c	;volatile
 13151  0048F0  EF7C  F024         	goto	i2u1055_41
 13152  0048F4  EF7E  F024         	goto	i2u1055_40
 13153  0048F8                     i2u1055_41:
 13154  0048F8  EF7F  F024         	goto	i2l1142
 13155  0048FC                     i2u1055_40:
 13156  0048FC  50A1               	movf	161,w,c	;volatile
 13157  0048FE                     i2l1142:
 13158                           
 13159                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
 13160  0048FE  A69D               	btfss	157,3,c	;volatile
 13161  004900  EF84  F024         	goto	i2u1056_41
 13162  004904  EF86  F024         	goto	i2u1056_40
 13163  004908                     i2u1056_41:
 13164  004908  EF87  F024         	goto	i2l1145
 13165  00490C                     i2u1056_40:
 13166  00490C  509E               	movf	158,w,c	;volatile
 13167  00490E                     i2l1145:
 13168  00490E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13169  004910  0011               	retfie		f
 13170  004912                     __end_of_InterruptManagerHigh:
 13171                           	callstack 0
 13172                           
 13173 ;; *************** function _TMR0_ISR *****************
 13174 ;; Defined at:
 13175 ;;		line 217 in file "MCAL/Timer0/hal_timer0.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;		None
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;		None
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  1    wreg      void 
 13182 ;; Registers used:
 13183 ;;		None
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13193 ;;Total ram usage:        0 bytes
 13194 ;; Hardware stack levels used: 1
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_InterruptManagerHigh
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text64
 13203  005594                     __ptext64:
 13204                           	callstack 0
 13205  005594                     _TMR0_ISR:
 13206                           	callstack 18
 13207  005594  0012               	return		;funcret
 13208  005596                     __end_of_TMR0_ISR:
 13209                           	callstack 0
 13210                           
 13211 ;; *************** function _EUSART_Tx_ISR *****************
 13212 ;; Defined at:
 13213 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;		None
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;		None
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  1    wreg      void 
 13220 ;; Registers used:
 13221 ;;		None
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13231 ;;Total ram usage:        0 bytes
 13232 ;; Hardware stack levels used: 1
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_InterruptManagerHigh
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text65
 13241  005596                     __ptext65:
 13242                           	callstack 0
 13243  005596                     _EUSART_Tx_ISR:
 13244                           	callstack 18
 13245  005596  0012               	return		;funcret
 13246  005598                     __end_of_EUSART_Tx_ISR:
 13247                           	callstack 0
 13248                           
 13249 ;; *************** function _EUSART_Rx_ISR *****************
 13250 ;; Defined at:
 13251 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;		None
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;		None
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      void 
 13258 ;; Registers used:
 13259 ;;		wreg, status,2, status,0
 13260 ;; Tracked objects:
 13261 ;;		On entry : 0/0
 13262 ;;		On exit  : 0/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13269 ;;Total ram usage:        0 bytes
 13270 ;; Hardware stack levels used: 1
 13271 ;; This function calls:
 13272 ;;		Nothing
 13273 ;; This function is called by:
 13274 ;;		_InterruptManagerHigh
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           	psect	text66
 13279  005598                     __ptext66:
 13280                           	callstack 0
 13281  005598                     _EUSART_Rx_ISR:
 13282                           	callstack 18
 13283  005598  0012               	return		;funcret
 13284  00559A                     __end_of_EUSART_Rx_ISR:
 13285                           	callstack 0
 13286                           
 13287                           	psect	rparam
 13288  0000                     
 13289                           	psect	temp
 13290  00007A                     btemp:
 13291                           	callstack 0
 13292  00007A                     	ds	1
 13293  0000                     int$flags	set	btemp
 13294  0000                     wtemp8	set	btemp+1
 13295  0000                     ttemp5	set	btemp+1
 13296  0000                     ttemp6	set	btemp+4
 13297  0000                     ttemp7	set	btemp+8
 13298                           
 13299                           	psect	idloc
 13300                           
 13301                           ;Config register IDLOC0 @ 0x200000
 13302                           ;	unspecified, using default values
 13303  200000                     	org	2097152
 13304  200000  FF                 	db	255
 13305                           
 13306                           ;Config register IDLOC1 @ 0x200001
 13307                           ;	unspecified, using default values
 13308  200001                     	org	2097153
 13309  200001  FF                 	db	255
 13310                           
 13311                           ;Config register IDLOC2 @ 0x200002
 13312                           ;	unspecified, using default values
 13313  200002                     	org	2097154
 13314  200002  FF                 	db	255
 13315                           
 13316                           ;Config register IDLOC3 @ 0x200003
 13317                           ;	unspecified, using default values
 13318  200003                     	org	2097155
 13319  200003  FF                 	db	255
 13320                           
 13321                           ;Config register IDLOC4 @ 0x200004
 13322                           ;	unspecified, using default values
 13323  200004                     	org	2097156
 13324  200004  FF                 	db	255
 13325                           
 13326                           ;Config register IDLOC5 @ 0x200005
 13327                           ;	unspecified, using default values
 13328  200005                     	org	2097157
 13329  200005  FF                 	db	255
 13330                           
 13331                           ;Config register IDLOC6 @ 0x200006
 13332                           ;	unspecified, using default values
 13333  200006                     	org	2097158
 13334  200006  FF                 	db	255
 13335                           
 13336                           ;Config register IDLOC7 @ 0x200007
 13337                           ;	unspecified, using default values
 13338  200007                     	org	2097159
 13339  200007  FF                 	db	255
 13340                           
 13341                           	psect	config
 13342                           
 13343                           ; Padding undefined space
 13344  300000                     	org	3145728
 13345  300000  FF                 	db	255
 13346                           
 13347                           ;Config register CONFIG1H @ 0x300001
 13348                           ;	Oscillator Selection bits
 13349                           ;	OSC = HS, HS oscillator
 13350                           ;	Fail-Safe Clock Monitor Enable bit
 13351                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13352                           ;	Internal/External Oscillator Switchover bit
 13353                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13354  300001                     	org	3145729
 13355  300001  02                 	db	2
 13356                           
 13357                           ;Config register CONFIG2L @ 0x300002
 13358                           ;	Power-up Timer Enable bit
 13359                           ;	PWRT = OFF, PWRT disabled
 13360                           ;	Brown-out Reset Enable bits
 13361                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 13362                           ;	Brown Out Reset Voltage bits
 13363                           ;	BORV = 1, 
 13364  300002                     	org	3145730
 13365  300002  09                 	db	9
 13366                           
 13367                           ;Config register CONFIG2H @ 0x300003
 13368                           ;	Watchdog Timer Enable bit
 13369                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 13370                           ;	Watchdog Timer Postscale Select bits
 13371                           ;	WDTPS = 32768, 1:32768
 13372  300003                     	org	3145731
 13373  300003  1E                 	db	30
 13374                           
 13375                           ; Padding undefined space
 13376  300004                     	org	3145732
 13377  300004  FF                 	db	255
 13378                           
 13379                           ;Config register CONFIG3H @ 0x300005
 13380                           ;	CCP2 MUX bit
 13381                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13382                           ;	PORTB A/D Enable bit
 13383                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 13384                           ;	Low-Power Timer1 Oscillator Enable bit
 13385                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13386                           ;	MCLR Pin Enable bit
 13387                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13388  300005                     	org	3145733
 13389  300005  81                 	db	129
 13390                           
 13391                           ;Config register CONFIG4L @ 0x300006
 13392                           ;	Stack Full/Underflow Reset Enable bit
 13393                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13394                           ;	Single-Supply ICSP Enable bit
 13395                           ;	LVP = OFF, Single-Supply ICSP disabled
 13396                           ;	Extended Instruction Set Enable bit
 13397                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13398                           ;	Background Debugger Enable bit
 13399                           ;	DEBUG = 0x1, unprogrammed default
 13400  300006                     	org	3145734
 13401  300006  81                 	db	129
 13402                           
 13403                           ; Padding undefined space
 13404  300007                     	org	3145735
 13405  300007  FF                 	db	255
 13406                           
 13407                           ;Config register CONFIG5L @ 0x300008
 13408                           ;	Code Protection bit
 13409                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13410                           ;	Code Protection bit
 13411                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13412                           ;	Code Protection bit
 13413                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13414                           ;	Code Protection bit
 13415                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13416  300008                     	org	3145736
 13417  300008  0F                 	db	15
 13418                           
 13419                           ;Config register CONFIG5H @ 0x300009
 13420                           ;	Boot Block Code Protection bit
 13421                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13422                           ;	Data EEPROM Code Protection bit
 13423                           ;	CPD = OFF, Data EEPROM not code-protected
 13424  300009                     	org	3145737
 13425  300009  C0                 	db	192
 13426                           
 13427                           ;Config register CONFIG6L @ 0x30000A
 13428                           ;	Write Protection bit
 13429                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13430                           ;	Write Protection bit
 13431                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13432                           ;	Write Protection bit
 13433                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13434                           ;	Write Protection bit
 13435                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13436  30000A                     	org	3145738
 13437  30000A  0F                 	db	15
 13438                           
 13439                           ;Config register CONFIG6H @ 0x30000B
 13440                           ;	Configuration Register Write Protection bit
 13441                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13442                           ;	Boot Block Write Protection bit
 13443                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13444                           ;	Data EEPROM Write Protection bit
 13445                           ;	WRTD = OFF, Data EEPROM not write-protected
 13446  30000B                     	org	3145739
 13447  30000B  E0                 	db	224
 13448                           
 13449                           ;Config register CONFIG7L @ 0x30000C
 13450                           ;	Table Read Protection bit
 13451                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13452                           ;	Table Read Protection bit
 13453                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13454                           ;	Table Read Protection bit
 13455                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13456                           ;	Table Read Protection bit
 13457                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13458  30000C                     	org	3145740
 13459  30000C  0F                 	db	15
 13460                           
 13461                           ;Config register CONFIG7H @ 0x30000D
 13462                           ;	Boot Block Table Read Protection bit
 13463                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13464  30000D                     	org	3145741
 13465  30000D  40                 	db	64
 13466                           tosu	equ	0xFFF
 13467                           tosh	equ	0xFFE
 13468                           tosl	equ	0xFFD
 13469                           stkptr	equ	0xFFC
 13470                           pclatu	equ	0xFFB
 13471                           pclath	equ	0xFFA
 13472                           pcl	equ	0xFF9
 13473                           tblptru	equ	0xFF8
 13474                           tblptrh	equ	0xFF7
 13475                           tblptrl	equ	0xFF6
 13476                           tablat	equ	0xFF5
 13477                           prodh	equ	0xFF4
 13478                           prodl	equ	0xFF3
 13479                           indf0	equ	0xFEF
 13480                           postinc0	equ	0xFEE
 13481                           postdec0	equ	0xFED
 13482                           preinc0	equ	0xFEC
 13483                           plusw0	equ	0xFEB
 13484                           fsr0h	equ	0xFEA
 13485                           fsr0l	equ	0xFE9
 13486                           wreg	equ	0xFE8
 13487                           indf1	equ	0xFE7
 13488                           postinc1	equ	0xFE6
 13489                           postdec1	equ	0xFE5
 13490                           preinc1	equ	0xFE4
 13491                           plusw1	equ	0xFE3
 13492                           fsr1h	equ	0xFE2
 13493                           fsr1l	equ	0xFE1
 13494                           bsr	equ	0xFE0
 13495                           indf2	equ	0xFDF
 13496                           postinc2	equ	0xFDE
 13497                           postdec2	equ	0xFDD
 13498                           preinc2	equ	0xFDC
 13499                           plusw2	equ	0xFDB
 13500                           fsr2h	equ	0xFDA
 13501                           fsr2l	equ	0xFD9
 13502                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    0
    Data        69
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    113     121
    BANK0           128     79     127
    BANK1           256      6     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 9
		 -> dis(BANK1[9]), convert_float32_to_string@temp_string(COMRAM[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4831$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4831$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 9
		 -> dis(BANK1[9]), 

    memset@s	PTR unsigned char  size(2) Largest target is 9
		 -> dis(BANK1[9]), 

    send_trig_pulse@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK1[4]), 

    Get_Distance@distance	PTR float  size(2) Largest target is 4
		 -> distance(BANK0[4]), 

    Ultra_Sonic_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK1[4]), 

    Ultra_Sonic_Init@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    DHT11_Read_Data@data	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(BANK0[1]), T_Integral(BANK0[1]), T_Decimal(COMRAM[1]), RH_Integral(BANK0[1]), 
		 -> RH_Decimal(COMRAM[1]), 

    Get_Temp_HUM@Checksum	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(BANK0[1]), 

    Get_Temp_HUM@T_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> T_Integral(BANK0[1]), 

    Get_Temp_HUM@T_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> T_Decimal(COMRAM[1]), 

    Get_Temp_HUM@RH_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Integral(BANK0[1]), 

    Get_Temp_HUM@RH_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Decimal(COMRAM[1]), 

    HAL_Timer0_Write_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK1[4]), 

    HAL_Timer0_Read_Val@result	PTR unsigned short  size(2) Largest target is 2
		 -> Get_Distance@timer_val(COMRAM[2]), 

    HAL_Timer0_Read_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK1[4]), 

    HAL_Timer0_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK1[4]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3221$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3221$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3174$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S527$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc1(BANK0[1]), pinc0(COMRAM[1]), ultrasonic(BANK0[2]), lcd1.lcd_data_pins(BANK0[4]), 
		 -> lcd1(BANK0[6]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), W2_W4_W6_Motor_Control.dc_motor(BANK0[2]), 
		 -> W2_W4_W6_Motor_Control(BANK0[2]), W1_W3_W5_Motor_Control.dc_motor(BANK0[2]), W1_W3_W5_Motor_Control(BANK0[2]), 

    GPIO_Pin_Read_Logic@logic	PTR enum E2967 size(2) Largest target is 1
		 -> Get_Distance@logic(COMRAM[1]), 

    GPIO_Pin_Read_Logic@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc1(BANK0[1]), pinc0(COMRAM[1]), ultrasonic(BANK0[2]), lcd1.lcd_data_pins(BANK0[4]), 
		 -> lcd1(BANK0[6]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), W2_W4_W6_Motor_Control.dc_motor(BANK0[2]), 
		 -> W2_W4_W6_Motor_Control(BANK0[2]), W1_W3_W5_Motor_Control.dc_motor(BANK0[2]), W1_W3_W5_Motor_Control(BANK0[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc1(BANK0[1]), pinc0(COMRAM[1]), ultrasonic(BANK0[2]), lcd1.lcd_data_pins(BANK0[4]), 
		 -> lcd1(BANK0[6]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), W2_W4_W6_Motor_Control.dc_motor(BANK0[2]), 
		 -> W2_W4_W6_Motor_Control(BANK0[2]), W1_W3_W5_Motor_Control.dc_motor(BANK0[2]), W1_W3_W5_Motor_Control(BANK0[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    convert_float32_to_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> dis(BANK1[9]), 

    sp__memset	PTR void  size(2) Largest target is 9
		 -> dis(BANK1[9]), 

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_21(CODE[15]), STR_20(CODE[14]), dis(BANK1[9]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[6]), STR_15(CODE[2]), 
		 -> STR_14(CODE[6]), STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[15]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_convert_float32_to_string
    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bit_send_char_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _application_intialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _Ultra_Sonic_Init->_GPIO_Pin_Initialize
    _HAL_Timer0_Init->_HAL_Timer0_Write_Val
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _Get_Temp_HUM->_DHT11_Read_Data
    _Get_Distance->___fldiv
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _convert_float32_to_string->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_float32_to_string

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  170715
                                             77 BANK0      2     2      0
               _GPIO_Pin_Write_Logic
                       _Get_Distance
                       _Get_Temp_HUM
                            ___awdiv
                            ___awmod
              _application_intialize
          _convert_float32_to_string
        _lcd_4bit_send_char_data_pos
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   33898
                                             27 COMRAM     6     0      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   32333
                                             27 COMRAM     5     0      5
                            ___awdiv (ARG)
                            ___awmod (ARG)
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   16143
                                             21 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   13922
                                             17 COMRAM     3     0      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _convert_float32_to_string                           17    11      6   51807
                                            103 COMRAM    10    10      0
                                              0 BANK1      6     0      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   49087
                                             56 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   47683
                                            101 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   47177
                                             75 COMRAM    26    20      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   35872
                                             63 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2    1105
                                             10 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             43 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     967
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5087
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4522
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4133
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     973
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1345
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2097
                                              4 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   33364
                _GPIO_Pin_Initialize
                   _Ultra_Sonic_Init
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   21397
                                             21 COMRAM     5     3      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   15458
                                             17 COMRAM     4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    4793
                                             14 COMRAM     3     0      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    4357
                                             14 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _Ultra_Sonic_Init                                     5     1      4    6479
                                             17 COMRAM     4     0      4
                _GPIO_Pin_Initialize
                    _HAL_Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _HAL_Timer0_Init                                      4     2      2     721
                                              9 COMRAM     3     1      2
               _HAL_Timer0_Write_Val
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    5488
                                             14 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     331
                                              4 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Get_Temp_HUM                                        11     1     10    1144
                                              8 COMRAM    10     0     10
               _DHT11_Check_Response
                    _DHT11_Read_Data
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Data                                      4     2      2     536
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Check_Response                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Distance                                        10     4      6   11872
                                             43 COMRAM     9     3      6
                _GPIO_Pin_Read_Logic
                _HAL_Timer0_Read_Val
               _HAL_Timer0_Write_Val
                            ___fldiv
                           ___xxtofl
                    _send_trig_pulse
 ---------------------------------------------------------------------------------
 (2) _send_trig_pulse                                      2     0      2    4099
                                             14 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    3979
                                              4 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1006
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    4703
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _HAL_Timer0_Write_Val                                 5     1      4     394
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _HAL_Timer0_Read_Val                                 11     7      4     364
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Read_Logic                                 10     6      4     596
                                              4 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerLow                                 3     3      0     176
                                              1 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _InterruptManagerHigh                                0     0      0       0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Rx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Write_Logic
   _Get_Distance
     _GPIO_Pin_Read_Logic
     _HAL_Timer0_Read_Val
     _HAL_Timer0_Write_Val
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _send_trig_pulse
       _GPIO_Pin_Write_Logic
   _Get_Temp_HUM
     _DHT11_Check_Response
     _DHT11_Read_Data
     _DHT11_Start
   ___awdiv
   ___awmod
   _application_intialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _Ultra_Sonic_Init
       _GPIO_Pin_Initialize
       _HAL_Timer0_Init
         _HAL_Timer0_Write_Val
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _convert_float32_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isupper
           _strncmp
           _tolower
   _lcd_4bit_send_char_data_pos
     ___awdiv (ARG)
     ___awmod (ARG)
     _lcd_4bit_send_char_data (ARG)
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
       _lcd_send_4bits
     _lcd_4bits_set_courser (ARG)
       _lcd_4bit_send_command
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
     _lcd_4bits_set_courser

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      C0       7       75.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4F      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     71      79       1       96.0%
BITBIGSFRhhhhll     18      0       0      38        0.0%
BITBIGSFRhhhhh       D      0       0      37        0.0%
BITBIGSFRllhhll      8      0       0      45        0.0%
BITBIGSFRllhhll      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRhhhhll      3      0       0      39        0.0%
BITBIGSFRhhhl        3      0       0      40        0.0%
BITBIGSFRllhhll      1      0       0      43        0.0%
BITBIGSFRllhhlh      1      0       0      42        0.0%
BITBIGSFRllhhh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8      12        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 08:33:53 2023

                             _RH_Integral 00F1                              ___fldiv@aexp 002B  
                            ___fldiv@bexp 002A                              ___fldiv@sign 0023  
                         ?_lcd_send_4bits 000F          lcd_4bit_send_command@ERRORSTATUS 0015  
                             _SSPSTATbits 000FC7                              ___awdiv@sign 000A  
                                      bsr 000FE0                     ??_InterruptManagerLow 0002  
                                     l120 3F40                                       l130 507E  
                                     l125 4FB8                                       l135 535E  
                                     l242 452E                                       l155 4D1C  
                                     l252 4F4E                                       l247 5212  
                                     l281 49C0                                       l851 3D00  
                                     l870 3E28                                       l877 4C74  
                                     l887 51CA                                       _PR2 000FCB  
    __end_of_lcd_4bits_send_enable_signal 5214              _lcd_4bits_send_enable_signal 51CC  
                                     _abs 52E4                                       _dis 0177  
                  ??_InterruptManagerHigh 0001                                       _pad 479A  
               _RB5_InterruptHandler_HIGH 00DD                           __end_of_ADC_ISR 5594  
                            ___awmod@sign 000A          lcd_4bit_send_char_data_pos@colum 001F  
GPIO_Pin_Direction_Initialize@ERRORSTATUS 000D                                       prod 000FF3  
                                     wreg 000FE8                                _TXSTA1bits 000FAC  
                            ___flmul@aexp 0012                              ___flmul@bexp 0017  
                            ___flmul@sign 0011                              ___flmul@temp 001C  
                            ___flmul@prod 0018                    ??_GPIO_Pin_Write_Logic 0008  
                  ??_HAL_Timer0_Write_Val 0009                           __end_of_RB4_ISR 557C  
                         __end_of_RB5_ISR 5562                           __end_of_RB6_ISR 5548  
                         __end_of_RB7_ISR 552E                              ___fltol@exp1 000E  
                                    ?_abs 0017                                      l2023 4BCA  
                                    l2008 4A70                                      l2034 414A  
                                    l2029 4104                                      l2301 214E  
                                    l2061 4046                                      l2038 5408  
                                    l1520 4B20                                      l1504 444A  
                                    l1524 54F2                                      l1525 54F4  
                                    l2309 1F98                                      l2422 375E  
                                    l2502 315A                                      l2318 2068  
                                    l2334 529E                                      l2351 2EDE  
                                    l2319 2056                                      l2360 2FC6  
                                    l2504 3162                                      l2433 36F6  
                                    l1641 5476                                      l2346 30BA  
                                    l2426 369A                                      l1650 54A0  
                                    l1722 5398                                      l2522 3398  
                                    l2419 3602                                      l1635 4DC0  
                                    l2348 2F1A                                      l1644 5484  
                                    l1660 4E2E                                      l2292 1E7E  
                                    l2452 512E                                      l2357 2F60  
                                    l2293 1E6C                                      l1750 416E  
                                    l1638 5512                                      l2382 2578  
                                    l2294 1E32                                      l2630 5014  
                                    l2359 2FD8                                      l1647 5492  
                                    l1663 4E4E                                      l1655 4DD2  
                                    l2439 3A5C                                      l2703 5474  
                                    l2631 501C                                      l2720 5258  
                                    l2624 28C4                                      l1761 54CA  
                                    l1497 4364                                      l2385 240A  
                                    l2641 434C                                      l1754 41BC  
                                    l2378 2214                                      l2554 143C  
                                    l2538 1C8E                                      l2618 297E  
                                    l1747 5180                                      l2491 47DE  
                                    l2395 253A                                      l2387 2482  
                                    l2707 460A                                      l2388 2470  
                                    l1757 41EA                                      l2717 5250  
                                    l1758 424E                                      l2646 531A  
                                    l2494 4820                                      l2582 187C  
                                    l2655 35AA                                      l2680 46D4  
                                    l2496 485A                                      l2649 5322  
                                    l2665 53D0                                      l2658 34EE  
                                    l1891 3BC0                                      l2691 5590  
                                    l1878 38E6                                      ?_pad 0015  
                                    l2688 52E2                                      l2697 50DC  
                                    l1995 4798                                      l8131 4EE8  
                                    l8141 51DE                                      l8133 4EEC  
                                    l8151 3BC2                                      l8143 51E2  
                                    l8127 4ED6                                      l8161 3C60  
                                    l8153 3BC6                                      l8321 434E  
                                    l8145 51F6                                      l8137 51CC  
                                    l8129 4ED6                                      l8401 3ED0  
                                    l9131 4D42                                      l8155 3BD8  
                                    l8331 43B2                                      l8323 4360  
                                    l8147 51FE                                      l8139 51CC  
                                    l8411 3F20                                      l8403 3EE0  
                                    l8181 54EA                                      l9141 4D80  
                                    l9133 4D54                                      l9125 4D1E  
                                    l8165 3CBC                                      l8157 3BF6  
                                    l8341 4400                                      l8333 43CC  
                                    l8325 4366                                      l8413 3F30  
                                    l8405 3EF0                                      l8421 5030  
                                    l8183 54EE                                      l8175 54CC  
                                    l9151 4DB4                                      l9143 4D84  
                                    l9135 4D66                                      l9127 4D1E  
                                    l8159 3BFE                                      l8167 3CFE  
                                    l8271 5194                                      l8343 4416  
                                    l8335 43CE                                      l8327 4396  
                                    l8319 434E                                      l8407 3F00  
                                    l8423 5034                                      l8431 4924  
                                    l8361 4BDE                                      l8177 54D0  
                                    l7721 3D36                                      l9145 4D90  
                                    l9129 4D30                                      l9137 4D78  
                                    l8273 519C                                      l8345 4436  
                                    l8337 43E8                                      l8329 43AC  
                                    l8281 4F50                                      l8409 3F10  
                                    l8417 501E                                      l8441 4970  
                                    l8433 4928                                      l8363 4BF0  
                                    l8179 54E2                                      l7723 3D3E  
                                    l7731 3E26                                      l7715 3D02  
                                    l9147 4D9C                                      l9139 4D7C  
                                    l8275 51C8                                      l8267 5182  
                                    l8339 43FE                                      l8283 4F62  
                                    l8371 3E2A                                      l9155 5360  
                                    l8419 501E                                      l8435 492E  
                                    l8427 4912                                      l8365 4C0E  
                                    l8357 4BCC                                      l7725 3DA0  
                                    l7717 3D06                                      l8701 4E3C  
                                    l9149 4DA8                                      l8269 5182  
                                    l8285 4F6A                                      l8381 3E4C  
                                    l8373 3E2A                                      l8437 4944  
                                    l8445 4986                                      l8429 4912  
                                    l8367 4C12                                      l8359 4BCC  
                                    l7719 3D18                                      l8703 4E3E  
                                    l8711 5154                                      l8287 4FB6  
                                    l8279 4F50                                      l8391 3E7E  
                                    l8375 3E3C                                      l8439 495A  
                                    l7729 3DFC                                      l8721 54B2  
                                    l8713 5158                                      l8705 5130  
                                    l8393 3E8E                                      l8377 3E40  
               _convert_float32_to_string 444C                                      l8651 4A72  
                                    l8731 3612                                      l8723 54BA  
                                    l8715 5174                                      l8707 5130  
                                    l8395 3E9C                                      l8387 3E60  
                                    l8379 3E40                                      l8811 5324  
                                    l8661 4ABC                                      l8653 4A7A  
                                    l8741 3650                                      l8733 3628  
                                    l8725 35AE                                      l8709 5142  
                                    l8397 3EAC                                      l8389 3E7C  
                                    l8813 5324                                      l8821 4C76  
                                    l8663 4AC4                                      l8655 4A8C  
                                    l8751 36D8                                      l8743 3682  
                                    l8727 35BE                                      l8719 54A2  
                                    l8399 3ECA                                      l8815 5336  
                                    l8831 4CB6                                      l8823 4C76  
                                    l8665 4AEC                                      l8657 4A9E  
                                    l8761 372E                                      l8753 36E6  
                                    l8745 3684                                      l8737 363C  
                                    l8729 35CC                                      l8681 5510  
                                    l8817 533A                                      l8833 4CE6  
                                    l8825 4C88                                      l8667 4B06  
                                    l8659 4AA2                                      l8763 373E  
                                    l8755 3704                                      l8747 3690  
                                    l8739 3644                                      l8683 5476  
                                    l8675 54F6                                      l8835 4CEA  
                                    l8827 4C9A                                      l8669 4B0A  
                                    l8765 374C                                      l8757 3706  
                                    l8749 36CC                                      l8693 4DE0  
                                    l8685 4DC2                                      l8677 54FA  
                                    l8829 4C9E                                      l8767 374E  
                                    l8759 370A                                      l8695 4DE8  
                                    l8687 4DCE                                      l8679 5508  
                                    l8697 4DF6                                      l8699 4E14  
                                    STR_1 1014                                      STR_2 1043  
                                    STR_3 1034                                      STR_4 1001  
                                    STR_5 1075                                      STR_9 1072  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u9100 4A9E  
                                    u9101 4A9A                                      u9110 4ABC  
                                    u9111 4AB8                                      u9120 4B06  
                                    u9200 5142                                      u9121 4B02  
                                    u9201 513E                                      u9130 5484  
                                    u9210 5154                                      u9131 5480  
                                    u9211 5150                                      u9300 373E  
                                    u9220 35BE                                      u9140 5492  
                                    u9301 373A                                      u9221 35BA  
                                    u9141 548E                                      u9310 374C  
                                    u9230 35CC                                      u9150 54A0  
                                    u9311 3748                                      u9231 35C8  
                                    u9151 549C                                      u8600 54E2  
                                    u9240 3628                                      u7800 3D18  
                                    u9160 4DE0                                      u8520 4EE8  
                                    u9400 4D0C                                      u8601 54DE  
                                    u9241 3624                                      u7801 3D14  
                                    u9161 4DDC                                      u8521 4EE4  
                                    u9090 4A8C                                      u9250 367E  
                                    u7810 3D36                                      u9170 4DF6  
                                    u8530 51DE                                      u9410 4D1C  
                                    u9091 4A88                                      u9251 367A  
                                    u7811 3D32                                      u9171 4DF2  
                                    u8531 51DA                                      u9411 4D18  
                                    u9260 36C8                                      u9180 4E3C  
                                    u8540 3BD8                                      u8700 5194  
                                    u9261 36C4                                      u9181 4E38  
                                    u8541 3BD4                                      u8701 5190  
                                    u9270 36E6                                      u9190 4E4E  
                                    u8550 3BF6                                      u8710 4F62  
                                    u9271 36E2                                      u9191 4E4A  
                                    u8551 3BF2                                      u8711 4F5E  
                                    u9407 4D02                                      u9280 36F6  
                                    u7824 3D5A                                      u8800 43E8  
                                    u9360 5336                                      u9281 36F2  
                                    u7825 3D56                                      u8801 43E4  
                                    u9361 5332                                      u9290 3704  
                                    u7834 3DBC                                      u9370 4C88  
                                    u9291 3700                                      u7835 3DB8  
                                    u9371 4C84                                      u8580 3CD4  
                                    u8564 3C1A                                      u8900 5030  
                                    u9380 4C9A                                      u8581 3CCE  
                                    u8565 3C16                                      u8901 502C  
                                    u9381 4C96                                      u8590 3CD6  
                                    u8574 3C7C                                      u8910 4924  
                                    u9390 4CE0                                      u8575 3C78  
                                    u8815 43FC                                      u8911 4920  
                                    u8840 4BDE                                      u9800 4D42  
                                    u8760 4360                                      u8841 4BDA  
                                    u9801 4D3E                                      u8825 4414  
                                    u8817 43FE                                      u8761 435C  
                                    u8850 4BF0                                      u9810 4D54  
                                    u8851 4BEC                                      u9811 4D50  
                                    u8827 4416                                      u8860 4C0E  
                                    u9820 4D66                                      u8780 4396  
                                    u8861 4C0A                                      u9821 4D62  
                                    u8781 4392                                      u9397 4CD6  
                                    u9830 4D78                                      u8790 43CC  
                                    u9831 4D74                                      u8791 43C8  
                                    u8775 437A                                      u8880 3E3C  
                                    u8777 437C                                      u8881 3E38  
                                    u8874 4C60                                      u8890 3E8E  
                                    u8875 4C5C                                      u8891 3E8A  
                                    u9790 4D30                                      _RX9D 007D58  
                                    u9791 4D2C                                      _TMR2 000FCC  
                 ??_application_intialize 001B                  _RB4_InterruptHandler_LOW 00DF  
                                    abs@a 0017                                      _lcd1 00F2  
                                    _dbuf 0127                                      _main 2980  
                                    _dtoa 30BC                                      _prec 0072  
                                    _nout 00CF                  _RB7_InterruptHandler_LOW 00D3  
                                    pad@i 001C                                      pad@p 0019  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001E                                      fsr2l 000FD9  
                                    btemp 007A                             ___fpclassifyf 4250  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0286                         ??_HAL_Timer0_Init 000C  
                         ___fldiv@new_exp 0024                      __end_of_Get_Distance 4250  
                            ___param_bank 000000                     _lcd_4bit_send_command 4F50  
                                   ??_abs 0019                                     ??_pad 001B  
                        __end_of_INT1_ISR 558E                                     l10111 461E  
                                   l10113 4630                                     l11001 32EC  
                                   l10201 1DD0                                     l10115 463A  
                                   l11011 333A                                     l11003 3306  
                                   l10211 1E40                                     l10203 1DD4  
                                   l10131 1CBC                                     l10123 1C90  
                                   l10117 4658                                     l10109 460C  
                                   l11013 334C                                     l11005 3314  
                                   l10301 20CE                                     l10221 1E6A  
                                   l10213 1E4C                                     l10205 1DFE  
                                   l10141 1CF6                                     l10133 1CCC  
                                   l10125 1C9C                                     l11101 1368  
                                   l10119 468E                                     l11015 3358  
                                   l11007 3326                                     l10311 2120  
                                   l10303 20DE                                     l10231 1EC0  
                                   l10223 1E8C                                     l10215 1E50  
                                   l10207 1E1A                                     l10151 1D24  
                                   l10143 1CFC                                     l10135 1CDC  
                                   l10127 1CAA                                     l11111 13EA  
                                   l11103 139C                                     l11031 10B0  
                                   l11023 1080                                     l10401 3AA2  
                                   l11017 3360                                     l11009 3334  
                                   l10321 213E                                     l10313 2126  
                                   l10305 20EE                                     l10241 1EFA  
                                   l10233 1ECE                                     l10225 1E9C  
                                   l10217 1E5E                                     l10209 1E2A  
                                   l10161 1D58                                     l10153 1D26  
                                   l10145 1D0E                                     l10137 1CDE  
                                   l10129 1CAC                                     l11201 1868  
                                   l11113 13FC                                     l11121 1448  
                                   l11105 13A4                                     l11041 1106  
                                   l11033 10D4                                     l11025 108A  
                                   l10411 3B0A                                     l10403 3AC2  
                                   l10331 52C2                                     l11019 3370  
                                   l10315 2128                                     l10307 210E  
                                   l10251 1F66                                     l10243 1EFC  
                                   l10235 1EDC                                     l10219 1E60  
                                   l10171 1D94                                     l10155 1D36  
                                   l10163 1D60                                     l10147 1D10  
                                   l10139 1CE6                                     l11211 191E  
                                   l11203 1874                                     l11131 1488  
                                   l11115 140E                                     l11107 13D6  
                                   l11051 1134                                     l11043 1118  
                                   l11035 10DE                                     l11027 109A  
                                   l10501 2EDC                                     l10421 3B80  
                                   l10413 3B38                                     l10405 3AE0  
                                   l10325 52A0                                     l10333 5440  
                                   l10317 212E                                     l10309 2112  
                                   l10261 1FBE                                     l10253 1F68  
                                   l10245 1F06                                     l10237 1EE8  
                                   l10229 1EB0                                     l10181 1DA8  
                                   l10173 1D98                                     l10165 1D70  
                                   l10157 1D46                                     l10149 1D16  
                                   l11301 1BE8                                     l11221 1968  
                                   l11213 1930                                     l11205 1898  
                                   l11141 14E4                                     l11133 14BE  
                                   l11117 1416                                     l11109 13E6  
                                   l11061 118C                                     l11045 1124  
                                   l11053 113A                                     l11037 10E6  
                                   l11029 10A8                                     l10511 2F2A  
                                   l10503 2EE8                                     l10431 2D3C  
                                   l10351 3772                                     l10423 3BA0  
                                   l10415 3B58                                     l10407 3AE8  
                                   l10327 52AC                                     l10335 544C  
                                   l10319 213C                                     l10271 1FEC  
                                   l10255 1F78                                     l10239 1EEC  
                                   l10247 1F0C                                     l10191 1DBC  
                                   l10183 1DAC                                     l10175 1D9C  
                                   l10167 1D82                                     l10159 1D56  
                                   l10343 539A                                     l11303 1BF4  
                                   l11231 199E                                     l11223 1978  
                                   l11215 193E                                     l11207 18FC  
                                   l11151 1528                                     l11143 14F6  
                                   l11135 14C6                                     l11127 145A  
                                   l11119 1430                                     l11063 11AA  
                                   l11071 11F6                                     l11047 112C  
                                   l11039 10F8                                     l10513 2F40  
                                   l10521 2F70                                     l10505 2F06  
                                   l10441 2D70                                     l10433 2D3E  
                                   l10361 37C8                                     l10353 3792  
                                   l10417 3B6A                                     l10409 3AFC  
                                   l10329 52BE                                     l10337 5450  
                                   l10601 2234                                     l10273 1FFA  
                                   l10265 1FD2                                     l10281 2018  
                                   l10249 1F32                                     l10257 1F88  
                                   l10193 1DC0                                     l10185 1DB0  
                                   l10177 1DA0                                     l10169 1D90  
                                   l11321 1C68                                     l11313 1C18  
                                   l11305 1BFC                                     l11241 19D2  
                                   l11233 19A2                                     l11225 197C  
                                   l11209 190A                                     l11217 1946  
                                   l11161 1572                                     l11153 1540  
                                   l11145 1504                                     l11129 146C  
                                   l11137 14CA                                     l11081 1266  
                                   l11065 11C4                                     l11049 1130  
                                   l10523 2F7E                                     l10515 2F46  
                                   l10507 2F08                                     l10451 2DA2  
                                   l10435 2D4E                                     l10443 2D78  
                                   l10427 2D22                                     l10371 381C  
                                   l10363 37D4                                     l10355 3796  
                                   l10347 3760                                     l10419 3B70  
                                   l10339 5468                                     l10611 2274  
                                   l10275 2002                                     l10267 1FDC  
                                   l10259 1FAE                                     l10283 2026  
                                   l10195 1DC4                                     l10187 1DB4  
                                   l10179 1DA4                                     l11323 1C6E  
                                   l11315 1C44                                     l11307 1C0C  
                                   l11251 1A70                                     l11243 19D6  
                                   l11235 19A8                                     l11227 1982  
                                   l11219 195A                                     l11163 1586  
                                   l11171 167C                                     l11155 1552  
                                   l11147 1508                                     l11139 14D2  
                                   l11091 129E                                     l11067 11CE  
                                   l11059 1160                                     l11331 455A  
                                   l11411 2920                                     l10533 2FE8  
                                   l10541 3030                                     l10525 2F82  
                                   l10517 2F50                                     l10509 2F18  
                                   l10461 2DD6                                     l10453 2DA4  
                                   l10445 2D88                                     l10437 2D5E  
                                   l10429 2D2E                                     l10381 3890  
                                   l10373 382E                                     l10365 37F2  
                                   l10357 37A4                                     l10349 3764  
                                   l10701 46D6                                     l10621 22BE  
                                   l10613 2280                                     l10605 2248  
                                   l10293 2078                                     l10285 202A  
                                   l10277 2006                                     l10269 1FEA  
                                   l10197 1DC8                                     l10189 1DB8  
                                   l11317 1C50                                     l11309 1C12  
                                   l11261 1ACE                                     l11229 198E  
                                   l11237 19AE                                     l11245 19DC  
                                   l11253 1A74                                     l11181 1748  
                                   l11173 169A                                     l11165 15EA  
                                   l11149 151A                                     l11157 155A  
                                   l11077 121C                                     l11341 45AA  
                                   l11405 28D8                                     l11421 2946  
                                   l11501 44EC                                     l10551 309A  
                                   l10543 304A                                     l10535 2FF4  
                                   l10527 2F90                                     l10519 2F5E  
                                   l10471 2E1C                                     l10455 2DB4  
                                   l10463 2DDE                                     l10447 2D8E  
                                   l10439 2D6E                                     l10375 385C  
                                   l10367 37FA                                     l10383 3896  
                                   l10359 37C4                                     l10391 3A5E  
                                   l10711 4702                                     l10703 46DA  
                                   l10631 2310                                     l10623 22CA  
                                   l10615 2298                                     l10607 2254  
                                   l10295 2084                                     l10287 2038  
                                   l10279 2016                                     l10199 1DCC  
                                   l11319 1C58                                     l11271 1B0C  
                                   l11263 1ADE                                     l11255 1A92  
                                   l11247 1A34                                     l11239 19C0  
                                   l11191 17F8                                     l11183 1758  
                                   l11175 16CE                                     l11167 1642  
                                   l11159 1562                                     l11095 12D4  
                                   l11079 1248                                     l11343 45BC  
                                   l11335 4566                                     l11423 296C  
                                   l11407 28FE                                     l11415 292C  
                                   l11351 25A0                                     l11431 4FC2  
                                   l11503 4508                                     l10553 30A8  
                                   l10545 3060                                     l10537 3002  
                                   l10529 2FBE                                     l10481 2E44  
                                   l10473 2E20                                     l10465 2DEE  
                                   l10457 2DC4                                     l10449 2D94  
                                   l11441 3906                                     l10385 38A6  
                                   l10377 387C                                     l10369 380E  
                                   l10393 3A62                                     l10721 4730  
                                   l10713 470A                                     l10705 46E8  
                                   l10801 4086                                     l10641 238E  
                                   l10633 2320                                     l10625 22DA  
                                   l10617 22A4                                     l10609 225E  
                                   l10297 2092                                     l10289 204E  
                                   l11281 1B42                                     l11273 1B1C  
                                   l11265 1AE2                                     l11257 1AAE  
                                   l11249 1A68                                     l11193 182C  
                                   l11185 1768                                     l11177 1700  
                                   l11169 1676                                     l11097 1308  
                                   l11089 1284                                     l11345 45E6  
                                   l11337 4574                                     l11329 4530  
                                   l11417 293A                                     l11409 290C  
                                   l11361 25F6                                     l11353 25AE  
                                   l11433 4FD0                                     l10555 30AE  
                                   l10547 307A                                     l10539 302C  
                                   l10491 2E92                                     l10467 2E04  
                                   l10459 2DD4                                     l11531 416A  
                                   l11443 3912                                     l10387 38C6  
                                   l10379 387E                                     l10395 3A70  
                                   l10731 476A                                     l10723 4738  
                                   l10715 470E                                     l10707 46F0  
                                   l10811 40F2                                     l10803 40B4  
                                   l10651 2408                                     l10643 23C4  
                                   l10635 233C                                     l10627 22E6  
                                   l10619 22B0                                     l10571 216C  
                                   l10299 20CC                                     l11291 1B9E  
                                   l11283 1B4E                                     l11275 1B24  
                                   l11267 1AF2                                     l11259 1AC0  
                                   l11195 1840                                     l11187 179C  
                                   l11179 1716                                     l11099 130E  
                                   l11339 458C                                     l11371 26B6  
                                   l11363 2628                                     l11355 25C0  
                                   l11435 4FF6                                     l10557 30B0  
                                   l10549 3096                                     l10493 2EA2  
                                   l10485 2E58                                     l10469 2E14  
                                   l10477 2E34                                     l11541 41C2  
                                   l11533 4170                                     l11461 3A34  
                                   l11453 39BA                                     l11437 38E8  
                                   l10397 3A90                                     l10741 4790  
                                   l10733 476C                                     l10725 4746  
                                   l10717 4716                                     l10709 46F4  
                                   l10813 4142                                     l10805 40C4  
                                   l10661 2468                                     l10653 241A  
                                   l10645 23D2                                     l10637 2348  
                                   l10629 22F6                                     l10581 21B2  
                                   l10573 217C                                     l10565 2150  
                                   l10821 53E8                                     l10901 42AE  
                                   l11285 1B54                                     l11293 1BA4  
                                   l11277 1B32                                     l11269 1B04  
                                   l11189 17F2                                     l11197 1844  
                                   l11381 2760                                     l11373 26FE  
                                   l11365 2638                                     l11357 25C4  
                                   l11349 257A                                     l11429 4FBA  
                                   l10495 2EAA                                     l10487 2E72  
                                   l10479 2E44                                     l11543 41DA  
                                   l11535 4184                                     l11527 414C  
                                   l11463 3A40                                     l11455 39E6  
                                   l11447 3948                                     l10399 3A94  
                                   l10735 4772                                     l10727 474C  
                                   l10719 4728                                     l10751 49DC  
                                   l10815 4148                                     l10807 40D2  
                                   l10671 24D6                                     l10655 2428  
                                   l10647 23F0                                     l10639 2364  
                                   l10591 21DE                                     l10583 21B8  
                                   l10575 218C                                     l10567 215C  
                                   l10823 53F8                                     l10911 4300  
                                   l10903 42D6                                     l11295 1BB6  
                                   l11287 1B7A                                     l11279 1B3A  
                                   l11199 1854                                     l11391 27F8  
                                   l11383 276E                                     l11367 266A  
                                   l11359 25E6                                     l11471 50F0  
                                   l10497 2EBA                                     l10489 2E82  
                                   l11545 41EC                                     l11537 4194  
                                   l11529 4158                                     l11465 3A46  
                                   l11449 39A0                                     l10729 4762  
                                   l10737 4778                                     l10761 4A10  
                                   l10753 49E0                                     l10745 49C2  
                                   l10809 40E4                                     l10681 253E  
                                   l10665 2492                                     l10673 24DA  
                                   l10657 242C                                     l10649 23FA  
                                   l10593 21EE                                     l10585 21BE  
                                   l10577 219C                                     l10569 216A  
                                   l10841 3FAC                                     l10833 3F6C  
                                   l10905 42E2                                     l10921 5090  
                                   l11297 1BD0                                     l11289 1B96  
                                   l11385 279E                                     l11377 2736  
                                   l11369 2690                                     l11473 50F8  
                                   l11481 444C                                     l10499 2ECE  
                                   l11539 41AC                                     l11467 3A4A  
                                   l11459 3A00                                     l10739 4788  
                                   l10771 4A4A                                     l10763 4A18  
                                   l10755 49EE                                     l10747 49C6  
                                   l10691 2568                                     l10683 254E  
                                   l10675 24F4                                     l10667 249E  
                                   l10659 243A                                     l10595 21FE  
                                   l10587 21CC                                     l10579 21A2  
                                   l10819 53D2                                     l10851 3FDC  
                                   l10843 3FBA                                     l10835 3F96  
                                   l10827 3F42                                     l10915 4344  
                                   l10923 5214                                     l11299 1BD6  
                                   l11395 2820                                     l11379 2748  
                                   l11475 5100                                     l11491 4474  
                                   l11483 444C                                     l10765 4A26  
                                   l10773 4A50                                     l10757 49F6  
                                   l10749 49D4                                     l10781 4B22  
                                   l10685 255C                                     l10677 2508  
                                   l10669 24AC                                     l10597 2204  
                                   l10589 21CE                                     l10861 4006  
                                   l10853 3FE6                                     l10837 3F98  
                                   l10829 3F58                                     l10909 42EE  
                                   l10941 3432                                     l10933 339A  
                                   l11397 2860                                     l11389 27CA  
                                   l11477 511C                                     l11469 50DE  
                                   l11493 4490                                     l11485 4458  
                                   l11821 29A0                                     l10871 479A  
                                   l10775 4A60                                     l10767 4A3C  
                                   l10759 4A08                                     l10791 4BC2  
                                   l10783 4B50                                     l10687 255E  
                                   l10679 2522                                     l10599 2224  
                                   l10695 525A                                     l10863 4016  
                                   l10839 3FA8                                     l10951 354E  
                                   l10935 33BA                                     l10919 5080  
                                   l10927 5214                                     l11399 2894  
                                   l11495 44A2                                     l11487 445C  
                                   l11831 2A12                                     l11823 29BC  
                                   l10881 47EA                                     l10873 47A8  
                                   l10961 30BC                                     l10777 4A68  
                                   l10769 4A44                                     l10793 4BC8  
                                   l10785 4B60                                     l10689 2564  
                                   l10697 526A                                     l10865 4026  
                                   l10849 3FD2                                     l10953 3562  
                                   l10945 34A2                                     l10937 3410  
                                   l10929 5242                                     l11497 44CC  
                                   l11489 4470                                     l11841 2ABA  
                                   l11833 2A2C                                     l11825 29D8  
                                   l11817 2980                                     l10883 47FE  
                                   l10875 47BC                                     l10971 3134  
                                   l10963 30DC                                     l10787 4B8E  
                                   l10867 4036                                     l10859 3FFA  
                                   l10955 358A                                     l10947 34DE  
                                   l10939 3424                                     l11499 44EA  
                                   l11851 2B76                                     l11843 2AE6  
                                   l11835 2A46                                     l11827 29E8  
                                   l11819 2984                                     l11941 3E10  
                                   l10893 52E4                                     l10885 4802  
                                   l10877 47CA                                     l10981 3190  
                                   l10973 314E                                     l10965 3104  
                                   l10789 4B9E                                     l10797 4048  
                                   l10957 359A                                     l10949 3512  
                                   l11861 2C3C                                     l11853 2BA2  
                                   l11845 2B02                                     l11837 2A72  
                                   l11829 2A02                                     l10895 52FE  
                                   l10887 482E                                     l10879 47D6  
                                   l10991 3230                                     l10983 3198  
                                   l10975 316A                                     l10967 3124  
                                   l10799 4076                                     l11871 2CC8  
                                   l11863 2C58                                     l11855 2BBE  
                                   l11847 2B2E                                     l11839 2A8E  
                                   l10889 4842                                     l10993 3236  
                                   l10985 31A2                                     l10977 317C  
                                   l10969 3132                                     l10897 4250  
                                   l11937 499A                                     l11873 2CE4  
                                   l11865 2C72                                     l11857 2BEA  
                                   l11849 2B4A                                     l11939 3CE8  
                                   l10987 31A8                                     l10995 329A  
                                   l10979 318A                                     l10899 4270  
                                   l11875 2CFE                                     l11867 2C8E  
                                   l11859 2C1C                                     l10997 32B4  
                                   l10989 322A                                     l11869 2CAC  
                                   l10999 32D2                             ___fltol@sign1 000D  
                         __end_of___aodiv 38E8                           __end_of___fladd 2150  
                                   ?_main 0001                                     ?_dtoa 0020  
                         __end_of___aomod 3BC2                           __end_of___fldiv 30BC  
                         __end_of___awdiv 479A                           __end_of___flneg 540A  
                                   STR_10 1072                                     STR_11 1025  
                                   STR_20 1026                                     STR_12 1025  
                                   STR_21 1025                                     STR_13 106B  
                                   STR_30 106F                                     STR_22 105B  
                                   STR_14 104F                                     STR_15 1078  
                                   STR_23 1063                                     STR_32 106F  
                                   STR_16 1055                                     STR_17 1078  
                                   STR_18 107C                                     STR_26 105F  
                                   STR_19 107A                                     STR_27 1067  
                         __end_of___awmod 4A72                           __end_of___flmul 257A  
                         __end_of___flsub 52A0                           __end_of___fltol 4048  
                                   u11000 461E                                     u11001 461A  
                                   u11010 4630                                     u11011 462C  
                                   u11020 4658                                     u11100 1D46  
                                   u11021 4654                                     u11101 1D42  
                                   u11030 468E                                     u11110 1D82  
                                   u11031 468A                                     u11111 1D7E  
                                   u12000 2522                                     u11200 1E9C  
                                   u11120 1D90                                     u11040 1CAA  
                                   u12001 251E                                     u11201 1E98  
                                   u11121 1D8C                                     u11041 1CA6  
                                   u12010 255C                                     u11210 1ECE  
                                   u11130 1DFE                                     u11050 1CBC  
                                   u12011 2558                                     u11211 1ECA  
                                   u11131 1DFA                                     u11051 1CB8  
                                   u12020 46E8                                     u12100 4A08  
                                   u11300 2016                                     u11220 1EDC  
                                   u11140 1E16                                     u11060 1CCC  
                                   u12021 46E4                                     u12101 4A04  
                                   u11301 2012                                     u11221 1ED8  
                                   u11141 1E10                                     u11061 1CC8  
                                   u12030 4702                                     u12110 4A26  
                                   u11310 2026                                     u11230 1EFA  
                                   u11150 1E18                                     u11070 1D0E  
                                   u12031 46FE                                     u12111 4A22  
                                   u11311 2022                                     u11231 1EF6  
                                   u11071 1D0A                                     u12040 4728  
                                   u12120 4A3C                                     u12200 40F2  
                                   u11400 210E                                     u11320 2038  
                                   u11240 1F32                                     u11160 1E40  
                                   u11080 1D24                                     u13000 1868  
                                   u12041 4724                                     u12121 4A38  
                                   u12201 40EE                                     u11401 210A  
                                   u11321 2034                                     u11241 1F2E  
                                   u11161 1E3C                                     u11081 1D20  
                                   u13001 1864                                     u12050 4746  
                                   u12130 4A60                                     u12210 4142  
                                   u11410 2120                                     u11330 204E  
                                   u11250 1F78                                     u11170 1E5E  
                                   u11090 1D36                                     u13010 190A  
                                   u12051 4742                                     u12131 4A5C  
                                   u12211 413E                                     u11411 211C  
                                   u11331 204A                                     u11251 1F74  
                                   u11171 1E5A                                     u11091 1D32  
                                   u13011 1906                                     u11500 37F2  
                                   u12300 47A8                                     u12060 4762  
                                   u12140 4B50                                     u12220 53E8  
                                   u11420 213C                                     u11340 2064  
                                   u11260 1FAE                                     u11180 1E7E  
                                   u13100 1AC0                                     u13020 191E  
                         ___awdiv@divisor 0007                                     u11501 37EE  
                                   u12301 47A4                                     u12061 475E  
                                   u12141 4B4C                                     u12221 53E4  
                                   u11421 2138                                     u11341 2060  
                                   u11261 1FAA                                     u11181 1E7A  
                                   u13101 1ABC                                     u13021 191A  
                                   u11510 381C                                     u11430 52E2  
                                   u12310 47CA                                     u12070 4788  
                                   u12150 4B8E                                     u11350 2078  
                                   u11270 1FBE                                     u11190 1E8C  
                                   u12230 3F58                                     u13110 1ACE  
                                   u13030 1930                                     u11511 3818  
                                   u11431 52DE                                     u12311 47C6  
                                   u12071 4784                                     u12151 4B8A  
                                   u11351 2074                                     u11271 1FBA  
                                   u11191 1E88                                     u12231 3F54  
                                   u13111 1ACA                                     u13031 192C  
                                   u11600 2D3C                                     u11520 385C  
                                   u11440 5468                                     u12320 4820  
                                   u12080 49D4                                     u12160 4BC2  
                                   u11360 2092                                     u11280 1FEA  
                                   u12240 3F8C                                     u12400 433A  
                                   u13120 1B04                                     u13040 193E  
                                   u13200 45AA                                     u11601 2D38  
                                   u11521 3858                                     u11441 5464  
                                   u12321 481C                                     u12081 49D0  
                                   u12161 4BBE                                     u11361 208E  
                                   u11281 1FE6                                     u12401 4334  
                                   u13121 1B00                                     u13041 193A  
                                   u13201 45A6                                     u11610 2D4E  
                                   u11530 38A6                                     u12330 482E  
                                   u12090 49EE                                     u12170 4076  
                                   u11370 20CC                                     u11290 1FFA  
                                   u12250 3FBA                                     u12410 433C  
                                   u11450 53CA                                     u13130 1B32  
                                   u13050 195A                                     u13210 45BC  
                                   u11611 2D4A                                     u11531 38A2  
                                   u12331 482A                                     u12091 49EA  
                                   u12171 4072                                     u11371 20C8  
                                   u11291 1FF6                                     u12251 3FB6  
                                   u11451 53C4                                     u13131 1B2E  
                                   u13051 1956                                     u13211 45B8  
                                   u11700 2F06                                     u11620 2D5E  
                                   u11540 3A70                                     u12340 52FE  
                                   u12180 40B4                                     u11380 20DE  
                                   u12260 3FCE                                     u12500 34C2  
                                   u12420 50CA                                     u11460 53CC  
                                   u13140 1BB6                                     u13060 1968  
                                   u13220 45E6                                     u13300 2860  
                                   u11701 2F02                                     u11621 2D5A  
                                   u11541 3A6C                                     u12341 52FA  
                                   u12181 40B0                                     u11381 20DA  
                                   u12261 3FCA                                     u12245 3F82  
                                   u13141 1BB2                                     u13061 1964  
                                   u13221 45E2                                     u13301 285C  
                                   u11710 2F2A                                     u11630 2DA2  
                                   u11470 3772                                     u11550 3AA2  
                                   u12190 40D2                                     u11390 20EE  
                                   u12270 3FF6                                     u12350 4290  
                                   u12510 34DE                                     u12430 50DC  
                                   u13150 1BD0                                     u13070 19C0  
                                   u13310 28FE                                     u13230 25A0  
                                   u11711 2F26                                     u11631 2D9E  
                                   u11471 376E                                     u11551 3A9E  
                                   u12191 40CE                                     u11391 20EA  
                                   u12271 3FF2                                     u12511 34DA  
                                   u12431 50D8                                     u13151 1BCC  
                                   u13071 19BC                                     u13311 28FA  
                                   u13231 259C                                     u11800 304A  
                                   u11720 2F40                                     u11640 2DB4  
                                   u11480 37A4                                     u11560 3AE0  
                                   u12600 317C                                     u12280 4016  
                                   u12360 42AE                                     u12520 3532  
                                   u12440 5242                                     u13160 1BE8  
                                   u13080 1A92                                     u13240 25F6  
                                   u13320 5014                                     u13400 4508  
                                   u11801 3046                                     u11721 2F3C  
                                   u11641 2DB0                                     u11481 37A0  
                                   u11561 3ADC                                     u12601 3178  
                                   u12281 4012                                     u12361 42AA  
                                   u12505 34B8                                     u12441 523E  
                                   u13161 1BE4                                     u13081 1A8E  
                                   u13241 25F2                                     u13321 5010  
                                   u13401 4504                                     u11810 307A  
                                   u11730 2F5E                                     u11650 2DC4  
                                   u13330 3902                                     u11570 3B0A  
                                   u12610 318A                                     u12290 4026  
                                   u12370 42D6                                     u12530 354E  
                                   u12450 33E2                                     u13170 1C44  
                                   u13090 1AAE                                     u13250 2638  
                                   u11811 3076                                     u11731 2F5A  
                                   u11651 2DC0                                     u13331 38FE  
                                   u11491 37CE                                     u11571 3B06  
                                   u12611 3186                                     u12291 4022  
                                   u12371 42D2                                     u12355 4286  
                                   u12531 354A                                     u12427 50C0  
                                   u13171 1C40                                     u13091 1AAA  
                                   u13251 2634                                     u11820 30A8  
                                   u11740 2F7E                                     u11660 2E04  
                                   u13340 3944                                     u11580 3B38  
                                   u12620 32B4                                     u11900 2234  
                                   u12380 4300                                     u12540 358A  
                                   u12460 3410                                     u12700 10A8  
                                   u13180 455A                                     u13260 2690  
                                   u11821 30A4                                     u11741 2F7A  
                                   u11661 2E00                                     u13341 3940  
                                   u11581 3B34                                     u12621 32B0  
                                   u11901 2230                                     u12381 42FC  
                                   u12541 3586                                     u12525 3528  
                                   u12461 340C                                     u12701 10A4  
                                   u13181 4556                                     u13261 268C  
                                   u11750 2F90                                     u11670 2E44  
                                   u13350 39B6                                     u11590 3B80  
                                   u12630 32D2                                     u12550 30EC  
                                   u11910 23AE                                     u11830 216A  
                                   u12470 3432                                     u12710 10F8  
                                   u13190 458C                                     u13270 26B6  
                                   u11751 2F8C                                     u11671 2E40  
                                   u13351 39B2                                     u11591 3B7C  
                                   u12631 32CE                                     u12551 30E6  
                                   u11831 2166                                     u12471 342E  
                                   u12455 33D8                                     u12711 10F4  
                                   u13191 4588                                     u13271 26B2  
                                   u11760 2FBE                                     u11680 2EBA  
                                   u13440 416A                                     u13360 39FC  
                                   u12640 32EC                                     u12560 30EE  
                                   u11920 2408                                     u11840 217C  
                                   u12800 13D6                                     u12720 1106  
                                   u13280 2748                                     u11761 2FBA  
                                   u11681 2EB6                                     u13441 4166  
                                   u13361 39F8                                     u12641 32E8  
                                   u11921 2404                                     u11841 2178  
                                   u12801 13D2                                     u12721 1102  
                                   u13281 2744                                     u11770 2FD4  
                                   u11690 2EDC                                     u13450 41BC  
                                   u13370 3A5C                                     u12650 3306  
                                   u12570 3104                                     u11930 2428  
                                   u11850 218C                                     u12490 349E  
                                   u12810 13FC                                     u12730 1118  
                                   u13290 27F8                                     u11771 2FD0  
                                   u11691 2ED8                                     u13451 41B8  
                                   u13371 3A58                                     u12651 3302  
                                   u12571 3100                                     u11931 2424  
                                   u11915 23A4                                     u11851 2188  
                                   u12395 4312                                     u12491 349A  
                                   u12811 13F8                                     u12731 1114  
                                   u13291 27F4                                     u11780 2FE8  
                                   u13460 41EA                                     u12660 3314  
                                   u12580 3132                                     u11940 243A  
                                   u11860 21CC                                     u12900 1504  
                                   u12820 140E                                     u12740 1160  
                                   u11781 2FE4                                     u13461 41E6  
                    __end_of_Get_Temp_HUM 4DC2                                     u12661 3310  
                                   u12581 312E                                     u11941 2436  
                                   u11861 21C8                                     u12485 3446  
                                   u12901 1500                                     u12821 140A  
                                   u12741 115C                                     u13381 4452  
                                   u11790 3002                                     u12670 3326  
                                   u12590 314E                                     u11950 2468  
                                   u11870 21DE                                     u12486 3450  
                                   u12910 151A                                     u12830 1430  
                                   u12750 118C                                     u13390 4470  
                                   u11791 2FFE                                     u12671 3322  
                                   u12591 314A                                     u11951 2464  
                                   u11871 21DA                                     u12487 3460  
                                   u12911 1516                                     u12831 142C  
                                   u12751 1188                                     u13391 446C  
                                   u12680 3334                                     u11960 247E  
                                   u11880 21EE                                     u12920 1528  
                                   u12840 1456                                     u12760 121C  
                                   u12681 3330                                     u11961 247A  
                                   u11881 21EA                                     u12921 1524  
                                   u12841 1452                                     u12761 1218  
                                   u12690 334C                                     u11970 2492  
                                   u11890 2224                                     u12930 1552  
                                   u12850 146C                                     u12770 1248  
                                   u12691 3348                                     u11971 248E  
                                   u11891 2220                                     u12931 154E  
                                   u12851 1468                                     u12771 1244  
                                   u13707 2A38                                     u11980 24AC  
                                   u12940 169A                                     u12860 1488  
                                   u12780 12D0                                     u11981 24A8  
                                   u12941 1696                                     u12861 1484  
                                   u12781 12CC                                     u13717 2C64  
                                   u11990 24F4                                     u12950 1700  
                                   u12870 14BE                                     u12790 1364  
                                   u13670 2C1C                                     u13807 54B4  
                                   u11991 24F0                                     u12951 16FC  
                                   u12871 14BA                                     u12791 1360  
                                   u13727 2CF0                                     u13671 2C18  
                                   u12960 1748                                     u12880 14E4  
                                   u13737 3E94                                     u12961 1744  
                                   u12881 14E0                                     u12970 1758  
                                   u12890 14F6                                     u13747 3EB2  
                                   u12971 1754                                     u12891 14F2  
                                   u12980 17F2                                     u13757 3ECC  
                                   u12981 17EE                                     u12990 1840  
                                   u13767 51F8                                     u12991 183C  
                                   u13687 29F4                                     u13777 5500  
                                   u13697 2A1E                                     u13787 550C  
                                   u13797 4DE2                                     i1l438 5592  
                                   i2l803 5598                           ___awdiv@counter 0009  
                                   i2l799 5596                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 004E                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                     Get_Distance@timer_val 0032  
                                   _SPBRG 000FAF                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                           _EUSART_Rx_ISR 5598                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           _EUSART_Tx_ISR 5596                                     _TXREG 000FAD  
           ?_lcd_4bits_send_enable_signal 000F                          __end_of_TMR0_ISR 5596  
                                   _flags 0078                                     _pinc0 0079  
                                   _pinc1 00FE                                     _fputc 460C  
                                   _fputs 52A0                                _T_Integral 00F0  
                                   pad@fp 0015                                     _width 00D1  
                                   _putch 5590                    ?_lcd_4bits_set_courser 0016  
                                   dtoa@d 0022                                     dtoa@i 0042  
                                   dtoa@n 003A                                     dtoa@p 0034  
                                   dtoa@s 0038                                     dtoa@w 0036  
                         __end_of_isupper 53D2                                     tablat 000FF5  
              lcd_4bits_set_courser@colum 0019               HAL_Timer0_Init@_tmr0_config 000A  
   __end_of_lcd_4bit_send_string_data_pos 4D1E             _lcd_4bit_send_string_data_pos 4C76  
                                   ttemp5 007B                                     ttemp6 007E  
                                   ttemp7 0082                                     status 000FD8  
                                   wtemp8 007B                           __end_of_sprintf 5130  
                          ?___fpclassifyf 0005                           __end_of_tolower 525A  
                         __end_of_strncmp 460C                  Get_Distance@_tmr0_config 002E  
                 HAL_Timer0_Write_Val@val 0007                         ??_DHT11_Read_Data 0007  
             _I2C_DefaultInterruptHandler 0123                           __initialization 4E50  
                            __end_of_main 2D22                              __end_of_dtoa 339A  
                      _flags@doprnt$F4927 0074                _eusart_Rx_InterruptHandler 00E7  
                               ??_ADC_ISR 0001                             _lat_registers 018E  
                        _Ultra_Sonic_Init 5130                                    ??_main 00CD  
                                  ??_dtoa 002A                             __activetblptr 000003  
                          ?_EUSART_Rx_ISR 0001                       DHT11_Read_Data@data 0005  
                          ?_EUSART_Tx_ISR 0001                                 ??_RB4_ISR 0001  
                               ??_RB5_ISR 0001                                 ??_RB6_ISR 0001  
                               ??_RB7_ISR 0001                     Get_Temp_HUM@T_Decimal 000D  
          GPIO_Pin_Read_Logic@_pin_config 0005                     RB5_ISR@Handler_Select 0001  
            Ultra_Sonic_Init@_tmr0_config 0014                                    ?_fputc 0005  
                                  ?_fputs 000E                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1L 000FBE  
                                  _CCPR2L 000FBB                          ___awdiv@dividend 0005  
                _Timer2_Interrupt_Handler 0117                                    ?_putch 0001  
                                  i1l1151 0046                                    i1l1161 0186  
                                  i1l1153 0086                                    i1l1251 557A  
                                  i1l1163 01C6                                    i1l1155 00C6  
                                  i1l1260 5560                                    i1l1172 0276  
                                  i1l1165 0206                                    i1l1157 0106  
                                  i1l1238 558C                                    i1l1167 0246  
                                  i1l1159 0146                                    i1l1169 0266  
                                  i1l1269 5546                                    i1l1278 552C  
                                  i2l1130 487E                                    i2l1140 48EE  
                                  i2l1132 488E                                    i2l1142 48FE  
                                  i2l1134 489E                                    i2l1136 48AE  
                                  i2l1145 490E                                    i2l1138 48CE  
                                  i2l1528 5594                                    i1l9003 554A  
                                  i1l9005 554C                                    i1l9013 5530  
                                  i1l9015 5532                                    i1l9023 5516  
                                  i1l9009 5560                                    i1l9025 5518  
                                  i1l9019 5546                                    i1l9029 552C  
                                  i1l9801 01E2                                    i1l9811 0222  
                                  i1l9803 01F0                                    i1l9821 0262  
                                  i1l9813 0230                                    i1l9805 01FE  
                                  i1l9741 0062                                    i1l9733 0026  
                                  i1l9823 0274                                    i1l9815 023E  
                                  i1l9807 0200                                    i1l9751 00A2  
                                  i1l9743 0070                                    i1l9735 0034  
                                  i1l9817 0240                                    i1l9809 0214  
                                  i1l9761 00E2                                    i1l9753 00B0  
                                  i1l9745 007E                                    i1l9737 0042  
                                  i1l9819 0254                                    i1l9771 0122  
                                  i1l9763 00F0                                    i1l9755 00BE  
                                  i1l9747 0080                                    i1l9739 0054  
                                  i1l9781 0162                                    i1l9773 0130  
                                  i1l9765 00FE                                    i1l9757 00C0  
                                  i1l9749 0094                                    i1l9791 01A2  
                                  i1l9783 0170                                    i1l9775 013E  
                                  i1l9767 0100                                    i1l9759 00D4  
                                  i1l8993 5564                                    i1l9793 01B0  
                                  i1l9785 017E                                    i1l9777 0140  
                                  i1l9769 0114                                    i1l8995 5566  
                                  i1l9795 01BE                                    i1l9787 0180  
                                  i1l9779 0154                                    i1l8989 558A  
                                  i1l9797 01C0                                    i1l9789 0194  
                                  i1l8999 557A                                    i1l9799 01D4  
                                  i2l9701 486C                                    i2l9703 487A  
                                  i2l9721 48DC                                    i2l9713 48AC  
                                  i2l9705 488C                                    i2l9723 48EA  
                                  i2l9725 48FC                                    i2l9717 48BC  
                                  i2l9709 489C                                    i2l9719 48CA  
                                  i2l9729 490C                                    i2l8987 5598  
                                  i2l9699 485E              __end_of_DHT11_Check_Response 54A2  
                          _Movement_State 00E9                                    _SPBRGH 000FB0  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                        __end_of___xxtofl 3760                    _W1_W3_W5_Motor_Control 00FC  
      lcd_4bit_send_string_data_pos@colum 001F                    ?_lcd_4bit_send_command 0012  
             __end_of_GPIO_Pin_Read_Logic 4C76                              vfprintf@cfmt 0066  
         ??_GPIO_Pin_Direction_Initialize 0007                                    ___flge 4048  
                                  ___fleq 4B22                                 ??___aodiv 0015  
                               ??___fladd 000D                                 ??___aomod 0015  
                               ??___fldiv 001B                                 ??___awdiv 0009  
                               ??___flneg 0009                                 ??___awmod 0009  
                               ??___flmul 000D                                 ??___flsub 0026  
                               ??___fltol 0009               __end_of_GPIO_Pin_Initialize 51CC  
                                  _efgtoa 1080                                    _floorf 339A  
                                  _memset 38E8                                    clear_0 4EAE  
                                  clear_1 4EBA                          ___awdiv@quotient 000B  
                         ___awmod@divisor 0007                                    _timer0 0180  
                                  isa$std 000001                           ___awmod@counter 0009  
                                  pad@buf 0017                                    dtoa@fp 0020  
                                  _strcpy 5080                                    _strlen 5440  
                                  fputc@c 0005                                    fputs@c 0012  
                                  fputs@i 0013                              __pdataCOMRAM 0078  
                                  fputs@s 000E                           ___fpclassifyf@e 000D  
                         ___fpclassifyf@u 000F                           ___fpclassifyf@x 0005  
                            __mediumconst 0000                                    tblptrh 000FF7  
                               ??_isupper 0007                                    tblptrl 000FF6  
                                  tblptru 000FF8                                    putch@c 0001  
                        __end_of_vfprintf 501E                    Get_Temp_HUM@RH_Decimal 0009  
                               ??_sprintf 0068                                 ??_tolower 000D  
                               ??_strncmp 000B                                ___flge@ff1 001E  
                              ___flge@ff2 0022                           ??___fpclassifyf 0009  
                            ___xxtofl@arg 000F                              ___xxtofl@exp 000E  
                            ___xxtofl@val 0005                                ___fleq@ff1 0005  
                              ___fleq@ff2 0009                                __accesstop 0080  
                 __end_of__initialization 4ECC                                 ?_INT1_ISR 0001  
                              ___flneg@f1 0005                             ___rparam_used 000001  
                              ___fltol@f1 0005                          ??_lcd_send_4bits 0012  
              _I2C_Report_Write_Collision 011F                   _lcd_4bit_send_char_data 501E  
          ?_lcd_4bit_send_string_data_pos 001C                            __pcstackCOMRAM 0001  
                            __pidataBANK0 557C                              __pidataBANK1 540A  
                               ?_TMR0_ISR 0001                             __end_of_fputc 46D6  
                           __end_of_fputs 52E4                             __end_of_putch 5592  
                         ??_EUSART_Rx_ISR 0001                           ??_EUSART_Tx_ISR 0001  
                lcd_4bit_send_command@lcd 0012                              _Get_Distance 414C  
             __end_of_HAL_Timer0_Read_Val 4B22              ?_lcd_4bit_send_char_data_pos 001C  
                         _HAL_Timer0_Init 434E                                   ??_fputc 0009  
                                 ??_fputs 0012                                   ??_putch 0005  
                              __pbssBANK0 00CF                                __pbssBANK1 0100  
                   _INT0_InterruptHandler 011D                                ??_INT1_ISR 0001  
         lcd_4bits_send_enable_signal@lcd 000F             __end_of_application_intialize 539A  
                            _Get_Temp_HUM 4D1E                  _eusart_frameerr_CallBack 0125  
             __end_of_InterruptManagerLow 0286        lcd_4bit_initialize@pin_lcd_counter 001A  
                                 ?___flge 001E                                   ?___fleq 0005  
       __end_of_convert_float32_to_string 4530                                ??_TMR0_ISR 0001  
                                 ?_efgtoa 0040                                   ?_floorf 002C  
                                 _ADC_ISR 5592                                   ?_memset 0005  
   __end_of_GPIO_Pin_Direction_Initialize 3D02             _GPIO_Pin_Direction_Initialize 3BC2  
       Ultra_Sonic_Init@ultrasonic_object 0012             HAL_Timer0_Read_Val@l_low_byte 000E  
                                 ?_strcpy 0005                                   ?_strlen 0005  
                    _DHT11_Check_Response 5476                                   _RB4_ISR 5562  
                                 _RB5_ISR 5548                                   _RB6_ISR 552E  
                  Get_Temp_HUM@T_Integral 000F                                   _RB7_ISR 5514  
                               ?___xxtofl 0005                 _RB6_InterruptHandler_HIGH 00D9  
                 ??_lcd_4bits_set_courser 001A                           _DHT11_Read_Data 4DC2  
                          _tris_registers 0198                  __end_of_Ultra_Sonic_Init 5182  
                           ??_DHT11_Start 0005                         ??_send_trig_pulse 0011  
                _RB6_InterruptHandler_LOW 00D7                 ??_lcd_4bit_send_char_data 0015  
                                 __Hparam 0000                _eusart_overrunerr_CallBack 00E5  
                                 __Lparam 0000                                   ___aodiv 3760  
                                 ___fladd 1C90                                   ___aomod 3A5E  
                                 ___fldiv 2D22                                   ___awdiv 46D6  
                                 ___flneg 53D2                                   ___awmod 49C2  
                                 ___flmul 2150                                   ___flsub 525A  
                                 ___fltol 3F42                                 ?_vfprintf 00B2  
                            __psmallconst 1000                                   __pcinit 4E50  
                                 __ramtop 1000                     ?_DHT11_Check_Response 0001  
                                 __ptext0 2980                                   __ptext1 4C76  
                                 __ptext2 5324                                   __ptext3 4912  
                                 __ptext4 501E                                   __ptext5 444C  
                                 __ptext6 50DE                                   __ptext7 4FBA  
                                 __ptext8 257A                                   __ptext9 4530  
                               _T0CONbits 000FD5                   __end_of_HAL_Timer0_Init 444C  
                               _T2CONbits 000FCA                                ??___xxtofl 0009  
                               _T3CONbits 000FB1                          ___awmod@dividend 0005  
                                 _isupper 539A                                   efgtoa@c 0046  
                                 efgtoa@d 0092                                   efgtoa@e 00AA  
                                 efgtoa@f 0042                                   efgtoa@g 00A6  
                                 efgtoa@h 009C                                   efgtoa@i 00A4  
                                 efgtoa@l 00A0                                   efgtoa@m 008C  
                                 efgtoa@n 00AC                                   efgtoa@p 0096  
                                 efgtoa@t 0086                                   efgtoa@u 00AE  
                                 efgtoa@w 0098                                   _sprintf 50DE  
                                 _tolower 5214                                   _strncmp 4530  
                          __pintcode_body 485C                      end_of_initialization 4ECC  
                       lcd_send_4bits@lcd 000F                                   floorf@e 003A  
                                 floorf@m 0036                  GPIO_Pin_Read_Logic@logic 0007  
                                 floorf@u 003C                                   floorf@x 002C  
                                 fputc@fp 0007                                 i1u1060_20 0062  
                               i1u1060_21 005E                                 i1u1061_20 0070  
                                 memset@c 0007                                 i1u1061_21 006C  
                               i1u1070_20 00FE                                 i1u1062_20 007E  
                                 memset@k 000D                                 i1u1070_21 00FA  
                               i1u1062_21 007A                                   memset@n 0009  
                               i1u1071_20 0114                                 i1u1063_20 0094  
                                 memset@s 000F                                 i1u1071_21 0110  
                               i1u1063_21 0090                                 i1u1080_20 01A2  
                               i1u1072_20 0122                                 i1u1064_20 00A2  
                               i1u1080_21 019E                                 i1u1072_21 011E  
                               i1u1064_21 009E                                 i1u1081_20 01B0  
                               i1u1073_20 0130                                 i1u1065_20 00B0  
                               i1u1057_20 0034                                 i1u1081_21 01AC  
                               i1u1073_21 012C                                 i1u1065_21 00AC  
                               i1u1057_21 0030                                 i1u1090_20 023E  
                               i1u1082_20 01BE                                 i1u1074_20 013E  
                               i1u1066_20 00BE                                 i1u1058_20 0042  
                               i1u1090_21 023A                                 i1u1082_21 01BA  
                               i1u1074_21 013A                                 i1u1066_21 00BA  
                               i1u1058_21 003E                                 i1u1091_20 0254  
                               i1u1083_20 01D4                                 i1u1075_20 0154  
                               i1u1067_20 00D4                                 i1u1059_20 0054  
                               i1u1091_21 0250                                 i1u1083_21 01D0  
                               i1u1075_21 0150                                 i1u1067_21 00D0  
                               i1u1059_21 0050                                 i1u1092_20 0262  
                               i1u1084_20 01E2                                 i1u1076_20 0162  
                               i1u1068_20 00E2                                 i1u1092_21 025E  
                               i1u1084_21 01DE                                 i1u1076_21 015E  
                               i1u1068_21 00DE                                 i1u1093_20 0274  
                               i1u1085_20 01F0                                 i1u1077_20 0170  
                               i1u1069_20 00F0                                 i1u1093_21 0270  
                               i1u1085_21 01EC                                 i1u1077_21 016C  
                               i1u1069_21 00EC                                   int_func 485C  
                               i1u1086_20 01FE                                 i1u1078_20 017E  
                               i1u1086_21 01FA                                 i1u1078_21 017A  
                                 fputs@fp 0010                                 i1u1087_20 0214  
                               i1u1079_20 0194                                 i1u1087_21 0210  
                               i1u1079_21 0190                                 i1u1088_20 0222  
                               i1u1088_21 021E                                 i1u1089_20 0230  
                               i1u1089_21 022C                   ??_lcd_4bit_send_command 0015  
                               i2u1050_40 48AC                                 i2u1050_41 48A8  
                               i2u1051_40 48BC                                 i2u1051_41 48B8  
                               i2u1052_40 48CA                                 i2u1052_41 48C6  
                               i2u1053_40 48DC                                 i2u1053_41 48D8  
                               i2u1054_40 48EA                                 i2u1046_40 486C  
                               i2u1054_41 48E6                                 i2u1046_41 4868  
                               i2u1055_40 48FC                                 i2u1047_40 487A  
                               i2u1055_41 48F8                                 i2u1047_41 4876  
                               i2u1056_40 490C                                 i2u1048_40 488C  
                               i2u1056_41 4908                                 i2u1048_41 4888  
                               i2u1049_40 489C                                 i2u1049_41 4898  
                       __end_of_vfpfcnvrt 2980                                efgtoa@mode 009B  
                              efgtoa@sign 0094                                 _RCSTAbits 000FAB  
                     __end_of_DHT11_Start 5514                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                              ??_vfprintf 0066                                   strcpy@d 000D  
                                 strlen@a 0007                                   strcpy@s 000B  
                                 strlen@s 0005                       _lcd_4bit_initialize 3E2A  
         __end_of_lcd_4bit_send_char_data 5080                     _INT1_InterruptHandler 00E3  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                 __end_of_DHT11_Read_Data 4E50                               ___fladd@grs 0014  
              lcd_4bit_send_char_data@lcd 0012            ?_GPIO_Pin_Direction_Initialize 0005  
    convert_float32_to_string@temp_string 0068                             ___xxtofl@sign 000D  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                     RB4_ISR@Handler_Select 0001  
                   RB7_ISR@Handler_Select 0001                               ___fldiv@grs 0026  
                             ___fldiv@rem 001F                   Get_Temp_HUM@RH_Integral 000B  
         lcd_4bit_send_char_data_pos@data 0020                      ?_lcd_4bit_initialize 0016  
                             ___flmul@grs 0013                      Get_Distance@distance 0030  
                             _CCP1CONbits 000FBD                               _CCP2CONbits 000FBA  
                               _TXSTAbits 000FAC                                _ultrasonic 00F8  
                               _T_Decimal 0076             convert_uint16_to_string@F3203 0109  
                          __end_of___flge 414C                            __end_of___fleq 4BCC  
                             vfpfcnvrt@ap 0050                               vfpfcnvrt@ct 0062  
                             vfpfcnvrt@fp 004C                               vfpfcnvrt@ll 0056  
                  ??_DHT11_Check_Response 0005                               _BAUDCONbits 000FB8  
                           __pidataCOMRAM 558E                            __end_of_efgtoa 1C90  
        send_trig_pulse@ultrasonic_object 000F                            __end_of_floorf 35AC  
                              floorf@F526 010F                            __end_of_memset 3A5E  
                        ?_HAL_Timer0_Init 000A                            __end_of_strcpy 50DE  
                          __end_of_strlen 5476                       start_initialization 4E50  
                             __end_of_abs 5324           GPIO_Pin_Write_Logic@_pin_config 0005  
                             __end_of_pad 485C                      Get_Temp_HUM@Checksum 0011  
                   ??_lcd_4bit_initialize 0018                     __end_of___fpclassifyf 434E  
                             _DHT11_Start 54F6                               vfprintf@fmt 00B4  
                                ??___flge 0026                                  ??___fleq 000D  
          GPIO_Pin_Initialize@_pin_config 000F                                  ??_efgtoa 0047  
                             __pdataBANK0 00F2                               __pdataBANK1 0184  
                                ??_floorf 0030                                  ?_ADC_ISR 0001  
                                ??_memset 000B                                memset@dest 0005  
            lcd_4bit_send_command@command 0014                                  ??_strcpy 0009  
                                ??_strlen 0007                     __end_of_EUSART_Rx_ISR 559A  
                               ___fladd@a 0009                                 ___fladd@b 0005  
                        ?_DHT11_Read_Data 0005                     __end_of_EUSART_Tx_ISR 5598  
                               ___fldiv@a 0017                                 ___fldiv@b 0013  
                                ?_RB4_ISR 0001                                  ?_RB5_ISR 0001  
                                ?_RB6_ISR 0001                                  ?_RB7_ISR 0001  
                               ___flmul@a 0009                                 ___flmul@b 0005  
                             __pbssCOMRAM 0072                                 ___flsub@a 0022  
                               ___flsub@b 001E                           _send_trig_pulse 54A2  
                           __pcstackBANK0 0080                             __pcstackBANK1 01BA  
                        ___aodiv@dividend 0005             __end_of_lcd_4bits_set_courser 49C2  
                        DHT11_Read_Data@i 0008                     _INT2_InterruptHandler 011B  
          ??_lcd_4bits_send_enable_signal 0011                         ?_Ultra_Sonic_Init 0012  
          HAL_Timer0_Read_Val@l_high_byte 000D                        ??_Ultra_Sonic_Init 0016  
            __end_of_InterruptManagerHigh 4912                               _efgtoa$4970 0080  
                             _efgtoa$4977 0082                               _efgtoa$4978 0084  
                   _application_intialize 5360                                 _dtoa$4946 0032  
                               __pintcode 0008                                  ?___aodiv 0005  
            __end_of_GPIO_Pin_Write_Logic 3E2A                                  ?___fladd 0005  
                                ?___aomod 0005                                  ?___fldiv 0013  
                                ?___awdiv 0005                          ___aodiv@quotient 0017  
                                ?___flneg 0005                                  ?___awmod 0005  
                                ?___flmul 0005                                  ?___flsub 001E  
         GPIO_Pin_Write_Logic@ERRORSTATUS 000E                                  ?___fltol 0005  
            __end_of_HAL_Timer0_Write_Val 54F6                ?_convert_float32_to_string 01BA  
                             __pintcodelo 0018             HAL_Timer0_Write_Val@ret_value 0009  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 00E1  
                       Get_Distance@logic 0034                                  _CCP1_Obj 01AE  
                                _CCP2_Obj 01A2                 _RB7_InterruptHandler_HIGH 00D5  
                                ?_isupper 0005                                  ?_sprintf 00B8  
                                ?_tolower 000B                                  ?_strncmp 0005  
          GPIO_Pin_Initialize@ERRORSTATUS 0011            convert_float32_to_string@F3214 0100  
                _RB5_InterruptHandler_LOW 00DB                                  _INT1_ISR 558A  
              lcd_send_4bits@data_command 0011                                  _LATDbits 000F8C  
        HAL_Timer0_Write_Val@_tmr0_config 0005                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0             __end_of_lcd_4bit_send_command 4FBA  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i1u964_20 5576                                  i1u964_21 5572  
                                i1u965_20 555C                                  i1u965_21 5558  
                                i1u966_20 5542                                  i1u966_21 553E  
                                i1u967_20 5528                                  i1u967_21 5524  
                                _RCONbits 000FD0            convert_float32_to_string@value 01BA  
                                _TMR0_ISR 5594                                 _vfpfcnvrt 257A  
                 __end_of_send_trig_pulse 54CC              _Timer2_PreLoaded_Value_Store 00EA  
             _I2C_Report_Receive_Overflow 0121                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
          lcd_4bit_send_char_data_pos@lcd 001C            lcd_4bit_send_char_data_pos@row 001E  
                                _Checksum 00EF                 HAL_Timer0_Read_Val@result 0007  
     __end_of_lcd_4bit_send_char_data_pos 5360               _lcd_4bit_send_char_data_pos 5324  
                              vfpfcnvrt@c 0065                                vfpfcnvrt@f 005E  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                ?_lcd_4bit_send_char_data 0012                                 copy_data0 4E64  
                               copy_data1 4E84                       _GPIO_Pin_Read_Logic 4BCC  
         HAL_Timer0_Read_Val@_tmr0_config 0005             ??_lcd_4bit_send_char_data_pos 0021  
                  ?_application_intialize 0001                       _GPIO_Pin_Initialize 5182  
                                __Hrparam 0000          lcd_4bit_send_string_data_pos@lcd 001C  
        lcd_4bit_send_string_data_pos@row 001E          lcd_4bit_send_string_data_pos@str 0020  
                              vfprintf@ap 00B6                                  __Lrparam 0000  
                              vfprintf@fp 00B2                                ?_vfpfcnvrt 004C  
               GPIO_Pin_Write_Logic@logic 0007                           ___aodiv@divisor 000D  
                    ?_GPIO_Pin_Read_Logic 0005                             _preloaded_val 0119  
                         ___aodiv@counter 0015                        ___fpclassifyf@F465 0113  
                    ?_GPIO_Pin_Initialize 000F                                sprintf@fmt 00BA  
                                ___xxtofl 35AC                             ?_Get_Distance 002C  
                   RB6_ISR@Handler_Select 0001                      _InterruptManagerHigh 0008  
                lcd_4bits_set_courser@lcd 0016                  lcd_4bits_set_courser@row 0018  
                                __ptext10 1080                                  __ptext11 5214  
                                __ptext20 2150                                  __ptext12 539A  
                                __ptext21 4048                                  __ptext13 5080  
                                __ptext30 5590                                  __ptext22 4B22  
                                __ptext14 339A                                  __ptext31 52E4  
                                __ptext23 49C2                                  __ptext15 4250  
                                __ptext40 5130                                  __ptext32 3A5E  
                                __ptext24 46D6                                  __ptext16 3F42  
                                __ptext41 434E                                  __ptext33 3760  
                                __ptext25 30BC                                  __ptext17 525A  
                                __ptext50 3D02                                  __ptext42 5182  
                                __ptext34 38E8                                  __ptext26 479A  
                                __ptext18 1C90                                  __ptext51 35AC  
                                __ptext43 3BC2                                  __ptext35 5360  
                                __ptext27 5440                                  __ptext19 53D2  
                                __ptext60 5562                                  __ptext52 2D22  
                                __ptext44 4D1E                                  __ptext36 3E2A  
                                __ptext28 52A0                                  __ptext61 558A  
                                __ptext53 54CC                                  __ptext45 54F6  
                                __ptext37 4F50                                  __ptext29 460C  
                                __ptext62 5592                                  __ptext54 4A72  
                                __ptext46 4DC2                                  __ptext38 4ED6  
                                __ptext55 4BCC                                  __ptext47 5476  
                                __ptext39 51CC                                  __ptext64 5594  
                                __ptext48 414C                                  __ptext65 5596  
                                __ptext57 5514                                  __ptext49 54A2  
                                __ptext66 5598                                  __ptext58 552E  
                                __ptext59 5548                                  _distance 00EB  
                    _GPIO_Pin_Write_Logic 3D02                                strcpy@dest 0005  
                    _HAL_Timer0_Write_Val 54CC                              ?_DHT11_Start 0001  
                           ?_Get_Temp_HUM 0009                                  efgtoa@fp 0040  
                                efgtoa@ne 008A                                  efgtoa@pp 0088  
                                efgtoa@ou 008E                                  isa$xinst 000000  
                                int$flags 007A                                  _vfprintf 4FBA  
                   ??_GPIO_Pin_Read_Logic 0009                          ?_send_trig_pulse 000F  
                          _lcd_send_4bits 4ED6                          ___aomod@dividend 0005  
                   ??_GPIO_Pin_Initialize 0011                       _HAL_Timer0_Read_Val 4A72  
                              _INTCONbits 000FF2               __end_of_lcd_4bit_initialize 3F42  
                          ??_Get_Distance 0032                     ?_InterruptManagerHigh 0001  
                   ?_GPIO_Pin_Write_Logic 0005                     ?_HAL_Timer0_Write_Val 0005  
                                intlevel1 0000                                  intlevel2 0000  
                               sprintf@ap 00C0                       _InterruptManagerLow 0018  
                          ??_Get_Temp_HUM 0013                      ?_HAL_Timer0_Read_Val 0005  
GPIO_Pin_Direction_Initialize@_pin_config 0005                                 strcpy@src 0007  
                              _RCSTA1bits 000FAB                                  isupper@c 0005  
                               strncmp@_l 0005                                 strncmp@_r 0007  
            convert_float32_to_string@str 01BE                               efgtoa@nmode 009A  
                  __end_of_lcd_send_4bits 4F50                           ___aomod@divisor 000D  
             ??_convert_float32_to_string 0068                               ??_vfpfcnvrt 0052  
                         ___aomod@counter 0015                      ?_InterruptManagerLow 0001  
   convert_float32_to_string@data_counter 0071                                  sprintf@f 00C2  
                                tolower@c 000B                                  sprintf@s 00B8  
                          _port_registers 0184                    _W2_W4_W6_Motor_Control 00FA  
                                strncmp@l 000C                                  strncmp@n 0009  
                                strncmp@r 000E                               _SSPCON1bits 000FC6  
                             _SSPCON2bits 000FC5                                _WDTCONbits 000FD1  
         ??_lcd_4bit_send_string_data_pos 0022                             ___fladd@signs 0011  
           Get_Distance@ultrasonic_object 002C                              ___aodiv@sign 0016  
                   _lcd_4bits_set_courser 4912                              ___fladd@aexp 0012  
                            ___fladd@bexp 0013                     ??_HAL_Timer0_Read_Val 0009  
                              _RH_Decimal 0077               lcd_4bit_send_char_data@data 0014  
                            ___aomod@sign 0016                    lcd_4bit_initialize@lcd 0016  
