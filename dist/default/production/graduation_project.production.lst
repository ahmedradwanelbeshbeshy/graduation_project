

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 13 20:46:44 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   110                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   111  0000                     
   112                           ; Version 2.40
   113                           ; Generated 17/11/2021 GMT
   114                           ; 
   115                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution. Publication is not required when
   129                           ;        this file is used in an embedded application.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F4620 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataCOMRAM
   149  006368                     __pidataCOMRAM:
   150                           	callstack 0
   151                           
   152                           ;initializer for _blue
   153  006368  01                 	db	1
   154                           
   155                           ;initializer for _gps
   156  006369  01                 	db	1
   157                           
   158                           ;initializer for _datasend
   159  00636A  77                 	db	119
   160                           
   161                           ;initializer for _flags
   162  00636B  0F                 	db	15
   163                           
   164                           ;initializer for _W4_Motor_Control
   165  00636C  1C                 	db	28
   166  00636D  1D                 	db	29
   167                           
   168                           ;initializer for _W3_Motor_Control
   169  00636E  1A                 	db	26
   170  00636F  1B                 	db	27
   171                           
   172                           ;initializer for _W1_W5_W2_W6_Motor_Control
   173  006370  18                 	db	24
   174  006371  19                 	db	25
   175                           
   176                           ;initializer for _selector
   177  006372  08                 	db	8
   178                           
   179                           ;initializer for _pind0
   180  006373  98                 	db	152
   181                           
   182                           ;initializer for _pind1
   183  006374  99                 	db	153
   184                           
   185                           ;initializer for _pind2
   186  006375  1A                 	db	26
   187                           
   188                           	psect	idataBANK1
   189  005E4C                     __pidataBANK1:
   190                           	callstack 0
   191                           
   192                           ;initializer for _port_registers
   193  005E4C  80                 	db	128
   194  005E4D  0F                 	db	15
   195  005E4E  81                 	db	129
   196  005E4F  0F                 	db	15
   197  005E50  82                 	db	130
   198  005E51  0F                 	db	15
   199  005E52  83                 	db	131
   200  005E53  0F                 	db	15
   201  005E54  84                 	db	132
   202  005E55  0F                 	db	15
   203                           
   204                           ;initializer for _lat_registers
   205  005E56  89                 	db	137
   206  005E57  0F                 	db	15
   207  005E58  8A                 	db	138
   208  005E59  0F                 	db	15
   209  005E5A  8B                 	db	139
   210  005E5B  0F                 	db	15
   211  005E5C  8C                 	db	140
   212  005E5D  0F                 	db	15
   213  005E5E  8D                 	db	141
   214  005E5F  0F                 	db	15
   215                           
   216                           ;initializer for _tris_registers
   217  005E60  92                 	db	146
   218  005E61  0F                 	db	15
   219  005E62  93                 	db	147
   220  005E63  0F                 	db	15
   221  005E64  94                 	db	148
   222  005E65  0F                 	db	15
   223  005E66  95                 	db	149
   224  005E67  0F                 	db	15
   225  005E68  96                 	db	150
   226  005E69  0F                 	db	15
   227                           
   228                           ;initializer for __uart_obj
   229  005E6A  2580               	dw	9600
   230  005E6C  04                 	db	4
   231  005E6D  30                 	db	low _usart_isr
   232  005E6E  5F                 	db	high _usart_isr
   233  005E6F  00                 	db	0
   234  005E70  00                 	db	0
   235  005E71  00                 	db	0
   236  005E72  00                 	db	0
   237  005E73  09                 	db	9
   238  005E74  00                 	db	0
   239  005E75  00                 	db	0
   240                           
   241                           ;initializer for _CCP2_Obj
   242  005E76  01                 	db	1
   243  005E77  02                 	db	2
   244  005E78  00                 	db	0
   245  005E79  11                 	db	17
   246  005E7A  00                 	db	0
   247  005E7B  2710               	dw	10000
   248  005E7D  0000               	dw	0
   249  005E7F  11                 	db	17
   250                           
   251                           ;initializer for _CCP1_Obj
   252  005E80  00                 	db	0
   253  005E81  02                 	db	2
   254  005E82  00                 	db	0
   255  005E83  12                 	db	18
   256  005E84  00                 	db	0
   257  005E85  2710               	dw	10000
   258  005E87  0000               	dw	0
   259  005E89  10                 	db	16
   260                           
   261                           ;initializer for _lcd1
   262  005E8A  10                 	db	16
   263  005E8B  11                 	db	17
   264  005E8C  12                 	db	18
   265  005E8D  13                 	db	19
   266  005E8E  14                 	db	20
   267  005E8F  15                 	db	21
   268                           
   269                           ;initializer for _Timer0
   270  005E90  07                 	db	7
   271  005E91  85EE               	dw	34286
   272  005E93  B6                 	db	low _Timer0_Handler
   273  005E94  62                 	db	high _Timer0_Handler
   274  005E95  01                 	db	1
   275                           
   276                           ;initializer for _battery_adc
   277  005E96  00                 	db	0
   278  005E97  05                 	db	5
   279  005E98  02                 	db	2
   280  005E99  01                 	db	1
   281  005E9A  00                 	db	0
   282  0000                     _WDTCONbits	set	4049
   283  0000                     _TMR0H	set	4055
   284  0000                     _TMR0L	set	4054
   285  0000                     _T0CONbits	set	4053
   286  0000                     _INTCON2bits	set	4081
   287  0000                     _TRISBbits	set	3987
   288  0000                     _PORTBbits	set	3969
   289  0000                     _INTCON3bits	set	4080
   290  0000                     _IPR2bits	set	4002
   291  0000                     _PIR2bits	set	4001
   292  0000                     _SSPBUF	set	4041
   293  0000                     _PIE2bits	set	4000
   294  0000                     _SSPSTATbits	set	4039
   295  0000                     _SSPADD	set	4040
   296  0000                     _SSPCON2bits	set	4037
   297  0000                     _SSPCON1bits	set	4038
   298  0000                     _SPBRGH	set	4016
   299  0000                     _SPBRG	set	4015
   300  0000                     _BAUDCONbits	set	4024
   301  0000                     _INTCONbits	set	4082
   302  0000                     _IPR1bits	set	3999
   303  0000                     _RCONbits	set	4048
   304  0000                     _RCSTA1bits	set	4011
   305  0000                     _RCREG	set	4014
   306  0000                     _PIR1bits	set	3998
   307  0000                     _TXREG	set	4013
   308  0000                     _TXSTAbits	set	4012
   309  0000                     _PIE1bits	set	3997
   310  0000                     _TRISCbits	set	3988
   311  0000                     _TXSTA1bits	set	4012
   312  0000                     _RCSTAbits	set	4011
   313  0000                     _T3CONbits	set	4017
   314  0000                     _CCPR2L	set	4027
   315  0000                     _CCPR1L	set	4030
   316  0000                     _CCP2CONbits	set	4026
   317  0000                     _CCP1CONbits	set	4029
   318  0000                     _ADCON1bits	set	4033
   319  0000                     _ADRESL	set	4035
   320  0000                     _ADRESH	set	4036
   321  0000                     _ADCON2bits	set	4032
   322  0000                     _ADCON0bits	set	4034
   323  0000                     _PORTE	set	3972
   324  0000                     _PORTD	set	3971
   325  0000                     _PORTC	set	3970
   326  0000                     _PORTB	set	3969
   327  0000                     _PORTA	set	3968
   328  0000                     _LATE	set	3981
   329  0000                     _LATD	set	3980
   330  0000                     _LATC	set	3979
   331  0000                     _LATB	set	3978
   332  0000                     _LATA	set	3977
   333  0000                     _TRISD	set	3989
   334  0000                     _TRISC	set	3988
   335  0000                     _PR2	set	4043
   336  0000                     _TRISB	set	3987
   337  0000                     _TRISE	set	3990
   338  0000                     _TRISA	set	3986
   339  0000                     _RX9D	set	32088
   340                           
   341                           	psect	smallconst
   342  001000                     __psmallconst:
   343                           	callstack 0
   344  001000  00                 	db	0
   345  001001  41                 	db	65	;'A'
   346  001002  54                 	db	84	;'T'
   347  001003  2B                 	db	43
   348  001004  55                 	db	85	;'U'
   349  001005  41                 	db	65	;'A'
   350  001006  52                 	db	82	;'R'
   351  001007  54                 	db	84	;'T'
   352  001008  3A                 	db	58	;':'
   353  001009  39                 	db	57	;'9'
   354  00100A  36                 	db	54	;'6'
   355  00100B  30                 	db	48	;'0'
   356  00100C  30                 	db	48	;'0'
   357  00100D  2C                 	db	44
   358  00100E  30                 	db	48	;'0'
   359  00100F  2C                 	db	44
   360  001010  30                 	db	48	;'0'
   361  001011  0D                 	db	13
   362  001012  0A                 	db	10
   363  001013  00                 	db	0
   364  001014                     STR_15:
   365  001014  20                 	db	32
   366  001015  20                 	db	32
   367  001016  20                 	db	32
   368  001017  20                 	db	32
   369  001018  20                 	db	32
   370  001019  20                 	db	32
   371  00101A  20                 	db	32
   372  00101B  20                 	db	32
   373  00101C  20                 	db	32
   374  00101D  20                 	db	32
   375  00101E  20                 	db	32
   376  00101F  20                 	db	32
   377  001020  20                 	db	32
   378  001021  20                 	db	32
   379  001022  20                 	db	32
   380  001023  20                 	db	32
   381  001024  00                 	db	0
   382  001025  41                 	db	65	;'A'
   383  001026  54                 	db	84	;'T'
   384  001027  2B                 	db	43
   385  001028  52                 	db	82	;'R'
   386  001029  4E                 	db	78	;'N'
   387  00102A  41                 	db	65	;'A'
   388  00102B  4D                 	db	77	;'M'
   389  00102C  45                 	db	69	;'E'
   390  00102D  3A                 	db	58	;':'
   391  00102E  52                 	db	82	;'R'
   392  00102F  6F                 	db	111	;'o'
   393  001030  62                 	db	98	;'b'
   394  001031  6F                 	db	111	;'o'
   395  001032  74                 	db	116	;'t'
   396  001033  0D                 	db	13
   397  001034  0A                 	db	10
   398  001035  00                 	db	0
   399  001036                     STR_12:
   400  001036  2D                 	db	45
   401  001037  20                 	db	32
   402  001038  20                 	db	32
   403  001039  20                 	db	32
   404  00103A  20                 	db	32
   405  00103B  20                 	db	32
   406  00103C  20                 	db	32
   407  00103D  20                 	db	32
   408  00103E  20                 	db	32
   409  00103F  20                 	db	32
   410  001040  20                 	db	32
   411  001041  20                 	db	32
   412  001042  20                 	db	32
   413  001043  20                 	db	32
   414  001044  00                 	db	0
   415  001045  41                 	db	65	;'A'
   416  001046  54                 	db	84	;'T'
   417  001047  2B                 	db	43
   418  001048  50                 	db	80	;'P'
   419  001049  53                 	db	83	;'S'
   420  00104A  57                 	db	87	;'W'
   421  00104B  44                 	db	68	;'D'
   422  00104C  3A                 	db	58	;':'
   423  00104D  31                 	db	49	;'1'
   424  00104E  32                 	db	50	;'2'
   425  00104F  33                 	db	51	;'3'
   426  001050  34                 	db	52	;'4'
   427  001051  0D                 	db	13
   428  001052  0A                 	db	10
   429  001053  00                 	db	0
   430  001054                     STR_16:
   431  001054  62                 	db	98	;'b'
   432  001055  61                 	db	97	;'a'
   433  001056  74                 	db	116	;'t'
   434  001057  74                 	db	116	;'t'
   435  001058  65                 	db	101	;'e'
   436  001059  72                 	db	114	;'r'
   437  00105A  79                 	db	121	;'y'
   438  00105B  20                 	db	32
   439  00105C  6C                 	db	108	;'l'
   440  00105D  6F                 	db	111	;'o'
   441  00105E  77                 	db	119	;'w'
   442  00105F  00                 	db	0
   443  001060  41                 	db	65	;'A'
   444  001061  54                 	db	84	;'T'
   445  001062  2B                 	db	43
   446  001063  52                 	db	82	;'R'
   447  001064  4F                 	db	79	;'O'
   448  001065  4C                 	db	76	;'L'
   449  001066  45                 	db	69	;'E'
   450  001067  3A                 	db	58	;':'
   451  001068  30                 	db	48	;'0'
   452  001069  0D                 	db	13
   453  00106A  0A                 	db	10
   454  00106B  00                 	db	0
   455  00106C                     STR_11:
   456  00106C  62                 	db	98	;'b'
   457  00106D  61                 	db	97	;'a'
   458  00106E  74                 	db	116	;'t'
   459  00106F  74                 	db	116	;'t'
   460  001070  65                 	db	101	;'e'
   461  001071  72                 	db	114	;'r'
   462  001072  79                 	db	121	;'y'
   463  001073  3A                 	db	58	;':'
   464  001074  20                 	db	32
   465  001075  00                 	db	0
   466  001076                     STR_18:
   467  001076  49                 	db	73	;'I'
   468  001077  4E                 	db	78	;'N'
   469  001078  46                 	db	70	;'F'
   470  001079  00                 	db	0
   471  00107A                     STR_22:
   472  00107A  4E                 	db	78	;'N'
   473  00107B  41                 	db	65	;'A'
   474  00107C  4E                 	db	78	;'N'
   475  00107D  00                 	db	0
   476  00107E                     STR_19:
   477  00107E  69                 	db	105	;'i'
   478  00107F  6E                 	db	110	;'n'
   479  001080  66                 	db	102	;'f'
   480  001081  00                 	db	0
   481  001082                     STR_23:
   482  001082  6E                 	db	110	;'n'
   483  001083  61                 	db	97	;'a'
   484  001084  6E                 	db	110	;'n'
   485  001085  00                 	db	0
   486  001086                     STR_26:
   487  001086  6C                 	db	108	;'l'
   488  001087  66                 	db	102	;'f'
   489  001088  00                 	db	0
   490  001089                     STR_9:
   491  001089  25                 	db	37
   492  00108A  66                 	db	102	;'f'
   493  00108B  00                 	db	0
   494  00108C                     STR_5:
   495  00108C  25                 	db	37
   496  00108D  69                 	db	105	;'i'
   497  00108E  00                 	db	0
   498  00108F  00                 	db	0	; dummy byte at the end
   499  0000                     
   500                           ; #config settings
   501                           
   502                           	psect	cinit
   503  00588C                     __pcinit:
   504                           	callstack 0
   505  00588C                     start_initialization:
   506                           	callstack 0
   507  00588C                     __initialization:
   508                           	callstack 0
   509                           
   510                           ; Initialize objects allocated to BANK1 (79 bytes)
   511                           ; load TBLPTR registers with __pidataBANK1
   512  00588C  0E4C               	movlw	low __pidataBANK1
   513  00588E  6EF6               	movwf	tblptrl,c
   514  005890  0E5E               	movlw	high __pidataBANK1
   515  005892  6EF7               	movwf	tblptrh,c
   516  005894  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   517  005896  6EF8               	movwf	tblptru,c
   518  005898  EE01  F0A9         	lfsr	0,__pdataBANK1
   519  00589C  EE10 F04F          	lfsr	1,79
   520  0058A0                     copy_data0:
   521  0058A0  0009               	tblrd		*+
   522  0058A2  CFF5 FFEE          	movff	tablat,postinc0
   523  0058A6  50E5               	movf	postdec1,w,c
   524  0058A8  50E1               	movf	fsr1l,w,c
   525  0058AA  E1FA               	bnz	copy_data0
   526                           
   527                           ; Initialize objects allocated to COMRAM (14 bytes)
   528                           ; load TBLPTR registers with __pidataCOMRAM
   529  0058AC  0E68               	movlw	low __pidataCOMRAM
   530  0058AE  6EF6               	movwf	tblptrl,c
   531  0058B0  0E63               	movlw	high __pidataCOMRAM
   532  0058B2  6EF7               	movwf	tblptrh,c
   533  0058B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   534  0058B6  6EF8               	movwf	tblptru,c
   535  0058B8  EE00  F048         	lfsr	0,__pdataCOMRAM
   536  0058BC  EE10 F00E          	lfsr	1,14
   537  0058C0                     copy_data1:
   538  0058C0  0009               	tblrd		*+
   539  0058C2  CFF5 FFEE          	movff	tablat,postinc0
   540  0058C6  50E5               	movf	postdec1,w,c
   541  0058C8  50E1               	movf	fsr1l,w,c
   542  0058CA  E1FA               	bnz	copy_data1
   543                           
   544                           ; Clear objects allocated to BANK2 (80 bytes)
   545  0058CC  EE02  F000         	lfsr	0,__pbssBANK2
   546  0058D0  0E50               	movlw	80
   547  0058D2                     clear_0:
   548  0058D2  6AEE               	clrf	postinc0,c
   549  0058D4  06E8               	decf	wreg,f,c
   550  0058D6  E1FD               	bnz	clear_0
   551                           
   552                           ; Clear objects allocated to BANK1 (88 bytes)
   553  0058D8  EE01  F000         	lfsr	0,__pbssBANK1
   554  0058DC  0E58               	movlw	88
   555  0058DE                     clear_1:
   556  0058DE  6AEE               	clrf	postinc0,c
   557  0058E0  06E8               	decf	wreg,f,c
   558  0058E2  E1FD               	bnz	clear_1
   559                           
   560                           ; Clear objects allocated to COMRAM (27 bytes)
   561  0058E4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   562  0058E8  0E1B               	movlw	27
   563  0058EA                     clear_2:
   564  0058EA  6AEE               	clrf	postinc0,c
   565  0058EC  06E8               	decf	wreg,f,c
   566  0058EE  E1FD               	bnz	clear_2
   567  0058F0                     end_of_initialization:
   568                           	callstack 0
   569  0058F0                     __end_of__initialization:
   570                           	callstack 0
   571  0058F0  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   572  0058F2  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   573  0058F4  0100               	movlb	0
   574  0058F6  EFE1  F02F         	goto	_main	;jump to C main() function
   575                           
   576                           	psect	bssCOMRAM
   577  00002D                     __pbssCOMRAM:
   578                           	callstack 0
   579  00002D                     _width:
   580                           	callstack 0
   581  00002D                     	ds	2
   582  00002F                     _prec:
   583                           	callstack 0
   584  00002F                     	ds	2
   585  000031                     _flags@doprnt$F4763:
   586                           	callstack 0
   587  000031                     	ds	2
   588  000033                     _preloaded_val:
   589                           	callstack 0
   590  000033                     	ds	2
   591  000035                     _tmr0_InterruptHandler:
   592                           	callstack 0
   593  000035                     	ds	2
   594  000037                     _RB5_InterruptHandler_HIGH:
   595                           	callstack 0
   596  000037                     	ds	2
   597  000039                     _RB4_InterruptHandler_LOW:
   598                           	callstack 0
   599  000039                     	ds	2
   600  00003B                     _RB4_InterruptHandler_HIGH:
   601                           	callstack 0
   602  00003B                     	ds	2
   603  00003D                     _INT1_InterruptHandler:
   604                           	callstack 0
   605  00003D                     	ds	2
   606  00003F                     _eusart_Rx_InterruptHandler:
   607                           	callstack 0
   608  00003F                     	ds	2
   609  000041                     _counter:
   610                           	callstack 0
   611  000041                     	ds	1
   612  000042                     _i:
   613                           	callstack 0
   614  000042                     	ds	1
   615  000043                     _Movement_State:
   616                           	callstack 0
   617  000043                     	ds	1
   618  000044                     _battery_volt_adc_read:
   619                           	callstack 0
   620  000044                     	ds	2
   621  000046                     _gpstemp:
   622                           	callstack 0
   623  000046                     	ds	1
   624  000047                     _datarecive:
   625                           	callstack 0
   626  000047                     	ds	1
   627                           
   628                           	psect	dataCOMRAM
   629  000048                     __pdataCOMRAM:
   630                           	callstack 0
   631  000048                     _blue:
   632                           	callstack 0
   633  000048                     	ds	1
   634  000049                     _gps:
   635                           	callstack 0
   636  000049                     	ds	1
   637  00004A                     _datasend:
   638                           	callstack 0
   639  00004A                     	ds	1
   640  00004B                     _flags:
   641                           	callstack 0
   642  00004B                     	ds	1
   643  00004C                     _W4_Motor_Control:
   644                           	callstack 0
   645  00004C                     	ds	2
   646  00004E                     _W3_Motor_Control:
   647                           	callstack 0
   648  00004E                     	ds	2
   649  000050                     _W1_W5_W2_W6_Motor_Control:
   650                           	callstack 0
   651  000050                     	ds	2
   652  000052                     _selector:
   653                           	callstack 0
   654  000052                     	ds	1
   655  000053                     _pind0:
   656                           	callstack 0
   657  000053                     	ds	1
   658  000054                     _pind1:
   659                           	callstack 0
   660  000054                     	ds	1
   661  000055                     _pind2:
   662                           	callstack 0
   663  000055                     	ds	1
   664                           
   665                           	psect	bssBANK1
   666  000100                     __pbssBANK1:
   667                           	callstack 0
   668  000100                     	ds	9
   669  000109                     	ds	6
   670  00010F                     floorf@F527:
   671                           	callstack 0
   672  00010F                     	ds	4
   673  000113                     ___fpclassifyf@F465:
   674                           	callstack 0
   675  000113                     	ds	4
   676  000117                     _battery_volt_f:
   677                           	callstack 0
   678  000117                     	ds	4
   679  00011B                     _nout:
   680                           	callstack 0
   681  00011B                     	ds	2
   682  00011D                     _RB7_InterruptHandler_LOW:
   683                           	callstack 0
   684  00011D                     	ds	2
   685  00011F                     _RB7_InterruptHandler_HIGH:
   686                           	callstack 0
   687  00011F                     	ds	2
   688  000121                     _RB6_InterruptHandler_LOW:
   689                           	callstack 0
   690  000121                     	ds	2
   691  000123                     _RB6_InterruptHandler_HIGH:
   692                           	callstack 0
   693  000123                     	ds	2
   694  000125                     _RB5_InterruptHandler_LOW:
   695                           	callstack 0
   696  000125                     	ds	2
   697  000127                     _INT2_InterruptHandler:
   698                           	callstack 0
   699  000127                     	ds	2
   700  000129                     _INT0_InterruptHandler:
   701                           	callstack 0
   702  000129                     	ds	2
   703  00012B                     _I2C_Report_Write_Collision:
   704                           	callstack 0
   705  00012B                     	ds	2
   706  00012D                     _I2C_Report_Receive_Overflow:
   707                           	callstack 0
   708  00012D                     	ds	2
   709  00012F                     _I2C_DefaultInterruptHandler:
   710                           	callstack 0
   711  00012F                     	ds	2
   712  000131                     _eusart_frameerr_CallBack:
   713                           	callstack 0
   714  000131                     	ds	2
   715  000133                     _eusart_overrunerr_CallBack:
   716                           	callstack 0
   717  000133                     	ds	2
   718  000135                     _longtude:
   719                           	callstack 0
   720  000135                     	ds	13
   721  000142                     _latitude:
   722                           	callstack 0
   723  000142                     	ds	13
   724  00014F                     _battery_string:
   725                           	callstack 0
   726  00014F                     	ds	9
   727                           
   728                           	psect	dataBANK1
   729  0001A9                     __pdataBANK1:
   730                           	callstack 0
   731  0001A9                     _port_registers:
   732                           	callstack 0
   733  0001A9                     	ds	10
   734  0001B3                     _lat_registers:
   735                           	callstack 0
   736  0001B3                     	ds	10
   737  0001BD                     _tris_registers:
   738                           	callstack 0
   739  0001BD                     	ds	10
   740  0001C7                     __uart_obj:
   741                           	callstack 0
   742  0001C7                     	ds	12
   743  0001D3                     _CCP2_Obj:
   744                           	callstack 0
   745  0001D3                     	ds	10
   746  0001DD                     _CCP1_Obj:
   747                           	callstack 0
   748  0001DD                     	ds	10
   749  0001E7                     _lcd1:
   750                           	callstack 0
   751  0001E7                     	ds	6
   752  0001ED                     _Timer0:
   753                           	callstack 0
   754  0001ED                     	ds	6
   755  0001F3                     _battery_adc:
   756                           	callstack 0
   757  0001F3                     	ds	5
   758                           
   759                           	psect	bssBANK2
   760  000200                     __pbssBANK2:
   761                           	callstack 0
   762  000200                     _dbuf:
   763                           	callstack 0
   764  000200                     	ds	80
   765                           
   766                           	psect	cstackBANK1
   767  000158                     __pcstackBANK1:
   768                           	callstack 0
   769  000158                     _efgtoa$4806:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773  000158                     	ds	2
   774  00015A                     _efgtoa$4807:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2
   778  00015A                     	ds	2
   779  00015C                     _efgtoa$4811:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x4
   783  00015C                     	ds	2
   784  00015E                     _efgtoa$4815:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x6
   788  00015E                     	ds	2
   789  000160                     _efgtoa$4816:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x8
   793  000160                     	ds	2
   794  000162                     _efgtoa$4817:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0xA
   798  000162                     	ds	2
   799  000164                     efgtoa@t:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0xC
   803  000164                     	ds	2
   804  000166                     efgtoa@pp:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0xE
   808  000166                     	ds	2
   809  000168                     efgtoa@ne:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x10
   813  000168                     	ds	2
   814  00016A                     efgtoa@m:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x12
   818  00016A                     	ds	2
   819  00016C                     efgtoa@ou:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x14
   823  00016C                     	ds	4
   824  000170                     efgtoa@d:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x18
   828  000170                     	ds	2
   829  000172                     efgtoa@sign:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1A
   833  000172                     	ds	2
   834  000174                     efgtoa@p:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x1C
   838  000174                     	ds	2
   839  000176                     efgtoa@w:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x1E
   843  000176                     	ds	2
   844  000178                     efgtoa@nmode:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x20
   848  000178                     	ds	1
   849  000179                     efgtoa@mode:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x21
   853  000179                     	ds	1
   854  00017A                     efgtoa@h:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x22
   858  00017A                     	ds	4
   859  00017E                     efgtoa@l:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x26
   863  00017E                     	ds	4
   864  000182                     efgtoa@i:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x2A
   868  000182                     	ds	2
   869  000184                     efgtoa@g:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x2C
   873  000184                     	ds	4
   874  000188                     efgtoa@e:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x30
   878  000188                     	ds	2
   879  00018A                     efgtoa@n:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x32
   883  00018A                     	ds	2
   884  00018C                     efgtoa@u:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x34
   888  00018C                     	ds	4
   889  000190                     ?_sprintf:
   890                           	callstack 0
   891  000190                     sprintf@s:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x38
   895  000190                     	ds	2
   896  000192                     sprintf@fmt:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x3A
   900  000192                     	ds	6
   901  000198                     convert_float32_to_string@value:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x40
   905  000198                     	ds	4
   906  00019C                     convert_float32_to_string@str:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x44
   910  00019C                     	ds	2
   911  00019E                     convert_float32_to_string@temp_string:
   912                           	callstack 0
   913                           
   914                           ; 9 bytes @ 0x46
   915  00019E                     	ds	10
   916  0001A8                     convert_float32_to_string@data_counter:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x50
   920  0001A8                     	ds	1
   921                           
   922                           	psect	cstackBANK0
   923  000080                     __pcstackBANK0:
   924                           	callstack 0
   925  000080                     ??_GPIO_Pin_Write_Logic:
   926  000080                     ??_isupper:
   927  000080                     ??_GPIO_Pin_Direction_Initialize:
   928  000080                     ??_GPIO_Pin_Toggle_Logic:
   929  000080                     ?___fpclassifyf:
   930                           	callstack 0
   931  000080                     ?_strncmp:
   932                           	callstack 0
   933  000080                     ?___wmul:
   934                           	callstack 0
   935  000080                     ?___awdiv:
   936                           	callstack 0
   937  000080                     ?___awmod:
   938                           	callstack 0
   939  000080                     ?___flmul:
   940                           	callstack 0
   941  000080                     ?___flneg:
   942                           	callstack 0
   943  000080                     ?___fltol:
   944                           	callstack 0
   945  000080                     ?___aodiv:
   946                           	callstack 0
   947  000080                     ?___aomod:
   948                           	callstack 0
   949  000080                     ADC_Get_Conversion_Results@_adc:
   950                           	callstack 0
   951  000080                     async_Rx_config@_rx_obj:
   952                           	callstack 0
   953  000080                     ___wmul@multiplier:
   954                           	callstack 0
   955  000080                     ___awdiv@dividend:
   956                           	callstack 0
   957  000080                     ___awmod@dividend:
   958                           	callstack 0
   959  000080                     memset@dest:
   960                           	callstack 0
   961  000080                     fputc@c:
   962                           	callstack 0
   963  000080                     strcpy@dest:
   964                           	callstack 0
   965  000080                     strlen@a:
   966                           	callstack 0
   967  000080                     strncmp@_l:
   968                           	callstack 0
   969  000080                     ___fleq@ff1:
   970                           	callstack 0
   971  000080                     ___flneg@f1:
   972                           	callstack 0
   973  000080                     ___fltol@f1:
   974                           	callstack 0
   975  000080                     ___flmul@b:
   976                           	callstack 0
   977  000080                     ___fpclassifyf@x:
   978                           	callstack 0
   979  000080                     ___aodiv@dividend:
   980                           	callstack 0
   981  000080                     ___aomod@dividend:
   982                           	callstack 0
   983                           
   984                           ; 8 bytes @ 0x0
   985  000080                     	ds	1
   986  000081                     adc_channel_pin_config_as_input@_channel:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x1
   990  000081                     	ds	1
   991  000082                     async_Rx_config@ret_val:
   992                           	callstack 0
   993  000082                     ADC_Init@_adc:
   994                           	callstack 0
   995  000082                     ADC_select_channel@_adc:
   996                           	callstack 0
   997  000082                     ADC_Get_Conversion_Results@_result:
   998                           	callstack 0
   999  000082                     ___wmul@multiplicand:
  1000                           	callstack 0
  1001  000082                     ___awdiv@divisor:
  1002                           	callstack 0
  1003  000082                     ___awmod@divisor:
  1004                           	callstack 0
  1005  000082                     memset@c:
  1006                           	callstack 0
  1007  000082                     fputc@fp:
  1008                           	callstack 0
  1009  000082                     strcpy@src:
  1010                           	callstack 0
  1011  000082                     strncmp@_r:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x2
  1015  000082                     	ds	2
  1016  000084                     ??_fputc:
  1017  000084                     ??___fpclassifyf:
  1018  000084                     ??_ADC_Init:
  1019  000084                     ??_ADC_Get_Conversion_Results:
  1020  000084                     ??___fltol:
  1021  000084                     ?_tolower:
  1022                           	callstack 0
  1023  000084                     ?___xxtofl:
  1024                           	callstack 0
  1025  000084                     ADC_select_channel@_channel:
  1026                           	callstack 0
  1027  000084                     ___awdiv@counter:
  1028                           	callstack 0
  1029  000084                     memset@n:
  1030                           	callstack 0
  1031  000084                     strcpy@s:
  1032                           	callstack 0
  1033  000084                     strncmp@n:
  1034                           	callstack 0
  1035  000084                     tolower@c:
  1036                           	callstack 0
  1037  000084                     ___fleq@ff2:
  1038                           	callstack 0
  1039  000084                     ___flmul@a:
  1040                           	callstack 0
  1041  000084                     ___xxtofl@val:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x4
  1045  000084                     	ds	1
  1046  000085                     ADC_select_channel@ERRORSTATUS:
  1047                           	callstack 0
  1048  000085                     ___awdiv@sign:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x5
  1052  000085                     	ds	1
  1053  000086                     ??_tolower:
  1054  000086                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1055                           	callstack 0
  1056  000086                     ___awdiv@quotient:
  1057                           	callstack 0
  1058  000086                     memset@k:
  1059                           	callstack 0
  1060  000086                     strcpy@d:
  1061                           	callstack 0
  1062  000086                     strncmp@l:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x6
  1066  000086                     	ds	1
  1067  000087                     lcd_4bits_send_enable_signal@lcd:
  1068                           	callstack 0
  1069  000087                     lcd_send_4bits@lcd:
  1070                           	callstack 0
  1071  000087                     GPIO_Pin_Initialize@_pin_config:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x7
  1075  000087                     	ds	1
  1076  000088                     ??___flmul:
  1077  000088                     ??___fleq:
  1078  000088                     ??___xxtofl:
  1079  000088                     memset@s:
  1080                           	callstack 0
  1081  000088                     ___fpclassifyf@e:
  1082                           	callstack 0
  1083  000088                     strncmp@r:
  1084                           	callstack 0
  1085  000088                     ___aodiv@divisor:
  1086                           	callstack 0
  1087  000088                     ___aomod@divisor:
  1088                           	callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x8
  1091  000088                     	ds	1
  1092  000089                     lcd_send_4bits@data_command:
  1093                           	callstack 0
  1094  000089                     GPIO_Pin_Initialize@ERRORSTATUS:
  1095                           	callstack 0
  1096  000089                     ADC_Get_Conversion_Blocking@_adc:
  1097                           	callstack 0
  1098  000089                     fputs@s:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x9
  1102  000089                     	ds	1
  1103  00008A                     _tolower$4933:
  1104                           	callstack 0
  1105  00008A                     ___fpclassifyf@u:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0xA
  1109  00008A                     	ds	1
  1110  00008B                     ADC_Get_Conversion_Blocking@_channel:
  1111                           	callstack 0
  1112  00008B                     lcd_4bit_send_command@lcd:
  1113                           	callstack 0
  1114  00008B                     lcd_4bit_send_char_data@lcd:
  1115                           	callstack 0
  1116  00008B                     fputs@fp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xB
  1120  00008B                     	ds	1
  1121  00008C                     ___flmul@sign:
  1122                           	callstack 0
  1123  00008C                     ___xxtofl@sign:
  1124                           	callstack 0
  1125  00008C                     ADC_Get_Conversion_Blocking@_result:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0xC
  1129  00008C                     	ds	1
  1130  00008D                     ?_pad:
  1131                           	callstack 0
  1132  00008D                     lcd_4bit_send_command@command:
  1133                           	callstack 0
  1134  00008D                     lcd_4bit_send_char_data@data:
  1135                           	callstack 0
  1136  00008D                     ___flmul@aexp:
  1137                           	callstack 0
  1138  00008D                     ___xxtofl@exp:
  1139                           	callstack 0
  1140  00008D                     pad@fp:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0xD
  1144  00008D                     	ds	1
  1145  00008E                     ??_ADC_Get_Conversion_Blocking:
  1146  00008E                     lcd_4bit_send_command@ERRORSTATUS:
  1147                           	callstack 0
  1148  00008E                     ___flmul@grs:
  1149                           	callstack 0
  1150  00008E                     ___xxtofl@arg:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0xE
  1154  00008E                     	ds	1
  1155  00008F                     ADC_Get_Conversion_Blocking@ERRORSTATUS:
  1156                           	callstack 0
  1157  00008F                     lcd_4bit_initialize@lcd:
  1158                           	callstack 0
  1159  00008F                     lcd_4bits_set_courser@lcd:
  1160                           	callstack 0
  1161  00008F                     pad@buf:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0xF
  1165  00008F                     	ds	1
  1166  000090                     ?_abs:
  1167                           	callstack 0
  1168  000090                     ___aodiv@counter:
  1169                           	callstack 0
  1170  000090                     abs@a:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x10
  1174  000090                     	ds	1
  1175  000091                     ??_lcd_4bit_initialize:
  1176  000091                     lcd_4bits_set_courser@row:
  1177                           	callstack 0
  1178  000091                     ___aodiv@sign:
  1179                           	callstack 0
  1180  000091                     pad@p:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x11
  1184  000091                     	ds	1
  1185  000092                     ??_abs:
  1186  000092                     ?___fldiv:
  1187                           	callstack 0
  1188  000092                     lcd_4bits_set_courser@colum:
  1189                           	callstack 0
  1190  000092                     ___flmul@bexp:
  1191                           	callstack 0
  1192  000092                     ___fldiv@b:
  1193                           	callstack 0
  1194  000092                     ___aodiv@quotient:
  1195                           	callstack 0
  1196                           
  1197                           ; 8 bytes @ 0x12
  1198  000092                     	ds	1
  1199  000093                     ??_lcd_4bits_set_courser:
  1200  000093                     ??_pad:
  1201  000093                     lcd_4bit_initialize@pin_lcd_counter:
  1202                           	callstack 0
  1203  000093                     ___flmul@prod:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x13
  1207  000093                     	ds	1
  1208  000094                     pad@i:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x14
  1212  000094                     	ds	2
  1213  000096                     lcd_4bit_send_string_data_pos@lcd:
  1214                           	callstack 0
  1215  000096                     pad@w:
  1216                           	callstack 0
  1217  000096                     ___fldiv@a:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x16
  1221  000096                     	ds	1
  1222  000097                     ___flmul@temp:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x17
  1226  000097                     	ds	1
  1227  000098                     lcd_4bit_send_string_data_pos@row:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x18
  1231  000098                     	ds	1
  1232  000099                     lcd_4bit_send_string_data_pos@colum:
  1233                           	callstack 0
  1234  000099                     ___flge@ff1:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x19
  1238  000099                     	ds	1
  1239  00009A                     ??___fldiv:
  1240  00009A                     ?_dtoa:
  1241                           	callstack 0
  1242  00009A                     lcd_4bit_send_string_data_pos@str:
  1243                           	callstack 0
  1244  00009A                     dtoa@fp:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x1A
  1248  00009A                     	ds	2
  1249  00009C                     dtoa@d:
  1250                           	callstack 0
  1251                           
  1252                           ; 8 bytes @ 0x1C
  1253  00009C                     	ds	1
  1254  00009D                     ___flge@ff2:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x1D
  1258  00009D                     	ds	1
  1259  00009E                     ___fldiv@rem:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x1E
  1263  00009E                     	ds	3
  1264  0000A1                     ??___flge:
  1265                           
  1266                           ; 1 bytes @ 0x21
  1267  0000A1                     	ds	1
  1268  0000A2                     ___fldiv@sign:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x22
  1272  0000A2                     	ds	1
  1273  0000A3                     ___fldiv@new_exp:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x23
  1277  0000A3                     	ds	1
  1278  0000A4                     ??_dtoa:
  1279                           
  1280                           ; 1 bytes @ 0x24
  1281  0000A4                     	ds	1
  1282  0000A5                     ___fldiv@grs:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x25
  1286  0000A5                     	ds	4
  1287  0000A9                     ___fldiv@bexp:
  1288                           	callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x29
  1291  0000A9                     	ds	1
  1292  0000AA                     ___fldiv@aexp:
  1293                           	callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x2A
  1296  0000AA                     	ds	1
  1297  0000AB                     ?___fladd:
  1298                           	callstack 0
  1299  0000AB                     ?_floorf:
  1300                           	callstack 0
  1301  0000AB                     ___fladd@b:
  1302                           	callstack 0
  1303  0000AB                     floorf@x:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x2B
  1307  0000AB                     	ds	1
  1308  0000AC                     _dtoa$4782:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x2C
  1312  0000AC                     	ds	2
  1313  0000AE                     dtoa@p:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x2E
  1317  0000AE                     	ds	1
  1318  0000AF                     ??_floorf:
  1319  0000AF                     ___fladd@a:
  1320                           	callstack 0
  1321                           
  1322                           ; 4 bytes @ 0x2F
  1323  0000AF                     	ds	1
  1324  0000B0                     dtoa@w:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x30
  1328  0000B0                     	ds	2
  1329  0000B2                     dtoa@s:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x32
  1333  0000B2                     	ds	1
  1334  0000B3                     ??___fladd:
  1335                           
  1336                           ; 1 bytes @ 0x33
  1337  0000B3                     	ds	1
  1338  0000B4                     dtoa@n:
  1339                           	callstack 0
  1340                           
  1341                           ; 8 bytes @ 0x34
  1342  0000B4                     	ds	1
  1343  0000B5                     floorf@m:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x35
  1347  0000B5                     	ds	2
  1348  0000B7                     ___fladd@signs:
  1349                           	callstack 0
  1350                           
  1351                           ; 1 bytes @ 0x37
  1352  0000B7                     	ds	1
  1353  0000B8                     ___fladd@aexp:
  1354                           	callstack 0
  1355                           
  1356                           ; 1 bytes @ 0x38
  1357  0000B8                     	ds	1
  1358  0000B9                     ___fladd@bexp:
  1359                           	callstack 0
  1360  0000B9                     floorf@e:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x39
  1364  0000B9                     	ds	1
  1365  0000BA                     ___fladd@grs:
  1366                           	callstack 0
  1367                           
  1368                           ; 1 bytes @ 0x3A
  1369  0000BA                     	ds	1
  1370  0000BB                     ?___flsub:
  1371                           	callstack 0
  1372  0000BB                     async_config_baud_rate_gen@_eusart_obj:
  1373                           	callstack 0
  1374  0000BB                     ___flsub@b:
  1375                           	callstack 0
  1376  0000BB                     floorf@u:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x3B
  1380  0000BB                     	ds	1
  1381  0000BC                     dtoa@i:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x3C
  1385  0000BC                     	ds	1
  1386  0000BD                     ??_async_config_baud_rate_gen:
  1387                           
  1388                           ; 1 bytes @ 0x3D
  1389  0000BD                     	ds	2
  1390  0000BF                     async_config_baud_rate_gen@ret_val:
  1391                           	callstack 0
  1392  0000BF                     ___flsub@a:
  1393                           	callstack 0
  1394                           
  1395                           ; 4 bytes @ 0x3F
  1396  0000BF                     	ds	1
  1397  0000C0                     async_config_baud_rate_gen@Baudrate_temp:
  1398                           	callstack 0
  1399                           
  1400                           ; 4 bytes @ 0x40
  1401  0000C0                     	ds	3
  1402  0000C3                     ?_efgtoa:
  1403                           	callstack 0
  1404  0000C3                     efgtoa@fp:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x43
  1408  0000C3                     	ds	1
  1409  0000C4                     _async_config_baud_rate_gen$5368:
  1410                           	callstack 0
  1411                           
  1412                           ; 4 bytes @ 0x44
  1413  0000C4                     	ds	1
  1414  0000C5                     efgtoa@f:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x45
  1418  0000C5                     	ds	3
  1419  0000C8                     EUSART_Async_Init@_eusart_obj:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x48
  1423  0000C8                     	ds	1
  1424  0000C9                     efgtoa@c:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x49
  1428  0000C9                     	ds	1
  1429  0000CA                     ??_efgtoa:
  1430  0000CA                     EUSART_Async_Init@ret_val:
  1431                           	callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x4A
  1434  0000CA                     	ds	5
  1435  0000CF                     ?_vfpfcnvrt:
  1436                           	callstack 0
  1437  0000CF                     vfpfcnvrt@fp:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x4F
  1441  0000CF                     	ds	2
  1442  0000D1                     vfpfcnvrt@fmt:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x51
  1446  0000D1                     	ds	2
  1447  0000D3                     vfpfcnvrt@ap:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x53
  1451  0000D3                     	ds	2
  1452  0000D5                     ??_vfpfcnvrt:
  1453                           
  1454                           ; 1 bytes @ 0x55
  1455  0000D5                     	ds	4
  1456  0000D9                     vfpfcnvrt@ll:
  1457                           	callstack 0
  1458                           
  1459                           ; 8 bytes @ 0x59
  1460  0000D9                     	ds	8
  1461  0000E1                     _vfpfcnvrt$4835:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x61
  1465  0000E1                     	ds	2
  1466  0000E3                     vfpfcnvrt@f:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x63
  1470  0000E3                     	ds	4
  1471  0000E7                     vfpfcnvrt@ct:
  1472                           	callstack 0
  1473                           
  1474                           ; 3 bytes @ 0x67
  1475  0000E7                     	ds	3
  1476  0000EA                     vfpfcnvrt@c:
  1477                           	callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x6A
  1480  0000EA                     	ds	1
  1481  0000EB                     ?_vfprintf:
  1482                           	callstack 0
  1483  0000EB                     vfprintf@fp:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x6B
  1487  0000EB                     	ds	2
  1488  0000ED                     vfprintf@fmt:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x6D
  1492  0000ED                     	ds	2
  1493  0000EF                     vfprintf@ap:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x6F
  1497  0000EF                     	ds	2
  1498  0000F1                     vfprintf@cfmt:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x71
  1502  0000F1                     	ds	4
  1503  0000F5                     sprintf@ap:
  1504                           	callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x75
  1507  0000F5                     	ds	2
  1508  0000F7                     sprintf@f:
  1509                           	callstack 0
  1510                           
  1511                           ; 6 bytes @ 0x77
  1512  0000F7                     	ds	6
  1513                           
  1514                           	psect	cstackCOMRAM
  1515  000001                     __pcstackCOMRAM:
  1516                           	callstack 0
  1517  000001                     ??_calc_parity_even:
  1518  000001                     ??_calc_parity_odd:
  1519  000001                     i2GPIO_Pin_Write_Logic@_pin_config:
  1520                           	callstack 0
  1521  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x0
  1525  000001                     	ds	2
  1526  000003                     ??i2_GPIO_Pin_Toggle_Logic:
  1527  000003                     calc_parity_odd@data:
  1528                           	callstack 0
  1529  000003                     calc_parity_even@data:
  1530                           	callstack 0
  1531  000003                     i2GPIO_Pin_Write_Logic@logic:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x2
  1535  000003                     	ds	1
  1536  000004                     ??i2_GPIO_Pin_Write_Logic:
  1537  000004                     calc_parity_odd@number_of_ones:
  1538                           	callstack 0
  1539  000004                     calc_parity_even@number_of_ones:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x3
  1543  000004                     	ds	1
  1544  000005                     calc_parity_odd@l_counter:
  1545                           	callstack 0
  1546  000005                     calc_parity_even@l_counter:
  1547                           	callstack 0
  1548                           
  1549                           ; 1 bytes @ 0x4
  1550  000005                     	ds	1
  1551  000006                     EUSART_Async_Transmit_Data@_eusart_obj:
  1552                           	callstack 0
  1553  000006                     EUSART_Async_Read_Data@_eusart_obj:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x5
  1557  000006                     	ds	2
  1558  000008                     EUSART_Async_Transmit_Data@data:
  1559                           	callstack 0
  1560  000008                     EUSART_Async_Read_Data@data:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x7
  1564  000008                     	ds	2
  1565  00000A                     ??_EUSART_Async_Transmit_Data:
  1566  00000A                     ??_EUSART_Async_Read_Data:
  1567  00000A                     i2GPIO_Pin_Write_Logic@ERRORSTATUS:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x9
  1571  00000A                     	ds	1
  1572  00000B                     ECU_DC_Motor_Stop@dc_motor:
  1573                           	callstack 0
  1574  00000B                     i2lcd_4bits_send_enable_signal@lcd:
  1575                           	callstack 0
  1576  00000B                     i2lcd_send_4bits@lcd:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0xA
  1580  00000B                     	ds	2
  1581  00000D                     i2lcd_send_4bits@data_command:
  1582                           	callstack 0
  1583  00000D                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
  1584                           	callstack 0
  1585  00000D                     _EUSART_Async_Read_Data$1885:
  1586                           	callstack 0
  1587                           
  1588                           ; 2 bytes @ 0xC
  1589  00000D                     	ds	1
  1590  00000E                     ??_TMR0_ISR:
  1591  00000E                     
  1592                           ; 1 bytes @ 0xD
  1593  00000E                     	ds	1
  1594  00000F                     Bluetooth_Send_Data_Non_Blocking@data:
  1595                           	callstack 0
  1596  00000F                     _EUSART_Async_Read_Data$1886:
  1597                           	callstack 0
  1598  00000F                     i2lcd_4bit_send_command@lcd:
  1599                           	callstack 0
  1600  00000F                     i2lcd_4bit_send_char_data@lcd:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0xE
  1604  00000F                     	ds	1
  1605  000010                     
  1606                           ; 1 bytes @ 0xF
  1607  000010                     	ds	1
  1608  000011                     i2lcd_4bit_send_command@command:
  1609                           	callstack 0
  1610  000011                     i2lcd_4bit_send_char_data@data:
  1611                           	callstack 0
  1612  000011                     _EUSART_Async_Read_Data$1887:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x10
  1616  000011                     	ds	1
  1617  000012                     
  1618                           ; 1 bytes @ 0x11
  1619  000012                     	ds	1
  1620  000013                     EUSART_Async_Read_Data@l_temp_data:
  1621                           	callstack 0
  1622  000013                     i2lcd_4bits_set_courser@lcd:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x12
  1626  000013                     	ds	2
  1627  000015                     i2lcd_4bits_set_courser@row:
  1628                           	callstack 0
  1629                           
  1630                           ; 1 bytes @ 0x14
  1631  000015                     	ds	1
  1632  000016                     i2lcd_4bits_set_courser@colum:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x15
  1636  000016                     	ds	1
  1637  000017                     ??i2_lcd_4bits_set_courser:
  1638                           
  1639                           ; 1 bytes @ 0x16
  1640  000017                     	ds	3
  1641  00001A                     lcd_4bit_send_char_data_pos@lcd:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x19
  1645  00001A                     	ds	2
  1646  00001C                     lcd_4bit_send_char_data_pos@row:
  1647                           	callstack 0
  1648                           
  1649                           ; 1 bytes @ 0x1B
  1650  00001C                     	ds	1
  1651  00001D                     lcd_4bit_send_char_data_pos@colum:
  1652                           	callstack 0
  1653                           
  1654                           ; 1 bytes @ 0x1C
  1655  00001D                     	ds	1
  1656  00001E                     lcd_4bit_send_char_data_pos@data:
  1657                           	callstack 0
  1658                           
  1659                           ; 1 bytes @ 0x1D
  1660  00001E                     	ds	1
  1661  00001F                     
  1662                           ; 1 bytes @ 0x1E
  1663  00001F                     	ds	1
  1664  000020                     ??_InterruptManagerHigh:
  1665                           
  1666                           ; 1 bytes @ 0x1F
  1667  000020                     	ds	6
  1668  000026                     RB4_ISR@Handler_Select:
  1669                           	callstack 0
  1670  000026                     RB5_ISR@Handler_Select:
  1671                           	callstack 0
  1672  000026                     RB6_ISR@Handler_Select:
  1673                           	callstack 0
  1674  000026                     RB7_ISR@Handler_Select:
  1675                           	callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x25
  1678  000026                     	ds	1
  1679  000027                     ??_InterruptManagerLow:
  1680                           
  1681                           ; 1 bytes @ 0x26
  1682  000027                     	ds	3
  1683  00002A                     ??_memset:
  1684  00002A                     ??_adc_channel_pin_config_as_input:
  1685  00002A                     ??_strcpy:
  1686  00002A                     ??_strncmp:
  1687  00002A                     ?_strlen:
  1688                           	callstack 0
  1689  00002A                     ?_isupper:
  1690                           	callstack 0
  1691  00002A                     ADC_Get_Conversion_Results@ERRORSTATUS:
  1692                           	callstack 0
  1693  00002A                     ___aomod@counter:
  1694                           	callstack 0
  1695  00002A                     ___awmod@counter:
  1696                           	callstack 0
  1697  00002A                     ___fltol@sign1:
  1698                           	callstack 0
  1699  00002A                     fputs@c:
  1700                           	callstack 0
  1701  00002A                     ADC_Start_Conversion@_adc:
  1702                           	callstack 0
  1703  00002A                     adc_select_result_formate@_adc:
  1704                           	callstack 0
  1705  00002A                     adc_select_voltage_reference@_adc:
  1706                           	callstack 0
  1707  00002A                     async_Tx_config@_tx_obj:
  1708                           	callstack 0
  1709  00002A                     Rx_config_interrupt@_rx_obj:
  1710                           	callstack 0
  1711  00002A                     GPIO_Pin_Direction_Initialize@_pin_config:
  1712                           	callstack 0
  1713  00002A                     GPIO_Pin_Write_Logic@_pin_config:
  1714                           	callstack 0
  1715  00002A                     GPIO_Pin_Toggle_Logic@_pin_config:
  1716                           	callstack 0
  1717  00002A                     ___wmul@product:
  1718                           	callstack 0
  1719  00002A                     isupper@c:
  1720                           	callstack 0
  1721  00002A                     strlen@s:
  1722                           	callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x29
  1725  00002A                     	ds	1
  1726  00002B                     ___aomod@sign:
  1727                           	callstack 0
  1728  00002B                     ___awmod@sign:
  1729                           	callstack 0
  1730  00002B                     ___fltol@exp1:
  1731                           	callstack 0
  1732  00002B                     fputs@i:
  1733                           	callstack 0
  1734                           
  1735                           ; 2 bytes @ 0x2A
  1736  00002B                     	ds	1
  1737  00002C                     ??_ADC_select_channel:
  1738  00002C                     ADC_Start_Conversion@ERRORSTATUS:
  1739                           	callstack 0
  1740  00002C                     async_Tx_config@ret_val:
  1741                           	callstack 0
  1742  00002C                     Rx_config_interrupt@ret_val:
  1743                           	callstack 0
  1744  00002C                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
  1745                           	callstack 0
  1746  00002C                     GPIO_Pin_Write_Logic@logic:
  1747                           	callstack 0
  1748                           
  1749                           ; 1 bytes @ 0x2B
  1750  00002C                     	ds	1
  1751  00002D                     
  1752                           ; 1 bytes @ 0x2C
  1753 ;;
  1754 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1755 ;;
  1756 ;; *************** function _main *****************
  1757 ;; Defined at:
  1758 ;;		line 112 in file "application.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2  1707[None  ] int 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;Total ram usage:        0 bytes
  1777 ;; Hardware stack levels required when called:   20
  1778 ;; This function calls:
  1779 ;;		_GPIO_Pin_Toggle_Logic
  1780 ;;		_application_intialize
  1781 ;;		_battery_level
  1782 ;;		_lcd_4bit_send_string_data_pos
  1783 ;; This function is called by:
  1784 ;;		Startup code after reset
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text0
  1789  005FC2                     __ptext0:
  1790                           	callstack 0
  1791  005FC2                     _main:
  1792                           	callstack 11
  1793  005FC2                     
  1794                           ;application.c: 115:     application_intialize();
  1795  005FC2  EC4E  F02D         	call	_application_intialize	;wreg free
  1796                           
  1797                           ;application.c: 116:     GPIO_Pin_Toggle_Logic(&pind2);
  1798  005FC6  0E55               	movlw	low _pind2
  1799  005FC8  6E2A               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1800  005FCA  0E00               	movlw	high _pind2
  1801  005FCC  6E2B               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1802  005FCE  EC9C  F02B         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1803  005FD2                     
  1804                           ;application.c: 117:     lcd_4bit_send_string_data_pos(&lcd1,1,1,"battery: ");
  1805  005FD2  0EE7               	movlw	low _lcd1
  1806  005FD4  0100               	movlb	0	; () banked
  1807  005FD6  6F96               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1808  005FD8  0E01               	movlw	high _lcd1
  1809  005FDA  6F97               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1810  005FDC  0E01               	movlw	1
  1811  005FDE  6F98               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1812  005FE0  0E01               	movlw	1
  1813  005FE2  6F99               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1814  005FE4  0E6C               	movlw	low STR_11
  1815  005FE6  6F9A               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1816  005FE8  0E10               	movlw	high STR_11
  1817  005FEA  6F9B               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1818  005FEC  EC49  F029         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1819  005FF0                     l13843:
  1820                           
  1821                           ;application.c: 119:     {;application.c: 120:         GPIO_Pin_Toggle_Logic(&pind1);
  1822  005FF0  0E54               	movlw	low _pind1
  1823  005FF2  6E2A               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1824  005FF4  0E00               	movlw	high _pind1
  1825  005FF6  6E2B               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1826  005FF8  EC9C  F02B         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1827  005FFC                     
  1828                           ;application.c: 121:         battery_level();
  1829  005FFC  EC05  F01E         	call	_battery_level	;wreg free
  1830  006000  EFF8  F02F         	goto	l13843
  1831  006004  EF43  F001         	goto	start
  1832  006008                     __end_of_main:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _battery_level *****************
  1836 ;; Defined at:
  1837 ;;		line 195 in file "application.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:   19
  1858 ;; This function calls:
  1859 ;;		_ADC_Get_Conversion_Blocking
  1860 ;;		_GPIO_Pin_Write_Logic
  1861 ;;		___fldiv
  1862 ;;		___flge
  1863 ;;		___wmul
  1864 ;;		___xxtofl
  1865 ;;		_convert_float32_to_string
  1866 ;;		_lcd_4bit_send_string_data_pos
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text1
  1873  003C0A                     __ptext1:
  1874                           	callstack 0
  1875  003C0A                     _battery_level:
  1876                           	callstack 11
  1877  003C0A                     
  1878                           ;application.c: 197:         ADC_Get_Conversion_Blocking(&battery_adc,ADC_CHANEL_AN0,&ba
      +                          ttery_volt_adc_read);
  1879  003C0A  0EF3               	movlw	low _battery_adc
  1880  003C0C  0100               	movlb	0	; () banked
  1881  003C0E  6F89               	movwf	ADC_Get_Conversion_Blocking@_adc& (0+255),b
  1882  003C10  0E01               	movlw	high _battery_adc
  1883  003C12  6F8A               	movwf	(ADC_Get_Conversion_Blocking@_adc+1)& (0+255),b
  1884  003C14  0E00               	movlw	0
  1885  003C16  6F8B               	movwf	ADC_Get_Conversion_Blocking@_channel& (0+255),b
  1886  003C18  0E44               	movlw	low _battery_volt_adc_read
  1887  003C1A  6F8C               	movwf	ADC_Get_Conversion_Blocking@_result& (0+255),b
  1888  003C1C  0E00               	movlw	high _battery_volt_adc_read
  1889  003C1E  6F8D               	movwf	(ADC_Get_Conversion_Blocking@_result+1)& (0+255),b
  1890  003C20  ECDB  F02A         	call	_ADC_Get_Conversion_Blocking	;wreg free
  1891  003C24                     
  1892                           ;application.c: 198:         battery_volt_f=(float32)(battery_volt_adc_read*13)/1024;
  1893  003C24  C044  F080         	movff	_battery_volt_adc_read,___wmul@multiplier
  1894  003C28  C045  F081         	movff	_battery_volt_adc_read+1,___wmul@multiplier+1
  1895  003C2C  0E00               	movlw	0
  1896  003C2E  0100               	movlb	0	; () banked
  1897  003C30  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1898  003C32  0E0D               	movlw	13
  1899  003C34  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1900  003C36  EC47  F031         	call	___wmul	;wreg free
  1901  003C3A  0100               	movlb	0	; () banked
  1902  003C3C  C080  F084         	movff	?___wmul,___xxtofl@val
  1903  003C40  C081  F085         	movff	?___wmul+1,___xxtofl@val+1
  1904  003C44  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
  1905  003C46  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
  1906  003C48  0E00               	movlw	0
  1907  003C4A  EC64  F01C         	call	___xxtofl
  1908  003C4E  C084  F092         	movff	?___xxtofl,___fldiv@b
  1909  003C52  C085  F093         	movff	?___xxtofl+1,___fldiv@b+1
  1910  003C56  C086  F094         	movff	?___xxtofl+2,___fldiv@b+2
  1911  003C5A  C087  F095         	movff	?___xxtofl+3,___fldiv@b+3
  1912  003C5E  0E00               	movlw	0
  1913  003C60  0100               	movlb	0	; () banked
  1914  003C62  6F96               	movwf	___fldiv@a& (0+255),b
  1915  003C64  0E00               	movlw	0
  1916  003C66  6F97               	movwf	(___fldiv@a+1)& (0+255),b
  1917  003C68  0E80               	movlw	128
  1918  003C6A  6F98               	movwf	(___fldiv@a+2)& (0+255),b
  1919  003C6C  0E44               	movlw	68
  1920  003C6E  6F99               	movwf	(___fldiv@a+3)& (0+255),b
  1921  003C70  EC14  F017         	call	___fldiv	;wreg free
  1922  003C74  C092  F117         	movff	?___fldiv,_battery_volt_f
  1923  003C78  C093  F118         	movff	?___fldiv+1,_battery_volt_f+1
  1924  003C7C  C094  F119         	movff	?___fldiv+2,_battery_volt_f+2
  1925  003C80  C095  F11A         	movff	?___fldiv+3,_battery_volt_f+3
  1926  003C84                     
  1927                           ;application.c: 199:         convert_float32_to_string( battery_volt_f,battery_string);
  1928  003C84  C117  F198         	movff	_battery_volt_f,convert_float32_to_string@value
  1929  003C88  C118  F199         	movff	_battery_volt_f+1,convert_float32_to_string@value+1
  1930  003C8C  C119  F19A         	movff	_battery_volt_f+2,convert_float32_to_string@value+2
  1931  003C90  C11A  F19B         	movff	_battery_volt_f+3,convert_float32_to_string@value+3
  1932  003C94  0E4F               	movlw	low _battery_string
  1933  003C96  0101               	movlb	1	; () banked
  1934  003C98  6F9C               	movwf	convert_float32_to_string@str& (0+255),b
  1935  003C9A  0E01               	movlw	high _battery_string
  1936  003C9C  6F9D               	movwf	(convert_float32_to_string@str+1)& (0+255),b
  1937  003C9E  EC0D  F025         	call	_convert_float32_to_string	;wreg free
  1938  003CA2                     
  1939                           ;application.c: 201:         lcd_4bit_send_string_data_pos(&lcd1,1,9,"       ");
  1940  003CA2  0EE7               	movlw	low _lcd1
  1941  003CA4  0100               	movlb	0	; () banked
  1942  003CA6  6F96               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1943  003CA8  0E01               	movlw	high _lcd1
  1944  003CAA  6F97               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1945  003CAC  0E01               	movlw	1
  1946  003CAE  6F98               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1947  003CB0  0E09               	movlw	9
  1948  003CB2  6F99               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1949  003CB4  0E1D               	movlw	low (STR_15+9)
  1950  003CB6  6F9A               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1951  003CB8  0E10               	movlw	high (STR_15+9)
  1952  003CBA  6F9B               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1953  003CBC  EC49  F029         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1954  003CC0                     
  1955                           ;application.c: 202:         lcd_4bit_send_string_data_pos(&lcd1,1,10,battery_string);
  1956  003CC0  0EE7               	movlw	low _lcd1
  1957  003CC2  0100               	movlb	0	; () banked
  1958  003CC4  6F96               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1959  003CC6  0E01               	movlw	high _lcd1
  1960  003CC8  6F97               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1961  003CCA  0E01               	movlw	1
  1962  003CCC  6F98               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1963  003CCE  0E0A               	movlw	10
  1964  003CD0  6F99               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1965  003CD2  0E4F               	movlw	low _battery_string
  1966  003CD4  6F9A               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1967  003CD6  0E01               	movlw	high _battery_string
  1968  003CD8  6F9B               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1969  003CDA  EC49  F029         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1970  003CDE                     
  1971                           ;application.c: 203:         if(battery_volt_f<11.1)
  1972  003CDE  C117  F099         	movff	_battery_volt_f,___flge@ff1
  1973  003CE2  C118  F09A         	movff	_battery_volt_f+1,___flge@ff1+1
  1974  003CE6  C119  F09B         	movff	_battery_volt_f+2,___flge@ff1+2
  1975  003CEA  C11A  F09C         	movff	_battery_volt_f+3,___flge@ff1+3
  1976  003CEE  0E9A               	movlw	154
  1977  003CF0  0100               	movlb	0	; () banked
  1978  003CF2  6F9D               	movwf	___flge@ff2& (0+255),b
  1979  003CF4  0E99               	movlw	153
  1980  003CF6  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
  1981  003CF8  0E31               	movlw	49
  1982  003CFA  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
  1983  003CFC  0E41               	movlw	65
  1984  003CFE  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
  1985  003D00  EC25  F023         	call	___flge	;wreg free
  1986  003D04  0100               	movlb	0	; () banked
  1987  003D06  B0D8               	btfsc	status,0,c
  1988  003D08  EF88  F01E         	goto	u15911
  1989  003D0C  EF8A  F01E         	goto	u15910
  1990  003D10                     u15911:
  1991  003D10  EFB1  F01E         	goto	l13281
  1992  003D14                     u15910:
  1993  003D14                     
  1994                           ; BSR set to: 0
  1995                           ;application.c: 204:         {;application.c: 205:            lcd_4bit_send_string_data_
      +                          pos(&lcd1,2,0,"                ");
  1996  003D14  0EE7               	movlw	low _lcd1
  1997  003D16  6F96               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1998  003D18  0E01               	movlw	high _lcd1
  1999  003D1A  6F97               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  2000  003D1C  0E02               	movlw	2
  2001  003D1E  6F98               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  2002  003D20  0E00               	movlw	0
  2003  003D22  6F99               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  2004  003D24  0E14               	movlw	low STR_15
  2005  003D26  6F9A               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  2006  003D28  0E10               	movlw	high STR_15
  2007  003D2A  6F9B               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  2008  003D2C  EC49  F029         	call	_lcd_4bit_send_string_data_pos	;wreg free
  2009                           
  2010                           ;application.c: 206:            lcd_4bit_send_string_data_pos(&lcd1,2,3,"battery low");
  2011  003D30  0EE7               	movlw	low _lcd1
  2012  003D32  0100               	movlb	0	; () banked
  2013  003D34  6F96               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  2014  003D36  0E01               	movlw	high _lcd1
  2015  003D38  6F97               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  2016  003D3A  0E02               	movlw	2
  2017  003D3C  6F98               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  2018  003D3E  0E03               	movlw	3
  2019  003D40  6F99               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  2020  003D42  0E54               	movlw	low STR_16
  2021  003D44  6F9A               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  2022  003D46  0E10               	movlw	high STR_16
  2023  003D48  6F9B               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  2024  003D4A  EC49  F029         	call	_lcd_4bit_send_string_data_pos	;wreg free
  2025  003D4E                     
  2026                           ;application.c: 207:            GPIO_Pin_Write_Logic(&pind0,GPIO_HIGH);
  2027  003D4E  0E53               	movlw	low _pind0
  2028  003D50  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2029  003D52  0E00               	movlw	high _pind0
  2030  003D54  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2031  003D56  0E01               	movlw	1
  2032  003D58  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2033  003D5A  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
  2034                           
  2035                           ;application.c: 208:         }
  2036  003D5E  EFC7  F01E         	goto	l1740
  2037  003D62                     l13281:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;application.c: 210:         {;application.c: 211:             lcd_4bit_send_string_data
      +                          _pos(&lcd1,2,0,"                ");
  2041  003D62  0EE7               	movlw	low _lcd1
  2042  003D64  6F96               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  2043  003D66  0E01               	movlw	high _lcd1
  2044  003D68  6F97               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  2045  003D6A  0E02               	movlw	2
  2046  003D6C  6F98               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  2047  003D6E  0E00               	movlw	0
  2048  003D70  6F99               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  2049  003D72  0E14               	movlw	low STR_15
  2050  003D74  6F9A               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  2051  003D76  0E10               	movlw	high STR_15
  2052  003D78  6F9B               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  2053  003D7A  EC49  F029         	call	_lcd_4bit_send_string_data_pos	;wreg free
  2054  003D7E                     
  2055                           ;application.c: 212:             GPIO_Pin_Write_Logic(&pind0,GPIO_LOW);
  2056  003D7E  0E53               	movlw	low _pind0
  2057  003D80  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  2058  003D82  0E00               	movlw	high _pind0
  2059  003D84  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2060  003D86  0E00               	movlw	0
  2061  003D88  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2062  003D8A  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
  2063  003D8E                     l1740:
  2064  003D8E  0012               	return		;funcret
  2065  003D90                     __end_of_battery_level:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _lcd_4bit_send_string_data_pos *****************
  2069 ;; Defined at:
  2070 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  lcd             2   22[BANK0 ] PTR const struct .
  2073 ;;		 -> lcd1(6), 
  2074 ;;  row             1   24[BANK0 ] unsigned char 
  2075 ;;  colum           1   25[BANK0 ] unsigned char 
  2076 ;;  str             2   26[BANK0 ] PTR unsigned char 
  2077 ;;		 -> STR_17(17), STR_16(12), STR_15(17), STR_14(8), 
  2078 ;;		 -> battery_string(9), STR_13(15), STR_12(15), longtude(13), 
  2079 ;;		 -> latitude(13), STR_11(10), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  ERRORSTATUS     1    0        unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      unsigned char 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2091 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;Total ram usage:        7 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:   14
  2098 ;; This function calls:
  2099 ;;		_lcd_4bit_send_char_data
  2100 ;;		_lcd_4bits_set_courser
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;;		_battery_level
  2104 ;;		_GPS_Service
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text2
  2109  005292                     __ptext2:
  2110                           	callstack 0
  2111  005292                     _lcd_4bit_send_string_data_pos:
  2112                           	callstack 16
  2113  005292                     
  2114                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
  2115  005292  0100               	movlb	0	; () banked
  2116  005294  5196               	movf	lcd_4bit_send_string_data_pos@lcd& (0+255),w,b
  2117  005296  1197               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),w,b
  2118  005298  B4D8               	btfsc	status,2,c
  2119  00529A  EF51  F029         	goto	u15491
  2120  00529E  EF53  F029         	goto	u15490
  2121  0052A2                     u15491:
  2122  0052A2  EF5C  F029         	goto	l12963
  2123  0052A6                     u15490:
  2124  0052A6                     
  2125                           ; BSR set to: 0
  2126  0052A6  519A               	movf	lcd_4bit_send_string_data_pos@str& (0+255),w,b
  2127  0052A8  119B               	iorwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),w,b
  2128  0052AA  A4D8               	btfss	status,2,c
  2129  0052AC  EF5A  F029         	goto	u15501
  2130  0052B0  EF5C  F029         	goto	u15500
  2131  0052B4                     u15501:
  2132  0052B4  EF5E  F029         	goto	l12965
  2133  0052B8                     u15500:
  2134  0052B8                     l12963:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
  2138  0052B8  EF9F  F029         	goto	l136
  2139  0052BC                     l12965:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
  2143  0052BC  C096  F08F         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
  2144  0052C0  C097  F090         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  2145  0052C4  C098  F091         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
  2146  0052C8  C099  F092         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
  2147  0052CC  ECE6  F027         	call	_lcd_4bits_set_courser	;wreg free
  2148                           
  2149                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  2150  0052D0  EF86  F029         	goto	l12971
  2151  0052D4                     l12967:
  2152                           
  2153                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
  2154  0052D4  C096  F08B         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
  2155  0052D8  C097  F08C         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2156  0052DC  C09A  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  2157  0052E0  C09B  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  2158  0052E4  0E00               	movlw	low (__smallconst shr (0+16))
  2159  0052E6  6EF8               	movwf	tblptru,c
  2160  0052E8  0E0F               	movlw	(high __ramtop+-1)
  2161  0052EA  64F7               	cpfsgt	tblptrh,c
  2162  0052EC  D003               	bra	u15517
  2163  0052EE  0008               	tblrd		*
  2164  0052F0  50F5               	movf	tablat,w,c
  2165  0052F2  D005               	bra	u15510
  2166  0052F4                     u15517:
  2167  0052F4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2168  0052F8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2169  0052FC  50EF               	movf	indf0,w,c
  2170  0052FE                     u15510:
  2171  0052FE  0100               	movlb	0	; () banked
  2172  005300  6F8D               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  2173  005302  EC1B  F02D         	call	_lcd_4bit_send_char_data	;wreg free
  2174  005306  0100               	movlb	0	; () banked
  2175  005308  4B9A               	infsnz	lcd_4bit_send_string_data_pos@str& (0+255),f,b
  2176  00530A  2B9B               	incf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),f,b
  2177  00530C                     l12971:
  2178                           
  2179                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  2180  00530C  C09A  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  2181  005310  C09B  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  2182  005314  0E00               	movlw	low (__smallconst shr (0+16))
  2183  005316  6EF8               	movwf	tblptru,c
  2184  005318  0E0F               	movlw	(high __ramtop+-1)
  2185  00531A  64F7               	cpfsgt	tblptrh,c
  2186  00531C  D003               	bra	u15527
  2187  00531E  0008               	tblrd		*
  2188  005320  50F5               	movf	tablat,w,c
  2189  005322  D005               	bra	u15520
  2190  005324                     u15527:
  2191  005324  CFF6 FFE9          	movff	tblptrl,fsr0l
  2192  005328  CFF7 FFEA          	movff	tblptrh,fsr0h
  2193  00532C  50EF               	movf	indf0,w,c
  2194  00532E                     u15520:
  2195  00532E  0900               	iorlw	0
  2196  005330  A4D8               	btfss	status,2,c
  2197  005332  EF9D  F029         	goto	u15531
  2198  005336  EF9F  F029         	goto	u15530
  2199  00533A                     u15531:
  2200  00533A  EF6A  F029         	goto	l12967
  2201  00533E                     u15530:
  2202  00533E                     l136:
  2203  00533E  0012               	return		;funcret
  2204  005340                     __end_of_lcd_4bit_send_string_data_pos:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _lcd_4bits_set_courser *****************
  2208 ;; Defined at:
  2209 ;;		line 591 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  lcd             2   15[BANK0 ] PTR const struct .
  2212 ;;		 -> lcd1(6), 
  2213 ;;  row             1   17[BANK0 ] unsigned char 
  2214 ;;  colum           1   18[BANK0 ] unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  ERRORSTATUS     1    0        unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      unsigned char 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        7 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:   13
  2233 ;; This function calls:
  2234 ;;		_lcd_4bit_send_command
  2235 ;; This function is called by:
  2236 ;;		_lcd_4bit_send_string_data_pos
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text3
  2241  004FCC                     __ptext3:
  2242                           	callstack 0
  2243  004FCC                     _lcd_4bits_set_courser:
  2244                           	callstack 16
  2245  004FCC                     
  2246                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 594:         if ( ((void*)0)==lcd)
  2247  004FCC  0100               	movlb	0	; () banked
  2248  004FCE  518F               	movf	lcd_4bits_set_courser@lcd& (0+255),w,b
  2249  004FD0  1190               	iorwf	(lcd_4bits_set_courser@lcd+1)& (0+255),w,b
  2250  004FD2  A4D8               	btfss	status,2,c
  2251  004FD4  EFEE  F027         	goto	u15211
  2252  004FD8  EFF0  F027         	goto	u15210
  2253  004FDC                     u15211:
  2254  004FDC  EFF2  F027         	goto	l12691
  2255  004FE0                     u15210:
  2256  004FE0                     
  2257                           ; BSR set to: 0
  2258                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 597:     }
  2259  004FE0  EF3E  F028         	goto	l262
  2260  004FE4                     l12691:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 599:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 60
      +                          0:             colum--;
  2264  004FE4  0792               	decf	lcd_4bits_set_courser@colum& (0+255),f,b
  2265                           
  2266                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 601:             switch (row)
  2267  004FE6  EF21  F028         	goto	l12703
  2268  004FEA                     l12693:
  2269                           
  2270                           ; BSR set to: 0
  2271  004FEA  C08F  F08B         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2272  004FEE  C090  F08C         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2273  004FF2  5192               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  2274  004FF4  0F80               	addlw	128
  2275  004FF6  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2276  004FF8  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
  2277  004FFC  EF3E  F028         	goto	l262
  2278  005000                     l12695:
  2279                           
  2280                           ; BSR set to: 0
  2281  005000  C08F  F08B         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2282  005004  C090  F08C         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2283  005008  5192               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  2284  00500A  0FC0               	addlw	192
  2285  00500C  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2286  00500E  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
  2287  005012  EF3E  F028         	goto	l262
  2288  005016                     l12697:
  2289                           
  2290                           ; BSR set to: 0
  2291  005016  C08F  F08B         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2292  00501A  C090  F08C         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2293  00501E  5192               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  2294  005020  0F94               	addlw	148
  2295  005022  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2296  005024  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
  2297  005028  EF3E  F028         	goto	l262
  2298  00502C                     l12699:
  2299                           
  2300                           ; BSR set to: 0
  2301  00502C  C08F  F08B         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  2302  005030  C090  F08C         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  2303  005034  5192               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  2304  005036  0FD4               	addlw	212
  2305  005038  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2306  00503A  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
  2307  00503E  EF3E  F028         	goto	l262
  2308  005042                     l12703:
  2309                           
  2310                           ; BSR set to: 0
  2311  005042  5191               	movf	lcd_4bits_set_courser@row& (0+255),w,b
  2312  005044  6F93               	movwf	??_lcd_4bits_set_courser& (0+255),b
  2313  005046  6B94               	clrf	(??_lcd_4bits_set_courser+1)& (0+255),b
  2314                           
  2315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 1, Range of values is 0 to 0
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            4     3 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322  005048  5194               	movf	(??_lcd_4bits_set_courser+1)& (0+255),w,b
  2323  00504A  0A00               	xorlw	0	; case 0
  2324  00504C  B4D8               	btfsc	status,2,c
  2325  00504E  EF2B  F028         	goto	l14069
  2326  005052  EF3E  F028         	goto	l262
  2327  005056                     l14069:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ; Switch size 1, requested type "simple"
  2331                           ; Number of cases is 4, Range of values is 1 to 4
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte           13     7 (average)
  2335                           ;	Chosen strategy is simple_byte
  2336  005056  5193               	movf	??_lcd_4bits_set_courser& (0+255),w,b
  2337  005058  0A01               	xorlw	1	; case 1
  2338  00505A  B4D8               	btfsc	status,2,c
  2339  00505C  EFF5  F027         	goto	l12693
  2340  005060  0A03               	xorlw	3	; case 2
  2341  005062  B4D8               	btfsc	status,2,c
  2342  005064  EF00  F028         	goto	l12695
  2343  005068  0A01               	xorlw	1	; case 3
  2344  00506A  B4D8               	btfsc	status,2,c
  2345  00506C  EF0B  F028         	goto	l12697
  2346  005070  0A07               	xorlw	7	; case 4
  2347  005072  B4D8               	btfsc	status,2,c
  2348  005074  EF16  F028         	goto	l12699
  2349  005078  EF3E  F028         	goto	l262
  2350  00507C                     l262:
  2351  00507C  0012               	return		;funcret
  2352  00507E                     __end_of_lcd_4bits_set_courser:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _lcd_4bit_send_char_data *****************
  2356 ;; Defined at:
  2357 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  lcd             2   11[BANK0 ] PTR const struct .
  2360 ;;		 -> lcd1(6), 
  2361 ;;  data            1   13[BANK0 ] unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  ERRORSTATUS     1    0        unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      unsigned char 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2373 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;Total ram usage:        4 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   12
  2380 ;; This function calls:
  2381 ;;		_GPIO_Pin_Write_Logic
  2382 ;;		_lcd_4bits_send_enable_signal
  2383 ;;		_lcd_send_4bits
  2384 ;; This function is called by:
  2385 ;;		_lcd_4bit_send_string_data_pos
  2386 ;;		_lcd_4bit_send_string_data
  2387 ;;		_lcd_4bit_send_custom_char
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text4
  2392  005A36                     __ptext4:
  2393                           	callstack 0
  2394  005A36                     _lcd_4bit_send_char_data:
  2395                           	callstack 17
  2396  005A36                     
  2397                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  2398  005A36  0100               	movlb	0	; () banked
  2399  005A38  518B               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  2400  005A3A  118C               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  2401  005A3C  A4D8               	btfss	status,2,c
  2402  005A3E  EF23  F02D         	goto	u15201
  2403  005A42  EF25  F02D         	goto	u15200
  2404  005A46                     u15201:
  2405  005A46  EF27  F02D         	goto	l12681
  2406  005A4A                     u15200:
  2407  005A4A                     
  2408                           ; BSR set to: 0
  2409                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  2410  005A4A  EF4D  F02D         	goto	l111
  2411  005A4E                     l12681:
  2412                           
  2413                           ; BSR set to: 0
  2414  005A4E  C08B  F02A         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  2415  005A52  C08C  F02B         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  2416  005A56  0E01               	movlw	1
  2417  005A58  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2418  005A5A  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
  2419                           
  2420                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  2421  005A5E  C08B  F087         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2422  005A62  C08C  F088         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2423  005A66  0100               	movlb	0	; () banked
  2424  005A68  398D               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  2425  005A6A  0B0F               	andlw	15
  2426  005A6C  6F89               	movwf	lcd_send_4bits@data_command& (0+255),b
  2427  005A6E  EC1E  F02B         	call	_lcd_send_4bits	;wreg free
  2428                           
  2429                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  2430  005A72  C08B  F087         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  2431  005A76  C08C  F088         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2432  005A7A  EC4E  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
  2433                           
  2434                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  2435  005A7E  C08B  F087         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2436  005A82  C08C  F088         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2437  005A86  C08D  F089         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  2438  005A8A  EC1E  F02B         	call	_lcd_send_4bits	;wreg free
  2439                           
  2440                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  2441  005A8E  C08B  F087         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  2442  005A92  C08C  F088         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2443  005A96  EC4E  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
  2444  005A9A                     l111:
  2445  005A9A  0012               	return		;funcret
  2446  005A9C                     __end_of_lcd_4bit_send_char_data:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _convert_float32_to_string *****************
  2450 ;; Defined at:
  2451 ;;		line 481 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  value           4   64[BANK1 ] float 
  2454 ;;  str             2   68[BANK1 ] PTR unsigned char 
  2455 ;;		 -> battery_string(9), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  temp_string     9   70[BANK1 ] unsigned char [9]
  2458 ;;  data_counter    1   80[BANK1 ] unsigned char 
  2459 ;;  ERRORSTATUS     1    0        unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2469 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;Total ram usage:       17 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:   18
  2476 ;; This function calls:
  2477 ;;		_memset
  2478 ;;		_sprintf
  2479 ;; This function is called by:
  2480 ;;		_battery_level
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text5
  2485  004A1A                     __ptext5:
  2486                           	callstack 0
  2487  004A1A                     _convert_float32_to_string:
  2488                           	callstack 11
  2489  004A1A                     
  2490                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 484:     uint8 temp_string[9]={0};
  2491  004A1A  EE21  F09E         	lfsr	2,convert_float32_to_string@temp_string
  2492  004A1E  0E08               	movlw	8
  2493  004A20                     u15581:
  2494  004A20  6ADE               	clrf	postinc2,c
  2495  004A22  06E8               	decf	wreg,f,c
  2496  004A24  E2FD               	bc	u15581
  2497  004A26                     
  2498                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 485:     uint8 data_counter=0;
  2499  004A26  0E00               	movlw	0
  2500  004A28  0101               	movlb	1	; () banked
  2501  004A2A  6FA8               	movwf	convert_float32_to_string@data_counter& (0+255),b
  2502  004A2C                     
  2503                           ; BSR set to: 1
  2504                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 486:     if ( ((void*)0)==str)
  2505  004A2C  519C               	movf	convert_float32_to_string@str& (0+255),w,b
  2506  004A2E  119D               	iorwf	(convert_float32_to_string@str+1)& (0+255),w,b
  2507  004A30  A4D8               	btfss	status,2,c
  2508  004A32  EF1D  F025         	goto	u15591
  2509  004A36  EF1F  F025         	goto	u15590
  2510  004A3A                     u15591:
  2511  004A3A  EF21  F025         	goto	l13023
  2512  004A3E                     u15590:
  2513  004A3E                     
  2514                           ; BSR set to: 1
  2515                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 489:     }
  2516  004A3E  EF7D  F025         	goto	l223
  2517  004A42                     l13023:
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 491:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 49
      +                          2:          memset(str,' ',8);
  2521  004A42  C19C  F080         	movff	convert_float32_to_string@str,memset@dest
  2522  004A46  C19D  F081         	movff	convert_float32_to_string@str+1,memset@dest+1
  2523  004A4A  0E00               	movlw	0
  2524  004A4C  0100               	movlb	0	; () banked
  2525  004A4E  6F83               	movwf	(memset@c+1)& (0+255),b
  2526  004A50  0E20               	movlw	32
  2527  004A52  6F82               	movwf	memset@c& (0+255),b
  2528  004A54  0E00               	movlw	0
  2529  004A56  6F85               	movwf	(memset@n+1)& (0+255),b
  2530  004A58  0E08               	movlw	8
  2531  004A5A  6F84               	movwf	memset@n& (0+255),b
  2532  004A5C  ECC8  F01E         	call	_memset	;wreg free
  2533  004A60                     
  2534                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 493:          str[8]='\0';
  2535  004A60  0101               	movlb	1	; () banked
  2536  004A62  EE20 F008          	lfsr	2,8
  2537  004A66  519C               	movf	convert_float32_to_string@str& (0+255),w,b
  2538  004A68  26D9               	addwf	fsr2l,f,c
  2539  004A6A  519D               	movf	(convert_float32_to_string@str+1)& (0+255),w,b
  2540  004A6C  22DA               	addwfc	fsr2h,f,c
  2541  004A6E  0E00               	movlw	0
  2542  004A70  6EDF               	movwf	indf2,c
  2543  004A72                     
  2544                           ; BSR set to: 1
  2545                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 494:          sprintf((char*)temp_string,"%f",valu
      +                          e);
  2546  004A72  0E9E               	movlw	low convert_float32_to_string@temp_string
  2547  004A74  6F90               	movwf	sprintf@s& (0+255),b
  2548  004A76  0E01               	movlw	high convert_float32_to_string@temp_string
  2549  004A78  6F91               	movwf	(sprintf@s+1)& (0+255),b
  2550  004A7A  0E89               	movlw	low STR_9
  2551  004A7C  6F92               	movwf	sprintf@fmt& (0+255),b
  2552  004A7E  0E10               	movlw	high STR_9
  2553  004A80  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  2554  004A82  C198  F194         	movff	convert_float32_to_string@value,?_sprintf+4
  2555  004A86  C199  F195         	movff	convert_float32_to_string@value+1,?_sprintf+5
  2556  004A8A  C19A  F196         	movff	convert_float32_to_string@value+2,?_sprintf+6
  2557  004A8E  C19B  F197         	movff	convert_float32_to_string@value+3,?_sprintf+7
  2558  004A92  ECD2  F02E         	call	_sprintf	;wreg free
  2559                           
  2560                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 495:          while(temp_string[data_counter]!='\0
      +                          ')
  2561  004A96  EF5C  F025         	goto	l13033
  2562  004A9A                     l13029:
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 496:          {;ECU/LCD_for_test_gps/ecu_char_lcd.
      +                          c: 497:             str[data_counter] =temp_string[data_counter];
  2566  004A9A  0E9E               	movlw	low convert_float32_to_string@temp_string
  2567  004A9C  25A8               	addwf	convert_float32_to_string@data_counter& (0+255),w,b
  2568  004A9E  6ED9               	movwf	fsr2l,c
  2569  004AA0  6ADA               	clrf	fsr2h,c
  2570  004AA2  0E01               	movlw	high convert_float32_to_string@temp_string
  2571  004AA4  22DA               	addwfc	fsr2h,f,c
  2572  004AA6  51A8               	movf	convert_float32_to_string@data_counter& (0+255),w,b
  2573  004AA8  259C               	addwf	convert_float32_to_string@str& (0+255),w,b
  2574  004AAA  6EE1               	movwf	fsr1l,c
  2575  004AAC  0E00               	movlw	0
  2576  004AAE  219D               	addwfc	(convert_float32_to_string@str+1)& (0+255),w,b
  2577  004AB0  6EE2               	movwf	fsr1h,c
  2578  004AB2  CFDF FFE7          	movff	indf2,indf1
  2579  004AB6                     
  2580                           ; BSR set to: 1
  2581                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 498:             data_counter++;
  2582  004AB6  2BA8               	incf	convert_float32_to_string@data_counter& (0+255),f,b
  2583  004AB8                     l13033:
  2584                           
  2585                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 495:          while(temp_string[data_counter]!='\0
      +                          ')
  2586  004AB8  0E9E               	movlw	low convert_float32_to_string@temp_string
  2587  004ABA  0101               	movlb	1	; () banked
  2588  004ABC  25A8               	addwf	convert_float32_to_string@data_counter& (0+255),w,b
  2589  004ABE  6ED9               	movwf	fsr2l,c
  2590  004AC0  6ADA               	clrf	fsr2h,c
  2591  004AC2  0E01               	movlw	high convert_float32_to_string@temp_string
  2592  004AC4  22DA               	addwfc	fsr2h,f,c
  2593  004AC6  50DF               	movf	indf2,w,c
  2594  004AC8  A4D8               	btfss	status,2,c
  2595  004ACA  EF69  F025         	goto	u15601
  2596  004ACE  EF6B  F025         	goto	u15600
  2597  004AD2                     u15601:
  2598  004AD2  EF4D  F025         	goto	l13029
  2599  004AD6                     u15600:
  2600  004AD6                     
  2601                           ; BSR set to: 1
  2602                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 500:         sprintf(str,"%f",value);
  2603  004AD6  C19C  F190         	movff	convert_float32_to_string@str,sprintf@s
  2604  004ADA  C19D  F191         	movff	convert_float32_to_string@str+1,sprintf@s+1
  2605  004ADE  0E89               	movlw	low STR_9
  2606  004AE0  6F92               	movwf	sprintf@fmt& (0+255),b
  2607  004AE2  0E10               	movlw	high STR_9
  2608  004AE4  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  2609  004AE6  C198  F194         	movff	convert_float32_to_string@value,?_sprintf+4
  2610  004AEA  C199  F195         	movff	convert_float32_to_string@value+1,?_sprintf+5
  2611  004AEE  C19A  F196         	movff	convert_float32_to_string@value+2,?_sprintf+6
  2612  004AF2  C19B  F197         	movff	convert_float32_to_string@value+3,?_sprintf+7
  2613  004AF6  ECD2  F02E         	call	_sprintf	;wreg free
  2614  004AFA                     l223:
  2615  004AFA  0012               	return		;funcret
  2616  004AFC                     __end_of_convert_float32_to_string:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _sprintf *****************
  2620 ;; Defined at:
  2621 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  s               2   56[BANK1 ] PTR unsigned char 
  2624 ;;		 -> battery_string(9), convert_float32_to_string@temp_string(9), convert_uint16_to_string@temp_string(6), 
  2625 ;;  fmt             2   58[BANK1 ] PTR const unsigned char 
  2626 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2627 ;;		 -> STR_6(3), STR_5(3), 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  f               6  119[BANK0 ] struct _IO_FILE
  2630 ;;  ap              2  117[BANK0 ] PTR void [1]
  2631 ;;		 -> ?_sprintf(2), 
  2632 ;;  ret             2    0        int 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2   56[BANK1 ] int 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         0      10       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:       18 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:   17
  2649 ;; This function calls:
  2650 ;;		_vfprintf
  2651 ;; This function is called by:
  2652 ;;		_convert_float32_to_string
  2653 ;;		_convert_uint8_to_string
  2654 ;;		_convert_uint16_to_string
  2655 ;;		_convert_uint32_to_string
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text6
  2660  005DA4                     __ptext6:
  2661                           	callstack 0
  2662  005DA4                     _sprintf:
  2663                           	callstack 11
  2664  005DA4  0E94               	movlw	low (?_sprintf+4)
  2665  005DA6  0100               	movlb	0	; () banked
  2666  005DA8  6FF5               	movwf	sprintf@ap& (0+255),b
  2667  005DAA  0E01               	movlw	high (?_sprintf+4)
  2668  005DAC  6FF6               	movwf	(sprintf@ap+1)& (0+255),b
  2669  005DAE  C190  F0F7         	movff	sprintf@s,sprintf@f
  2670  005DB2  C191  F0F8         	movff	sprintf@s+1,sprintf@f+1
  2671  005DB6                     
  2672                           ; BSR set to: 0
  2673  005DB6  0E00               	movlw	0
  2674  005DB8  6FFA               	movwf	(sprintf@f+3)& (0+255),b
  2675  005DBA  0E00               	movlw	0
  2676  005DBC  6FF9               	movwf	(sprintf@f+2)& (0+255),b
  2677  005DBE                     
  2678                           ; BSR set to: 0
  2679  005DBE  0E00               	movlw	0
  2680  005DC0  6FFC               	movwf	(sprintf@f+5)& (0+255),b
  2681  005DC2  0E00               	movlw	0
  2682  005DC4  6FFB               	movwf	(sprintf@f+4)& (0+255),b
  2683  005DC6                     
  2684                           ; BSR set to: 0
  2685  005DC6  0EF7               	movlw	low sprintf@f
  2686  005DC8  6FEB               	movwf	vfprintf@fp& (0+255),b
  2687  005DCA  0E00               	movlw	high sprintf@f
  2688  005DCC  6FEC               	movwf	(vfprintf@fp+1)& (0+255),b
  2689  005DCE  C192  F0ED         	movff	sprintf@fmt,vfprintf@fmt
  2690  005DD2  C193  F0EE         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2691  005DD6  0EF5               	movlw	low sprintf@ap
  2692  005DD8  6FEF               	movwf	vfprintf@ap& (0+255),b
  2693  005DDA  0E00               	movlw	high sprintf@ap
  2694  005DDC  6FF0               	movwf	(vfprintf@ap+1)& (0+255),b
  2695  005DDE  EC7D  F02C         	call	_vfprintf	;wreg free
  2696  005DE2  0100               	movlb	0	; () banked
  2697  005DE4  51F9               	movf	(sprintf@f+2)& (0+255),w,b
  2698  005DE6  0101               	movlb	1	; () banked
  2699  005DE8  2590               	addwf	sprintf@s& (0+255),w,b
  2700  005DEA  6ED9               	movwf	fsr2l,c
  2701  005DEC  0100               	movlb	0	; () banked
  2702  005DEE  51FA               	movf	(sprintf@f+3)& (0+255),w,b
  2703  005DF0  0101               	movlb	1	; () banked
  2704  005DF2  2191               	addwfc	(sprintf@s+1)& (0+255),w,b
  2705  005DF4  6EDA               	movwf	fsr2h,c
  2706  005DF6  0E00               	movlw	0
  2707  005DF8  6EDF               	movwf	indf2,c
  2708  005DFA                     
  2709                           ; BSR set to: 1
  2710  005DFA  0012               	return		;funcret
  2711  005DFC                     __end_of_sprintf:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _vfprintf *****************
  2715 ;; Defined at:
  2716 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  fp              2  107[BANK0 ] PTR struct _IO_FILE
  2719 ;;		 -> sprintf@f(6), 
  2720 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  2721 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2722 ;;		 -> STR_6(3), STR_5(3), 
  2723 ;;  ap              2  111[BANK0 ] PTR PTR void 
  2724 ;;		 -> sprintf@ap(2), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  cfmt            2  113[BANK0 ] PTR unsigned char 
  2727 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2728 ;;		 -> STR_6(3), STR_5(3), 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  2  107[BANK0 ] int 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        8 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:   16
  2745 ;; This function calls:
  2746 ;;		_vfpfcnvrt
  2747 ;; This function is called by:
  2748 ;;		_sprintf
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text7
  2753  0058FA                     __ptext7:
  2754                           	callstack 0
  2755  0058FA                     _vfprintf:
  2756                           	callstack 11
  2757  0058FA                     
  2758                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2759  0058FA  C0ED  F0F1         	movff	vfprintf@fmt,vfprintf@cfmt
  2760  0058FE  C0EE  F0F2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2761  005902                     
  2762                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2763  005902  0E00               	movlw	0
  2764  005904  0101               	movlb	1	; () banked
  2765  005906  6F1C               	movwf	(_nout+1)& (0+255),b
  2766  005908  0E00               	movlw	0
  2767  00590A  6F1B               	movwf	_nout& (0+255),b
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2770  00590C  EF9F  F02C         	goto	l12661
  2771  005910                     l12659:
  2772                           
  2773                           ; BSR set to: 1
  2774                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2775  005910  C0EB  F0CF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2776  005914  C0EC  F0D0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2777  005918  0EF1               	movlw	low vfprintf@cfmt
  2778  00591A  0100               	movlb	0	; () banked
  2779  00591C  6FD1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2780  00591E  0E00               	movlw	high vfprintf@cfmt
  2781  005920  6FD2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2782  005922  C0EF  F0D3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2783  005926  C0F0  F0D4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2784  00592A  EC0C  F011         	call	_vfpfcnvrt	;wreg free
  2785  00592E  0100               	movlb	0	; () banked
  2786  005930  51CF               	movf	?_vfpfcnvrt& (0+255),w,b
  2787  005932  0101               	movlb	1	; () banked
  2788  005934  271B               	addwf	_nout& (0+255),f,b
  2789  005936  0100               	movlb	0	; () banked
  2790  005938  51D0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2791  00593A  0101               	movlb	1	; () banked
  2792  00593C  231C               	addwfc	(_nout+1)& (0+255),f,b
  2793  00593E                     l12661:
  2794                           
  2795                           ; BSR set to: 1
  2796                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2797  00593E  C0F1  FFF6         	movff	vfprintf@cfmt,tblptrl
  2798  005942  C0F2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2799  005946                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2800  005946  6AF8               	clrf	tblptru,c
  2801  005948                     	endif
  2802  005948                     	if	0	;tblptru may be non-zero
  2803  005948                     	endif
  2804  005948  0008               	tblrd		*
  2805  00594A  50F5               	movf	tablat,w,c
  2806  00594C  0900               	iorlw	0
  2807  00594E  A4D8               	btfss	status,2,c
  2808  005950  EFAC  F02C         	goto	u15181
  2809  005954  EFAE  F02C         	goto	u15180
  2810  005958                     u15181:
  2811  005958  EF88  F02C         	goto	l12659
  2812  00595C                     u15180:
  2813  00595C                     
  2814                           ; BSR set to: 1
  2815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2816  00595C  C11B  F0EB         	movff	_nout,?_vfprintf
  2817  005960  C11C  F0EC         	movff	_nout+1,?_vfprintf+1
  2818  005964                     
  2819                           ; BSR set to: 1
  2820  005964  0012               	return		;funcret
  2821  005966                     __end_of_vfprintf:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _vfpfcnvrt *****************
  2825 ;; Defined at:
  2826 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2829 ;;		 -> sprintf@f(6), 
  2830 ;;  fmt             2   81[BANK0 ] PTR PTR unsigned char 
  2831 ;;		 -> vfprintf@cfmt(2), 
  2832 ;;  ap              2   83[BANK0 ] PTR PTR void 
  2833 ;;		 -> sprintf@ap(2), 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  ll              8   89[BANK0 ] long long 
  2836 ;;  llu             8    0        unsigned long long 
  2837 ;;  f               4   99[BANK0 ] unsigned long long 
  2838 ;;  ct              3  103[BANK0 ] unsigned char [3]
  2839 ;;  vp              3    0        PTR void 
  2840 ;;  cp              3    0        PTR unsigned char 
  2841 ;;  i               2    0        int 
  2842 ;;  done            2    0        int 
  2843 ;;  c               1  106[BANK0 ] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2   79[BANK0 ] int 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:       28 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:   15
  2860 ;; This function calls:
  2861 ;;		_dtoa
  2862 ;;		_efgtoa
  2863 ;;		_fputc
  2864 ;;		_isupper
  2865 ;;		_strncmp
  2866 ;;		_tolower
  2867 ;; This function is called by:
  2868 ;;		_vfprintf
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text8
  2873  002218                     __ptext8:
  2874                           	callstack 0
  2875  002218                     _vfpfcnvrt:
  2876                           	callstack 11
  2877  002218                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2879  002218  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2880  00221C  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2881  002220  CFDE FFF6          	movff	postinc2,tblptrl
  2882  002224  CFDD FFF7          	movff	postdec2,tblptrh
  2883  002228                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2884  002228  6AF8               	clrf	tblptru,c
  2885  00222A                     	endif
  2886  00222A                     	if	0	;tblptru may be non-zero
  2887  00222A                     	endif
  2888  00222A  0008               	tblrd		*
  2889  00222C  50F5               	movf	tablat,w,c
  2890  00222E  0A25               	xorlw	37
  2891  002230  A4D8               	btfss	status,2,c
  2892  002232  EF1D  F011         	goto	u14871
  2893  002236  EF1F  F011         	goto	u14870
  2894  00223A                     u14871:
  2895  00223A  EF04  F013         	goto	l12501
  2896  00223E                     u14870:
  2897  00223E                     
  2898                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2899  00223E  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2900  002242  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2901  002246  2ADE               	incf	postinc2,f,c
  2902  002248  0E00               	movlw	0
  2903  00224A  22DD               	addwfc	postdec2,f,c
  2904  00224C                     
  2905                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2906  00224C  0E00               	movlw	0
  2907  00224E  6E2E               	movwf	(_width+1)^0,c
  2908  002250  0E00               	movlw	0
  2909  002252  6E2D               	movwf	_width^0,c
  2910  002254  C02D  F031         	movff	_width,_flags@doprnt$F4763
  2911  002258  C02E  F032         	movff	_width+1,_flags@doprnt$F4763+1
  2912  00225C                     
  2913                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2914  00225C  682F               	setf	_prec^0,c
  2915  00225E  6830               	setf	(_prec+1)^0,c
  2916  002260                     
  2917                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2918  002260  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2919  002264  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2920  002268  CFDE FFF6          	movff	postinc2,tblptrl
  2921  00226C  CFDD FFF7          	movff	postdec2,tblptrh
  2922  002270                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2923  002270  6AF8               	clrf	tblptru,c
  2924  002272                     	endif
  2925  002272                     	if	0	;tblptru may be non-zero
  2926  002272                     	endif
  2927  002272  0008               	tblrd		*
  2928  002274  50F5               	movf	tablat,w,c
  2929  002276  0100               	movlb	0	; () banked
  2930  002278  6F84               	movwf	tolower@c& (0+255),b
  2931  00227A  6B85               	clrf	(tolower@c+1)& (0+255),b
  2932  00227C  ECB2  F02D         	call	_tolower	;wreg free
  2933  002280  0100               	movlb	0	; () banked
  2934  002282  5184               	movf	?_tolower& (0+255),w,b
  2935  002284  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  2936  002286                     
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2939  002286  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  2940  002288  B4D8               	btfsc	status,2,c
  2941  00228A  EF49  F011         	goto	u14881
  2942  00228E  EF4B  F011         	goto	u14880
  2943  002292                     u14881:
  2944  002292  EF87  F011         	goto	l12447
  2945  002296                     u14880:
  2946  002296                     
  2947                           ; BSR set to: 0
  2948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2949  002296  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2950  00229A  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2951  00229E  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt
  2952  0022A2  CFDD F0D6          	movff	postdec2,??_vfpfcnvrt+1
  2953  0022A6  0E01               	movlw	1
  2954  0022A8  27D5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2955  0022AA  0E00               	movlw	0
  2956  0022AC  23D6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2957  0022AE  C0D5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2958  0022B2  C0D6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2959  0022B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2960  0022B6  6AF8               	clrf	tblptru,c
  2961  0022B8                     	endif
  2962  0022B8                     	if	0	;tblptru may be non-zero
  2963  0022B8                     	endif
  2964  0022B8  0008               	tblrd		*
  2965  0022BA  50F5               	movf	tablat,w,c
  2966  0022BC  6F84               	movwf	tolower@c& (0+255),b
  2967  0022BE  6B85               	clrf	(tolower@c+1)& (0+255),b
  2968  0022C0  ECB2  F02D         	call	_tolower	;wreg free
  2969  0022C4  0100               	movlb	0	; () banked
  2970  0022C6  5184               	movf	?_tolower& (0+255),w,b
  2971  0022C8  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2972  0022CA                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2975  0022CA  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2976  0022CC  B4D8               	btfsc	status,2,c
  2977  0022CE  EF6B  F011         	goto	u14891
  2978  0022D2  EF6D  F011         	goto	u14890
  2979  0022D6                     u14891:
  2980  0022D6  EF87  F011         	goto	l12447
  2981  0022DA                     u14890:
  2982  0022DA                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2985  0022DA  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2986  0022DE  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2987  0022E2  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt
  2988  0022E6  CFDD F0D6          	movff	postdec2,??_vfpfcnvrt+1
  2989  0022EA  0E02               	movlw	2
  2990  0022EC  27D5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2991  0022EE  0E00               	movlw	0
  2992  0022F0  23D6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2993  0022F2  C0D5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2994  0022F6  C0D6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2995  0022FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2996  0022FA  6AF8               	clrf	tblptru,c
  2997  0022FC                     	endif
  2998  0022FC                     	if	0	;tblptru may be non-zero
  2999  0022FC                     	endif
  3000  0022FC  0008               	tblrd		*
  3001  0022FE  50F5               	movf	tablat,w,c
  3002  002300  6F84               	movwf	tolower@c& (0+255),b
  3003  002302  6B85               	clrf	(tolower@c+1)& (0+255),b
  3004  002304  ECB2  F02D         	call	_tolower	;wreg free
  3005  002308  0100               	movlb	0	; () banked
  3006  00230A  5184               	movf	?_tolower& (0+255),w,b
  3007  00230C  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3008  00230E                     l12447:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3012  00230E  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3013  002312  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3014  002316  CFDE FFF6          	movff	postinc2,tblptrl
  3015  00231A  CFDD FFF7          	movff	postdec2,tblptrh
  3016  00231E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3017  00231E  6AF8               	clrf	tblptru,c
  3018  002320                     	endif
  3019  002320                     	if	0	;tblptru may be non-zero
  3020  002320                     	endif
  3021  002320  0008               	tblrd		*
  3022  002322  50F5               	movf	tablat,w,c
  3023  002324  0A64               	xorlw	100
  3024  002326  B4D8               	btfsc	status,2,c
  3025  002328  EF98  F011         	goto	u14901
  3026  00232C  EF9A  F011         	goto	u14900
  3027  002330                     u14901:
  3028  002330  EFAD  F011         	goto	l12451
  3029  002334                     u14900:
  3030  002334                     
  3031                           ; BSR set to: 0
  3032  002334  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3033  002338  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3034  00233C  CFDE FFF6          	movff	postinc2,tblptrl
  3035  002340  CFDD FFF7          	movff	postdec2,tblptrh
  3036  002344                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3037  002344  6AF8               	clrf	tblptru,c
  3038  002346                     	endif
  3039  002346                     	if	0	;tblptru may be non-zero
  3040  002346                     	endif
  3041  002346  0008               	tblrd		*
  3042  002348  50F5               	movf	tablat,w,c
  3043  00234A  0A69               	xorlw	105
  3044  00234C  A4D8               	btfss	status,2,c
  3045  00234E  EFAB  F011         	goto	u14911
  3046  002352  EFAD  F011         	goto	u14910
  3047  002356                     u14911:
  3048  002356  EFED  F011         	goto	l12457
  3049  00235A                     u14910:
  3050  00235A                     l12451:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3054  00235A  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3055  00235E  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3056  002362  2ADE               	incf	postinc2,f,c
  3057  002364  0E00               	movlw	0
  3058  002366  22DD               	addwfc	postdec2,f,c
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3061  002368  C0D3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3062  00236C  C0D4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3063  002370  CFDF F0D5          	movff	indf2,??_vfpfcnvrt
  3064  002374  0E02               	movlw	2
  3065  002376  26DE               	addwf	postinc2,f,c
  3066  002378  CFDF F0D6          	movff	indf2,??_vfpfcnvrt+1
  3067  00237C  0E00               	movlw	0
  3068  00237E  22DD               	addwfc	postdec2,f,c
  3069  002380  C0D5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3070  002384  C0D6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3071  002388  CFDE F0D9          	movff	postinc2,vfpfcnvrt@ll
  3072  00238C  CFDD F0DA          	movff	postdec2,vfpfcnvrt@ll+1
  3073  002390  0E00               	movlw	0
  3074  002392  BFDA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3075  002394  0EFF               	movlw	-1
  3076  002396  6FDB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3077  002398  6FDC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3078  00239A  6FDD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3079  00239C  6FDE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3080  00239E  6FDF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3081  0023A0  6FE0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3082  0023A2                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3085  0023A2  C0CF  F09A         	movff	vfpfcnvrt@fp,dtoa@fp
  3086  0023A6  C0D0  F09B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3087  0023AA  C0D9  F09C         	movff	vfpfcnvrt@ll,dtoa@d
  3088  0023AE  C0DA  F09D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3089  0023B2  C0DB  F09E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3090  0023B6  C0DC  F09F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3091  0023BA  C0DD  F0A0         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3092  0023BE  C0DE  F0A1         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3093  0023C2  C0DF  F0A2         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3094  0023C6  C0E0  F0A3         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3095  0023CA  ECE2  F018         	call	_dtoa	;wreg free
  3096  0023CE  C09A  F0CF         	movff	?_dtoa,?_vfpfcnvrt
  3097  0023D2  C09B  F0D0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3098  0023D6  EF21  F013         	goto	l2622
  3099  0023DA                     l12457:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3103  0023DA  0E66               	movlw	102
  3104  0023DC  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3105  0023DE  A4D8               	btfss	status,2,c
  3106  0023E0  EFF4  F011         	goto	u14921
  3107  0023E4  EFF6  F011         	goto	u14920
  3108  0023E8                     u14921:
  3109  0023E8  EF37  F012         	goto	l12469
  3110  0023EC                     u14920:
  3111  0023EC                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3114  0023EC  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3115  0023F0  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3116  0023F4  CFDE FFF6          	movff	postinc2,tblptrl
  3117  0023F8  CFDD FFF7          	movff	postdec2,tblptrh
  3118  0023FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3119  0023FC  6AF8               	clrf	tblptru,c
  3120  0023FE                     	endif
  3121  0023FE                     	if	0	;tblptru may be non-zero
  3122  0023FE                     	endif
  3123  0023FE  0008               	tblrd		*
  3124  002400  CFF5 F0EA          	movff	tablat,vfpfcnvrt@c
  3125  002404                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3128  002404  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3129  002408  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130  00240C  2ADE               	incf	postinc2,f,c
  3131  00240E  0E00               	movlw	0
  3132  002410  22DD               	addwfc	postdec2,f,c
  3133  002412                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3136  002412  C0D3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3137  002416  C0D4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3138  00241A  CFDF F0D5          	movff	indf2,??_vfpfcnvrt
  3139  00241E  0E04               	movlw	4
  3140  002420  26DE               	addwf	postinc2,f,c
  3141  002422  CFDF F0D6          	movff	indf2,??_vfpfcnvrt+1
  3142  002426  0E00               	movlw	0
  3143  002428  22DD               	addwfc	postdec2,f,c
  3144  00242A  C0D5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3145  00242E  C0D6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3146  002432  CFDE F0E3          	movff	postinc2,vfpfcnvrt@f
  3147  002436  CFDE F0E4          	movff	postinc2,vfpfcnvrt@f+1
  3148  00243A  CFDE F0E5          	movff	postinc2,vfpfcnvrt@f+2
  3149  00243E  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f+3
  3150  002442                     l12465:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3154  002442  C0CF  F0C3         	movff	vfpfcnvrt@fp,efgtoa@fp
  3155  002446  C0D0  F0C4         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3156  00244A  C0E3  F0C5         	movff	vfpfcnvrt@f,efgtoa@f
  3157  00244E  C0E4  F0C6         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3158  002452  C0E5  F0C7         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3159  002456  C0E6  F0C8         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3160  00245A  C0EA  F0C9         	movff	vfpfcnvrt@c,efgtoa@c
  3161  00245E  EC48  F008         	call	_efgtoa	;wreg free
  3162  002462  C0C3  F0CF         	movff	?_efgtoa,?_vfpfcnvrt
  3163  002466  C0C4  F0D0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3164  00246A  EF21  F013         	goto	l2622
  3165  00246E                     l12469:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3169  00246E  0EE7               	movlw	low vfpfcnvrt@ct
  3170  002470  6F80               	movwf	strncmp@_l& (0+255),b
  3171  002472  0E00               	movlw	high vfpfcnvrt@ct
  3172  002474  6F81               	movwf	(strncmp@_l+1)& (0+255),b
  3173  002476  0E86               	movlw	low STR_26
  3174  002478  6F82               	movwf	strncmp@_r& (0+255),b
  3175  00247A  0E10               	movlw	high STR_26
  3176  00247C  6F83               	movwf	(strncmp@_r+1)& (0+255),b
  3177  00247E  0E00               	movlw	0
  3178  002480  6F85               	movwf	(strncmp@n+1)& (0+255),b
  3179  002482  0E02               	movlw	2
  3180  002484  6F84               	movwf	strncmp@n& (0+255),b
  3181  002486  EC7E  F025         	call	_strncmp	;wreg free
  3182  00248A  0100               	movlb	0	; () banked
  3183  00248C  5180               	movf	?_strncmp& (0+255),w,b
  3184  00248E  1181               	iorwf	(?_strncmp+1)& (0+255),w,b
  3185  002490  A4D8               	btfss	status,2,c
  3186  002492  EF4D  F012         	goto	u14931
  3187  002496  EF4F  F012         	goto	u14930
  3188  00249A                     u14931:
  3189  00249A  EFCC  F012         	goto	l12485
  3190  00249E                     u14930:
  3191  00249E                     
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3194  00249E  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3195  0024A2  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3196  0024A6  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt
  3197  0024AA  CFDD F0D6          	movff	postdec2,??_vfpfcnvrt+1
  3198  0024AE  0E01               	movlw	1
  3199  0024B0  27D5               	addwf	??_vfpfcnvrt& (0+255),f,b
  3200  0024B2  0E00               	movlw	0
  3201  0024B4  23D6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3202  0024B6  C0D5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3203  0024BA  C0D6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3204  0024BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3205  0024BE  6AF8               	clrf	tblptru,c
  3206  0024C0                     	endif
  3207  0024C0                     	if	0	;tblptru may be non-zero
  3208  0024C0                     	endif
  3209  0024C0  0008               	tblrd		*
  3210  0024C2  CFF5 F0EA          	movff	tablat,vfpfcnvrt@c
  3211  0024C6  0EBF               	movlw	191
  3212  0024C8  6FD5               	movwf	??_vfpfcnvrt& (0+255),b
  3213  0024CA  0EFF               	movlw	255
  3214  0024CC  6FD6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3215  0024CE  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3216  0024D2  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3217  0024D6  CFDE FFF6          	movff	postinc2,tblptrl
  3218  0024DA  CFDD FFF7          	movff	postdec2,tblptrh
  3219  0024DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3220  0024DE  6AF8               	clrf	tblptru,c
  3221  0024E0                     	endif
  3222  0024E0                     	if	0	;tblptru may be non-zero
  3223  0024E0                     	endif
  3224  0024E0  0008               	tblrd		*
  3225  0024E2  50F5               	movf	tablat,w,c
  3226  0024E4  6FD7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3227  0024E6  6BD8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3228  0024E8  51D5               	movf	??_vfpfcnvrt& (0+255),w,b
  3229  0024EA  27D7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3230  0024EC  51D6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3231  0024EE  23D8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3232  0024F0  51D8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3233  0024F2  E10A               	bnz	u14940
  3234  0024F4  0E1A               	movlw	26
  3235  0024F6  5DD7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3236  0024F8  A0D8               	btfss	status,0,c
  3237  0024FA  EF81  F012         	goto	u14941
  3238  0024FE  EF84  F012         	goto	u14940
  3239  002502                     u14941:
  3240  002502  0E01               	movlw	1
  3241  002504  EF85  F012         	goto	u14950
  3242  002508                     u14940:
  3243  002508  0E00               	movlw	0
  3244  00250A                     u14950:
  3245  00250A  6FE1               	movwf	_vfpfcnvrt$4835& (0+255),b
  3246  00250C  6BE2               	clrf	(_vfpfcnvrt$4835+1)& (0+255),b
  3247  00250E                     
  3248                           ; BSR set to: 0
  3249  00250E  51E1               	movf	_vfpfcnvrt$4835& (0+255),w,b
  3250  002510  11E2               	iorwf	(_vfpfcnvrt$4835+1)& (0+255),w,b
  3251  002512  B4D8               	btfsc	status,2,c
  3252  002514  EF8E  F012         	goto	u14961
  3253  002518  EF90  F012         	goto	u14960
  3254  00251C                     u14961:
  3255  00251C  EFAA  F012         	goto	l12479
  3256  002520                     u14960:
  3257  002520                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3260  002520  C0D3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3261  002524  C0D4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3262  002528  CFDF F0D5          	movff	indf2,??_vfpfcnvrt
  3263  00252C  0E04               	movlw	4
  3264  00252E  26DE               	addwf	postinc2,f,c
  3265  002530  CFDF F0D6          	movff	indf2,??_vfpfcnvrt+1
  3266  002534  0E00               	movlw	0
  3267  002536  22DD               	addwfc	postdec2,f,c
  3268  002538  C0D5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3269  00253C  C0D6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3270  002540  CFDE F0E3          	movff	postinc2,vfpfcnvrt@f
  3271  002544  CFDE F0E4          	movff	postinc2,vfpfcnvrt@f+1
  3272  002548  CFDE F0E5          	movff	postinc2,vfpfcnvrt@f+2
  3273  00254C  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f+3
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3276  002550  EFC2  F012         	goto	l2630
  3277  002554                     l12479:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3281  002554  C0D3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3282  002558  C0D4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3283  00255C  CFDF F0D5          	movff	indf2,??_vfpfcnvrt
  3284  002560  0E04               	movlw	4
  3285  002562  26DE               	addwf	postinc2,f,c
  3286  002564  CFDF F0D6          	movff	indf2,??_vfpfcnvrt+1
  3287  002568  0E00               	movlw	0
  3288  00256A  22DD               	addwfc	postdec2,f,c
  3289  00256C  C0D5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3290  002570  C0D6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3291  002574  CFDE F0E3          	movff	postinc2,vfpfcnvrt@f
  3292  002578  CFDE F0E4          	movff	postinc2,vfpfcnvrt@f+1
  3293  00257C  CFDE F0E5          	movff	postinc2,vfpfcnvrt@f+2
  3294  002580  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f+3
  3295  002584                     l2630:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3299  002584  0E02               	movlw	2
  3300  002586  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3301  00258A  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3302  00258E  26DE               	addwf	postinc2,f,c
  3303  002590  0E00               	movlw	0
  3304  002592  22DD               	addwfc	postdec2,f,c
  3305  002594  EF21  F012         	goto	l12465
  3306  002598                     l12485:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3310  002598  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3311  00259C  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3312  0025A0  CFDE FFF6          	movff	postinc2,tblptrl
  3313  0025A4  CFDD FFF7          	movff	postdec2,tblptrh
  3314  0025A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3315  0025A8  6AF8               	clrf	tblptru,c
  3316  0025AA                     	endif
  3317  0025AA                     	if	0	;tblptru may be non-zero
  3318  0025AA                     	endif
  3319  0025AA  0008               	tblrd		*
  3320  0025AC  50F5               	movf	tablat,w,c
  3321  0025AE  0A25               	xorlw	37
  3322  0025B0  A4D8               	btfss	status,2,c
  3323  0025B2  EFDD  F012         	goto	u14971
  3324  0025B6  EFDF  F012         	goto	u14970
  3325  0025BA                     u14971:
  3326  0025BA  EFF7  F012         	goto	l12495
  3327  0025BE                     u14970:
  3328  0025BE                     
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3331  0025BE  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3332  0025C2  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3333  0025C6  2ADE               	incf	postinc2,f,c
  3334  0025C8  0E00               	movlw	0
  3335  0025CA  22DD               	addwfc	postdec2,f,c
  3336  0025CC                     
  3337                           ; BSR set to: 0
  3338                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3339  0025CC  0E00               	movlw	0
  3340  0025CE  6F81               	movwf	(fputc@c+1)& (0+255),b
  3341  0025D0  0E25               	movlw	37
  3342  0025D2  6F80               	movwf	fputc@c& (0+255),b
  3343  0025D4  C0CF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  3344  0025D8  C0D0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3345  0025DC  EC5B  F026         	call	_fputc	;wreg free
  3346  0025E0                     l12491:
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3349  0025E0  0E00               	movlw	0
  3350  0025E2  0100               	movlb	0	; () banked
  3351  0025E4  6FD0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3352  0025E6  0E01               	movlw	1
  3353  0025E8  6FCF               	movwf	?_vfpfcnvrt& (0+255),b
  3354  0025EA  EF21  F013         	goto	l2622
  3355  0025EE                     l12495:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3359  0025EE  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3360  0025F2  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3361  0025F6  2ADE               	incf	postinc2,f,c
  3362  0025F8  0E00               	movlw	0
  3363  0025FA  22DD               	addwfc	postdec2,f,c
  3364  0025FC                     
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3367  0025FC  0E00               	movlw	0
  3368  0025FE  6FD0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3369  002600  0E00               	movlw	0
  3370  002602  6FCF               	movwf	?_vfpfcnvrt& (0+255),b
  3371  002604  EF21  F013         	goto	l2622
  3372  002608                     l12501:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3375  002608  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3376  00260C  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3377  002610  CFDE FFF6          	movff	postinc2,tblptrl
  3378  002614  CFDD FFF7          	movff	postdec2,tblptrh
  3379  002618                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3380  002618  6AF8               	clrf	tblptru,c
  3381  00261A                     	endif
  3382  00261A                     	if	0	;tblptru may be non-zero
  3383  00261A                     	endif
  3384  00261A  0008               	tblrd		*
  3385  00261C  50F5               	movf	tablat,w,c
  3386  00261E  0100               	movlb	0	; () banked
  3387  002620  6F80               	movwf	fputc@c& (0+255),b
  3388  002622  6B81               	clrf	(fputc@c+1)& (0+255),b
  3389  002624  C0CF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  3390  002628  C0D0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3391  00262C  EC5B  F026         	call	_fputc	;wreg free
  3392  002630                     
  3393                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3394  002630  C0D1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3395  002634  C0D2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3396  002638  2ADE               	incf	postinc2,f,c
  3397  00263A  0E00               	movlw	0
  3398  00263C  22DD               	addwfc	postdec2,f,c
  3399  00263E  EFF0  F012         	goto	l12491
  3400  002642                     l2622:
  3401  002642  0012               	return		;funcret
  3402  002644                     __end_of_vfpfcnvrt:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _strncmp *****************
  3406 ;; Defined at:
  3407 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strncmp.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  3410 ;;		 -> vfpfcnvrt@ct(3), 
  3411 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  3412 ;;		 -> STR_28(3), 
  3413 ;;  n               2    4[BANK0 ] unsigned int 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  r               2    8[BANK0 ] PTR const unsigned char 
  3416 ;;		 -> STR_28(3), 
  3417 ;;  l               2    6[BANK0 ] PTR const unsigned char 
  3418 ;;		 -> vfpfcnvrt@ct(3), 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  2    0[BANK0 ] int 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3428 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;Total ram usage:       11 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:   10
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_vfpfcnvrt
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text9
  3443  004AFC                     __ptext9:
  3444                           	callstack 0
  3445  004AFC                     _strncmp:
  3446                           	callstack 15
  3447  004AFC  C080  F086         	movff	strncmp@_l,strncmp@l
  3448  004B00  C081  F087         	movff	strncmp@_l+1,strncmp@l+1
  3449  004B04  C082  F088         	movff	strncmp@_r,strncmp@r
  3450  004B08  C083  F089         	movff	strncmp@_r+1,strncmp@r+1
  3451  004B0C  0100               	movlb	0	; () banked
  3452  004B0E  0784               	decf	strncmp@n& (0+255),f,b
  3453  004B10  A0D8               	btfss	status,0,c
  3454  004B12  0785               	decf	(strncmp@n+1)& (0+255),f,b
  3455  004B14  2984               	incf	strncmp@n& (0+255),w,b
  3456  004B16  E106               	bnz	u14801
  3457  004B18  2985               	incf	(strncmp@n+1)& (0+255),w,b
  3458  004B1A  A4D8               	btfss	status,2,c
  3459  004B1C  EF92  F025         	goto	u14801
  3460  004B20  EF94  F025         	goto	u14800
  3461  004B24                     u14801:
  3462  004B24  EFA1  F025         	goto	l12393
  3463  004B28                     u14800:
  3464  004B28                     
  3465                           ; BSR set to: 0
  3466  004B28  0E00               	movlw	0
  3467  004B2A  6F81               	movwf	(?_strncmp+1)& (0+255),b
  3468  004B2C  0E00               	movlw	0
  3469  004B2E  6F80               	movwf	?_strncmp& (0+255),b
  3470  004B30  EFEC  F025         	goto	l2713
  3471  004B34                     l12391:
  3472                           
  3473                           ; BSR set to: 0
  3474  004B34  4B86               	infsnz	strncmp@l& (0+255),f,b
  3475  004B36  2B87               	incf	(strncmp@l+1)& (0+255),f,b
  3476  004B38  4B88               	infsnz	strncmp@r& (0+255),f,b
  3477  004B3A  2B89               	incf	(strncmp@r+1)& (0+255),f,b
  3478  004B3C  0784               	decf	strncmp@n& (0+255),f,b
  3479  004B3E  A0D8               	btfss	status,0,c
  3480  004B40  0785               	decf	(strncmp@n+1)& (0+255),f,b
  3481  004B42                     l12393:
  3482                           
  3483                           ; BSR set to: 0
  3484  004B42  C086  FFD9         	movff	strncmp@l,fsr2l
  3485  004B46  C087  FFDA         	movff	strncmp@l+1,fsr2h
  3486  004B4A  50DF               	movf	indf2,w,c
  3487  004B4C  B4D8               	btfsc	status,2,c
  3488  004B4E  EFAB  F025         	goto	u14811
  3489  004B52  EFAD  F025         	goto	u14810
  3490  004B56                     u14811:
  3491  004B56  EFDA  F025         	goto	l12401
  3492  004B5A                     u14810:
  3493  004B5A                     
  3494                           ; BSR set to: 0
  3495  004B5A  C088  FFF6         	movff	strncmp@r,tblptrl
  3496  004B5E  C089  FFF7         	movff	strncmp@r+1,tblptrh
  3497  004B62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3498  004B62  6AF8               	clrf	tblptru,c
  3499  004B64                     	endif
  3500  004B64                     	if	0	;tblptru may be non-zero
  3501  004B64                     	endif
  3502  004B64  0008               	tblrd		*
  3503  004B66  50F5               	movf	tablat,w,c
  3504  004B68  0900               	iorlw	0
  3505  004B6A  B4D8               	btfsc	status,2,c
  3506  004B6C  EFBA  F025         	goto	u14821
  3507  004B70  EFBC  F025         	goto	u14820
  3508  004B74                     u14821:
  3509  004B74  EFDA  F025         	goto	l12401
  3510  004B78                     u14820:
  3511  004B78                     
  3512                           ; BSR set to: 0
  3513  004B78  5184               	movf	strncmp@n& (0+255),w,b
  3514  004B7A  1185               	iorwf	(strncmp@n+1)& (0+255),w,b
  3515  004B7C  B4D8               	btfsc	status,2,c
  3516  004B7E  EFC3  F025         	goto	u14831
  3517  004B82  EFC5  F025         	goto	u14830
  3518  004B86                     u14831:
  3519  004B86  EFDA  F025         	goto	l12401
  3520  004B8A                     u14830:
  3521  004B8A                     
  3522                           ; BSR set to: 0
  3523  004B8A  C086  FFD9         	movff	strncmp@l,fsr2l
  3524  004B8E  C087  FFDA         	movff	strncmp@l+1,fsr2h
  3525  004B92  50DF               	movf	indf2,w,c
  3526  004B94  6E2A               	movwf	??_strncmp^0,c
  3527  004B96  C088  FFF6         	movff	strncmp@r,tblptrl
  3528  004B9A  C089  FFF7         	movff	strncmp@r+1,tblptrh
  3529  004B9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3530  004B9E  6AF8               	clrf	tblptru,c
  3531  004BA0                     	endif
  3532  004BA0                     	if	0	;tblptru may be non-zero
  3533  004BA0                     	endif
  3534  004BA0  0008               	tblrd		*
  3535  004BA2  50F5               	movf	tablat,w,c
  3536  004BA4  182A               	xorwf	??_strncmp^0,w,c
  3537  004BA6  B4D8               	btfsc	status,2,c
  3538  004BA8  EFD8  F025         	goto	u14841
  3539  004BAC  EFDA  F025         	goto	u14840
  3540  004BB0                     u14841:
  3541  004BB0  EF9A  F025         	goto	l12391
  3542  004BB4                     u14840:
  3543  004BB4                     l12401:
  3544                           
  3545                           ; BSR set to: 0
  3546  004BB4  C086  FFD9         	movff	strncmp@l,fsr2l
  3547  004BB8  C087  FFDA         	movff	strncmp@l+1,fsr2h
  3548  004BBC  50DF               	movf	indf2,w,c
  3549  004BBE  6E2A               	movwf	??_strncmp^0,c
  3550  004BC0  C088  FFF6         	movff	strncmp@r,tblptrl
  3551  004BC4  C089  FFF7         	movff	strncmp@r+1,tblptrh
  3552  004BC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3553  004BC8  6AF8               	clrf	tblptru,c
  3554  004BCA                     	endif
  3555  004BCA                     	if	0	;tblptru may be non-zero
  3556  004BCA                     	endif
  3557  004BCA  0008               	tblrd		*
  3558  004BCC  50F5               	movf	tablat,w,c
  3559  004BCE  5C2A               	subwf	??_strncmp^0,w,c
  3560  004BD0  6F80               	movwf	?_strncmp& (0+255),b
  3561  004BD2  6B81               	clrf	(?_strncmp+1)& (0+255),b
  3562  004BD4  A0D8               	btfss	status,0,c
  3563  004BD6  0781               	decf	(?_strncmp+1)& (0+255),f,b
  3564  004BD8                     l2713:
  3565                           
  3566                           ; BSR set to: 0
  3567  004BD8  0012               	return		;funcret
  3568  004BDA                     __end_of_strncmp:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _efgtoa *****************
  3572 ;; Defined at:
  3573 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  3576 ;;		 -> sprintf@f(6), 
  3577 ;;  f               4   69[BANK0 ] PTR struct _IO_FILE
  3578 ;;  c               1   73[BANK0 ] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  u               4   52[BANK1 ] unsigned char 
  3581 ;;  g               4   44[BANK1 ] unsigned char 
  3582 ;;  l               4   38[BANK1 ] unsigned char 
  3583 ;;  h               4   34[BANK1 ] unsigned char 
  3584 ;;  ou              4   20[BANK1 ] unsigned char 
  3585 ;;  n               2   50[BANK1 ] int 
  3586 ;;  e               2   48[BANK1 ] int 
  3587 ;;  i               2   42[BANK1 ] int 
  3588 ;;  w               2   30[BANK1 ] int 
  3589 ;;  p               2   28[BANK1 ] int 
  3590 ;;  sign            2   26[BANK1 ] int 
  3591 ;;  d               2   24[BANK1 ] int 
  3592 ;;  m               2   18[BANK1 ] int 
  3593 ;;  ne              2   16[BANK1 ] int 
  3594 ;;  pp              2   14[BANK1 ] int 
  3595 ;;  t               2   12[BANK1 ] int 
  3596 ;;  mode            1   33[BANK1 ] unsigned char 
  3597 ;;  nmode           1   32[BANK1 ] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  2   67[BANK0 ] int 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         0      12      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:       68 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:   14
  3614 ;; This function calls:
  3615 ;;		___awdiv
  3616 ;;		___awmod
  3617 ;;		___fladd
  3618 ;;		___fldiv
  3619 ;;		___fleq
  3620 ;;		___flge
  3621 ;;		___flmul
  3622 ;;		___flneg
  3623 ;;		___flsub
  3624 ;;		___fltol
  3625 ;;		___fpclassifyf
  3626 ;;		_floorf
  3627 ;;		_isupper
  3628 ;;		_pad
  3629 ;;		_strcpy
  3630 ;;		_tolower
  3631 ;; This function is called by:
  3632 ;;		_vfpfcnvrt
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text10
  3637  001090                     __ptext10:
  3638                           	callstack 0
  3639  001090                     _efgtoa:
  3640                           	callstack 11
  3641  001090                     
  3642                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3643  001090  0E00               	movlw	0
  3644  001092  0101               	movlb	1	; () banked
  3645  001094  6F73               	movwf	(efgtoa@sign+1)& (0+255),b
  3646  001096  0E00               	movlw	0
  3647  001098  6F72               	movwf	efgtoa@sign& (0+255),b
  3648  00109A                     
  3649                           ; BSR set to: 1
  3650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3651  00109A  C0C5  F184         	movff	efgtoa@f,efgtoa@g
  3652  00109E  C0C6  F185         	movff	efgtoa@f+1,efgtoa@g+1
  3653  0010A2  C0C7  F186         	movff	efgtoa@f+2,efgtoa@g+2
  3654  0010A6  C0C8  F187         	movff	efgtoa@f+3,efgtoa@g+3
  3655  0010AA                     
  3656                           ; BSR set to: 1
  3657                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3658  0010AA  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3659  0010AC  EF5C  F008         	goto	u14260
  3660  0010B0  EF5A  F008         	goto	u14261
  3661  0010B4                     u14261:
  3662  0010B4  EF72  F008         	goto	l12087
  3663  0010B8                     u14260:
  3664  0010B8                     
  3665                           ; BSR set to: 1
  3666                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3667  0010B8  0E00               	movlw	0
  3668  0010BA  6F73               	movwf	(efgtoa@sign+1)& (0+255),b
  3669  0010BC  0E01               	movlw	1
  3670  0010BE  6F72               	movwf	efgtoa@sign& (0+255),b
  3671  0010C0                     
  3672                           ; BSR set to: 1
  3673                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3674  0010C0  C184  F080         	movff	efgtoa@g,___flneg@f1
  3675  0010C4  C185  F081         	movff	efgtoa@g+1,___flneg@f1+1
  3676  0010C8  C186  F082         	movff	efgtoa@g+2,___flneg@f1+2
  3677  0010CC  C187  F083         	movff	efgtoa@g+3,___flneg@f1+3
  3678  0010D0  ECE3  F030         	call	___flneg	;wreg free
  3679  0010D4  C080  F184         	movff	?___flneg,efgtoa@g
  3680  0010D8  C081  F185         	movff	?___flneg+1,efgtoa@g+1
  3681  0010DC  C082  F186         	movff	?___flneg+2,efgtoa@g+2
  3682  0010E0  C083  F187         	movff	?___flneg+3,efgtoa@g+3
  3683  0010E4                     l12087:
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3686  0010E4  0E00               	movlw	0
  3687  0010E6  0101               	movlb	1	; () banked
  3688  0010E8  6F8B               	movwf	(efgtoa@n+1)& (0+255),b
  3689  0010EA  0E00               	movlw	0
  3690  0010EC  6F8A               	movwf	efgtoa@n& (0+255),b
  3691  0010EE                     
  3692                           ; BSR set to: 1
  3693                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3694  0010EE  C02D  F176         	movff	_width,efgtoa@w
  3695  0010F2  C02E  F177         	movff	_width+1,efgtoa@w+1
  3696  0010F6                     
  3697                           ; BSR set to: 1
  3698                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3699  0010F6  5172               	movf	efgtoa@sign& (0+255),w,b
  3700  0010F8  1173               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3701  0010FA  A4D8               	btfss	status,2,c
  3702  0010FC  EF82  F008         	goto	u14271
  3703  001100  EF84  F008         	goto	u14270
  3704  001104                     u14271:
  3705  001104  EF8B  F008         	goto	l12095
  3706  001108                     u14270:
  3707  001108                     
  3708                           ; BSR set to: 1
  3709  001108  A431               	btfss	_flags@doprnt$F4763^0,2,c
  3710  00110A  EF89  F008         	goto	u14281
  3711  00110E  EF8B  F008         	goto	u14280
  3712  001112                     u14281:
  3713  001112  EFA5  F008         	goto	l12107
  3714  001116                     u14280:
  3715  001116                     l12095:
  3716                           
  3717                           ; BSR set to: 1
  3718                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3719  001116  5172               	movf	efgtoa@sign& (0+255),w,b
  3720  001118  1173               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3721  00111A  A4D8               	btfss	status,2,c
  3722  00111C  EF92  F008         	goto	u14291
  3723  001120  EF94  F008         	goto	u14290
  3724  001124                     u14291:
  3725  001124  EF9A  F008         	goto	l12099
  3726  001128                     u14290:
  3727  001128                     
  3728                           ; BSR set to: 1
  3729  001128  0E00               	movlw	0
  3730  00112A  6F59               	movwf	(_efgtoa$4806+1)& (0+255),b
  3731  00112C  0E2B               	movlw	43
  3732  00112E  6F58               	movwf	_efgtoa$4806& (0+255),b
  3733  001130  EF9E  F008         	goto	l12101
  3734  001134                     l12099:
  3735                           
  3736                           ; BSR set to: 1
  3737  001134  0E00               	movlw	0
  3738  001136  6F59               	movwf	(_efgtoa$4806+1)& (0+255),b
  3739  001138  0E2D               	movlw	45
  3740  00113A  6F58               	movwf	_efgtoa$4806& (0+255),b
  3741  00113C                     l12101:
  3742                           
  3743                           ; BSR set to: 1
  3744  00113C  C158  F200         	movff	_efgtoa$4806,_dbuf
  3745  001140                     
  3746                           ; BSR set to: 1
  3747                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3748  001140  4B8A               	infsnz	efgtoa@n& (0+255),f,b
  3749  001142  2B8B               	incf	(efgtoa@n+1)& (0+255),f,b
  3750  001144                     
  3751                           ; BSR set to: 1
  3752                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 352:         --w;
  3753  001144  0776               	decf	efgtoa@w& (0+255),f,b
  3754  001146  A0D8               	btfss	status,0,c
  3755  001148  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  3756  00114A                     l12107:
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3760  00114A  C184  F080         	movff	efgtoa@g,___fpclassifyf@x
  3761  00114E  C185  F081         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3762  001152  C186  F082         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3763  001156  C187  F083         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3764  00115A  ECA8  F023         	call	___fpclassifyf	;wreg free
  3765  00115E  0100               	movlb	0	; () banked
  3766  001160  0580               	decf	?___fpclassifyf& (0+255),w,b
  3767  001162  1181               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3768  001164  A4D8               	btfss	status,2,c
  3769  001166  EFB7  F008         	goto	u14301
  3770  00116A  EFB9  F008         	goto	u14300
  3771  00116E                     u14301:
  3772  00116E  EF17  F009         	goto	l12125
  3773  001172                     u14300:
  3774  001172                     
  3775                           ; BSR set to: 0
  3776  001172  0EBF               	movlw	191
  3777  001174  6FCA               	movwf	??_efgtoa& (0+255),b
  3778  001176  0EFF               	movlw	255
  3779  001178  6FCB               	movwf	(??_efgtoa+1)& (0+255),b
  3780  00117A  51C9               	movf	efgtoa@c& (0+255),w,b
  3781  00117C  6FCC               	movwf	(??_efgtoa+2)& (0+255),b
  3782  00117E  6BCD               	clrf	(??_efgtoa+3)& (0+255),b
  3783  001180  51CA               	movf	??_efgtoa& (0+255),w,b
  3784  001182  27CC               	addwf	(??_efgtoa+2)& (0+255),f,b
  3785  001184  51CB               	movf	(??_efgtoa+1)& (0+255),w,b
  3786  001186  23CD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3787  001188  51CD               	movf	(??_efgtoa+3)& (0+255),w,b
  3788  00118A  E10A               	bnz	u14310
  3789  00118C  0E1A               	movlw	26
  3790  00118E  5DCC               	subwf	(??_efgtoa+2)& (0+255),w,b
  3791  001190  A0D8               	btfss	status,0,c
  3792  001192  EFCD  F008         	goto	u14311
  3793  001196  EFD0  F008         	goto	u14310
  3794  00119A                     u14311:
  3795  00119A  0E01               	movlw	1
  3796  00119C  EFD1  F008         	goto	u14320
  3797  0011A0                     u14310:
  3798  0011A0  0E00               	movlw	0
  3799  0011A2                     u14320:
  3800  0011A2  0101               	movlb	1	; () banked
  3801  0011A4  6F5A               	movwf	_efgtoa$4807& (0+255),b
  3802  0011A6  6B5B               	clrf	(_efgtoa$4807+1)& (0+255),b
  3803  0011A8                     
  3804                           ; BSR set to: 1
  3805  0011A8  515A               	movf	_efgtoa$4807& (0+255),w,b
  3806  0011AA  115B               	iorwf	(_efgtoa$4807+1)& (0+255),w,b
  3807  0011AC  B4D8               	btfsc	status,2,c
  3808  0011AE  EFDB  F008         	goto	u14331
  3809  0011B2  EFDD  F008         	goto	u14330
  3810  0011B6                     u14331:
  3811  0011B6  EFEE  F008         	goto	l12117
  3812  0011BA                     u14330:
  3813  0011BA                     
  3814                           ; BSR set to: 1
  3815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3816  0011BA  0E00               	movlw	low _dbuf
  3817  0011BC  258A               	addwf	efgtoa@n& (0+255),w,b
  3818  0011BE  0100               	movlb	0	; () banked
  3819  0011C0  6F80               	movwf	strcpy@dest& (0+255),b
  3820  0011C2  0E02               	movlw	high _dbuf
  3821  0011C4  0101               	movlb	1	; () banked
  3822  0011C6  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3823  0011C8  0100               	movlb	0	; () banked
  3824  0011CA  6F81               	movwf	(strcpy@dest+1)& (0+255),b
  3825  0011CC  0E76               	movlw	low STR_18
  3826  0011CE  6F82               	movwf	strcpy@src& (0+255),b
  3827  0011D0  0E10               	movlw	high STR_18
  3828  0011D2  6F83               	movwf	(strcpy@src+1)& (0+255),b
  3829  0011D4  EC45  F02E         	call	_strcpy	;wreg free
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3832  0011D8  EFFD  F008         	goto	l12119
  3833  0011DC                     l12117:
  3834                           
  3835                           ; BSR set to: 1
  3836                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3837  0011DC  0E00               	movlw	low _dbuf
  3838  0011DE  258A               	addwf	efgtoa@n& (0+255),w,b
  3839  0011E0  0100               	movlb	0	; () banked
  3840  0011E2  6F80               	movwf	strcpy@dest& (0+255),b
  3841  0011E4  0E02               	movlw	high _dbuf
  3842  0011E6  0101               	movlb	1	; () banked
  3843  0011E8  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3844  0011EA  0100               	movlb	0	; () banked
  3845  0011EC  6F81               	movwf	(strcpy@dest+1)& (0+255),b
  3846  0011EE  0E7E               	movlw	low STR_19
  3847  0011F0  6F82               	movwf	strcpy@src& (0+255),b
  3848  0011F2  0E10               	movlw	high STR_19
  3849  0011F4  6F83               	movwf	(strcpy@src+1)& (0+255),b
  3850  0011F6  EC45  F02E         	call	_strcpy	;wreg free
  3851  0011FA                     l12119:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3854  0011FA  0101               	movlb	1	; () banked
  3855  0011FC  0EFD               	movlw	253
  3856  0011FE  2776               	addwf	efgtoa@w& (0+255),f,b
  3857  001200  0EFF               	movlw	255
  3858  001202  2377               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3859  001204                     l12121:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3862  001204  C0C3  F08D         	movff	efgtoa@fp,pad@fp
  3863  001208  C0C4  F08E         	movff	efgtoa@fp+1,pad@fp+1
  3864  00120C  0E00               	movlw	low _dbuf
  3865  00120E  0100               	movlb	0	; () banked
  3866  001210  6F8F               	movwf	pad@buf& (0+255),b
  3867  001212  0E02               	movlw	high _dbuf
  3868  001214  6F90               	movwf	(pad@buf+1)& (0+255),b
  3869  001216  C176  F091         	movff	efgtoa@w,pad@p
  3870  00121A  C177  F092         	movff	efgtoa@w+1,pad@p+1
  3871  00121E  ECC1  F026         	call	_pad	;wreg free
  3872  001222  C08D  F0C3         	movff	?_pad,?_efgtoa
  3873  001226  C08E  F0C4         	movff	?_pad+1,?_efgtoa+1
  3874  00122A  EFAA  F00E         	goto	l2538
  3875  00122E                     l12125:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3879  00122E  C184  F080         	movff	efgtoa@g,___fpclassifyf@x
  3880  001232  C185  F081         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3881  001236  C186  F082         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3882  00123A  C187  F083         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3883  00123E  ECA8  F023         	call	___fpclassifyf	;wreg free
  3884  001242  0100               	movlb	0	; () banked
  3885  001244  5180               	movf	?___fpclassifyf& (0+255),w,b
  3886  001246  1181               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3887  001248  A4D8               	btfss	status,2,c
  3888  00124A  EF29  F009         	goto	u14341
  3889  00124E  EF2B  F009         	goto	u14340
  3890  001252                     u14341:
  3891  001252  EF71  F009         	goto	l12143
  3892  001256                     u14340:
  3893  001256                     
  3894                           ; BSR set to: 0
  3895  001256  0EBF               	movlw	191
  3896  001258  6FCA               	movwf	??_efgtoa& (0+255),b
  3897  00125A  0EFF               	movlw	255
  3898  00125C  6FCB               	movwf	(??_efgtoa+1)& (0+255),b
  3899  00125E  51C9               	movf	efgtoa@c& (0+255),w,b
  3900  001260  6FCC               	movwf	(??_efgtoa+2)& (0+255),b
  3901  001262  6BCD               	clrf	(??_efgtoa+3)& (0+255),b
  3902  001264  51CA               	movf	??_efgtoa& (0+255),w,b
  3903  001266  27CC               	addwf	(??_efgtoa+2)& (0+255),f,b
  3904  001268  51CB               	movf	(??_efgtoa+1)& (0+255),w,b
  3905  00126A  23CD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3906  00126C  51CD               	movf	(??_efgtoa+3)& (0+255),w,b
  3907  00126E  E10A               	bnz	u14350
  3908  001270  0E1A               	movlw	26
  3909  001272  5DCC               	subwf	(??_efgtoa+2)& (0+255),w,b
  3910  001274  A0D8               	btfss	status,0,c
  3911  001276  EF3F  F009         	goto	u14351
  3912  00127A  EF42  F009         	goto	u14350
  3913  00127E                     u14351:
  3914  00127E  0E01               	movlw	1
  3915  001280  EF43  F009         	goto	u14360
  3916  001284                     u14350:
  3917  001284  0E00               	movlw	0
  3918  001286                     u14360:
  3919  001286  0101               	movlb	1	; () banked
  3920  001288  6F5C               	movwf	_efgtoa$4811& (0+255),b
  3921  00128A  6B5D               	clrf	(_efgtoa$4811+1)& (0+255),b
  3922  00128C                     
  3923                           ; BSR set to: 1
  3924  00128C  515C               	movf	_efgtoa$4811& (0+255),w,b
  3925  00128E  115D               	iorwf	(_efgtoa$4811+1)& (0+255),w,b
  3926  001290  B4D8               	btfsc	status,2,c
  3927  001292  EF4D  F009         	goto	u14371
  3928  001296  EF4F  F009         	goto	u14370
  3929  00129A                     u14371:
  3930  00129A  EF60  F009         	goto	l12135
  3931  00129E                     u14370:
  3932  00129E                     
  3933                           ; BSR set to: 1
  3934                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3935  00129E  0E00               	movlw	low _dbuf
  3936  0012A0  258A               	addwf	efgtoa@n& (0+255),w,b
  3937  0012A2  0100               	movlb	0	; () banked
  3938  0012A4  6F80               	movwf	strcpy@dest& (0+255),b
  3939  0012A6  0E02               	movlw	high _dbuf
  3940  0012A8  0101               	movlb	1	; () banked
  3941  0012AA  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3942  0012AC  0100               	movlb	0	; () banked
  3943  0012AE  6F81               	movwf	(strcpy@dest+1)& (0+255),b
  3944  0012B0  0E7A               	movlw	low STR_22
  3945  0012B2  6F82               	movwf	strcpy@src& (0+255),b
  3946  0012B4  0E10               	movlw	high STR_22
  3947  0012B6  6F83               	movwf	(strcpy@src+1)& (0+255),b
  3948  0012B8  EC45  F02E         	call	_strcpy	;wreg free
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3951  0012BC  EFFD  F008         	goto	l12119
  3952  0012C0                     l12135:
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3956  0012C0  0E00               	movlw	low _dbuf
  3957  0012C2  258A               	addwf	efgtoa@n& (0+255),w,b
  3958  0012C4  0100               	movlb	0	; () banked
  3959  0012C6  6F80               	movwf	strcpy@dest& (0+255),b
  3960  0012C8  0E02               	movlw	high _dbuf
  3961  0012CA  0101               	movlb	1	; () banked
  3962  0012CC  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3963  0012CE  0100               	movlb	0	; () banked
  3964  0012D0  6F81               	movwf	(strcpy@dest+1)& (0+255),b
  3965  0012D2  0E82               	movlw	low STR_23
  3966  0012D4  6F82               	movwf	strcpy@src& (0+255),b
  3967  0012D6  0E10               	movlw	high STR_23
  3968  0012D8  6F83               	movwf	(strcpy@src+1)& (0+255),b
  3969  0012DA  EC45  F02E         	call	_strcpy	;wreg free
  3970  0012DE  EFFD  F008         	goto	l12119
  3971  0012E2                     l12143:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3975  0012E2  0E00               	movlw	0
  3976  0012E4  0101               	movlb	1	; () banked
  3977  0012E6  6F8C               	movwf	efgtoa@u& (0+255),b
  3978  0012E8  0E00               	movlw	0
  3979  0012EA  6F8D               	movwf	(efgtoa@u+1)& (0+255),b
  3980  0012EC  0E80               	movlw	128
  3981  0012EE  6F8E               	movwf	(efgtoa@u+2)& (0+255),b
  3982  0012F0  0E3F               	movlw	63
  3983  0012F2  6F8F               	movwf	(efgtoa@u+3)& (0+255),b
  3984                           
  3985                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3986  0012F4  0E00               	movlw	0
  3987  0012F6  6F89               	movwf	(efgtoa@e+1)& (0+255),b
  3988  0012F8  0E00               	movlw	0
  3989  0012FA  6F88               	movwf	efgtoa@e& (0+255),b
  3990  0012FC                     
  3991                           ; BSR set to: 1
  3992                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3993  0012FC  C184  F080         	movff	efgtoa@g,___fleq@ff1
  3994  001300  C185  F081         	movff	efgtoa@g+1,___fleq@ff1+1
  3995  001304  C186  F082         	movff	efgtoa@g+2,___fleq@ff1+2
  3996  001308  C187  F083         	movff	efgtoa@g+3,___fleq@ff1+3
  3997  00130C  0E00               	movlw	0
  3998  00130E  0100               	movlb	0	; () banked
  3999  001310  6F84               	movwf	___fleq@ff2& (0+255),b
  4000  001312  0E00               	movlw	0
  4001  001314  6F85               	movwf	(___fleq@ff2+1)& (0+255),b
  4002  001316  0E00               	movlw	0
  4003  001318  6F86               	movwf	(___fleq@ff2+2)& (0+255),b
  4004  00131A  0E00               	movlw	0
  4005  00131C  6F87               	movwf	(___fleq@ff2+3)& (0+255),b
  4006  00131E  ECA0  F029         	call	___fleq	;wreg free
  4007  001322  0100               	movlb	0	; () banked
  4008  001324  B0D8               	btfsc	status,0,c
  4009  001326  EF97  F009         	goto	u14381
  4010  00132A  EF99  F009         	goto	u14380
  4011  00132E                     u14381:
  4012  00132E  EF1F  F00A         	goto	l12161
  4013  001332                     u14380:
  4014  001332  EFB8  F009         	goto	l12153
  4015  001336                     l12149:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4019  001336  C18C  F080         	movff	efgtoa@u,___flmul@b
  4020  00133A  C18D  F081         	movff	efgtoa@u+1,___flmul@b+1
  4021  00133E  C18E  F082         	movff	efgtoa@u+2,___flmul@b+2
  4022  001342  C18F  F083         	movff	efgtoa@u+3,___flmul@b+3
  4023  001346  0E00               	movlw	0
  4024  001348  6F84               	movwf	___flmul@a& (0+255),b
  4025  00134A  0E00               	movlw	0
  4026  00134C  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4027  00134E  0E20               	movlw	32
  4028  001350  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4029  001352  0E41               	movlw	65
  4030  001354  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4031  001356  EC22  F013         	call	___flmul	;wreg free
  4032  00135A  C080  F18C         	movff	?___flmul,efgtoa@u
  4033  00135E  C081  F18D         	movff	?___flmul+1,efgtoa@u+1
  4034  001362  C082  F18E         	movff	?___flmul+2,efgtoa@u+2
  4035  001366  C083  F18F         	movff	?___flmul+3,efgtoa@u+3
  4036  00136A                     
  4037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4038  00136A  0101               	movlb	1	; () banked
  4039  00136C  4B88               	infsnz	efgtoa@e& (0+255),f,b
  4040  00136E  2B89               	incf	(efgtoa@e+1)& (0+255),f,b
  4041  001370                     l12153:
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4044  001370  C184  F099         	movff	efgtoa@g,___flge@ff1
  4045  001374  C185  F09A         	movff	efgtoa@g+1,___flge@ff1+1
  4046  001378  C186  F09B         	movff	efgtoa@g+2,___flge@ff1+2
  4047  00137C  C187  F09C         	movff	efgtoa@g+3,___flge@ff1+3
  4048  001380  0E00               	movlw	0
  4049  001382  0100               	movlb	0	; () banked
  4050  001384  6F84               	movwf	___flmul@a& (0+255),b
  4051  001386  0E00               	movlw	0
  4052  001388  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4053  00138A  0E20               	movlw	32
  4054  00138C  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4055  00138E  0E41               	movlw	65
  4056  001390  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4057  001392  C18C  F080         	movff	efgtoa@u,___flmul@b
  4058  001396  C18D  F081         	movff	efgtoa@u+1,___flmul@b+1
  4059  00139A  C18E  F082         	movff	efgtoa@u+2,___flmul@b+2
  4060  00139E  C18F  F083         	movff	efgtoa@u+3,___flmul@b+3
  4061  0013A2  EC22  F013         	call	___flmul	;wreg free
  4062  0013A6  C080  F09D         	movff	?___flmul,___flge@ff2
  4063  0013AA  C081  F09E         	movff	?___flmul+1,___flge@ff2+1
  4064  0013AE  C082  F09F         	movff	?___flmul+2,___flge@ff2+2
  4065  0013B2  C083  F0A0         	movff	?___flmul+3,___flge@ff2+3
  4066  0013B6  EC25  F023         	call	___flge	;wreg free
  4067  0013BA  0100               	movlb	0	; () banked
  4068  0013BC  B0D8               	btfsc	status,0,c
  4069  0013BE  EFE3  F009         	goto	u14391
  4070  0013C2  EFE5  F009         	goto	u14390
  4071  0013C6                     u14391:
  4072  0013C6  EF9B  F009         	goto	l12149
  4073  0013CA                     u14390:
  4074  0013CA  EF05  F00A         	goto	l12159
  4075  0013CE                     l12155:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4079  0013CE  C18C  F092         	movff	efgtoa@u,___fldiv@b
  4080  0013D2  C18D  F093         	movff	efgtoa@u+1,___fldiv@b+1
  4081  0013D6  C18E  F094         	movff	efgtoa@u+2,___fldiv@b+2
  4082  0013DA  C18F  F095         	movff	efgtoa@u+3,___fldiv@b+3
  4083  0013DE  0E00               	movlw	0
  4084  0013E0  6F96               	movwf	___fldiv@a& (0+255),b
  4085  0013E2  0E00               	movlw	0
  4086  0013E4  6F97               	movwf	(___fldiv@a+1)& (0+255),b
  4087  0013E6  0E20               	movlw	32
  4088  0013E8  6F98               	movwf	(___fldiv@a+2)& (0+255),b
  4089  0013EA  0E41               	movlw	65
  4090  0013EC  6F99               	movwf	(___fldiv@a+3)& (0+255),b
  4091  0013EE  EC14  F017         	call	___fldiv	;wreg free
  4092  0013F2  C092  F18C         	movff	?___fldiv,efgtoa@u
  4093  0013F6  C093  F18D         	movff	?___fldiv+1,efgtoa@u+1
  4094  0013FA  C094  F18E         	movff	?___fldiv+2,efgtoa@u+2
  4095  0013FE  C095  F18F         	movff	?___fldiv+3,efgtoa@u+3
  4096  001402                     
  4097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4098  001402  0101               	movlb	1	; () banked
  4099  001404  0788               	decf	efgtoa@e& (0+255),f,b
  4100  001406  A0D8               	btfss	status,0,c
  4101  001408  0789               	decf	(efgtoa@e+1)& (0+255),f,b
  4102  00140A                     l12159:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4105  00140A  C184  F099         	movff	efgtoa@g,___flge@ff1
  4106  00140E  C185  F09A         	movff	efgtoa@g+1,___flge@ff1+1
  4107  001412  C186  F09B         	movff	efgtoa@g+2,___flge@ff1+2
  4108  001416  C187  F09C         	movff	efgtoa@g+3,___flge@ff1+3
  4109  00141A  C18C  F09D         	movff	efgtoa@u,___flge@ff2
  4110  00141E  C18D  F09E         	movff	efgtoa@u+1,___flge@ff2+1
  4111  001422  C18E  F09F         	movff	efgtoa@u+2,___flge@ff2+2
  4112  001426  C18F  F0A0         	movff	efgtoa@u+3,___flge@ff2+3
  4113  00142A  EC25  F023         	call	___flge	;wreg free
  4114  00142E  0100               	movlb	0	; () banked
  4115  001430  A0D8               	btfss	status,0,c
  4116  001432  EF1D  F00A         	goto	u14401
  4117  001436  EF1F  F00A         	goto	u14400
  4118  00143A                     u14401:
  4119  00143A  EFE7  F009         	goto	l12155
  4120  00143E                     u14400:
  4121  00143E                     l12161:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4125  00143E  C0C9  F084         	movff	efgtoa@c,tolower@c
  4126  001442  6B85               	clrf	(tolower@c+1)& (0+255),b
  4127  001444  ECB2  F02D         	call	_tolower	;wreg free
  4128  001448  0100               	movlb	0	; () banked
  4129  00144A  5184               	movf	?_tolower& (0+255),w,b
  4130  00144C  0101               	movlb	1	; () banked
  4131  00144E  6F79               	movwf	efgtoa@mode& (0+255),b
  4132  001450                     
  4133                           ; BSR set to: 1
  4134                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4135  001450  C179  F178         	movff	efgtoa@mode,efgtoa@nmode
  4136  001454                     
  4137                           ; BSR set to: 1
  4138                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4139  001454  0E67               	movlw	103
  4140  001456  1979               	xorwf	efgtoa@mode& (0+255),w,b
  4141  001458  A4D8               	btfss	status,2,c
  4142  00145A  EF31  F00A         	goto	u14411
  4143  00145E  EF33  F00A         	goto	u14410
  4144  001462                     u14411:
  4145  001462  EF59  F00A         	goto	l12175
  4146  001466                     u14410:
  4147  001466                     
  4148                           ; BSR set to: 1
  4149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4150  001466  502F               	movf	_prec^0,w,c
  4151  001468  1030               	iorwf	(_prec+1)^0,w,c
  4152  00146A  A4D8               	btfss	status,2,c
  4153  00146C  EF3A  F00A         	goto	u14421
  4154  001470  EF3C  F00A         	goto	u14420
  4155  001474                     u14421:
  4156  001474  EF40  F00A         	goto	l12171
  4157  001478                     u14420:
  4158  001478                     
  4159                           ; BSR set to: 1
  4160                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4161  001478  0E00               	movlw	0
  4162  00147A  6E30               	movwf	(_prec+1)^0,c
  4163  00147C  0E01               	movlw	1
  4164  00147E  6E2F               	movwf	_prec^0,c
  4165  001480                     l12171:
  4166                           
  4167                           ; BSR set to: 1
  4168                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4169  001480  BE30               	btfsc	(_prec+1)^0,7,c
  4170  001482  EF4D  F00A         	goto	u14430
  4171  001486  5030               	movf	(_prec+1)^0,w,c
  4172  001488  E106               	bnz	u14431
  4173  00148A  042F               	decf	_prec^0,w,c
  4174  00148C  B0D8               	btfsc	status,0,c
  4175  00148E  EF4B  F00A         	goto	u14431
  4176  001492  EF4D  F00A         	goto	u14430
  4177  001496                     u14431:
  4178  001496  EF53  F00A         	goto	l2556
  4179  00149A                     u14430:
  4180  00149A                     l12173:
  4181                           
  4182                           ; BSR set to: 1
  4183  00149A  0E00               	movlw	0
  4184  00149C  6F75               	movwf	(efgtoa@p+1)& (0+255),b
  4185  00149E  0E06               	movlw	6
  4186  0014A0  6F74               	movwf	efgtoa@p& (0+255),b
  4187  0014A2  EF62  F00A         	goto	l12181
  4188  0014A6                     l2556:
  4189                           
  4190                           ; BSR set to: 1
  4191  0014A6  C02F  F174         	movff	_prec,efgtoa@p
  4192  0014AA  C030  F175         	movff	_prec+1,efgtoa@p+1
  4193  0014AE  EF62  F00A         	goto	l12181
  4194  0014B2                     l12175:
  4195                           
  4196                           ; BSR set to: 1
  4197                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4198  0014B2  BE30               	btfsc	(_prec+1)^0,7,c
  4199  0014B4  EF5E  F00A         	goto	u14441
  4200  0014B8  EF60  F00A         	goto	u14440
  4201  0014BC                     u14441:
  4202  0014BC  EF4D  F00A         	goto	l12173
  4203  0014C0                     u14440:
  4204  0014C0  EF53  F00A         	goto	l2556
  4205  0014C4                     l12181:
  4206                           
  4207                           ; BSR set to: 1
  4208                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4209  0014C4  0E67               	movlw	103
  4210  0014C6  1979               	xorwf	efgtoa@mode& (0+255),w,b
  4211  0014C8  A4D8               	btfss	status,2,c
  4212  0014CA  EF69  F00A         	goto	u14451
  4213  0014CE  EF6B  F00A         	goto	u14450
  4214  0014D2                     u14451:
  4215  0014D2  EFA1  F00A         	goto	l12191
  4216  0014D6                     u14450:
  4217  0014D6                     
  4218                           ; BSR set to: 1
  4219                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4220  0014D6  AF89               	btfss	(efgtoa@e+1)& (0+255),7,b
  4221  0014D8  EF79  F00A         	goto	u14460
  4222  0014DC  0EFC               	movlw	252
  4223  0014DE  5D88               	subwf	efgtoa@e& (0+255),w,b
  4224  0014E0  0EFF               	movlw	255
  4225  0014E2  5989               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4226  0014E4  A0D8               	btfss	status,0,c
  4227  0014E6  EF77  F00A         	goto	u14461
  4228  0014EA  EF79  F00A         	goto	u14460
  4229  0014EE                     u14461:
  4230  0014EE  EF9E  F00A         	goto	l12189
  4231  0014F2                     u14460:
  4232  0014F2                     
  4233                           ; BSR set to: 1
  4234  0014F2  0EFF               	movlw	255
  4235  0014F4  0100               	movlb	0	; () banked
  4236  0014F6  6FCA               	movwf	??_efgtoa& (0+255),b
  4237  0014F8  0EFF               	movlw	255
  4238  0014FA  6FCB               	movwf	(??_efgtoa+1)& (0+255),b
  4239  0014FC  C174  F0CC         	movff	efgtoa@p,??_efgtoa+2
  4240  001500  C175  F0CD         	movff	efgtoa@p+1,??_efgtoa+3
  4241  001504  51CA               	movf	??_efgtoa& (0+255),w,b
  4242  001506  27CC               	addwf	(??_efgtoa+2)& (0+255),f,b
  4243  001508  51CB               	movf	(??_efgtoa+1)& (0+255),w,b
  4244  00150A  23CD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4245  00150C  0101               	movlb	1	; () banked
  4246  00150E  5188               	movf	efgtoa@e& (0+255),w,b
  4247  001510  0100               	movlb	0	; () banked
  4248  001512  5DCC               	subwf	(??_efgtoa+2)& (0+255),w,b
  4249  001514  51CD               	movf	(??_efgtoa+3)& (0+255),w,b
  4250  001516  0A80               	xorlw	128
  4251  001518  6FCE               	movwf	(??_efgtoa+4)& (0+255),b
  4252  00151A  0101               	movlb	1	; () banked
  4253  00151C  5189               	movf	(efgtoa@e+1)& (0+255),w,b
  4254  00151E  0A80               	xorlw	128
  4255  001520  0100               	movlb	0	; () banked
  4256  001522  59CE               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4257  001524  A0D8               	btfss	status,0,c
  4258  001526  EF97  F00A         	goto	u14471
  4259  00152A  EF99  F00A         	goto	u14470
  4260  00152E                     u14471:
  4261  00152E  EF9E  F00A         	goto	l12189
  4262  001532                     u14470:
  4263  001532                     
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4266  001532  0E66               	movlw	102
  4267  001534  0101               	movlb	1	; () banked
  4268  001536  6F78               	movwf	efgtoa@nmode& (0+255),b
  4269                           
  4270                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4271  001538  EFA1  F00A         	goto	l12191
  4272  00153C                     l12189:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4275  00153C  0E65               	movlw	101
  4276  00153E  0101               	movlb	1	; () banked
  4277  001540  6F78               	movwf	efgtoa@nmode& (0+255),b
  4278  001542                     l12191:
  4279                           
  4280                           ; BSR set to: 1
  4281                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4282  001542  C174  F16A         	movff	efgtoa@p,efgtoa@m
  4283  001546  C175  F16B         	movff	efgtoa@p+1,efgtoa@m+1
  4284  00154A                     
  4285                           ; BSR set to: 1
  4286                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4287  00154A  0E67               	movlw	103
  4288  00154C  1979               	xorwf	efgtoa@mode& (0+255),w,b
  4289  00154E  A4D8               	btfss	status,2,c
  4290  001550  EFAC  F00A         	goto	u14481
  4291  001554  EFAE  F00A         	goto	u14480
  4292  001558                     u14481:
  4293  001558  EFBE  F00A         	goto	l12199
  4294  00155C                     u14480:
  4295  00155C                     
  4296                           ; BSR set to: 1
  4297  00155C  0E66               	movlw	102
  4298  00155E  1978               	xorwf	efgtoa@nmode& (0+255),w,b
  4299  001560  A4D8               	btfss	status,2,c
  4300  001562  EFB5  F00A         	goto	u14491
  4301  001566  EFB7  F00A         	goto	u14490
  4302  00156A                     u14491:
  4303  00156A  EFC0  F00A         	goto	l12201
  4304  00156E                     u14490:
  4305  00156E                     
  4306                           ; BSR set to: 1
  4307  00156E  BF89               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4308  001570  EFBE  F00A         	goto	u14500
  4309  001574  EFBC  F00A         	goto	u14501
  4310  001578                     u14501:
  4311  001578  EFC0  F00A         	goto	l12201
  4312  00157C                     u14500:
  4313  00157C                     l12199:
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4317  00157C  4B6A               	infsnz	efgtoa@m& (0+255),f,b
  4318  00157E  2B6B               	incf	(efgtoa@m+1)& (0+255),f,b
  4319  001580                     l12201:
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4323  001580  0E66               	movlw	102
  4324  001582  1978               	xorwf	efgtoa@nmode& (0+255),w,b
  4325  001584  A4D8               	btfss	status,2,c
  4326  001586  EFC7  F00A         	goto	u14511
  4327  00158A  EFC9  F00A         	goto	u14510
  4328  00158E                     u14511:
  4329  00158E  EFE9  F00A         	goto	l12211
  4330  001592                     u14510:
  4331  001592                     
  4332                           ; BSR set to: 1
  4333                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4334  001592  BF89               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4335  001594  EFD0  F00A         	goto	u14520
  4336  001598  EFCE  F00A         	goto	u14521
  4337  00159C                     u14521:
  4338  00159C  EFDC  F00A         	goto	l12207
  4339  0015A0                     u14520:
  4340  0015A0                     
  4341                           ; BSR set to: 1
  4342                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4343  0015A0  0E00               	movlw	0
  4344  0015A2  6F8C               	movwf	efgtoa@u& (0+255),b
  4345  0015A4  0E00               	movlw	0
  4346  0015A6  6F8D               	movwf	(efgtoa@u+1)& (0+255),b
  4347  0015A8  0E80               	movlw	128
  4348  0015AA  6F8E               	movwf	(efgtoa@u+2)& (0+255),b
  4349  0015AC  0E3F               	movlw	63
  4350  0015AE  6F8F               	movwf	(efgtoa@u+3)& (0+255),b
  4351                           
  4352                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4353  0015B0  0E00               	movlw	0
  4354  0015B2  6F89               	movwf	(efgtoa@e+1)& (0+255),b
  4355  0015B4  0E00               	movlw	0
  4356  0015B6  6F88               	movwf	efgtoa@e& (0+255),b
  4357  0015B8                     l12207:
  4358                           
  4359                           ; BSR set to: 1
  4360                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4361  0015B8  0E67               	movlw	103
  4362  0015BA  1979               	xorwf	efgtoa@mode& (0+255),w,b
  4363  0015BC  B4D8               	btfsc	status,2,c
  4364  0015BE  EFE3  F00A         	goto	u14531
  4365  0015C2  EFE5  F00A         	goto	u14530
  4366  0015C6                     u14531:
  4367  0015C6  EFE9  F00A         	goto	l12211
  4368  0015CA                     u14530:
  4369  0015CA                     
  4370                           ; BSR set to: 1
  4371                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4372  0015CA  5188               	movf	efgtoa@e& (0+255),w,b
  4373  0015CC  276A               	addwf	efgtoa@m& (0+255),f,b
  4374  0015CE  5189               	movf	(efgtoa@e+1)& (0+255),w,b
  4375  0015D0  236B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4376  0015D2                     l12211:
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4380  0015D2  0E00               	movlw	0
  4381  0015D4  6F83               	movwf	(efgtoa@i+1)& (0+255),b
  4382  0015D6  0E00               	movlw	0
  4383  0015D8  6F82               	movwf	efgtoa@i& (0+255),b
  4384  0015DA                     
  4385                           ; BSR set to: 1
  4386                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4387  0015DA  C184  F17A         	movff	efgtoa@g,efgtoa@h
  4388  0015DE  C185  F17B         	movff	efgtoa@g+1,efgtoa@h+1
  4389  0015E2  C186  F17C         	movff	efgtoa@g+2,efgtoa@h+2
  4390  0015E6  C187  F17D         	movff	efgtoa@g+3,efgtoa@h+3
  4391  0015EA                     
  4392                           ; BSR set to: 1
  4393                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4394  0015EA  C18C  F16C         	movff	efgtoa@u,efgtoa@ou
  4395  0015EE  C18D  F16D         	movff	efgtoa@u+1,efgtoa@ou+1
  4396  0015F2  C18E  F16E         	movff	efgtoa@u+2,efgtoa@ou+2
  4397  0015F6  C18F  F16F         	movff	efgtoa@u+3,efgtoa@ou+3
  4398                           
  4399                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4400  0015FA  EF7B  F00B         	goto	l12225
  4401  0015FE                     l12217:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4405  0015FE  C17A  F092         	movff	efgtoa@h,___fldiv@b
  4406  001602  C17B  F093         	movff	efgtoa@h+1,___fldiv@b+1
  4407  001606  C17C  F094         	movff	efgtoa@h+2,___fldiv@b+2
  4408  00160A  C17D  F095         	movff	efgtoa@h+3,___fldiv@b+3
  4409  00160E  C18C  F096         	movff	efgtoa@u,___fldiv@a
  4410  001612  C18D  F097         	movff	efgtoa@u+1,___fldiv@a+1
  4411  001616  C18E  F098         	movff	efgtoa@u+2,___fldiv@a+2
  4412  00161A  C18F  F099         	movff	efgtoa@u+3,___fldiv@a+3
  4413  00161E  EC14  F017         	call	___fldiv	;wreg free
  4414  001622  C092  F0AB         	movff	?___fldiv,floorf@x
  4415  001626  C093  F0AC         	movff	?___fldiv+1,floorf@x+1
  4416  00162A  C094  F0AD         	movff	?___fldiv+2,floorf@x+2
  4417  00162E  C095  F0AE         	movff	?___fldiv+3,floorf@x+3
  4418  001632  EC54  F01A         	call	_floorf	;wreg free
  4419  001636  C0AB  F17E         	movff	?_floorf,efgtoa@l
  4420  00163A  C0AC  F17F         	movff	?_floorf+1,efgtoa@l+1
  4421  00163E  C0AD  F180         	movff	?_floorf+2,efgtoa@l+2
  4422  001642  C0AE  F181         	movff	?_floorf+3,efgtoa@l+3
  4423                           
  4424                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4425  001646  C17E  F080         	movff	efgtoa@l,___fltol@f1
  4426  00164A  C17F  F081         	movff	efgtoa@l+1,___fltol@f1+1
  4427  00164E  C180  F082         	movff	efgtoa@l+2,___fltol@f1+2
  4428  001652  C181  F083         	movff	efgtoa@l+3,___fltol@f1+3
  4429  001656  ECA1  F022         	call	___fltol	;wreg free
  4430  00165A  C080  F170         	movff	?___fltol,efgtoa@d
  4431  00165E  C081  F171         	movff	?___fltol+1,efgtoa@d+1
  4432  001662                     
  4433                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4434  001662  C17A  F0BB         	movff	efgtoa@h,___flsub@b
  4435  001666  C17B  F0BC         	movff	efgtoa@h+1,___flsub@b+1
  4436  00166A  C17C  F0BD         	movff	efgtoa@h+2,___flsub@b+2
  4437  00166E  C17D  F0BE         	movff	efgtoa@h+3,___flsub@b+3
  4438  001672  C18C  F084         	movff	efgtoa@u,___flmul@a
  4439  001676  C18D  F085         	movff	efgtoa@u+1,___flmul@a+1
  4440  00167A  C18E  F086         	movff	efgtoa@u+2,___flmul@a+2
  4441  00167E  C18F  F087         	movff	efgtoa@u+3,___flmul@a+3
  4442  001682  C17E  F080         	movff	efgtoa@l,___flmul@b
  4443  001686  C17F  F081         	movff	efgtoa@l+1,___flmul@b+1
  4444  00168A  C180  F082         	movff	efgtoa@l+2,___flmul@b+2
  4445  00168E  C181  F083         	movff	efgtoa@l+3,___flmul@b+3
  4446  001692  EC22  F013         	call	___flmul	;wreg free
  4447  001696  C080  F0BF         	movff	?___flmul,___flsub@a
  4448  00169A  C081  F0C0         	movff	?___flmul+1,___flsub@a+1
  4449  00169E  C082  F0C1         	movff	?___flmul+2,___flsub@a+2
  4450  0016A2  C083  F0C2         	movff	?___flmul+3,___flsub@a+3
  4451  0016A6  ECBD  F02F         	call	___flsub	;wreg free
  4452  0016AA  C0BB  F17A         	movff	?___flsub,efgtoa@h
  4453  0016AE  C0BC  F17B         	movff	?___flsub+1,efgtoa@h+1
  4454  0016B2  C0BD  F17C         	movff	?___flsub+2,efgtoa@h+2
  4455  0016B6  C0BE  F17D         	movff	?___flsub+3,efgtoa@h+3
  4456  0016BA                     
  4457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4458  0016BA  C18C  F092         	movff	efgtoa@u,___fldiv@b
  4459  0016BE  C18D  F093         	movff	efgtoa@u+1,___fldiv@b+1
  4460  0016C2  C18E  F094         	movff	efgtoa@u+2,___fldiv@b+2
  4461  0016C6  C18F  F095         	movff	efgtoa@u+3,___fldiv@b+3
  4462  0016CA  0E00               	movlw	0
  4463  0016CC  0100               	movlb	0	; () banked
  4464  0016CE  6F96               	movwf	___fldiv@a& (0+255),b
  4465  0016D0  0E00               	movlw	0
  4466  0016D2  6F97               	movwf	(___fldiv@a+1)& (0+255),b
  4467  0016D4  0E20               	movlw	32
  4468  0016D6  6F98               	movwf	(___fldiv@a+2)& (0+255),b
  4469  0016D8  0E41               	movlw	65
  4470  0016DA  6F99               	movwf	(___fldiv@a+3)& (0+255),b
  4471  0016DC  EC14  F017         	call	___fldiv	;wreg free
  4472  0016E0  C092  F18C         	movff	?___fldiv,efgtoa@u
  4473  0016E4  C093  F18D         	movff	?___fldiv+1,efgtoa@u+1
  4474  0016E8  C094  F18E         	movff	?___fldiv+2,efgtoa@u+2
  4475  0016EC  C095  F18F         	movff	?___fldiv+3,efgtoa@u+3
  4476  0016F0                     
  4477                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4478  0016F0  0101               	movlb	1	; () banked
  4479  0016F2  4B82               	infsnz	efgtoa@i& (0+255),f,b
  4480  0016F4  2B83               	incf	(efgtoa@i+1)& (0+255),f,b
  4481  0016F6                     l12225:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4485  0016F6  516A               	movf	efgtoa@m& (0+255),w,b
  4486  0016F8  5D82               	subwf	efgtoa@i& (0+255),w,b
  4487  0016FA  5183               	movf	(efgtoa@i+1)& (0+255),w,b
  4488  0016FC  0A80               	xorlw	128
  4489  0016FE  0100               	movlb	0	; () banked
  4490  001700  6FCA               	movwf	??_efgtoa& (0+255),b
  4491  001702  0101               	movlb	1	; () banked
  4492  001704  516B               	movf	(efgtoa@m+1)& (0+255),w,b
  4493  001706  0A80               	xorlw	128
  4494  001708  0100               	movlb	0	; () banked
  4495  00170A  59CA               	subwfb	??_efgtoa& (0+255),w,b
  4496  00170C  A0D8               	btfss	status,0,c
  4497  00170E  EF8B  F00B         	goto	u14541
  4498  001712  EF8D  F00B         	goto	u14540
  4499  001716                     u14541:
  4500  001716  EFFF  F00A         	goto	l12217
  4501  00171A                     u14540:
  4502  00171A                     
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4505  00171A  C18C  F080         	movff	efgtoa@u,___flmul@b
  4506  00171E  C18D  F081         	movff	efgtoa@u+1,___flmul@b+1
  4507  001722  C18E  F082         	movff	efgtoa@u+2,___flmul@b+2
  4508  001726  C18F  F083         	movff	efgtoa@u+3,___flmul@b+3
  4509  00172A  0E00               	movlw	0
  4510  00172C  6F84               	movwf	___flmul@a& (0+255),b
  4511  00172E  0E00               	movlw	0
  4512  001730  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4513  001732  0EA0               	movlw	160
  4514  001734  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4515  001736  0E40               	movlw	64
  4516  001738  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4517  00173A  EC22  F013         	call	___flmul	;wreg free
  4518  00173E  C080  F17E         	movff	?___flmul,efgtoa@l
  4519  001742  C081  F17F         	movff	?___flmul+1,efgtoa@l+1
  4520  001746  C082  F180         	movff	?___flmul+2,efgtoa@l+2
  4521  00174A  C083  F181         	movff	?___flmul+3,efgtoa@l+3
  4522  00174E                     
  4523                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4524  00174E  C17A  F099         	movff	efgtoa@h,___flge@ff1
  4525  001752  C17B  F09A         	movff	efgtoa@h+1,___flge@ff1+1
  4526  001756  C17C  F09B         	movff	efgtoa@h+2,___flge@ff1+2
  4527  00175A  C17D  F09C         	movff	efgtoa@h+3,___flge@ff1+3
  4528  00175E  C17E  F09D         	movff	efgtoa@l,___flge@ff2
  4529  001762  C17F  F09E         	movff	efgtoa@l+1,___flge@ff2+1
  4530  001766  C180  F09F         	movff	efgtoa@l+2,___flge@ff2+2
  4531  00176A  C181  F0A0         	movff	efgtoa@l+3,___flge@ff2+3
  4532  00176E  EC25  F023         	call	___flge	;wreg free
  4533  001772  0100               	movlb	0	; () banked
  4534  001774  B0D8               	btfsc	status,0,c
  4535  001776  EFBF  F00B         	goto	u14551
  4536  00177A  EFC1  F00B         	goto	u14550
  4537  00177E                     u14551:
  4538  00177E  EFCC  F00B         	goto	l12233
  4539  001782                     u14550:
  4540  001782                     
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4543  001782  0E00               	movlw	0
  4544  001784  0101               	movlb	1	; () banked
  4545  001786  6F7E               	movwf	efgtoa@l& (0+255),b
  4546  001788  0E00               	movlw	0
  4547  00178A  6F7F               	movwf	(efgtoa@l+1)& (0+255),b
  4548  00178C  0E00               	movlw	0
  4549  00178E  6F80               	movwf	(efgtoa@l+2)& (0+255),b
  4550  001790  0E00               	movlw	0
  4551  001792  6F81               	movwf	(efgtoa@l+3)& (0+255),b
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 443:     } else {
  4554  001794  EFF6  F00B         	goto	l12239
  4555  001798                     l12233:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4559  001798  C17A  F080         	movff	efgtoa@h,___fleq@ff1
  4560  00179C  C17B  F081         	movff	efgtoa@h+1,___fleq@ff1+1
  4561  0017A0  C17C  F082         	movff	efgtoa@h+2,___fleq@ff1+2
  4562  0017A4  C17D  F083         	movff	efgtoa@h+3,___fleq@ff1+3
  4563  0017A8  C17E  F084         	movff	efgtoa@l,___fleq@ff2
  4564  0017AC  C17F  F085         	movff	efgtoa@l+1,___fleq@ff2+1
  4565  0017B0  C180  F086         	movff	efgtoa@l+2,___fleq@ff2+2
  4566  0017B4  C181  F087         	movff	efgtoa@l+3,___fleq@ff2+3
  4567  0017B8  ECA0  F029         	call	___fleq	;wreg free
  4568  0017BC  0100               	movlb	0	; () banked
  4569  0017BE  A0D8               	btfss	status,0,c
  4570  0017C0  EFE4  F00B         	goto	u14561
  4571  0017C4  EFE6  F00B         	goto	u14560
  4572  0017C8                     u14561:
  4573  0017C8  EFF6  F00B         	goto	l12239
  4574  0017CC                     u14560:
  4575  0017CC                     
  4576                           ; BSR set to: 0
  4577  0017CC  0101               	movlb	1	; () banked
  4578  0017CE  B170               	btfsc	efgtoa@d& (0+255),0,b
  4579  0017D0  EFEC  F00B         	goto	u14571
  4580  0017D4  EFEE  F00B         	goto	u14570
  4581  0017D8                     u14571:
  4582  0017D8  EFF6  F00B         	goto	l12239
  4583  0017DC                     u14570:
  4584  0017DC                     
  4585                           ; BSR set to: 1
  4586                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4587  0017DC  0E00               	movlw	0
  4588  0017DE  6F7E               	movwf	efgtoa@l& (0+255),b
  4589  0017E0  0E00               	movlw	0
  4590  0017E2  6F7F               	movwf	(efgtoa@l+1)& (0+255),b
  4591  0017E4  0E00               	movlw	0
  4592  0017E6  6F80               	movwf	(efgtoa@l+2)& (0+255),b
  4593  0017E8  0E00               	movlw	0
  4594  0017EA  6F81               	movwf	(efgtoa@l+3)& (0+255),b
  4595  0017EC                     l12239:
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4598  0017EC  C184  F0AB         	movff	efgtoa@g,___fladd@b
  4599  0017F0  C185  F0AC         	movff	efgtoa@g+1,___fladd@b+1
  4600  0017F4  C186  F0AD         	movff	efgtoa@g+2,___fladd@b+2
  4601  0017F8  C187  F0AE         	movff	efgtoa@g+3,___fladd@b+3
  4602  0017FC  C17E  F0AF         	movff	efgtoa@l,___fladd@a
  4603  001800  C17F  F0B0         	movff	efgtoa@l+1,___fladd@a+1
  4604  001804  C180  F0B1         	movff	efgtoa@l+2,___fladd@a+2
  4605  001808  C181  F0B2         	movff	efgtoa@l+3,___fladd@a+3
  4606  00180C  ECAB  F00E         	call	___fladd	;wreg free
  4607  001810  C0AB  F17A         	movff	?___fladd,efgtoa@h
  4608  001814  C0AC  F17B         	movff	?___fladd+1,efgtoa@h+1
  4609  001818  C0AD  F17C         	movff	?___fladd+2,efgtoa@h+2
  4610  00181C  C0AE  F17D         	movff	?___fladd+3,efgtoa@h+3
  4611  001820                     
  4612                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4613  001820  C17A  F099         	movff	efgtoa@h,___flge@ff1
  4614  001824  C17B  F09A         	movff	efgtoa@h+1,___flge@ff1+1
  4615  001828  C17C  F09B         	movff	efgtoa@h+2,___flge@ff1+2
  4616  00182C  C17D  F09C         	movff	efgtoa@h+3,___flge@ff1+3
  4617  001830  0E00               	movlw	0
  4618  001832  0100               	movlb	0	; () banked
  4619  001834  6F84               	movwf	___flmul@a& (0+255),b
  4620  001836  0E00               	movlw	0
  4621  001838  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4622  00183A  0E20               	movlw	32
  4623  00183C  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4624  00183E  0E41               	movlw	65
  4625  001840  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4626  001842  C16C  F080         	movff	efgtoa@ou,___flmul@b
  4627  001846  C16D  F081         	movff	efgtoa@ou+1,___flmul@b+1
  4628  00184A  C16E  F082         	movff	efgtoa@ou+2,___flmul@b+2
  4629  00184E  C16F  F083         	movff	efgtoa@ou+3,___flmul@b+3
  4630  001852  EC22  F013         	call	___flmul	;wreg free
  4631  001856  C080  F09D         	movff	?___flmul,___flge@ff2
  4632  00185A  C081  F09E         	movff	?___flmul+1,___flge@ff2+1
  4633  00185E  C082  F09F         	movff	?___flmul+2,___flge@ff2+2
  4634  001862  C083  F0A0         	movff	?___flmul+3,___flge@ff2+3
  4635  001866  EC25  F023         	call	___flge	;wreg free
  4636  00186A  0100               	movlb	0	; () banked
  4637  00186C  A0D8               	btfss	status,0,c
  4638  00186E  EF3B  F00C         	goto	u14581
  4639  001872  EF3D  F00C         	goto	u14580
  4640  001876                     u14581:
  4641  001876  EF67  F00C         	goto	l12251
  4642  00187A                     u14580:
  4643  00187A                     
  4644                           ; BSR set to: 0
  4645                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 454:   e++;
  4646  00187A  0101               	movlb	1	; () banked
  4647  00187C  4B88               	infsnz	efgtoa@e& (0+255),f,b
  4648  00187E  2B89               	incf	(efgtoa@e+1)& (0+255),f,b
  4649  001880                     
  4650                           ; BSR set to: 1
  4651                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4652  001880  C16C  F080         	movff	efgtoa@ou,___flmul@b
  4653  001884  C16D  F081         	movff	efgtoa@ou+1,___flmul@b+1
  4654  001888  C16E  F082         	movff	efgtoa@ou+2,___flmul@b+2
  4655  00188C  C16F  F083         	movff	efgtoa@ou+3,___flmul@b+3
  4656  001890  0E00               	movlw	0
  4657  001892  0100               	movlb	0	; () banked
  4658  001894  6F84               	movwf	___flmul@a& (0+255),b
  4659  001896  0E00               	movlw	0
  4660  001898  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4661  00189A  0E20               	movlw	32
  4662  00189C  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4663  00189E  0E41               	movlw	65
  4664  0018A0  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4665  0018A2  EC22  F013         	call	___flmul	;wreg free
  4666  0018A6  C080  F16C         	movff	?___flmul,efgtoa@ou
  4667  0018AA  C081  F16D         	movff	?___flmul+1,efgtoa@ou+1
  4668  0018AE  C082  F16E         	movff	?___flmul+2,efgtoa@ou+2
  4669  0018B2  C083  F16F         	movff	?___flmul+3,efgtoa@ou+3
  4670  0018B6                     
  4671                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4672  0018B6  0E66               	movlw	102
  4673  0018B8  0101               	movlb	1	; () banked
  4674  0018BA  1978               	xorwf	efgtoa@nmode& (0+255),w,b
  4675  0018BC  A4D8               	btfss	status,2,c
  4676  0018BE  EF63  F00C         	goto	u14591
  4677  0018C2  EF65  F00C         	goto	u14590
  4678  0018C6                     u14591:
  4679  0018C6  EF67  F00C         	goto	l12251
  4680  0018CA                     u14590:
  4681  0018CA                     
  4682                           ; BSR set to: 1
  4683                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 458:    m++;
  4684  0018CA  4B6A               	infsnz	efgtoa@m& (0+255),f,b
  4685  0018CC  2B6B               	incf	(efgtoa@m+1)& (0+255),f,b
  4686  0018CE                     l12251:
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4689  0018CE  C16C  F18C         	movff	efgtoa@ou,efgtoa@u
  4690  0018D2  C16D  F18D         	movff	efgtoa@ou+1,efgtoa@u+1
  4691  0018D6  C16E  F18E         	movff	efgtoa@ou+2,efgtoa@u+2
  4692  0018DA  C16F  F18F         	movff	efgtoa@ou+3,efgtoa@u+3
  4693  0018DE                     
  4694                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4695  0018DE  0E65               	movlw	101
  4696  0018E0  0101               	movlb	1	; () banked
  4697  0018E2  1978               	xorwf	efgtoa@nmode& (0+255),w,b
  4698  0018E4  B4D8               	btfsc	status,2,c
  4699  0018E6  EF77  F00C         	goto	u14601
  4700  0018EA  EF79  F00C         	goto	u14600
  4701  0018EE                     u14601:
  4702  0018EE  EF7F  F00C         	goto	l12257
  4703  0018F2                     u14600:
  4704  0018F2                     
  4705                           ; BSR set to: 1
  4706  0018F2  C188  F168         	movff	efgtoa@e,efgtoa@ne
  4707  0018F6  C189  F169         	movff	efgtoa@e+1,efgtoa@ne+1
  4708  0018FA  EF83  F00C         	goto	l2584
  4709  0018FE                     l12257:
  4710                           
  4711                           ; BSR set to: 1
  4712  0018FE  0E00               	movlw	0
  4713  001900  6F69               	movwf	(efgtoa@ne+1)& (0+255),b
  4714  001902  0E00               	movlw	0
  4715  001904  6F68               	movwf	efgtoa@ne& (0+255),b
  4716  001906                     l2584:
  4717                           
  4718                           ; BSR set to: 1
  4719                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4720  001906  0E00               	movlw	0
  4721  001908  6F67               	movwf	(efgtoa@pp+1)& (0+255),b
  4722  00190A  0E00               	movlw	0
  4723  00190C  6F66               	movwf	efgtoa@pp& (0+255),b
  4724                           
  4725                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4726  00190E  0E00               	movlw	0
  4727  001910  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4728  001912  0E00               	movlw	0
  4729  001914  6F64               	movwf	efgtoa@t& (0+255),b
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4732  001916  0E00               	movlw	0
  4733  001918  6F83               	movwf	(efgtoa@i+1)& (0+255),b
  4734  00191A  0E00               	movlw	0
  4735  00191C  6F82               	movwf	efgtoa@i& (0+255),b
  4736                           
  4737                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4738  00191E  EF80  F00D         	goto	l12307
  4739  001922                     l12259:
  4740                           
  4741                           ; BSR set to: 1
  4742                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4743  001922  C17A  F092         	movff	efgtoa@h,___fldiv@b
  4744  001926  C17B  F093         	movff	efgtoa@h+1,___fldiv@b+1
  4745  00192A  C17C  F094         	movff	efgtoa@h+2,___fldiv@b+2
  4746  00192E  C17D  F095         	movff	efgtoa@h+3,___fldiv@b+3
  4747  001932  C18C  F096         	movff	efgtoa@u,___fldiv@a
  4748  001936  C18D  F097         	movff	efgtoa@u+1,___fldiv@a+1
  4749  00193A  C18E  F098         	movff	efgtoa@u+2,___fldiv@a+2
  4750  00193E  C18F  F099         	movff	efgtoa@u+3,___fldiv@a+3
  4751  001942  EC14  F017         	call	___fldiv	;wreg free
  4752  001946  C092  F0AB         	movff	?___fldiv,floorf@x
  4753  00194A  C093  F0AC         	movff	?___fldiv+1,floorf@x+1
  4754  00194E  C094  F0AD         	movff	?___fldiv+2,floorf@x+2
  4755  001952  C095  F0AE         	movff	?___fldiv+3,floorf@x+3
  4756  001956  EC54  F01A         	call	_floorf	;wreg free
  4757  00195A  C0AB  F17E         	movff	?_floorf,efgtoa@l
  4758  00195E  C0AC  F17F         	movff	?_floorf+1,efgtoa@l+1
  4759  001962  C0AD  F180         	movff	?_floorf+2,efgtoa@l+2
  4760  001966  C0AE  F181         	movff	?_floorf+3,efgtoa@l+3
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4763  00196A  C17E  F080         	movff	efgtoa@l,___fltol@f1
  4764  00196E  C17F  F081         	movff	efgtoa@l+1,___fltol@f1+1
  4765  001972  C180  F082         	movff	efgtoa@l+2,___fltol@f1+2
  4766  001976  C181  F083         	movff	efgtoa@l+3,___fltol@f1+3
  4767  00197A  ECA1  F022         	call	___fltol	;wreg free
  4768  00197E  C080  F170         	movff	?___fltol,efgtoa@d
  4769  001982  C081  F171         	movff	?___fltol+1,efgtoa@d+1
  4770  001986                     
  4771                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4772  001986  B831               	btfsc	_flags@doprnt$F4763^0,4,c
  4773  001988  EFC8  F00C         	goto	u14611
  4774  00198C  EFCA  F00C         	goto	u14610
  4775  001990                     u14611:
  4776  001990  EFE8  F00C         	goto	l12271
  4777  001994                     u14610:
  4778  001994  0101               	movlb	1	; () banked
  4779  001996  5170               	movf	efgtoa@d& (0+255),w,b
  4780  001998  1171               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4781  00199A  A4D8               	btfss	status,2,c
  4782  00199C  EFD2  F00C         	goto	u14621
  4783  0019A0  EFD4  F00C         	goto	u14620
  4784  0019A4                     u14621:
  4785  0019A4  EFE8  F00C         	goto	l12271
  4786  0019A8                     u14620:
  4787  0019A8                     
  4788                           ; BSR set to: 1
  4789  0019A8  0E67               	movlw	103
  4790  0019AA  1979               	xorwf	efgtoa@mode& (0+255),w,b
  4791  0019AC  A4D8               	btfss	status,2,c
  4792  0019AE  EFDB  F00C         	goto	u14631
  4793  0019B2  EFDD  F00C         	goto	u14630
  4794  0019B6                     u14631:
  4795  0019B6  EFE8  F00C         	goto	l12271
  4796  0019BA                     u14630:
  4797  0019BA                     
  4798                           ; BSR set to: 1
  4799  0019BA  BF69               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4800  0019BC  EFE4  F00C         	goto	u14640
  4801  0019C0  EFE2  F00C         	goto	u14641
  4802  0019C4                     u14641:
  4803  0019C4  EFE8  F00C         	goto	l12271
  4804  0019C8                     u14640:
  4805  0019C8                     
  4806                           ; BSR set to: 1
  4807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4808  0019C8  4B64               	infsnz	efgtoa@t& (0+255),f,b
  4809  0019CA  2B65               	incf	(efgtoa@t+1)& (0+255),f,b
  4810                           
  4811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4812  0019CC  EF33  F00D         	goto	l12299
  4813  0019D0                     l12271:
  4814                           
  4815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4816  0019D0  0101               	movlb	1	; () banked
  4817  0019D2  5166               	movf	efgtoa@pp& (0+255),w,b
  4818  0019D4  1167               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4819  0019D6  A4D8               	btfss	status,2,c
  4820  0019D8  EFF0  F00C         	goto	u14651
  4821  0019DC  EFF2  F00C         	goto	u14650
  4822  0019E0                     u14651:
  4823  0019E0  EF1C  F00D         	goto	l12291
  4824  0019E4                     u14650:
  4825  0019E4                     
  4826                           ; BSR set to: 1
  4827  0019E4  BF69               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4828  0019E6  EFF9  F00C         	goto	u14660
  4829  0019EA  EFF7  F00C         	goto	u14661
  4830  0019EE                     u14661:
  4831  0019EE  EF1C  F00D         	goto	l12291
  4832  0019F2                     u14660:
  4833  0019F2                     
  4834                           ; BSR set to: 1
  4835                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4836  0019F2  0E00               	movlw	low _dbuf
  4837  0019F4  258A               	addwf	efgtoa@n& (0+255),w,b
  4838  0019F6  6ED9               	movwf	fsr2l,c
  4839  0019F8  0E02               	movlw	high _dbuf
  4840  0019FA  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4841  0019FC  6EDA               	movwf	fsr2h,c
  4842  0019FE  0E2E               	movlw	46
  4843  001A00  6EDF               	movwf	indf2,c
  4844  001A02                     
  4845                           ; BSR set to: 1
  4846  001A02  4B8A               	infsnz	efgtoa@n& (0+255),f,b
  4847  001A04  2B8B               	incf	(efgtoa@n+1)& (0+255),f,b
  4848  001A06                     
  4849                           ; BSR set to: 1
  4850                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4851  001A06  0776               	decf	efgtoa@w& (0+255),f,b
  4852  001A08  A0D8               	btfss	status,0,c
  4853  001A0A  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  4854  001A0C                     
  4855                           ; BSR set to: 1
  4856                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4857  001A0C  0E00               	movlw	0
  4858  001A0E  6F67               	movwf	(efgtoa@pp+1)& (0+255),b
  4859  001A10  0E01               	movlw	1
  4860  001A12  6F66               	movwf	efgtoa@pp& (0+255),b
  4861  001A14  EF1C  F00D         	goto	l12291
  4862  001A18                     l12283:
  4863                           
  4864                           ; BSR set to: 1
  4865                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4866  001A18  0E00               	movlw	low _dbuf
  4867  001A1A  258A               	addwf	efgtoa@n& (0+255),w,b
  4868  001A1C  6ED9               	movwf	fsr2l,c
  4869  001A1E  0E02               	movlw	high _dbuf
  4870  001A20  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4871  001A22  6EDA               	movwf	fsr2h,c
  4872  001A24  0E30               	movlw	48
  4873  001A26  6EDF               	movwf	indf2,c
  4874  001A28                     
  4875                           ; BSR set to: 1
  4876  001A28  4B8A               	infsnz	efgtoa@n& (0+255),f,b
  4877  001A2A  2B8B               	incf	(efgtoa@n+1)& (0+255),f,b
  4878  001A2C                     
  4879                           ; BSR set to: 1
  4880                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4881  001A2C  0776               	decf	efgtoa@w& (0+255),f,b
  4882  001A2E  A0D8               	btfss	status,0,c
  4883  001A30  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  4884  001A32                     
  4885                           ; BSR set to: 1
  4886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4887  001A32  0764               	decf	efgtoa@t& (0+255),f,b
  4888  001A34  A0D8               	btfss	status,0,c
  4889  001A36  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4890  001A38                     l12291:
  4891                           
  4892                           ; BSR set to: 1
  4893                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4894  001A38  5164               	movf	efgtoa@t& (0+255),w,b
  4895  001A3A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4896  001A3C  A4D8               	btfss	status,2,c
  4897  001A3E  EF23  F00D         	goto	u14671
  4898  001A42  EF25  F00D         	goto	u14670
  4899  001A46                     u14671:
  4900  001A46  EF0C  F00D         	goto	l12283
  4901  001A4A                     u14670:
  4902  001A4A                     
  4903                           ; BSR set to: 1
  4904                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4905  001A4A  0E00               	movlw	low _dbuf
  4906  001A4C  258A               	addwf	efgtoa@n& (0+255),w,b
  4907  001A4E  6ED9               	movwf	fsr2l,c
  4908  001A50  0E02               	movlw	high _dbuf
  4909  001A52  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4910  001A54  6EDA               	movwf	fsr2h,c
  4911  001A56  5170               	movf	efgtoa@d& (0+255),w,b
  4912  001A58  0F30               	addlw	48
  4913  001A5A  6EDF               	movwf	indf2,c
  4914  001A5C                     
  4915                           ; BSR set to: 1
  4916  001A5C  4B8A               	infsnz	efgtoa@n& (0+255),f,b
  4917  001A5E  2B8B               	incf	(efgtoa@n+1)& (0+255),f,b
  4918  001A60                     
  4919                           ; BSR set to: 1
  4920                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4921  001A60  0776               	decf	efgtoa@w& (0+255),f,b
  4922  001A62  A0D8               	btfss	status,0,c
  4923  001A64  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  4924  001A66                     l12299:
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4928  001A66  C17A  F0BB         	movff	efgtoa@h,___flsub@b
  4929  001A6A  C17B  F0BC         	movff	efgtoa@h+1,___flsub@b+1
  4930  001A6E  C17C  F0BD         	movff	efgtoa@h+2,___flsub@b+2
  4931  001A72  C17D  F0BE         	movff	efgtoa@h+3,___flsub@b+3
  4932  001A76  C18C  F084         	movff	efgtoa@u,___flmul@a
  4933  001A7A  C18D  F085         	movff	efgtoa@u+1,___flmul@a+1
  4934  001A7E  C18E  F086         	movff	efgtoa@u+2,___flmul@a+2
  4935  001A82  C18F  F087         	movff	efgtoa@u+3,___flmul@a+3
  4936  001A86  C17E  F080         	movff	efgtoa@l,___flmul@b
  4937  001A8A  C17F  F081         	movff	efgtoa@l+1,___flmul@b+1
  4938  001A8E  C180  F082         	movff	efgtoa@l+2,___flmul@b+2
  4939  001A92  C181  F083         	movff	efgtoa@l+3,___flmul@b+3
  4940  001A96  EC22  F013         	call	___flmul	;wreg free
  4941  001A9A  C080  F0BF         	movff	?___flmul,___flsub@a
  4942  001A9E  C081  F0C0         	movff	?___flmul+1,___flsub@a+1
  4943  001AA2  C082  F0C1         	movff	?___flmul+2,___flsub@a+2
  4944  001AA6  C083  F0C2         	movff	?___flmul+3,___flsub@a+3
  4945  001AAA  ECBD  F02F         	call	___flsub	;wreg free
  4946  001AAE  C0BB  F17A         	movff	?___flsub,efgtoa@h
  4947  001AB2  C0BC  F17B         	movff	?___flsub+1,efgtoa@h+1
  4948  001AB6  C0BD  F17C         	movff	?___flsub+2,efgtoa@h+2
  4949  001ABA  C0BE  F17D         	movff	?___flsub+3,efgtoa@h+3
  4950  001ABE                     
  4951                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4952  001ABE  C18C  F092         	movff	efgtoa@u,___fldiv@b
  4953  001AC2  C18D  F093         	movff	efgtoa@u+1,___fldiv@b+1
  4954  001AC6  C18E  F094         	movff	efgtoa@u+2,___fldiv@b+2
  4955  001ACA  C18F  F095         	movff	efgtoa@u+3,___fldiv@b+3
  4956  001ACE  0E00               	movlw	0
  4957  001AD0  0100               	movlb	0	; () banked
  4958  001AD2  6F96               	movwf	___fldiv@a& (0+255),b
  4959  001AD4  0E00               	movlw	0
  4960  001AD6  6F97               	movwf	(___fldiv@a+1)& (0+255),b
  4961  001AD8  0E20               	movlw	32
  4962  001ADA  6F98               	movwf	(___fldiv@a+2)& (0+255),b
  4963  001ADC  0E41               	movlw	65
  4964  001ADE  6F99               	movwf	(___fldiv@a+3)& (0+255),b
  4965  001AE0  EC14  F017         	call	___fldiv	;wreg free
  4966  001AE4  C092  F18C         	movff	?___fldiv,efgtoa@u
  4967  001AE8  C093  F18D         	movff	?___fldiv+1,efgtoa@u+1
  4968  001AEC  C094  F18E         	movff	?___fldiv+2,efgtoa@u+2
  4969  001AF0  C095  F18F         	movff	?___fldiv+3,efgtoa@u+3
  4970  001AF4                     
  4971                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4972  001AF4  0101               	movlb	1	; () banked
  4973  001AF6  0768               	decf	efgtoa@ne& (0+255),f,b
  4974  001AF8  A0D8               	btfss	status,0,c
  4975  001AFA  0769               	decf	(efgtoa@ne+1)& (0+255),f,b
  4976  001AFC                     
  4977                           ; BSR set to: 1
  4978                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4979  001AFC  4B82               	infsnz	efgtoa@i& (0+255),f,b
  4980  001AFE  2B83               	incf	(efgtoa@i+1)& (0+255),f,b
  4981  001B00                     l12307:
  4982                           
  4983                           ; BSR set to: 1
  4984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4985  001B00  516A               	movf	efgtoa@m& (0+255),w,b
  4986  001B02  5D82               	subwf	efgtoa@i& (0+255),w,b
  4987  001B04  5183               	movf	(efgtoa@i+1)& (0+255),w,b
  4988  001B06  0A80               	xorlw	128
  4989  001B08  0100               	movlb	0	; () banked
  4990  001B0A  6FCA               	movwf	??_efgtoa& (0+255),b
  4991  001B0C  0101               	movlb	1	; () banked
  4992  001B0E  516B               	movf	(efgtoa@m+1)& (0+255),w,b
  4993  001B10  0A80               	xorlw	128
  4994  001B12  0100               	movlb	0	; () banked
  4995  001B14  59CA               	subwfb	??_efgtoa& (0+255),w,b
  4996  001B16  B0D8               	btfsc	status,0,c
  4997  001B18  EF90  F00D         	goto	u14681
  4998  001B1C  EF92  F00D         	goto	u14680
  4999  001B20                     u14681:
  5000  001B20  EFA1  F00D         	goto	l12311
  5001  001B24                     u14680:
  5002  001B24                     
  5003                           ; BSR set to: 0
  5004  001B24  0101               	movlb	1	; () banked
  5005  001B26  BF8B               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5006  001B28  EF9F  F00D         	goto	u14691
  5007  001B2C  518B               	movf	(efgtoa@n+1)& (0+255),w,b
  5008  001B2E  E109               	bnz	u14690
  5009  001B30  0E4B               	movlw	75
  5010  001B32  5D8A               	subwf	efgtoa@n& (0+255),w,b
  5011  001B34  A0D8               	btfss	status,0,c
  5012  001B36  EF9F  F00D         	goto	u14691
  5013  001B3A  EFA1  F00D         	goto	u14690
  5014  001B3E                     u14691:
  5015  001B3E  EF91  F00C         	goto	l12259
  5016  001B42                     u14690:
  5017  001B42                     l12311:
  5018                           
  5019                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5020  001B42  0101               	movlb	1	; () banked
  5021  001B44  5166               	movf	efgtoa@pp& (0+255),w,b
  5022  001B46  1167               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5023  001B48  A4D8               	btfss	status,2,c
  5024  001B4A  EFA9  F00D         	goto	u14701
  5025  001B4E  EFAB  F00D         	goto	u14700
  5026  001B52                     u14701:
  5027  001B52  EFBC  F00D         	goto	l12319
  5028  001B56                     u14700:
  5029  001B56                     
  5030                           ; BSR set to: 1
  5031  001B56  A831               	btfss	_flags@doprnt$F4763^0,4,c
  5032  001B58  EFB0  F00D         	goto	u14711
  5033  001B5C  EFB2  F00D         	goto	u14710
  5034  001B60                     u14711:
  5035  001B60  EFBC  F00D         	goto	l12319
  5036  001B64                     u14710:
  5037  001B64                     
  5038                           ; BSR set to: 1
  5039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5040  001B64  0E00               	movlw	low _dbuf
  5041  001B66  258A               	addwf	efgtoa@n& (0+255),w,b
  5042  001B68  6ED9               	movwf	fsr2l,c
  5043  001B6A  0E02               	movlw	high _dbuf
  5044  001B6C  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5045  001B6E  6EDA               	movwf	fsr2h,c
  5046  001B70  0E2E               	movlw	46
  5047  001B72  6EDF               	movwf	indf2,c
  5048  001B74                     
  5049                           ; BSR set to: 1
  5050  001B74  4B8A               	infsnz	efgtoa@n& (0+255),f,b
  5051  001B76  2B8B               	incf	(efgtoa@n+1)& (0+255),f,b
  5052  001B78                     l12319:
  5053                           
  5054                           ; BSR set to: 1
  5055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5056  001B78  0E00               	movlw	low _dbuf
  5057  001B7A  258A               	addwf	efgtoa@n& (0+255),w,b
  5058  001B7C  6ED9               	movwf	fsr2l,c
  5059  001B7E  0E02               	movlw	high _dbuf
  5060  001B80  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5061  001B82  6EDA               	movwf	fsr2h,c
  5062  001B84  0E00               	movlw	0
  5063  001B86  6EDF               	movwf	indf2,c
  5064  001B88                     
  5065                           ; BSR set to: 1
  5066                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5067  001B88  0E65               	movlw	101
  5068  001B8A  1978               	xorwf	efgtoa@nmode& (0+255),w,b
  5069  001B8C  A4D8               	btfss	status,2,c
  5070  001B8E  EFCB  F00D         	goto	u14721
  5071  001B92  EFCD  F00D         	goto	u14720
  5072  001B96                     u14721:
  5073  001B96  EF02  F009         	goto	l12121
  5074  001B9A                     u14720:
  5075  001B9A                     
  5076                           ; BSR set to: 1
  5077                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5078  001B9A  0E00               	movlw	0
  5079  001B9C  6F83               	movwf	(efgtoa@i+1)& (0+255),b
  5080  001B9E  0E4F               	movlw	79
  5081  001BA0  6F82               	movwf	efgtoa@i& (0+255),b
  5082  001BA2                     
  5083                           ; BSR set to: 1
  5084                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5085  001BA2  0E00               	movlw	low _dbuf
  5086  001BA4  2582               	addwf	efgtoa@i& (0+255),w,b
  5087  001BA6  6ED9               	movwf	fsr2l,c
  5088  001BA8  0E02               	movlw	high _dbuf
  5089  001BAA  2183               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5090  001BAC  6EDA               	movwf	fsr2h,c
  5091  001BAE  0E00               	movlw	0
  5092  001BB0  6EDF               	movwf	indf2,c
  5093  001BB2                     
  5094                           ; BSR set to: 1
  5095                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5096  001BB2  0E00               	movlw	0
  5097  001BB4  6F73               	movwf	(efgtoa@sign+1)& (0+255),b
  5098  001BB6  0E00               	movlw	0
  5099  001BB8  6F72               	movwf	efgtoa@sign& (0+255),b
  5100  001BBA                     
  5101                           ; BSR set to: 1
  5102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5103  001BBA  BF89               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5104  001BBC  EFE4  F00D         	goto	u14730
  5105  001BC0  EFE2  F00D         	goto	u14731
  5106  001BC4                     u14731:
  5107  001BC4  EFEC  F00D         	goto	l12335
  5108  001BC8                     u14730:
  5109  001BC8                     
  5110                           ; BSR set to: 1
  5111                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5112  001BC8  0E00               	movlw	0
  5113  001BCA  6F73               	movwf	(efgtoa@sign+1)& (0+255),b
  5114  001BCC  0E01               	movlw	1
  5115  001BCE  6F72               	movwf	efgtoa@sign& (0+255),b
  5116  001BD0                     
  5117                           ; BSR set to: 1
  5118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5119  001BD0  6D88               	negf	efgtoa@e& (0+255),b
  5120  001BD2  1F89               	comf	(efgtoa@e+1)& (0+255),f,b
  5121  001BD4  B0D8               	btfsc	status,0,c
  5122  001BD6  2B89               	incf	(efgtoa@e+1)& (0+255),f,b
  5123  001BD8                     l12335:
  5124                           
  5125                           ; BSR set to: 1
  5126                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5127  001BD8  0E00               	movlw	0
  5128  001BDA  6F75               	movwf	(efgtoa@p+1)& (0+255),b
  5129  001BDC  0E02               	movlw	2
  5130  001BDE  6F74               	movwf	efgtoa@p& (0+255),b
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5133  001BE0  EF1F  F00E         	goto	l12347
  5134  001BE4                     l12337:
  5135                           
  5136                           ; BSR set to: 1
  5137                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5138  001BE4  0782               	decf	efgtoa@i& (0+255),f,b
  5139  001BE6  A0D8               	btfss	status,0,c
  5140  001BE8  0783               	decf	(efgtoa@i+1)& (0+255),f,b
  5141  001BEA                     
  5142                           ; BSR set to: 1
  5143                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5144  001BEA  0E00               	movlw	low _dbuf
  5145  001BEC  2582               	addwf	efgtoa@i& (0+255),w,b
  5146  001BEE  6ED9               	movwf	fsr2l,c
  5147  001BF0  0E02               	movlw	high _dbuf
  5148  001BF2  2183               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5149  001BF4  6EDA               	movwf	fsr2h,c
  5150  001BF6  C188  F080         	movff	efgtoa@e,___awmod@dividend
  5151  001BFA  C189  F081         	movff	efgtoa@e+1,___awmod@dividend+1
  5152  001BFE  0E00               	movlw	0
  5153  001C00  0100               	movlb	0	; () banked
  5154  001C02  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5155  001C04  0E0A               	movlw	10
  5156  001C06  6F82               	movwf	___awmod@divisor& (0+255),b
  5157  001C08  EC3F  F028         	call	___awmod	;wreg free
  5158  001C0C  0100               	movlb	0	; () banked
  5159  001C0E  5180               	movf	?___awmod& (0+255),w,b
  5160  001C10  0F30               	addlw	48
  5161  001C12  6EDF               	movwf	indf2,c
  5162  001C14                     
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5165  001C14  C188  F080         	movff	efgtoa@e,___awdiv@dividend
  5166  001C18  C189  F081         	movff	efgtoa@e+1,___awdiv@dividend+1
  5167  001C1C  0E00               	movlw	0
  5168  001C1E  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  5169  001C20  0E0A               	movlw	10
  5170  001C22  6F82               	movwf	___awdiv@divisor& (0+255),b
  5171  001C24  EC25  F027         	call	___awdiv	;wreg free
  5172  001C28  C080  F188         	movff	?___awdiv,efgtoa@e
  5173  001C2C  C081  F189         	movff	?___awdiv+1,efgtoa@e+1
  5174  001C30                     
  5175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5176  001C30  0101               	movlb	1	; () banked
  5177  001C32  0774               	decf	efgtoa@p& (0+255),f,b
  5178  001C34  A0D8               	btfss	status,0,c
  5179  001C36  0775               	decf	(efgtoa@p+1)& (0+255),f,b
  5180  001C38                     
  5181                           ; BSR set to: 1
  5182                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5183  001C38  0776               	decf	efgtoa@w& (0+255),f,b
  5184  001C3A  A0D8               	btfss	status,0,c
  5185  001C3C  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  5186  001C3E                     l12347:
  5187                           
  5188                           ; BSR set to: 1
  5189                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5190  001C3E  5188               	movf	efgtoa@e& (0+255),w,b
  5191  001C40  1189               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5192  001C42  A4D8               	btfss	status,2,c
  5193  001C44  EF26  F00E         	goto	u14741
  5194  001C48  EF28  F00E         	goto	u14740
  5195  001C4C                     u14741:
  5196  001C4C  EFF2  F00D         	goto	l12337
  5197  001C50                     u14740:
  5198  001C50                     
  5199                           ; BSR set to: 1
  5200  001C50  BF75               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5201  001C52  EF35  F00E         	goto	u14750
  5202  001C56  5175               	movf	(efgtoa@p+1)& (0+255),w,b
  5203  001C58  E106               	bnz	u14751
  5204  001C5A  0574               	decf	efgtoa@p& (0+255),w,b
  5205  001C5C  B0D8               	btfsc	status,0,c
  5206  001C5E  EF33  F00E         	goto	u14751
  5207  001C62  EF35  F00E         	goto	u14750
  5208  001C66                     u14751:
  5209  001C66  EFF2  F00D         	goto	l12337
  5210  001C6A                     u14750:
  5211  001C6A                     
  5212                           ; BSR set to: 1
  5213                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 514:         --i;
  5214  001C6A  0782               	decf	efgtoa@i& (0+255),f,b
  5215  001C6C  A0D8               	btfss	status,0,c
  5216  001C6E  0783               	decf	(efgtoa@i+1)& (0+255),f,b
  5217  001C70                     
  5218                           ; BSR set to: 1
  5219                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5220  001C70  5172               	movf	efgtoa@sign& (0+255),w,b
  5221  001C72  1173               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5222  001C74  A4D8               	btfss	status,2,c
  5223  001C76  EF3F  F00E         	goto	u14761
  5224  001C7A  EF41  F00E         	goto	u14760
  5225  001C7E                     u14761:
  5226  001C7E  EF47  F00E         	goto	l12357
  5227  001C82                     u14760:
  5228  001C82                     
  5229                           ; BSR set to: 1
  5230  001C82  0E00               	movlw	0
  5231  001C84  6F5F               	movwf	(_efgtoa$4815+1)& (0+255),b
  5232  001C86  0E2B               	movlw	43
  5233  001C88  6F5E               	movwf	_efgtoa$4815& (0+255),b
  5234  001C8A  EF4B  F00E         	goto	l12359
  5235  001C8E                     l12357:
  5236                           
  5237                           ; BSR set to: 1
  5238  001C8E  0E00               	movlw	0
  5239  001C90  6F5F               	movwf	(_efgtoa$4815+1)& (0+255),b
  5240  001C92  0E2D               	movlw	45
  5241  001C94  6F5E               	movwf	_efgtoa$4815& (0+255),b
  5242  001C96                     l12359:
  5243                           
  5244                           ; BSR set to: 1
  5245  001C96  0E00               	movlw	low _dbuf
  5246  001C98  2582               	addwf	efgtoa@i& (0+255),w,b
  5247  001C9A  6ED9               	movwf	fsr2l,c
  5248  001C9C  0E02               	movlw	high _dbuf
  5249  001C9E  2183               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5250  001CA0  6EDA               	movwf	fsr2h,c
  5251  001CA2  C15E  FFDF         	movff	_efgtoa$4815,indf2
  5252  001CA6                     
  5253                           ; BSR set to: 1
  5254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 516:         --w;
  5255  001CA6  0776               	decf	efgtoa@w& (0+255),f,b
  5256  001CA8  A0D8               	btfss	status,0,c
  5257  001CAA  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  5258  001CAC                     
  5259                           ; BSR set to: 1
  5260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5261  001CAC  0782               	decf	efgtoa@i& (0+255),f,b
  5262  001CAE  A0D8               	btfss	status,0,c
  5263  001CB0  0783               	decf	(efgtoa@i+1)& (0+255),f,b
  5264  001CB2                     
  5265                           ; BSR set to: 1
  5266  001CB2  0EBF               	movlw	191
  5267  001CB4  0100               	movlb	0	; () banked
  5268  001CB6  6FCA               	movwf	??_efgtoa& (0+255),b
  5269  001CB8  0EFF               	movlw	255
  5270  001CBA  6FCB               	movwf	(??_efgtoa+1)& (0+255),b
  5271  001CBC  51C9               	movf	efgtoa@c& (0+255),w,b
  5272  001CBE  6FCC               	movwf	(??_efgtoa+2)& (0+255),b
  5273  001CC0  6BCD               	clrf	(??_efgtoa+3)& (0+255),b
  5274  001CC2  51CA               	movf	??_efgtoa& (0+255),w,b
  5275  001CC4  27CC               	addwf	(??_efgtoa+2)& (0+255),f,b
  5276  001CC6  51CB               	movf	(??_efgtoa+1)& (0+255),w,b
  5277  001CC8  23CD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5278  001CCA  51CD               	movf	(??_efgtoa+3)& (0+255),w,b
  5279  001CCC  E10A               	bnz	u14770
  5280  001CCE  0E1A               	movlw	26
  5281  001CD0  5DCC               	subwf	(??_efgtoa+2)& (0+255),w,b
  5282  001CD2  A0D8               	btfss	status,0,c
  5283  001CD4  EF6E  F00E         	goto	u14771
  5284  001CD8  EF71  F00E         	goto	u14770
  5285  001CDC                     u14771:
  5286  001CDC  0E01               	movlw	1
  5287  001CDE  EF72  F00E         	goto	u14780
  5288  001CE2                     u14770:
  5289  001CE2  0E00               	movlw	0
  5290  001CE4                     u14780:
  5291  001CE4  0101               	movlb	1	; () banked
  5292  001CE6  6F62               	movwf	_efgtoa$4817& (0+255),b
  5293  001CE8  6B63               	clrf	(_efgtoa$4817+1)& (0+255),b
  5294  001CEA                     
  5295                           ; BSR set to: 1
  5296  001CEA  5162               	movf	_efgtoa$4817& (0+255),w,b
  5297  001CEC  1163               	iorwf	(_efgtoa$4817+1)& (0+255),w,b
  5298  001CEE  A4D8               	btfss	status,2,c
  5299  001CF0  EF7C  F00E         	goto	u14791
  5300  001CF4  EF7E  F00E         	goto	u14790
  5301  001CF8                     u14791:
  5302  001CF8  EF84  F00E         	goto	l12373
  5303  001CFC                     u14790:
  5304  001CFC                     
  5305                           ; BSR set to: 1
  5306  001CFC  0E00               	movlw	0
  5307  001CFE  6F61               	movwf	(_efgtoa$4816+1)& (0+255),b
  5308  001D00  0E65               	movlw	101
  5309  001D02  6F60               	movwf	_efgtoa$4816& (0+255),b
  5310  001D04  EF88  F00E         	goto	l12375
  5311  001D08                     l12373:
  5312                           
  5313                           ; BSR set to: 1
  5314  001D08  0E00               	movlw	0
  5315  001D0A  6F61               	movwf	(_efgtoa$4816+1)& (0+255),b
  5316  001D0C  0E45               	movlw	69
  5317  001D0E  6F60               	movwf	_efgtoa$4816& (0+255),b
  5318  001D10                     l12375:
  5319                           
  5320                           ; BSR set to: 1
  5321  001D10  0E00               	movlw	low _dbuf
  5322  001D12  2582               	addwf	efgtoa@i& (0+255),w,b
  5323  001D14  6ED9               	movwf	fsr2l,c
  5324  001D16  0E02               	movlw	high _dbuf
  5325  001D18  2183               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5326  001D1A  6EDA               	movwf	fsr2h,c
  5327  001D1C  C160  FFDF         	movff	_efgtoa$4816,indf2
  5328  001D20                     
  5329                           ; BSR set to: 1
  5330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 519:         --w;
  5331  001D20  0776               	decf	efgtoa@w& (0+255),f,b
  5332  001D22  A0D8               	btfss	status,0,c
  5333  001D24  0777               	decf	(efgtoa@w+1)& (0+255),f,b
  5334  001D26                     
  5335                           ; BSR set to: 1
  5336                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5337  001D26  0E00               	movlw	low _dbuf
  5338  001D28  258A               	addwf	efgtoa@n& (0+255),w,b
  5339  001D2A  0100               	movlb	0	; () banked
  5340  001D2C  6F80               	movwf	strcpy@dest& (0+255),b
  5341  001D2E  0E02               	movlw	high _dbuf
  5342  001D30  0101               	movlb	1	; () banked
  5343  001D32  218B               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5344  001D34  0100               	movlb	0	; () banked
  5345  001D36  6F81               	movwf	(strcpy@dest+1)& (0+255),b
  5346  001D38  0E00               	movlw	low _dbuf
  5347  001D3A  0101               	movlb	1	; () banked
  5348  001D3C  2582               	addwf	efgtoa@i& (0+255),w,b
  5349  001D3E  0100               	movlb	0	; () banked
  5350  001D40  6F82               	movwf	strcpy@src& (0+255),b
  5351  001D42  0E02               	movlw	high _dbuf
  5352  001D44  0101               	movlb	1	; () banked
  5353  001D46  2183               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5354  001D48  0100               	movlb	0	; () banked
  5355  001D4A  6F83               	movwf	(strcpy@src+1)& (0+255),b
  5356  001D4C  EC45  F02E         	call	_strcpy	;wreg free
  5357  001D50  EF02  F009         	goto	l12121
  5358  001D54                     l2538:
  5359  001D54  0012               	return		;funcret
  5360  001D56                     __end_of_efgtoa:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _tolower *****************
  5364 ;; Defined at:
  5365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\tolower.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  c               2    4[BANK0 ] int 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2    4[BANK0 ] int 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;Total ram usage:        8 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:   11
  5386 ;; This function calls:
  5387 ;;		_isupper
  5388 ;; This function is called by:
  5389 ;;		_efgtoa
  5390 ;;		_vfpfcnvrt
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text11
  5395  005B64                     __ptext11:
  5396                           	callstack 0
  5397  005B64                     _tolower:
  5398                           	callstack 14
  5399  005B64  0EBF               	movlw	191
  5400  005B66  0100               	movlb	0	; () banked
  5401  005B68  6F86               	movwf	??_tolower& (0+255),b
  5402  005B6A  0EFF               	movlw	255
  5403  005B6C  6F87               	movwf	(??_tolower+1)& (0+255),b
  5404  005B6E  C084  F088         	movff	tolower@c,??_tolower+2
  5405  005B72  C085  F089         	movff	tolower@c+1,??_tolower+3
  5406  005B76  5186               	movf	??_tolower& (0+255),w,b
  5407  005B78  2788               	addwf	(??_tolower+2)& (0+255),f,b
  5408  005B7A  5187               	movf	(??_tolower+1)& (0+255),w,b
  5409  005B7C  2389               	addwfc	(??_tolower+3)& (0+255),f,b
  5410  005B7E  5189               	movf	(??_tolower+3)& (0+255),w,b
  5411  005B80  E10A               	bnz	u13940
  5412  005B82  0E1A               	movlw	26
  5413  005B84  5D88               	subwf	(??_tolower+2)& (0+255),w,b
  5414  005B86  A0D8               	btfss	status,0,c
  5415  005B88  EFC8  F02D         	goto	u13941
  5416  005B8C  EFCB  F02D         	goto	u13940
  5417  005B90                     u13941:
  5418  005B90  0E01               	movlw	1
  5419  005B92  EFCC  F02D         	goto	u13950
  5420  005B96                     u13940:
  5421  005B96  0E00               	movlw	0
  5422  005B98                     u13950:
  5423  005B98  6F8A               	movwf	_tolower$4933& (0+255),b
  5424  005B9A  6B8B               	clrf	(_tolower$4933+1)& (0+255),b
  5425  005B9C                     
  5426                           ; BSR set to: 0
  5427  005B9C  518A               	movf	_tolower$4933& (0+255),w,b
  5428  005B9E  118B               	iorwf	(_tolower$4933+1)& (0+255),w,b
  5429  005BA0  B4D8               	btfsc	status,2,c
  5430  005BA2  EFD5  F02D         	goto	u13961
  5431  005BA6  EFD7  F02D         	goto	u13960
  5432  005BAA                     u13961:
  5433  005BAA  EFDE  F02D         	goto	l2723
  5434  005BAE                     u13960:
  5435  005BAE                     
  5436                           ; BSR set to: 0
  5437  005BAE  0E20               	movlw	32
  5438  005BB0  1184               	iorwf	tolower@c& (0+255),w,b
  5439  005BB2  6F84               	movwf	?_tolower& (0+255),b
  5440  005BB4  5185               	movf	(tolower@c+1)& (0+255),w,b
  5441  005BB6  6F85               	movwf	(?_tolower+1)& (0+255),b
  5442  005BB8  EFE2  F02D         	goto	l2728
  5443  005BBC                     l2723:
  5444                           
  5445                           ; BSR set to: 0
  5446  005BBC  C084  F084         	movff	tolower@c,?_tolower
  5447  005BC0  C085  F085         	movff	tolower@c+1,?_tolower+1
  5448  005BC4                     l2728:
  5449                           
  5450                           ; BSR set to: 0
  5451  005BC4  0012               	return		;funcret
  5452  005BC6                     __end_of_tolower:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _isupper *****************
  5456 ;; Defined at:
  5457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  c               2   41[COMRAM] int 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  2   41[COMRAM] int 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        6 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:   10
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_efgtoa
  5482 ;;		_vfpfcnvrt
  5483 ;;		_tolower
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text12
  5488  00618C                     __ptext12:
  5489                           	callstack 0
  5490  00618C                     _isupper:
  5491                           	callstack 14
  5492  00618C  0EBF               	movlw	191
  5493  00618E  0100               	movlb	0	; () banked
  5494  006190  6F80               	movwf	??_isupper& (0+255),b
  5495  006192  0EFF               	movlw	255
  5496  006194  6F81               	movwf	(??_isupper+1)& (0+255),b
  5497  006196  C02A  F082         	movff	isupper@c,??_isupper+2
  5498  00619A  C02B  F083         	movff	isupper@c+1,??_isupper+3
  5499  00619E  5180               	movf	??_isupper& (0+255),w,b
  5500  0061A0  2782               	addwf	(??_isupper+2)& (0+255),f,b
  5501  0061A2  5181               	movf	(??_isupper+1)& (0+255),w,b
  5502  0061A4  2383               	addwfc	(??_isupper+3)& (0+255),f,b
  5503  0061A6  5183               	movf	(??_isupper+3)& (0+255),w,b
  5504  0061A8  E10A               	bnz	u12950
  5505  0061AA  0E1A               	movlw	26
  5506  0061AC  5D82               	subwf	(??_isupper+2)& (0+255),w,b
  5507  0061AE  A0D8               	btfss	status,0,c
  5508  0061B0  EFDC  F030         	goto	u12951
  5509  0061B4  EFDF  F030         	goto	u12950
  5510  0061B8                     u12951:
  5511  0061B8  0E01               	movlw	1
  5512  0061BA  EFE0  F030         	goto	u12960
  5513  0061BE                     u12950:
  5514  0061BE  0E00               	movlw	0
  5515  0061C0                     u12960:
  5516  0061C0  6E2A               	movwf	?_isupper^0,c
  5517  0061C2  6A2B               	clrf	(?_isupper+1)^0,c
  5518  0061C4                     
  5519                           ; BSR set to: 0
  5520  0061C4  0012               	return		;funcret
  5521  0061C6                     __end_of_isupper:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _strcpy *****************
  5525 ;; Defined at:
  5526 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcpy.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  5529 ;;		 -> dbuf(80), 
  5530 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  5531 ;;		 -> STR_23(4), STR_22(4), STR_19(4), STR_18(4), 
  5532 ;;		 -> dbuf(80), 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  d               2    6[BANK0 ] PTR unsigned char 
  5535 ;;		 -> dbuf(80), 
  5536 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5537 ;;		 -> STR_23(4), STR_22(4), STR_19(4), STR_18(4), 
  5538 ;;		 -> dbuf(80), 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  2    0[BANK0 ] PTR unsigned char 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;Total ram usage:       10 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:   10
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_efgtoa
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text13
  5563  005C8A                     __ptext13:
  5564                           	callstack 0
  5565  005C8A                     _strcpy:
  5566                           	callstack 14
  5567  005C8A  C082  F084         	movff	strcpy@src,strcpy@s
  5568  005C8E  C083  F085         	movff	strcpy@src+1,strcpy@s+1
  5569  005C92  C080  F086         	movff	strcpy@dest,strcpy@d
  5570  005C96  C081  F087         	movff	strcpy@dest+1,strcpy@d+1
  5571  005C9A                     l11951:
  5572  005C9A  0100               	movlb	0	; () banked
  5573  005C9C  5184               	movf	strcpy@s& (0+255),w,b
  5574  005C9E  6E2A               	movwf	??_strcpy^0,c
  5575  005CA0  5185               	movf	(strcpy@s+1)& (0+255),w,b
  5576  005CA2  6E2B               	movwf	(??_strcpy+1)^0,c
  5577  005CA4  4B84               	infsnz	strcpy@s& (0+255),f,b
  5578  005CA6  2B85               	incf	(strcpy@s+1)& (0+255),f,b
  5579  005CA8  C02A  FFF6         	movff	??_strcpy,tblptrl
  5580  005CAC  C02B  FFF7         	movff	??_strcpy+1,tblptrh
  5581  005CB0  0E00               	movlw	low (__smallconst shr (0+16))
  5582  005CB2  6EF8               	movwf	tblptru,c
  5583  005CB4  C086  FFD9         	movff	strcpy@d,fsr2l
  5584  005CB8  C087  FFDA         	movff	strcpy@d+1,fsr2h
  5585  005CBC  4B86               	infsnz	strcpy@d& (0+255),f,b
  5586  005CBE  2B87               	incf	(strcpy@d+1)& (0+255),f,b
  5587  005CC0  0E0F               	movlw	(high __ramtop+-1)
  5588  005CC2  64F7               	cpfsgt	tblptrh,c
  5589  005CC4  D003               	bra	u13927
  5590  005CC6  0008               	tblrd		*
  5591  005CC8  50F5               	movf	tablat,w,c
  5592  005CCA  D005               	bra	u13920
  5593  005CCC                     u13927:
  5594  005CCC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5595  005CD0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5596  005CD4  50EF               	movf	indf0,w,c
  5597  005CD6                     u13920:
  5598  005CD6  6EDF               	movwf	indf2,c
  5599  005CD8  50DF               	movf	indf2,w,c
  5600  005CDA  A4D8               	btfss	status,2,c
  5601  005CDC  EF72  F02E         	goto	u13931
  5602  005CE0  EF74  F02E         	goto	u13930
  5603  005CE4                     u13931:
  5604  005CE4  EF4D  F02E         	goto	l11951
  5605  005CE8                     u13930:
  5606  005CE8  0012               	return		;funcret
  5607  005CEA                     __end_of_strcpy:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _floorf *****************
  5611 ;; Defined at:
  5612 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\floorf.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  x               4   43[BANK0 ] float 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  u               4   59[BANK0 ] struct .
  5617 ;;  m               4   53[BANK0 ] unsigned long 
  5618 ;;  e               2   57[BANK0 ] int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  4   43[BANK0 ] float 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;Total ram usage:       20 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:   10
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_efgtoa
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text14
  5643  0034A8                     __ptext14:
  5644                           	callstack 0
  5645  0034A8                     _floorf:
  5646                           	callstack 14
  5647  0034A8  C10F  F0BB         	movff	floorf@F527,floorf@u
  5648  0034AC  C110  F0BC         	movff	floorf@F527+1,floorf@u+1
  5649  0034B0  C111  F0BD         	movff	floorf@F527+2,floorf@u+2
  5650  0034B4  C112  F0BE         	movff	floorf@F527+3,floorf@u+3
  5651  0034B8  C0AB  F0BB         	movff	floorf@x,floorf@u
  5652  0034BC  C0AC  F0BC         	movff	floorf@x+1,floorf@u+1
  5653  0034C0  C0AD  F0BD         	movff	floorf@x+2,floorf@u+2
  5654  0034C4  C0AE  F0BE         	movff	floorf@x+3,floorf@u+3
  5655  0034C8  0E81               	movlw	129
  5656  0034CA  0100               	movlb	0	; () banked
  5657  0034CC  6FAF               	movwf	??_floorf& (0+255),b
  5658  0034CE  0EFF               	movlw	255
  5659  0034D0  6FB0               	movwf	(??_floorf+1)& (0+255),b
  5660  0034D2  C0BB  F0B1         	movff	floorf@u,??_floorf+2
  5661  0034D6  C0BC  F0B2         	movff	floorf@u+1,??_floorf+3
  5662  0034DA  C0BD  F0B3         	movff	floorf@u+2,??_floorf+4
  5663  0034DE  C0BE  F0B4         	movff	floorf@u+3,??_floorf+5
  5664  0034E2  0E18               	movlw	24
  5665  0034E4  EF79  F01A         	goto	u13970
  5666  0034E8                     u13975:
  5667  0034E8  90D8               	bcf	status,0,c
  5668  0034EA  33B4               	rrcf	(??_floorf+5)& (0+255),f,b
  5669  0034EC  33B3               	rrcf	(??_floorf+4)& (0+255),f,b
  5670  0034EE  33B2               	rrcf	(??_floorf+3)& (0+255),f,b
  5671  0034F0  33B1               	rrcf	(??_floorf+2)& (0+255),f,b
  5672  0034F2                     u13970:
  5673  0034F2  2EE8               	decfsz	wreg,f,c
  5674  0034F4  EF74  F01A         	goto	u13975
  5675  0034F8  51B1               	movf	(??_floorf+2)& (0+255),w,b
  5676  0034FA  25AF               	addwf	??_floorf& (0+255),w,b
  5677  0034FC  6FB9               	movwf	floorf@e& (0+255),b
  5678  0034FE  0E00               	movlw	0
  5679  003500  21B0               	addwfc	(??_floorf+1)& (0+255),w,b
  5680  003502  6FBA               	movwf	(floorf@e+1)& (0+255),b
  5681  003504  BFBA               	btfsc	(floorf@e+1)& (0+255),7,b
  5682  003506  EF8E  F01A         	goto	u13981
  5683  00350A  51BA               	movf	(floorf@e+1)& (0+255),w,b
  5684  00350C  E109               	bnz	u13980
  5685  00350E  0E17               	movlw	23
  5686  003510  5DB9               	subwf	floorf@e& (0+255),w,b
  5687  003512  A0D8               	btfss	status,0,c
  5688  003514  EF8E  F01A         	goto	u13981
  5689  003518  EF90  F01A         	goto	u13980
  5690  00351C                     u13981:
  5691  00351C  EF9A  F01A         	goto	l11969
  5692  003520                     u13980:
  5693  003520                     l11967:
  5694                           
  5695                           ; BSR set to: 0
  5696  003520  C0AB  F0AB         	movff	floorf@x,?_floorf
  5697  003524  C0AC  F0AC         	movff	floorf@x+1,?_floorf+1
  5698  003528  C0AD  F0AD         	movff	floorf@x+2,?_floorf+2
  5699  00352C  C0AE  F0AE         	movff	floorf@x+3,?_floorf+3
  5700  003530  EF5E  F01B         	goto	l2661
  5701  003534                     l11969:
  5702                           
  5703                           ; BSR set to: 0
  5704  003534  BFBA               	btfsc	(floorf@e+1)& (0+255),7,b
  5705  003536  EF9F  F01A         	goto	u13991
  5706  00353A  EFA1  F01A         	goto	u13990
  5707  00353E                     u13991:
  5708  00353E  EF12  F01B         	goto	l11979
  5709  003542                     u13990:
  5710  003542                     
  5711                           ; BSR set to: 0
  5712  003542  C0B9  F0AF         	movff	floorf@e,??_floorf
  5713  003546  0EFF               	movlw	255
  5714  003548  6FB0               	movwf	(??_floorf+1)& (0+255),b
  5715  00354A  0EFF               	movlw	255
  5716  00354C  6FB1               	movwf	(??_floorf+2)& (0+255),b
  5717  00354E  0E7F               	movlw	127
  5718  003550  6FB2               	movwf	(??_floorf+3)& (0+255),b
  5719  003552  0E00               	movlw	0
  5720  003554  6FB3               	movwf	(??_floorf+4)& (0+255),b
  5721  003556                     u14005:
  5722  003556  67AF               	tstfsz	??_floorf& (0+255),b
  5723  003558  EFB0  F01A         	goto	u14006
  5724  00355C  EFB8  F01A         	goto	u14007
  5725  003560                     u14006:
  5726  003560  35B3               	rlcf	(??_floorf+4)& (0+255),w,b
  5727  003562  33B3               	rrcf	(??_floorf+4)& (0+255),f,b
  5728  003564  33B2               	rrcf	(??_floorf+3)& (0+255),f,b
  5729  003566  33B1               	rrcf	(??_floorf+2)& (0+255),f,b
  5730  003568  33B0               	rrcf	(??_floorf+1)& (0+255),f,b
  5731  00356A  2FAF               	decfsz	??_floorf& (0+255),f,b
  5732  00356C  EFAB  F01A         	goto	u14005
  5733  003570                     u14007:
  5734  003570  C0B0  F0B5         	movff	??_floorf+1,floorf@m
  5735  003574  C0B1  F0B6         	movff	??_floorf+2,floorf@m+1
  5736  003578  C0B2  F0B7         	movff	??_floorf+3,floorf@m+2
  5737  00357C  C0B3  F0B8         	movff	??_floorf+4,floorf@m+3
  5738  003580  0100               	movlb	0	; () banked
  5739  003582  51B5               	movf	floorf@m& (0+255),w,b
  5740  003584  15BB               	andwf	floorf@u& (0+255),w,b
  5741  003586  6FAF               	movwf	??_floorf& (0+255),b
  5742  003588  51B6               	movf	(floorf@m+1)& (0+255),w,b
  5743  00358A  15BC               	andwf	(floorf@u+1)& (0+255),w,b
  5744  00358C  6FB0               	movwf	(??_floorf+1)& (0+255),b
  5745  00358E  51B7               	movf	(floorf@m+2)& (0+255),w,b
  5746  003590  15BD               	andwf	(floorf@u+2)& (0+255),w,b
  5747  003592  6FB1               	movwf	(??_floorf+2)& (0+255),b
  5748  003594  51B8               	movf	(floorf@m+3)& (0+255),w,b
  5749  003596  15BE               	andwf	(floorf@u+3)& (0+255),w,b
  5750  003598  6FB2               	movwf	(??_floorf+3)& (0+255),b
  5751  00359A  51AF               	movf	??_floorf& (0+255),w,b
  5752  00359C  11B0               	iorwf	(??_floorf+1)& (0+255),w,b
  5753  00359E  11B1               	iorwf	(??_floorf+2)& (0+255),w,b
  5754  0035A0  11B2               	iorwf	(??_floorf+3)& (0+255),w,b
  5755  0035A2  A4D8               	btfss	status,2,c
  5756  0035A4  EFD6  F01A         	goto	u14011
  5757  0035A8  EFD8  F01A         	goto	u14010
  5758  0035AC                     u14011:
  5759  0035AC  EFDA  F01A         	goto	l11975
  5760  0035B0                     u14010:
  5761  0035B0  EF90  F01A         	goto	l11967
  5762  0035B4                     l11975:
  5763                           
  5764                           ; BSR set to: 0
  5765  0035B4  C0BB  F0AF         	movff	floorf@u,??_floorf
  5766  0035B8  C0BC  F0B0         	movff	floorf@u+1,??_floorf+1
  5767  0035BC  C0BD  F0B1         	movff	floorf@u+2,??_floorf+2
  5768  0035C0  C0BE  F0B2         	movff	floorf@u+3,??_floorf+3
  5769  0035C4  0E20               	movlw	32
  5770  0035C6  EFEA  F01A         	goto	u14020
  5771  0035CA                     u14025:
  5772  0035CA  90D8               	bcf	status,0,c
  5773  0035CC  33B2               	rrcf	(??_floorf+3)& (0+255),f,b
  5774  0035CE  33B1               	rrcf	(??_floorf+2)& (0+255),f,b
  5775  0035D0  33B0               	rrcf	(??_floorf+1)& (0+255),f,b
  5776  0035D2  33AF               	rrcf	??_floorf& (0+255),f,b
  5777  0035D4                     u14020:
  5778  0035D4  2EE8               	decfsz	wreg,f,c
  5779  0035D6  EFE5  F01A         	goto	u14025
  5780  0035DA  51AF               	movf	??_floorf& (0+255),w,b
  5781  0035DC  11B0               	iorwf	(??_floorf+1)& (0+255),w,b
  5782  0035DE  11B1               	iorwf	(??_floorf+2)& (0+255),w,b
  5783  0035E0  11B2               	iorwf	(??_floorf+3)& (0+255),w,b
  5784  0035E2  B4D8               	btfsc	status,2,c
  5785  0035E4  EFF6  F01A         	goto	u14031
  5786  0035E8  EFF8  F01A         	goto	u14030
  5787  0035EC                     u14031:
  5788  0035EC  EF00  F01B         	goto	l2664
  5789  0035F0                     u14030:
  5790  0035F0                     
  5791                           ; BSR set to: 0
  5792  0035F0  51B5               	movf	floorf@m& (0+255),w,b
  5793  0035F2  27BB               	addwf	floorf@u& (0+255),f,b
  5794  0035F4  51B6               	movf	(floorf@m+1)& (0+255),w,b
  5795  0035F6  23BC               	addwfc	(floorf@u+1)& (0+255),f,b
  5796  0035F8  51B7               	movf	(floorf@m+2)& (0+255),w,b
  5797  0035FA  23BD               	addwfc	(floorf@u+2)& (0+255),f,b
  5798  0035FC  51B8               	movf	(floorf@m+3)& (0+255),w,b
  5799  0035FE  23BE               	addwfc	(floorf@u+3)& (0+255),f,b
  5800  003600                     l2664:
  5801                           
  5802                           ; BSR set to: 0
  5803  003600  1DB5               	comf	floorf@m& (0+255),w,b
  5804  003602  6FAF               	movwf	??_floorf& (0+255),b
  5805  003604  1DB6               	comf	(floorf@m+1)& (0+255),w,b
  5806  003606  6FB0               	movwf	(??_floorf+1)& (0+255),b
  5807  003608  1DB7               	comf	(floorf@m+2)& (0+255),w,b
  5808  00360A  6FB1               	movwf	(??_floorf+2)& (0+255),b
  5809  00360C  1DB8               	comf	(floorf@m+3)& (0+255),w,b
  5810  00360E  6FB2               	movwf	(??_floorf+3)& (0+255),b
  5811  003610  51AF               	movf	??_floorf& (0+255),w,b
  5812  003612  17BB               	andwf	floorf@u& (0+255),f,b
  5813  003614  51B0               	movf	(??_floorf+1)& (0+255),w,b
  5814  003616  17BC               	andwf	(floorf@u+1)& (0+255),f,b
  5815  003618  51B1               	movf	(??_floorf+2)& (0+255),w,b
  5816  00361A  17BD               	andwf	(floorf@u+2)& (0+255),f,b
  5817  00361C  51B2               	movf	(??_floorf+3)& (0+255),w,b
  5818  00361E  17BE               	andwf	(floorf@u+3)& (0+255),f,b
  5819  003620  EF56  F01B         	goto	l11987
  5820  003624                     l11979:
  5821                           
  5822                           ; BSR set to: 0
  5823  003624  C0BB  F0AF         	movff	floorf@u,??_floorf
  5824  003628  C0BC  F0B0         	movff	floorf@u+1,??_floorf+1
  5825  00362C  C0BD  F0B1         	movff	floorf@u+2,??_floorf+2
  5826  003630  C0BE  F0B2         	movff	floorf@u+3,??_floorf+3
  5827  003634  0E20               	movlw	32
  5828  003636  EF22  F01B         	goto	u14040
  5829  00363A                     u14045:
  5830  00363A  90D8               	bcf	status,0,c
  5831  00363C  33B2               	rrcf	(??_floorf+3)& (0+255),f,b
  5832  00363E  33B1               	rrcf	(??_floorf+2)& (0+255),f,b
  5833  003640  33B0               	rrcf	(??_floorf+1)& (0+255),f,b
  5834  003642  33AF               	rrcf	??_floorf& (0+255),f,b
  5835  003644                     u14040:
  5836  003644  2EE8               	decfsz	wreg,f,c
  5837  003646  EF1D  F01B         	goto	u14045
  5838  00364A  51AF               	movf	??_floorf& (0+255),w,b
  5839  00364C  11B0               	iorwf	(??_floorf+1)& (0+255),w,b
  5840  00364E  11B1               	iorwf	(??_floorf+2)& (0+255),w,b
  5841  003650  11B2               	iorwf	(??_floorf+3)& (0+255),w,b
  5842  003652  A4D8               	btfss	status,2,c
  5843  003654  EF2E  F01B         	goto	u14051
  5844  003658  EF30  F01B         	goto	u14050
  5845  00365C                     u14051:
  5846  00365C  EF3A  F01B         	goto	l11983
  5847  003660                     u14050:
  5848  003660                     
  5849                           ; BSR set to: 0
  5850  003660  0E00               	movlw	0
  5851  003662  6FBB               	movwf	floorf@u& (0+255),b
  5852  003664  0E00               	movlw	0
  5853  003666  6FBC               	movwf	(floorf@u+1)& (0+255),b
  5854  003668  0E00               	movlw	0
  5855  00366A  6FBD               	movwf	(floorf@u+2)& (0+255),b
  5856  00366C  0E00               	movlw	0
  5857  00366E  6FBE               	movwf	(floorf@u+3)& (0+255),b
  5858  003670  EF56  F01B         	goto	l11987
  5859  003674                     l11983:
  5860                           
  5861                           ; BSR set to: 0
  5862  003674  90D8               	bcf	status,0,c
  5863  003676  35BB               	rlcf	floorf@u& (0+255),w,b
  5864  003678  6FAF               	movwf	??_floorf& (0+255),b
  5865  00367A  35BC               	rlcf	(floorf@u+1)& (0+255),w,b
  5866  00367C  6FB0               	movwf	(??_floorf+1)& (0+255),b
  5867  00367E  35BD               	rlcf	(floorf@u+2)& (0+255),w,b
  5868  003680  6FB1               	movwf	(??_floorf+2)& (0+255),b
  5869  003682  35BE               	rlcf	(floorf@u+3)& (0+255),w,b
  5870  003684  6FB2               	movwf	(??_floorf+3)& (0+255),b
  5871  003686  51AF               	movf	??_floorf& (0+255),w,b
  5872  003688  11B0               	iorwf	(??_floorf+1)& (0+255),w,b
  5873  00368A  11B1               	iorwf	(??_floorf+2)& (0+255),w,b
  5874  00368C  11B2               	iorwf	(??_floorf+3)& (0+255),w,b
  5875  00368E  B4D8               	btfsc	status,2,c
  5876  003690  EF4C  F01B         	goto	u14061
  5877  003694  EF4E  F01B         	goto	u14060
  5878  003698                     u14061:
  5879  003698  EF56  F01B         	goto	l11987
  5880  00369C                     u14060:
  5881  00369C                     
  5882                           ; BSR set to: 0
  5883  00369C  0E00               	movlw	0
  5884  00369E  6FBB               	movwf	floorf@u& (0+255),b
  5885  0036A0  0E00               	movlw	0
  5886  0036A2  6FBC               	movwf	(floorf@u+1)& (0+255),b
  5887  0036A4  0E80               	movlw	128
  5888  0036A6  6FBD               	movwf	(floorf@u+2)& (0+255),b
  5889  0036A8  0EBF               	movlw	191
  5890  0036AA  6FBE               	movwf	(floorf@u+3)& (0+255),b
  5891  0036AC                     l11987:
  5892                           
  5893                           ; BSR set to: 0
  5894  0036AC  C0BB  F0AB         	movff	floorf@u,?_floorf
  5895  0036B0  C0BC  F0AC         	movff	floorf@u+1,?_floorf+1
  5896  0036B4  C0BD  F0AD         	movff	floorf@u+2,?_floorf+2
  5897  0036B8  C0BE  F0AE         	movff	floorf@u+3,?_floorf+3
  5898  0036BC                     l2661:
  5899                           
  5900                           ; BSR set to: 0
  5901  0036BC  0012               	return		;funcret
  5902  0036BE                     __end_of_floorf:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function ___fpclassifyf *****************
  5906 ;; Defined at:
  5907 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__fpclassifyf.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  x               4    0[BANK0 ] float 
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  u               4   10[BANK0 ] struct .
  5912 ;;  e               2    8[BANK0 ] int 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2    0[BANK0 ] int 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;Total ram usage:       14 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:   10
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_efgtoa
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text15
  5937  004750                     __ptext15:
  5938                           	callstack 0
  5939  004750                     ___fpclassifyf:
  5940                           	callstack 14
  5941  004750  C113  F08A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5942  004754  C114  F08B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5943  004758  C115  F08C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5944  00475C  C116  F08D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5945  004760  C080  F08A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5946  004764  C081  F08B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5947  004768  C082  F08C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5948  00476C  C083  F08D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5949  004770  C08A  F084         	movff	___fpclassifyf@u,??___fpclassifyf
  5950  004774  C08B  F085         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5951  004778  C08C  F086         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5952  00477C  C08D  F087         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5953  004780  0E18               	movlw	24
  5954  004782  EFC9  F023         	goto	u13850
  5955  004786                     u13855:
  5956  004786  0100               	movlb	0	; () banked
  5957  004788  90D8               	bcf	status,0,c
  5958  00478A  3387               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5959  00478C  3386               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5960  00478E  3385               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5961  004790  3384               	rrcf	??___fpclassifyf& (0+255),f,b
  5962  004792                     u13850:
  5963  004792  2EE8               	decfsz	wreg,f,c
  5964  004794  EFC3  F023         	goto	u13855
  5965  004798  5184               	movf	??___fpclassifyf& (0+255),w,b
  5966  00479A  6F88               	movwf	___fpclassifyf@e& (0+255),b
  5967  00479C  6B89               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5968  00479E  5188               	movf	___fpclassifyf@e& (0+255),w,b
  5969  0047A0  1189               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5970  0047A2  A4D8               	btfss	status,2,c
  5971  0047A4  EFD6  F023         	goto	u13861
  5972  0047A8  EFD8  F023         	goto	u13860
  5973  0047AC                     u13861:
  5974  0047AC  EFF8  F023         	goto	l11939
  5975  0047B0                     u13860:
  5976  0047B0                     
  5977                           ; BSR set to: 0
  5978  0047B0  90D8               	bcf	status,0,c
  5979  0047B2  358A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5980  0047B4  6F84               	movwf	??___fpclassifyf& (0+255),b
  5981  0047B6  358B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5982  0047B8  6F85               	movwf	(??___fpclassifyf+1)& (0+255),b
  5983  0047BA  358C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5984  0047BC  6F86               	movwf	(??___fpclassifyf+2)& (0+255),b
  5985  0047BE  358D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5986  0047C0  6F87               	movwf	(??___fpclassifyf+3)& (0+255),b
  5987  0047C2  5184               	movf	??___fpclassifyf& (0+255),w,b
  5988  0047C4  1185               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5989  0047C6  1186               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5990  0047C8  1187               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5991  0047CA  A4D8               	btfss	status,2,c
  5992  0047CC  EFEA  F023         	goto	u13871
  5993  0047D0  EFEC  F023         	goto	u13870
  5994  0047D4                     u13871:
  5995  0047D4  EFF2  F023         	goto	l11935
  5996  0047D8                     u13870:
  5997  0047D8                     
  5998                           ; BSR set to: 0
  5999  0047D8  0E00               	movlw	0
  6000  0047DA  6F81               	movwf	(?___fpclassifyf+1)& (0+255),b
  6001  0047DC  0E02               	movlw	2
  6002  0047DE  6F80               	movwf	?___fpclassifyf& (0+255),b
  6003  0047E0  EF27  F024         	goto	l2647
  6004  0047E4                     l11935:
  6005                           
  6006                           ; BSR set to: 0
  6007  0047E4  0E00               	movlw	0
  6008  0047E6  6F81               	movwf	(?___fpclassifyf+1)& (0+255),b
  6009  0047E8  0E03               	movlw	3
  6010  0047EA  6F80               	movwf	?___fpclassifyf& (0+255),b
  6011  0047EC  EF27  F024         	goto	l2647
  6012  0047F0                     l11939:
  6013                           
  6014                           ; BSR set to: 0
  6015  0047F0  2988               	incf	___fpclassifyf@e& (0+255),w,b
  6016  0047F2  1189               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  6017  0047F4  A4D8               	btfss	status,2,c
  6018  0047F6  EFFF  F023         	goto	u13881
  6019  0047FA  EF01  F024         	goto	u13880
  6020  0047FE                     u13881:
  6021  0047FE  EF23  F024         	goto	l11945
  6022  004802                     u13880:
  6023  004802                     
  6024                           ; BSR set to: 0
  6025  004802  C08A  F084         	movff	___fpclassifyf@u,??___fpclassifyf
  6026  004806  C08B  F085         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6027  00480A  C08C  F086         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6028  00480E  C08D  F087         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6029  004812  0E09               	movlw	9
  6030  004814                     u13895:
  6031  004814  90D8               	bcf	status,0,c
  6032  004816  3784               	rlcf	??___fpclassifyf& (0+255),f,b
  6033  004818  3785               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  6034  00481A  3786               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  6035  00481C  3787               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  6036  00481E  2EE8               	decfsz	wreg,f,c
  6037  004820  EF0A  F024         	goto	u13895
  6038  004824  5184               	movf	??___fpclassifyf& (0+255),w,b
  6039  004826  1185               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  6040  004828  1186               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  6041  00482A  1187               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  6042  00482C  B4D8               	btfsc	status,2,c
  6043  00482E  EF1B  F024         	goto	u13901
  6044  004832  EF1E  F024         	goto	u13900
  6045  004836                     u13901:
  6046  004836  0E01               	movlw	1
  6047  004838  EF1F  F024         	goto	u13910
  6048  00483C                     u13900:
  6049  00483C  0E00               	movlw	0
  6050  00483E                     u13910:
  6051  00483E  6F80               	movwf	?___fpclassifyf& (0+255),b
  6052  004840  6B81               	clrf	(?___fpclassifyf+1)& (0+255),b
  6053  004842  EF27  F024         	goto	l2647
  6054  004846                     l11945:
  6055                           
  6056                           ; BSR set to: 0
  6057  004846  0E00               	movlw	0
  6058  004848  6F81               	movwf	(?___fpclassifyf+1)& (0+255),b
  6059  00484A  0E04               	movlw	4
  6060  00484C  6F80               	movwf	?___fpclassifyf& (0+255),b
  6061  00484E                     l2647:
  6062                           
  6063                           ; BSR set to: 0
  6064  00484E  0012               	return		;funcret
  6065  004850                     __end_of___fpclassifyf:
  6066                           	callstack 0
  6067                           
  6068 ;; *************** function ___flsub *****************
  6069 ;; Defined at:
  6070 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  b               4   59[BANK0 ] int 
  6073 ;;  a               4   63[BANK0 ] int 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  4   59[BANK0 ] int 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        8 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:   11
  6092 ;; This function calls:
  6093 ;;		___fladd
  6094 ;; This function is called by:
  6095 ;;		_efgtoa
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text16
  6100  005F7A                     __ptext16:
  6101                           	callstack 0
  6102  005F7A                     ___flsub:
  6103                           	callstack 13
  6104  005F7A  0E00               	movlw	0
  6105  005F7C  0100               	movlb	0	; () banked
  6106  005F7E  1BBF               	xorwf	___flsub@a& (0+255),f,b
  6107  005F80  0E00               	movlw	0
  6108  005F82  1BC0               	xorwf	(___flsub@a+1)& (0+255),f,b
  6109  005F84  0E00               	movlw	0
  6110  005F86  1BC1               	xorwf	(___flsub@a+2)& (0+255),f,b
  6111  005F88  0E80               	movlw	128
  6112  005F8A  1BC2               	xorwf	(___flsub@a+3)& (0+255),f,b
  6113  005F8C                     
  6114                           ; BSR set to: 0
  6115  005F8C  C0BB  F0AB         	movff	___flsub@b,___fladd@b
  6116  005F90  C0BC  F0AC         	movff	___flsub@b+1,___fladd@b+1
  6117  005F94  C0BD  F0AD         	movff	___flsub@b+2,___fladd@b+2
  6118  005F98  C0BE  F0AE         	movff	___flsub@b+3,___fladd@b+3
  6119  005F9C  C0BF  F0AF         	movff	___flsub@a,___fladd@a
  6120  005FA0  C0C0  F0B0         	movff	___flsub@a+1,___fladd@a+1
  6121  005FA4  C0C1  F0B1         	movff	___flsub@a+2,___fladd@a+2
  6122  005FA8  C0C2  F0B2         	movff	___flsub@a+3,___fladd@a+3
  6123  005FAC  ECAB  F00E         	call	___fladd	;wreg free
  6124  005FB0  C0AB  F0BB         	movff	?___fladd,?___flsub
  6125  005FB4  C0AC  F0BC         	movff	?___fladd+1,?___flsub+1
  6126  005FB8  C0AD  F0BD         	movff	?___fladd+2,?___flsub+2
  6127  005FBC  C0AE  F0BE         	movff	?___fladd+3,?___flsub+3
  6128  005FC0  0012               	return		;funcret
  6129  005FC2                     __end_of___flsub:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function ___flneg *****************
  6133 ;; Defined at:
  6134 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flneg.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  f1              4    0[BANK0 ] int 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  4    0[BANK0 ] int 
  6141 ;; Registers used:
  6142 ;;		wreg, status,2, status,0
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;Total ram usage:        4 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:   10
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_efgtoa
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text17
  6163  0061C6                     __ptext17:
  6164                           	callstack 0
  6165  0061C6                     ___flneg:
  6166                           	callstack 14
  6167  0061C6  0100               	movlb	0	; () banked
  6168  0061C8  5180               	movf	___flneg@f1& (0+255),w,b
  6169  0061CA  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6170  0061CC  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6171  0061CE  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6172  0061D0  B4D8               	btfsc	status,2,c
  6173  0061D2  EFED  F030         	goto	u13721
  6174  0061D6  EFEF  F030         	goto	u13720
  6175  0061DA                     u13721:
  6176  0061DA  EFF7  F030         	goto	l11853
  6177  0061DE                     u13720:
  6178  0061DE                     
  6179                           ; BSR set to: 0
  6180  0061DE  0E00               	movlw	0
  6181  0061E0  1B80               	xorwf	___flneg@f1& (0+255),f,b
  6182  0061E2  0E00               	movlw	0
  6183  0061E4  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6184  0061E6  0E00               	movlw	0
  6185  0061E8  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6186  0061EA  0E80               	movlw	128
  6187  0061EC  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6188  0061EE                     l11853:
  6189                           
  6190                           ; BSR set to: 0
  6191  0061EE  C080  F080         	movff	___flneg@f1,?___flneg
  6192  0061F2  C081  F081         	movff	___flneg@f1+1,?___flneg+1
  6193  0061F6  C082  F082         	movff	___flneg@f1+2,?___flneg+2
  6194  0061FA  C083  F083         	movff	___flneg@f1+3,?___flneg+3
  6195  0061FE                     
  6196                           ; BSR set to: 0
  6197  0061FE  0012               	return		;funcret
  6198  006200                     __end_of___flneg:
  6199                           	callstack 0
  6200                           
  6201 ;; *************** function ___flmul *****************
  6202 ;; Defined at:
  6203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  b               4    0[BANK0 ] int 
  6206 ;;  a               4    4[BANK0 ] int 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  prod            4   19[BANK0 ] struct .
  6209 ;;  grs             4   14[BANK0 ] unsigned long 
  6210 ;;  temp            2   23[BANK0 ] struct .
  6211 ;;  bexp            1   18[BANK0 ] unsigned char 
  6212 ;;  aexp            1   13[BANK0 ] unsigned char 
  6213 ;;  sign            1   12[BANK0 ] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  4    0[BANK0 ] unsigned char 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0, prodl, prodh
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6223 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;Total ram usage:       25 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:   10
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_efgtoa
  6234 ;;		_Servo_SetAngle
  6235 ;;		_CCP_PWM_Set_Duty
  6236 ;;		_CCP_PWM_Mode_Config
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text18
  6241  002644                     __ptext18:
  6242                           	callstack 0
  6243  002644                     ___flmul:
  6244                           	callstack 14
  6245  002644  0100               	movlb	0	; () banked
  6246  002646  5183               	movf	(___flmul@b+3)& (0+255),w,b
  6247  002648  0B80               	andlw	128
  6248  00264A  6F8C               	movwf	___flmul@sign& (0+255),b
  6249  00264C  5183               	movf	(___flmul@b+3)& (0+255),w,b
  6250  00264E  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  6251  002650  6F92               	movwf	___flmul@bexp& (0+255),b
  6252  002652                     
  6253                           ; BSR set to: 0
  6254  002652  AF82               	btfss	(___flmul@b+2)& (0+255),7,b
  6255  002654  EF2E  F013         	goto	u13331
  6256  002658  EF30  F013         	goto	u13330
  6257  00265C                     u13331:
  6258  00265C  EF31  F013         	goto	l11601
  6259  002660                     u13330:
  6260  002660                     
  6261                           ; BSR set to: 0
  6262  002660  8192               	bsf	___flmul@bexp& (0+255),0,b
  6263  002662                     l11601:
  6264                           
  6265                           ; BSR set to: 0
  6266  002662  5192               	movf	___flmul@bexp& (0+255),w,b
  6267  002664  B4D8               	btfsc	status,2,c
  6268  002666  EF37  F013         	goto	u13341
  6269  00266A  EF39  F013         	goto	u13340
  6270  00266E                     u13341:
  6271  00266E  EF4C  F013         	goto	l11609
  6272  002672                     u13340:
  6273  002672                     
  6274                           ; BSR set to: 0
  6275  002672  2992               	incf	___flmul@bexp& (0+255),w,b
  6276  002674  A4D8               	btfss	status,2,c
  6277  002676  EF3F  F013         	goto	u13351
  6278  00267A  EF41  F013         	goto	u13350
  6279  00267E                     u13351:
  6280  00267E  EF49  F013         	goto	l11607
  6281  002682                     u13350:
  6282  002682                     
  6283                           ; BSR set to: 0
  6284  002682  0E00               	movlw	0
  6285  002684  6F80               	movwf	___flmul@b& (0+255),b
  6286  002686  0E00               	movlw	0
  6287  002688  6F81               	movwf	(___flmul@b+1)& (0+255),b
  6288  00268A  0E00               	movlw	0
  6289  00268C  6F82               	movwf	(___flmul@b+2)& (0+255),b
  6290  00268E  0E00               	movlw	0
  6291  002690  6F83               	movwf	(___flmul@b+3)& (0+255),b
  6292  002692                     l11607:
  6293                           
  6294                           ; BSR set to: 0
  6295  002692  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  6296  002694  EF54  F013         	goto	l11611
  6297  002698                     l11609:
  6298                           
  6299                           ; BSR set to: 0
  6300  002698  0E00               	movlw	0
  6301  00269A  6F80               	movwf	___flmul@b& (0+255),b
  6302  00269C  0E00               	movlw	0
  6303  00269E  6F81               	movwf	(___flmul@b+1)& (0+255),b
  6304  0026A0  0E00               	movlw	0
  6305  0026A2  6F82               	movwf	(___flmul@b+2)& (0+255),b
  6306  0026A4  0E00               	movlw	0
  6307  0026A6  6F83               	movwf	(___flmul@b+3)& (0+255),b
  6308  0026A8                     l11611:
  6309                           
  6310                           ; BSR set to: 0
  6311  0026A8  5187               	movf	(___flmul@a+3)& (0+255),w,b
  6312  0026AA  0B80               	andlw	128
  6313  0026AC  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  6314  0026AE                     
  6315                           ; BSR set to: 0
  6316  0026AE  5187               	movf	(___flmul@a+3)& (0+255),w,b
  6317  0026B0  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  6318  0026B2  6F8D               	movwf	___flmul@aexp& (0+255),b
  6319  0026B4                     
  6320                           ; BSR set to: 0
  6321  0026B4  AF86               	btfss	(___flmul@a+2)& (0+255),7,b
  6322  0026B6  EF5F  F013         	goto	u13361
  6323  0026BA  EF61  F013         	goto	u13360
  6324  0026BE                     u13361:
  6325  0026BE  EF62  F013         	goto	l11619
  6326  0026C2                     u13360:
  6327  0026C2                     
  6328                           ; BSR set to: 0
  6329  0026C2  818D               	bsf	___flmul@aexp& (0+255),0,b
  6330  0026C4                     l11619:
  6331                           
  6332                           ; BSR set to: 0
  6333  0026C4  518D               	movf	___flmul@aexp& (0+255),w,b
  6334  0026C6  B4D8               	btfsc	status,2,c
  6335  0026C8  EF68  F013         	goto	u13371
  6336  0026CC  EF6A  F013         	goto	u13370
  6337  0026D0                     u13371:
  6338  0026D0  EF7D  F013         	goto	l11627
  6339  0026D4                     u13370:
  6340  0026D4                     
  6341                           ; BSR set to: 0
  6342  0026D4  298D               	incf	___flmul@aexp& (0+255),w,b
  6343  0026D6  A4D8               	btfss	status,2,c
  6344  0026D8  EF70  F013         	goto	u13381
  6345  0026DC  EF72  F013         	goto	u13380
  6346  0026E0                     u13381:
  6347  0026E0  EF7A  F013         	goto	l11625
  6348  0026E4                     u13380:
  6349  0026E4                     
  6350                           ; BSR set to: 0
  6351  0026E4  0E00               	movlw	0
  6352  0026E6  6F84               	movwf	___flmul@a& (0+255),b
  6353  0026E8  0E00               	movlw	0
  6354  0026EA  6F85               	movwf	(___flmul@a+1)& (0+255),b
  6355  0026EC  0E00               	movlw	0
  6356  0026EE  6F86               	movwf	(___flmul@a+2)& (0+255),b
  6357  0026F0  0E00               	movlw	0
  6358  0026F2  6F87               	movwf	(___flmul@a+3)& (0+255),b
  6359  0026F4                     l11625:
  6360                           
  6361                           ; BSR set to: 0
  6362  0026F4  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  6363  0026F6  EF85  F013         	goto	l2376
  6364  0026FA                     l11627:
  6365                           
  6366                           ; BSR set to: 0
  6367  0026FA  0E00               	movlw	0
  6368  0026FC  6F84               	movwf	___flmul@a& (0+255),b
  6369  0026FE  0E00               	movlw	0
  6370  002700  6F85               	movwf	(___flmul@a+1)& (0+255),b
  6371  002702  0E00               	movlw	0
  6372  002704  6F86               	movwf	(___flmul@a+2)& (0+255),b
  6373  002706  0E00               	movlw	0
  6374  002708  6F87               	movwf	(___flmul@a+3)& (0+255),b
  6375  00270A                     l2376:
  6376                           
  6377                           ; BSR set to: 0
  6378  00270A  518D               	movf	___flmul@aexp& (0+255),w,b
  6379  00270C  B4D8               	btfsc	status,2,c
  6380  00270E  EF8B  F013         	goto	u13391
  6381  002712  EF8D  F013         	goto	u13390
  6382  002716                     u13391:
  6383  002716  EF95  F013         	goto	l11631
  6384  00271A                     u13390:
  6385  00271A                     
  6386                           ; BSR set to: 0
  6387  00271A  5192               	movf	___flmul@bexp& (0+255),w,b
  6388  00271C  A4D8               	btfss	status,2,c
  6389  00271E  EF93  F013         	goto	u13401
  6390  002722  EF95  F013         	goto	u13400
  6391  002726                     u13401:
  6392  002726  EF9F  F013         	goto	l11635
  6393  00272A                     u13400:
  6394  00272A                     l11631:
  6395                           
  6396                           ; BSR set to: 0
  6397  00272A  0E00               	movlw	0
  6398  00272C  6F80               	movwf	?___flmul& (0+255),b
  6399  00272E  0E00               	movlw	0
  6400  002730  6F81               	movwf	(?___flmul+1)& (0+255),b
  6401  002732  0E00               	movlw	0
  6402  002734  6F82               	movwf	(?___flmul+2)& (0+255),b
  6403  002736  0E00               	movlw	0
  6404  002738  6F83               	movwf	(?___flmul+3)& (0+255),b
  6405  00273A  EF37  F015         	goto	l2380
  6406  00273E                     l11635:
  6407                           
  6408                           ; BSR set to: 0
  6409  00273E  5186               	movf	(___flmul@a+2)& (0+255),w,b
  6410  002740  0380               	mulwf	___flmul@b& (0+255),b
  6411  002742  CFF3 F097          	movff	prodl,___flmul@temp
  6412  002746  CFF4 F098          	movff	prodh,___flmul@temp+1
  6413  00274A                     
  6414                           ; BSR set to: 0
  6415  00274A  5197               	movf	___flmul@temp& (0+255),w,b
  6416  00274C  6F8E               	movwf	___flmul@grs& (0+255),b
  6417  00274E  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  6418  002750  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  6419  002752  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  6420  002754                     
  6421                           ; BSR set to: 0
  6422  002754  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6423  002756  6F93               	movwf	___flmul@prod& (0+255),b
  6424  002758  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  6425  00275A  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  6426  00275C  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  6427  00275E  5185               	movf	(___flmul@a+1)& (0+255),w,b
  6428  002760  0381               	mulwf	(___flmul@b+1)& (0+255),b
  6429  002762  CFF3 F097          	movff	prodl,___flmul@temp
  6430  002766  CFF4 F098          	movff	prodh,___flmul@temp+1
  6431  00276A                     
  6432                           ; BSR set to: 0
  6433  00276A  5197               	movf	___flmul@temp& (0+255),w,b
  6434  00276C  278E               	addwf	___flmul@grs& (0+255),f,b
  6435  00276E  0E00               	movlw	0
  6436  002770  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6437  002772  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6438  002774  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6439  002776                     
  6440                           ; BSR set to: 0
  6441  002776  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6442  002778  2793               	addwf	___flmul@prod& (0+255),f,b
  6443  00277A  0E00               	movlw	0
  6444  00277C  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6445  00277E  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6446  002780  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6447  002782  5184               	movf	___flmul@a& (0+255),w,b
  6448  002784  0382               	mulwf	(___flmul@b+2)& (0+255),b
  6449  002786  CFF3 F097          	movff	prodl,___flmul@temp
  6450  00278A  CFF4 F098          	movff	prodh,___flmul@temp+1
  6451  00278E                     
  6452                           ; BSR set to: 0
  6453  00278E  5197               	movf	___flmul@temp& (0+255),w,b
  6454  002790  278E               	addwf	___flmul@grs& (0+255),f,b
  6455  002792  0E00               	movlw	0
  6456  002794  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6457  002796  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6458  002798  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6459  00279A                     
  6460                           ; BSR set to: 0
  6461  00279A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6462  00279C  2793               	addwf	___flmul@prod& (0+255),f,b
  6463  00279E  0E00               	movlw	0
  6464  0027A0  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6465  0027A2  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6466  0027A4  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6467  0027A6                     
  6468                           ; BSR set to: 0
  6469  0027A6  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  6470  0027AA  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  6471  0027AE  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  6472  0027B2  6B8E               	clrf	___flmul@grs& (0+255),b
  6473  0027B4                     
  6474                           ; BSR set to: 0
  6475  0027B4  5184               	movf	___flmul@a& (0+255),w,b
  6476  0027B6  0381               	mulwf	(___flmul@b+1)& (0+255),b
  6477  0027B8  CFF3 F097          	movff	prodl,___flmul@temp
  6478  0027BC  CFF4 F098          	movff	prodh,___flmul@temp+1
  6479  0027C0                     
  6480                           ; BSR set to: 0
  6481  0027C0  5197               	movf	___flmul@temp& (0+255),w,b
  6482  0027C2  278E               	addwf	___flmul@grs& (0+255),f,b
  6483  0027C4  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6484  0027C6  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6485  0027C8  0E00               	movlw	0
  6486  0027CA  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6487  0027CC  0E00               	movlw	0
  6488  0027CE  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6489  0027D0                     
  6490                           ; BSR set to: 0
  6491  0027D0  5185               	movf	(___flmul@a+1)& (0+255),w,b
  6492  0027D2  0380               	mulwf	___flmul@b& (0+255),b
  6493  0027D4  CFF3 F097          	movff	prodl,___flmul@temp
  6494  0027D8  CFF4 F098          	movff	prodh,___flmul@temp+1
  6495  0027DC                     
  6496                           ; BSR set to: 0
  6497  0027DC  5197               	movf	___flmul@temp& (0+255),w,b
  6498  0027DE  278E               	addwf	___flmul@grs& (0+255),f,b
  6499  0027E0  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6500  0027E2  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6501  0027E4  0E00               	movlw	0
  6502  0027E6  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6503  0027E8  0E00               	movlw	0
  6504  0027EA  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6505  0027EC                     
  6506                           ; BSR set to: 0
  6507  0027EC  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  6508  0027F0  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  6509  0027F4  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  6510  0027F8  6B8E               	clrf	___flmul@grs& (0+255),b
  6511  0027FA  5184               	movf	___flmul@a& (0+255),w,b
  6512  0027FC  0380               	mulwf	___flmul@b& (0+255),b
  6513  0027FE  CFF3 F097          	movff	prodl,___flmul@temp
  6514  002802  CFF4 F098          	movff	prodh,___flmul@temp+1
  6515  002806                     
  6516                           ; BSR set to: 0
  6517  002806  5197               	movf	___flmul@temp& (0+255),w,b
  6518  002808  278E               	addwf	___flmul@grs& (0+255),f,b
  6519  00280A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6520  00280C  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6521  00280E  0E00               	movlw	0
  6522  002810  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6523  002812  0E00               	movlw	0
  6524  002814  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6525  002816                     
  6526                           ; BSR set to: 0
  6527  002816  5186               	movf	(___flmul@a+2)& (0+255),w,b
  6528  002818  0381               	mulwf	(___flmul@b+1)& (0+255),b
  6529  00281A  CFF3 F097          	movff	prodl,___flmul@temp
  6530  00281E  CFF4 F098          	movff	prodh,___flmul@temp+1
  6531  002822  5197               	movf	___flmul@temp& (0+255),w,b
  6532  002824  2793               	addwf	___flmul@prod& (0+255),f,b
  6533  002826  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6534  002828  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6535  00282A  0E00               	movlw	0
  6536  00282C  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6537  00282E  0E00               	movlw	0
  6538  002830  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6539  002832                     
  6540                           ; BSR set to: 0
  6541  002832  5185               	movf	(___flmul@a+1)& (0+255),w,b
  6542  002834  0382               	mulwf	(___flmul@b+2)& (0+255),b
  6543  002836  CFF3 F097          	movff	prodl,___flmul@temp
  6544  00283A  CFF4 F098          	movff	prodh,___flmul@temp+1
  6545  00283E                     
  6546                           ; BSR set to: 0
  6547  00283E  5197               	movf	___flmul@temp& (0+255),w,b
  6548  002840  2793               	addwf	___flmul@prod& (0+255),f,b
  6549  002842  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6550  002844  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6551  002846  0E00               	movlw	0
  6552  002848  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6553  00284A  0E00               	movlw	0
  6554  00284C  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6555  00284E  5186               	movf	(___flmul@a+2)& (0+255),w,b
  6556  002850  0382               	mulwf	(___flmul@b+2)& (0+255),b
  6557  002852  CFF3 F097          	movff	prodl,___flmul@temp
  6558  002856  CFF4 F098          	movff	prodh,___flmul@temp+1
  6559  00285A                     
  6560                           ; BSR set to: 0
  6561  00285A  5197               	movf	___flmul@temp& (0+255),w,b
  6562  00285C  6F88               	movwf	??___flmul& (0+255),b
  6563  00285E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6564  002860  6F89               	movwf	(??___flmul+1)& (0+255),b
  6565  002862  6B8A               	clrf	(??___flmul+2)& (0+255),b
  6566  002864  6B8B               	clrf	(??___flmul+3)& (0+255),b
  6567  002866  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  6568  00286A  C089  F08A         	movff	??___flmul+1,??___flmul+2
  6569  00286E  C088  F089         	movff	??___flmul,??___flmul+1
  6570  002872  6B88               	clrf	??___flmul& (0+255),b
  6571  002874  5188               	movf	??___flmul& (0+255),w,b
  6572  002876  2793               	addwf	___flmul@prod& (0+255),f,b
  6573  002878  5189               	movf	(??___flmul+1)& (0+255),w,b
  6574  00287A  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6575  00287C  518A               	movf	(??___flmul+2)& (0+255),w,b
  6576  00287E  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6577  002880  518B               	movf	(??___flmul+3)& (0+255),w,b
  6578  002882  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6579  002884                     
  6580                           ; BSR set to: 0
  6581  002884  C08E  F088         	movff	___flmul@grs,??___flmul
  6582  002888  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  6583  00288C  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  6584  002890  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  6585  002894  0E19               	movlw	25
  6586  002896  EF52  F014         	goto	u13410
  6587  00289A                     u13415:
  6588  00289A  90D8               	bcf	status,0,c
  6589  00289C  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  6590  00289E  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  6591  0028A0  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  6592  0028A2  3388               	rrcf	??___flmul& (0+255),f,b
  6593  0028A4                     u13410:
  6594  0028A4  2EE8               	decfsz	wreg,f,c
  6595  0028A6  EF4D  F014         	goto	u13415
  6596  0028AA  5188               	movf	??___flmul& (0+255),w,b
  6597  0028AC  2793               	addwf	___flmul@prod& (0+255),f,b
  6598  0028AE  5189               	movf	(??___flmul+1)& (0+255),w,b
  6599  0028B0  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6600  0028B2  518A               	movf	(??___flmul+2)& (0+255),w,b
  6601  0028B4  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6602  0028B6  518B               	movf	(??___flmul+3)& (0+255),w,b
  6603  0028B8  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6604  0028BA                     
  6605                           ; BSR set to: 0
  6606  0028BA  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  6607  0028BE  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  6608  0028C2  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  6609  0028C6  6B8E               	clrf	___flmul@grs& (0+255),b
  6610  0028C8                     
  6611                           ; BSR set to: 0
  6612  0028C8  518D               	movf	___flmul@aexp& (0+255),w,b
  6613  0028CA  C092  F088         	movff	___flmul@bexp,??___flmul
  6614  0028CE  6B89               	clrf	(??___flmul+1)& (0+255),b
  6615  0028D0  2788               	addwf	??___flmul& (0+255),f,b
  6616  0028D2  0E00               	movlw	0
  6617  0028D4  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  6618  0028D6  0E82               	movlw	130
  6619  0028D8  2588               	addwf	??___flmul& (0+255),w,b
  6620  0028DA  6F97               	movwf	___flmul@temp& (0+255),b
  6621  0028DC  0EFF               	movlw	255
  6622  0028DE  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  6623  0028E0  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  6624  0028E2  EF88  F014         	goto	l11683
  6625  0028E6                     l11677:
  6626                           
  6627                           ; BSR set to: 0
  6628  0028E6  90D8               	bcf	status,0,c
  6629  0028E8  3793               	rlcf	___flmul@prod& (0+255),f,b
  6630  0028EA  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6631  0028EC  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6632  0028EE  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6633  0028F0                     
  6634                           ; BSR set to: 0
  6635  0028F0  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  6636  0028F2  EF7D  F014         	goto	u13421
  6637  0028F6  EF7F  F014         	goto	u13420
  6638  0028FA                     u13421:
  6639  0028FA  EF80  F014         	goto	l2383
  6640  0028FE                     u13420:
  6641  0028FE                     
  6642                           ; BSR set to: 0
  6643  0028FE  8193               	bsf	___flmul@prod& (0+255),0,b
  6644  002900                     l2383:
  6645                           
  6646                           ; BSR set to: 0
  6647  002900  90D8               	bcf	status,0,c
  6648  002902  378E               	rlcf	___flmul@grs& (0+255),f,b
  6649  002904  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6650  002906  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6651  002908  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6652  00290A  0797               	decf	___flmul@temp& (0+255),f,b
  6653  00290C  A0D8               	btfss	status,0,c
  6654  00290E  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  6655  002910                     l11683:
  6656                           
  6657                           ; BSR set to: 0
  6658  002910  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  6659  002912  EF8D  F014         	goto	u13431
  6660  002916  EF8F  F014         	goto	u13430
  6661  00291A                     u13431:
  6662  00291A  EF73  F014         	goto	l11677
  6663  00291E                     u13430:
  6664  00291E                     
  6665                           ; BSR set to: 0
  6666  00291E  0E00               	movlw	0
  6667  002920  6F8D               	movwf	___flmul@aexp& (0+255),b
  6668  002922                     
  6669                           ; BSR set to: 0
  6670  002922  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  6671  002924  EF96  F014         	goto	u13441
  6672  002928  EF98  F014         	goto	u13440
  6673  00292C                     u13441:
  6674  00292C  EFBC  F014         	goto	l2385
  6675  002930                     u13440:
  6676  002930                     
  6677                           ; BSR set to: 0
  6678  002930  0EFF               	movlw	255
  6679  002932  158E               	andwf	___flmul@grs& (0+255),w,b
  6680  002934  6F88               	movwf	??___flmul& (0+255),b
  6681  002936  0EFF               	movlw	255
  6682  002938  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6683  00293A  6F89               	movwf	(??___flmul+1)& (0+255),b
  6684  00293C  0EFF               	movlw	255
  6685  00293E  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  6686  002940  6F8A               	movwf	(??___flmul+2)& (0+255),b
  6687  002942  0E7F               	movlw	127
  6688  002944  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  6689  002946  6F8B               	movwf	(??___flmul+3)& (0+255),b
  6690  002948  5188               	movf	??___flmul& (0+255),w,b
  6691  00294A  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  6692  00294C  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  6693  00294E  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  6694  002950  B4D8               	btfsc	status,2,c
  6695  002952  EFAD  F014         	goto	u13451
  6696  002956  EFAF  F014         	goto	u13450
  6697  00295A                     u13451:
  6698  00295A  EFB3  F014         	goto	l2386
  6699  00295E                     u13450:
  6700  00295E                     l11691:
  6701                           
  6702                           ; BSR set to: 0
  6703  00295E  0E01               	movlw	1
  6704  002960  6F8D               	movwf	___flmul@aexp& (0+255),b
  6705  002962  EFBC  F014         	goto	l2385
  6706  002966                     l2386:
  6707                           
  6708                           ; BSR set to: 0
  6709  002966  A193               	btfss	___flmul@prod& (0+255),0,b
  6710  002968  EFB8  F014         	goto	u13461
  6711  00296C  EFBA  F014         	goto	u13460
  6712  002970                     u13461:
  6713  002970  EFBC  F014         	goto	l2385
  6714  002974                     u13460:
  6715  002974  EFAF  F014         	goto	l11691
  6716  002978                     l2385:
  6717                           
  6718                           ; BSR set to: 0
  6719  002978  518D               	movf	___flmul@aexp& (0+255),w,b
  6720  00297A  B4D8               	btfsc	status,2,c
  6721  00297C  EFC2  F014         	goto	u13471
  6722  002980  EFC4  F014         	goto	u13470
  6723  002984                     u13471:
  6724  002984  EFE8  F014         	goto	l11703
  6725  002988                     u13470:
  6726  002988                     
  6727                           ; BSR set to: 0
  6728  002988  0E01               	movlw	1
  6729  00298A  2793               	addwf	___flmul@prod& (0+255),f,b
  6730  00298C  0E00               	movlw	0
  6731  00298E  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6732  002990  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6733  002992  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6734  002994                     
  6735                           ; BSR set to: 0
  6736  002994  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  6737  002996  EFCF  F014         	goto	u13481
  6738  00299A  EFD1  F014         	goto	u13480
  6739  00299E                     u13481:
  6740  00299E  EFE8  F014         	goto	l11703
  6741  0029A2                     u13480:
  6742  0029A2                     
  6743                           ; BSR set to: 0
  6744  0029A2  C093  F088         	movff	___flmul@prod,??___flmul
  6745  0029A6  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  6746  0029AA  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  6747  0029AE  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  6748  0029B2  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  6749  0029B4  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  6750  0029B6  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  6751  0029B8  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  6752  0029BA  3388               	rrcf	??___flmul& (0+255),f,b
  6753  0029BC  C088  F093         	movff	??___flmul,___flmul@prod
  6754  0029C0  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  6755  0029C4  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  6756  0029C8  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  6757  0029CC                     
  6758                           ; BSR set to: 0
  6759  0029CC  4B97               	infsnz	___flmul@temp& (0+255),f,b
  6760  0029CE  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  6761  0029D0                     l11703:
  6762                           
  6763                           ; BSR set to: 0
  6764  0029D0  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6765  0029D2  EFF3  F014         	goto	u13491
  6766  0029D6  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6767  0029D8  E108               	bnz	u13490
  6768  0029DA  2997               	incf	___flmul@temp& (0+255),w,b
  6769  0029DC  A0D8               	btfss	status,0,c
  6770  0029DE  EFF3  F014         	goto	u13491
  6771  0029E2  EFF5  F014         	goto	u13490
  6772  0029E6                     u13491:
  6773  0029E6  EFFF  F014         	goto	l11707
  6774  0029EA                     u13490:
  6775  0029EA                     
  6776                           ; BSR set to: 0
  6777  0029EA  0E00               	movlw	0
  6778  0029EC  6F93               	movwf	___flmul@prod& (0+255),b
  6779  0029EE  0E00               	movlw	0
  6780  0029F0  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  6781  0029F2  0E80               	movlw	128
  6782  0029F4  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  6783  0029F6  0E7F               	movlw	127
  6784  0029F8  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  6785  0029FA  EF2D  F015         	goto	l11719
  6786  0029FE                     l11707:
  6787                           
  6788                           ; BSR set to: 0
  6789  0029FE  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6790  002A00  EF0C  F015         	goto	u13500
  6791  002A04  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  6792  002A06  E106               	bnz	u13501
  6793  002A08  0597               	decf	___flmul@temp& (0+255),w,b
  6794  002A0A  B0D8               	btfsc	status,0,c
  6795  002A0C  EF0A  F015         	goto	u13501
  6796  002A10  EF0C  F015         	goto	u13500
  6797  002A14                     u13501:
  6798  002A14  EF18  F015         	goto	l2393
  6799  002A18                     u13500:
  6800  002A18                     
  6801                           ; BSR set to: 0
  6802  002A18  0E00               	movlw	0
  6803  002A1A  6F93               	movwf	___flmul@prod& (0+255),b
  6804  002A1C  0E00               	movlw	0
  6805  002A1E  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  6806  002A20  0E00               	movlw	0
  6807  002A22  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  6808  002A24  0E00               	movlw	0
  6809  002A26  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  6810  002A28  0E00               	movlw	0
  6811  002A2A  6F8C               	movwf	___flmul@sign& (0+255),b
  6812  002A2C  EF2D  F015         	goto	l11719
  6813  002A30                     l2393:
  6814                           
  6815                           ; BSR set to: 0
  6816  002A30  C097  F092         	movff	___flmul@temp,___flmul@bexp
  6817  002A34                     
  6818                           ; BSR set to: 0
  6819  002A34  0EFF               	movlw	255
  6820  002A36  1793               	andwf	___flmul@prod& (0+255),f,b
  6821  002A38  0EFF               	movlw	255
  6822  002A3A  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  6823  002A3C  0E7F               	movlw	127
  6824  002A3E  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  6825  002A40  0E00               	movlw	0
  6826  002A42  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  6827  002A44                     
  6828                           ; BSR set to: 0
  6829  002A44  A192               	btfss	___flmul@bexp& (0+255),0,b
  6830  002A46  EF27  F015         	goto	u13511
  6831  002A4A  EF29  F015         	goto	u13510
  6832  002A4E                     u13511:
  6833  002A4E  EF2A  F015         	goto	l11717
  6834  002A52                     u13510:
  6835  002A52                     
  6836                           ; BSR set to: 0
  6837  002A52  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  6838  002A54                     l11717:
  6839                           
  6840                           ; BSR set to: 0
  6841  002A54  90D8               	bcf	status,0,c
  6842  002A56  3192               	rrcf	___flmul@bexp& (0+255),w,b
  6843  002A58  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  6844  002A5A                     l11719:
  6845                           
  6846                           ; BSR set to: 0
  6847  002A5A  518C               	movf	___flmul@sign& (0+255),w,b
  6848  002A5C  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6849  002A5E                     
  6850                           ; BSR set to: 0
  6851  002A5E  C093  F080         	movff	___flmul@prod,?___flmul
  6852  002A62  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  6853  002A66  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  6854  002A6A  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  6855  002A6E                     l2380:
  6856                           
  6857                           ; BSR set to: 0
  6858  002A6E  0012               	return		;funcret
  6859  002A70                     __end_of___flmul:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function ___flge *****************
  6863 ;; Defined at:
  6864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flge.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  ff1             4   25[BANK0 ] unsigned char 
  6867 ;;  ff2             4   29[BANK0 ] unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;		None               void
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6879 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;Total ram usage:       12 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:   10
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_battery_level
  6890 ;;		_efgtoa
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text19
  6895  00464A                     __ptext19:
  6896                           	callstack 0
  6897  00464A                     ___flge:
  6898                           	callstack 14
  6899  00464A  0E00               	movlw	0
  6900  00464C  0100               	movlb	0	; () banked
  6901  00464E  1599               	andwf	___flge@ff1& (0+255),w,b
  6902  004650  6FA1               	movwf	??___flge& (0+255),b
  6903  004652  0E00               	movlw	0
  6904  004654  159A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6905  004656  6FA2               	movwf	(??___flge+1)& (0+255),b
  6906  004658  0E80               	movlw	128
  6907  00465A  159B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6908  00465C  6FA3               	movwf	(??___flge+2)& (0+255),b
  6909  00465E  0E7F               	movlw	127
  6910  004660  159C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6911  004662  6FA4               	movwf	(??___flge+3)& (0+255),b
  6912  004664  51A1               	movf	??___flge& (0+255),w,b
  6913  004666  11A2               	iorwf	(??___flge+1)& (0+255),w,b
  6914  004668  11A3               	iorwf	(??___flge+2)& (0+255),w,b
  6915  00466A  11A4               	iorwf	(??___flge+3)& (0+255),w,b
  6916  00466C  A4D8               	btfss	status,2,c
  6917  00466E  EF3B  F023         	goto	u13671
  6918  004672  EF3D  F023         	goto	u13670
  6919  004676                     u13671:
  6920  004676  EF45  F023         	goto	l11831
  6921  00467A                     u13670:
  6922  00467A                     
  6923                           ; BSR set to: 0
  6924  00467A  0E00               	movlw	0
  6925  00467C  6F99               	movwf	___flge@ff1& (0+255),b
  6926  00467E  0E00               	movlw	0
  6927  004680  6F9A               	movwf	(___flge@ff1+1)& (0+255),b
  6928  004682  0E00               	movlw	0
  6929  004684  6F9B               	movwf	(___flge@ff1+2)& (0+255),b
  6930  004686  0E00               	movlw	0
  6931  004688  6F9C               	movwf	(___flge@ff1+3)& (0+255),b
  6932  00468A                     l11831:
  6933                           
  6934                           ; BSR set to: 0
  6935  00468A  0E00               	movlw	0
  6936  00468C  159D               	andwf	___flge@ff2& (0+255),w,b
  6937  00468E  6FA1               	movwf	??___flge& (0+255),b
  6938  004690  0E00               	movlw	0
  6939  004692  159E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6940  004694  6FA2               	movwf	(??___flge+1)& (0+255),b
  6941  004696  0E80               	movlw	128
  6942  004698  159F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6943  00469A  6FA3               	movwf	(??___flge+2)& (0+255),b
  6944  00469C  0E7F               	movlw	127
  6945  00469E  15A0               	andwf	(___flge@ff2+3)& (0+255),w,b
  6946  0046A0  6FA4               	movwf	(??___flge+3)& (0+255),b
  6947  0046A2  51A1               	movf	??___flge& (0+255),w,b
  6948  0046A4  11A2               	iorwf	(??___flge+1)& (0+255),w,b
  6949  0046A6  11A3               	iorwf	(??___flge+2)& (0+255),w,b
  6950  0046A8  11A4               	iorwf	(??___flge+3)& (0+255),w,b
  6951  0046AA  A4D8               	btfss	status,2,c
  6952  0046AC  EF5A  F023         	goto	u13681
  6953  0046B0  EF5C  F023         	goto	u13680
  6954  0046B4                     u13681:
  6955  0046B4  EF64  F023         	goto	l11835
  6956  0046B8                     u13680:
  6957  0046B8                     
  6958                           ; BSR set to: 0
  6959  0046B8  0E00               	movlw	0
  6960  0046BA  6F9D               	movwf	___flge@ff2& (0+255),b
  6961  0046BC  0E00               	movlw	0
  6962  0046BE  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
  6963  0046C0  0E00               	movlw	0
  6964  0046C2  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
  6965  0046C4  0E00               	movlw	0
  6966  0046C6  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
  6967  0046C8                     l11835:
  6968                           
  6969                           ; BSR set to: 0
  6970  0046C8  AF9C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6971  0046CA  EF69  F023         	goto	u13691
  6972  0046CE  EF6B  F023         	goto	u13690
  6973  0046D2                     u13691:
  6974  0046D2  EF74  F023         	goto	l11839
  6975  0046D6                     u13690:
  6976  0046D6                     
  6977                           ; BSR set to: 0
  6978  0046D6  6D99               	negf	___flge@ff1& (0+255),b
  6979  0046D8  1F9A               	comf	(___flge@ff1+1)& (0+255),f,b
  6980  0046DA  B0D8               	btfsc	status,0,c
  6981  0046DC  2B9A               	incf	(___flge@ff1+1)& (0+255),f,b
  6982  0046DE  1F9B               	comf	(___flge@ff1+2)& (0+255),f,b
  6983  0046E0  B0D8               	btfsc	status,0,c
  6984  0046E2  2B9B               	incf	(___flge@ff1+2)& (0+255),f,b
  6985  0046E4  0E80               	movlw	128
  6986  0046E6  579C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6987  0046E8                     l11839:
  6988                           
  6989                           ; BSR set to: 0
  6990  0046E8  AFA0               	btfss	(___flge@ff2+3)& (0+255),7,b
  6991  0046EA  EF79  F023         	goto	u13701
  6992  0046EE  EF7B  F023         	goto	u13700
  6993  0046F2                     u13701:
  6994  0046F2  EF84  F023         	goto	l2027
  6995  0046F6                     u13700:
  6996  0046F6                     
  6997                           ; BSR set to: 0
  6998  0046F6  6D9D               	negf	___flge@ff2& (0+255),b
  6999  0046F8  1F9E               	comf	(___flge@ff2+1)& (0+255),f,b
  7000  0046FA  B0D8               	btfsc	status,0,c
  7001  0046FC  2B9E               	incf	(___flge@ff2+1)& (0+255),f,b
  7002  0046FE  1F9F               	comf	(___flge@ff2+2)& (0+255),f,b
  7003  004700  B0D8               	btfsc	status,0,c
  7004  004702  2B9F               	incf	(___flge@ff2+2)& (0+255),f,b
  7005  004704  0E80               	movlw	128
  7006  004706  57A0               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7007  004708                     l2027:
  7008                           
  7009                           ; BSR set to: 0
  7010  004708  0E00               	movlw	0
  7011  00470A  1B99               	xorwf	___flge@ff1& (0+255),f,b
  7012  00470C  0E00               	movlw	0
  7013  00470E  1B9A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7014  004710  0E00               	movlw	0
  7015  004712  1B9B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7016  004714  0E80               	movlw	128
  7017  004716  1B9C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7018  004718  0E00               	movlw	0
  7019  00471A  1B9D               	xorwf	___flge@ff2& (0+255),f,b
  7020  00471C  0E00               	movlw	0
  7021  00471E  1B9E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7022  004720  0E00               	movlw	0
  7023  004722  1B9F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7024  004724  0E80               	movlw	128
  7025  004726  1BA0               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7026  004728  519D               	movf	___flge@ff2& (0+255),w,b
  7027  00472A  5D99               	subwf	___flge@ff1& (0+255),w,b
  7028  00472C  519E               	movf	(___flge@ff2+1)& (0+255),w,b
  7029  00472E  599A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7030  004730  519F               	movf	(___flge@ff2+2)& (0+255),w,b
  7031  004732  599B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7032  004734  51A0               	movf	(___flge@ff2+3)& (0+255),w,b
  7033  004736  599C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7034  004738  B0D8               	btfsc	status,0,c
  7035  00473A  EFA1  F023         	goto	u13711
  7036  00473E  EFA3  F023         	goto	u13710
  7037  004742                     u13711:
  7038  004742  EFA6  F023         	goto	l11845
  7039  004746                     u13710:
  7040  004746                     
  7041                           ; BSR set to: 0
  7042  004746  90D8               	bcf	status,0,c
  7043  004748  EFA7  F023         	goto	l2032
  7044  00474C                     l11845:
  7045                           
  7046                           ; BSR set to: 0
  7047  00474C  80D8               	bsf	status,0,c
  7048  00474E                     l2032:
  7049                           
  7050                           ; BSR set to: 0
  7051  00474E  0012               	return		;funcret
  7052  004750                     __end_of___flge:
  7053                           	callstack 0
  7054                           
  7055 ;; *************** function ___fleq *****************
  7056 ;; Defined at:
  7057 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fleq.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  ff1             4    0[BANK0 ] unsigned char 
  7060 ;;  ff2             4    4[BANK0 ] unsigned char 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;		None               void
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7072 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;Total ram usage:       12 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:   10
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_efgtoa
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text20
  7087  005340                     __ptext20:
  7088                           	callstack 0
  7089  005340                     ___fleq:
  7090                           	callstack 14
  7091  005340  0E00               	movlw	0
  7092  005342  0100               	movlb	0	; () banked
  7093  005344  1580               	andwf	___fleq@ff1& (0+255),w,b
  7094  005346  6F88               	movwf	??___fleq& (0+255),b
  7095  005348  0E00               	movlw	0
  7096  00534A  1581               	andwf	(___fleq@ff1+1)& (0+255),w,b
  7097  00534C  6F89               	movwf	(??___fleq+1)& (0+255),b
  7098  00534E  0E80               	movlw	128
  7099  005350  1582               	andwf	(___fleq@ff1+2)& (0+255),w,b
  7100  005352  6F8A               	movwf	(??___fleq+2)& (0+255),b
  7101  005354  0E7F               	movlw	127
  7102  005356  1583               	andwf	(___fleq@ff1+3)& (0+255),w,b
  7103  005358  6F8B               	movwf	(??___fleq+3)& (0+255),b
  7104  00535A  5188               	movf	??___fleq& (0+255),w,b
  7105  00535C  1189               	iorwf	(??___fleq+1)& (0+255),w,b
  7106  00535E  118A               	iorwf	(??___fleq+2)& (0+255),w,b
  7107  005360  118B               	iorwf	(??___fleq+3)& (0+255),w,b
  7108  005362  A4D8               	btfss	status,2,c
  7109  005364  EFB6  F029         	goto	u13641
  7110  005368  EFB8  F029         	goto	u13640
  7111  00536C                     u13641:
  7112  00536C  EFC0  F029         	goto	l11815
  7113  005370                     u13640:
  7114  005370                     
  7115                           ; BSR set to: 0
  7116  005370  0E00               	movlw	0
  7117  005372  6F80               	movwf	___fleq@ff1& (0+255),b
  7118  005374  0E00               	movlw	0
  7119  005376  6F81               	movwf	(___fleq@ff1+1)& (0+255),b
  7120  005378  0E00               	movlw	0
  7121  00537A  6F82               	movwf	(___fleq@ff1+2)& (0+255),b
  7122  00537C  0E00               	movlw	0
  7123  00537E  6F83               	movwf	(___fleq@ff1+3)& (0+255),b
  7124  005380                     l11815:
  7125                           
  7126                           ; BSR set to: 0
  7127  005380  0E00               	movlw	0
  7128  005382  1584               	andwf	___fleq@ff2& (0+255),w,b
  7129  005384  6F88               	movwf	??___fleq& (0+255),b
  7130  005386  0E00               	movlw	0
  7131  005388  1585               	andwf	(___fleq@ff2+1)& (0+255),w,b
  7132  00538A  6F89               	movwf	(??___fleq+1)& (0+255),b
  7133  00538C  0E80               	movlw	128
  7134  00538E  1586               	andwf	(___fleq@ff2+2)& (0+255),w,b
  7135  005390  6F8A               	movwf	(??___fleq+2)& (0+255),b
  7136  005392  0E7F               	movlw	127
  7137  005394  1587               	andwf	(___fleq@ff2+3)& (0+255),w,b
  7138  005396  6F8B               	movwf	(??___fleq+3)& (0+255),b
  7139  005398  5188               	movf	??___fleq& (0+255),w,b
  7140  00539A  1189               	iorwf	(??___fleq+1)& (0+255),w,b
  7141  00539C  118A               	iorwf	(??___fleq+2)& (0+255),w,b
  7142  00539E  118B               	iorwf	(??___fleq+3)& (0+255),w,b
  7143  0053A0  A4D8               	btfss	status,2,c
  7144  0053A2  EFD5  F029         	goto	u13651
  7145  0053A6  EFD7  F029         	goto	u13650
  7146  0053AA                     u13651:
  7147  0053AA  EFDF  F029         	goto	l11819
  7148  0053AE                     u13650:
  7149  0053AE                     
  7150                           ; BSR set to: 0
  7151  0053AE  0E00               	movlw	0
  7152  0053B0  6F84               	movwf	___fleq@ff2& (0+255),b
  7153  0053B2  0E00               	movlw	0
  7154  0053B4  6F85               	movwf	(___fleq@ff2+1)& (0+255),b
  7155  0053B6  0E00               	movlw	0
  7156  0053B8  6F86               	movwf	(___fleq@ff2+2)& (0+255),b
  7157  0053BA  0E00               	movlw	0
  7158  0053BC  6F87               	movwf	(___fleq@ff2+3)& (0+255),b
  7159  0053BE                     l11819:
  7160                           
  7161                           ; BSR set to: 0
  7162  0053BE  5184               	movf	___fleq@ff2& (0+255),w,b
  7163  0053C0  1980               	xorwf	___fleq@ff1& (0+255),w,b
  7164  0053C2  E10F               	bnz	u13660
  7165  0053C4  5185               	movf	(___fleq@ff2+1)& (0+255),w,b
  7166  0053C6  1981               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  7167  0053C8  E10C               	bnz	u13660
  7168  0053CA  5186               	movf	(___fleq@ff2+2)& (0+255),w,b
  7169  0053CC  1982               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  7170  0053CE  E109               	bnz	u13660
  7171  0053D0  5187               	movf	(___fleq@ff2+3)& (0+255),w,b
  7172  0053D2  1983               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  7173  0053D4  B4D8               	btfsc	status,2,c
  7174  0053D6  EFEF  F029         	goto	u13661
  7175  0053DA  EFF1  F029         	goto	u13660
  7176  0053DE                     u13661:
  7177  0053DE  EFF4  F029         	goto	l11823
  7178  0053E2                     u13660:
  7179  0053E2                     
  7180                           ; BSR set to: 0
  7181  0053E2  90D8               	bcf	status,0,c
  7182  0053E4  EFF5  F029         	goto	l2021
  7183  0053E8                     l11823:
  7184                           
  7185                           ; BSR set to: 0
  7186  0053E8  80D8               	bsf	status,0,c
  7187  0053EA                     l2021:
  7188                           
  7189                           ; BSR set to: 0
  7190  0053EA  0012               	return		;funcret
  7191  0053EC                     __end_of___fleq:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function ___awmod *****************
  7195 ;; Defined at:
  7196 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  dividend        2    0[BANK0 ] int 
  7199 ;;  divisor         2    2[BANK0 ] int 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  sign            1   42[COMRAM] unsigned char 
  7202 ;;  counter         1   41[COMRAM] unsigned char 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  2    0[BANK0 ] int 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7212 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;Total ram usage:        6 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:   10
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_efgtoa
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text21
  7227  00507E                     __ptext21:
  7228                           	callstack 0
  7229  00507E                     ___awmod:
  7230                           	callstack 14
  7231  00507E  0E00               	movlw	0
  7232  005080  6E2B               	movwf	___awmod@sign^0,c
  7233  005082  0100               	movlb	0	; () banked
  7234  005084  BF81               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  7235  005086  EF49  F028         	goto	u13580
  7236  00508A  EF47  F028         	goto	u13581
  7237  00508E                     u13581:
  7238  00508E  EF4F  F028         	goto	l11783
  7239  005092                     u13580:
  7240  005092                     
  7241                           ; BSR set to: 0
  7242  005092  6D80               	negf	___awmod@dividend& (0+255),b
  7243  005094  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  7244  005096  B0D8               	btfsc	status,0,c
  7245  005098  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  7246  00509A                     
  7247                           ; BSR set to: 0
  7248  00509A  0E01               	movlw	1
  7249  00509C  6E2B               	movwf	___awmod@sign^0,c
  7250  00509E                     l11783:
  7251                           
  7252                           ; BSR set to: 0
  7253  00509E  BF83               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7254  0050A0  EF56  F028         	goto	u13590
  7255  0050A4  EF54  F028         	goto	u13591
  7256  0050A8                     u13591:
  7257  0050A8  EF5A  F028         	goto	l11787
  7258  0050AC                     u13590:
  7259  0050AC                     
  7260                           ; BSR set to: 0
  7261  0050AC  6D82               	negf	___awmod@divisor& (0+255),b
  7262  0050AE  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  7263  0050B0  B0D8               	btfsc	status,0,c
  7264  0050B2  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  7265  0050B4                     l11787:
  7266                           
  7267                           ; BSR set to: 0
  7268  0050B4  5182               	movf	___awmod@divisor& (0+255),w,b
  7269  0050B6  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7270  0050B8  B4D8               	btfsc	status,2,c
  7271  0050BA  EF61  F028         	goto	u13601
  7272  0050BE  EF63  F028         	goto	u13600
  7273  0050C2                     u13601:
  7274  0050C2  EF87  F028         	goto	l11803
  7275  0050C6                     u13600:
  7276  0050C6                     
  7277                           ; BSR set to: 0
  7278  0050C6  0E01               	movlw	1
  7279  0050C8  6E2A               	movwf	___awmod@counter^0,c
  7280  0050CA  EF6B  F028         	goto	l11793
  7281  0050CE                     l11791:
  7282                           
  7283                           ; BSR set to: 0
  7284  0050CE  90D8               	bcf	status,0,c
  7285  0050D0  3782               	rlcf	___awmod@divisor& (0+255),f,b
  7286  0050D2  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7287  0050D4  2A2A               	incf	___awmod@counter^0,f,c
  7288  0050D6                     l11793:
  7289                           
  7290                           ; BSR set to: 0
  7291  0050D6  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7292  0050D8  EF70  F028         	goto	u13611
  7293  0050DC  EF72  F028         	goto	u13610
  7294  0050E0                     u13611:
  7295  0050E0  EF67  F028         	goto	l11791
  7296  0050E4                     u13610:
  7297  0050E4                     l11795:
  7298                           
  7299                           ; BSR set to: 0
  7300  0050E4  5182               	movf	___awmod@divisor& (0+255),w,b
  7301  0050E6  5D80               	subwf	___awmod@dividend& (0+255),w,b
  7302  0050E8  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  7303  0050EA  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7304  0050EC  A0D8               	btfss	status,0,c
  7305  0050EE  EF7B  F028         	goto	u13621
  7306  0050F2  EF7D  F028         	goto	u13620
  7307  0050F6                     u13621:
  7308  0050F6  EF81  F028         	goto	l11799
  7309  0050FA                     u13620:
  7310  0050FA                     
  7311                           ; BSR set to: 0
  7312  0050FA  5182               	movf	___awmod@divisor& (0+255),w,b
  7313  0050FC  5F80               	subwf	___awmod@dividend& (0+255),f,b
  7314  0050FE  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  7315  005100  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7316  005102                     l11799:
  7317                           
  7318                           ; BSR set to: 0
  7319  005102  90D8               	bcf	status,0,c
  7320  005104  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7321  005106  3382               	rrcf	___awmod@divisor& (0+255),f,b
  7322  005108                     
  7323                           ; BSR set to: 0
  7324  005108  2E2A               	decfsz	___awmod@counter^0,f,c
  7325  00510A  EF72  F028         	goto	l11795
  7326  00510E                     l11803:
  7327                           
  7328                           ; BSR set to: 0
  7329  00510E  502B               	movf	___awmod@sign^0,w,c
  7330  005110  B4D8               	btfsc	status,2,c
  7331  005112  EF8D  F028         	goto	u13631
  7332  005116  EF8F  F028         	goto	u13630
  7333  00511A                     u13631:
  7334  00511A  EF93  F028         	goto	l11807
  7335  00511E                     u13630:
  7336  00511E                     
  7337                           ; BSR set to: 0
  7338  00511E  6D80               	negf	___awmod@dividend& (0+255),b
  7339  005120  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  7340  005122  B0D8               	btfsc	status,0,c
  7341  005124  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  7342  005126                     l11807:
  7343                           
  7344                           ; BSR set to: 0
  7345  005126  C080  F080         	movff	___awmod@dividend,?___awmod
  7346  00512A  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  7347  00512E                     
  7348                           ; BSR set to: 0
  7349  00512E  0012               	return		;funcret
  7350  005130                     __end_of___awmod:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function ___awdiv *****************
  7354 ;; Defined at:
  7355 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  dividend        2    0[BANK0 ] int 
  7358 ;;  divisor         2    2[BANK0 ] int 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  quotient        2    6[BANK0 ] int 
  7361 ;;  sign            1    5[BANK0 ] unsigned char 
  7362 ;;  counter         1    4[BANK0 ] unsigned char 
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  2    0[BANK0 ] int 
  7365 ;; Registers used:
  7366 ;;		wreg, status,2, status,0
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;Total ram usage:        8 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:   10
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_efgtoa
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text22
  7387  004E4A                     __ptext22:
  7388                           	callstack 0
  7389  004E4A                     ___awdiv:
  7390                           	callstack 14
  7391  004E4A  0E00               	movlw	0
  7392  004E4C  0100               	movlb	0	; () banked
  7393  004E4E  6F85               	movwf	___awdiv@sign& (0+255),b
  7394  004E50                     
  7395                           ; BSR set to: 0
  7396  004E50  BF83               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7397  004E52  EF2F  F027         	goto	u13520
  7398  004E56  EF2D  F027         	goto	u13521
  7399  004E5A                     u13521:
  7400  004E5A  EF35  F027         	goto	l11739
  7401  004E5E                     u13520:
  7402  004E5E                     
  7403                           ; BSR set to: 0
  7404  004E5E  6D82               	negf	___awdiv@divisor& (0+255),b
  7405  004E60  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7406  004E62  B0D8               	btfsc	status,0,c
  7407  004E64  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7408  004E66                     
  7409                           ; BSR set to: 0
  7410  004E66  0E01               	movlw	1
  7411  004E68  6F85               	movwf	___awdiv@sign& (0+255),b
  7412  004E6A                     l11739:
  7413                           
  7414                           ; BSR set to: 0
  7415  004E6A  BF81               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7416  004E6C  EF3C  F027         	goto	u13530
  7417  004E70  EF3A  F027         	goto	u13531
  7418  004E74                     u13531:
  7419  004E74  EF42  F027         	goto	l11745
  7420  004E78                     u13530:
  7421  004E78                     
  7422                           ; BSR set to: 0
  7423  004E78  6D80               	negf	___awdiv@dividend& (0+255),b
  7424  004E7A  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7425  004E7C  B0D8               	btfsc	status,0,c
  7426  004E7E  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7427  004E80                     
  7428                           ; BSR set to: 0
  7429  004E80  0E01               	movlw	1
  7430  004E82  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  7431  004E84                     l11745:
  7432                           
  7433                           ; BSR set to: 0
  7434  004E84  0E00               	movlw	0
  7435  004E86  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  7436  004E88  0E00               	movlw	0
  7437  004E8A  6F86               	movwf	___awdiv@quotient& (0+255),b
  7438  004E8C                     
  7439                           ; BSR set to: 0
  7440  004E8C  5182               	movf	___awdiv@divisor& (0+255),w,b
  7441  004E8E  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7442  004E90  B4D8               	btfsc	status,2,c
  7443  004E92  EF4D  F027         	goto	u13541
  7444  004E96  EF4F  F027         	goto	u13540
  7445  004E9A                     u13541:
  7446  004E9A  EF77  F027         	goto	l11767
  7447  004E9E                     u13540:
  7448  004E9E                     
  7449                           ; BSR set to: 0
  7450  004E9E  0E01               	movlw	1
  7451  004EA0  6F84               	movwf	___awdiv@counter& (0+255),b
  7452  004EA2  EF57  F027         	goto	l11753
  7453  004EA6                     l11751:
  7454                           
  7455                           ; BSR set to: 0
  7456  004EA6  90D8               	bcf	status,0,c
  7457  004EA8  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  7458  004EAA  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7459  004EAC  2B84               	incf	___awdiv@counter& (0+255),f,b
  7460  004EAE                     l11753:
  7461                           
  7462                           ; BSR set to: 0
  7463  004EAE  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7464  004EB0  EF5C  F027         	goto	u13551
  7465  004EB4  EF5E  F027         	goto	u13550
  7466  004EB8                     u13551:
  7467  004EB8  EF53  F027         	goto	l11751
  7468  004EBC                     u13550:
  7469  004EBC                     l11755:
  7470                           
  7471                           ; BSR set to: 0
  7472  004EBC  90D8               	bcf	status,0,c
  7473  004EBE  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  7474  004EC0  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7475  004EC2                     
  7476                           ; BSR set to: 0
  7477  004EC2  5182               	movf	___awdiv@divisor& (0+255),w,b
  7478  004EC4  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  7479  004EC6  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7480  004EC8  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7481  004ECA  A0D8               	btfss	status,0,c
  7482  004ECC  EF6A  F027         	goto	u13561
  7483  004ED0  EF6C  F027         	goto	u13560
  7484  004ED4                     u13561:
  7485  004ED4  EF71  F027         	goto	l11763
  7486  004ED8                     u13560:
  7487  004ED8                     
  7488                           ; BSR set to: 0
  7489  004ED8  5182               	movf	___awdiv@divisor& (0+255),w,b
  7490  004EDA  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  7491  004EDC  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7492  004EDE  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7493  004EE0                     
  7494                           ; BSR set to: 0
  7495  004EE0  8186               	bsf	___awdiv@quotient& (0+255),0,b
  7496  004EE2                     l11763:
  7497                           
  7498                           ; BSR set to: 0
  7499  004EE2  90D8               	bcf	status,0,c
  7500  004EE4  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7501  004EE6  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  7502  004EE8                     
  7503                           ; BSR set to: 0
  7504  004EE8  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  7505  004EEA  EF5E  F027         	goto	l11755
  7506  004EEE                     l11767:
  7507                           
  7508                           ; BSR set to: 0
  7509  004EEE  5185               	movf	___awdiv@sign& (0+255),w,b
  7510  004EF0  B4D8               	btfsc	status,2,c
  7511  004EF2  EF7D  F027         	goto	u13571
  7512  004EF6  EF7F  F027         	goto	u13570
  7513  004EFA                     u13571:
  7514  004EFA  EF83  F027         	goto	l11771
  7515  004EFE                     u13570:
  7516  004EFE                     
  7517                           ; BSR set to: 0
  7518  004EFE  6D86               	negf	___awdiv@quotient& (0+255),b
  7519  004F00  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7520  004F02  B0D8               	btfsc	status,0,c
  7521  004F04  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7522  004F06                     l11771:
  7523                           
  7524                           ; BSR set to: 0
  7525  004F06  C086  F080         	movff	___awdiv@quotient,?___awdiv
  7526  004F0A  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  7527  004F0E                     
  7528                           ; BSR set to: 0
  7529  004F0E  0012               	return		;funcret
  7530  004F10                     __end_of___awdiv:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _dtoa *****************
  7534 ;; Defined at:
  7535 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  7538 ;;		 -> sprintf@f(6), 
  7539 ;;  d               8   28[BANK0 ] long long 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  n               8   52[BANK0 ] long long 
  7542 ;;  i               2   60[BANK0 ] int 
  7543 ;;  s               2   50[BANK0 ] int 
  7544 ;;  w               2   48[BANK0 ] int 
  7545 ;;  p               2   46[BANK0 ] int 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  2   26[BANK0 ] int 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7555 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;Total ram usage:       36 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:   14
  7562 ;; This function calls:
  7563 ;;		___aodiv
  7564 ;;		___aomod
  7565 ;;		_abs
  7566 ;;		_pad
  7567 ;; This function is called by:
  7568 ;;		_vfpfcnvrt
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text23
  7573  0031C4                     __ptext23:
  7574                           	callstack 0
  7575  0031C4                     _dtoa:
  7576                           	callstack 11
  7577  0031C4                     
  7578                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7579  0031C4  C09C  F0B4         	movff	dtoa@d,dtoa@n
  7580  0031C8  C09D  F0B5         	movff	dtoa@d+1,dtoa@n+1
  7581  0031CC  C09E  F0B6         	movff	dtoa@d+2,dtoa@n+2
  7582  0031D0  C09F  F0B7         	movff	dtoa@d+3,dtoa@n+3
  7583  0031D4  C0A0  F0B8         	movff	dtoa@d+4,dtoa@n+4
  7584  0031D8  C0A1  F0B9         	movff	dtoa@d+5,dtoa@n+5
  7585  0031DC  C0A2  F0BA         	movff	dtoa@d+6,dtoa@n+6
  7586  0031E0  C0A3  F0BB         	movff	dtoa@d+7,dtoa@n+7
  7587  0031E4                     
  7588                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7589  0031E4  0100               	movlb	0	; () banked
  7590  0031E6  BFBB               	btfsc	(dtoa@n+7)& (0+255),7,b
  7591  0031E8  EFF8  F018         	goto	u14111
  7592  0031EC  EFFB  F018         	goto	u14110
  7593  0031F0                     u14111:
  7594  0031F0  0E01               	movlw	1
  7595  0031F2  EFFC  F018         	goto	u14120
  7596  0031F6                     u14110:
  7597  0031F6  0E00               	movlw	0
  7598  0031F8                     u14120:
  7599  0031F8  6FB2               	movwf	dtoa@s& (0+255),b
  7600  0031FA  6BB3               	clrf	(dtoa@s+1)& (0+255),b
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7603  0031FC  51B2               	movf	dtoa@s& (0+255),w,b
  7604  0031FE  11B3               	iorwf	(dtoa@s+1)& (0+255),w,b
  7605  003200  B4D8               	btfsc	status,2,c
  7606  003202  EF05  F019         	goto	u14131
  7607  003206  EF07  F019         	goto	u14130
  7608  00320A                     u14131:
  7609  00320A  EF17  F019         	goto	l12021
  7610  00320E                     u14130:
  7611  00320E                     
  7612                           ; BSR set to: 0
  7613                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7614  00320E  1FBB               	comf	(dtoa@n+7)& (0+255),f,b
  7615  003210  1FBA               	comf	(dtoa@n+6)& (0+255),f,b
  7616  003212  1FB9               	comf	(dtoa@n+5)& (0+255),f,b
  7617  003214  1FB8               	comf	(dtoa@n+4)& (0+255),f,b
  7618  003216  1FB7               	comf	(dtoa@n+3)& (0+255),f,b
  7619  003218  1FB6               	comf	(dtoa@n+2)& (0+255),f,b
  7620  00321A  1FB5               	comf	(dtoa@n+1)& (0+255),f,b
  7621  00321C  6DB4               	negf	dtoa@n& (0+255),b
  7622  00321E  0E00               	movlw	0
  7623  003220  23B5               	addwfc	(dtoa@n+1)& (0+255),f,b
  7624  003222  23B6               	addwfc	(dtoa@n+2)& (0+255),f,b
  7625  003224  23B7               	addwfc	(dtoa@n+3)& (0+255),f,b
  7626  003226  23B8               	addwfc	(dtoa@n+4)& (0+255),f,b
  7627  003228  23B9               	addwfc	(dtoa@n+5)& (0+255),f,b
  7628  00322A  23BA               	addwfc	(dtoa@n+6)& (0+255),f,b
  7629  00322C  23BB               	addwfc	(dtoa@n+7)& (0+255),f,b
  7630  00322E                     l12021:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7634  00322E  BE30               	btfsc	(_prec+1)^0,7,c
  7635  003230  EF1C  F019         	goto	u14141
  7636  003234  EF1E  F019         	goto	u14140
  7637  003238                     u14141:
  7638  003238  EF1F  F019         	goto	l12025
  7639  00323C                     u14140:
  7640  00323C                     
  7641                           ; BSR set to: 0
  7642                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7643  00323C  9231               	bcf	_flags@doprnt$F4763^0,1,c
  7644  00323E                     l12025:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7648  00323E  BE30               	btfsc	(_prec+1)^0,7,c
  7649  003240  EF2C  F019         	goto	u14150
  7650  003244  5030               	movf	(_prec+1)^0,w,c
  7651  003246  E106               	bnz	u14151
  7652  003248  042F               	decf	_prec^0,w,c
  7653  00324A  B0D8               	btfsc	status,0,c
  7654  00324C  EF2A  F019         	goto	u14151
  7655  003250  EF2C  F019         	goto	u14150
  7656  003254                     u14151:
  7657  003254  EF32  F019         	goto	l2500
  7658  003258                     u14150:
  7659  003258                     
  7660                           ; BSR set to: 0
  7661  003258  0E00               	movlw	0
  7662  00325A  6FAF               	movwf	(dtoa@p+1)& (0+255),b
  7663  00325C  0E01               	movlw	1
  7664  00325E  6FAE               	movwf	dtoa@p& (0+255),b
  7665  003260  EF36  F019         	goto	l2502
  7666  003264                     l2500:
  7667                           
  7668                           ; BSR set to: 0
  7669  003264  C02F  F0AE         	movff	_prec,dtoa@p
  7670  003268  C030  F0AF         	movff	_prec+1,dtoa@p+1
  7671  00326C                     l2502:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7675  00326C  C02D  F0B0         	movff	_width,dtoa@w
  7676  003270  C02E  F0B1         	movff	_width+1,dtoa@w+1
  7677  003274                     
  7678                           ; BSR set to: 0
  7679                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7680  003274  51B2               	movf	dtoa@s& (0+255),w,b
  7681  003276  11B3               	iorwf	(dtoa@s+1)& (0+255),w,b
  7682  003278  A4D8               	btfss	status,2,c
  7683  00327A  EF41  F019         	goto	u14161
  7684  00327E  EF43  F019         	goto	u14160
  7685  003282                     u14161:
  7686  003282  EF4A  F019         	goto	l12033
  7687  003286                     u14160:
  7688  003286                     
  7689                           ; BSR set to: 0
  7690  003286  A431               	btfss	_flags@doprnt$F4763^0,2,c
  7691  003288  EF48  F019         	goto	u14171
  7692  00328C  EF4A  F019         	goto	u14170
  7693  003290                     u14171:
  7694  003290  EF4D  F019         	goto	l12035
  7695  003294                     u14170:
  7696  003294                     l12033:
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  7700  003294  07B0               	decf	dtoa@w& (0+255),f,b
  7701  003296  A0D8               	btfss	status,0,c
  7702  003298  07B1               	decf	(dtoa@w+1)& (0+255),f,b
  7703  00329A                     l12035:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7707  00329A  0E00               	movlw	0
  7708  00329C  6FBD               	movwf	(dtoa@i+1)& (0+255),b
  7709  00329E  0E4F               	movlw	79
  7710  0032A0  6FBC               	movwf	dtoa@i& (0+255),b
  7711  0032A2                     
  7712                           ; BSR set to: 0
  7713                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7714  0032A2  0E00               	movlw	0
  7715  0032A4  0102               	movlb	2	; () banked
  7716  0032A6  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7717                           
  7718                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7719  0032A8  EFD3  F019         	goto	l12049
  7720  0032AC                     l12039:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  7724  0032AC  07BC               	decf	dtoa@i& (0+255),f,b
  7725  0032AE  A0D8               	btfss	status,0,c
  7726  0032B0  07BD               	decf	(dtoa@i+1)& (0+255),f,b
  7727  0032B2                     
  7728                           ; BSR set to: 0
  7729                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7730  0032B2  0E00               	movlw	low _dbuf
  7731  0032B4  25BC               	addwf	dtoa@i& (0+255),w,b
  7732  0032B6  6ED9               	movwf	fsr2l,c
  7733  0032B8  0E02               	movlw	high _dbuf
  7734  0032BA  21BD               	addwfc	(dtoa@i+1)& (0+255),w,b
  7735  0032BC  6EDA               	movwf	fsr2h,c
  7736  0032BE  C0B4  F080         	movff	dtoa@n,___aomod@dividend
  7737  0032C2  C0B5  F081         	movff	dtoa@n+1,___aomod@dividend+1
  7738  0032C6  C0B6  F082         	movff	dtoa@n+2,___aomod@dividend+2
  7739  0032CA  C0B7  F083         	movff	dtoa@n+3,___aomod@dividend+3
  7740  0032CE  C0B8  F084         	movff	dtoa@n+4,___aomod@dividend+4
  7741  0032D2  C0B9  F085         	movff	dtoa@n+5,___aomod@dividend+5
  7742  0032D6  C0BA  F086         	movff	dtoa@n+6,___aomod@dividend+6
  7743  0032DA  C0BB  F087         	movff	dtoa@n+7,___aomod@dividend+7
  7744  0032DE  0E0A               	movlw	10
  7745  0032E0  6F88               	movwf	___aomod@divisor& (0+255),b
  7746  0032E2  0E00               	movlw	0
  7747  0032E4  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  7748  0032E6  0E00               	movlw	0
  7749  0032E8  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  7750  0032EA  0E00               	movlw	0
  7751  0032EC  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  7752  0032EE  0E00               	movlw	0
  7753  0032F0  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  7754  0032F2  0E00               	movlw	0
  7755  0032F4  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  7756  0032F6  0E00               	movlw	0
  7757  0032F8  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  7758  0032FA  0E00               	movlw	0
  7759  0032FC  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  7760  0032FE  EC84  F01F         	call	___aomod	;wreg free
  7761  003302  C080  F0A4         	movff	?___aomod,??_dtoa
  7762  003306  C081  F0A5         	movff	?___aomod+1,??_dtoa+1
  7763  00330A  C082  F0A6         	movff	?___aomod+2,??_dtoa+2
  7764  00330E  C083  F0A7         	movff	?___aomod+3,??_dtoa+3
  7765  003312  C084  F0A8         	movff	?___aomod+4,??_dtoa+4
  7766  003316  C085  F0A9         	movff	?___aomod+5,??_dtoa+5
  7767  00331A  C086  F0AA         	movff	?___aomod+6,??_dtoa+6
  7768  00331E  C087  F0AB         	movff	?___aomod+7,??_dtoa+7
  7769  003322  C0A4  F090         	movff	??_dtoa,abs@a
  7770  003326  C0A6  F091         	movff	??_dtoa+2,abs@a+1
  7771  00332A  EC4A  F030         	call	_abs	;wreg free
  7772  00332E  0100               	movlb	0	; () banked
  7773  003330  5190               	movf	?_abs& (0+255),w,b
  7774  003332  0F30               	addlw	48
  7775  003334  6EDF               	movwf	indf2,c
  7776  003336                     
  7777                           ; BSR set to: 0
  7778                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  7779  003336  07AE               	decf	dtoa@p& (0+255),f,b
  7780  003338  A0D8               	btfss	status,0,c
  7781  00333A  07AF               	decf	(dtoa@p+1)& (0+255),f,b
  7782  00333C                     
  7783                           ; BSR set to: 0
  7784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  7785  00333C  07B0               	decf	dtoa@w& (0+255),f,b
  7786  00333E  A0D8               	btfss	status,0,c
  7787  003340  07B1               	decf	(dtoa@w+1)& (0+255),f,b
  7788  003342                     
  7789                           ; BSR set to: 0
  7790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7791  003342  C0B4  F080         	movff	dtoa@n,___aodiv@dividend
  7792  003346  C0B5  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  7793  00334A  C0B6  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  7794  00334E  C0B7  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  7795  003352  C0B8  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  7796  003356  C0B9  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  7797  00335A  C0BA  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  7798  00335E  C0BB  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  7799  003362  0E0A               	movlw	10
  7800  003364  6F88               	movwf	___aodiv@divisor& (0+255),b
  7801  003366  0E00               	movlw	0
  7802  003368  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  7803  00336A  0E00               	movlw	0
  7804  00336C  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  7805  00336E  0E00               	movlw	0
  7806  003370  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  7807  003372  0E00               	movlw	0
  7808  003374  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  7809  003376  0E00               	movlw	0
  7810  003378  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  7811  00337A  0E00               	movlw	0
  7812  00337C  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  7813  00337E  0E00               	movlw	0
  7814  003380  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  7815  003382  EC40  F01D         	call	___aodiv	;wreg free
  7816  003386  C080  F0B4         	movff	?___aodiv,dtoa@n
  7817  00338A  C081  F0B5         	movff	?___aodiv+1,dtoa@n+1
  7818  00338E  C082  F0B6         	movff	?___aodiv+2,dtoa@n+2
  7819  003392  C083  F0B7         	movff	?___aodiv+3,dtoa@n+3
  7820  003396  C084  F0B8         	movff	?___aodiv+4,dtoa@n+4
  7821  00339A  C085  F0B9         	movff	?___aodiv+5,dtoa@n+5
  7822  00339E  C086  F0BA         	movff	?___aodiv+6,dtoa@n+6
  7823  0033A2  C087  F0BB         	movff	?___aodiv+7,dtoa@n+7
  7824  0033A6                     l12049:
  7825                           
  7826                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7827  0033A6  0100               	movlb	0	; () banked
  7828  0033A8  BFBD               	btfsc	(dtoa@i+1)& (0+255),7,b
  7829  0033AA  EFDF  F019         	goto	u14181
  7830  0033AE  51BD               	movf	(dtoa@i+1)& (0+255),w,b
  7831  0033B0  E108               	bnz	u14180
  7832  0033B2  05BC               	decf	dtoa@i& (0+255),w,b
  7833  0033B4  A0D8               	btfss	status,0,c
  7834  0033B6  EFDF  F019         	goto	u14181
  7835  0033BA  EFE1  F019         	goto	u14180
  7836  0033BE                     u14181:
  7837  0033BE  EF11  F01A         	goto	l12059
  7838  0033C2                     u14180:
  7839  0033C2                     
  7840                           ; BSR set to: 0
  7841  0033C2  51B4               	movf	dtoa@n& (0+255),w,b
  7842  0033C4  11B5               	iorwf	(dtoa@n+1)& (0+255),w,b
  7843  0033C6  11B6               	iorwf	(dtoa@n+2)& (0+255),w,b
  7844  0033C8  11B7               	iorwf	(dtoa@n+3)& (0+255),w,b
  7845  0033CA  11B8               	iorwf	(dtoa@n+4)& (0+255),w,b
  7846  0033CC  11B9               	iorwf	(dtoa@n+5)& (0+255),w,b
  7847  0033CE  11BA               	iorwf	(dtoa@n+6)& (0+255),w,b
  7848  0033D0  11BB               	iorwf	(dtoa@n+7)& (0+255),w,b
  7849  0033D2  A4D8               	btfss	status,2,c
  7850  0033D4  EFEE  F019         	goto	u14191
  7851  0033D8  EFF0  F019         	goto	u14190
  7852  0033DC                     u14191:
  7853  0033DC  EF56  F019         	goto	l12039
  7854  0033E0                     u14190:
  7855  0033E0                     
  7856                           ; BSR set to: 0
  7857  0033E0  BFAF               	btfsc	(dtoa@p+1)& (0+255),7,b
  7858  0033E2  EFFD  F019         	goto	u14200
  7859  0033E6  51AF               	movf	(dtoa@p+1)& (0+255),w,b
  7860  0033E8  E106               	bnz	u14201
  7861  0033EA  05AE               	decf	dtoa@p& (0+255),w,b
  7862  0033EC  B0D8               	btfsc	status,0,c
  7863  0033EE  EFFB  F019         	goto	u14201
  7864  0033F2  EFFD  F019         	goto	u14200
  7865  0033F6                     u14201:
  7866  0033F6  EF56  F019         	goto	l12039
  7867  0033FA                     u14200:
  7868  0033FA                     
  7869                           ; BSR set to: 0
  7870  0033FA  BFB1               	btfsc	(dtoa@w+1)& (0+255),7,b
  7871  0033FC  EF08  F01A         	goto	u14211
  7872  003400  51B1               	movf	(dtoa@w+1)& (0+255),w,b
  7873  003402  E108               	bnz	u14210
  7874  003404  05B0               	decf	dtoa@w& (0+255),w,b
  7875  003406  A0D8               	btfss	status,0,c
  7876  003408  EF08  F01A         	goto	u14211
  7877  00340C  EF0A  F01A         	goto	u14210
  7878  003410                     u14211:
  7879  003410  EF11  F01A         	goto	l12059
  7880  003414                     u14210:
  7881  003414                     
  7882                           ; BSR set to: 0
  7883  003414  B231               	btfsc	_flags@doprnt$F4763^0,1,c
  7884  003416  EF0F  F01A         	goto	u14221
  7885  00341A  EF11  F01A         	goto	u14220
  7886  00341E                     u14221:
  7887  00341E  EF56  F019         	goto	l12039
  7888  003422                     u14220:
  7889  003422                     l12059:
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7893  003422  51B2               	movf	dtoa@s& (0+255),w,b
  7894  003424  11B3               	iorwf	(dtoa@s+1)& (0+255),w,b
  7895  003426  A4D8               	btfss	status,2,c
  7896  003428  EF18  F01A         	goto	u14231
  7897  00342C  EF1A  F01A         	goto	u14230
  7898  003430                     u14231:
  7899  003430  EF21  F01A         	goto	l12063
  7900  003434                     u14230:
  7901  003434                     
  7902                           ; BSR set to: 0
  7903  003434  A431               	btfss	_flags@doprnt$F4763^0,2,c
  7904  003436  EF1F  F01A         	goto	u14241
  7905  00343A  EF21  F01A         	goto	u14240
  7906  00343E                     u14241:
  7907  00343E  EF3F  F01A         	goto	l12073
  7908  003442                     u14240:
  7909  003442                     l12063:
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  7913  003442  07BC               	decf	dtoa@i& (0+255),f,b
  7914  003444  A0D8               	btfss	status,0,c
  7915  003446  07BD               	decf	(dtoa@i+1)& (0+255),f,b
  7916  003448                     
  7917                           ; BSR set to: 0
  7918                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7919  003448  51B2               	movf	dtoa@s& (0+255),w,b
  7920  00344A  11B3               	iorwf	(dtoa@s+1)& (0+255),w,b
  7921  00344C  A4D8               	btfss	status,2,c
  7922  00344E  EF2B  F01A         	goto	u14251
  7923  003452  EF2D  F01A         	goto	u14250
  7924  003456                     u14251:
  7925  003456  EF33  F01A         	goto	l12069
  7926  00345A                     u14250:
  7927  00345A                     
  7928                           ; BSR set to: 0
  7929  00345A  0E00               	movlw	0
  7930  00345C  6FAD               	movwf	(_dtoa$4782+1)& (0+255),b
  7931  00345E  0E2B               	movlw	43
  7932  003460  6FAC               	movwf	_dtoa$4782& (0+255),b
  7933  003462  EF37  F01A         	goto	l12071
  7934  003466                     l12069:
  7935                           
  7936                           ; BSR set to: 0
  7937  003466  0E00               	movlw	0
  7938  003468  6FAD               	movwf	(_dtoa$4782+1)& (0+255),b
  7939  00346A  0E2D               	movlw	45
  7940  00346C  6FAC               	movwf	_dtoa$4782& (0+255),b
  7941  00346E                     l12071:
  7942                           
  7943                           ; BSR set to: 0
  7944  00346E  0E00               	movlw	low _dbuf
  7945  003470  25BC               	addwf	dtoa@i& (0+255),w,b
  7946  003472  6ED9               	movwf	fsr2l,c
  7947  003474  0E02               	movlw	high _dbuf
  7948  003476  21BD               	addwfc	(dtoa@i+1)& (0+255),w,b
  7949  003478  6EDA               	movwf	fsr2h,c
  7950  00347A  C0AC  FFDF         	movff	_dtoa$4782,indf2
  7951  00347E                     l12073:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7955  00347E  C09A  F08D         	movff	dtoa@fp,pad@fp
  7956  003482  C09B  F08E         	movff	dtoa@fp+1,pad@fp+1
  7957  003486  0E00               	movlw	low _dbuf
  7958  003488  25BC               	addwf	dtoa@i& (0+255),w,b
  7959  00348A  6F8F               	movwf	pad@buf& (0+255),b
  7960  00348C  0E02               	movlw	high _dbuf
  7961  00348E  21BD               	addwfc	(dtoa@i+1)& (0+255),w,b
  7962  003490  6F90               	movwf	(pad@buf+1)& (0+255),b
  7963  003492  C0B0  F091         	movff	dtoa@w,pad@p
  7964  003496  C0B1  F092         	movff	dtoa@w+1,pad@p+1
  7965  00349A  ECC1  F026         	call	_pad	;wreg free
  7966  00349E  C08D  F09A         	movff	?_pad,?_dtoa
  7967  0034A2  C08E  F09B         	movff	?_pad+1,?_dtoa+1
  7968  0034A6  0012               	return		;funcret
  7969  0034A8                     __end_of_dtoa:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function _pad *****************
  7973 ;; Defined at:
  7974 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  7977 ;;		 -> sprintf@f(6), 
  7978 ;;  buf             2   15[BANK0 ] PTR unsigned char 
  7979 ;;		 -> dbuf(80), 
  7980 ;;  p               2   17[BANK0 ] int 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;  w               2   22[BANK0 ] int 
  7983 ;;  i               2   20[BANK0 ] int 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  2   13[BANK0 ] int 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;Total ram usage:       11 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:   13
  8000 ;; This function calls:
  8001 ;;		_fputc
  8002 ;;		_fputs
  8003 ;;		_strlen
  8004 ;; This function is called by:
  8005 ;;		_dtoa
  8006 ;;		_efgtoa
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text24
  8011  004D82                     __ptext24:
  8012                           	callstack 0
  8013  004D82                     _pad:
  8014                           	callstack 11
  8015  004D82                     
  8016                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8017  004D82  A031               	btfss	_flags@doprnt$F4763^0,0,c
  8018  004D84  EFC6  F026         	goto	u13801
  8019  004D88  EFC8  F026         	goto	u13800
  8020  004D8C                     u13801:
  8021  004D8C  EFD2  F026         	goto	l11905
  8022  004D90                     u13800:
  8023  004D90                     
  8024                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8025  004D90  C08F  F089         	movff	pad@buf,fputs@s
  8026  004D94  C090  F08A         	movff	pad@buf+1,fputs@s+1
  8027  004D98  C08D  F08B         	movff	pad@fp,fputs@fp
  8028  004D9C  C08E  F08C         	movff	pad@fp+1,fputs@fp+1
  8029  004DA0  EC04  F030         	call	_fputs	;wreg free
  8030  004DA4                     l11905:
  8031                           
  8032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8033  004DA4  0100               	movlb	0	; () banked
  8034  004DA6  BF92               	btfsc	(pad@p+1)& (0+255),7,b
  8035  004DA8  EFD8  F026         	goto	u13811
  8036  004DAC  EFDA  F026         	goto	u13810
  8037  004DB0                     u13811:
  8038  004DB0  EFE0  F026         	goto	l11909
  8039  004DB4                     u13810:
  8040  004DB4                     
  8041                           ; BSR set to: 0
  8042  004DB4  C091  F096         	movff	pad@p,pad@w
  8043  004DB8  C092  F097         	movff	pad@p+1,pad@w+1
  8044  004DBC  EFE4  F026         	goto	l2489
  8045  004DC0                     l11909:
  8046                           
  8047                           ; BSR set to: 0
  8048  004DC0  0E00               	movlw	0
  8049  004DC2  6F97               	movwf	(pad@w+1)& (0+255),b
  8050  004DC4  0E00               	movlw	0
  8051  004DC6  6F96               	movwf	pad@w& (0+255),b
  8052  004DC8                     l2489:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8056  004DC8  0E00               	movlw	0
  8057  004DCA  6F95               	movwf	(pad@i+1)& (0+255),b
  8058  004DCC  0E00               	movlw	0
  8059  004DCE  6F94               	movwf	pad@i& (0+255),b
  8060                           
  8061                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8062  004DD0  EFF7  F026         	goto	l11915
  8063  004DD4                     l11911:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8067  004DD4  0E00               	movlw	0
  8068  004DD6  6F81               	movwf	(fputc@c+1)& (0+255),b
  8069  004DD8  0E20               	movlw	32
  8070  004DDA  6F80               	movwf	fputc@c& (0+255),b
  8071  004DDC  C08D  F082         	movff	pad@fp,fputc@fp
  8072  004DE0  C08E  F083         	movff	pad@fp+1,fputc@fp+1
  8073  004DE4  EC5B  F026         	call	_fputc	;wreg free
  8074  004DE8                     
  8075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8076  004DE8  0100               	movlb	0	; () banked
  8077  004DEA  4B94               	infsnz	pad@i& (0+255),f,b
  8078  004DEC  2B95               	incf	(pad@i+1)& (0+255),f,b
  8079  004DEE                     l11915:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8083  004DEE  5196               	movf	pad@w& (0+255),w,b
  8084  004DF0  5D94               	subwf	pad@i& (0+255),w,b
  8085  004DF2  5195               	movf	(pad@i+1)& (0+255),w,b
  8086  004DF4  0A80               	xorlw	128
  8087  004DF6  6F93               	movwf	??_pad& (0+255),b
  8088  004DF8  5197               	movf	(pad@w+1)& (0+255),w,b
  8089  004DFA  0A80               	xorlw	128
  8090  004DFC  5993               	subwfb	??_pad& (0+255),w,b
  8091  004DFE  A0D8               	btfss	status,0,c
  8092  004E00  EF04  F027         	goto	u13821
  8093  004E04  EF06  F027         	goto	u13820
  8094  004E08                     u13821:
  8095  004E08  EFEA  F026         	goto	l11911
  8096  004E0C                     u13820:
  8097  004E0C                     
  8098                           ; BSR set to: 0
  8099                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8100  004E0C  B031               	btfsc	_flags@doprnt$F4763^0,0,c
  8101  004E0E  EF0B  F027         	goto	u13831
  8102  004E12  EF0D  F027         	goto	u13830
  8103  004E16                     u13831:
  8104  004E16  EF17  F027         	goto	l11919
  8105  004E1A                     u13830:
  8106  004E1A                     
  8107                           ; BSR set to: 0
  8108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8109  004E1A  C08F  F089         	movff	pad@buf,fputs@s
  8110  004E1E  C090  F08A         	movff	pad@buf+1,fputs@s+1
  8111  004E22  C08D  F08B         	movff	pad@fp,fputs@fp
  8112  004E26  C08E  F08C         	movff	pad@fp+1,fputs@fp+1
  8113  004E2A  EC04  F030         	call	_fputs	;wreg free
  8114  004E2E                     l11919:
  8115                           
  8116                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8117  004E2E  C08F  F02A         	movff	pad@buf,strlen@s
  8118  004E32  C090  F02B         	movff	pad@buf+1,strlen@s+1
  8119  004E36  EC00  F031         	call	_strlen	;wreg free
  8120  004E3A  0100               	movlb	0	; () banked
  8121  004E3C  5196               	movf	pad@w& (0+255),w,b
  8122  004E3E  242A               	addwf	?_strlen^0,w,c
  8123  004E40  6F8D               	movwf	?_pad& (0+255),b
  8124  004E42  5197               	movf	(pad@w+1)& (0+255),w,b
  8125  004E44  202B               	addwfc	(?_strlen+1)^0,w,c
  8126  004E46  6F8E               	movwf	(?_pad+1)& (0+255),b
  8127  004E48                     
  8128                           ; BSR set to: 0
  8129  004E48  0012               	return		;funcret
  8130  004E4A                     __end_of_pad:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function _strlen *****************
  8134 ;; Defined at:
  8135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  s               2   41[COMRAM] PTR const unsigned char 
  8138 ;;		 -> dbuf(80), 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  8141 ;;		 -> dbuf(80), 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  2   41[COMRAM] unsigned int 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;Total ram usage:        4 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:   10
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_pad
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text25
  8166  006200                     __ptext25:
  8167                           	callstack 0
  8168  006200                     _strlen:
  8169                           	callstack 13
  8170  006200  C02A  F080         	movff	strlen@s,strlen@a
  8171  006204  C02B  F081         	movff	strlen@s+1,strlen@a+1
  8172  006208  EF08  F031         	goto	l11367
  8173  00620C                     l11365:
  8174  00620C  4A2A               	infsnz	strlen@s^0,f,c
  8175  00620E  2A2B               	incf	(strlen@s+1)^0,f,c
  8176  006210                     l11367:
  8177  006210  C02A  FFD9         	movff	strlen@s,fsr2l
  8178  006214  C02B  FFDA         	movff	strlen@s+1,fsr2h
  8179  006218  50DF               	movf	indf2,w,c
  8180  00621A  A4D8               	btfss	status,2,c
  8181  00621C  EF12  F031         	goto	u12941
  8182  006220  EF14  F031         	goto	u12940
  8183  006224                     u12941:
  8184  006224  EF06  F031         	goto	l11365
  8185  006228                     u12940:
  8186  006228  0100               	movlb	0	; () banked
  8187  00622A  5180               	movf	strlen@a& (0+255),w,b
  8188  00622C  5C2A               	subwf	strlen@s^0,w,c
  8189  00622E  6E2A               	movwf	?_strlen^0,c
  8190  006230  5181               	movf	(strlen@a+1)& (0+255),w,b
  8191  006232  582B               	subwfb	(strlen@s+1)^0,w,c
  8192  006234  6E2B               	movwf	(?_strlen+1)^0,c
  8193  006236                     
  8194                           ; BSR set to: 0
  8195  006236  0012               	return		;funcret
  8196  006238                     __end_of_strlen:
  8197                           	callstack 0
  8198                           
  8199 ;; *************** function _fputs *****************
  8200 ;; Defined at:
  8201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  8204 ;;		 -> dbuf(80), 
  8205 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  8206 ;;		 -> sprintf@f(6), 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  i               2   42[COMRAM] int 
  8209 ;;  c               1   41[COMRAM] unsigned char 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  2    9[BANK0 ] int 
  8212 ;; Registers used:
  8213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8223 ;;Total ram usage:        7 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:   12
  8226 ;; This function calls:
  8227 ;;		_fputc
  8228 ;; This function is called by:
  8229 ;;		_pad
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text26
  8234  006008                     __ptext26:
  8235                           	callstack 0
  8236  006008                     _fputs:
  8237                           	callstack 11
  8238  006008  0E00               	movlw	0
  8239  00600A  6E2C               	movwf	(fputs@i+1)^0,c
  8240  00600C  0E00               	movlw	0
  8241  00600E  6E2B               	movwf	fputs@i^0,c
  8242  006010  EF15  F030         	goto	l11361
  8243  006014                     l11357:
  8244                           
  8245                           ; BSR set to: 0
  8246  006014  C02A  F080         	movff	fputs@c,fputc@c
  8247  006018  6B81               	clrf	(fputc@c+1)& (0+255),b
  8248  00601A  C08B  F082         	movff	fputs@fp,fputc@fp
  8249  00601E  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  8250  006022  EC5B  F026         	call	_fputc	;wreg free
  8251  006026  4A2B               	infsnz	fputs@i^0,f,c
  8252  006028  2A2C               	incf	(fputs@i+1)^0,f,c
  8253  00602A                     l11361:
  8254  00602A  502B               	movf	fputs@i^0,w,c
  8255  00602C  0100               	movlb	0	; () banked
  8256  00602E  2589               	addwf	fputs@s& (0+255),w,b
  8257  006030  6ED9               	movwf	fsr2l,c
  8258  006032  502C               	movf	(fputs@i+1)^0,w,c
  8259  006034  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  8260  006036  6EDA               	movwf	fsr2h,c
  8261  006038  50DF               	movf	indf2,w,c
  8262  00603A  6E2A               	movwf	fputs@c^0,c
  8263  00603C  502A               	movf	fputs@c^0,w,c
  8264  00603E  A4D8               	btfss	status,2,c
  8265  006040  EF24  F030         	goto	u12931
  8266  006044  EF26  F030         	goto	u12930
  8267  006048                     u12931:
  8268  006048  EF0A  F030         	goto	l11357
  8269  00604C                     u12930:
  8270  00604C                     
  8271                           ; BSR set to: 0
  8272  00604C  0012               	return		;funcret
  8273  00604E                     __end_of_fputs:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function _fputc *****************
  8277 ;; Defined at:
  8278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  c               2    0[BANK0 ] int 
  8281 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  8282 ;;		 -> sprintf@f(6), 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  2    0[BANK0 ] int 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;Total ram usage:        9 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:   11
  8301 ;; This function calls:
  8302 ;;		_putch
  8303 ;; This function is called by:
  8304 ;;		_pad
  8305 ;;		_vfpfcnvrt
  8306 ;;		_fputs
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text27
  8311  004CB6                     __ptext27:
  8312                           	callstack 0
  8313  004CB6                     _fputc:
  8314                           	callstack 14
  8315  004CB6  0100               	movlb	0	; () banked
  8316  004CB8  5182               	movf	fputc@fp& (0+255),w,b
  8317  004CBA  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  8318  004CBC  B4D8               	btfsc	status,2,c
  8319  004CBE  EF63  F026         	goto	u12501
  8320  004CC2  EF65  F026         	goto	u12500
  8321  004CC6                     u12501:
  8322  004CC6  EF6E  F026         	goto	l11143
  8323  004CCA                     u12500:
  8324  004CCA                     
  8325                           ; BSR set to: 0
  8326  004CCA  5182               	movf	fputc@fp& (0+255),w,b
  8327  004CCC  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  8328  004CCE  A4D8               	btfss	status,2,c
  8329  004CD0  EF6C  F026         	goto	u12511
  8330  004CD4  EF6E  F026         	goto	u12510
  8331  004CD8                     u12511:
  8332  004CD8  EF73  F026         	goto	l11145
  8333  004CDC                     u12510:
  8334  004CDC                     l11143:
  8335                           
  8336                           ; BSR set to: 0
  8337  004CDC  5180               	movf	fputc@c& (0+255),w,b
  8338  004CDE  ECBD  F031         	call	_putch
  8339  004CE2  EFC0  F026         	goto	l2686
  8340  004CE6                     l11145:
  8341                           
  8342                           ; BSR set to: 0
  8343  004CE6  EE20 F004          	lfsr	2,4
  8344  004CEA  5182               	movf	fputc@fp& (0+255),w,b
  8345  004CEC  26D9               	addwf	fsr2l,f,c
  8346  004CEE  5183               	movf	(fputc@fp+1)& (0+255),w,b
  8347  004CF0  22DA               	addwfc	fsr2h,f,c
  8348  004CF2  50DE               	movf	postinc2,w,c
  8349  004CF4  10DE               	iorwf	postinc2,w,c
  8350  004CF6  B4D8               	btfsc	status,2,c
  8351  004CF8  EF80  F026         	goto	u12521
  8352  004CFC  EF82  F026         	goto	u12520
  8353  004D00                     u12521:
  8354  004D00  EF9D  F026         	goto	l11149
  8355  004D04                     u12520:
  8356  004D04                     
  8357                           ; BSR set to: 0
  8358  004D04  EE20 F004          	lfsr	2,4
  8359  004D08  5182               	movf	fputc@fp& (0+255),w,b
  8360  004D0A  26D9               	addwf	fsr2l,f,c
  8361  004D0C  5183               	movf	(fputc@fp+1)& (0+255),w,b
  8362  004D0E  22DA               	addwfc	fsr2h,f,c
  8363  004D10  EE10 F002          	lfsr	1,2
  8364  004D14  5182               	movf	fputc@fp& (0+255),w,b
  8365  004D16  26E1               	addwf	fsr1l,f,c
  8366  004D18  5183               	movf	(fputc@fp+1)& (0+255),w,b
  8367  004D1A  22E2               	addwfc	fsr1h,f,c
  8368  004D1C  50DE               	movf	postinc2,w,c
  8369  004D1E  5CE6               	subwf	postinc1,w,c
  8370  004D20  50E6               	movf	postinc1,w,c
  8371  004D22  0A80               	xorlw	128
  8372  004D24  6F88               	movwf	(??_fputc+4)& (0+255),b
  8373  004D26  50DE               	movf	postinc2,w,c
  8374  004D28  0A80               	xorlw	128
  8375  004D2A  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  8376  004D2C  B0D8               	btfsc	status,0,c
  8377  004D2E  EF9B  F026         	goto	u12531
  8378  004D32  EF9D  F026         	goto	u12530
  8379  004D36                     u12531:
  8380  004D36  EFC0  F026         	goto	l2686
  8381  004D3A                     u12530:
  8382  004D3A                     l11149:
  8383                           
  8384                           ; BSR set to: 0
  8385  004D3A  EE20 F002          	lfsr	2,2
  8386  004D3E  5182               	movf	fputc@fp& (0+255),w,b
  8387  004D40  26D9               	addwf	fsr2l,f,c
  8388  004D42  5183               	movf	(fputc@fp+1)& (0+255),w,b
  8389  004D44  22DA               	addwfc	fsr2h,f,c
  8390  004D46  CFDE F084          	movff	postinc2,??_fputc
  8391  004D4A  CFDD F085          	movff	postdec2,??_fputc+1
  8392  004D4E  C082  FFD9         	movff	fputc@fp,fsr2l
  8393  004D52  C083  FFDA         	movff	fputc@fp+1,fsr2h
  8394  004D56  CFDE F086          	movff	postinc2,??_fputc+2
  8395  004D5A  CFDD F087          	movff	postdec2,??_fputc+3
  8396  004D5E  5184               	movf	??_fputc& (0+255),w,b
  8397  004D60  2586               	addwf	(??_fputc+2)& (0+255),w,b
  8398  004D62  6ED9               	movwf	fsr2l,c
  8399  004D64  5185               	movf	(??_fputc+1)& (0+255),w,b
  8400  004D66  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  8401  004D68  6EDA               	movwf	fsr2h,c
  8402  004D6A  C080  FFDF         	movff	fputc@c,indf2
  8403  004D6E  EE20 F002          	lfsr	2,2
  8404  004D72  5182               	movf	fputc@fp& (0+255),w,b
  8405  004D74  26D9               	addwf	fsr2l,f,c
  8406  004D76  5183               	movf	(fputc@fp+1)& (0+255),w,b
  8407  004D78  22DA               	addwfc	fsr2h,f,c
  8408  004D7A  2ADE               	incf	postinc2,f,c
  8409  004D7C  0E00               	movlw	0
  8410  004D7E  22DD               	addwfc	postdec2,f,c
  8411  004D80                     l2686:
  8412  004D80  0012               	return		;funcret
  8413  004D82                     __end_of_fputc:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _putch *****************
  8417 ;; Defined at:
  8418 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  c               1    wreg     unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  c               1    0[COMRAM] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;Total ram usage:        0 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:   10
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_fputc
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text28
  8447  00637A                     __ptext28:
  8448                           	callstack 0
  8449  00637A                     _putch:
  8450                           	callstack 14
  8451  00637A  0012               	return		;funcret
  8452  00637C                     __end_of_putch:
  8453                           	callstack 0
  8454                           
  8455 ;; *************** function _abs *****************
  8456 ;; Defined at:
  8457 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  a               2   16[BANK0 ] int 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  2   16[BANK0 ] int 
  8464 ;; Registers used:
  8465 ;;		wreg, status,2, status,0
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;Total ram usage:        4 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:   10
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_dtoa
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text29
  8486  006094                     __ptext29:
  8487                           	callstack 0
  8488  006094                     _abs:
  8489                           	callstack 14
  8490  006094  0100               	movlb	0	; () banked
  8491  006096  BF91               	btfsc	(abs@a+1)& (0+255),7,b
  8492  006098  EF58  F030         	goto	u13840
  8493  00609C  5191               	movf	(abs@a+1)& (0+255),w,b
  8494  00609E  E106               	bnz	u13841
  8495  0060A0  0590               	decf	abs@a& (0+255),w,b
  8496  0060A2  B0D8               	btfsc	status,0,c
  8497  0060A4  EF56  F030         	goto	u13841
  8498  0060A8  EF58  F030         	goto	u13840
  8499  0060AC                     u13841:
  8500  0060AC  EF66  F030         	goto	l2652
  8501  0060B0                     u13840:
  8502  0060B0                     
  8503                           ; BSR set to: 0
  8504  0060B0  C090  F092         	movff	abs@a,??_abs
  8505  0060B4  C091  F093         	movff	abs@a+1,??_abs+1
  8506  0060B8  1F92               	comf	??_abs& (0+255),f,b
  8507  0060BA  1F93               	comf	(??_abs+1)& (0+255),f,b
  8508  0060BC  4B92               	infsnz	??_abs& (0+255),f,b
  8509  0060BE  2B93               	incf	(??_abs+1)& (0+255),f,b
  8510  0060C0  C092  F090         	movff	??_abs,?_abs
  8511  0060C4  C093  F091         	movff	??_abs+1,?_abs+1
  8512  0060C8  EF6A  F030         	goto	l2655
  8513  0060CC                     l2652:
  8514                           
  8515                           ; BSR set to: 0
  8516  0060CC  C090  F090         	movff	abs@a,?_abs
  8517  0060D0  C091  F091         	movff	abs@a+1,?_abs+1
  8518  0060D4                     l2655:
  8519                           
  8520                           ; BSR set to: 0
  8521  0060D4  0012               	return		;funcret
  8522  0060D6                     __end_of_abs:
  8523                           	callstack 0
  8524                           
  8525 ;; *************** function ___aomod *****************
  8526 ;; Defined at:
  8527 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  dividend        8    0[BANK0 ] long long 
  8530 ;;  divisor         8    8[BANK0 ] long long 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;  sign            1   42[COMRAM] unsigned char 
  8533 ;;  counter         1   41[COMRAM] unsigned char 
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  8    0[BANK0 ] long long 
  8536 ;; Registers used:
  8537 ;;		wreg, status,2, status,0
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8543 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;Total ram usage:       18 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:   10
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_dtoa
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text30
  8558  003F08                     __ptext30:
  8559                           	callstack 0
  8560  003F08                     ___aomod:
  8561                           	callstack 14
  8562  003F08  0E00               	movlw	0
  8563  003F0A  6E2B               	movwf	___aomod@sign^0,c
  8564  003F0C  0100               	movlb	0	; () banked
  8565  003F0E  BF87               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  8566  003F10  EF8E  F01F         	goto	u13040
  8567  003F14  EF8C  F01F         	goto	u13041
  8568  003F18                     u13041:
  8569  003F18  EFA0  F01F         	goto	l11429
  8570  003F1C                     u13040:
  8571  003F1C                     
  8572                           ; BSR set to: 0
  8573  003F1C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  8574  003F1E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  8575  003F20  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  8576  003F22  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  8577  003F24  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  8578  003F26  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  8579  003F28  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  8580  003F2A  6D80               	negf	___aomod@dividend& (0+255),b
  8581  003F2C  0E00               	movlw	0
  8582  003F2E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  8583  003F30  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  8584  003F32  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  8585  003F34  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  8586  003F36  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  8587  003F38  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  8588  003F3A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  8589  003F3C                     
  8590                           ; BSR set to: 0
  8591  003F3C  0E01               	movlw	1
  8592  003F3E  6E2B               	movwf	___aomod@sign^0,c
  8593  003F40                     l11429:
  8594                           
  8595                           ; BSR set to: 0
  8596  003F40  BF8F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  8597  003F42  EFA7  F01F         	goto	u13050
  8598  003F46  EFA5  F01F         	goto	u13051
  8599  003F4A                     u13051:
  8600  003F4A  EFB7  F01F         	goto	l11433
  8601  003F4E                     u13050:
  8602  003F4E                     
  8603                           ; BSR set to: 0
  8604  003F4E  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  8605  003F50  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  8606  003F52  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  8607  003F54  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  8608  003F56  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  8609  003F58  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  8610  003F5A  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  8611  003F5C  6D88               	negf	___aomod@divisor& (0+255),b
  8612  003F5E  0E00               	movlw	0
  8613  003F60  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  8614  003F62  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  8615  003F64  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  8616  003F66  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  8617  003F68  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  8618  003F6A  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  8619  003F6C  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  8620  003F6E                     l11433:
  8621                           
  8622                           ; BSR set to: 0
  8623  003F6E  5188               	movf	___aomod@divisor& (0+255),w,b
  8624  003F70  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  8625  003F72  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  8626  003F74  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  8627  003F76  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  8628  003F78  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  8629  003F7A  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  8630  003F7C  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  8631  003F7E  B4D8               	btfsc	status,2,c
  8632  003F80  EFC4  F01F         	goto	u13061
  8633  003F84  EFC6  F01F         	goto	u13060
  8634  003F88                     u13061:
  8635  003F88  EF0E  F020         	goto	l11449
  8636  003F8C                     u13060:
  8637  003F8C                     
  8638                           ; BSR set to: 0
  8639  003F8C  0E01               	movlw	1
  8640  003F8E  6E2A               	movwf	___aomod@counter^0,c
  8641  003F90  EFD4  F01F         	goto	l11439
  8642  003F94                     l11437:
  8643                           
  8644                           ; BSR set to: 0
  8645  003F94  90D8               	bcf	status,0,c
  8646  003F96  3788               	rlcf	___aomod@divisor& (0+255),f,b
  8647  003F98  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  8648  003F9A  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  8649  003F9C  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  8650  003F9E  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  8651  003FA0  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  8652  003FA2  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  8653  003FA4  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  8654  003FA6  2A2A               	incf	___aomod@counter^0,f,c
  8655  003FA8                     l11439:
  8656                           
  8657                           ; BSR set to: 0
  8658  003FA8  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  8659  003FAA  EFD9  F01F         	goto	u13071
  8660  003FAE  EFDB  F01F         	goto	u13070
  8661  003FB2                     u13071:
  8662  003FB2  EFCA  F01F         	goto	l11437
  8663  003FB6                     u13070:
  8664  003FB6                     l11441:
  8665                           
  8666                           ; BSR set to: 0
  8667  003FB6  5188               	movf	___aomod@divisor& (0+255),w,b
  8668  003FB8  5D80               	subwf	___aomod@dividend& (0+255),w,b
  8669  003FBA  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  8670  003FBC  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  8671  003FBE  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  8672  003FC0  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  8673  003FC2  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  8674  003FC4  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  8675  003FC6  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  8676  003FC8  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  8677  003FCA  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  8678  003FCC  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  8679  003FCE  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  8680  003FD0  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  8681  003FD2  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  8682  003FD4  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  8683  003FD6  A0D8               	btfss	status,0,c
  8684  003FD8  EFF0  F01F         	goto	u13081
  8685  003FDC  EFF2  F01F         	goto	u13080
  8686  003FE0                     u13081:
  8687  003FE0  EF02  F020         	goto	l11445
  8688  003FE4                     u13080:
  8689  003FE4                     
  8690                           ; BSR set to: 0
  8691  003FE4  5188               	movf	___aomod@divisor& (0+255),w,b
  8692  003FE6  5F80               	subwf	___aomod@dividend& (0+255),f,b
  8693  003FE8  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  8694  003FEA  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  8695  003FEC  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  8696  003FEE  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  8697  003FF0  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  8698  003FF2  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  8699  003FF4  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  8700  003FF6  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  8701  003FF8  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  8702  003FFA  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  8703  003FFC  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  8704  003FFE  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  8705  004000  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  8706  004002  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  8707  004004                     l11445:
  8708                           
  8709                           ; BSR set to: 0
  8710  004004  90D8               	bcf	status,0,c
  8711  004006  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  8712  004008  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  8713  00400A  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  8714  00400C  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  8715  00400E  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  8716  004010  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  8717  004012  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  8718  004014  3388               	rrcf	___aomod@divisor& (0+255),f,b
  8719  004016                     
  8720                           ; BSR set to: 0
  8721  004016  2E2A               	decfsz	___aomod@counter^0,f,c
  8722  004018  EFDB  F01F         	goto	l11441
  8723  00401C                     l11449:
  8724                           
  8725                           ; BSR set to: 0
  8726  00401C  502B               	movf	___aomod@sign^0,w,c
  8727  00401E  B4D8               	btfsc	status,2,c
  8728  004020  EF14  F020         	goto	u13091
  8729  004024  EF16  F020         	goto	u13090
  8730  004028                     u13091:
  8731  004028  EF26  F020         	goto	l11453
  8732  00402C                     u13090:
  8733  00402C                     
  8734                           ; BSR set to: 0
  8735  00402C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  8736  00402E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  8737  004030  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  8738  004032  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  8739  004034  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  8740  004036  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  8741  004038  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  8742  00403A  6D80               	negf	___aomod@dividend& (0+255),b
  8743  00403C  0E00               	movlw	0
  8744  00403E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  8745  004040  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  8746  004042  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  8747  004044  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  8748  004046  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  8749  004048  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  8750  00404A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  8751  00404C                     l11453:
  8752                           
  8753                           ; BSR set to: 0
  8754  00404C  C080  F080         	movff	___aomod@dividend,?___aomod
  8755  004050  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  8756  004054  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  8757  004058  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  8758  00405C  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  8759  004060  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  8760  004064  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  8761  004068  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  8762  00406C                     
  8763                           ; BSR set to: 0
  8764  00406C  0012               	return		;funcret
  8765  00406E                     __end_of___aomod:
  8766                           	callstack 0
  8767                           
  8768 ;; *************** function ___aodiv *****************
  8769 ;; Defined at:
  8770 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  dividend        8    0[BANK0 ] long long 
  8773 ;;  divisor         8    8[BANK0 ] long long 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  quotient        8   18[BANK0 ] long long 
  8776 ;;  sign            1   17[BANK0 ] unsigned char 
  8777 ;;  counter         1   16[BANK0 ] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  8    0[BANK0 ] long long 
  8780 ;; Registers used:
  8781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8787 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;Total ram usage:       26 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:   10
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_dtoa
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text31
  8802  003A80                     __ptext31:
  8803                           	callstack 0
  8804  003A80                     ___aodiv:
  8805                           	callstack 14
  8806  003A80  0E00               	movlw	0
  8807  003A82  0100               	movlb	0	; () banked
  8808  003A84  6F91               	movwf	___aodiv@sign& (0+255),b
  8809  003A86                     
  8810                           ; BSR set to: 0
  8811  003A86  BF8F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  8812  003A88  EF4A  F01D         	goto	u12970
  8813  003A8C  EF48  F01D         	goto	u12971
  8814  003A90                     u12971:
  8815  003A90  EF5C  F01D         	goto	l11385
  8816  003A94                     u12970:
  8817  003A94                     
  8818                           ; BSR set to: 0
  8819  003A94  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  8820  003A96  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  8821  003A98  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  8822  003A9A  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  8823  003A9C  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  8824  003A9E  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  8825  003AA0  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  8826  003AA2  6D88               	negf	___aodiv@divisor& (0+255),b
  8827  003AA4  0E00               	movlw	0
  8828  003AA6  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  8829  003AA8  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  8830  003AAA  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  8831  003AAC  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  8832  003AAE  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  8833  003AB0  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  8834  003AB2  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  8835  003AB4                     
  8836                           ; BSR set to: 0
  8837  003AB4  0E01               	movlw	1
  8838  003AB6  6F91               	movwf	___aodiv@sign& (0+255),b
  8839  003AB8                     l11385:
  8840                           
  8841                           ; BSR set to: 0
  8842  003AB8  BF87               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  8843  003ABA  EF63  F01D         	goto	u12980
  8844  003ABE  EF61  F01D         	goto	u12981
  8845  003AC2                     u12981:
  8846  003AC2  EF75  F01D         	goto	l11391
  8847  003AC6                     u12980:
  8848  003AC6                     
  8849                           ; BSR set to: 0
  8850  003AC6  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  8851  003AC8  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  8852  003ACA  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  8853  003ACC  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  8854  003ACE  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  8855  003AD0  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  8856  003AD2  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  8857  003AD4  6D80               	negf	___aodiv@dividend& (0+255),b
  8858  003AD6  0E00               	movlw	0
  8859  003AD8  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  8860  003ADA  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  8861  003ADC  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  8862  003ADE  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  8863  003AE0  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  8864  003AE2  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  8865  003AE4  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  8866  003AE6                     
  8867                           ; BSR set to: 0
  8868  003AE6  0E01               	movlw	1
  8869  003AE8  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  8870  003AEA                     l11391:
  8871                           
  8872                           ; BSR set to: 0
  8873  003AEA  EE20  F092         	lfsr	2,___aodiv@quotient
  8874  003AEE  0E07               	movlw	7
  8875  003AF0                     u12991:
  8876  003AF0  6ADE               	clrf	postinc2,c
  8877  003AF2  06E8               	decf	wreg,f,c
  8878  003AF4  E2FD               	bc	u12991
  8879  003AF6                     
  8880                           ; BSR set to: 0
  8881  003AF6  5188               	movf	___aodiv@divisor& (0+255),w,b
  8882  003AF8  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  8883  003AFA  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  8884  003AFC  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  8885  003AFE  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  8886  003B00  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  8887  003B02  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  8888  003B04  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  8889  003B06  B4D8               	btfsc	status,2,c
  8890  003B08  EF88  F01D         	goto	u13001
  8891  003B0C  EF8A  F01D         	goto	u13000
  8892  003B10                     u13001:
  8893  003B10  EFDC  F01D         	goto	l11413
  8894  003B14                     u13000:
  8895  003B14                     
  8896                           ; BSR set to: 0
  8897  003B14  0E01               	movlw	1
  8898  003B16  6F90               	movwf	___aodiv@counter& (0+255),b
  8899  003B18  EF98  F01D         	goto	l11399
  8900  003B1C                     l11397:
  8901                           
  8902                           ; BSR set to: 0
  8903  003B1C  90D8               	bcf	status,0,c
  8904  003B1E  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  8905  003B20  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  8906  003B22  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  8907  003B24  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  8908  003B26  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  8909  003B28  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  8910  003B2A  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  8911  003B2C  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  8912  003B2E  2B90               	incf	___aodiv@counter& (0+255),f,b
  8913  003B30                     l11399:
  8914                           
  8915                           ; BSR set to: 0
  8916  003B30  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  8917  003B32  EF9D  F01D         	goto	u13011
  8918  003B36  EF9F  F01D         	goto	u13010
  8919  003B3A                     u13011:
  8920  003B3A  EF8E  F01D         	goto	l11397
  8921  003B3E                     u13010:
  8922  003B3E                     l11401:
  8923                           
  8924                           ; BSR set to: 0
  8925  003B3E  90D8               	bcf	status,0,c
  8926  003B40  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  8927  003B42  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  8928  003B44  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  8929  003B46  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  8930  003B48  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  8931  003B4A  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  8932  003B4C  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  8933  003B4E  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  8934  003B50                     
  8935                           ; BSR set to: 0
  8936  003B50  5188               	movf	___aodiv@divisor& (0+255),w,b
  8937  003B52  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  8938  003B54  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8939  003B56  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  8940  003B58  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8941  003B5A  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  8942  003B5C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8943  003B5E  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  8944  003B60  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8945  003B62  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  8946  003B64  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8947  003B66  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  8948  003B68  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8949  003B6A  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  8950  003B6C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8951  003B6E  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  8952  003B70  A0D8               	btfss	status,0,c
  8953  003B72  EFBD  F01D         	goto	u13021
  8954  003B76  EFBF  F01D         	goto	u13020
  8955  003B7A                     u13021:
  8956  003B7A  EFD0  F01D         	goto	l11409
  8957  003B7E                     u13020:
  8958  003B7E                     
  8959                           ; BSR set to: 0
  8960  003B7E  5188               	movf	___aodiv@divisor& (0+255),w,b
  8961  003B80  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  8962  003B82  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8963  003B84  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  8964  003B86  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8965  003B88  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  8966  003B8A  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8967  003B8C  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  8968  003B8E  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8969  003B90  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  8970  003B92  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8971  003B94  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  8972  003B96  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8973  003B98  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  8974  003B9A  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8975  003B9C  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  8976  003B9E                     
  8977                           ; BSR set to: 0
  8978  003B9E  8192               	bsf	___aodiv@quotient& (0+255),0,b
  8979  003BA0                     l11409:
  8980                           
  8981                           ; BSR set to: 0
  8982  003BA0  90D8               	bcf	status,0,c
  8983  003BA2  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  8984  003BA4  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  8985  003BA6  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  8986  003BA8  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  8987  003BAA  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  8988  003BAC  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  8989  003BAE  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  8990  003BB0  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  8991  003BB2                     
  8992                           ; BSR set to: 0
  8993  003BB2  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  8994  003BB4  EF9F  F01D         	goto	l11401
  8995  003BB8                     l11413:
  8996                           
  8997                           ; BSR set to: 0
  8998  003BB8  5191               	movf	___aodiv@sign& (0+255),w,b
  8999  003BBA  B4D8               	btfsc	status,2,c
  9000  003BBC  EFE2  F01D         	goto	u13031
  9001  003BC0  EFE4  F01D         	goto	u13030
  9002  003BC4                     u13031:
  9003  003BC4  EFF4  F01D         	goto	l11417
  9004  003BC8                     u13030:
  9005  003BC8                     
  9006                           ; BSR set to: 0
  9007  003BC8  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  9008  003BCA  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  9009  003BCC  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  9010  003BCE  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  9011  003BD0  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  9012  003BD2  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  9013  003BD4  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  9014  003BD6  6D92               	negf	___aodiv@quotient& (0+255),b
  9015  003BD8  0E00               	movlw	0
  9016  003BDA  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  9017  003BDC  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  9018  003BDE  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  9019  003BE0  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  9020  003BE2  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  9021  003BE4  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  9022  003BE6  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  9023  003BE8                     l11417:
  9024                           
  9025                           ; BSR set to: 0
  9026  003BE8  C092  F080         	movff	___aodiv@quotient,?___aodiv
  9027  003BEC  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  9028  003BF0  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  9029  003BF4  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  9030  003BF8  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  9031  003BFC  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  9032  003C00  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  9033  003C04  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  9034  003C08                     
  9035                           ; BSR set to: 0
  9036  003C08  0012               	return		;funcret
  9037  003C0A                     __end_of___aodiv:
  9038                           	callstack 0
  9039                           
  9040 ;; *************** function _memset *****************
  9041 ;; Defined at:
  9042 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\memset.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  dest            2    0[BANK0 ] PTR void 
  9045 ;;		 -> battery_string(9), 
  9046 ;;  c               2    2[BANK0 ] int 
  9047 ;;  n               2    4[BANK0 ] unsigned int 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  s               2    8[BANK0 ] PTR unsigned char 
  9050 ;;		 -> battery_string(9), 
  9051 ;;  k               2    6[BANK0 ] unsigned int 
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  2    0[BANK0 ] PTR void 
  9054 ;; Registers used:
  9055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9061 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;Total ram usage:       12 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:   10
  9068 ;; This function calls:
  9069 ;;		Nothing
  9070 ;; This function is called by:
  9071 ;;		_convert_float32_to_string
  9072 ;;		_convert_uint8_to_string
  9073 ;;		_convert_uint16_to_string
  9074 ;;		_convert_uint32_to_string
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text32
  9079  003D90                     __ptext32:
  9080                           	callstack 0
  9081  003D90                     _memset:
  9082                           	callstack 18
  9083  003D90  C080  F088         	movff	memset@dest,memset@s
  9084  003D94  C081  F089         	movff	memset@dest+1,memset@s+1
  9085  003D98  0100               	movlb	0	; () banked
  9086  003D9A  5184               	movf	memset@n& (0+255),w,b
  9087  003D9C  1185               	iorwf	(memset@n+1)& (0+255),w,b
  9088  003D9E  A4D8               	btfss	status,2,c
  9089  003DA0  EFD4  F01E         	goto	u15221
  9090  003DA4  EFD6  F01E         	goto	u15220
  9091  003DA8                     u15221:
  9092  003DA8  EFD8  F01E         	goto	l12713
  9093  003DAC                     u15220:
  9094  003DAC  EF83  F01F         	goto	l2437
  9095  003DB0                     l12713:
  9096                           
  9097                           ; BSR set to: 0
  9098  003DB0  C088  FFD9         	movff	memset@s,fsr2l
  9099  003DB4  C089  FFDA         	movff	memset@s+1,fsr2h
  9100  003DB8  C082  FFDF         	movff	memset@c,indf2
  9101  003DBC                     
  9102                           ; BSR set to: 0
  9103  003DBC  5184               	movf	memset@n& (0+255),w,b
  9104  003DBE  2588               	addwf	memset@s& (0+255),w,b
  9105  003DC0  6E2A               	movwf	??_memset^0,c
  9106  003DC2  5185               	movf	(memset@n+1)& (0+255),w,b
  9107  003DC4  2189               	addwfc	(memset@s+1)& (0+255),w,b
  9108  003DC6  6E2B               	movwf	(??_memset+1)^0,c
  9109  003DC8  0EFF               	movlw	255
  9110  003DCA  242A               	addwf	??_memset^0,w,c
  9111  003DCC  6ED9               	movwf	fsr2l,c
  9112  003DCE  0EFF               	movlw	255
  9113  003DD0  202B               	addwfc	(??_memset+1)^0,w,c
  9114  003DD2  6EDA               	movwf	fsr2h,c
  9115  003DD4  C082  FFDF         	movff	memset@c,indf2
  9116  003DD8  5185               	movf	(memset@n+1)& (0+255),w,b
  9117  003DDA  E107               	bnz	u15231
  9118  003DDC  0E03               	movlw	3
  9119  003DDE  5D84               	subwf	memset@n& (0+255),w,b
  9120  003DE0  B0D8               	btfsc	status,0,c
  9121  003DE2  EFF5  F01E         	goto	u15231
  9122  003DE6  EFF7  F01E         	goto	u15230
  9123  003DEA                     u15231:
  9124  003DEA  EFF9  F01E         	goto	l12719
  9125  003DEE                     u15230:
  9126  003DEE  EF83  F01F         	goto	l2437
  9127  003DF2                     l12719:
  9128                           
  9129                           ; BSR set to: 0
  9130  003DF2  EE20 F001          	lfsr	2,1
  9131  003DF6  5188               	movf	memset@s& (0+255),w,b
  9132  003DF8  26D9               	addwf	fsr2l,f,c
  9133  003DFA  5189               	movf	(memset@s+1)& (0+255),w,b
  9134  003DFC  22DA               	addwfc	fsr2h,f,c
  9135  003DFE  C082  FFDF         	movff	memset@c,indf2
  9136  003E02  EE20 F002          	lfsr	2,2
  9137  003E06  5188               	movf	memset@s& (0+255),w,b
  9138  003E08  26D9               	addwf	fsr2l,f,c
  9139  003E0A  5189               	movf	(memset@s+1)& (0+255),w,b
  9140  003E0C  22DA               	addwfc	fsr2h,f,c
  9141  003E0E  C082  FFDF         	movff	memset@c,indf2
  9142  003E12  5184               	movf	memset@n& (0+255),w,b
  9143  003E14  2588               	addwf	memset@s& (0+255),w,b
  9144  003E16  6E2A               	movwf	??_memset^0,c
  9145  003E18  5185               	movf	(memset@n+1)& (0+255),w,b
  9146  003E1A  2189               	addwfc	(memset@s+1)& (0+255),w,b
  9147  003E1C  6E2B               	movwf	(??_memset+1)^0,c
  9148  003E1E  0EFE               	movlw	254
  9149  003E20  242A               	addwf	??_memset^0,w,c
  9150  003E22  6ED9               	movwf	fsr2l,c
  9151  003E24  0EFF               	movlw	255
  9152  003E26  202B               	addwfc	(??_memset+1)^0,w,c
  9153  003E28  6EDA               	movwf	fsr2h,c
  9154  003E2A  C082  FFDF         	movff	memset@c,indf2
  9155  003E2E  5184               	movf	memset@n& (0+255),w,b
  9156  003E30  2588               	addwf	memset@s& (0+255),w,b
  9157  003E32  6E2A               	movwf	??_memset^0,c
  9158  003E34  5185               	movf	(memset@n+1)& (0+255),w,b
  9159  003E36  2189               	addwfc	(memset@s+1)& (0+255),w,b
  9160  003E38  6E2B               	movwf	(??_memset+1)^0,c
  9161  003E3A  0EFD               	movlw	253
  9162  003E3C  242A               	addwf	??_memset^0,w,c
  9163  003E3E  6ED9               	movwf	fsr2l,c
  9164  003E40  0EFF               	movlw	255
  9165  003E42  202B               	addwfc	(??_memset+1)^0,w,c
  9166  003E44  6EDA               	movwf	fsr2h,c
  9167  003E46  C082  FFDF         	movff	memset@c,indf2
  9168  003E4A                     
  9169                           ; BSR set to: 0
  9170  003E4A  5185               	movf	(memset@n+1)& (0+255),w,b
  9171  003E4C  E107               	bnz	u15241
  9172  003E4E  0E07               	movlw	7
  9173  003E50  5D84               	subwf	memset@n& (0+255),w,b
  9174  003E52  B0D8               	btfsc	status,0,c
  9175  003E54  EF2E  F01F         	goto	u15241
  9176  003E58  EF30  F01F         	goto	u15240
  9177  003E5C                     u15241:
  9178  003E5C  EF32  F01F         	goto	l12725
  9179  003E60                     u15240:
  9180  003E60  EF83  F01F         	goto	l2437
  9181  003E64                     l12725:
  9182                           
  9183                           ; BSR set to: 0
  9184  003E64  EE20 F003          	lfsr	2,3
  9185  003E68  5188               	movf	memset@s& (0+255),w,b
  9186  003E6A  26D9               	addwf	fsr2l,f,c
  9187  003E6C  5189               	movf	(memset@s+1)& (0+255),w,b
  9188  003E6E  22DA               	addwfc	fsr2h,f,c
  9189  003E70  C082  FFDF         	movff	memset@c,indf2
  9190  003E74  5184               	movf	memset@n& (0+255),w,b
  9191  003E76  2588               	addwf	memset@s& (0+255),w,b
  9192  003E78  6E2A               	movwf	??_memset^0,c
  9193  003E7A  5185               	movf	(memset@n+1)& (0+255),w,b
  9194  003E7C  2189               	addwfc	(memset@s+1)& (0+255),w,b
  9195  003E7E  6E2B               	movwf	(??_memset+1)^0,c
  9196  003E80  0EFC               	movlw	252
  9197  003E82  242A               	addwf	??_memset^0,w,c
  9198  003E84  6ED9               	movwf	fsr2l,c
  9199  003E86  0EFF               	movlw	255
  9200  003E88  202B               	addwfc	(??_memset+1)^0,w,c
  9201  003E8A  6EDA               	movwf	fsr2h,c
  9202  003E8C  C082  FFDF         	movff	memset@c,indf2
  9203  003E90                     
  9204                           ; BSR set to: 0
  9205  003E90  5185               	movf	(memset@n+1)& (0+255),w,b
  9206  003E92  E107               	bnz	u15251
  9207  003E94  0E09               	movlw	9
  9208  003E96  5D84               	subwf	memset@n& (0+255),w,b
  9209  003E98  B0D8               	btfsc	status,0,c
  9210  003E9A  EF51  F01F         	goto	u15251
  9211  003E9E  EF53  F01F         	goto	u15250
  9212  003EA2                     u15251:
  9213  003EA2  EF55  F01F         	goto	l12731
  9214  003EA6                     u15250:
  9215  003EA6  EF83  F01F         	goto	l2437
  9216  003EAA                     l12731:
  9217                           
  9218                           ; BSR set to: 0
  9219  003EAA  C088  F02A         	movff	memset@s,??_memset
  9220  003EAE  C089  F02B         	movff	memset@s+1,??_memset+1
  9221  003EB2  1E2A               	comf	??_memset^0,f,c
  9222  003EB4  1E2B               	comf	(??_memset+1)^0,f,c
  9223  003EB6  4A2A               	infsnz	??_memset^0,f,c
  9224  003EB8  2A2B               	incf	(??_memset+1)^0,f,c
  9225  003EBA  0E03               	movlw	3
  9226  003EBC  142A               	andwf	??_memset^0,w,c
  9227  003EBE  6F86               	movwf	memset@k& (0+255),b
  9228  003EC0  6B87               	clrf	(memset@k+1)& (0+255),b
  9229  003EC2  5186               	movf	memset@k& (0+255),w,b
  9230  003EC4  2788               	addwf	memset@s& (0+255),f,b
  9231  003EC6  5187               	movf	(memset@k+1)& (0+255),w,b
  9232  003EC8  2389               	addwfc	(memset@s+1)& (0+255),f,b
  9233  003ECA  5186               	movf	memset@k& (0+255),w,b
  9234  003ECC  5F84               	subwf	memset@n& (0+255),f,b
  9235  003ECE  5187               	movf	(memset@k+1)& (0+255),w,b
  9236  003ED0  5B85               	subwfb	(memset@n+1)& (0+255),f,b
  9237  003ED2  0EFC               	movlw	252
  9238  003ED4  1784               	andwf	memset@n& (0+255),f,b
  9239  003ED6  0EFF               	movlw	255
  9240  003ED8  1785               	andwf	(memset@n+1)& (0+255),f,b
  9241  003EDA  EF7A  F01F         	goto	l12739
  9242  003EDE                     l12733:
  9243                           
  9244                           ; BSR set to: 0
  9245  003EDE  C088  FFD9         	movff	memset@s,fsr2l
  9246  003EE2  C089  FFDA         	movff	memset@s+1,fsr2h
  9247  003EE6  C082  FFDF         	movff	memset@c,indf2
  9248  003EEA                     
  9249                           ; BSR set to: 0
  9250  003EEA  0784               	decf	memset@n& (0+255),f,b
  9251  003EEC  A0D8               	btfss	status,0,c
  9252  003EEE  0785               	decf	(memset@n+1)& (0+255),f,b
  9253  003EF0                     
  9254                           ; BSR set to: 0
  9255  003EF0  4B88               	infsnz	memset@s& (0+255),f,b
  9256  003EF2  2B89               	incf	(memset@s+1)& (0+255),f,b
  9257  003EF4                     l12739:
  9258                           
  9259                           ; BSR set to: 0
  9260  003EF4  5184               	movf	memset@n& (0+255),w,b
  9261  003EF6  1185               	iorwf	(memset@n+1)& (0+255),w,b
  9262  003EF8  A4D8               	btfss	status,2,c
  9263  003EFA  EF81  F01F         	goto	u15261
  9264  003EFE  EF83  F01F         	goto	u15260
  9265  003F02                     u15261:
  9266  003F02  EF6F  F01F         	goto	l12733
  9267  003F06                     u15260:
  9268  003F06                     l2437:
  9269                           
  9270                           ; BSR set to: 0
  9271  003F06  0012               	return		;funcret
  9272  003F08                     __end_of_memset:
  9273                           	callstack 0
  9274                           
  9275 ;; *************** function ___wmul *****************
  9276 ;; Defined at:
  9277 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9280 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  product         2   41[COMRAM] unsigned int 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  2    0[BANK0 ] unsigned int 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, prodl, prodh
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9296 ;;Total ram usage:        6 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:   10
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_battery_level
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text33
  9307  00628E                     __ptext33:
  9308                           	callstack 0
  9309  00628E                     ___wmul:
  9310                           	callstack 19
  9311  00628E  0100               	movlb	0	; () banked
  9312  006290  5180               	movf	___wmul@multiplier& (0+255),w,b
  9313  006292  0382               	mulwf	___wmul@multiplicand& (0+255),b
  9314  006294  CFF3 F02A          	movff	prodl,___wmul@product
  9315  006298  CFF4 F02B          	movff	prodh,___wmul@product+1
  9316  00629C  5180               	movf	___wmul@multiplier& (0+255),w,b
  9317  00629E  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9318  0062A0  50F3               	movf	243,w,c
  9319  0062A2  262B               	addwf	(___wmul@product+1)^0,f,c
  9320  0062A4  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9321  0062A6  0382               	mulwf	___wmul@multiplicand& (0+255),b
  9322  0062A8  50F3               	movf	243,w,c
  9323  0062AA  262B               	addwf	(___wmul@product+1)^0,f,c
  9324  0062AC                     
  9325                           ; BSR set to: 0
  9326  0062AC  C02A  F080         	movff	___wmul@product,?___wmul
  9327  0062B0  C02B  F081         	movff	___wmul@product+1,?___wmul+1
  9328  0062B4                     
  9329                           ; BSR set to: 0
  9330  0062B4  0012               	return		;funcret
  9331  0062B6                     __end_of___wmul:
  9332                           	callstack 0
  9333                           
  9334 ;; *************** function _ADC_Get_Conversion_Blocking *****************
  9335 ;; Defined at:
  9336 ;;		line 223 in file "MCAL/ADC/mcal_adc.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  _adc            2    9[BANK0 ] PTR const struct .
  9339 ;;		 -> battery_adc(5), 
  9340 ;;  _channel        1   11[BANK0 ] enum E3027
  9341 ;;  _result         2   12[BANK0 ] PTR unsigned short 
  9342 ;;		 -> battery_volt_adc_read(2), 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  ERRORSTATUS     1   15[BANK0 ] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      unsigned char 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9354 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;Total ram usage:        7 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:   12
  9361 ;; This function calls:
  9362 ;;		_ADC_Get_Conversion_Results
  9363 ;;		_ADC_Start_Conversion
  9364 ;;		_ADC_select_channel
  9365 ;; This function is called by:
  9366 ;;		_battery_level
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text34
  9371  0055B6                     __ptext34:
  9372                           	callstack 0
  9373  0055B6                     _ADC_Get_Conversion_Blocking:
  9374                           	callstack 17
  9375  0055B6                     
  9376                           ;MCAL/ADC/mcal_adc.c: 226:     if ((((void*)0)==_adc)||(((void*)0)==_result))
  9377  0055B6  0100               	movlb	0	; () banked
  9378  0055B8  5189               	movf	ADC_Get_Conversion_Blocking@_adc& (0+255),w,b
  9379  0055BA  118A               	iorwf	(ADC_Get_Conversion_Blocking@_adc+1)& (0+255),w,b
  9380  0055BC  B4D8               	btfsc	status,2,c
  9381  0055BE  EFE3  F02A         	goto	u15621
  9382  0055C2  EFE5  F02A         	goto	u15620
  9383  0055C6                     u15621:
  9384  0055C6  EFEE  F02A         	goto	l13063
  9385  0055CA                     u15620:
  9386  0055CA                     
  9387                           ; BSR set to: 0
  9388  0055CA  518C               	movf	ADC_Get_Conversion_Blocking@_result& (0+255),w,b
  9389  0055CC  118D               	iorwf	(ADC_Get_Conversion_Blocking@_result+1)& (0+255),w,b
  9390  0055CE  A4D8               	btfss	status,2,c
  9391  0055D0  EFEC  F02A         	goto	u15631
  9392  0055D4  EFEE  F02A         	goto	u15630
  9393  0055D8                     u15631:
  9394  0055D8  EFF0  F02A         	goto	l13065
  9395  0055DC                     u15630:
  9396  0055DC                     l13063:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;MCAL/ADC/mcal_adc.c: 229:     }
  9400  0055DC  EF1D  F02B         	goto	l366
  9401  0055E0                     l13065:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;MCAL/ADC/mcal_adc.c: 231:     {;MCAL/ADC/mcal_adc.c: 234:           ERRORSTATUS= ADC_se
      +                          lect_channel(_adc,_channel);
  9405  0055E0  C089  F082         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_select_channel@_adc
  9406  0055E4  C08A  F083         	movff	ADC_Get_Conversion_Blocking@_adc+1,ADC_select_channel@_adc+1
  9407  0055E8  C08B  F084         	movff	ADC_Get_Conversion_Blocking@_channel,ADC_select_channel@_channel
  9408  0055EC  EC6B  F030         	call	_ADC_select_channel	;wreg free
  9409  0055F0  0100               	movlb	0	; () banked
  9410  0055F2  6F8F               	movwf	ADC_Get_Conversion_Blocking@ERRORSTATUS& (0+255),b
  9411                           
  9412                           ;MCAL/ADC/mcal_adc.c: 236:           ERRORSTATUS= ADC_Start_Conversion(_adc);
  9413  0055F4  C089  F02A         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Start_Conversion@_adc
  9414  0055F8  C08A  F02B         	movff	ADC_Get_Conversion_Blocking@_adc+1,ADC_Start_Conversion@_adc+1
  9415  0055FC  EC6E  F031         	call	_ADC_Start_Conversion	;wreg free
  9416  005600  0100               	movlb	0	; () banked
  9417  005602  6F8F               	movwf	ADC_Get_Conversion_Blocking@ERRORSTATUS& (0+255),b
  9418                           
  9419                           ;MCAL/ADC/mcal_adc.c: 238:           while((ADCON0bits.GO_nDONE))
  9420  005604  EF0E  F02B         	goto	l13069
  9421  005608                     l13067:
  9422  005608  C089  F080         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Get_Conversion_Results@_adc
  9423  00560C  C08A  F081         	movff	ADC_Get_Conversion_Blocking@_adc+1,ADC_Get_Conversion_Results@_adc+1
  9424  005610  C08C  F082         	movff	ADC_Get_Conversion_Blocking@_result,ADC_Get_Conversion_Results@_result
  9425  005614  C08D  F083         	movff	ADC_Get_Conversion_Blocking@_result+1,ADC_Get_Conversion_Results@_result+1
  9426  005618  EC88  F027         	call	_ADC_Get_Conversion_Results	;wreg free
  9427  00561C                     l13069:
  9428                           
  9429                           ;MCAL/ADC/mcal_adc.c: 238:           while((ADCON0bits.GO_nDONE))
  9430  00561C  B2C2               	btfsc	194,1,c	;volatile
  9431  00561E  EF13  F02B         	goto	u15641
  9432  005622  EF15  F02B         	goto	u15640
  9433  005626                     u15641:
  9434  005626  EF04  F02B         	goto	l13067
  9435  00562A                     u15640:
  9436  00562A                     
  9437                           ;MCAL/ADC/mcal_adc.c: 241:           _delay((unsigned long)((20)*(24000000/4000.0)));
  9438  00562A  0E9C               	movlw	156
  9439  00562C  0100               	movlb	0	; () banked
  9440  00562E  6F8E               	movwf	??_ADC_Get_Conversion_Blocking& (0+255),b
  9441  005630  0ED7               	movlw	215
  9442  005632                     u16537:
  9443  005632  2EE8               	decfsz	wreg,f,c
  9444  005634  D7FE               	bra	u16537
  9445  005636  2F8E               	decfsz	??_ADC_Get_Conversion_Blocking& (0+255),f,b
  9446  005638  D7FC               	bra	u16537
  9447  00563A                     l366:
  9448  00563A  0012               	return		;funcret
  9449  00563C                     __end_of_ADC_Get_Conversion_Blocking:
  9450                           	callstack 0
  9451                           
  9452 ;; *************** function _ADC_select_channel *****************
  9453 ;; Defined at:
  9454 ;;		line 121 in file "MCAL/ADC/mcal_adc.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  _adc            2    2[BANK0 ] PTR const struct .
  9457 ;;		 -> battery_adc(5), 
  9458 ;;  _channel        1    4[BANK0 ] enum E3027
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;  ERRORSTATUS     1    5[BANK0 ] unsigned char 
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      unsigned char 
  9463 ;; Registers used:
  9464 ;;		wreg, status,2, status,0, cstack
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9470 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;Total ram usage:        5 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; Hardware stack levels required when called:   11
  9477 ;; This function calls:
  9478 ;;		_adc_channel_pin_config_as_input
  9479 ;; This function is called by:
  9480 ;;		_ADC_Get_Conversion_Blocking
  9481 ;;		_ADC_Get_Conversion_Interrupt
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text35
  9486  0060D6                     __ptext35:
  9487                           	callstack 0
  9488  0060D6                     _ADC_select_channel:
  9489                           	callstack 17
  9490  0060D6                     
  9491                           ;MCAL/ADC/mcal_adc.c: 121: Std_ReturnType ADC_select_channel(const adc_config_st* _adc,a
      +                          dc_channel_select_et _channel);MCAL/ADC/mcal_adc.c: 122: {;MCAL/ADC/mcal_adc.c: 123:    
      +                           Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
  9492  0060D6  0E01               	movlw	1
  9493  0060D8  0100               	movlb	0	; () banked
  9494  0060DA  6F85               	movwf	ADC_select_channel@ERRORSTATUS& (0+255),b
  9495  0060DC                     
  9496                           ; BSR set to: 0
  9497                           ;MCAL/ADC/mcal_adc.c: 124:     if (((void*)0)==_adc)
  9498  0060DC  5182               	movf	ADC_select_channel@_adc& (0+255),w,b
  9499  0060DE  1183               	iorwf	(ADC_select_channel@_adc+1)& (0+255),w,b
  9500  0060E0  A4D8               	btfss	status,2,c
  9501  0060E2  EF75  F030         	goto	u15331
  9502  0060E6  EF77  F030         	goto	u15330
  9503  0060EA                     u15331:
  9504  0060EA  EF7B  F030         	goto	l12783
  9505  0060EE                     u15330:
  9506  0060EE                     
  9507                           ; BSR set to: 0
  9508                           ;MCAL/ADC/mcal_adc.c: 125:     {;MCAL/ADC/mcal_adc.c: 126:         ERRORSTATUS=(Std_Retu
      +                          rnType) 0x00;
  9509  0060EE  0E00               	movlw	0
  9510  0060F0  6F85               	movwf	ADC_select_channel@ERRORSTATUS& (0+255),b
  9511                           
  9512                           ;MCAL/ADC/mcal_adc.c: 127:     }
  9513  0060F2  EF87  F030         	goto	l12787
  9514  0060F6                     l12783:
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;MCAL/ADC/mcal_adc.c: 129:     {;MCAL/ADC/mcal_adc.c: 131:        ADCON0bits.CHS=_channe
      +                          l;
  9518  0060F6  C084  F02C         	movff	ADC_select_channel@_channel,??_ADC_select_channel
  9519  0060FA  462C               	rlncf	??_ADC_select_channel^0,f,c
  9520  0060FC  462C               	rlncf	??_ADC_select_channel^0,f,c
  9521  0060FE  50C2               	movf	194,w,c	;volatile
  9522  006100  182C               	xorwf	??_ADC_select_channel^0,w,c
  9523  006102  0BC3               	andlw	-61
  9524  006104  182C               	xorwf	??_ADC_select_channel^0,w,c
  9525  006106  6EC2               	movwf	194,c	;volatile
  9526  006108                     
  9527                           ; BSR set to: 0
  9528                           ;MCAL/ADC/mcal_adc.c: 134:        adc_channel_pin_config_as_input(_channel);
  9529  006108  5184               	movf	ADC_select_channel@_channel& (0+255),w,b
  9530  00610A  ECED  F025         	call	_adc_channel_pin_config_as_input
  9531  00610E                     l12787:
  9532                           
  9533                           ;MCAL/ADC/mcal_adc.c: 136:     return ERRORSTATUS;
  9534  00610E  0100               	movlb	0	; () banked
  9535  006110  5185               	movf	ADC_select_channel@ERRORSTATUS& (0+255),w,b
  9536  006112                     
  9537                           ; BSR set to: 0
  9538  006112  0012               	return		;funcret
  9539  006114                     __end_of_ADC_select_channel:
  9540                           	callstack 0
  9541                           
  9542 ;; *************** function _ADC_Start_Conversion *****************
  9543 ;; Defined at:
  9544 ;;		line 145 in file "MCAL/ADC/mcal_adc.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  _adc            2   41[COMRAM] PTR const struct .
  9547 ;;		 -> battery_adc(5), 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;  ERRORSTATUS     1   43[COMRAM] unsigned char 
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      unsigned char 
  9552 ;; Registers used:
  9553 ;;		wreg, status,2, status,0
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;Total ram usage:        3 bytes
  9564 ;; Hardware stack levels used:    1
  9565 ;; Hardware stack levels required when called:   10
  9566 ;; This function calls:
  9567 ;;		Nothing
  9568 ;; This function is called by:
  9569 ;;		_ADC_Get_Conversion_Blocking
  9570 ;;		_ADC_Get_Conversion_Interrupt
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text36
  9575  0062DC                     __ptext36:
  9576                           	callstack 0
  9577  0062DC                     _ADC_Start_Conversion:
  9578                           	callstack 18
  9579  0062DC                     
  9580                           ;MCAL/ADC/mcal_adc.c: 145: Std_ReturnType ADC_Start_Conversion(const adc_config_st* _adc
      +                          );MCAL/ADC/mcal_adc.c: 146: {;MCAL/ADC/mcal_adc.c: 147:     Std_ReturnType ERRORSTATUS =
      +                          (Std_ReturnType) 0x01;
  9581  0062DC  0E01               	movlw	1
  9582  0062DE  6E2C               	movwf	ADC_Start_Conversion@ERRORSTATUS^0,c
  9583  0062E0                     
  9584                           ;MCAL/ADC/mcal_adc.c: 148:     if (((void*)0)==_adc)
  9585  0062E0  502A               	movf	ADC_Start_Conversion@_adc^0,w,c
  9586  0062E2  102B               	iorwf	(ADC_Start_Conversion@_adc+1)^0,w,c
  9587  0062E4  A4D8               	btfss	status,2,c
  9588  0062E6  EF77  F031         	goto	u15341
  9589  0062EA  EF79  F031         	goto	u15340
  9590  0062EE                     u15341:
  9591  0062EE  EF7D  F031         	goto	l336
  9592  0062F2                     u15340:
  9593  0062F2                     
  9594                           ;MCAL/ADC/mcal_adc.c: 149:     {;MCAL/ADC/mcal_adc.c: 150:         ERRORSTATUS=(Std_Retu
      +                          rnType) 0x00;
  9595  0062F2  0E00               	movlw	0
  9596  0062F4  6E2C               	movwf	ADC_Start_Conversion@ERRORSTATUS^0,c
  9597                           
  9598                           ;MCAL/ADC/mcal_adc.c: 151:     }
  9599  0062F6  EF7E  F031         	goto	l12797
  9600  0062FA                     l336:
  9601                           
  9602                           ;MCAL/ADC/mcal_adc.c: 153:     {;MCAL/ADC/mcal_adc.c: 154:         (ADCON0bits.GODONE=1)
      +                          ;
  9603  0062FA  82C2               	bsf	194,1,c	;volatile
  9604  0062FC                     l12797:
  9605                           
  9606                           ;MCAL/ADC/mcal_adc.c: 156:     return ERRORSTATUS;
  9607  0062FC  502C               	movf	ADC_Start_Conversion@ERRORSTATUS^0,w,c
  9608  0062FE  0012               	return		;funcret
  9609  006300                     __end_of_ADC_Start_Conversion:
  9610                           	callstack 0
  9611                           
  9612 ;; *************** function _ADC_Get_Conversion_Results *****************
  9613 ;; Defined at:
  9614 ;;		line 189 in file "MCAL/ADC/mcal_adc.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  _adc            2    0[BANK0 ] PTR const struct .
  9617 ;;		 -> battery_adc(5), 
  9618 ;;  _result         2    2[BANK0 ] PTR unsigned short 
  9619 ;;		 -> battery_volt_adc_read(2), 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  ERRORSTATUS     1   41[COMRAM] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      unsigned char 
  9624 ;; Registers used:
  9625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9633 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;Total ram usage:       10 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:   10
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_ADC_Get_Conversion_Blocking
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text37
  9646  004F10                     __ptext37:
  9647                           	callstack 0
  9648  004F10                     _ADC_Get_Conversion_Results:
  9649                           	callstack 18
  9650  004F10                     
  9651                           ;MCAL/ADC/mcal_adc.c: 189: Std_ReturnType ADC_Get_Conversion_Results(const adc_config_st
      +                          * _adc,adc_result_t*_result);MCAL/ADC/mcal_adc.c: 190: {;MCAL/ADC/mcal_adc.c: 191:     S
      +                          td_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
  9652  004F10  0E01               	movlw	1
  9653  004F12  6E2A               	movwf	ADC_Get_Conversion_Results@ERRORSTATUS^0,c
  9654  004F14                     
  9655                           ;MCAL/ADC/mcal_adc.c: 192:     if ((((void*)0)==_adc)||(((void*)0)==_result))
  9656  004F14  0100               	movlb	0	; () banked
  9657  004F16  5180               	movf	ADC_Get_Conversion_Results@_adc& (0+255),w,b
  9658  004F18  1181               	iorwf	(ADC_Get_Conversion_Results@_adc+1)& (0+255),w,b
  9659  004F1A  B4D8               	btfsc	status,2,c
  9660  004F1C  EF92  F027         	goto	u15351
  9661  004F20  EF94  F027         	goto	u15350
  9662  004F24                     u15351:
  9663  004F24  EF9D  F027         	goto	l12807
  9664  004F28                     u15350:
  9665  004F28                     
  9666                           ; BSR set to: 0
  9667  004F28  5182               	movf	ADC_Get_Conversion_Results@_result& (0+255),w,b
  9668  004F2A  1183               	iorwf	(ADC_Get_Conversion_Results@_result+1)& (0+255),w,b
  9669  004F2C  A4D8               	btfss	status,2,c
  9670  004F2E  EF9B  F027         	goto	u15361
  9671  004F32  EF9D  F027         	goto	u15360
  9672  004F36                     u15361:
  9673  004F36  EFA1  F027         	goto	l12809
  9674  004F3A                     u15360:
  9675  004F3A                     l12807:
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;MCAL/ADC/mcal_adc.c: 193:     {;MCAL/ADC/mcal_adc.c: 194:         ERRORSTATUS=(Std_Retu
      +                          rnType) 0x00;
  9679  004F3A  0E00               	movlw	0
  9680  004F3C  6E2A               	movwf	ADC_Get_Conversion_Results@ERRORSTATUS^0,c
  9681                           
  9682                           ;MCAL/ADC/mcal_adc.c: 195:     }
  9683  004F3E  EFE4  F027         	goto	l12819
  9684  004F42                     l12809:
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;MCAL/ADC/mcal_adc.c: 197:     {;MCAL/ADC/mcal_adc.c: 198:         if(ADC_RESULT_LEFT==_
      +                          adc->result_format)
  9688  004F42  EE20 F003          	lfsr	2,3
  9689  004F46  5180               	movf	ADC_Get_Conversion_Results@_adc& (0+255),w,b
  9690  004F48  26D9               	addwf	fsr2l,f,c
  9691  004F4A  5181               	movf	(ADC_Get_Conversion_Results@_adc+1)& (0+255),w,b
  9692  004F4C  22DA               	addwfc	fsr2h,f,c
  9693  004F4E  50DF               	movf	indf2,w,c
  9694  004F50  A4D8               	btfss	status,2,c
  9695  004F52  EFAD  F027         	goto	u15371
  9696  004F56  EFAF  F027         	goto	u15370
  9697  004F5A                     u15371:
  9698  004F5A  EFD2  F027         	goto	l12813
  9699  004F5E                     u15370:
  9700  004F5E                     
  9701                           ; BSR set to: 0
  9702                           ;MCAL/ADC/mcal_adc.c: 199:          {;MCAL/ADC/mcal_adc.c: 200:              *_result =(
      +                          adc_result_t)(((ADRESH<<8)+(ADRESL<<6))>>6);
  9703  004F5E  50C3               	movf	195,w,c	;volatile
  9704  004F60  6F84               	movwf	??_ADC_Get_Conversion_Results& (0+255),b
  9705  004F62  6B85               	clrf	(??_ADC_Get_Conversion_Results+1)& (0+255),b
  9706  004F64  0E06               	movlw	6
  9707  004F66                     u15385:
  9708  004F66  90D8               	bcf	status,0,c
  9709  004F68  3784               	rlcf	??_ADC_Get_Conversion_Results& (0+255),f,b
  9710  004F6A  3785               	rlcf	(??_ADC_Get_Conversion_Results+1)& (0+255),f,b
  9711  004F6C  2EE8               	decfsz	wreg,f,c
  9712  004F6E  EFB3  F027         	goto	u15385
  9713  004F72  50C4               	movf	196,w,c	;volatile
  9714  004F74  6F87               	movwf	(??_ADC_Get_Conversion_Results+3)& (0+255),b
  9715  004F76  6B86               	clrf	(??_ADC_Get_Conversion_Results+2)& (0+255),b
  9716  004F78  5184               	movf	??_ADC_Get_Conversion_Results& (0+255),w,b
  9717  004F7A  2786               	addwf	(??_ADC_Get_Conversion_Results+2)& (0+255),f,b
  9718  004F7C  5185               	movf	(??_ADC_Get_Conversion_Results+1)& (0+255),w,b
  9719  004F7E  2387               	addwfc	(??_ADC_Get_Conversion_Results+3)& (0+255),f,b
  9720  004F80  0E06               	movlw	6
  9721  004F82  6F88               	movwf	(??_ADC_Get_Conversion_Results+4)& (0+255),b
  9722  004F84                     u15395:
  9723  004F84  3587               	rlcf	(??_ADC_Get_Conversion_Results+3)& (0+255),w,b
  9724  004F86  3387               	rrcf	(??_ADC_Get_Conversion_Results+3)& (0+255),f,b
  9725  004F88  3386               	rrcf	(??_ADC_Get_Conversion_Results+2)& (0+255),f,b
  9726  004F8A  2F88               	decfsz	(??_ADC_Get_Conversion_Results+4)& (0+255),f,b
  9727  004F8C  EFC2  F027         	goto	u15395
  9728  004F90  C082  FFD9         	movff	ADC_Get_Conversion_Results@_result,fsr2l
  9729  004F94  C083  FFDA         	movff	ADC_Get_Conversion_Results@_result+1,fsr2h
  9730  004F98  C086  FFDE         	movff	??_ADC_Get_Conversion_Results+2,postinc2
  9731  004F9C  C087  FFDD         	movff	??_ADC_Get_Conversion_Results+3,postdec2
  9732                           
  9733                           ;MCAL/ADC/mcal_adc.c: 201:          }
  9734  004FA0  EFE4  F027         	goto	l12819
  9735  004FA4                     l12813:
  9736  004FA4                     
  9737                           ; BSR set to: 0
  9738                           ;MCAL/ADC/mcal_adc.c: 203:          {;MCAL/ADC/mcal_adc.c: 204:              *_result =(
      +                          adc_result_t)((ADRESH<<8)+ADRESL);
  9739  004FA4  50C3               	movf	195,w,c	;volatile
  9740  004FA6  CFC4 F084          	movff	4036,??_ADC_Get_Conversion_Results	;volatile
  9741  004FAA  6B85               	clrf	(??_ADC_Get_Conversion_Results+1)& (0+255),b
  9742  004FAC  C084  F085         	movff	??_ADC_Get_Conversion_Results,??_ADC_Get_Conversion_Results+1
  9743  004FB0  6B84               	clrf	??_ADC_Get_Conversion_Results& (0+255),b
  9744  004FB2  2784               	addwf	??_ADC_Get_Conversion_Results& (0+255),f,b
  9745  004FB4  0E00               	movlw	0
  9746  004FB6  2385               	addwfc	(??_ADC_Get_Conversion_Results+1)& (0+255),f,b
  9747  004FB8  C082  FFD9         	movff	ADC_Get_Conversion_Results@_result,fsr2l
  9748  004FBC  C083  FFDA         	movff	ADC_Get_Conversion_Results@_result+1,fsr2h
  9749  004FC0  C084  FFDE         	movff	??_ADC_Get_Conversion_Results,postinc2
  9750  004FC4  C085  FFDD         	movff	??_ADC_Get_Conversion_Results+1,postdec2
  9751  004FC8                     l12819:
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;MCAL/ADC/mcal_adc.c: 212:     return ERRORSTATUS;
  9755  004FC8  502A               	movf	ADC_Get_Conversion_Results@ERRORSTATUS^0,w,c
  9756  004FCA                     
  9757                           ; BSR set to: 0
  9758  004FCA  0012               	return		;funcret
  9759  004FCC                     __end_of_ADC_Get_Conversion_Results:
  9760                           	callstack 0
  9761                           
  9762 ;; *************** function _application_intialize *****************
  9763 ;; Defined at:
  9764 ;;		line 127 in file "application.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:   14
  9785 ;; This function calls:
  9786 ;;		_ADC_Init
  9787 ;;		_EUSART_Async_Init
  9788 ;;		_GPIO_Pin_Initialize
  9789 ;;		_lcd_4bit_initialize
  9790 ;; This function is called by:
  9791 ;;		_main
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text38
  9796  005A9C                     __ptext38:
  9797                           	callstack 0
  9798  005A9C                     _application_intialize:
  9799                           	callstack 16
  9800  005A9C                     
  9801                           ;application.c: 129:     GPIO_Pin_Initialize(&pind0);
  9802  005A9C  0E53               	movlw	low _pind0
  9803  005A9E  0100               	movlb	0	; () banked
  9804  005AA0  6F87               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  9805  005AA2  0E00               	movlw	high _pind0
  9806  005AA4  6F88               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  9807  005AA6  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9808                           
  9809                           ;application.c: 130:     GPIO_Pin_Initialize(&pind1);
  9810  005AAA  0E54               	movlw	low _pind1
  9811  005AAC  0100               	movlb	0	; () banked
  9812  005AAE  6F87               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  9813  005AB0  0E00               	movlw	high _pind1
  9814  005AB2  6F88               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  9815  005AB4  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9816                           
  9817                           ;application.c: 131:     GPIO_Pin_Initialize(&pind2);
  9818  005AB8  0E55               	movlw	low _pind2
  9819  005ABA  0100               	movlb	0	; () banked
  9820  005ABC  6F87               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  9821  005ABE  0E00               	movlw	high _pind2
  9822  005AC0  6F88               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  9823  005AC2  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9824                           
  9825                           ;application.c: 132:     GPIO_Pin_Initialize(&selector);
  9826  005AC6  0E52               	movlw	low _selector
  9827  005AC8  0100               	movlb	0	; () banked
  9828  005ACA  6F87               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  9829  005ACC  0E00               	movlw	high _selector
  9830  005ACE  6F88               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  9831  005AD0  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9832  005AD4                     
  9833                           ;application.c: 133:     EUSART_Async_Init(&_uart_obj);
  9834  005AD4  0EC7               	movlw	low __uart_obj
  9835  005AD6  0100               	movlb	0	; () banked
  9836  005AD8  6FC8               	movwf	EUSART_Async_Init@_eusart_obj& (0+255),b
  9837  005ADA  0E01               	movlw	high __uart_obj
  9838  005ADC  6FC9               	movwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),b
  9839  005ADE  ECA4  F02E         	call	_EUSART_Async_Init	;wreg free
  9840  005AE2                     
  9841                           ;application.c: 134:     lcd_4bit_initialize(&lcd1);
  9842  005AE2  0EE7               	movlw	low _lcd1
  9843  005AE4  0100               	movlb	0	; () banked
  9844  005AE6  6F8F               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  9845  005AE8  0E01               	movlw	high _lcd1
  9846  005AEA  6F90               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  9847  005AEC  ECDA  F020         	call	_lcd_4bit_initialize	;wreg free
  9848                           
  9849                           ;application.c: 135:     ADC_Init(&battery_adc);
  9850  005AF0  0EF3               	movlw	low _battery_adc
  9851  005AF2  0100               	movlb	0	; () banked
  9852  005AF4  6F82               	movwf	ADC_Init@_adc& (0+255),b
  9853  005AF6  0E01               	movlw	high _battery_adc
  9854  005AF8  6F83               	movwf	(ADC_Init@_adc+1)& (0+255),b
  9855  005AFA  EC47  F02A         	call	_ADC_Init	;wreg free
  9856  005AFE  0012               	return		;funcret
  9857  005B00                     __end_of_application_intialize:
  9858                           	callstack 0
  9859                           
  9860 ;; *************** function _lcd_4bit_initialize *****************
  9861 ;; Defined at:
  9862 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  lcd             2   15[BANK0 ] PTR const struct .
  9865 ;;		 -> lcd1(6), 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  pin_lcd_coun    1   19[BANK0 ] unsigned char 
  9868 ;;  ERRORSTATUS     1    0        unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      unsigned char 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;Total ram usage:        6 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:   13
  9885 ;; This function calls:
  9886 ;;		_GPIO_Pin_Initialize
  9887 ;;		_lcd_4bit_send_command
  9888 ;; This function is called by:
  9889 ;;		_application_intialize
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text39
  9894  0041B4                     __ptext39:
  9895                           	callstack 0
  9896  0041B4                     _lcd_4bit_initialize:
  9897                           	callstack 16
  9898  0041B4                     
  9899                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  9900  0041B4  0100               	movlb	0	; () banked
  9901  0041B6  518F               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  9902  0041B8  1190               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  9903  0041BA  A4D8               	btfss	status,2,c
  9904  0041BC  EFE2  F020         	goto	u15471
  9905  0041C0  EFE4  F020         	goto	u15470
  9906  0041C4                     u15471:
  9907  0041C4  EFE6  F020         	goto	l12917
  9908  0041C8                     u15470:
  9909  0041C8                     
  9910                           ; BSR set to: 0
  9911                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  9912  0041C8  EF75  F021         	goto	l101
  9913  0041CC                     l12917:
  9914  0041CC                     
  9915                           ; BSR set to: 0
  9916  0041CC  C08F  F087         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  9917  0041D0  C090  F088         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  9918  0041D4  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9919  0041D8  0E01               	movlw	1
  9920  0041DA  0100               	movlb	0	; () banked
  9921  0041DC  258F               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  9922  0041DE  6F87               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  9923  0041E0  0E00               	movlw	0
  9924  0041E2  2190               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  9925  0041E4  6F88               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  9926  0041E6  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9927                           
  9928                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  9929  0041EA  0E00               	movlw	0
  9930  0041EC  0100               	movlb	0	; () banked
  9931  0041EE  6F93               	movwf	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  9932  0041F0                     l12927:
  9933                           
  9934                           ; BSR set to: 0
  9935  0041F0  5193               	movf	lcd_4bit_initialize@pin_lcd_counter& (0+255),w,b
  9936  0041F2  258F               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  9937  0041F4  6F91               	movwf	??_lcd_4bit_initialize& (0+255),b
  9938  0041F6  0E00               	movlw	0
  9939  0041F8  2190               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  9940  0041FA  6F92               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  9941  0041FC  0E02               	movlw	2
  9942  0041FE  2591               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  9943  004200  6F87               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  9944  004202  0E00               	movlw	0
  9945  004204  2192               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  9946  004206  6F88               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  9947  004208  ECFE  F02E         	call	_GPIO_Pin_Initialize	;wreg free
  9948  00420C                     
  9949                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  9950  00420C  0100               	movlb	0	; () banked
  9951  00420E  2B93               	incf	lcd_4bit_initialize@pin_lcd_counter& (0+255),f,b
  9952  004210                     
  9953                           ; BSR set to: 0
  9954  004210  0E03               	movlw	3
  9955  004212  6593               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  9956  004214  EF0E  F021         	goto	u15481
  9957  004218  EF10  F021         	goto	u15480
  9958  00421C                     u15481:
  9959  00421C  EFF8  F020         	goto	l12927
  9960  004220                     u15480:
  9961  004220                     
  9962                           ; BSR set to: 0
  9963                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(24000000/
      +                          4000.0)));
  9964  004220  0E9C               	movlw	156
  9965  004222  0100               	movlb	0	; () banked
  9966  004224  6F91               	movwf	??_lcd_4bit_initialize& (0+255),b
  9967  004226  0ED7               	movlw	215
  9968  004228                     u16547:
  9969  004228  2EE8               	decfsz	wreg,f,c
  9970  00422A  D7FE               	bra	u16547
  9971  00422C  2F91               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  9972  00422E  D7FC               	bra	u16547
  9973  004230  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9974  004234  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9975  004238  0E38               	movlw	56
  9976  00423A  0100               	movlb	0	; () banked
  9977  00423C  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
  9978  00423E  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
  9979  004242                     
  9980                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(24000000/4
      +                          000.0)));
  9981  004242  0E27               	movlw	39
  9982  004244  0100               	movlb	0	; () banked
  9983  004246  6F91               	movwf	??_lcd_4bit_initialize& (0+255),b
  9984  004248  0EF5               	movlw	245
  9985  00424A                     u16557:
  9986  00424A  2EE8               	decfsz	wreg,f,c
  9987  00424C  D7FE               	bra	u16557
  9988  00424E  2F91               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  9989  004250  D7FC               	bra	u16557
  9990  004252  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  9991  004256  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  9992  00425A  0E38               	movlw	56
  9993  00425C  0100               	movlb	0	; () banked
  9994  00425E  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
  9995  004260  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
  9996  004264                     
  9997                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(24000000
      +                          /4000000.0)));
  9998  004264  0EB4               	movlw	180
  9999  004266                     u16567:
 10000  004266  D000               	nop2	
 10001  004268  2EE8               	decfsz	wreg,f,c
 10002  00426A  D7FD               	bra	u16567
 10003  00426C  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10004  004270  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10005  004274  0E38               	movlw	56
 10006  004276  0100               	movlb	0	; () banked
 10007  004278  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10008  00427A  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10009  00427E  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10010  004282  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10011  004286  0E01               	movlw	1
 10012  004288  0100               	movlb	0	; () banked
 10013  00428A  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10014  00428C  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10015  004290  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10016  004294  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10017  004298  0E02               	movlw	2
 10018  00429A  0100               	movlb	0	; () banked
 10019  00429C  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10020  00429E  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10021  0042A2  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10022  0042A6  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10023  0042AA  0E06               	movlw	6
 10024  0042AC  0100               	movlb	0	; () banked
 10025  0042AE  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10026  0042B0  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10027  0042B4  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10028  0042B8  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10029  0042BC  0E0D               	movlw	13
 10030  0042BE  0100               	movlb	0	; () banked
 10031  0042C0  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10032  0042C2  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10033  0042C6  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10034  0042CA  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10035  0042CE  0E28               	movlw	40
 10036  0042D0  0100               	movlb	0	; () banked
 10037  0042D2  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10038  0042D4  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10039  0042D8  C08F  F08B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 10040  0042DC  C090  F08C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
 10041  0042E0  0E80               	movlw	128
 10042  0042E2  0100               	movlb	0	; () banked
 10043  0042E4  6F8D               	movwf	lcd_4bit_send_command@command& (0+255),b
 10044  0042E6  ECD6  F02B         	call	_lcd_4bit_send_command	;wreg free
 10045  0042EA                     l101:
 10046  0042EA  0012               	return		;funcret
 10047  0042EC                     __end_of_lcd_4bit_initialize:
 10048                           	callstack 0
 10049                           
 10050 ;; *************** function _lcd_4bit_send_command *****************
 10051 ;; Defined at:
 10052 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;  lcd             2   11[BANK0 ] PTR const struct .
 10055 ;;		 -> lcd1(6), 
 10056 ;;  command         1   13[BANK0 ] unsigned char 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;  ERRORSTATUS     1   14[BANK0 ] unsigned char 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  1    wreg      unsigned char 
 10061 ;; Registers used:
 10062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10068 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10071 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;Total ram usage:        4 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:   12
 10075 ;; This function calls:
 10076 ;;		_GPIO_Pin_Write_Logic
 10077 ;;		_lcd_4bits_send_enable_signal
 10078 ;;		_lcd_send_4bits
 10079 ;; This function is called by:
 10080 ;;		_lcd_4bit_initialize
 10081 ;;		_lcd_4bits_set_courser
 10082 ;;		_lcd_4bit_send_custom_char
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text40
 10087  0057AC                     __ptext40:
 10088                           	callstack 0
 10089  0057AC                     _lcd_4bit_send_command:
 10090                           	callstack 16
 10091  0057AC                     
 10092                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
 10093  0057AC  0100               	movlb	0	; () banked
 10094  0057AE  518B               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
 10095  0057B0  118C               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
 10096  0057B2  A4D8               	btfss	status,2,c
 10097  0057B4  EFDE  F02B         	goto	u14981
 10098  0057B8  EFE0  F02B         	goto	u14980
 10099  0057BC                     u14981:
 10100  0057BC  EFE4  F02B         	goto	l12515
 10101  0057C0                     u14980:
 10102  0057C0                     
 10103                           ; BSR set to: 0
 10104                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
 10105  0057C0  0E00               	movlw	0
 10106  0057C2  6F8E               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
 10107                           
 10108                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
 10109  0057C4  EF0B  F02C         	goto	l12517
 10110  0057C8                     l12515:
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
 10114  0057C8  C08B  F02A         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
 10115  0057CC  C08C  F02B         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
 10116  0057D0  0E00               	movlw	0
 10117  0057D2  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10118  0057D4  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10119  0057D8  0100               	movlb	0	; () banked
 10120  0057DA  6F8E               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
 10121                           
 10122                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
 10123  0057DC  C08B  F087         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 10124  0057E0  C08C  F088         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
 10125  0057E4  398D               	swapf	lcd_4bit_send_command@command& (0+255),w,b
 10126  0057E6  0B0F               	andlw	15
 10127  0057E8  6F89               	movwf	lcd_send_4bits@data_command& (0+255),b
 10128  0057EA  EC1E  F02B         	call	_lcd_send_4bits	;wreg free
 10129                           
 10130                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
 10131  0057EE  C08B  F087         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
 10132  0057F2  C08C  F088         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
 10133  0057F6  EC4E  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
 10134                           
 10135                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
 10136  0057FA  C08B  F087         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 10137  0057FE  C08C  F088         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
 10138  005802  C08D  F089         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
 10139  005806  EC1E  F02B         	call	_lcd_send_4bits	;wreg free
 10140                           
 10141                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
 10142  00580A  C08B  F087         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
 10143  00580E  C08C  F088         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
 10144  005812  EC4E  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
 10145  005816                     l12517:
 10146                           
 10147                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
 10148  005816  0100               	movlb	0	; () banked
 10149  005818  518E               	movf	lcd_4bit_send_command@ERRORSTATUS& (0+255),w,b
 10150  00581A                     
 10151                           ; BSR set to: 0
 10152  00581A  0012               	return		;funcret
 10153  00581C                     __end_of_lcd_4bit_send_command:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function _lcd_send_4bits *****************
 10157 ;; Defined at:
 10158 ;;		line 529 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  lcd             2    7[BANK0 ] PTR const struct .
 10161 ;;		 -> lcd1(6), 
 10162 ;;  data_command    1    9[BANK0 ] unsigned char 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  ERRORSTATUS     1    0        unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      unsigned char 
 10167 ;; Registers used:
 10168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:        4 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:   11
 10181 ;; This function calls:
 10182 ;;		_GPIO_Pin_Write_Logic
 10183 ;; This function is called by:
 10184 ;;		_lcd_4bit_send_command
 10185 ;;		_lcd_4bit_send_char_data
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text41
 10190  00563C                     __ptext41:
 10191                           	callstack 0
 10192  00563C                     _lcd_send_4bits:
 10193                           	callstack 16
 10194  00563C                     
 10195                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 532:         if ( ((void*)0)==lcd)
 10196  00563C  0100               	movlb	0	; () banked
 10197  00563E  5187               	movf	lcd_send_4bits@lcd& (0+255),w,b
 10198  005640  1188               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
 10199  005642  A4D8               	btfss	status,2,c
 10200  005644  EF26  F02B         	goto	u14851
 10201  005648  EF28  F02B         	goto	u14850
 10202  00564C                     u14851:
 10203  00564C  EF2A  F02B         	goto	l12411
 10204  005650                     u14850:
 10205  005650                     
 10206                           ; BSR set to: 0
 10207                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 535:     }
 10208  005650  EF5E  F02B         	goto	l233
 10209  005654                     l12411:
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 537:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 53
      +                          8:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
 10213  005654  0E02               	movlw	2
 10214  005656  2587               	addwf	lcd_send_4bits@lcd& (0+255),w,b
 10215  005658  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10216  00565A  0E00               	movlw	0
 10217  00565C  2188               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
 10218  00565E  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10219  005660  5189               	movf	lcd_send_4bits@data_command& (0+255),w,b
 10220  005662  0B01               	andlw	1
 10221  005664  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10222  005666  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10223                           
 10224                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 539:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
 10225  00566A  0E03               	movlw	3
 10226  00566C  0100               	movlb	0	; () banked
 10227  00566E  2587               	addwf	lcd_send_4bits@lcd& (0+255),w,b
 10228  005670  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10229  005672  0E00               	movlw	0
 10230  005674  2188               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
 10231  005676  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10232  005678  90D8               	bcf	status,0,c
 10233  00567A  3189               	rrcf	lcd_send_4bits@data_command& (0+255),w,b
 10234  00567C  0B01               	andlw	1
 10235  00567E  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10236  005680  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10237                           
 10238                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 540:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
 10239  005684  0E04               	movlw	4
 10240  005686  0100               	movlb	0	; () banked
 10241  005688  2587               	addwf	lcd_send_4bits@lcd& (0+255),w,b
 10242  00568A  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10243  00568C  0E00               	movlw	0
 10244  00568E  2188               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
 10245  005690  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10246  005692  4189               	rrncf	lcd_send_4bits@data_command& (0+255),w,b
 10247  005694  42E8               	rrncf	wreg,f,c
 10248  005696  0B3F               	andlw	63
 10249  005698  0B01               	andlw	1
 10250  00569A  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10251  00569C  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10252                           
 10253                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 541:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
 10254  0056A0  0E05               	movlw	5
 10255  0056A2  0100               	movlb	0	; () banked
 10256  0056A4  2587               	addwf	lcd_send_4bits@lcd& (0+255),w,b
 10257  0056A6  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10258  0056A8  0E00               	movlw	0
 10259  0056AA  2188               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
 10260  0056AC  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10261  0056AE  3989               	swapf	lcd_send_4bits@data_command& (0+255),w,b
 10262  0056B0  46E8               	rlncf	wreg,f,c
 10263  0056B2  0B1F               	andlw	31
 10264  0056B4  0B01               	andlw	1
 10265  0056B6  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10266  0056B8  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10267  0056BC                     l233:
 10268  0056BC  0012               	return		;funcret
 10269  0056BE                     __end_of_lcd_send_4bits:
 10270                           	callstack 0
 10271                           
 10272 ;; *************** function _lcd_4bits_send_enable_signal *****************
 10273 ;; Defined at:
 10274 ;;		line 512 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  lcd             2    7[BANK0 ] PTR const struct .
 10277 ;;		 -> lcd1(6), 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  ERRORSTATUS     1    0        unsigned char 
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      unsigned char 
 10282 ;; Registers used:
 10283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;Total ram usage:        3 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:   11
 10296 ;; This function calls:
 10297 ;;		_GPIO_Pin_Write_Logic
 10298 ;; This function is called by:
 10299 ;;		_lcd_4bit_send_command
 10300 ;;		_lcd_4bit_send_char_data
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text42
 10305  005E9C                     __ptext42:
 10306                           	callstack 0
 10307  005E9C                     _lcd_4bits_send_enable_signal:
 10308                           	callstack 16
 10309  005E9C                     
 10310                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:         if ( ((void*)0)==lcd)
 10311  005E9C  0100               	movlb	0	; () banked
 10312  005E9E  5187               	movf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
 10313  005EA0  1188               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
 10314  005EA2  A4D8               	btfss	status,2,c
 10315  005EA4  EF56  F02F         	goto	u14861
 10316  005EA8  EF58  F02F         	goto	u14860
 10317  005EAC                     u14861:
 10318  005EAC  EF5A  F02F         	goto	l12421
 10319  005EB0                     u14860:
 10320  005EB0                     
 10321                           ; BSR set to: 0
 10322                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 518:     }
 10323  005EB0  EF72  F02F         	goto	l228
 10324  005EB4                     l12421:
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 520:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 52
      +                          1:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
 10328  005EB4  0E01               	movlw	1
 10329  005EB6  2587               	addwf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
 10330  005EB8  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10331  005EBA  0E00               	movlw	0
 10332  005EBC  2188               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
 10333  005EBE  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10334  005EC0  0E01               	movlw	1
 10335  005EC2  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10336  005EC4  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10337  005EC8                     
 10338                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 522:             _delay((unsigned long)((5)*(24000
      +                          000/4000000.0)));
 10339  005EC8  0E0A               	movlw	10
 10340  005ECA                     u16577:
 10341  005ECA  2EE8               	decfsz	wreg,f,c
 10342  005ECC  D7FE               	bra	u16577
 10343  005ECE                     
 10344                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 523:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
 10345  005ECE  0E01               	movlw	1
 10346  005ED0  0100               	movlb	0	; () banked
 10347  005ED2  2587               	addwf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
 10348  005ED4  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10349  005ED6  0E00               	movlw	0
 10350  005ED8  2188               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
 10351  005EDA  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10352  005EDC  0E00               	movlw	0
 10353  005EDE  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10354  005EE0  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10355  005EE4                     l228:
 10356  005EE4  0012               	return		;funcret
 10357  005EE6                     __end_of_lcd_4bits_send_enable_signal:
 10358                           	callstack 0
 10359                           
 10360 ;; *************** function _GPIO_Pin_Initialize *****************
 10361 ;; Defined at:
 10362 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  _pin_config     2    7[BANK0 ] PTR const struct .
 10365 ;;		 -> selector(1), pind0(1), pind1(1), pind2(1), 
 10366 ;;		 -> lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), CCP1_Obj(10), 
 10367 ;;		 -> W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), 
 10368 ;;		 -> W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;  ERRORSTATUS     1    9[BANK0 ] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      unsigned char 
 10373 ;; Registers used:
 10374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        3 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:   11
 10387 ;; This function calls:
 10388 ;;		_GPIO_Pin_Direction_Initialize
 10389 ;;		_GPIO_Pin_Write_Logic
 10390 ;; This function is called by:
 10391 ;;		_lcd_4bit_initialize
 10392 ;;		_application_intialize
 10393 ;;		_ECU_DC_Motor_Init
 10394 ;;		_lcd_8bit_initialize
 10395 ;;		_CCP_Init
 10396 ;;		_IR_Sensor_Init
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text43
 10401  005DFC                     __ptext43:
 10402                           	callstack 0
 10403  005DFC                     _GPIO_Pin_Initialize:
 10404                           	callstack 17
 10405  005DFC                     
 10406                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
 10407  005DFC  0100               	movlb	0	; () banked
 10408  005DFE  5187               	movf	GPIO_Pin_Initialize@_pin_config& (0+255),w,b
 10409  005E00  1188               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),w,b
 10410  005E02  A4D8               	btfss	status,2,c
 10411  005E04  EF06  F02F         	goto	u15191
 10412  005E08  EF08  F02F         	goto	u15190
 10413  005E0C                     u15191:
 10414  005E0C  EF0C  F02F         	goto	l12669
 10415  005E10                     u15190:
 10416  005E10                     
 10417                           ; BSR set to: 0
 10418                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
 10419  005E10  0E00               	movlw	0
 10420  005E12  6F89               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
 10421                           
 10422                           ;MCAL/GPIO/hal_gpio.c: 164:     }
 10423  005E14  EF24  F02F         	goto	l12671
 10424  005E18                     l12669:
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
 10428  005E18  C087  F02A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
 10429  005E1C  C088  F02B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
 10430  005E20  EC37  F020         	call	_GPIO_Pin_Direction_Initialize	;wreg free
 10431  005E24  0100               	movlb	0	; () banked
 10432  005E26  6F89               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
 10433                           
 10434                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
 10435  005E28  C087  F02A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
 10436  005E2C  C088  F02B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
 10437  005E30  C087  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
 10438  005E34  C088  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
 10439  005E38  0E00               	movlw	0
 10440  005E3A  BEDF               	btfsc	indf2,7,c
 10441  005E3C  0E01               	movlw	1
 10442  005E3E  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10443  005E40  EC76  F021         	call	_GPIO_Pin_Write_Logic	;wreg free
 10444  005E44  0100               	movlb	0	; () banked
 10445  005E46  6F89               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
 10446  005E48                     l12671:
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
 10450  005E48  5189               	movf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),w,b
 10451  005E4A                     
 10452                           ; BSR set to: 0
 10453  005E4A  0012               	return		;funcret
 10454  005E4C                     __end_of_GPIO_Pin_Initialize:
 10455                           	callstack 0
 10456                           
 10457 ;; *************** function _GPIO_Pin_Write_Logic *****************
 10458 ;; Defined at:
 10459 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  _pin_config     2   41[COMRAM] PTR const struct .
 10462 ;;		 -> selector(1), pind0(1), pind1(1), pind2(1), 
 10463 ;;		 -> lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), CCP1_Obj(10), 
 10464 ;;		 -> W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), 
 10465 ;;		 -> W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
 10466 ;;  logic           1   43[COMRAM] enum E2958
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;  ERRORSTATUS     1    6[BANK0 ] unsigned char 
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  1    wreg      unsigned char 
 10471 ;; Registers used:
 10472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10478 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;Total ram usage:       10 bytes
 10483 ;; Hardware stack levels used:    1
 10484 ;; Hardware stack levels required when called:   10
 10485 ;; This function calls:
 10486 ;;		Nothing
 10487 ;; This function is called by:
 10488 ;;		_lcd_4bit_send_command
 10489 ;;		_lcd_4bit_send_char_data
 10490 ;;		_lcd_4bits_send_enable_signal
 10491 ;;		_lcd_send_4bits
 10492 ;;		_GPIO_Pin_Initialize
 10493 ;;		_battery_level
 10494 ;;		_ECU_DC_Motor_Run_Left
 10495 ;;		_ECU_DC_Motor_Run_Right
 10496 ;;		_lcd_8bit_send_command
 10497 ;;		_lcd_8bit_send_char_data
 10498 ;;		_lcd_8bits_send_enable_signal
 10499 ;;		_GPS_Service
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text44
 10504  0042EC                     __ptext44:
 10505                           	callstack 0
 10506  0042EC                     _GPIO_Pin_Write_Logic:
 10507                           	callstack 16
 10508  0042EC                     
 10509                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 10510  0042EC  0E01               	movlw	1
 10511  0042EE  0100               	movlb	0	; () banked
 10512  0042F0  6F86               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS& (0+255),b
 10513  0042F2                     
 10514                           ; BSR set to: 0
 10515                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 10516  0042F2  502A               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
 10517  0042F4  102B               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 10518  0042F6  B4D8               	btfsc	status,2,c
 10519  0042F8  EF80  F021         	goto	u14071
 10520  0042FC  EF82  F021         	goto	u14070
 10521  004300                     u14071:
 10522  004300  EF91  F021         	goto	l11997
 10523  004304                     u14070:
 10524  004304                     
 10525                           ; BSR set to: 0
 10526  004304  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10527  004308  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10528  00430C  50DF               	movf	indf2,w,c
 10529  00430E  0B07               	andlw	7
 10530  004310  6F80               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10531  004312  0E07               	movlw	7
 10532  004314  6580               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
 10533  004316  EF8F  F021         	goto	u14081
 10534  00431A  EF91  F021         	goto	u14080
 10535  00431E                     u14081:
 10536  00431E  EFF6  F021         	goto	l12005
 10537  004322                     u14080:
 10538  004322                     l11997:
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 10542  004322  0E00               	movlw	0
 10543  004324  6F86               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS& (0+255),b
 10544                           
 10545                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 10546  004326  EF0B  F022         	goto	l12007
 10547  00432A                     l11999:
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 10551  00432A  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10552  00432E  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10553  004332  50DF               	movf	indf2,w,c
 10554  004334  0B07               	andlw	7
 10555  004336  6F80               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10556  004338  0E01               	movlw	1
 10557  00433A  6F81               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 10558  00433C  2B80               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10559  00433E  EFA3  F021         	goto	u14094
 10560  004342                     u14095:
 10561  004342  90D8               	bcf	status,0,c
 10562  004344  3781               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 10563  004346                     u14094:
 10564  004346  2F80               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10565  004348  EFA1  F021         	goto	u14095
 10566  00434C  0100               	movlb	0	; () banked
 10567  00434E  5181               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 10568  004350  0AFF               	xorlw	255
 10569  004352  6F82               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 10570  004354  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10571  004358  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10572  00435C  30DF               	rrcf	indf2,w,c
 10573  00435E  32E8               	rrcf	wreg,f,c
 10574  004360  32E8               	rrcf	wreg,f,c
 10575  004362  0B07               	andlw	7
 10576  004364  6F83               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
 10577  004366  5183               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
 10578  004368  0D02               	mullw	2
 10579  00436A  0EB3               	movlw	low _lat_registers
 10580  00436C  24F3               	addwf	243,w,c
 10581  00436E  6ED9               	movwf	fsr2l,c
 10582  004370  0E01               	movlw	high _lat_registers
 10583  004372  20F4               	addwfc	prodh,w,c
 10584  004374  6EDA               	movwf	fsr2h,c
 10585  004376  CFDE F084          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
 10586  00437A  CFDD F085          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
 10587  00437E  C084  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
 10588  004382  C085  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
 10589  004386  5182               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 10590  004388  16DF               	andwf	indf2,f,c
 10591                           
 10592                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 10593  00438A  EF0B  F022         	goto	l12007
 10594  00438E                     l12001:
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 10598  00438E  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10599  004392  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10600  004396  50DF               	movf	indf2,w,c
 10601  004398  0B07               	andlw	7
 10602  00439A  6F80               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10603  00439C  0E01               	movlw	1
 10604  00439E  6F81               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 10605  0043A0  2B80               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10606  0043A2  EFD5  F021         	goto	u14104
 10607  0043A6                     u14105:
 10608  0043A6  90D8               	bcf	status,0,c
 10609  0043A8  3781               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 10610  0043AA                     u14104:
 10611  0043AA  2F80               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10612  0043AC  EFD3  F021         	goto	u14105
 10613  0043B0  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10614  0043B4  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10615  0043B8  30DF               	rrcf	indf2,w,c
 10616  0043BA  32E8               	rrcf	wreg,f,c
 10617  0043BC  32E8               	rrcf	wreg,f,c
 10618  0043BE  0B07               	andlw	7
 10619  0043C0  0100               	movlb	0	; () banked
 10620  0043C2  6F82               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 10621  0043C4  5182               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 10622  0043C6  0D02               	mullw	2
 10623  0043C8  0EB3               	movlw	low _lat_registers
 10624  0043CA  24F3               	addwf	243,w,c
 10625  0043CC  6ED9               	movwf	fsr2l,c
 10626  0043CE  0E01               	movlw	high _lat_registers
 10627  0043D0  20F4               	addwfc	prodh,w,c
 10628  0043D2  6EDA               	movwf	fsr2h,c
 10629  0043D4  CFDE F083          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
 10630  0043D8  CFDD F084          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
 10631  0043DC  C083  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
 10632  0043E0  C084  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
 10633  0043E4  5181               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 10634  0043E6  12DF               	iorwf	indf2,f,c
 10635                           
 10636                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 10637  0043E8  EF0B  F022         	goto	l12007
 10638  0043EC                     l12005:
 10639                           
 10640                           ; BSR set to: 0
 10641  0043EC  502C               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
 10642  0043EE  6F80               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10643  0043F0  6B81               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 10644                           
 10645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10646                           ; Switch size 1, requested type "simple"
 10647                           ; Number of cases is 1, Range of values is 0 to 0
 10648                           ; switch strategies available:
 10649                           ; Name         Instructions Cycles
 10650                           ; simple_byte            4     3 (average)
 10651                           ;	Chosen strategy is simple_byte
 10652  0043F2  5181               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 10653  0043F4  0A00               	xorlw	0	; case 0
 10654  0043F6  B4D8               	btfsc	status,2,c
 10655  0043F8  EF00  F022         	goto	l14071
 10656  0043FC  EF91  F021         	goto	l11997
 10657  004400                     l14071:
 10658                           
 10659                           ; BSR set to: 0
 10660                           ; Switch size 1, requested type "simple"
 10661                           ; Number of cases is 2, Range of values is 0 to 1
 10662                           ; switch strategies available:
 10663                           ; Name         Instructions Cycles
 10664                           ; simple_byte            7     4 (average)
 10665                           ;	Chosen strategy is simple_byte
 10666  004400  5180               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
 10667  004402  0A00               	xorlw	0	; case 0
 10668  004404  B4D8               	btfsc	status,2,c
 10669  004406  EF95  F021         	goto	l11999
 10670  00440A  0A01               	xorlw	1	; case 1
 10671  00440C  B4D8               	btfsc	status,2,c
 10672  00440E  EFC7  F021         	goto	l12001
 10673  004412  EF91  F021         	goto	l11997
 10674  004416                     l12007:
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 10678  004416  5186               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS& (0+255),w,b
 10679  004418                     
 10680                           ; BSR set to: 0
 10681  004418  0012               	return		;funcret
 10682  00441A                     __end_of_GPIO_Pin_Write_Logic:
 10683                           	callstack 0
 10684                           
 10685 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
 10686 ;; Defined at:
 10687 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  _pin_config     2   41[COMRAM] PTR const struct .
 10690 ;;		 -> selector(1), pind0(1), pind1(1), pind2(1), 
 10691 ;;		 -> lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), CCP1_Obj(10), 
 10692 ;;		 -> W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), 
 10693 ;;		 -> W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  ERRORSTATUS     1   43[COMRAM] unsigned char 
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      unsigned char 
 10698 ;; Registers used:
 10699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;Total ram usage:        9 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:   10
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_GPIO_Pin_Initialize
 10716 ;;		_interrupt_RBx_pin_init
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text45
 10721  00406E                     __ptext45:
 10722                           	callstack 0
 10723  00406E                     _GPIO_Pin_Direction_Initialize:
 10724                           	callstack 17
 10725  00406E                     
 10726                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
 10727  00406E  0E01               	movlw	1
 10728  004070  6E2C               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
 10729  004072                     
 10730                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 10731  004072  502A               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
 10732  004074  102B               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
 10733  004076  B4D8               	btfsc	status,2,c
 10734  004078  EF40  F020         	goto	u15021
 10735  00407C  EF42  F020         	goto	u15020
 10736  004080                     u15021:
 10737  004080  EF52  F020         	goto	l12591
 10738  004084                     u15020:
 10739  004084  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10740  004088  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10741  00408C  50DF               	movf	indf2,w,c
 10742  00408E  0B07               	andlw	7
 10743  004090  0100               	movlb	0	; () banked
 10744  004092  6F80               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
 10745  004094  0E07               	movlw	7
 10746  004096  6580               	cpfsgt	??_GPIO_Pin_Direction_Initialize& (0+255),b
 10747  004098  EF50  F020         	goto	u15031
 10748  00409C  EF52  F020         	goto	u15030
 10749  0040A0                     u15031:
 10750  0040A0  EFB7  F020         	goto	l12599
 10751  0040A4                     u15030:
 10752  0040A4                     l12591:
 10753                           
 10754                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 10755  0040A4  0E00               	movlw	0
 10756  0040A6  6E2C               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
 10757                           
 10758                           ;MCAL/GPIO/hal_gpio.c: 31:     }
 10759  0040A8  EFD8  F020         	goto	l12601
 10760  0040AC                     l12593:
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
 10764  0040AC  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10765  0040B0  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10766  0040B4  50DF               	movf	indf2,w,c
 10767  0040B6  0B07               	andlw	7
 10768  0040B8  6F80               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
 10769  0040BA  0E01               	movlw	1
 10770  0040BC  6F81               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
 10771  0040BE  2B80               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
 10772  0040C0  EF64  F020         	goto	u15044
 10773  0040C4                     u15045:
 10774  0040C4  90D8               	bcf	status,0,c
 10775  0040C6  3781               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
 10776  0040C8                     u15044:
 10777  0040C8  2F80               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
 10778  0040CA  EF62  F020         	goto	u15045
 10779  0040CE  0100               	movlb	0	; () banked
 10780  0040D0  5181               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
 10781  0040D2  0AFF               	xorlw	255
 10782  0040D4  6F82               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
 10783  0040D6  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10784  0040DA  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10785  0040DE  30DF               	rrcf	indf2,w,c
 10786  0040E0  32E8               	rrcf	wreg,f,c
 10787  0040E2  32E8               	rrcf	wreg,f,c
 10788  0040E4  0B07               	andlw	7
 10789  0040E6  6F83               	movwf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),b
 10790  0040E8  5183               	movf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),w,b
 10791  0040EA  0D02               	mullw	2
 10792  0040EC  0EBD               	movlw	low _tris_registers
 10793  0040EE  24F3               	addwf	243,w,c
 10794  0040F0  6ED9               	movwf	fsr2l,c
 10795  0040F2  0E01               	movlw	high _tris_registers
 10796  0040F4  20F4               	addwfc	prodh,w,c
 10797  0040F6  6EDA               	movwf	fsr2h,c
 10798  0040F8  CFDE F084          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
 10799  0040FC  CFDD F085          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
 10800  004100  C084  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
 10801  004104  C085  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
 10802  004108  5182               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
 10803  00410A  16DF               	andwf	indf2,f,c
 10804                           
 10805                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
 10806  00410C  EFD8  F020         	goto	l12601
 10807  004110                     l12595:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
 10811  004110  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10812  004114  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10813  004118  50DF               	movf	indf2,w,c
 10814  00411A  0B07               	andlw	7
 10815  00411C  6F80               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
 10816  00411E  0E01               	movlw	1
 10817  004120  6F81               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
 10818  004122  2B80               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
 10819  004124  EF96  F020         	goto	u15054
 10820  004128                     u15055:
 10821  004128  90D8               	bcf	status,0,c
 10822  00412A  3781               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
 10823  00412C                     u15054:
 10824  00412C  2F80               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
 10825  00412E  EF94  F020         	goto	u15055
 10826  004132  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10827  004136  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10828  00413A  30DF               	rrcf	indf2,w,c
 10829  00413C  32E8               	rrcf	wreg,f,c
 10830  00413E  32E8               	rrcf	wreg,f,c
 10831  004140  0B07               	andlw	7
 10832  004142  0100               	movlb	0	; () banked
 10833  004144  6F82               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
 10834  004146  5182               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
 10835  004148  0D02               	mullw	2
 10836  00414A  0EBD               	movlw	low _tris_registers
 10837  00414C  24F3               	addwf	243,w,c
 10838  00414E  6ED9               	movwf	fsr2l,c
 10839  004150  0E01               	movlw	high _tris_registers
 10840  004152  20F4               	addwfc	prodh,w,c
 10841  004154  6EDA               	movwf	fsr2h,c
 10842  004156  CFDE F083          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
 10843  00415A  CFDD F084          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
 10844  00415E  C083  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
 10845  004162  C084  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
 10846  004166  5181               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
 10847  004168  12DF               	iorwf	indf2,f,c
 10848                           
 10849                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
 10850  00416A  EFD8  F020         	goto	l12601
 10851  00416E                     l12599:
 10852                           
 10853                           ; BSR set to: 0
 10854  00416E  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
 10855  004172  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
 10856  004176  BCDF               	btfsc	indf2,6,c
 10857  004178  EFC0  F020         	goto	u15061
 10858  00417C  EFC3  F020         	goto	u15060
 10859  004180                     u15061:
 10860  004180  0E01               	movlw	1
 10861  004182  EFC4  F020         	goto	u15070
 10862  004186                     u15060:
 10863  004186  0E00               	movlw	0
 10864  004188                     u15070:
 10865  004188  6F80               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
 10866  00418A  6B81               	clrf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
 10867                           
 10868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10869                           ; Switch size 1, requested type "simple"
 10870                           ; Number of cases is 1, Range of values is 0 to 0
 10871                           ; switch strategies available:
 10872                           ; Name         Instructions Cycles
 10873                           ; simple_byte            4     3 (average)
 10874                           ;	Chosen strategy is simple_byte
 10875  00418C  5181               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
 10876  00418E  0A00               	xorlw	0	; case 0
 10877  004190  B4D8               	btfsc	status,2,c
 10878  004192  EFCD  F020         	goto	l14073
 10879  004196  EF52  F020         	goto	l12591
 10880  00419A                     l14073:
 10881                           
 10882                           ; BSR set to: 0
 10883                           ; Switch size 1, requested type "simple"
 10884                           ; Number of cases is 2, Range of values is 0 to 1
 10885                           ; switch strategies available:
 10886                           ; Name         Instructions Cycles
 10887                           ; simple_byte            7     4 (average)
 10888                           ;	Chosen strategy is simple_byte
 10889  00419A  5180               	movf	??_GPIO_Pin_Direction_Initialize& (0+255),w,b
 10890  00419C  0A00               	xorlw	0	; case 0
 10891  00419E  B4D8               	btfsc	status,2,c
 10892  0041A0  EF56  F020         	goto	l12593
 10893  0041A4  0A01               	xorlw	1	; case 1
 10894  0041A6  B4D8               	btfsc	status,2,c
 10895  0041A8  EF88  F020         	goto	l12595
 10896  0041AC  EF52  F020         	goto	l12591
 10897  0041B0                     l12601:
 10898                           
 10899                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
 10900  0041B0  502C               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
 10901  0041B2  0012               	return		;funcret
 10902  0041B4                     __end_of_GPIO_Pin_Direction_Initialize:
 10903                           	callstack 0
 10904                           
 10905 ;; *************** function _EUSART_Async_Init *****************
 10906 ;; Defined at:
 10907 ;;		line 42 in file "MCAL/EUSART/mcal_EUSART.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  _eusart_obj     2   72[BANK0 ] PTR const struct .
 10910 ;;		 -> _uart_obj(12), 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  ret_val         1   74[BANK0 ] unsigned char 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      unsigned char 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10925 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;Total ram usage:        3 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:   12
 10929 ;; This function calls:
 10930 ;;		_async_Rx_config
 10931 ;;		_async_Tx_config
 10932 ;;		_async_config_baud_rate_gen
 10933 ;; This function is called by:
 10934 ;;		_application_intialize
 10935 ;;		_Bluetooth_Init
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text46
 10940  005D48                     __ptext46:
 10941                           	callstack 0
 10942  005D48                     _EUSART_Async_Init:
 10943                           	callstack 17
 10944  005D48                     
 10945                           ;MCAL/EUSART/mcal_EUSART.c: 46:     if(((void*)0) == _eusart_obj)
 10946  005D48  0100               	movlb	0	; () banked
 10947  005D4A  51C8               	movf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
 10948  005D4C  11C9               	iorwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
 10949  005D4E  A4D8               	btfss	status,2,c
 10950  005D50  EFAC  F02E         	goto	u15461
 10951  005D54  EFAE  F02E         	goto	u15460
 10952  005D58                     u15461:
 10953  005D58  EFB0  F02E         	goto	l609
 10954  005D5C                     u15460:
 10955  005D5C                     
 10956                           ; BSR set to: 0
 10957                           ;MCAL/EUSART/mcal_EUSART.c: 49:     }
 10958  005D5C  EFD1  F02E         	goto	l611
 10959  005D60                     l609:
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;MCAL/EUSART/mcal_EUSART.c: 51:     {;MCAL/EUSART/mcal_EUSART.c: 53:         (RCSTAbits.
      +                          SPEN = 0 );
 10963  005D60  9EAB               	bcf	171,7,c	;volatile
 10964  005D62                     
 10965                           ; BSR set to: 0
 10966                           ;MCAL/EUSART/mcal_EUSART.c: 56:         ret_val = async_config_baud_rate_gen(_eusart_obj
      +                          );
 10967  005D62  C0C8  F0BB         	movff	EUSART_Async_Init@_eusart_obj,async_config_baud_rate_gen@_eusart_obj
 10968  005D66  C0C9  F0BC         	movff	EUSART_Async_Init@_eusart_obj+1,async_config_baud_rate_gen@_eusart_obj+1
 10969  005D6A  EC38  F015         	call	_async_config_baud_rate_gen	;wreg free
 10970  005D6E  0100               	movlb	0	; () banked
 10971  005D70  6FCA               	movwf	EUSART_Async_Init@ret_val& (0+255),b
 10972  005D72                     
 10973                           ; BSR set to: 0
 10974                           ;MCAL/EUSART/mcal_EUSART.c: 59:         (TXSTA1bits.SYNC = 0);
 10975  005D72  98AC               	bcf	172,4,c	;volatile
 10976  005D74                     
 10977                           ; BSR set to: 0
 10978                           ;MCAL/EUSART/mcal_EUSART.c: 62:         TRISCbits.RC6 = GPIO_DIRECTION_INPUT ;
 10979  005D74  8C94               	bsf	148,6,c	;volatile
 10980                           
 10981                           ;MCAL/EUSART/mcal_EUSART.c: 64:         ret_val &= async_Tx_config(&(_eusart_obj->tx_con
      +                          fig));
 10982  005D76  0E02               	movlw	2
 10983  005D78  25C8               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
 10984  005D7A  6E2A               	movwf	async_Tx_config@_tx_obj^0,c
 10985  005D7C  0E00               	movlw	0
 10986  005D7E  21C9               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
 10987  005D80  6E2B               	movwf	(async_Tx_config@_tx_obj+1)^0,c
 10988  005D82  EC93  F02A         	call	_async_Tx_config	;wreg free
 10989  005D86  0100               	movlb	0	; () banked
 10990  005D88  17CA               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
 10991  005D8A                     
 10992                           ; BSR set to: 0
 10993                           ;MCAL/EUSART/mcal_EUSART.c: 67:         TRISCbits.RC7 = GPIO_DIRECTION_INPUT ;
 10994  005D8A  8E94               	bsf	148,7,c	;volatile
 10995                           
 10996                           ;MCAL/EUSART/mcal_EUSART.c: 69:         ret_val &= async_Rx_config(&(_eusart_obj->rx_con
      +                          fig));
 10997  005D8C  0E03               	movlw	3
 10998  005D8E  25C8               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
 10999  005D90  6F80               	movwf	async_Rx_config@_rx_obj& (0+255),b
 11000  005D92  0E00               	movlw	0
 11001  005D94  21C9               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
 11002  005D96  6F81               	movwf	(async_Rx_config@_rx_obj+1)& (0+255),b
 11003  005D98  EC98  F028         	call	_async_Rx_config	;wreg free
 11004  005D9C  0100               	movlb	0	; () banked
 11005  005D9E  17CA               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
 11006  005DA0                     
 11007                           ; BSR set to: 0
 11008                           ;MCAL/EUSART/mcal_EUSART.c: 72:         (RCSTAbits.SPEN = 1 );
 11009  005DA0  8EAB               	bsf	171,7,c	;volatile
 11010  005DA2                     l611:
 11011                           
 11012                           ; BSR set to: 0
 11013  005DA2  0012               	return		;funcret
 11014  005DA4                     __end_of_EUSART_Async_Init:
 11015                           	callstack 0
 11016                           
 11017 ;; *************** function _async_config_baud_rate_gen *****************
 11018 ;; Defined at:
 11019 ;;		line 564 in file "MCAL/EUSART/mcal_EUSART.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  _eusart_obj     2   59[BANK0 ] PTR const struct .
 11022 ;;		 -> _uart_obj(12), 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  Baudrate_tem    4   64[BANK0 ] float 
 11025 ;;  ret_val         1   63[BANK0 ] unsigned char 
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      unsigned char 
 11028 ;; Registers used:
 11029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11036 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;Total ram usage:       13 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:   11
 11042 ;; This function calls:
 11043 ;;		___fladd
 11044 ;;		___fldiv
 11045 ;;		___fltol
 11046 ;;		___xxtofl
 11047 ;; This function is called by:
 11048 ;;		_EUSART_Async_Init
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text47
 11053  002A70                     __ptext47:
 11054                           	callstack 0
 11055  002A70                     _async_config_baud_rate_gen:
 11056                           	callstack 17
 11057  002A70                     
 11058                           ;MCAL/EUSART/mcal_EUSART.c: 564: static __attribute__((inline)) Std_ReturnType async_con
      +                          fig_baud_rate_gen(const uart_config_st *_eusart_obj);MCAL/EUSART/mcal_EUSART.c: 565: {;M
      +                          CAL/EUSART/mcal_EUSART.c: 567:     Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
 11059  002A70  0E01               	movlw	1
 11060  002A72  0100               	movlb	0	; () banked
 11061  002A74  6FBF               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
 11062  002A76                     
 11063                           ; BSR set to: 0
 11064                           ;MCAL/EUSART/mcal_EUSART.c: 569:     if(((void*)0) == _eusart_obj)
 11065  002A76  51BB               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
 11066  002A78  11BC               	iorwf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
 11067  002A7A  A4D8               	btfss	status,2,c
 11068  002A7C  EF42  F015         	goto	u15401
 11069  002A80  EF44  F015         	goto	u15400
 11070  002A84                     u15401:
 11071  002A84  EF48  F015         	goto	l12829
 11072  002A88                     u15400:
 11073  002A88                     
 11074                           ; BSR set to: 0
 11075                           ;MCAL/EUSART/mcal_EUSART.c: 570:     {;MCAL/EUSART/mcal_EUSART.c: 571:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
 11076  002A88  0E00               	movlw	0
 11077  002A8A  6FBF               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
 11078                           
 11079                           ;MCAL/EUSART/mcal_EUSART.c: 572:     }
 11080  002A8C  EF12  F017         	goto	l12855
 11081  002A90                     l12829:
 11082                           
 11083                           ; BSR set to: 0
 11084                           ;MCAL/EUSART/mcal_EUSART.c: 574:     {;MCAL/EUSART/mcal_EUSART.c: 575:         float32 B
      +                          audrate_temp=0;
 11085  002A90  0E00               	movlw	0
 11086  002A92  6FC0               	movwf	async_config_baud_rate_gen@Baudrate_temp& (0+255),b
 11087  002A94  0E00               	movlw	0
 11088  002A96  6FC1               	movwf	(async_config_baud_rate_gen@Baudrate_temp+1)& (0+255),b
 11089  002A98  0E00               	movlw	0
 11090  002A9A  6FC2               	movwf	(async_config_baud_rate_gen@Baudrate_temp+2)& (0+255),b
 11091  002A9C  0E00               	movlw	0
 11092  002A9E  6FC3               	movwf	(async_config_baud_rate_gen@Baudrate_temp+3)& (0+255),b
 11093                           
 11094                           ;MCAL/EUSART/mcal_EUSART.c: 576:         switch(_eusart_obj->baud_rate_config)
 11095  002AA0  EFCE  F016         	goto	l12851
 11096  002AA4                     l752:
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;MCAL/EUSART/mcal_EUSART.c: 579:                 TXSTAbits.BRGH = 0 ;
 11100  002AA4  94AC               	bcf	172,2,c	;volatile
 11101                           
 11102                           ;MCAL/EUSART/mcal_EUSART.c: 580:                 BAUDCONbits.BRG16 = 0 ;
 11103  002AA6  96B8               	bcf	184,3,c	;volatile
 11104  002AA8                     
 11105                           ; BSR set to: 0
 11106                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/64)-1;
 11107  002AA8  C0BB  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
 11108  002AAC  C0BC  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
 11109  002AB0  CFDE F0BD          	movff	postinc2,??_async_config_baud_rate_gen
 11110  002AB4  CFDD F0BE          	movff	postdec2,??_async_config_baud_rate_gen+1
 11111  002AB8  C0BD  F084         	movff	??_async_config_baud_rate_gen,___xxtofl@val
 11112  002ABC  C0BE  F085         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
 11113  002AC0  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
 11114  002AC2  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
 11115  002AC4  0E00               	movlw	0
 11116  002AC6  EC64  F01C         	call	___xxtofl
 11117  002ACA  C084  F096         	movff	?___xxtofl,___fldiv@a
 11118  002ACE  C085  F097         	movff	?___xxtofl+1,___fldiv@a+1
 11119  002AD2  C086  F098         	movff	?___xxtofl+2,___fldiv@a+2
 11120  002AD6  C087  F099         	movff	?___xxtofl+3,___fldiv@a+3
 11121  002ADA  0E00               	movlw	0
 11122  002ADC  0100               	movlb	0	; () banked
 11123  002ADE  6F92               	movwf	___fldiv@b& (0+255),b
 11124  002AE0  0E1B               	movlw	27
 11125  002AE2  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 11126  002AE4  0EB7               	movlw	183
 11127  002AE6  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 11128  002AE8  0E4B               	movlw	75
 11129  002AEA  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 11130  002AEC  EC14  F017         	call	___fldiv	;wreg free
 11131  002AF0  C092  F0C4         	movff	?___fldiv,_async_config_baud_rate_gen$5368
 11132  002AF4  C093  F0C5         	movff	?___fldiv+1,_async_config_baud_rate_gen$5368+1
 11133  002AF8  C094  F0C6         	movff	?___fldiv+2,_async_config_baud_rate_gen$5368+2
 11134  002AFC  C095  F0C7         	movff	?___fldiv+3,_async_config_baud_rate_gen$5368+3
 11135  002B00                     
 11136                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/64)-1;
 11137  002B00  0E00               	movlw	0
 11138  002B02  0100               	movlb	0	; () banked
 11139  002B04  6F96               	movwf	___fldiv@a& (0+255),b
 11140  002B06  0E00               	movlw	0
 11141  002B08  6F97               	movwf	(___fldiv@a+1)& (0+255),b
 11142  002B0A  0E80               	movlw	128
 11143  002B0C  6F98               	movwf	(___fldiv@a+2)& (0+255),b
 11144  002B0E  0E42               	movlw	66
 11145  002B10  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 11146  002B12  C0C4  F092         	movff	_async_config_baud_rate_gen$5368,___fldiv@b
 11147  002B16  C0C5  F093         	movff	_async_config_baud_rate_gen$5368+1,___fldiv@b+1
 11148  002B1A  C0C6  F094         	movff	_async_config_baud_rate_gen$5368+2,___fldiv@b+2
 11149  002B1E  C0C7  F095         	movff	_async_config_baud_rate_gen$5368+3,___fldiv@b+3
 11150  002B22  EC14  F017         	call	___fldiv	;wreg free
 11151  002B26  C092  F0AB         	movff	?___fldiv,___fladd@b
 11152  002B2A  C093  F0AC         	movff	?___fldiv+1,___fladd@b+1
 11153  002B2E  C094  F0AD         	movff	?___fldiv+2,___fladd@b+2
 11154  002B32  C095  F0AE         	movff	?___fldiv+3,___fladd@b+3
 11155  002B36  0E00               	movlw	0
 11156  002B38  0100               	movlb	0	; () banked
 11157  002B3A  6FAF               	movwf	___fladd@a& (0+255),b
 11158  002B3C  0E00               	movlw	0
 11159  002B3E  6FB0               	movwf	(___fladd@a+1)& (0+255),b
 11160  002B40  0E80               	movlw	128
 11161  002B42  6FB1               	movwf	(___fladd@a+2)& (0+255),b
 11162  002B44  0EBF               	movlw	191
 11163  002B46  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 11164  002B48  ECAB  F00E         	call	___fladd	;wreg free
 11165  002B4C  C0AB  F0C0         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
 11166  002B50  C0AC  F0C1         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
 11167  002B54  C0AD  F0C2         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
 11168  002B58  C0AE  F0C3         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
 11169                           
 11170                           ;MCAL/EUSART/mcal_EUSART.c: 582:                 break;
 11171  002B5C  EFF1  F016         	goto	l12853
 11172  002B60                     l754:
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;MCAL/EUSART/mcal_EUSART.c: 584:                 TXSTAbits.BRGH = 1 ;
 11176  002B60  84AC               	bsf	172,2,c	;volatile
 11177                           
 11178                           ;MCAL/EUSART/mcal_EUSART.c: 585:                 BAUDCONbits.BRG16 = 0 ;
 11179  002B62  96B8               	bcf	184,3,c	;volatile
 11180  002B64                     
 11181                           ; BSR set to: 0
 11182                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
 11183  002B64  C0BB  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
 11184  002B68  C0BC  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
 11185  002B6C  CFDE F0BD          	movff	postinc2,??_async_config_baud_rate_gen
 11186  002B70  CFDD F0BE          	movff	postdec2,??_async_config_baud_rate_gen+1
 11187  002B74  C0BD  F084         	movff	??_async_config_baud_rate_gen,___xxtofl@val
 11188  002B78  C0BE  F085         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
 11189  002B7C  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
 11190  002B7E  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
 11191  002B80  0E00               	movlw	0
 11192  002B82  EC64  F01C         	call	___xxtofl
 11193  002B86  C084  F096         	movff	?___xxtofl,___fldiv@a
 11194  002B8A  C085  F097         	movff	?___xxtofl+1,___fldiv@a+1
 11195  002B8E  C086  F098         	movff	?___xxtofl+2,___fldiv@a+2
 11196  002B92  C087  F099         	movff	?___xxtofl+3,___fldiv@a+3
 11197  002B96  0E00               	movlw	0
 11198  002B98  0100               	movlb	0	; () banked
 11199  002B9A  6F92               	movwf	___fldiv@b& (0+255),b
 11200  002B9C  0E1B               	movlw	27
 11201  002B9E  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 11202  002BA0  0EB7               	movlw	183
 11203  002BA2  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 11204  002BA4  0E4B               	movlw	75
 11205  002BA6  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 11206  002BA8  EC14  F017         	call	___fldiv	;wreg free
 11207  002BAC  C092  F0C4         	movff	?___fldiv,_async_config_baud_rate_gen$5368
 11208  002BB0  C093  F0C5         	movff	?___fldiv+1,_async_config_baud_rate_gen$5368+1
 11209  002BB4  C094  F0C6         	movff	?___fldiv+2,_async_config_baud_rate_gen$5368+2
 11210  002BB8  C095  F0C7         	movff	?___fldiv+3,_async_config_baud_rate_gen$5368+3
 11211  002BBC                     
 11212                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
 11213  002BBC  0E00               	movlw	0
 11214  002BBE  0100               	movlb	0	; () banked
 11215  002BC0  6F96               	movwf	___fldiv@a& (0+255),b
 11216  002BC2  0E00               	movlw	0
 11217  002BC4  6F97               	movwf	(___fldiv@a+1)& (0+255),b
 11218  002BC6  0E80               	movlw	128
 11219  002BC8  6F98               	movwf	(___fldiv@a+2)& (0+255),b
 11220  002BCA  0E41               	movlw	65
 11221  002BCC  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 11222  002BCE  C0C4  F092         	movff	_async_config_baud_rate_gen$5368,___fldiv@b
 11223  002BD2  C0C5  F093         	movff	_async_config_baud_rate_gen$5368+1,___fldiv@b+1
 11224  002BD6  C0C6  F094         	movff	_async_config_baud_rate_gen$5368+2,___fldiv@b+2
 11225  002BDA  C0C7  F095         	movff	_async_config_baud_rate_gen$5368+3,___fldiv@b+3
 11226  002BDE  EC14  F017         	call	___fldiv	;wreg free
 11227  002BE2  C092  F0AB         	movff	?___fldiv,___fladd@b
 11228  002BE6  C093  F0AC         	movff	?___fldiv+1,___fladd@b+1
 11229  002BEA  C094  F0AD         	movff	?___fldiv+2,___fladd@b+2
 11230  002BEE  C095  F0AE         	movff	?___fldiv+3,___fladd@b+3
 11231  002BF2  0E00               	movlw	0
 11232  002BF4  0100               	movlb	0	; () banked
 11233  002BF6  6FAF               	movwf	___fladd@a& (0+255),b
 11234  002BF8  0E00               	movlw	0
 11235  002BFA  6FB0               	movwf	(___fladd@a+1)& (0+255),b
 11236  002BFC  0E80               	movlw	128
 11237  002BFE  6FB1               	movwf	(___fladd@a+2)& (0+255),b
 11238  002C00  0EBF               	movlw	191
 11239  002C02  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 11240  002C04  ECAB  F00E         	call	___fladd	;wreg free
 11241  002C08  C0AB  F0C0         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
 11242  002C0C  C0AC  F0C1         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
 11243  002C10  C0AD  F0C2         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
 11244  002C14  C0AE  F0C3         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
 11245                           
 11246                           ;MCAL/EUSART/mcal_EUSART.c: 587:                 break ;
 11247  002C18  EFF1  F016         	goto	l12853
 11248  002C1C                     l755:
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;MCAL/EUSART/mcal_EUSART.c: 589:                 TXSTAbits.BRGH = 0 ;
 11252  002C1C  94AC               	bcf	172,2,c	;volatile
 11253                           
 11254                           ;MCAL/EUSART/mcal_EUSART.c: 590:                 BAUDCONbits.BRG16 = 1 ;
 11255  002C1E  86B8               	bsf	184,3,c	;volatile
 11256  002C20                     
 11257                           ; BSR set to: 0
 11258                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
 11259  002C20  C0BB  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
 11260  002C24  C0BC  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
 11261  002C28  CFDE F0BD          	movff	postinc2,??_async_config_baud_rate_gen
 11262  002C2C  CFDD F0BE          	movff	postdec2,??_async_config_baud_rate_gen+1
 11263  002C30  C0BD  F084         	movff	??_async_config_baud_rate_gen,___xxtofl@val
 11264  002C34  C0BE  F085         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
 11265  002C38  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
 11266  002C3A  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
 11267  002C3C  0E00               	movlw	0
 11268  002C3E  EC64  F01C         	call	___xxtofl
 11269  002C42  C084  F096         	movff	?___xxtofl,___fldiv@a
 11270  002C46  C085  F097         	movff	?___xxtofl+1,___fldiv@a+1
 11271  002C4A  C086  F098         	movff	?___xxtofl+2,___fldiv@a+2
 11272  002C4E  C087  F099         	movff	?___xxtofl+3,___fldiv@a+3
 11273  002C52  0E00               	movlw	0
 11274  002C54  0100               	movlb	0	; () banked
 11275  002C56  6F92               	movwf	___fldiv@b& (0+255),b
 11276  002C58  0E1B               	movlw	27
 11277  002C5A  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 11278  002C5C  0EB7               	movlw	183
 11279  002C5E  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 11280  002C60  0E4B               	movlw	75
 11281  002C62  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 11282  002C64  EC14  F017         	call	___fldiv	;wreg free
 11283  002C68  C092  F0C4         	movff	?___fldiv,_async_config_baud_rate_gen$5368
 11284  002C6C  C093  F0C5         	movff	?___fldiv+1,_async_config_baud_rate_gen$5368+1
 11285  002C70  C094  F0C6         	movff	?___fldiv+2,_async_config_baud_rate_gen$5368+2
 11286  002C74  C095  F0C7         	movff	?___fldiv+3,_async_config_baud_rate_gen$5368+3
 11287  002C78                     
 11288                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/16)-1;
 11289  002C78  0E00               	movlw	0
 11290  002C7A  0100               	movlb	0	; () banked
 11291  002C7C  6F96               	movwf	___fldiv@a& (0+255),b
 11292  002C7E  0E00               	movlw	0
 11293  002C80  6F97               	movwf	(___fldiv@a+1)& (0+255),b
 11294  002C82  0E80               	movlw	128
 11295  002C84  6F98               	movwf	(___fldiv@a+2)& (0+255),b
 11296  002C86  0E41               	movlw	65
 11297  002C88  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 11298  002C8A  C0C4  F092         	movff	_async_config_baud_rate_gen$5368,___fldiv@b
 11299  002C8E  C0C5  F093         	movff	_async_config_baud_rate_gen$5368+1,___fldiv@b+1
 11300  002C92  C0C6  F094         	movff	_async_config_baud_rate_gen$5368+2,___fldiv@b+2
 11301  002C96  C0C7  F095         	movff	_async_config_baud_rate_gen$5368+3,___fldiv@b+3
 11302  002C9A  EC14  F017         	call	___fldiv	;wreg free
 11303  002C9E  C092  F0AB         	movff	?___fldiv,___fladd@b
 11304  002CA2  C093  F0AC         	movff	?___fldiv+1,___fladd@b+1
 11305  002CA6  C094  F0AD         	movff	?___fldiv+2,___fladd@b+2
 11306  002CAA  C095  F0AE         	movff	?___fldiv+3,___fladd@b+3
 11307  002CAE  0E00               	movlw	0
 11308  002CB0  0100               	movlb	0	; () banked
 11309  002CB2  6FAF               	movwf	___fladd@a& (0+255),b
 11310  002CB4  0E00               	movlw	0
 11311  002CB6  6FB0               	movwf	(___fladd@a+1)& (0+255),b
 11312  002CB8  0E80               	movlw	128
 11313  002CBA  6FB1               	movwf	(___fladd@a+2)& (0+255),b
 11314  002CBC  0EBF               	movlw	191
 11315  002CBE  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 11316  002CC0  ECAB  F00E         	call	___fladd	;wreg free
 11317  002CC4  C0AB  F0C0         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
 11318  002CC8  C0AC  F0C1         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
 11319  002CCC  C0AD  F0C2         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
 11320  002CD0  C0AE  F0C3         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
 11321                           
 11322                           ;MCAL/EUSART/mcal_EUSART.c: 592:                 break ;
 11323  002CD4  EFF1  F016         	goto	l12853
 11324  002CD8                     l756:
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;MCAL/EUSART/mcal_EUSART.c: 594:                 TXSTAbits.BRGH = 1 ;
 11328  002CD8  84AC               	bsf	172,2,c	;volatile
 11329                           
 11330                           ;MCAL/EUSART/mcal_EUSART.c: 595:                 BAUDCONbits.BRG16 = 1 ;
 11331  002CDA  86B8               	bsf	184,3,c	;volatile
 11332  002CDC                     
 11333                           ; BSR set to: 0
 11334                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/4)-1;
 11335  002CDC  C0BB  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
 11336  002CE0  C0BC  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
 11337  002CE4  CFDE F0BD          	movff	postinc2,??_async_config_baud_rate_gen
 11338  002CE8  CFDD F0BE          	movff	postdec2,??_async_config_baud_rate_gen+1
 11339  002CEC  C0BD  F084         	movff	??_async_config_baud_rate_gen,___xxtofl@val
 11340  002CF0  C0BE  F085         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
 11341  002CF4  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
 11342  002CF6  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
 11343  002CF8  0E00               	movlw	0
 11344  002CFA  EC64  F01C         	call	___xxtofl
 11345  002CFE  C084  F096         	movff	?___xxtofl,___fldiv@a
 11346  002D02  C085  F097         	movff	?___xxtofl+1,___fldiv@a+1
 11347  002D06  C086  F098         	movff	?___xxtofl+2,___fldiv@a+2
 11348  002D0A  C087  F099         	movff	?___xxtofl+3,___fldiv@a+3
 11349  002D0E  0E00               	movlw	0
 11350  002D10  0100               	movlb	0	; () banked
 11351  002D12  6F92               	movwf	___fldiv@b& (0+255),b
 11352  002D14  0E1B               	movlw	27
 11353  002D16  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 11354  002D18  0EB7               	movlw	183
 11355  002D1A  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 11356  002D1C  0E4B               	movlw	75
 11357  002D1E  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 11358  002D20  EC14  F017         	call	___fldiv	;wreg free
 11359  002D24  C092  F0C4         	movff	?___fldiv,_async_config_baud_rate_gen$5368
 11360  002D28  C093  F0C5         	movff	?___fldiv+1,_async_config_baud_rate_gen$5368+1
 11361  002D2C  C094  F0C6         	movff	?___fldiv+2,_async_config_baud_rate_gen$5368+2
 11362  002D30  C095  F0C7         	movff	?___fldiv+3,_async_config_baud_rate_gen$5368+3
 11363  002D34                     
 11364                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((24000000/((float32)_eu
      +                          sart_obj->uart_baud_rate_value))/4)-1;
 11365  002D34  0E00               	movlw	0
 11366  002D36  0100               	movlb	0	; () banked
 11367  002D38  6F96               	movwf	___fldiv@a& (0+255),b
 11368  002D3A  0E00               	movlw	0
 11369  002D3C  6F97               	movwf	(___fldiv@a+1)& (0+255),b
 11370  002D3E  0E80               	movlw	128
 11371  002D40  6F98               	movwf	(___fldiv@a+2)& (0+255),b
 11372  002D42  0E40               	movlw	64
 11373  002D44  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 11374  002D46  C0C4  F092         	movff	_async_config_baud_rate_gen$5368,___fldiv@b
 11375  002D4A  C0C5  F093         	movff	_async_config_baud_rate_gen$5368+1,___fldiv@b+1
 11376  002D4E  C0C6  F094         	movff	_async_config_baud_rate_gen$5368+2,___fldiv@b+2
 11377  002D52  C0C7  F095         	movff	_async_config_baud_rate_gen$5368+3,___fldiv@b+3
 11378  002D56  EC14  F017         	call	___fldiv	;wreg free
 11379  002D5A  C092  F0AB         	movff	?___fldiv,___fladd@b
 11380  002D5E  C093  F0AC         	movff	?___fldiv+1,___fladd@b+1
 11381  002D62  C094  F0AD         	movff	?___fldiv+2,___fladd@b+2
 11382  002D66  C095  F0AE         	movff	?___fldiv+3,___fladd@b+3
 11383  002D6A  0E00               	movlw	0
 11384  002D6C  0100               	movlb	0	; () banked
 11385  002D6E  6FAF               	movwf	___fladd@a& (0+255),b
 11386  002D70  0E00               	movlw	0
 11387  002D72  6FB0               	movwf	(___fladd@a+1)& (0+255),b
 11388  002D74  0E80               	movlw	128
 11389  002D76  6FB1               	movwf	(___fladd@a+2)& (0+255),b
 11390  002D78  0EBF               	movlw	191
 11391  002D7A  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 11392  002D7C  ECAB  F00E         	call	___fladd	;wreg free
 11393  002D80  C0AB  F0C0         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
 11394  002D84  C0AC  F0C1         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
 11395  002D88  C0AD  F0C2         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
 11396  002D8C  C0AE  F0C3         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
 11397                           
 11398                           ;MCAL/EUSART/mcal_EUSART.c: 597:                 break ;
 11399  002D90  EFF1  F016         	goto	l12853
 11400  002D94                     l12847:
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;MCAL/EUSART/mcal_EUSART.c: 599:                 ret_val = (Std_ReturnType) 0x00 ;
 11404  002D94  0E00               	movlw	0
 11405  002D96  6FBF               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
 11406                           
 11407                           ;MCAL/EUSART/mcal_EUSART.c: 600:                 break ;
 11408  002D98  EFF1  F016         	goto	l12853
 11409  002D9C                     l12851:
 11410                           
 11411                           ; BSR set to: 0
 11412  002D9C  EE20 F00B          	lfsr	2,11
 11413  002DA0  51BB               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
 11414  002DA2  26D9               	addwf	fsr2l,f,c
 11415  002DA4  51BC               	movf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
 11416  002DA6  22DA               	addwfc	fsr2h,f,c
 11417  002DA8  50DF               	movf	indf2,w,c
 11418  002DAA  6FBD               	movwf	??_async_config_baud_rate_gen& (0+255),b
 11419  002DAC  6BBE               	clrf	(??_async_config_baud_rate_gen+1)& (0+255),b
 11420                           
 11421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11422                           ; Switch size 1, requested type "simple"
 11423                           ; Number of cases is 1, Range of values is 0 to 0
 11424                           ; switch strategies available:
 11425                           ; Name         Instructions Cycles
 11426                           ; simple_byte            4     3 (average)
 11427                           ;	Chosen strategy is simple_byte
 11428  002DAE  51BE               	movf	(??_async_config_baud_rate_gen+1)& (0+255),w,b
 11429  002DB0  0A00               	xorlw	0	; case 0
 11430  002DB2  B4D8               	btfsc	status,2,c
 11431  002DB4  EFDE  F016         	goto	l14075
 11432  002DB8  EFCA  F016         	goto	l12847
 11433  002DBC                     l14075:
 11434                           
 11435                           ; BSR set to: 0
 11436                           ; Switch size 1, requested type "simple"
 11437                           ; Number of cases is 4, Range of values is 0 to 3
 11438                           ; switch strategies available:
 11439                           ; Name         Instructions Cycles
 11440                           ; simple_byte           13     7 (average)
 11441                           ;	Chosen strategy is simple_byte
 11442  002DBC  51BD               	movf	??_async_config_baud_rate_gen& (0+255),w,b
 11443  002DBE  0A00               	xorlw	0	; case 0
 11444  002DC0  B4D8               	btfsc	status,2,c
 11445  002DC2  EF52  F015         	goto	l752
 11446  002DC6  0A01               	xorlw	1	; case 1
 11447  002DC8  B4D8               	btfsc	status,2,c
 11448  002DCA  EFB0  F015         	goto	l754
 11449  002DCE  0A03               	xorlw	3	; case 2
 11450  002DD0  B4D8               	btfsc	status,2,c
 11451  002DD2  EF0E  F016         	goto	l755
 11452  002DD6  0A01               	xorlw	1	; case 3
 11453  002DD8  B4D8               	btfsc	status,2,c
 11454  002DDA  EF6C  F016         	goto	l756
 11455  002DDE  EFCA  F016         	goto	l12847
 11456  002DE2                     l12853:
 11457                           
 11458                           ;MCAL/EUSART/mcal_EUSART.c: 604:         SPBRG=(uint8)((uint32)Baudrate_temp);
 11459  002DE2  C0C0  F080         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
 11460  002DE6  C0C1  F081         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
 11461  002DEA  C0C2  F082         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
 11462  002DEE  C0C3  F083         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
 11463  002DF2  ECA1  F022         	call	___fltol	;wreg free
 11464  002DF6  0100               	movlb	0	; () banked
 11465  002DF8  5180               	movf	?___fltol& (0+255),w,b
 11466  002DFA  6EAF               	movwf	175,c	;volatile
 11467                           
 11468                           ;MCAL/EUSART/mcal_EUSART.c: 605:         SPBRGH=(uint8)(((uint32)Baudrate_temp)>>8);
 11469  002DFC  C0C0  F080         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
 11470  002E00  C0C1  F081         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
 11471  002E04  C0C2  F082         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
 11472  002E08  C0C3  F083         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
 11473  002E0C  ECA1  F022         	call	___fltol	;wreg free
 11474  002E10  0100               	movlb	0	; () banked
 11475  002E12  C081  F080         	movff	?___fltol+1,?___fltol
 11476  002E16  C082  F081         	movff	?___fltol+2,?___fltol+1
 11477  002E1A  C083  F082         	movff	?___fltol+3,?___fltol+2
 11478  002E1E  6B83               	clrf	(?___fltol+3)& (0+255),b
 11479  002E20  5180               	movf	?___fltol& (0+255),w,b
 11480  002E22  6EB0               	movwf	176,c	;volatile
 11481  002E24                     l12855:
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;MCAL/EUSART/mcal_EUSART.c: 608:     return ret_val ;
 11485  002E24  51BF               	movf	async_config_baud_rate_gen@ret_val& (0+255),w,b
 11486  002E26                     
 11487                           ; BSR set to: 0
 11488  002E26  0012               	return		;funcret
 11489  002E28                     __end_of_async_config_baud_rate_gen:
 11490                           	callstack 0
 11491                           
 11492 ;; *************** function ___xxtofl *****************
 11493 ;; Defined at:
 11494 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  sign            1    wreg     unsigned char 
 11497 ;;  val             4    4[BANK0 ] long 
 11498 ;; Auto vars:     Size  Location     Type
 11499 ;;  sign            1   12[BANK0 ] unsigned char 
 11500 ;;  arg             4   14[BANK0 ] unsigned long 
 11501 ;;  exp             1   13[BANK0 ] unsigned char 
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  4    4[BANK0 ] unsigned char 
 11504 ;; Registers used:
 11505 ;;		wreg, status,2, status,0
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11515 ;;Total ram usage:       14 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:   10
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_async_config_baud_rate_gen
 11522 ;;		_battery_level
 11523 ;;		_Servo_SetAngle
 11524 ;;		_CCP_PWM_Set_Duty
 11525 ;;		_CCP_PWM_Mode_Config
 11526 ;;		_I2C_Master_Mode_Clock_Configurations
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           	psect	text48
 11531  0038C8                     __ptext48:
 11532                           	callstack 0
 11533  0038C8                     ___xxtofl:
 11534                           	callstack 19
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;incstack = 0
 11538                           ;___xxtofl@sign stored from wreg
 11539  0038C8  0100               	movlb	0	; () banked
 11540  0038CA  6F8C               	movwf	___xxtofl@sign& (0+255),b
 11541  0038CC  0100               	movlb	0	; () banked
 11542  0038CE  518C               	movf	___xxtofl@sign& (0+255),w,b
 11543  0038D0  B4D8               	btfsc	status,2,c
 11544  0038D2  EF6D  F01C         	goto	u15081
 11545  0038D6  EF6F  F01C         	goto	u15080
 11546  0038DA                     u15081:
 11547  0038DA  EF91  F01C         	goto	l2417
 11548  0038DE                     u15080:
 11549  0038DE                     
 11550                           ; BSR set to: 0
 11551  0038DE  BF87               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 11552  0038E0  EF76  F01C         	goto	u15090
 11553  0038E4  EF74  F01C         	goto	u15091
 11554  0038E8                     u15091:
 11555  0038E8  EF91  F01C         	goto	l2417
 11556  0038EC                     u15090:
 11557  0038EC                     
 11558                           ; BSR set to: 0
 11559  0038EC  C084  F088         	movff	___xxtofl@val,??___xxtofl
 11560  0038F0  C085  F089         	movff	___xxtofl@val+1,??___xxtofl+1
 11561  0038F4  C086  F08A         	movff	___xxtofl@val+2,??___xxtofl+2
 11562  0038F8  C087  F08B         	movff	___xxtofl@val+3,??___xxtofl+3
 11563  0038FC  1F88               	comf	??___xxtofl& (0+255),f,b
 11564  0038FE  1F89               	comf	(??___xxtofl+1)& (0+255),f,b
 11565  003900  1F8A               	comf	(??___xxtofl+2)& (0+255),f,b
 11566  003902  1F8B               	comf	(??___xxtofl+3)& (0+255),f,b
 11567  003904  2B88               	incf	??___xxtofl& (0+255),f,b
 11568  003906  0E00               	movlw	0
 11569  003908  2389               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11570  00390A  238A               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11571  00390C  238B               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11572  00390E  C088  F08E         	movff	??___xxtofl,___xxtofl@arg
 11573  003912  C089  F08F         	movff	??___xxtofl+1,___xxtofl@arg+1
 11574  003916  C08A  F090         	movff	??___xxtofl+2,___xxtofl@arg+2
 11575  00391A  C08B  F091         	movff	??___xxtofl+3,___xxtofl@arg+3
 11576  00391E  EF99  F01C         	goto	l12615
 11577  003922                     l2417:
 11578                           
 11579                           ; BSR set to: 0
 11580  003922  C084  F08E         	movff	___xxtofl@val,___xxtofl@arg
 11581  003926  C085  F08F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11582  00392A  C086  F090         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11583  00392E  C087  F091         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11584  003932                     l12615:
 11585                           
 11586                           ; BSR set to: 0
 11587  003932  5184               	movf	___xxtofl@val& (0+255),w,b
 11588  003934  1185               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11589  003936  1186               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11590  003938  1187               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11591  00393A  A4D8               	btfss	status,2,c
 11592  00393C  EFA2  F01C         	goto	u15101
 11593  003940  EFA4  F01C         	goto	u15100
 11594  003944                     u15101:
 11595  003944  EFAE  F01C         	goto	l12621
 11596  003948                     u15100:
 11597  003948                     
 11598                           ; BSR set to: 0
 11599  003948  0E00               	movlw	0
 11600  00394A  6F84               	movwf	?___xxtofl& (0+255),b
 11601  00394C  0E00               	movlw	0
 11602  00394E  6F85               	movwf	(?___xxtofl+1)& (0+255),b
 11603  003950  0E00               	movlw	0
 11604  003952  6F86               	movwf	(?___xxtofl+2)& (0+255),b
 11605  003954  0E00               	movlw	0
 11606  003956  6F87               	movwf	(?___xxtofl+3)& (0+255),b
 11607  003958  EF3F  F01D         	goto	l2420
 11608  00395C                     l12621:
 11609                           
 11610                           ; BSR set to: 0
 11611  00395C  0E96               	movlw	150
 11612  00395E  6F8D               	movwf	___xxtofl@exp& (0+255),b
 11613  003960  EFB8  F01C         	goto	l12625
 11614  003964                     l12623:
 11615                           
 11616                           ; BSR set to: 0
 11617  003964  2B8D               	incf	___xxtofl@exp& (0+255),f,b
 11618  003966  90D8               	bcf	status,0,c
 11619  003968  3391               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11620  00396A  3390               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11621  00396C  338F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11622  00396E  338E               	rrcf	___xxtofl@arg& (0+255),f,b
 11623  003970                     l12625:
 11624                           
 11625                           ; BSR set to: 0
 11626  003970  0E00               	movlw	0
 11627  003972  158E               	andwf	___xxtofl@arg& (0+255),w,b
 11628  003974  6F88               	movwf	??___xxtofl& (0+255),b
 11629  003976  0E00               	movlw	0
 11630  003978  158F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11631  00397A  6F89               	movwf	(??___xxtofl+1)& (0+255),b
 11632  00397C  0E00               	movlw	0
 11633  00397E  1590               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11634  003980  6F8A               	movwf	(??___xxtofl+2)& (0+255),b
 11635  003982  0EFE               	movlw	254
 11636  003984  1591               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11637  003986  6F8B               	movwf	(??___xxtofl+3)& (0+255),b
 11638  003988  5188               	movf	??___xxtofl& (0+255),w,b
 11639  00398A  1189               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11640  00398C  118A               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11641  00398E  118B               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11642  003990  A4D8               	btfss	status,2,c
 11643  003992  EFCD  F01C         	goto	u15111
 11644  003996  EFCF  F01C         	goto	u15110
 11645  00399A                     u15111:
 11646  00399A  EFB2  F01C         	goto	l12623
 11647  00399E                     u15110:
 11648  00399E  EFDD  F01C         	goto	l2424
 11649  0039A2                     l12627:
 11650                           
 11651                           ; BSR set to: 0
 11652  0039A2  2B8D               	incf	___xxtofl@exp& (0+255),f,b
 11653  0039A4                     
 11654                           ; BSR set to: 0
 11655  0039A4  0E01               	movlw	1
 11656  0039A6  278E               	addwf	___xxtofl@arg& (0+255),f,b
 11657  0039A8  0E00               	movlw	0
 11658  0039AA  238F               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11659  0039AC  2390               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11660  0039AE  2391               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11661  0039B0                     
 11662                           ; BSR set to: 0
 11663  0039B0  90D8               	bcf	status,0,c
 11664  0039B2  3391               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11665  0039B4  3390               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11666  0039B6  338F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11667  0039B8  338E               	rrcf	___xxtofl@arg& (0+255),f,b
 11668  0039BA                     l2424:
 11669                           
 11670                           ; BSR set to: 0
 11671  0039BA  0E00               	movlw	0
 11672  0039BC  158E               	andwf	___xxtofl@arg& (0+255),w,b
 11673  0039BE  6F88               	movwf	??___xxtofl& (0+255),b
 11674  0039C0  0E00               	movlw	0
 11675  0039C2  158F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11676  0039C4  6F89               	movwf	(??___xxtofl+1)& (0+255),b
 11677  0039C6  0E00               	movlw	0
 11678  0039C8  1590               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11679  0039CA  6F8A               	movwf	(??___xxtofl+2)& (0+255),b
 11680  0039CC  0EFF               	movlw	255
 11681  0039CE  1591               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11682  0039D0  6F8B               	movwf	(??___xxtofl+3)& (0+255),b
 11683  0039D2  5188               	movf	??___xxtofl& (0+255),w,b
 11684  0039D4  1189               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11685  0039D6  118A               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11686  0039D8  118B               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11687  0039DA  A4D8               	btfss	status,2,c
 11688  0039DC  EFF2  F01C         	goto	u15121
 11689  0039E0  EFF4  F01C         	goto	u15120
 11690  0039E4                     u15121:
 11691  0039E4  EFD1  F01C         	goto	l12627
 11692  0039E8                     u15120:
 11693  0039E8  EFFC  F01C         	goto	l12635
 11694  0039EC                     l12633:
 11695                           
 11696                           ; BSR set to: 0
 11697  0039EC  078D               	decf	___xxtofl@exp& (0+255),f,b
 11698  0039EE  90D8               	bcf	status,0,c
 11699  0039F0  378E               	rlcf	___xxtofl@arg& (0+255),f,b
 11700  0039F2  378F               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11701  0039F4  3790               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11702  0039F6  3791               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11703  0039F8                     l12635:
 11704                           
 11705                           ; BSR set to: 0
 11706  0039F8  BF90               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11707  0039FA  EF01  F01D         	goto	u15131
 11708  0039FE  EF03  F01D         	goto	u15130
 11709  003A02                     u15131:
 11710  003A02  EF0B  F01D         	goto	l2431
 11711  003A06                     u15130:
 11712  003A06                     
 11713                           ; BSR set to: 0
 11714  003A06  0E02               	movlw	2
 11715  003A08  618D               	cpfslt	___xxtofl@exp& (0+255),b
 11716  003A0A  EF09  F01D         	goto	u15141
 11717  003A0E  EF0B  F01D         	goto	u15140
 11718  003A12                     u15141:
 11719  003A12  EFF6  F01C         	goto	l12633
 11720  003A16                     u15140:
 11721  003A16                     l2431:
 11722                           
 11723                           ; BSR set to: 0
 11724  003A16  B18D               	btfsc	___xxtofl@exp& (0+255),0,b
 11725  003A18  EF10  F01D         	goto	u15151
 11726  003A1C  EF12  F01D         	goto	u15150
 11727  003A20                     u15151:
 11728  003A20  EF13  F01D         	goto	l12641
 11729  003A24                     u15150:
 11730  003A24                     
 11731                           ; BSR set to: 0
 11732  003A24  9F90               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 11733  003A26                     l12641:
 11734                           
 11735                           ; BSR set to: 0
 11736  003A26  90D8               	bcf	status,0,c
 11737  003A28  338D               	rrcf	___xxtofl@exp& (0+255),f,b
 11738  003A2A                     
 11739                           ; BSR set to: 0
 11740  003A2A  C08D  F088         	movff	___xxtofl@exp,??___xxtofl
 11741  003A2E  6B89               	clrf	(??___xxtofl+1)& (0+255),b
 11742  003A30  6B8A               	clrf	(??___xxtofl+2)& (0+255),b
 11743  003A32  6B8B               	clrf	(??___xxtofl+3)& (0+255),b
 11744  003A34  C088  F08B         	movff	??___xxtofl,??___xxtofl+3
 11745  003A38  6B8A               	clrf	(??___xxtofl+2)& (0+255),b
 11746  003A3A  6B89               	clrf	(??___xxtofl+1)& (0+255),b
 11747  003A3C  6B88               	clrf	??___xxtofl& (0+255),b
 11748  003A3E  5188               	movf	??___xxtofl& (0+255),w,b
 11749  003A40  138E               	iorwf	___xxtofl@arg& (0+255),f,b
 11750  003A42  5189               	movf	(??___xxtofl+1)& (0+255),w,b
 11751  003A44  138F               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11752  003A46  518A               	movf	(??___xxtofl+2)& (0+255),w,b
 11753  003A48  1390               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11754  003A4A  518B               	movf	(??___xxtofl+3)& (0+255),w,b
 11755  003A4C  1391               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11756  003A4E                     
 11757                           ; BSR set to: 0
 11758  003A4E  518C               	movf	___xxtofl@sign& (0+255),w,b
 11759  003A50  B4D8               	btfsc	status,2,c
 11760  003A52  EF2D  F01D         	goto	u15161
 11761  003A56  EF2F  F01D         	goto	u15160
 11762  003A5A                     u15161:
 11763  003A5A  EF37  F01D         	goto	l12651
 11764  003A5E                     u15160:
 11765  003A5E                     
 11766                           ; BSR set to: 0
 11767  003A5E  BF87               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 11768  003A60  EF36  F01D         	goto	u15170
 11769  003A64  EF34  F01D         	goto	u15171
 11770  003A68                     u15171:
 11771  003A68  EF37  F01D         	goto	l12651
 11772  003A6C                     u15170:
 11773  003A6C                     
 11774                           ; BSR set to: 0
 11775  003A6C  8F91               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11776  003A6E                     l12651:
 11777                           
 11778                           ; BSR set to: 0
 11779  003A6E  C08E  F084         	movff	___xxtofl@arg,?___xxtofl
 11780  003A72  C08F  F085         	movff	___xxtofl@arg+1,?___xxtofl+1
 11781  003A76  C090  F086         	movff	___xxtofl@arg+2,?___xxtofl+2
 11782  003A7A  C091  F087         	movff	___xxtofl@arg+3,?___xxtofl+3
 11783  003A7E                     l2420:
 11784                           
 11785                           ; BSR set to: 0
 11786  003A7E  0012               	return		;funcret
 11787  003A80                     __end_of___xxtofl:
 11788                           	callstack 0
 11789                           
 11790 ;; *************** function ___fltol *****************
 11791 ;; Defined at:
 11792 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;  f1              4    0[BANK0 ] unsigned char 
 11795 ;; Auto vars:     Size  Location     Type
 11796 ;;  exp1            1   42[COMRAM] unsigned char 
 11797 ;;  sign1           1   41[COMRAM] unsigned char 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  4    0[BANK0 ] long 
 11800 ;; Registers used:
 11801 ;;		wreg, status,2, status,0
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/0
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11807 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11809 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11810 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;Total ram usage:       10 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:   10
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_async_config_baud_rate_gen
 11818 ;;		_efgtoa
 11819 ;;		_Servo_SetAngle
 11820 ;;		_CCP_PWM_Set_Duty
 11821 ;;		_CCP_PWM_Mode_Config
 11822 ;;		_I2C_Master_Mode_Clock_Configurations
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text49
 11827  004542                     __ptext49:
 11828                           	callstack 0
 11829  004542                     ___fltol:
 11830                           	callstack 14
 11831  004542  0100               	movlb	0	; () banked
 11832  004544  3582               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11833  004546  3583               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11834  004548  6E2B               	movwf	___fltol@exp1^0,c
 11835  00454A  502B               	movf	___fltol@exp1^0,w,c
 11836  00454C  A4D8               	btfss	status,2,c
 11837  00454E  EFAB  F022         	goto	u13731
 11838  004552  EFAD  F022         	goto	u13730
 11839  004556                     u13731:
 11840  004556  EFB7  F022         	goto	l11863
 11841  00455A                     u13730:
 11842  00455A                     l11859:
 11843                           
 11844                           ; BSR set to: 0
 11845  00455A  0E00               	movlw	0
 11846  00455C  6F80               	movwf	?___fltol& (0+255),b
 11847  00455E  0E00               	movlw	0
 11848  004560  6F81               	movwf	(?___fltol+1)& (0+255),b
 11849  004562  0E00               	movlw	0
 11850  004564  6F82               	movwf	(?___fltol+2)& (0+255),b
 11851  004566  0E00               	movlw	0
 11852  004568  6F83               	movwf	(?___fltol+3)& (0+255),b
 11853  00456A  EF24  F023         	goto	l2059
 11854  00456E                     l11863:
 11855                           
 11856                           ; BSR set to: 0
 11857  00456E  C080  F084         	movff	___fltol@f1,??___fltol
 11858  004572  C081  F085         	movff	___fltol@f1+1,??___fltol+1
 11859  004576  C082  F086         	movff	___fltol@f1+2,??___fltol+2
 11860  00457A  C083  F087         	movff	___fltol@f1+3,??___fltol+3
 11861  00457E  0E20               	movlw	32
 11862  004580  EFC7  F022         	goto	u13740
 11863  004584                     u13745:
 11864  004584  90D8               	bcf	status,0,c
 11865  004586  3387               	rrcf	(??___fltol+3)& (0+255),f,b
 11866  004588  3386               	rrcf	(??___fltol+2)& (0+255),f,b
 11867  00458A  3385               	rrcf	(??___fltol+1)& (0+255),f,b
 11868  00458C  3384               	rrcf	??___fltol& (0+255),f,b
 11869  00458E                     u13740:
 11870  00458E  2EE8               	decfsz	wreg,f,c
 11871  004590  EFC2  F022         	goto	u13745
 11872  004594  5184               	movf	??___fltol& (0+255),w,b
 11873  004596  6E2A               	movwf	___fltol@sign1^0,c
 11874  004598                     
 11875                           ; BSR set to: 0
 11876  004598  8F82               	bsf	(___fltol@f1+2)& (0+255),7,b
 11877  00459A                     
 11878                           ; BSR set to: 0
 11879  00459A  0EFF               	movlw	255
 11880  00459C  1780               	andwf	___fltol@f1& (0+255),f,b
 11881  00459E  0EFF               	movlw	255
 11882  0045A0  1781               	andwf	(___fltol@f1+1)& (0+255),f,b
 11883  0045A2  0EFF               	movlw	255
 11884  0045A4  1782               	andwf	(___fltol@f1+2)& (0+255),f,b
 11885  0045A6  0E00               	movlw	0
 11886  0045A8  1783               	andwf	(___fltol@f1+3)& (0+255),f,b
 11887  0045AA                     
 11888                           ; BSR set to: 0
 11889  0045AA  0E96               	movlw	150
 11890  0045AC  5E2B               	subwf	___fltol@exp1^0,f,c
 11891  0045AE                     
 11892                           ; BSR set to: 0
 11893  0045AE  BE2B               	btfsc	___fltol@exp1^0,7,c
 11894  0045B0  EFDE  F022         	goto	u13750
 11895  0045B4  EFDC  F022         	goto	u13751
 11896  0045B8                     u13751:
 11897  0045B8  EFF4  F022         	goto	l11883
 11898  0045BC                     u13750:
 11899  0045BC                     
 11900                           ; BSR set to: 0
 11901  0045BC  502B               	movf	___fltol@exp1^0,w,c
 11902  0045BE  0A80               	xorlw	128
 11903  0045C0  0F97               	addlw	151
 11904  0045C2  B0D8               	btfsc	status,0,c
 11905  0045C4  EFE6  F022         	goto	u13761
 11906  0045C8  EFE8  F022         	goto	u13760
 11907  0045CC                     u13761:
 11908  0045CC  EFEA  F022         	goto	l11879
 11909  0045D0                     u13760:
 11910  0045D0  EFAD  F022         	goto	l11859
 11911  0045D4                     l11879:
 11912                           
 11913                           ; BSR set to: 0
 11914  0045D4  90D8               	bcf	status,0,c
 11915  0045D6  3383               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11916  0045D8  3382               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11917  0045DA  3381               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11918  0045DC  3380               	rrcf	___fltol@f1& (0+255),f,b
 11919  0045DE                     
 11920                           ; BSR set to: 0
 11921  0045DE  3E2B               	incfsz	___fltol@exp1^0,f,c
 11922  0045E0  EFEA  F022         	goto	l11879
 11923  0045E4  EF0C  F023         	goto	l11893
 11924  0045E8                     l11883:
 11925                           
 11926                           ; BSR set to: 0
 11927  0045E8  0E1F               	movlw	31
 11928  0045EA  642B               	cpfsgt	___fltol@exp1^0,c
 11929  0045EC  EFFA  F022         	goto	u13771
 11930  0045F0  EFFC  F022         	goto	u13770
 11931  0045F4                     u13771:
 11932  0045F4  EF04  F023         	goto	l11891
 11933  0045F8                     u13770:
 11934  0045F8  EFAD  F022         	goto	l11859
 11935  0045FC                     l11889:
 11936                           
 11937                           ; BSR set to: 0
 11938  0045FC  90D8               	bcf	status,0,c
 11939  0045FE  3780               	rlcf	___fltol@f1& (0+255),f,b
 11940  004600  3781               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11941  004602  3782               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11942  004604  3783               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11943  004606  062B               	decf	___fltol@exp1^0,f,c
 11944  004608                     l11891:
 11945                           
 11946                           ; BSR set to: 0
 11947  004608  502B               	movf	___fltol@exp1^0,w,c
 11948  00460A  A4D8               	btfss	status,2,c
 11949  00460C  EF0A  F023         	goto	u13781
 11950  004610  EF0C  F023         	goto	u13780
 11951  004614                     u13781:
 11952  004614  EFFE  F022         	goto	l11889
 11953  004618                     u13780:
 11954  004618                     l11893:
 11955                           
 11956                           ; BSR set to: 0
 11957  004618  502A               	movf	___fltol@sign1^0,w,c
 11958  00461A  B4D8               	btfsc	status,2,c
 11959  00461C  EF12  F023         	goto	u13791
 11960  004620  EF14  F023         	goto	u13790
 11961  004624                     u13791:
 11962  004624  EF1C  F023         	goto	l11897
 11963  004628                     u13790:
 11964  004628                     
 11965                           ; BSR set to: 0
 11966  004628  1F83               	comf	(___fltol@f1+3)& (0+255),f,b
 11967  00462A  1F82               	comf	(___fltol@f1+2)& (0+255),f,b
 11968  00462C  1F81               	comf	(___fltol@f1+1)& (0+255),f,b
 11969  00462E  6D80               	negf	___fltol@f1& (0+255),b
 11970  004630  0E00               	movlw	0
 11971  004632  2381               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11972  004634  2382               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11973  004636  2383               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11974  004638                     l11897:
 11975                           
 11976                           ; BSR set to: 0
 11977  004638  C080  F080         	movff	___fltol@f1,?___fltol
 11978  00463C  C081  F081         	movff	___fltol@f1+1,?___fltol+1
 11979  004640  C082  F082         	movff	___fltol@f1+2,?___fltol+2
 11980  004644  C083  F083         	movff	___fltol@f1+3,?___fltol+3
 11981  004648                     l2059:
 11982                           
 11983                           ; BSR set to: 0
 11984  004648  0012               	return		;funcret
 11985  00464A                     __end_of___fltol:
 11986                           	callstack 0
 11987                           
 11988 ;; *************** function ___fldiv *****************
 11989 ;; Defined at:
 11990 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  b               4   18[BANK0 ] long 
 11993 ;;  a               4   22[BANK0 ] long 
 11994 ;; Auto vars:     Size  Location     Type
 11995 ;;  grs             4   37[BANK0 ] unsigned long 
 11996 ;;  rem             4   30[BANK0 ] unsigned long 
 11997 ;;  new_exp         2   35[BANK0 ] short 
 11998 ;;  aexp            1   42[BANK0 ] unsigned char 
 11999 ;;  bexp            1   41[BANK0 ] unsigned char 
 12000 ;;  sign            1   34[BANK0 ] unsigned char 
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  4   18[BANK0 ] unsigned char 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12010 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12011 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12013 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12014 ;;Total ram usage:       25 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:   10
 12017 ;; This function calls:
 12018 ;;		Nothing
 12019 ;; This function is called by:
 12020 ;;		_async_config_baud_rate_gen
 12021 ;;		_battery_level
 12022 ;;		_efgtoa
 12023 ;;		_CCP_PWM_Set_Duty
 12024 ;;		_CCP_PWM_Mode_Config
 12025 ;;		_I2C_Master_Mode_Clock_Configurations
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	text50
 12030  002E28                     __ptext50:
 12031                           	callstack 0
 12032  002E28                     ___fldiv:
 12033                           	callstack 14
 12034  002E28  0100               	movlb	0	; () banked
 12035  002E2A  5195               	movf	(___fldiv@b+3)& (0+255),w,b
 12036  002E2C  0B80               	andlw	128
 12037  002E2E  6FA2               	movwf	___fldiv@sign& (0+255),b
 12038  002E30  5195               	movf	(___fldiv@b+3)& (0+255),w,b
 12039  002E32  2595               	addwf	(___fldiv@b+3)& (0+255),w,b
 12040  002E34  6FA9               	movwf	___fldiv@bexp& (0+255),b
 12041  002E36                     
 12042                           ; BSR set to: 0
 12043  002E36  AF94               	btfss	(___fldiv@b+2)& (0+255),7,b
 12044  002E38  EF20  F017         	goto	u13101
 12045  002E3C  EF22  F017         	goto	u13100
 12046  002E40                     u13101:
 12047  002E40  EF23  F017         	goto	l11463
 12048  002E44                     u13100:
 12049  002E44                     
 12050                           ; BSR set to: 0
 12051  002E44  81A9               	bsf	___fldiv@bexp& (0+255),0,b
 12052  002E46                     l11463:
 12053                           
 12054                           ; BSR set to: 0
 12055  002E46  51A9               	movf	___fldiv@bexp& (0+255),w,b
 12056  002E48  B4D8               	btfsc	status,2,c
 12057  002E4A  EF29  F017         	goto	u13111
 12058  002E4E  EF2B  F017         	goto	u13110
 12059  002E52                     u13111:
 12060  002E52  EF40  F017         	goto	l11473
 12061  002E56                     u13110:
 12062  002E56                     
 12063                           ; BSR set to: 0
 12064  002E56  29A9               	incf	___fldiv@bexp& (0+255),w,b
 12065  002E58  A4D8               	btfss	status,2,c
 12066  002E5A  EF31  F017         	goto	u13121
 12067  002E5E  EF33  F017         	goto	u13120
 12068  002E62                     u13121:
 12069  002E62  EF3B  F017         	goto	l11469
 12070  002E66                     u13120:
 12071  002E66                     
 12072                           ; BSR set to: 0
 12073  002E66  0E00               	movlw	0
 12074  002E68  6F92               	movwf	___fldiv@b& (0+255),b
 12075  002E6A  0E00               	movlw	0
 12076  002E6C  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 12077  002E6E  0E00               	movlw	0
 12078  002E70  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 12079  002E72  0E00               	movlw	0
 12080  002E74  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12081  002E76                     l11469:
 12082                           
 12083                           ; BSR set to: 0
 12084  002E76  8F94               	bsf	(___fldiv@b+2)& (0+255),7,b
 12085  002E78                     
 12086                           ; BSR set to: 0
 12087  002E78  0E00               	movlw	0
 12088  002E7A  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12089  002E7C  EF48  F017         	goto	l11475
 12090  002E80                     l11473:
 12091                           
 12092                           ; BSR set to: 0
 12093  002E80  0E00               	movlw	0
 12094  002E82  6F92               	movwf	___fldiv@b& (0+255),b
 12095  002E84  0E00               	movlw	0
 12096  002E86  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 12097  002E88  0E00               	movlw	0
 12098  002E8A  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 12099  002E8C  0E00               	movlw	0
 12100  002E8E  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12101  002E90                     l11475:
 12102                           
 12103                           ; BSR set to: 0
 12104  002E90  5199               	movf	(___fldiv@a+3)& (0+255),w,b
 12105  002E92  0B80               	andlw	128
 12106  002E94  1BA2               	xorwf	___fldiv@sign& (0+255),f,b
 12107  002E96                     
 12108                           ; BSR set to: 0
 12109  002E96  5199               	movf	(___fldiv@a+3)& (0+255),w,b
 12110  002E98  2599               	addwf	(___fldiv@a+3)& (0+255),w,b
 12111  002E9A  6FAA               	movwf	___fldiv@aexp& (0+255),b
 12112  002E9C                     
 12113                           ; BSR set to: 0
 12114  002E9C  AF98               	btfss	(___fldiv@a+2)& (0+255),7,b
 12115  002E9E  EF53  F017         	goto	u13131
 12116  002EA2  EF55  F017         	goto	u13130
 12117  002EA6                     u13131:
 12118  002EA6  EF56  F017         	goto	l11483
 12119  002EAA                     u13130:
 12120  002EAA                     
 12121                           ; BSR set to: 0
 12122  002EAA  81AA               	bsf	___fldiv@aexp& (0+255),0,b
 12123  002EAC                     l11483:
 12124                           
 12125                           ; BSR set to: 0
 12126  002EAC  51AA               	movf	___fldiv@aexp& (0+255),w,b
 12127  002EAE  B4D8               	btfsc	status,2,c
 12128  002EB0  EF5C  F017         	goto	u13141
 12129  002EB4  EF5E  F017         	goto	u13140
 12130  002EB8                     u13141:
 12131  002EB8  EF73  F017         	goto	l11493
 12132  002EBC                     u13140:
 12133  002EBC                     
 12134                           ; BSR set to: 0
 12135  002EBC  29AA               	incf	___fldiv@aexp& (0+255),w,b
 12136  002EBE  A4D8               	btfss	status,2,c
 12137  002EC0  EF64  F017         	goto	u13151
 12138  002EC4  EF66  F017         	goto	u13150
 12139  002EC8                     u13151:
 12140  002EC8  EF6E  F017         	goto	l11489
 12141  002ECC                     u13150:
 12142  002ECC                     
 12143                           ; BSR set to: 0
 12144  002ECC  0E00               	movlw	0
 12145  002ECE  6F96               	movwf	___fldiv@a& (0+255),b
 12146  002ED0  0E00               	movlw	0
 12147  002ED2  6F97               	movwf	(___fldiv@a+1)& (0+255),b
 12148  002ED4  0E00               	movlw	0
 12149  002ED6  6F98               	movwf	(___fldiv@a+2)& (0+255),b
 12150  002ED8  0E00               	movlw	0
 12151  002EDA  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 12152  002EDC                     l11489:
 12153                           
 12154                           ; BSR set to: 0
 12155  002EDC  8F98               	bsf	(___fldiv@a+2)& (0+255),7,b
 12156  002EDE                     
 12157                           ; BSR set to: 0
 12158  002EDE  0E00               	movlw	0
 12159  002EE0  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 12160  002EE2  EF7B  F017         	goto	l11495
 12161  002EE6                     l11493:
 12162                           
 12163                           ; BSR set to: 0
 12164  002EE6  0E00               	movlw	0
 12165  002EE8  6F96               	movwf	___fldiv@a& (0+255),b
 12166  002EEA  0E00               	movlw	0
 12167  002EEC  6F97               	movwf	(___fldiv@a+1)& (0+255),b
 12168  002EEE  0E00               	movlw	0
 12169  002EF0  6F98               	movwf	(___fldiv@a+2)& (0+255),b
 12170  002EF2  0E00               	movlw	0
 12171  002EF4  6F99               	movwf	(___fldiv@a+3)& (0+255),b
 12172  002EF6                     l11495:
 12173                           
 12174                           ; BSR set to: 0
 12175  002EF6  5196               	movf	___fldiv@a& (0+255),w,b
 12176  002EF8  1197               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12177  002EFA  1198               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12178  002EFC  1199               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12179  002EFE  A4D8               	btfss	status,2,c
 12180  002F00  EF84  F017         	goto	u13161
 12181  002F04  EF86  F017         	goto	u13160
 12182  002F08                     u13161:
 12183  002F08  EF9E  F017         	goto	l11507
 12184  002F0C                     u13160:
 12185  002F0C                     
 12186                           ; BSR set to: 0
 12187  002F0C  0E00               	movlw	0
 12188  002F0E  6F92               	movwf	___fldiv@b& (0+255),b
 12189  002F10  0E00               	movlw	0
 12190  002F12  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 12191  002F14  0E00               	movlw	0
 12192  002F16  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 12193  002F18  0E00               	movlw	0
 12194  002F1A  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12195  002F1C                     
 12196                           ; BSR set to: 0
 12197  002F1C  0E80               	movlw	128
 12198  002F1E  1394               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12199  002F20  0E7F               	movlw	127
 12200  002F22  1395               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12201  002F24                     l11501:
 12202                           
 12203                           ; BSR set to: 0
 12204  002F24  51A2               	movf	___fldiv@sign& (0+255),w,b
 12205  002F26  1395               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12206  002F28                     
 12207                           ; BSR set to: 0
 12208  002F28  C092  F092         	movff	___fldiv@b,?___fldiv
 12209  002F2C  C093  F093         	movff	___fldiv@b+1,?___fldiv+1
 12210  002F30  C094  F094         	movff	___fldiv@b+2,?___fldiv+2
 12211  002F34  C095  F095         	movff	___fldiv@b+3,?___fldiv+3
 12212  002F38  EFE1  F018         	goto	l2344
 12213  002F3C                     l11507:
 12214                           
 12215                           ; BSR set to: 0
 12216  002F3C  51A9               	movf	___fldiv@bexp& (0+255),w,b
 12217  002F3E  A4D8               	btfss	status,2,c
 12218  002F40  EFA4  F017         	goto	u13171
 12219  002F44  EFA6  F017         	goto	u13170
 12220  002F48                     u13171:
 12221  002F48  EFB0  F017         	goto	l11515
 12222  002F4C                     u13170:
 12223  002F4C                     
 12224                           ; BSR set to: 0
 12225  002F4C  0E00               	movlw	0
 12226  002F4E  6F92               	movwf	?___fldiv& (0+255),b
 12227  002F50  0E00               	movlw	0
 12228  002F52  6F93               	movwf	(?___fldiv+1)& (0+255),b
 12229  002F54  0E00               	movlw	0
 12230  002F56  6F94               	movwf	(?___fldiv+2)& (0+255),b
 12231  002F58  0E00               	movlw	0
 12232  002F5A  6F95               	movwf	(?___fldiv+3)& (0+255),b
 12233  002F5C  EFE1  F018         	goto	l2344
 12234  002F60                     l11515:
 12235                           
 12236                           ; BSR set to: 0
 12237  002F60  51AA               	movf	___fldiv@aexp& (0+255),w,b
 12238  002F62  C0A9  F09A         	movff	___fldiv@bexp,??___fldiv
 12239  002F66  6B9B               	clrf	(??___fldiv+1)& (0+255),b
 12240  002F68  5F9A               	subwf	??___fldiv& (0+255),f,b
 12241  002F6A  0E00               	movlw	0
 12242  002F6C  5B9B               	subwfb	(??___fldiv+1)& (0+255),f,b
 12243  002F6E  0E7F               	movlw	127
 12244  002F70  259A               	addwf	??___fldiv& (0+255),w,b
 12245  002F72  6FA3               	movwf	___fldiv@new_exp& (0+255),b
 12246  002F74  0E00               	movlw	0
 12247  002F76  219B               	addwfc	(??___fldiv+1)& (0+255),w,b
 12248  002F78  6FA4               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12249  002F7A                     
 12250                           ; BSR set to: 0
 12251  002F7A  C092  F09E         	movff	___fldiv@b,___fldiv@rem
 12252  002F7E  C093  F09F         	movff	___fldiv@b+1,___fldiv@rem+1
 12253  002F82  C094  F0A0         	movff	___fldiv@b+2,___fldiv@rem+2
 12254  002F86  C095  F0A1         	movff	___fldiv@b+3,___fldiv@rem+3
 12255  002F8A                     
 12256                           ; BSR set to: 0
 12257  002F8A  0E00               	movlw	0
 12258  002F8C  6F92               	movwf	___fldiv@b& (0+255),b
 12259  002F8E  0E00               	movlw	0
 12260  002F90  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 12261  002F92  0E00               	movlw	0
 12262  002F94  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 12263  002F96  0E00               	movlw	0
 12264  002F98  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12265  002F9A                     
 12266                           ; BSR set to: 0
 12267  002F9A  0E00               	movlw	0
 12268  002F9C  6FA5               	movwf	___fldiv@grs& (0+255),b
 12269  002F9E  0E00               	movlw	0
 12270  002FA0  6FA6               	movwf	(___fldiv@grs+1)& (0+255),b
 12271  002FA2  0E00               	movlw	0
 12272  002FA4  6FA7               	movwf	(___fldiv@grs+2)& (0+255),b
 12273  002FA6  0E00               	movlw	0
 12274  002FA8  6FA8               	movwf	(___fldiv@grs+3)& (0+255),b
 12275  002FAA                     
 12276                           ; BSR set to: 0
 12277  002FAA  0E00               	movlw	0
 12278  002FAC  6FAA               	movwf	___fldiv@aexp& (0+255),b
 12279  002FAE  EF11  F018         	goto	l2346
 12280  002FB2                     l11525:
 12281                           
 12282                           ; BSR set to: 0
 12283  002FB2  51AA               	movf	___fldiv@aexp& (0+255),w,b
 12284  002FB4  B4D8               	btfsc	status,2,c
 12285  002FB6  EFDF  F017         	goto	u13181
 12286  002FBA  EFE1  F017         	goto	u13180
 12287  002FBE                     u13181:
 12288  002FBE  EFF8  F017         	goto	l11533
 12289  002FC2                     u13180:
 12290  002FC2                     
 12291                           ; BSR set to: 0
 12292  002FC2  90D8               	bcf	status,0,c
 12293  002FC4  379E               	rlcf	___fldiv@rem& (0+255),f,b
 12294  002FC6  379F               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12295  002FC8  37A0               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12296  002FCA  37A1               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12297  002FCC  90D8               	bcf	status,0,c
 12298  002FCE  3792               	rlcf	___fldiv@b& (0+255),f,b
 12299  002FD0  3793               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12300  002FD2  3794               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12301  002FD4  3795               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12302  002FD6                     
 12303                           ; BSR set to: 0
 12304  002FD6  AFA8               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12305  002FD8  EFF0  F017         	goto	u13191
 12306  002FDC  EFF2  F017         	goto	u13190
 12307  002FE0                     u13191:
 12308  002FE0  EFF3  F017         	goto	l2349
 12309  002FE4                     u13190:
 12310  002FE4                     
 12311                           ; BSR set to: 0
 12312  002FE4  8192               	bsf	___fldiv@b& (0+255),0,b
 12313  002FE6                     l2349:
 12314                           
 12315                           ; BSR set to: 0
 12316  002FE6  90D8               	bcf	status,0,c
 12317  002FE8  37A5               	rlcf	___fldiv@grs& (0+255),f,b
 12318  002FEA  37A6               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12319  002FEC  37A7               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12320  002FEE  37A8               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12321  002FF0                     l11533:
 12322                           
 12323                           ; BSR set to: 0
 12324  002FF0  5196               	movf	___fldiv@a& (0+255),w,b
 12325  002FF2  5D9E               	subwf	___fldiv@rem& (0+255),w,b
 12326  002FF4  5197               	movf	(___fldiv@a+1)& (0+255),w,b
 12327  002FF6  599F               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12328  002FF8  5198               	movf	(___fldiv@a+2)& (0+255),w,b
 12329  002FFA  59A0               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12330  002FFC  5199               	movf	(___fldiv@a+3)& (0+255),w,b
 12331  002FFE  59A1               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12332  003000  A0D8               	btfss	status,0,c
 12333  003002  EF05  F018         	goto	u13201
 12334  003006  EF07  F018         	goto	u13200
 12335  00300A                     u13201:
 12336  00300A  EF10  F018         	goto	l11539
 12337  00300E                     u13200:
 12338  00300E                     
 12339                           ; BSR set to: 0
 12340  00300E  8DA8               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12341  003010                     
 12342                           ; BSR set to: 0
 12343  003010  5196               	movf	___fldiv@a& (0+255),w,b
 12344  003012  5F9E               	subwf	___fldiv@rem& (0+255),f,b
 12345  003014  5197               	movf	(___fldiv@a+1)& (0+255),w,b
 12346  003016  5B9F               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12347  003018  5198               	movf	(___fldiv@a+2)& (0+255),w,b
 12348  00301A  5BA0               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12349  00301C  5199               	movf	(___fldiv@a+3)& (0+255),w,b
 12350  00301E  5BA1               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12351  003020                     l11539:
 12352                           
 12353                           ; BSR set to: 0
 12354  003020  2BAA               	incf	___fldiv@aexp& (0+255),f,b
 12355  003022                     l2346:
 12356                           
 12357                           ; BSR set to: 0
 12358  003022  0E19               	movlw	25
 12359  003024  65AA               	cpfsgt	___fldiv@aexp& (0+255),b
 12360  003026  EF17  F018         	goto	u13211
 12361  00302A  EF19  F018         	goto	u13210
 12362  00302E                     u13211:
 12363  00302E  EFD9  F017         	goto	l11525
 12364  003032                     u13210:
 12365  003032                     
 12366                           ; BSR set to: 0
 12367  003032  519E               	movf	___fldiv@rem& (0+255),w,b
 12368  003034  119F               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12369  003036  11A0               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12370  003038  11A1               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12371  00303A  B4D8               	btfsc	status,2,c
 12372  00303C  EF22  F018         	goto	u13221
 12373  003040  EF24  F018         	goto	u13220
 12374  003044                     u13221:
 12375  003044  EF3C  F018         	goto	l11551
 12376  003048                     u13220:
 12377  003048                     
 12378                           ; BSR set to: 0
 12379  003048  81A5               	bsf	___fldiv@grs& (0+255),0,b
 12380  00304A  EF3C  F018         	goto	l11551
 12381  00304E                     l11545:
 12382                           
 12383                           ; BSR set to: 0
 12384  00304E  90D8               	bcf	status,0,c
 12385  003050  3792               	rlcf	___fldiv@b& (0+255),f,b
 12386  003052  3793               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12387  003054  3794               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12388  003056  3795               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12389  003058                     
 12390                           ; BSR set to: 0
 12391  003058  AFA8               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12392  00305A  EF31  F018         	goto	u13231
 12393  00305E  EF33  F018         	goto	u13230
 12394  003062                     u13231:
 12395  003062  EF34  F018         	goto	l2355
 12396  003066                     u13230:
 12397  003066                     
 12398                           ; BSR set to: 0
 12399  003066  8192               	bsf	___fldiv@b& (0+255),0,b
 12400  003068                     l2355:
 12401                           
 12402                           ; BSR set to: 0
 12403  003068  90D8               	bcf	status,0,c
 12404  00306A  37A5               	rlcf	___fldiv@grs& (0+255),f,b
 12405  00306C  37A6               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12406  00306E  37A7               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12407  003070  37A8               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12408  003072  07A3               	decf	___fldiv@new_exp& (0+255),f,b
 12409  003074  A0D8               	btfss	status,0,c
 12410  003076  07A4               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12411  003078                     l11551:
 12412                           
 12413                           ; BSR set to: 0
 12414  003078  AF94               	btfss	(___fldiv@b+2)& (0+255),7,b
 12415  00307A  EF41  F018         	goto	u13241
 12416  00307E  EF43  F018         	goto	u13240
 12417  003082                     u13241:
 12418  003082  EF27  F018         	goto	l11545
 12419  003086                     u13240:
 12420  003086                     
 12421                           ; BSR set to: 0
 12422  003086  0E00               	movlw	0
 12423  003088  6FAA               	movwf	___fldiv@aexp& (0+255),b
 12424  00308A                     
 12425                           ; BSR set to: 0
 12426  00308A  AFA8               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12427  00308C  EF4A  F018         	goto	u13251
 12428  003090  EF4C  F018         	goto	u13250
 12429  003094                     u13251:
 12430  003094  EF70  F018         	goto	l2357
 12431  003098                     u13250:
 12432  003098                     
 12433                           ; BSR set to: 0
 12434  003098  0EFF               	movlw	255
 12435  00309A  15A5               	andwf	___fldiv@grs& (0+255),w,b
 12436  00309C  6F9A               	movwf	??___fldiv& (0+255),b
 12437  00309E  0EFF               	movlw	255
 12438  0030A0  15A6               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12439  0030A2  6F9B               	movwf	(??___fldiv+1)& (0+255),b
 12440  0030A4  0EFF               	movlw	255
 12441  0030A6  15A7               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12442  0030A8  6F9C               	movwf	(??___fldiv+2)& (0+255),b
 12443  0030AA  0E7F               	movlw	127
 12444  0030AC  15A8               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12445  0030AE  6F9D               	movwf	(??___fldiv+3)& (0+255),b
 12446  0030B0  519A               	movf	??___fldiv& (0+255),w,b
 12447  0030B2  119B               	iorwf	(??___fldiv+1)& (0+255),w,b
 12448  0030B4  119C               	iorwf	(??___fldiv+2)& (0+255),w,b
 12449  0030B6  119D               	iorwf	(??___fldiv+3)& (0+255),w,b
 12450  0030B8  B4D8               	btfsc	status,2,c
 12451  0030BA  EF61  F018         	goto	u13261
 12452  0030BE  EF63  F018         	goto	u13260
 12453  0030C2                     u13261:
 12454  0030C2  EF67  F018         	goto	l2358
 12455  0030C6                     u13260:
 12456  0030C6                     l11559:
 12457                           
 12458                           ; BSR set to: 0
 12459  0030C6  0E01               	movlw	1
 12460  0030C8  6FAA               	movwf	___fldiv@aexp& (0+255),b
 12461  0030CA  EF70  F018         	goto	l2357
 12462  0030CE                     l2358:
 12463                           
 12464                           ; BSR set to: 0
 12465  0030CE  A192               	btfss	___fldiv@b& (0+255),0,b
 12466  0030D0  EF6C  F018         	goto	u13271
 12467  0030D4  EF6E  F018         	goto	u13270
 12468  0030D8                     u13271:
 12469  0030D8  EF70  F018         	goto	l2357
 12470  0030DC                     u13270:
 12471  0030DC  EF63  F018         	goto	l11559
 12472  0030E0                     l2357:
 12473                           
 12474                           ; BSR set to: 0
 12475  0030E0  51AA               	movf	___fldiv@aexp& (0+255),w,b
 12476  0030E2  B4D8               	btfsc	status,2,c
 12477  0030E4  EF76  F018         	goto	u13281
 12478  0030E8  EF78  F018         	goto	u13280
 12479  0030EC                     u13281:
 12480  0030EC  EF9C  F018         	goto	l11571
 12481  0030F0                     u13280:
 12482  0030F0                     
 12483                           ; BSR set to: 0
 12484  0030F0  0E01               	movlw	1
 12485  0030F2  2792               	addwf	___fldiv@b& (0+255),f,b
 12486  0030F4  0E00               	movlw	0
 12487  0030F6  2393               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12488  0030F8  2394               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12489  0030FA  2395               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12490  0030FC                     
 12491                           ; BSR set to: 0
 12492  0030FC  A195               	btfss	(___fldiv@b+3)& (0+255),0,b
 12493  0030FE  EF83  F018         	goto	u13291
 12494  003102  EF85  F018         	goto	u13290
 12495  003106                     u13291:
 12496  003106  EF9C  F018         	goto	l11571
 12497  00310A                     u13290:
 12498  00310A                     
 12499                           ; BSR set to: 0
 12500  00310A  C092  F09A         	movff	___fldiv@b,??___fldiv
 12501  00310E  C093  F09B         	movff	___fldiv@b+1,??___fldiv+1
 12502  003112  C094  F09C         	movff	___fldiv@b+2,??___fldiv+2
 12503  003116  C095  F09D         	movff	___fldiv@b+3,??___fldiv+3
 12504  00311A  359D               	rlcf	(??___fldiv+3)& (0+255),w,b
 12505  00311C  339D               	rrcf	(??___fldiv+3)& (0+255),f,b
 12506  00311E  339C               	rrcf	(??___fldiv+2)& (0+255),f,b
 12507  003120  339B               	rrcf	(??___fldiv+1)& (0+255),f,b
 12508  003122  339A               	rrcf	??___fldiv& (0+255),f,b
 12509  003124  C09A  F092         	movff	??___fldiv,___fldiv@b
 12510  003128  C09B  F093         	movff	??___fldiv+1,___fldiv@b+1
 12511  00312C  C09C  F094         	movff	??___fldiv+2,___fldiv@b+2
 12512  003130  C09D  F095         	movff	??___fldiv+3,___fldiv@b+3
 12513  003134                     
 12514                           ; BSR set to: 0
 12515  003134  4BA3               	infsnz	___fldiv@new_exp& (0+255),f,b
 12516  003136  2BA4               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12517  003138                     l11571:
 12518                           
 12519                           ; BSR set to: 0
 12520  003138  BFA4               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12521  00313A  EFA7  F018         	goto	u13301
 12522  00313E  51A4               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12523  003140  E108               	bnz	u13300
 12524  003142  29A3               	incf	___fldiv@new_exp& (0+255),w,b
 12525  003144  A0D8               	btfss	status,0,c
 12526  003146  EFA7  F018         	goto	u13301
 12527  00314A  EFA9  F018         	goto	u13300
 12528  00314E                     u13301:
 12529  00314E  EFB4  F018         	goto	l11575
 12530  003152                     u13300:
 12531  003152                     
 12532                           ; BSR set to: 0
 12533  003152  0E00               	movlw	0
 12534  003154  6FA4               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12535  003156  69A3               	setf	___fldiv@new_exp& (0+255),b
 12536  003158  0E00               	movlw	0
 12537  00315A  6F92               	movwf	___fldiv@b& (0+255),b
 12538  00315C  0E00               	movlw	0
 12539  00315E  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 12540  003160  0E00               	movlw	0
 12541  003162  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 12542  003164  0E00               	movlw	0
 12543  003166  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12544  003168                     l11575:
 12545                           
 12546                           ; BSR set to: 0
 12547  003168  BFA4               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12548  00316A  EFC1  F018         	goto	u13310
 12549  00316E  51A4               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12550  003170  E106               	bnz	u13311
 12551  003172  05A3               	decf	___fldiv@new_exp& (0+255),w,b
 12552  003174  B0D8               	btfsc	status,0,c
 12553  003176  EFBF  F018         	goto	u13311
 12554  00317A  EFC1  F018         	goto	u13310
 12555  00317E                     u13311:
 12556  00317E  EFCF  F018         	goto	l11579
 12557  003182                     u13310:
 12558  003182                     
 12559                           ; BSR set to: 0
 12560  003182  0E00               	movlw	0
 12561  003184  6FA4               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12562  003186  0E00               	movlw	0
 12563  003188  6FA3               	movwf	___fldiv@new_exp& (0+255),b
 12564  00318A  0E00               	movlw	0
 12565  00318C  6F92               	movwf	___fldiv@b& (0+255),b
 12566  00318E  0E00               	movlw	0
 12567  003190  6F93               	movwf	(___fldiv@b+1)& (0+255),b
 12568  003192  0E00               	movlw	0
 12569  003194  6F94               	movwf	(___fldiv@b+2)& (0+255),b
 12570  003196  0E00               	movlw	0
 12571  003198  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12572  00319A  0E00               	movlw	0
 12573  00319C  6FA2               	movwf	___fldiv@sign& (0+255),b
 12574  00319E                     l11579:
 12575                           
 12576                           ; BSR set to: 0
 12577  00319E  C0A3  F0A9         	movff	___fldiv@new_exp,___fldiv@bexp
 12578  0031A2                     
 12579                           ; BSR set to: 0
 12580  0031A2  A1A9               	btfss	___fldiv@bexp& (0+255),0,b
 12581  0031A4  EFD6  F018         	goto	u13321
 12582  0031A8  EFD8  F018         	goto	u13320
 12583  0031AC                     u13321:
 12584  0031AC  EFDB  F018         	goto	l11585
 12585  0031B0                     u13320:
 12586  0031B0                     
 12587                           ; BSR set to: 0
 12588  0031B0  8F94               	bsf	(___fldiv@b+2)& (0+255),7,b
 12589  0031B2  EFDC  F018         	goto	l11587
 12590  0031B6                     l11585:
 12591                           
 12592                           ; BSR set to: 0
 12593  0031B6  9F94               	bcf	(___fldiv@b+2)& (0+255),7,b
 12594  0031B8                     l11587:
 12595                           
 12596                           ; BSR set to: 0
 12597  0031B8  90D8               	bcf	status,0,c
 12598  0031BA  31A9               	rrcf	___fldiv@bexp& (0+255),w,b
 12599  0031BC  6F95               	movwf	(___fldiv@b+3)& (0+255),b
 12600  0031BE  EF92  F017         	goto	l11501
 12601  0031C2                     l2344:
 12602                           
 12603                           ; BSR set to: 0
 12604  0031C2  0012               	return		;funcret
 12605  0031C4                     __end_of___fldiv:
 12606                           	callstack 0
 12607                           
 12608 ;; *************** function ___fladd *****************
 12609 ;; Defined at:
 12610 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  b               4   43[BANK0 ] unsigned char 
 12613 ;;  a               4   47[BANK0 ] unsigned char 
 12614 ;; Auto vars:     Size  Location     Type
 12615 ;;  grs             1   58[BANK0 ] unsigned char 
 12616 ;;  bexp            1   57[BANK0 ] unsigned char 
 12617 ;;  aexp            1   56[BANK0 ] unsigned char 
 12618 ;;  signs           1   55[BANK0 ] unsigned char 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  4   43[BANK0 ] unsigned char 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12628 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;Total ram usage:       16 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:   10
 12635 ;; This function calls:
 12636 ;;		Nothing
 12637 ;; This function is called by:
 12638 ;;		_async_config_baud_rate_gen
 12639 ;;		___flsub
 12640 ;;		_efgtoa
 12641 ;;		_Servo_SetAngle
 12642 ;;		_CCP_PWM_Mode_Config
 12643 ;;		_I2C_Master_Mode_Clock_Configurations
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text51
 12648  001D56                     __ptext51:
 12649                           	callstack 0
 12650  001D56                     ___fladd:
 12651                           	callstack 13
 12652  001D56  0100               	movlb	0	; () banked
 12653  001D58  51AE               	movf	(___fladd@b+3)& (0+255),w,b
 12654  001D5A  0B80               	andlw	128
 12655  001D5C  6FB7               	movwf	___fladd@signs& (0+255),b
 12656  001D5E  51AE               	movf	(___fladd@b+3)& (0+255),w,b
 12657  001D60  25AE               	addwf	(___fladd@b+3)& (0+255),w,b
 12658  001D62  6FB9               	movwf	___fladd@bexp& (0+255),b
 12659  001D64                     
 12660                           ; BSR set to: 0
 12661  001D64  AFAD               	btfss	(___fladd@b+2)& (0+255),7,b
 12662  001D66  EFB7  F00E         	goto	u12541
 12663  001D6A  EFB9  F00E         	goto	u12540
 12664  001D6E                     u12541:
 12665  001D6E  EFBA  F00E         	goto	l11159
 12666  001D72                     u12540:
 12667  001D72                     
 12668                           ; BSR set to: 0
 12669  001D72  81B9               	bsf	___fladd@bexp& (0+255),0,b
 12670  001D74                     l11159:
 12671                           
 12672                           ; BSR set to: 0
 12673  001D74  51B9               	movf	___fladd@bexp& (0+255),w,b
 12674  001D76  B4D8               	btfsc	status,2,c
 12675  001D78  EFC0  F00E         	goto	u12551
 12676  001D7C  EFC2  F00E         	goto	u12550
 12677  001D80                     u12551:
 12678  001D80  EFD7  F00E         	goto	l11169
 12679  001D84                     u12550:
 12680  001D84                     
 12681                           ; BSR set to: 0
 12682  001D84  29B9               	incf	___fladd@bexp& (0+255),w,b
 12683  001D86  A4D8               	btfss	status,2,c
 12684  001D88  EFC8  F00E         	goto	u12561
 12685  001D8C  EFCA  F00E         	goto	u12560
 12686  001D90                     u12561:
 12687  001D90  EFD2  F00E         	goto	l11165
 12688  001D94                     u12560:
 12689  001D94                     
 12690                           ; BSR set to: 0
 12691  001D94  0E00               	movlw	0
 12692  001D96  6FAB               	movwf	___fladd@b& (0+255),b
 12693  001D98  0E00               	movlw	0
 12694  001D9A  6FAC               	movwf	(___fladd@b+1)& (0+255),b
 12695  001D9C  0E00               	movlw	0
 12696  001D9E  6FAD               	movwf	(___fladd@b+2)& (0+255),b
 12697  001DA0  0E00               	movlw	0
 12698  001DA2  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 12699  001DA4                     l11165:
 12700                           
 12701                           ; BSR set to: 0
 12702  001DA4  8FAD               	bsf	(___fladd@b+2)& (0+255),7,b
 12703  001DA6                     
 12704                           ; BSR set to: 0
 12705  001DA6  0E00               	movlw	0
 12706  001DA8  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 12707  001DAA  EFDF  F00E         	goto	l11171
 12708  001DAE                     l11169:
 12709                           
 12710                           ; BSR set to: 0
 12711  001DAE  0E00               	movlw	0
 12712  001DB0  6FAB               	movwf	___fladd@b& (0+255),b
 12713  001DB2  0E00               	movlw	0
 12714  001DB4  6FAC               	movwf	(___fladd@b+1)& (0+255),b
 12715  001DB6  0E00               	movlw	0
 12716  001DB8  6FAD               	movwf	(___fladd@b+2)& (0+255),b
 12717  001DBA  0E00               	movlw	0
 12718  001DBC  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 12719  001DBE                     l11171:
 12720                           
 12721                           ; BSR set to: 0
 12722  001DBE  51B2               	movf	(___fladd@a+3)& (0+255),w,b
 12723  001DC0  0B80               	andlw	128
 12724  001DC2  6FB8               	movwf	___fladd@aexp& (0+255),b
 12725  001DC4                     
 12726                           ; BSR set to: 0
 12727  001DC4  51B7               	movf	___fladd@signs& (0+255),w,b
 12728  001DC6  19B8               	xorwf	___fladd@aexp& (0+255),w,b
 12729  001DC8  B4D8               	btfsc	status,2,c
 12730  001DCA  EFE9  F00E         	goto	u12571
 12731  001DCE  EFEB  F00E         	goto	u12570
 12732  001DD2                     u12571:
 12733  001DD2  EFEC  F00E         	goto	l11177
 12734  001DD6                     u12570:
 12735  001DD6                     
 12736                           ; BSR set to: 0
 12737  001DD6  8DB7               	bsf	___fladd@signs& (0+255),6,b
 12738  001DD8                     l11177:
 12739                           
 12740                           ; BSR set to: 0
 12741  001DD8  51B2               	movf	(___fladd@a+3)& (0+255),w,b
 12742  001DDA  25B2               	addwf	(___fladd@a+3)& (0+255),w,b
 12743  001DDC  6FB8               	movwf	___fladd@aexp& (0+255),b
 12744  001DDE                     
 12745                           ; BSR set to: 0
 12746  001DDE  AFB1               	btfss	(___fladd@a+2)& (0+255),7,b
 12747  001DE0  EFF4  F00E         	goto	u12581
 12748  001DE4  EFF6  F00E         	goto	u12580
 12749  001DE8                     u12581:
 12750  001DE8  EFF7  F00E         	goto	l11183
 12751  001DEC                     u12580:
 12752  001DEC                     
 12753                           ; BSR set to: 0
 12754  001DEC  81B8               	bsf	___fladd@aexp& (0+255),0,b
 12755  001DEE                     l11183:
 12756                           
 12757                           ; BSR set to: 0
 12758  001DEE  51B8               	movf	___fladd@aexp& (0+255),w,b
 12759  001DF0  B4D8               	btfsc	status,2,c
 12760  001DF2  EFFD  F00E         	goto	u12591
 12761  001DF6  EFFF  F00E         	goto	u12590
 12762  001DFA                     u12591:
 12763  001DFA  EF14  F00F         	goto	l11193
 12764  001DFE                     u12590:
 12765  001DFE                     
 12766                           ; BSR set to: 0
 12767  001DFE  29B8               	incf	___fladd@aexp& (0+255),w,b
 12768  001E00  A4D8               	btfss	status,2,c
 12769  001E02  EF05  F00F         	goto	u12601
 12770  001E06  EF07  F00F         	goto	u12600
 12771  001E0A                     u12601:
 12772  001E0A  EF0F  F00F         	goto	l11189
 12773  001E0E                     u12600:
 12774  001E0E                     
 12775                           ; BSR set to: 0
 12776  001E0E  0E00               	movlw	0
 12777  001E10  6FAF               	movwf	___fladd@a& (0+255),b
 12778  001E12  0E00               	movlw	0
 12779  001E14  6FB0               	movwf	(___fladd@a+1)& (0+255),b
 12780  001E16  0E00               	movlw	0
 12781  001E18  6FB1               	movwf	(___fladd@a+2)& (0+255),b
 12782  001E1A  0E00               	movlw	0
 12783  001E1C  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 12784  001E1E                     l11189:
 12785                           
 12786                           ; BSR set to: 0
 12787  001E1E  8FB1               	bsf	(___fladd@a+2)& (0+255),7,b
 12788  001E20                     
 12789                           ; BSR set to: 0
 12790  001E20  0E00               	movlw	0
 12791  001E22  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 12792  001E24  EF1C  F00F         	goto	l11195
 12793  001E28                     l11193:
 12794                           
 12795                           ; BSR set to: 0
 12796  001E28  0E00               	movlw	0
 12797  001E2A  6FAF               	movwf	___fladd@a& (0+255),b
 12798  001E2C  0E00               	movlw	0
 12799  001E2E  6FB0               	movwf	(___fladd@a+1)& (0+255),b
 12800  001E30  0E00               	movlw	0
 12801  001E32  6FB1               	movwf	(___fladd@a+2)& (0+255),b
 12802  001E34  0E00               	movlw	0
 12803  001E36  6FB2               	movwf	(___fladd@a+3)& (0+255),b
 12804  001E38                     l11195:
 12805                           
 12806                           ; BSR set to: 0
 12807  001E38  51B9               	movf	___fladd@bexp& (0+255),w,b
 12808  001E3A  5DB8               	subwf	___fladd@aexp& (0+255),w,b
 12809  001E3C  B0D8               	btfsc	status,0,c
 12810  001E3E  EF23  F00F         	goto	u12611
 12811  001E42  EF25  F00F         	goto	u12610
 12812  001E46                     u12611:
 12813  001E46  EF4C  F00F         	goto	l11231
 12814  001E4A                     u12610:
 12815  001E4A                     
 12816                           ; BSR set to: 0
 12817  001E4A  ADB7               	btfss	___fladd@signs& (0+255),6,b
 12818  001E4C  EF2A  F00F         	goto	u12621
 12819  001E50  EF2C  F00F         	goto	u12620
 12820  001E54                     u12621:
 12821  001E54  EF2E  F00F         	goto	l11201
 12822  001E58                     u12620:
 12823  001E58                     
 12824                           ; BSR set to: 0
 12825  001E58  0E80               	movlw	128
 12826  001E5A  1BB7               	xorwf	___fladd@signs& (0+255),f,b
 12827  001E5C                     l11201:
 12828                           
 12829                           ; BSR set to: 0
 12830  001E5C  C0B9  F0BA         	movff	___fladd@bexp,___fladd@grs
 12831  001E60                     
 12832                           ; BSR set to: 0
 12833  001E60  C0B8  F0B9         	movff	___fladd@aexp,___fladd@bexp
 12834  001E64                     
 12835                           ; BSR set to: 0
 12836  001E64  C0BA  F0B8         	movff	___fladd@grs,___fladd@aexp
 12837  001E68                     
 12838                           ; BSR set to: 0
 12839  001E68  C0AB  F0BA         	movff	___fladd@b,___fladd@grs
 12840  001E6C                     
 12841                           ; BSR set to: 0
 12842  001E6C  C0AF  F0AB         	movff	___fladd@a,___fladd@b
 12843  001E70                     
 12844                           ; BSR set to: 0
 12845  001E70  C0BA  F0AF         	movff	___fladd@grs,___fladd@a
 12846  001E74                     
 12847                           ; BSR set to: 0
 12848  001E74  C0AC  F0BA         	movff	___fladd@b+1,___fladd@grs
 12849  001E78                     
 12850                           ; BSR set to: 0
 12851  001E78  C0B0  F0AC         	movff	___fladd@a+1,___fladd@b+1
 12852  001E7C                     
 12853                           ; BSR set to: 0
 12854  001E7C  C0BA  F0B0         	movff	___fladd@grs,___fladd@a+1
 12855  001E80                     
 12856                           ; BSR set to: 0
 12857  001E80  C0AD  F0BA         	movff	___fladd@b+2,___fladd@grs
 12858  001E84                     
 12859                           ; BSR set to: 0
 12860  001E84  C0B1  F0AD         	movff	___fladd@a+2,___fladd@b+2
 12861  001E88                     
 12862                           ; BSR set to: 0
 12863  001E88  C0BA  F0B1         	movff	___fladd@grs,___fladd@a+2
 12864  001E8C                     
 12865                           ; BSR set to: 0
 12866  001E8C  C0AE  F0BA         	movff	___fladd@b+3,___fladd@grs
 12867  001E90                     
 12868                           ; BSR set to: 0
 12869  001E90  C0B2  F0AE         	movff	___fladd@a+3,___fladd@b+3
 12870  001E94                     
 12871                           ; BSR set to: 0
 12872  001E94  C0BA  F0B2         	movff	___fladd@grs,___fladd@a+3
 12873  001E98                     l11231:
 12874                           
 12875                           ; BSR set to: 0
 12876  001E98  0E00               	movlw	0
 12877  001E9A  6FBA               	movwf	___fladd@grs& (0+255),b
 12878  001E9C                     
 12879                           ; BSR set to: 0
 12880  001E9C  51B9               	movf	___fladd@bexp& (0+255),w,b
 12881  001E9E  C0B8  F0B3         	movff	___fladd@aexp,??___fladd
 12882  001EA2  6BB4               	clrf	(??___fladd+1)& (0+255),b
 12883  001EA4  5FB3               	subwf	??___fladd& (0+255),f,b
 12884  001EA6  0E00               	movlw	0
 12885  001EA8  5BB4               	subwfb	(??___fladd+1)& (0+255),f,b
 12886  001EAA  BFB4               	btfsc	(??___fladd+1)& (0+255),7,b
 12887  001EAC  EF61  F00F         	goto	u12631
 12888  001EB0  51B4               	movf	(??___fladd+1)& (0+255),w,b
 12889  001EB2  E109               	bnz	u12630
 12890  001EB4  0E1A               	movlw	26
 12891  001EB6  5DB3               	subwf	??___fladd& (0+255),w,b
 12892  001EB8  A0D8               	btfss	status,0,c
 12893  001EBA  EF61  F00F         	goto	u12631
 12894  001EBE  EF63  F00F         	goto	u12630
 12895  001EC2                     u12631:
 12896  001EC2  EF9A  F00F         	goto	l2291
 12897  001EC6                     u12630:
 12898  001EC6                     
 12899                           ; BSR set to: 0
 12900  001EC6  51AB               	movf	___fladd@b& (0+255),w,b
 12901  001EC8  11AC               	iorwf	(___fladd@b+1)& (0+255),w,b
 12902  001ECA  11AD               	iorwf	(___fladd@b+2)& (0+255),w,b
 12903  001ECC  11AE               	iorwf	(___fladd@b+3)& (0+255),w,b
 12904  001ECE  A4D8               	btfss	status,2,c
 12905  001ED0  EF6C  F00F         	goto	u12641
 12906  001ED4  EF6F  F00F         	goto	u12640
 12907  001ED8                     u12641:
 12908  001ED8  0E01               	movlw	1
 12909  001EDA  EF70  F00F         	goto	u12650
 12910  001EDE                     u12640:
 12911  001EDE  0E00               	movlw	0
 12912  001EE0                     u12650:
 12913  001EE0  6FBA               	movwf	___fladd@grs& (0+255),b
 12914  001EE2                     
 12915                           ; BSR set to: 0
 12916  001EE2  0E00               	movlw	0
 12917  001EE4  6FAB               	movwf	___fladd@b& (0+255),b
 12918  001EE6  0E00               	movlw	0
 12919  001EE8  6FAC               	movwf	(___fladd@b+1)& (0+255),b
 12920  001EEA  0E00               	movlw	0
 12921  001EEC  6FAD               	movwf	(___fladd@b+2)& (0+255),b
 12922  001EEE  0E00               	movlw	0
 12923  001EF0  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 12924  001EF2                     
 12925                           ; BSR set to: 0
 12926  001EF2  C0B8  F0B9         	movff	___fladd@aexp,___fladd@bexp
 12927  001EF6  EFA3  F00F         	goto	l2290
 12928  001EFA                     l2292:
 12929                           
 12930                           ; BSR set to: 0
 12931  001EFA  A1BA               	btfss	___fladd@grs& (0+255),0,b
 12932  001EFC  EF82  F00F         	goto	u12661
 12933  001F00  EF84  F00F         	goto	u12660
 12934  001F04                     u12661:
 12935  001F04  EF8A  F00F         	goto	l11243
 12936  001F08                     u12660:
 12937  001F08                     
 12938                           ; BSR set to: 0
 12939  001F08  90D8               	bcf	status,0,c
 12940  001F0A  31BA               	rrcf	___fladd@grs& (0+255),w,b
 12941  001F0C  0901               	iorlw	1
 12942  001F0E  6FBA               	movwf	___fladd@grs& (0+255),b
 12943  001F10  EF8C  F00F         	goto	l11245
 12944  001F14                     l11243:
 12945                           
 12946                           ; BSR set to: 0
 12947  001F14  90D8               	bcf	status,0,c
 12948  001F16  33BA               	rrcf	___fladd@grs& (0+255),f,b
 12949  001F18                     l11245:
 12950                           
 12951                           ; BSR set to: 0
 12952  001F18  A1AB               	btfss	___fladd@b& (0+255),0,b
 12953  001F1A  EF91  F00F         	goto	u12671
 12954  001F1E  EF93  F00F         	goto	u12670
 12955  001F22                     u12671:
 12956  001F22  EF94  F00F         	goto	l11249
 12957  001F26                     u12670:
 12958  001F26                     
 12959                           ; BSR set to: 0
 12960  001F26  8FBA               	bsf	___fladd@grs& (0+255),7,b
 12961  001F28                     l11249:
 12962                           
 12963                           ; BSR set to: 0
 12964  001F28  35AE               	rlcf	(___fladd@b+3)& (0+255),w,b
 12965  001F2A  33AE               	rrcf	(___fladd@b+3)& (0+255),f,b
 12966  001F2C  33AD               	rrcf	(___fladd@b+2)& (0+255),f,b
 12967  001F2E  33AC               	rrcf	(___fladd@b+1)& (0+255),f,b
 12968  001F30  33AB               	rrcf	___fladd@b& (0+255),f,b
 12969  001F32                     
 12970                           ; BSR set to: 0
 12971  001F32  2BB9               	incf	___fladd@bexp& (0+255),f,b
 12972  001F34                     l2291:
 12973                           
 12974                           ; BSR set to: 0
 12975  001F34  51B8               	movf	___fladd@aexp& (0+255),w,b
 12976  001F36  5DB9               	subwf	___fladd@bexp& (0+255),w,b
 12977  001F38  A0D8               	btfss	status,0,c
 12978  001F3A  EFA1  F00F         	goto	u12681
 12979  001F3E  EFA3  F00F         	goto	u12680
 12980  001F42                     u12681:
 12981  001F42  EF7D  F00F         	goto	l2292
 12982  001F46                     u12680:
 12983  001F46                     l2290:
 12984                           
 12985                           ; BSR set to: 0
 12986  001F46  BDB7               	btfsc	___fladd@signs& (0+255),6,b
 12987  001F48  EFA8  F00F         	goto	u12691
 12988  001F4C  EFAA  F00F         	goto	u12690
 12989  001F50                     u12691:
 12990  001F50  EFEA  F00F         	goto	l11277
 12991  001F54                     u12690:
 12992  001F54                     
 12993                           ; BSR set to: 0
 12994  001F54  51B9               	movf	___fladd@bexp& (0+255),w,b
 12995  001F56  A4D8               	btfss	status,2,c
 12996  001F58  EFB0  F00F         	goto	u12701
 12997  001F5C  EFB2  F00F         	goto	u12700
 12998  001F60                     u12701:
 12999  001F60  EFBC  F00F         	goto	l11259
 13000  001F64                     u12700:
 13001  001F64                     
 13002                           ; BSR set to: 0
 13003  001F64  0E00               	movlw	0
 13004  001F66  6FAB               	movwf	?___fladd& (0+255),b
 13005  001F68  0E00               	movlw	0
 13006  001F6A  6FAC               	movwf	(?___fladd+1)& (0+255),b
 13007  001F6C  0E00               	movlw	0
 13008  001F6E  6FAD               	movwf	(?___fladd+2)& (0+255),b
 13009  001F70  0E00               	movlw	0
 13010  001F72  6FAE               	movwf	(?___fladd+3)& (0+255),b
 13011  001F74  EF0B  F011         	goto	l2299
 13012  001F78                     l11259:
 13013                           
 13014                           ; BSR set to: 0
 13015  001F78  51AF               	movf	___fladd@a& (0+255),w,b
 13016  001F7A  27AB               	addwf	___fladd@b& (0+255),f,b
 13017  001F7C  51B0               	movf	(___fladd@a+1)& (0+255),w,b
 13018  001F7E  23AC               	addwfc	(___fladd@b+1)& (0+255),f,b
 13019  001F80  51B1               	movf	(___fladd@a+2)& (0+255),w,b
 13020  001F82  23AD               	addwfc	(___fladd@b+2)& (0+255),f,b
 13021  001F84  51B2               	movf	(___fladd@a+3)& (0+255),w,b
 13022  001F86  23AE               	addwfc	(___fladd@b+3)& (0+255),f,b
 13023  001F88                     
 13024                           ; BSR set to: 0
 13025  001F88  A1AE               	btfss	(___fladd@b+3)& (0+255),0,b
 13026  001F8A  EFC9  F00F         	goto	u12711
 13027  001F8E  EFCB  F00F         	goto	u12710
 13028  001F92                     u12711:
 13029  001F92  EF77  F010         	goto	l11313
 13030  001F96                     u12710:
 13031  001F96                     
 13032                           ; BSR set to: 0
 13033  001F96  A1BA               	btfss	___fladd@grs& (0+255),0,b
 13034  001F98  EFD0  F00F         	goto	u12721
 13035  001F9C  EFD2  F00F         	goto	u12720
 13036  001FA0                     u12721:
 13037  001FA0  EFD8  F00F         	goto	l11267
 13038  001FA4                     u12720:
 13039  001FA4                     
 13040                           ; BSR set to: 0
 13041  001FA4  90D8               	bcf	status,0,c
 13042  001FA6  31BA               	rrcf	___fladd@grs& (0+255),w,b
 13043  001FA8  0901               	iorlw	1
 13044  001FAA  6FBA               	movwf	___fladd@grs& (0+255),b
 13045  001FAC  EFDA  F00F         	goto	l11269
 13046  001FB0                     l11267:
 13047                           
 13048                           ; BSR set to: 0
 13049  001FB0  90D8               	bcf	status,0,c
 13050  001FB2  33BA               	rrcf	___fladd@grs& (0+255),f,b
 13051  001FB4                     l11269:
 13052                           
 13053                           ; BSR set to: 0
 13054  001FB4  A1AB               	btfss	___fladd@b& (0+255),0,b
 13055  001FB6  EFDF  F00F         	goto	u12731
 13056  001FBA  EFE1  F00F         	goto	u12730
 13057  001FBE                     u12731:
 13058  001FBE  EFE2  F00F         	goto	l11273
 13059  001FC2                     u12730:
 13060  001FC2                     
 13061                           ; BSR set to: 0
 13062  001FC2  8FBA               	bsf	___fladd@grs& (0+255),7,b
 13063  001FC4                     l11273:
 13064                           
 13065                           ; BSR set to: 0
 13066  001FC4  35AE               	rlcf	(___fladd@b+3)& (0+255),w,b
 13067  001FC6  33AE               	rrcf	(___fladd@b+3)& (0+255),f,b
 13068  001FC8  33AD               	rrcf	(___fladd@b+2)& (0+255),f,b
 13069  001FCA  33AC               	rrcf	(___fladd@b+1)& (0+255),f,b
 13070  001FCC  33AB               	rrcf	___fladd@b& (0+255),f,b
 13071  001FCE                     
 13072                           ; BSR set to: 0
 13073  001FCE  2BB9               	incf	___fladd@bexp& (0+255),f,b
 13074  001FD0  EF77  F010         	goto	l11313
 13075  001FD4                     l11277:
 13076                           
 13077                           ; BSR set to: 0
 13078  001FD4  51AF               	movf	___fladd@a& (0+255),w,b
 13079  001FD6  5DAB               	subwf	___fladd@b& (0+255),w,b
 13080  001FD8  51B0               	movf	(___fladd@a+1)& (0+255),w,b
 13081  001FDA  59AC               	subwfb	(___fladd@b+1)& (0+255),w,b
 13082  001FDC  51B1               	movf	(___fladd@a+2)& (0+255),w,b
 13083  001FDE  59AD               	subwfb	(___fladd@b+2)& (0+255),w,b
 13084  001FE0  51AE               	movf	(___fladd@b+3)& (0+255),w,b
 13085  001FE2  0A80               	xorlw	128
 13086  001FE4  6FB3               	movwf	??___fladd& (0+255),b
 13087  001FE6  51B2               	movf	(___fladd@a+3)& (0+255),w,b
 13088  001FE8  0A80               	xorlw	128
 13089  001FEA  59B3               	subwfb	??___fladd& (0+255),w,b
 13090  001FEC  B0D8               	btfsc	status,0,c
 13091  001FEE  EFFB  F00F         	goto	u12741
 13092  001FF2  EFFD  F00F         	goto	u12740
 13093  001FF6                     u12741:
 13094  001FF6  EF28  F010         	goto	l11287
 13095  001FFA                     u12740:
 13096  001FFA                     
 13097                           ; BSR set to: 0
 13098  001FFA  51AB               	movf	___fladd@b& (0+255),w,b
 13099  001FFC  5DAF               	subwf	___fladd@a& (0+255),w,b
 13100  001FFE  6FB3               	movwf	??___fladd& (0+255),b
 13101  002000  51AC               	movf	(___fladd@b+1)& (0+255),w,b
 13102  002002  59B0               	subwfb	(___fladd@a+1)& (0+255),w,b
 13103  002004  6FB4               	movwf	(??___fladd+1)& (0+255),b
 13104  002006  51AD               	movf	(___fladd@b+2)& (0+255),w,b
 13105  002008  59B1               	subwfb	(___fladd@a+2)& (0+255),w,b
 13106  00200A  6FB5               	movwf	(??___fladd+2)& (0+255),b
 13107  00200C  51AE               	movf	(___fladd@b+3)& (0+255),w,b
 13108  00200E  59B2               	subwfb	(___fladd@a+3)& (0+255),w,b
 13109  002010  6FB6               	movwf	(??___fladd+3)& (0+255),b
 13110  002012  0EFF               	movlw	255
 13111  002014  25B3               	addwf	??___fladd& (0+255),w,b
 13112  002016  6FAB               	movwf	___fladd@b& (0+255),b
 13113  002018  0EFF               	movlw	255
 13114  00201A  21B4               	addwfc	(??___fladd+1)& (0+255),w,b
 13115  00201C  6FAC               	movwf	(___fladd@b+1)& (0+255),b
 13116  00201E  0EFF               	movlw	255
 13117  002020  21B5               	addwfc	(??___fladd+2)& (0+255),w,b
 13118  002022  6FAD               	movwf	(___fladd@b+2)& (0+255),b
 13119  002024  0EFF               	movlw	255
 13120  002026  21B6               	addwfc	(??___fladd+3)& (0+255),w,b
 13121  002028  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 13122  00202A  0E80               	movlw	128
 13123  00202C  1BB7               	xorwf	___fladd@signs& (0+255),f,b
 13124  00202E                     
 13125                           ; BSR set to: 0
 13126  00202E  6DBA               	negf	___fladd@grs& (0+255),b
 13127  002030                     
 13128                           ; BSR set to: 0
 13129  002030  51BA               	movf	___fladd@grs& (0+255),w,b
 13130  002032  A4D8               	btfss	status,2,c
 13131  002034  EF1E  F010         	goto	u12751
 13132  002038  EF20  F010         	goto	u12750
 13133  00203C                     u12751:
 13134  00203C  EF30  F010         	goto	l2307
 13135  002040                     u12750:
 13136  002040                     
 13137                           ; BSR set to: 0
 13138  002040  0E01               	movlw	1
 13139  002042  27AB               	addwf	___fladd@b& (0+255),f,b
 13140  002044  0E00               	movlw	0
 13141  002046  23AC               	addwfc	(___fladd@b+1)& (0+255),f,b
 13142  002048  23AD               	addwfc	(___fladd@b+2)& (0+255),f,b
 13143  00204A  23AE               	addwfc	(___fladd@b+3)& (0+255),f,b
 13144  00204C  EF30  F010         	goto	l2307
 13145  002050                     l11287:
 13146                           
 13147                           ; BSR set to: 0
 13148  002050  51AF               	movf	___fladd@a& (0+255),w,b
 13149  002052  5FAB               	subwf	___fladd@b& (0+255),f,b
 13150  002054  51B0               	movf	(___fladd@a+1)& (0+255),w,b
 13151  002056  5BAC               	subwfb	(___fladd@b+1)& (0+255),f,b
 13152  002058  51B1               	movf	(___fladd@a+2)& (0+255),w,b
 13153  00205A  5BAD               	subwfb	(___fladd@b+2)& (0+255),f,b
 13154  00205C  51B2               	movf	(___fladd@a+3)& (0+255),w,b
 13155  00205E  5BAE               	subwfb	(___fladd@b+3)& (0+255),f,b
 13156  002060                     l2307:
 13157                           
 13158                           ; BSR set to: 0
 13159  002060  51AB               	movf	___fladd@b& (0+255),w,b
 13160  002062  11AC               	iorwf	(___fladd@b+1)& (0+255),w,b
 13161  002064  11AD               	iorwf	(___fladd@b+2)& (0+255),w,b
 13162  002066  11AE               	iorwf	(___fladd@b+3)& (0+255),w,b
 13163  002068  A4D8               	btfss	status,2,c
 13164  00206A  EF39  F010         	goto	u12761
 13165  00206E  EF3B  F010         	goto	u12760
 13166  002072                     u12761:
 13167  002072  EF70  F010         	goto	l11311
 13168  002076                     u12760:
 13169  002076                     
 13170                           ; BSR set to: 0
 13171  002076  51BA               	movf	___fladd@grs& (0+255),w,b
 13172  002078  A4D8               	btfss	status,2,c
 13173  00207A  EF41  F010         	goto	u12771
 13174  00207E  EF43  F010         	goto	u12770
 13175  002082                     u12771:
 13176  002082  EF70  F010         	goto	l11311
 13177  002086                     u12770:
 13178  002086                     
 13179                           ; BSR set to: 0
 13180  002086  0E00               	movlw	0
 13181  002088  6FAB               	movwf	?___fladd& (0+255),b
 13182  00208A  0E00               	movlw	0
 13183  00208C  6FAC               	movwf	(?___fladd+1)& (0+255),b
 13184  00208E  0E00               	movlw	0
 13185  002090  6FAD               	movwf	(?___fladd+2)& (0+255),b
 13186  002092  0E00               	movlw	0
 13187  002094  6FAE               	movwf	(?___fladd+3)& (0+255),b
 13188  002096  EF0B  F011         	goto	l2299
 13189  00209A                     l11295:
 13190                           
 13191                           ; BSR set to: 0
 13192  00209A  90D8               	bcf	status,0,c
 13193  00209C  37AB               	rlcf	___fladd@b& (0+255),f,b
 13194  00209E  37AC               	rlcf	(___fladd@b+1)& (0+255),f,b
 13195  0020A0  37AD               	rlcf	(___fladd@b+2)& (0+255),f,b
 13196  0020A2  37AE               	rlcf	(___fladd@b+3)& (0+255),f,b
 13197  0020A4                     
 13198                           ; BSR set to: 0
 13199  0020A4  AFBA               	btfss	___fladd@grs& (0+255),7,b
 13200  0020A6  EF57  F010         	goto	u12781
 13201  0020AA  EF59  F010         	goto	u12780
 13202  0020AE                     u12781:
 13203  0020AE  EF5A  F010         	goto	l11301
 13204  0020B2                     u12780:
 13205  0020B2                     
 13206                           ; BSR set to: 0
 13207  0020B2  81AB               	bsf	___fladd@b& (0+255),0,b
 13208  0020B4                     l11301:
 13209                           
 13210                           ; BSR set to: 0
 13211  0020B4  A1BA               	btfss	___fladd@grs& (0+255),0,b
 13212  0020B6  EF5F  F010         	goto	u12791
 13213  0020BA  EF61  F010         	goto	u12790
 13214  0020BE                     u12791:
 13215  0020BE  EF65  F010         	goto	l11305
 13216  0020C2                     u12790:
 13217  0020C2                     
 13218                           ; BSR set to: 0
 13219  0020C2  80D8               	bsf	status,0,c
 13220  0020C4  37BA               	rlcf	___fladd@grs& (0+255),f,b
 13221  0020C6  EF67  F010         	goto	l11307
 13222  0020CA                     l11305:
 13223                           
 13224                           ; BSR set to: 0
 13225  0020CA  90D8               	bcf	status,0,c
 13226  0020CC  37BA               	rlcf	___fladd@grs& (0+255),f,b
 13227  0020CE                     l11307:
 13228                           
 13229                           ; BSR set to: 0
 13230  0020CE  51B9               	movf	___fladd@bexp& (0+255),w,b
 13231  0020D0  B4D8               	btfsc	status,2,c
 13232  0020D2  EF6D  F010         	goto	u12801
 13233  0020D6  EF6F  F010         	goto	u12800
 13234  0020DA                     u12801:
 13235  0020DA  EF70  F010         	goto	l11311
 13236  0020DE                     u12800:
 13237  0020DE                     
 13238                           ; BSR set to: 0
 13239  0020DE  07B9               	decf	___fladd@bexp& (0+255),f,b
 13240  0020E0                     l11311:
 13241                           
 13242                           ; BSR set to: 0
 13243  0020E0  AFAD               	btfss	(___fladd@b+2)& (0+255),7,b
 13244  0020E2  EF75  F010         	goto	u12811
 13245  0020E6  EF77  F010         	goto	u12810
 13246  0020EA                     u12811:
 13247  0020EA  EF4D  F010         	goto	l11295
 13248  0020EE                     u12810:
 13249  0020EE                     l11313:
 13250                           
 13251                           ; BSR set to: 0
 13252  0020EE  0E00               	movlw	0
 13253  0020F0  6FB8               	movwf	___fladd@aexp& (0+255),b
 13254  0020F2                     
 13255                           ; BSR set to: 0
 13256  0020F2  AFBA               	btfss	___fladd@grs& (0+255),7,b
 13257  0020F4  EF7E  F010         	goto	u12821
 13258  0020F8  EF80  F010         	goto	u12820
 13259  0020FC                     u12821:
 13260  0020FC  EF98  F010         	goto	l2316
 13261  002100                     u12820:
 13262  002100                     
 13263                           ; BSR set to: 0
 13264  002100  C0BA  F0B3         	movff	___fladd@grs,??___fladd
 13265  002104  0E7F               	movlw	127
 13266  002106  17B3               	andwf	??___fladd& (0+255),f,b
 13267  002108  B4D8               	btfsc	status,2,c
 13268  00210A  EF89  F010         	goto	u12831
 13269  00210E  EF8B  F010         	goto	u12830
 13270  002112                     u12831:
 13271  002112  EF8F  F010         	goto	l2317
 13272  002116                     u12830:
 13273  002116                     l11319:
 13274                           
 13275                           ; BSR set to: 0
 13276  002116  0E01               	movlw	1
 13277  002118  6FB8               	movwf	___fladd@aexp& (0+255),b
 13278  00211A  EF98  F010         	goto	l2316
 13279  00211E                     l2317:
 13280                           
 13281                           ; BSR set to: 0
 13282  00211E  A1AB               	btfss	___fladd@b& (0+255),0,b
 13283  002120  EF94  F010         	goto	u12841
 13284  002124  EF96  F010         	goto	u12840
 13285  002128                     u12841:
 13286  002128  EF98  F010         	goto	l2316
 13287  00212C                     u12840:
 13288  00212C  EF8B  F010         	goto	l11319
 13289  002130                     l2316:
 13290                           
 13291                           ; BSR set to: 0
 13292  002130  51B8               	movf	___fladd@aexp& (0+255),w,b
 13293  002132  B4D8               	btfsc	status,2,c
 13294  002134  EF9E  F010         	goto	u12851
 13295  002138  EFA0  F010         	goto	u12850
 13296  00213C                     u12851:
 13297  00213C  EFCB  F010         	goto	l11331
 13298  002140                     u12850:
 13299  002140                     
 13300                           ; BSR set to: 0
 13301  002140  0E01               	movlw	1
 13302  002142  27AB               	addwf	___fladd@b& (0+255),f,b
 13303  002144  0E00               	movlw	0
 13304  002146  23AC               	addwfc	(___fladd@b+1)& (0+255),f,b
 13305  002148  23AD               	addwfc	(___fladd@b+2)& (0+255),f,b
 13306  00214A  23AE               	addwfc	(___fladd@b+3)& (0+255),f,b
 13307  00214C                     
 13308                           ; BSR set to: 0
 13309  00214C  A1AE               	btfss	(___fladd@b+3)& (0+255),0,b
 13310  00214E  EFAB  F010         	goto	u12861
 13311  002152  EFAD  F010         	goto	u12860
 13312  002156                     u12861:
 13313  002156  EFCB  F010         	goto	l11331
 13314  00215A                     u12860:
 13315  00215A                     
 13316                           ; BSR set to: 0
 13317  00215A  C0AB  F0B3         	movff	___fladd@b,??___fladd
 13318  00215E  C0AC  F0B4         	movff	___fladd@b+1,??___fladd+1
 13319  002162  C0AD  F0B5         	movff	___fladd@b+2,??___fladd+2
 13320  002166  C0AE  F0B6         	movff	___fladd@b+3,??___fladd+3
 13321  00216A  35B6               	rlcf	(??___fladd+3)& (0+255),w,b
 13322  00216C  33B6               	rrcf	(??___fladd+3)& (0+255),f,b
 13323  00216E  33B5               	rrcf	(??___fladd+2)& (0+255),f,b
 13324  002170  33B4               	rrcf	(??___fladd+1)& (0+255),f,b
 13325  002172  33B3               	rrcf	??___fladd& (0+255),f,b
 13326  002174  C0B3  F0AB         	movff	??___fladd,___fladd@b
 13327  002178  C0B4  F0AC         	movff	??___fladd+1,___fladd@b+1
 13328  00217C  C0B5  F0AD         	movff	??___fladd+2,___fladd@b+2
 13329  002180  C0B6  F0AE         	movff	??___fladd+3,___fladd@b+3
 13330  002184  29B9               	incf	___fladd@bexp& (0+255),w,b
 13331  002186  B4D8               	btfsc	status,2,c
 13332  002188  EFC8  F010         	goto	u12871
 13333  00218C  EFCA  F010         	goto	u12870
 13334  002190                     u12871:
 13335  002190  EFCB  F010         	goto	l11331
 13336  002194                     u12870:
 13337  002194                     
 13338                           ; BSR set to: 0
 13339  002194  2BB9               	incf	___fladd@bexp& (0+255),f,b
 13340  002196                     l11331:
 13341                           
 13342                           ; BSR set to: 0
 13343  002196  29B9               	incf	___fladd@bexp& (0+255),w,b
 13344  002198  B4D8               	btfsc	status,2,c
 13345  00219A  EFD1  F010         	goto	u12881
 13346  00219E  EFD3  F010         	goto	u12880
 13347  0021A2                     u12881:
 13348  0021A2  EFDB  F010         	goto	l11335
 13349  0021A6                     u12880:
 13350  0021A6                     
 13351                           ; BSR set to: 0
 13352  0021A6  51B9               	movf	___fladd@bexp& (0+255),w,b
 13353  0021A8  A4D8               	btfss	status,2,c
 13354  0021AA  EFD9  F010         	goto	u12891
 13355  0021AE  EFDB  F010         	goto	u12890
 13356  0021B2                     u12891:
 13357  0021B2  EFED  F010         	goto	l11339
 13358  0021B6                     u12890:
 13359  0021B6                     l11335:
 13360                           
 13361                           ; BSR set to: 0
 13362  0021B6  0E00               	movlw	0
 13363  0021B8  6FAB               	movwf	___fladd@b& (0+255),b
 13364  0021BA  0E00               	movlw	0
 13365  0021BC  6FAC               	movwf	(___fladd@b+1)& (0+255),b
 13366  0021BE  0E00               	movlw	0
 13367  0021C0  6FAD               	movwf	(___fladd@b+2)& (0+255),b
 13368  0021C2  0E00               	movlw	0
 13369  0021C4  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 13370  0021C6  51B9               	movf	___fladd@bexp& (0+255),w,b
 13371  0021C8  A4D8               	btfss	status,2,c
 13372  0021CA  EFE9  F010         	goto	u12901
 13373  0021CE  EFEB  F010         	goto	u12900
 13374  0021D2                     u12901:
 13375  0021D2  EFED  F010         	goto	l11339
 13376  0021D6                     u12900:
 13377  0021D6                     
 13378                           ; BSR set to: 0
 13379  0021D6  0E00               	movlw	0
 13380  0021D8  6FB7               	movwf	___fladd@signs& (0+255),b
 13381  0021DA                     l11339:
 13382                           
 13383                           ; BSR set to: 0
 13384  0021DA  A1B9               	btfss	___fladd@bexp& (0+255),0,b
 13385  0021DC  EFF2  F010         	goto	u12911
 13386  0021E0  EFF4  F010         	goto	u12910
 13387  0021E4                     u12911:
 13388  0021E4  EFF7  F010         	goto	l11343
 13389  0021E8                     u12910:
 13390  0021E8                     
 13391                           ; BSR set to: 0
 13392  0021E8  8FAD               	bsf	(___fladd@b+2)& (0+255),7,b
 13393  0021EA  EFF8  F010         	goto	l11345
 13394  0021EE                     l11343:
 13395                           
 13396                           ; BSR set to: 0
 13397  0021EE  9FAD               	bcf	(___fladd@b+2)& (0+255),7,b
 13398  0021F0                     l11345:
 13399                           
 13400                           ; BSR set to: 0
 13401  0021F0  90D8               	bcf	status,0,c
 13402  0021F2  31B9               	rrcf	___fladd@bexp& (0+255),w,b
 13403  0021F4  6FAE               	movwf	(___fladd@b+3)& (0+255),b
 13404  0021F6                     
 13405                           ; BSR set to: 0
 13406  0021F6  AFB7               	btfss	___fladd@signs& (0+255),7,b
 13407  0021F8  EF00  F011         	goto	u12921
 13408  0021FC  EF02  F011         	goto	u12920
 13409  002200                     u12921:
 13410  002200  EF03  F011         	goto	l11351
 13411  002204                     u12920:
 13412  002204                     
 13413                           ; BSR set to: 0
 13414  002204  8FAE               	bsf	(___fladd@b+3)& (0+255),7,b
 13415  002206                     l11351:
 13416                           
 13417                           ; BSR set to: 0
 13418  002206  C0AB  F0AB         	movff	___fladd@b,?___fladd
 13419  00220A  C0AC  F0AC         	movff	___fladd@b+1,?___fladd+1
 13420  00220E  C0AD  F0AD         	movff	___fladd@b+2,?___fladd+2
 13421  002212  C0AE  F0AE         	movff	___fladd@b+3,?___fladd+3
 13422  002216                     l2299:
 13423                           
 13424                           ; BSR set to: 0
 13425  002216  0012               	return		;funcret
 13426  002218                     __end_of___fladd:
 13427                           	callstack 0
 13428                           
 13429 ;; *************** function _async_Tx_config *****************
 13430 ;; Defined at:
 13431 ;;		line 386 in file "MCAL/EUSART/mcal_EUSART.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;  _tx_obj         2   41[COMRAM] PTR const struct .
 13434 ;;		 -> _uart_obj(12), 
 13435 ;; Auto vars:     Size  Location     Type
 13436 ;;  ret_val         1   43[COMRAM] unsigned char 
 13437 ;; Return value:  Size  Location     Type
 13438 ;;                  1    wreg      unsigned char 
 13439 ;; Registers used:
 13440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13450 ;;Total ram usage:        3 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; Hardware stack levels required when called:   10
 13453 ;; This function calls:
 13454 ;;		Nothing
 13455 ;; This function is called by:
 13456 ;;		_EUSART_Async_Init
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text52
 13461  005526                     __ptext52:
 13462                           	callstack 0
 13463  005526                     _async_Tx_config:
 13464                           	callstack 18
 13465  005526                     
 13466                           ;MCAL/EUSART/mcal_EUSART.c: 386: static Std_ReturnType async_Tx_config(const uart_tx_con
      +                          fig_st *_tx_obj );MCAL/EUSART/mcal_EUSART.c: 387: {;MCAL/EUSART/mcal_EUSART.c: 388:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
 13467  005526  0E01               	movlw	1
 13468  005528  6E2C               	movwf	async_Tx_config@ret_val^0,c
 13469  00552A                     
 13470                           ;MCAL/EUSART/mcal_EUSART.c: 390:     if(((void*)0) == _tx_obj)
 13471  00552A  502A               	movf	async_Tx_config@_tx_obj^0,w,c
 13472  00552C  102B               	iorwf	(async_Tx_config@_tx_obj+1)^0,w,c
 13473  00552E  A4D8               	btfss	status,2,c
 13474  005530  EF9C  F02A         	goto	u10091
 13475  005534  EF9E  F02A         	goto	u10090
 13476  005538                     u10091:
 13477  005538  EFA2  F02A         	goto	l9209
 13478  00553C                     u10090:
 13479  00553C                     
 13480                           ;MCAL/EUSART/mcal_EUSART.c: 391:     {;MCAL/EUSART/mcal_EUSART.c: 392:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
 13481  00553C  0E00               	movlw	0
 13482  00553E  6E2C               	movwf	async_Tx_config@ret_val^0,c
 13483                           
 13484                           ;MCAL/EUSART/mcal_EUSART.c: 393:     }
 13485  005540  EFD9  F02A         	goto	l9225
 13486  005544                     l9209:
 13487                           
 13488                           ;MCAL/EUSART/mcal_EUSART.c: 395:     {;MCAL/EUSART/mcal_EUSART.c: 396:         if(1 == _
      +                          tx_obj->tx_enable)
 13489  005544  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
 13490  005548  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
 13491  00554C  A4DF               	btfss	indf2,2,c
 13492  00554E  EFAB  F02A         	goto	u10101
 13493  005552  EFAD  F02A         	goto	u10100
 13494  005556                     u10101:
 13495  005556  EFCB  F02A         	goto	l9221
 13496  00555A                     u10100:
 13497  00555A                     
 13498                           ;MCAL/EUSART/mcal_EUSART.c: 397:         {;MCAL/EUSART/mcal_EUSART.c: 400:             (
      +                          TXSTAbits.TXEN = 0);
 13499  00555A  9AAC               	bcf	172,5,c	;volatile
 13500  00555C                     
 13501                           ;MCAL/EUSART/mcal_EUSART.c: 406:             if(1 == _tx_obj->tx_9th_bit_en )
 13502  00555C  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
 13503  005560  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
 13504  005564  A6DF               	btfss	indf2,3,c
 13505  005566  EFB7  F02A         	goto	u10111
 13506  00556A  EFB9  F02A         	goto	u10110
 13507  00556E                     u10111:
 13508  00556E  EFBC  F02A         	goto	l9217
 13509  005572                     u10110:
 13510  005572                     
 13511                           ;MCAL/EUSART/mcal_EUSART.c: 407:             {;MCAL/EUSART/mcal_EUSART.c: 408:          
      +                                 TXSTAbits.TX9 = 1 ;
 13512  005572  8CAC               	bsf	172,6,c	;volatile
 13513                           
 13514                           ;MCAL/EUSART/mcal_EUSART.c: 409:             }
 13515  005574  EFC8  F02A         	goto	l713
 13516  005578                     l9217:
 13517  005578  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
 13518  00557C  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
 13519  005580  B6DF               	btfsc	indf2,3,c
 13520  005582  EFC5  F02A         	goto	u10121
 13521  005586  EFC7  F02A         	goto	u10120
 13522  00558A                     u10121:
 13523  00558A  EFC8  F02A         	goto	l713
 13524  00558E                     u10120:
 13525  00558E                     
 13526                           ;MCAL/EUSART/mcal_EUSART.c: 411:             {;MCAL/EUSART/mcal_EUSART.c: 412:          
      +                                 TXSTAbits.TX9 = 0 ;
 13527  00558E  9CAC               	bcf	172,6,c	;volatile
 13528  005590                     l713:
 13529                           
 13530                           ;MCAL/EUSART/mcal_EUSART.c: 417:             (TXSTAbits.TXEN = 1);
 13531  005590  8AAC               	bsf	172,5,c	;volatile
 13532                           
 13533                           ;MCAL/EUSART/mcal_EUSART.c: 418:         }
 13534  005592  EFD9  F02A         	goto	l9225
 13535  005596                     l9221:
 13536  005596  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
 13537  00559A  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
 13538  00559E  B4DF               	btfsc	indf2,2,c
 13539  0055A0  EFD4  F02A         	goto	u10131
 13540  0055A4  EFD6  F02A         	goto	u10130
 13541  0055A8                     u10131:
 13542  0055A8  EFD9  F02A         	goto	l716
 13543  0055AC                     u10130:
 13544  0055AC                     
 13545                           ;MCAL/EUSART/mcal_EUSART.c: 420:         {;MCAL/EUSART/mcal_EUSART.c: 422:             (
      +                          TXSTAbits.TXEN = 0);
 13546  0055AC  9AAC               	bcf	172,5,c	;volatile
 13547                           
 13548                           ;MCAL/EUSART/mcal_EUSART.c: 423:         }
 13549  0055AE  EFD9  F02A         	goto	l9225
 13550  0055B2                     l716:
 13551  0055B2                     l9225:
 13552                           
 13553                           ;MCAL/EUSART/mcal_EUSART.c: 428:     return ret_val ;
 13554  0055B2  502C               	movf	async_Tx_config@ret_val^0,w,c
 13555  0055B4  0012               	return		;funcret
 13556  0055B6                     __end_of_async_Tx_config:
 13557                           	callstack 0
 13558                           
 13559 ;; *************** function _async_Rx_config *****************
 13560 ;; Defined at:
 13561 ;;		line 431 in file "MCAL/EUSART/mcal_EUSART.c"
 13562 ;; Parameters:    Size  Location     Type
 13563 ;;  _rx_obj         2    0[BANK0 ] PTR const struct .
 13564 ;;		 -> _uart_obj(12), 
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;  ret_val         1    2[BANK0 ] unsigned char 
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      unsigned char 
 13569 ;; Registers used:
 13570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13571 ;; Tracked objects:
 13572 ;;		On entry : 0/0
 13573 ;;		On exit  : 0/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13579 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13580 ;;Total ram usage:        3 bytes
 13581 ;; Hardware stack levels used:    1
 13582 ;; Hardware stack levels required when called:   11
 13583 ;; This function calls:
 13584 ;;		_Rx_config_interrupt
 13585 ;; This function is called by:
 13586 ;;		_EUSART_Async_Init
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           	psect	text53
 13591  005130                     __ptext53:
 13592                           	callstack 0
 13593  005130                     _async_Rx_config:
 13594                           	callstack 17
 13595  005130                     
 13596                           ;MCAL/EUSART/mcal_EUSART.c: 431: static Std_ReturnType async_Rx_config(const uart_rx_con
      +                          fig_st *_rx_obj );MCAL/EUSART/mcal_EUSART.c: 432: {;MCAL/EUSART/mcal_EUSART.c: 433:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
 13597  005130  0E01               	movlw	1
 13598  005132  0100               	movlb	0	; () banked
 13599  005134  6F82               	movwf	async_Rx_config@ret_val& (0+255),b
 13600  005136                     
 13601                           ; BSR set to: 0
 13602                           ;MCAL/EUSART/mcal_EUSART.c: 435:     if(((void*)0) == _rx_obj)
 13603  005136  5180               	movf	async_Rx_config@_rx_obj& (0+255),w,b
 13604  005138  1181               	iorwf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
 13605  00513A  A4D8               	btfss	status,2,c
 13606  00513C  EFA2  F028         	goto	u15411
 13607  005140  EFA4  F028         	goto	u15410
 13608  005144                     u15411:
 13609  005144  EFA8  F028         	goto	l12871
 13610  005148                     u15410:
 13611  005148                     
 13612                           ; BSR set to: 0
 13613                           ;MCAL/EUSART/mcal_EUSART.c: 436:     {;MCAL/EUSART/mcal_EUSART.c: 437:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
 13614  005148  0E00               	movlw	0
 13615  00514A  6F82               	movwf	async_Rx_config@ret_val& (0+255),b
 13616                           
 13617                           ;MCAL/EUSART/mcal_EUSART.c: 438:     }
 13618  00514C  EFEF  F028         	goto	l12889
 13619  005150                     l12871:
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;MCAL/EUSART/mcal_EUSART.c: 440:     {;MCAL/EUSART/mcal_EUSART.c: 441:         if(1 == _
      +                          rx_obj->rx_enable)
 13623  005150  EE20 F006          	lfsr	2,6
 13624  005154  5180               	movf	async_Rx_config@_rx_obj& (0+255),w,b
 13625  005156  26D9               	addwf	fsr2l,f,c
 13626  005158  5181               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
 13627  00515A  22DA               	addwfc	fsr2h,f,c
 13628  00515C  A6DF               	btfss	indf2,3,c
 13629  00515E  EFB3  F028         	goto	u15421
 13630  005162  EFB5  F028         	goto	u15420
 13631  005166                     u15421:
 13632  005166  EFDF  F028         	goto	l12885
 13633  00516A                     u15420:
 13634  00516A                     
 13635                           ; BSR set to: 0
 13636                           ;MCAL/EUSART/mcal_EUSART.c: 442:         {;MCAL/EUSART/mcal_EUSART.c: 444:             (
      +                          RCSTAbits.CREN = 0);
 13637  00516A  98AB               	bcf	171,4,c	;volatile
 13638  00516C                     
 13639                           ; BSR set to: 0
 13640                           ;MCAL/EUSART/mcal_EUSART.c: 447:             ret_val = Rx_config_interrupt(_rx_obj);
 13641  00516C  C080  F02A         	movff	async_Rx_config@_rx_obj,Rx_config_interrupt@_rx_obj
 13642  005170  C081  F02B         	movff	async_Rx_config@_rx_obj+1,Rx_config_interrupt@_rx_obj+1
 13643  005174  ECF6  F029         	call	_Rx_config_interrupt	;wreg free
 13644  005178  0100               	movlb	0	; () banked
 13645  00517A  6F82               	movwf	async_Rx_config@ret_val& (0+255),b
 13646  00517C                     
 13647                           ; BSR set to: 0
 13648                           ;MCAL/EUSART/mcal_EUSART.c: 450:             if(1 == _rx_obj->rx_9th_bit_en )
 13649  00517C  EE20 F006          	lfsr	2,6
 13650  005180  5180               	movf	async_Rx_config@_rx_obj& (0+255),w,b
 13651  005182  26D9               	addwf	fsr2l,f,c
 13652  005184  5181               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
 13653  005186  22DA               	addwfc	fsr2h,f,c
 13654  005188  A8DF               	btfss	indf2,4,c
 13655  00518A  EFC9  F028         	goto	u15431
 13656  00518E  EFCB  F028         	goto	u15430
 13657  005192                     u15431:
 13658  005192  EFCE  F028         	goto	l12881
 13659  005196                     u15430:
 13660  005196                     
 13661                           ; BSR set to: 0
 13662                           ;MCAL/EUSART/mcal_EUSART.c: 451:             {;MCAL/EUSART/mcal_EUSART.c: 452:          
      +                                 RCSTAbits.RX9 = 1 ;
 13663  005196  8CAB               	bsf	171,6,c	;volatile
 13664                           
 13665                           ;MCAL/EUSART/mcal_EUSART.c: 453:             }
 13666  005198  EFDC  F028         	goto	l726
 13667  00519C                     l12881:
 13668                           
 13669                           ; BSR set to: 0
 13670  00519C  EE20 F006          	lfsr	2,6
 13671  0051A0  5180               	movf	async_Rx_config@_rx_obj& (0+255),w,b
 13672  0051A2  26D9               	addwf	fsr2l,f,c
 13673  0051A4  5181               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
 13674  0051A6  22DA               	addwfc	fsr2h,f,c
 13675  0051A8  B8DF               	btfsc	indf2,4,c
 13676  0051AA  EFD9  F028         	goto	u15441
 13677  0051AE  EFDB  F028         	goto	u15440
 13678  0051B2                     u15441:
 13679  0051B2  EFDC  F028         	goto	l726
 13680  0051B6                     u15440:
 13681  0051B6                     
 13682                           ; BSR set to: 0
 13683                           ;MCAL/EUSART/mcal_EUSART.c: 455:             {;MCAL/EUSART/mcal_EUSART.c: 456:          
      +                                 RCSTAbits.RX9 = 0 ;
 13684  0051B6  9CAB               	bcf	171,6,c	;volatile
 13685  0051B8                     l726:
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;MCAL/EUSART/mcal_EUSART.c: 461:             (RCSTAbits.CREN = 1);
 13689  0051B8  88AB               	bsf	171,4,c	;volatile
 13690                           
 13691                           ;MCAL/EUSART/mcal_EUSART.c: 462:         }
 13692  0051BA  EFEF  F028         	goto	l12889
 13693  0051BE                     l12885:
 13694                           
 13695                           ; BSR set to: 0
 13696  0051BE  EE20 F006          	lfsr	2,6
 13697  0051C2  5180               	movf	async_Rx_config@_rx_obj& (0+255),w,b
 13698  0051C4  26D9               	addwf	fsr2l,f,c
 13699  0051C6  5181               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
 13700  0051C8  22DA               	addwfc	fsr2h,f,c
 13701  0051CA  B6DF               	btfsc	indf2,3,c
 13702  0051CC  EFEA  F028         	goto	u15451
 13703  0051D0  EFEC  F028         	goto	u15450
 13704  0051D4                     u15451:
 13705  0051D4  EFEF  F028         	goto	l729
 13706  0051D8                     u15450:
 13707  0051D8                     
 13708                           ; BSR set to: 0
 13709                           ;MCAL/EUSART/mcal_EUSART.c: 464:         {;MCAL/EUSART/mcal_EUSART.c: 466:             (
      +                          RCSTAbits.CREN = 0);
 13710  0051D8  98AB               	bcf	171,4,c	;volatile
 13711                           
 13712                           ;MCAL/EUSART/mcal_EUSART.c: 467:         }
 13713  0051DA  EFEF  F028         	goto	l12889
 13714  0051DE                     l729:
 13715  0051DE                     l12889:
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;MCAL/EUSART/mcal_EUSART.c: 472:     return ret_val ;
 13719  0051DE  5182               	movf	async_Rx_config@ret_val& (0+255),w,b
 13720  0051E0                     
 13721                           ; BSR set to: 0
 13722  0051E0  0012               	return		;funcret
 13723  0051E2                     __end_of_async_Rx_config:
 13724                           	callstack 0
 13725                           
 13726 ;; *************** function _Rx_config_interrupt *****************
 13727 ;; Defined at:
 13728 ;;		line 518 in file "MCAL/EUSART/mcal_EUSART.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;  _rx_obj         2   41[COMRAM] PTR const struct .
 13731 ;;		 -> _uart_obj(12), 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  ret_val         1   43[COMRAM] unsigned char 
 13734 ;; Return value:  Size  Location     Type
 13735 ;;                  1    wreg      unsigned char 
 13736 ;; Registers used:
 13737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13738 ;; Tracked objects:
 13739 ;;		On entry : 0/0
 13740 ;;		On exit  : 0/0
 13741 ;;		Unchanged: 0/0
 13742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13746 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13747 ;;Total ram usage:        3 bytes
 13748 ;; Hardware stack levels used:    1
 13749 ;; Hardware stack levels required when called:   10
 13750 ;; This function calls:
 13751 ;;		Nothing
 13752 ;; This function is called by:
 13753 ;;		_async_Rx_config
 13754 ;; This function uses a non-reentrant model
 13755 ;;
 13756                           
 13757                           	psect	text54
 13758  0053EC                     __ptext54:
 13759                           	callstack 0
 13760  0053EC                     _Rx_config_interrupt:
 13761                           	callstack 17
 13762  0053EC                     
 13763                           ;MCAL/EUSART/mcal_EUSART.c: 518: static __attribute__((inline)) Std_ReturnType Rx_config
      +                          _interrupt(const uart_rx_config_st *_rx_obj);MCAL/EUSART/mcal_EUSART.c: 519: {;MCAL/EUSA
      +                          RT/mcal_EUSART.c: 521:      Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
 13764  0053EC  0E01               	movlw	1
 13765  0053EE  6E2C               	movwf	Rx_config_interrupt@ret_val^0,c
 13766  0053F0                     
 13767                           ;MCAL/EUSART/mcal_EUSART.c: 523:     if(((void*)0) == _rx_obj)
 13768  0053F0  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
 13769  0053F2  102B               	iorwf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
 13770  0053F4  A4D8               	btfss	status,2,c
 13771  0053F6  EFFF  F029         	goto	u14991
 13772  0053FA  EF01  F02A         	goto	u14990
 13773  0053FE                     u14991:
 13774  0053FE  EF05  F02A         	goto	l740
 13775  005402                     u14990:
 13776  005402                     
 13777                           ;MCAL/EUSART/mcal_EUSART.c: 524:     {;MCAL/EUSART/mcal_EUSART.c: 525:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
 13778  005402  0E00               	movlw	0
 13779  005404  6E2C               	movwf	Rx_config_interrupt@ret_val^0,c
 13780                           
 13781                           ;MCAL/EUSART/mcal_EUSART.c: 526:     }
 13782  005406  EF45  F02A         	goto	l12581
 13783  00540A                     l740:
 13784                           
 13785                           ;MCAL/EUSART/mcal_EUSART.c: 528:     {;MCAL/EUSART/mcal_EUSART.c: 530:         (PIE1bits
      +                          .RCIE = 0);
 13786  00540A  9A9D               	bcf	157,5,c	;volatile
 13787  00540C                     
 13788                           ;MCAL/EUSART/mcal_EUSART.c: 531:         eusart_Rx_InterruptHandler = _rx_obj->rx_Interr
      +                          uptHandler ;
 13789  00540C  C02A  FFD9         	movff	Rx_config_interrupt@_rx_obj,fsr2l
 13790  005410  C02B  FFDA         	movff	Rx_config_interrupt@_rx_obj+1,fsr2h
 13791  005414  CFDE F03F          	movff	postinc2,_eusart_Rx_InterruptHandler
 13792  005418  CFDD F040          	movff	postdec2,_eusart_Rx_InterruptHandler+1
 13793  00541C                     
 13794                           ;MCAL/EUSART/mcal_EUSART.c: 532:         eusart_frameerr_CallBack = _rx_obj->ferr_Interr
      +                          uptHandler ;
 13795  00541C  EE20 F004          	lfsr	2,4
 13796  005420  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
 13797  005422  26D9               	addwf	fsr2l,f,c
 13798  005424  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
 13799  005426  22DA               	addwfc	fsr2h,f,c
 13800  005428  CFDE F131          	movff	postinc2,_eusart_frameerr_CallBack
 13801  00542C  CFDD F132          	movff	postdec2,_eusart_frameerr_CallBack+1
 13802  005430                     
 13803                           ;MCAL/EUSART/mcal_EUSART.c: 533:         eusart_overrunerr_CallBack = _rx_obj->oerr_Inte
      +                          rruptHandler ;
 13804  005430  EE20 F002          	lfsr	2,2
 13805  005434  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
 13806  005436  26D9               	addwf	fsr2l,f,c
 13807  005438  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
 13808  00543A  22DA               	addwfc	fsr2h,f,c
 13809  00543C  CFDE F133          	movff	postinc2,_eusart_overrunerr_CallBack
 13810  005440  CFDD F134          	movff	postdec2,_eusart_overrunerr_CallBack+1
 13811  005444                     
 13812                           ;MCAL/EUSART/mcal_EUSART.c: 536:                 (RCONbits.IPEN = 1 );
 13813  005444  8ED0               	bsf	208,7,c	;volatile
 13814  005446                     
 13815                           ;MCAL/EUSART/mcal_EUSART.c: 537:                 if(1 == _rx_obj->uart_rx_priority)
 13816  005446  EE20 F006          	lfsr	2,6
 13817  00544A  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
 13818  00544C  26D9               	addwf	fsr2l,f,c
 13819  00544E  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
 13820  005450  22DA               	addwfc	fsr2h,f,c
 13821  005452  A0DF               	btfss	indf2,0,c
 13822  005454  EF2E  F02A         	goto	u15001
 13823  005458  EF30  F02A         	goto	u15000
 13824  00545C                     u15001:
 13825  00545C  EF34  F02A         	goto	l12577
 13826  005460                     u15000:
 13827  005460                     
 13828                           ;MCAL/EUSART/mcal_EUSART.c: 538:                 {;MCAL/EUSART/mcal_EUSART.c: 539:      
      +                                         (IPR1bits.RCIP = 1);
 13829  005460  8A9F               	bsf	159,5,c	;volatile
 13830                           
 13831                           ;MCAL/EUSART/mcal_EUSART.c: 540:                     (INTCONbits.GIEH = 1);
 13832  005462  8EF2               	bsf	242,7,c	;volatile
 13833                           
 13834                           ;MCAL/EUSART/mcal_EUSART.c: 542:                 }
 13835  005464  EF44  F02A         	goto	l743
 13836  005468                     l12577:
 13837  005468  EE20 F006          	lfsr	2,6
 13838  00546C  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
 13839  00546E  26D9               	addwf	fsr2l,f,c
 13840  005470  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
 13841  005472  22DA               	addwfc	fsr2h,f,c
 13842  005474  B0DF               	btfsc	indf2,0,c
 13843  005476  EF3F  F02A         	goto	u15011
 13844  00547A  EF41  F02A         	goto	u15010
 13845  00547E                     u15011:
 13846  00547E  EF44  F02A         	goto	l743
 13847  005482                     u15010:
 13848  005482                     
 13849                           ;MCAL/EUSART/mcal_EUSART.c: 544:                 {;MCAL/EUSART/mcal_EUSART.c: 545:      
      +                                         (IPR1bits.RCIP = 0);
 13850  005482  9A9F               	bcf	159,5,c	;volatile
 13851                           
 13852                           ;MCAL/EUSART/mcal_EUSART.c: 546:                     (INTCONbits.GIEH = 1);
 13853  005484  8EF2               	bsf	242,7,c	;volatile
 13854                           
 13855                           ;MCAL/EUSART/mcal_EUSART.c: 547:                     (INTCONbits.GIEL = 1);
 13856  005486  8CF2               	bsf	242,6,c	;volatile
 13857  005488                     l743:
 13858                           
 13859                           ;MCAL/EUSART/mcal_EUSART.c: 555:         (PIE1bits.RCIE = 1);
 13860  005488  8A9D               	bsf	157,5,c	;volatile
 13861  00548A                     l12581:
 13862                           
 13863                           ;MCAL/EUSART/mcal_EUSART.c: 560:     return ret_val ;
 13864  00548A  502C               	movf	Rx_config_interrupt@ret_val^0,w,c
 13865  00548C  0012               	return		;funcret
 13866  00548E                     __end_of_Rx_config_interrupt:
 13867                           	callstack 0
 13868                           
 13869 ;; *************** function _ADC_Init *****************
 13870 ;; Defined at:
 13871 ;;		line 23 in file "MCAL/ADC/mcal_adc.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;  _adc            2    2[BANK0 ] PTR const struct .
 13874 ;;		 -> battery_adc(5), 
 13875 ;; Auto vars:     Size  Location     Type
 13876 ;;  ERRORSTATUS     1    0        unsigned char 
 13877 ;; Return value:  Size  Location     Type
 13878 ;;                  1    wreg      unsigned char 
 13879 ;; Registers used:
 13880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13881 ;; Tracked objects:
 13882 ;;		On entry : 0/0
 13883 ;;		On exit  : 0/0
 13884 ;;		Unchanged: 0/0
 13885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13886 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13890 ;;Total ram usage:        4 bytes
 13891 ;; Hardware stack levels used:    1
 13892 ;; Hardware stack levels required when called:   11
 13893 ;; This function calls:
 13894 ;;		_adc_channel_pin_config_as_input
 13895 ;;		_adc_select_result_formate
 13896 ;;		_adc_select_voltage_reference
 13897 ;; This function is called by:
 13898 ;;		_application_intialize
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text55
 13903  00548E                     __ptext55:
 13904                           	callstack 0
 13905  00548E                     _ADC_Init:
 13906                           	callstack 18
 13907  00548E                     
 13908                           ;MCAL/ADC/mcal_adc.c: 26:     if (((void*)0)==_adc)
 13909  00548E  0100               	movlb	0	; () banked
 13910  005490  5182               	movf	ADC_Init@_adc& (0+255),w,b
 13911  005492  1183               	iorwf	(ADC_Init@_adc+1)& (0+255),w,b
 13912  005494  A4D8               	btfss	status,2,c
 13913  005496  EF4F  F02A         	goto	u15611
 13914  00549A  EF51  F02A         	goto	u15610
 13915  00549E                     u15611:
 13916  00549E  EF53  F02A         	goto	l321
 13917  0054A2                     u15610:
 13918  0054A2                     
 13919                           ; BSR set to: 0
 13920                           ;MCAL/ADC/mcal_adc.c: 29:     }
 13921  0054A2  EF92  F02A         	goto	l323
 13922  0054A6                     l321:
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;MCAL/ADC/mcal_adc.c: 31:     {;MCAL/ADC/mcal_adc.c: 33:           (ADCON0bits.ADON=0);
 13926  0054A6  90C2               	bcf	194,0,c	;volatile
 13927  0054A8                     
 13928                           ; BSR set to: 0
 13929                           ;MCAL/ADC/mcal_adc.c: 39:          ADCON2bits.ACQT=_adc->acquisition_time;
 13930  0054A8  EE20 F001          	lfsr	2,1
 13931  0054AC  5182               	movf	ADC_Init@_adc& (0+255),w,b
 13932  0054AE  26D9               	addwf	fsr2l,f,c
 13933  0054B0  5183               	movf	(ADC_Init@_adc+1)& (0+255),w,b
 13934  0054B2  22DA               	addwfc	fsr2h,f,c
 13935  0054B4  50DF               	movf	indf2,w,c
 13936  0054B6  6F84               	movwf	??_ADC_Init& (0+255),b
 13937  0054B8  4784               	rlncf	??_ADC_Init& (0+255),f,b
 13938  0054BA  4784               	rlncf	??_ADC_Init& (0+255),f,b
 13939  0054BC  4784               	rlncf	??_ADC_Init& (0+255),f,b
 13940  0054BE  50C0               	movf	192,w,c	;volatile
 13941  0054C0  1984               	xorwf	??_ADC_Init& (0+255),w,b
 13942  0054C2  0BC7               	andlw	-57
 13943  0054C4  1984               	xorwf	??_ADC_Init& (0+255),w,b
 13944  0054C6  6EC0               	movwf	192,c	;volatile
 13945                           
 13946                           ;MCAL/ADC/mcal_adc.c: 42:          ADCON2bits.ADCS=_adc->conversion_clock;
 13947  0054C8  EE20 F002          	lfsr	2,2
 13948  0054CC  5182               	movf	ADC_Init@_adc& (0+255),w,b
 13949  0054CE  26D9               	addwf	fsr2l,f,c
 13950  0054D0  5183               	movf	(ADC_Init@_adc+1)& (0+255),w,b
 13951  0054D2  22DA               	addwfc	fsr2h,f,c
 13952  0054D4  50DF               	movf	indf2,w,c
 13953  0054D6  6F84               	movwf	??_ADC_Init& (0+255),b
 13954  0054D8  50C0               	movf	192,w,c	;volatile
 13955  0054DA  1984               	xorwf	??_ADC_Init& (0+255),w,b
 13956  0054DC  0BF8               	andlw	-8
 13957  0054DE  1984               	xorwf	??_ADC_Init& (0+255),w,b
 13958  0054E0  6EC0               	movwf	192,c	;volatile
 13959                           
 13960                           ;MCAL/ADC/mcal_adc.c: 45:          ADCON0bits.CHS=_adc->adc_channel;
 13961  0054E2  C082  FFD9         	movff	ADC_Init@_adc,fsr2l
 13962  0054E6  C083  FFDA         	movff	ADC_Init@_adc+1,fsr2h
 13963  0054EA  50DF               	movf	indf2,w,c
 13964  0054EC  6F84               	movwf	??_ADC_Init& (0+255),b
 13965  0054EE  4784               	rlncf	??_ADC_Init& (0+255),f,b
 13966  0054F0  4784               	rlncf	??_ADC_Init& (0+255),f,b
 13967  0054F2  50C2               	movf	194,w,c	;volatile
 13968  0054F4  1984               	xorwf	??_ADC_Init& (0+255),w,b
 13969  0054F6  0BC3               	andlw	-61
 13970  0054F8  1984               	xorwf	??_ADC_Init& (0+255),w,b
 13971  0054FA  6EC2               	movwf	194,c	;volatile
 13972  0054FC                     
 13973                           ; BSR set to: 0
 13974                           ;MCAL/ADC/mcal_adc.c: 48:         adc_channel_pin_config_as_input(_adc->adc_channel);
 13975  0054FC  C082  FFD9         	movff	ADC_Init@_adc,fsr2l
 13976  005500  C083  FFDA         	movff	ADC_Init@_adc+1,fsr2h
 13977  005504  50DF               	movf	indf2,w,c
 13978  005506  ECED  F025         	call	_adc_channel_pin_config_as_input
 13979  00550A                     
 13980                           ;MCAL/ADC/mcal_adc.c: 51:          adc_select_result_formate(_adc);
 13981  00550A  C082  F02A         	movff	ADC_Init@_adc,adc_select_result_formate@_adc
 13982  00550E  C083  F02B         	movff	ADC_Init@_adc+1,adc_select_result_formate@_adc+1
 13983  005512  EC75  F02E         	call	_adc_select_result_formate	;wreg free
 13984  005516                     
 13985                           ;MCAL/ADC/mcal_adc.c: 54:          adc_select_voltage_reference(_adc);
 13986  005516  C082  F02A         	movff	ADC_Init@_adc,adc_select_voltage_reference@_adc
 13987  00551A  C083  F02B         	movff	ADC_Init@_adc+1,adc_select_voltage_reference@_adc+1
 13988  00551E  EC80  F02D         	call	_adc_select_voltage_reference	;wreg free
 13989  005522                     
 13990                           ;MCAL/ADC/mcal_adc.c: 83:          (ADCON0bits.ADON=1);
 13991  005522  80C2               	bsf	194,0,c	;volatile
 13992  005524                     l323:
 13993  005524  0012               	return		;funcret
 13994  005526                     __end_of_ADC_Init:
 13995                           	callstack 0
 13996                           
 13997 ;; *************** function _adc_select_voltage_reference *****************
 13998 ;; Defined at:
 13999 ;;		line 315 in file "MCAL/ADC/mcal_adc.c"
 14000 ;; Parameters:    Size  Location     Type
 14001 ;;  _adc            2   41[COMRAM] PTR const struct .
 14002 ;;		 -> battery_adc(5), 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  ERRORSTATUS     1    0        unsigned char 
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  1    wreg      unsigned char 
 14007 ;; Registers used:
 14008 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14017 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;Total ram usage:        4 bytes
 14019 ;; Hardware stack levels used:    1
 14020 ;; Hardware stack levels required when called:   10
 14021 ;; This function calls:
 14022 ;;		Nothing
 14023 ;; This function is called by:
 14024 ;;		_ADC_Init
 14025 ;; This function uses a non-reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text56
 14029  005B00                     __ptext56:
 14030                           	callstack 0
 14031  005B00                     _adc_select_voltage_reference:
 14032                           	callstack 18
 14033  005B00                     
 14034                           ;MCAL/ADC/mcal_adc.c: 318:     if (((void*)0)==_adc)
 14035  005B00  502A               	movf	adc_select_voltage_reference@_adc^0,w,c
 14036  005B02  102B               	iorwf	(adc_select_voltage_reference@_adc+1)^0,w,c
 14037  005B04  A4D8               	btfss	status,2,c
 14038  005B06  EF87  F02D         	goto	u15301
 14039  005B0A  EF89  F02D         	goto	u15300
 14040  005B0E                     u15301:
 14041  005B0E  EF8B  F02D         	goto	l12773
 14042  005B12                     u15300:
 14043  005B12                     
 14044                           ;MCAL/ADC/mcal_adc.c: 321:     }
 14045  005B12  EFB1  F02D         	goto	l413
 14046  005B16                     l12773:
 14047                           
 14048                           ;MCAL/ADC/mcal_adc.c: 323:     {;MCAL/ADC/mcal_adc.c: 324:          if(ADC_VOLTAGE_REFER
      +                          ANCE_INTERNAL==_adc->voltage_referance)
 14049  005B16  EE20 F004          	lfsr	2,4
 14050  005B1A  502A               	movf	adc_select_voltage_reference@_adc^0,w,c
 14051  005B1C  26D9               	addwf	fsr2l,f,c
 14052  005B1E  502B               	movf	(adc_select_voltage_reference@_adc+1)^0,w,c
 14053  005B20  22DA               	addwfc	fsr2h,f,c
 14054  005B22  50DF               	movf	indf2,w,c
 14055  005B24  A4D8               	btfss	status,2,c
 14056  005B26  EF97  F02D         	goto	u15311
 14057  005B2A  EF99  F02D         	goto	u15310
 14058  005B2E                     u15311:
 14059  005B2E  EF9D  F02D         	goto	l12775
 14060  005B32                     u15310:
 14061  005B32  9AC1               	bcf	193,5,c	;volatile
 14062  005B34  98C1               	bcf	193,4,c	;volatile
 14063  005B36  EFB1  F02D         	goto	l413
 14064  005B3A                     l12775:
 14065  005B3A  EE20 F004          	lfsr	2,4
 14066  005B3E  502A               	movf	adc_select_voltage_reference@_adc^0,w,c
 14067  005B40  26D9               	addwf	fsr2l,f,c
 14068  005B42  502B               	movf	(adc_select_voltage_reference@_adc+1)^0,w,c
 14069  005B44  22DA               	addwfc	fsr2h,f,c
 14070  005B46  04DE               	decf	postinc2,w,c
 14071  005B48  A4D8               	btfss	status,2,c
 14072  005B4A  EFA9  F02D         	goto	u15321
 14073  005B4E  EFAB  F02D         	goto	u15320
 14074  005B52                     u15321:
 14075  005B52  EFAF  F02D         	goto	l411
 14076  005B56                     u15320:
 14077  005B56  8AC1               	bsf	193,5,c	;volatile
 14078  005B58  88C1               	bsf	193,4,c	;volatile
 14079  005B5A  EFB1  F02D         	goto	l413
 14080  005B5E                     l411:
 14081  005B5E  9AC1               	bcf	193,5,c	;volatile
 14082  005B60  98C1               	bcf	193,4,c	;volatile
 14083  005B62                     l413:
 14084  005B62  0012               	return		;funcret
 14085  005B64                     __end_of_adc_select_voltage_reference:
 14086                           	callstack 0
 14087                           
 14088 ;; *************** function _adc_select_result_formate *****************
 14089 ;; Defined at:
 14090 ;;		line 291 in file "MCAL/ADC/mcal_adc.c"
 14091 ;; Parameters:    Size  Location     Type
 14092 ;;  _adc            2   41[COMRAM] PTR const struct .
 14093 ;;		 -> battery_adc(5), 
 14094 ;; Auto vars:     Size  Location     Type
 14095 ;;  ERRORSTATUS     1    0        unsigned char 
 14096 ;; Return value:  Size  Location     Type
 14097 ;;                  1    wreg      unsigned char 
 14098 ;; Registers used:
 14099 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14100 ;; Tracked objects:
 14101 ;;		On entry : 0/0
 14102 ;;		On exit  : 0/0
 14103 ;;		Unchanged: 0/0
 14104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14108 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;Total ram usage:        4 bytes
 14110 ;; Hardware stack levels used:    1
 14111 ;; Hardware stack levels required when called:   10
 14112 ;; This function calls:
 14113 ;;		Nothing
 14114 ;; This function is called by:
 14115 ;;		_ADC_Init
 14116 ;; This function uses a non-reentrant model
 14117 ;;
 14118                           
 14119                           	psect	text57
 14120  005CEA                     __ptext57:
 14121                           	callstack 0
 14122  005CEA                     _adc_select_result_formate:
 14123                           	callstack 18
 14124  005CEA                     
 14125                           ;MCAL/ADC/mcal_adc.c: 294:     if (((void*)0)==_adc)
 14126  005CEA  502A               	movf	adc_select_result_formate@_adc^0,w,c
 14127  005CEC  102B               	iorwf	(adc_select_result_formate@_adc+1)^0,w,c
 14128  005CEE  A4D8               	btfss	status,2,c
 14129  005CF0  EF7C  F02E         	goto	u15271
 14130  005CF4  EF7E  F02E         	goto	u15270
 14131  005CF8                     u15271:
 14132  005CF8  EF80  F02E         	goto	l12759
 14133  005CFC                     u15270:
 14134  005CFC                     
 14135                           ;MCAL/ADC/mcal_adc.c: 297:     }
 14136  005CFC  EFA3  F02E         	goto	l398
 14137  005D00                     l12759:
 14138                           
 14139                           ;MCAL/ADC/mcal_adc.c: 299:     {;MCAL/ADC/mcal_adc.c: 300:          if(ADC_RESULT_LEFT==
      +                          _adc->result_format)
 14140  005D00  EE20 F003          	lfsr	2,3
 14141  005D04  502A               	movf	adc_select_result_formate@_adc^0,w,c
 14142  005D06  26D9               	addwf	fsr2l,f,c
 14143  005D08  502B               	movf	(adc_select_result_formate@_adc+1)^0,w,c
 14144  005D0A  22DA               	addwfc	fsr2h,f,c
 14145  005D0C  50DF               	movf	indf2,w,c
 14146  005D0E  A4D8               	btfss	status,2,c
 14147  005D10  EF8C  F02E         	goto	u15281
 14148  005D14  EF8E  F02E         	goto	u15280
 14149  005D18                     u15281:
 14150  005D18  EF91  F02E         	goto	l12763
 14151  005D1C                     u15280:
 14152  005D1C                     
 14153                           ;MCAL/ADC/mcal_adc.c: 301:          {;MCAL/ADC/mcal_adc.c: 302:              (ADCON2bits
      +                          .ADFM=0);
 14154  005D1C  9EC0               	bcf	192,7,c	;volatile
 14155                           
 14156                           ;MCAL/ADC/mcal_adc.c: 303:          }
 14157  005D1E  EFA3  F02E         	goto	l398
 14158  005D22                     l12763:
 14159  005D22  EE20 F003          	lfsr	2,3
 14160  005D26  502A               	movf	adc_select_result_formate@_adc^0,w,c
 14161  005D28  26D9               	addwf	fsr2l,f,c
 14162  005D2A  502B               	movf	(adc_select_result_formate@_adc+1)^0,w,c
 14163  005D2C  22DA               	addwfc	fsr2h,f,c
 14164  005D2E  04DE               	decf	postinc2,w,c
 14165  005D30  A4D8               	btfss	status,2,c
 14166  005D32  EF9D  F02E         	goto	u15291
 14167  005D36  EF9F  F02E         	goto	u15290
 14168  005D3A                     u15291:
 14169  005D3A  EFA2  F02E         	goto	l396
 14170  005D3E                     u15290:
 14171  005D3E                     
 14172                           ;MCAL/ADC/mcal_adc.c: 305:          {;MCAL/ADC/mcal_adc.c: 306:              (ADCON2bits
      +                          .ADFM=1);
 14173  005D3E  8EC0               	bsf	192,7,c	;volatile
 14174                           
 14175                           ;MCAL/ADC/mcal_adc.c: 307:          }
 14176  005D40  EFA3  F02E         	goto	l398
 14177  005D44                     l396:
 14178                           
 14179                           ;MCAL/ADC/mcal_adc.c: 309:          {;MCAL/ADC/mcal_adc.c: 310:              (ADCON2bits
      +                          .ADFM=1);
 14180  005D44  8EC0               	bsf	192,7,c	;volatile
 14181  005D46                     l398:
 14182  005D46  0012               	return		;funcret
 14183  005D48                     __end_of_adc_select_result_formate:
 14184                           	callstack 0
 14185                           
 14186 ;; *************** function _adc_channel_pin_config_as_input *****************
 14187 ;; Defined at:
 14188 ;;		line 269 in file "MCAL/ADC/mcal_adc.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;  _channel        1    wreg     const enum E3027
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;  _channel        1    1[BANK0 ] const enum E3027
 14193 ;;  ERRORSTATUS     1    0        unsigned char 
 14194 ;; Return value:  Size  Location     Type
 14195 ;;                  1    wreg      unsigned char 
 14196 ;; Registers used:
 14197 ;;		wreg, status,2, status,0
 14198 ;; Tracked objects:
 14199 ;;		On entry : 0/0
 14200 ;;		On exit  : 0/0
 14201 ;;		Unchanged: 0/0
 14202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;Total ram usage:        4 bytes
 14208 ;; Hardware stack levels used:    1
 14209 ;; Hardware stack levels required when called:   10
 14210 ;; This function calls:
 14211 ;;		Nothing
 14212 ;; This function is called by:
 14213 ;;		_ADC_Init
 14214 ;;		_ADC_select_channel
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	text58
 14219  004BDA                     __ptext58:
 14220                           	callstack 0
 14221  004BDA                     _adc_channel_pin_config_as_input:
 14222                           	callstack 17
 14223                           
 14224                           ;incstack = 0
 14225                           ;adc_channel_pin_config_as_input@_channel stored from wreg
 14226  004BDA  0100               	movlb	0	; () banked
 14227  004BDC  6F81               	movwf	adc_channel_pin_config_as_input@_channel& (0+255),b
 14228  004BDE                     
 14229                           ;MCAL/ADC/mcal_adc.c: 272:        switch (_channel)
 14230  004BDE  EF18  F026         	goto	l12551
 14231  004BE2                     l12523:
 14232                           
 14233                           ; BSR set to: 0
 14234  004BE2  8092               	bsf	146,0,c	;volatile
 14235  004BE4  EF5A  F026         	goto	l389
 14236  004BE8                     l12525:
 14237                           
 14238                           ; BSR set to: 0
 14239  004BE8  8292               	bsf	146,1,c	;volatile
 14240  004BEA  EF5A  F026         	goto	l389
 14241  004BEE                     l12527:
 14242                           
 14243                           ; BSR set to: 0
 14244  004BEE  8492               	bsf	146,2,c	;volatile
 14245  004BF0  EF5A  F026         	goto	l389
 14246  004BF4                     l12529:
 14247                           
 14248                           ; BSR set to: 0
 14249  004BF4  8692               	bsf	146,3,c	;volatile
 14250  004BF6  EF5A  F026         	goto	l389
 14251  004BFA                     l12531:
 14252                           
 14253                           ; BSR set to: 0
 14254  004BFA  8A92               	bsf	146,5,c	;volatile
 14255  004BFC  EF5A  F026         	goto	l389
 14256  004C00                     l12533:
 14257                           
 14258                           ; BSR set to: 0
 14259  004C00  8096               	bsf	150,0,c	;volatile
 14260  004C02  EF5A  F026         	goto	l389
 14261  004C06                     l12535:
 14262                           
 14263                           ; BSR set to: 0
 14264  004C06  8296               	bsf	150,1,c	;volatile
 14265  004C08  EF5A  F026         	goto	l389
 14266  004C0C                     l12537:
 14267                           
 14268                           ; BSR set to: 0
 14269  004C0C  8496               	bsf	150,2,c	;volatile
 14270  004C0E  EF5A  F026         	goto	l389
 14271  004C12                     l12539:
 14272                           
 14273                           ; BSR set to: 0
 14274  004C12  8493               	bsf	147,2,c	;volatile
 14275  004C14  EF5A  F026         	goto	l389
 14276  004C18                     l12541:
 14277                           
 14278                           ; BSR set to: 0
 14279  004C18  8693               	bsf	147,3,c	;volatile
 14280  004C1A  EF5A  F026         	goto	l389
 14281  004C1E                     l12543:
 14282                           
 14283                           ; BSR set to: 0
 14284  004C1E  8293               	bsf	147,1,c	;volatile
 14285  004C20  EF5A  F026         	goto	l389
 14286  004C24                     l12545:
 14287                           
 14288                           ; BSR set to: 0
 14289  004C24  8893               	bsf	147,4,c	;volatile
 14290  004C26  EF5A  F026         	goto	l389
 14291  004C2A                     l12547:
 14292                           
 14293                           ; BSR set to: 0
 14294  004C2A  8093               	bsf	147,0,c	;volatile
 14295  004C2C  EF5A  F026         	goto	l389
 14296  004C30                     l12551:
 14297  004C30  0100               	movlb	0	; () banked
 14298  004C32  5181               	movf	adc_channel_pin_config_as_input@_channel& (0+255),w,b
 14299  004C34  6E2A               	movwf	??_adc_channel_pin_config_as_input^0,c
 14300  004C36  6A2B               	clrf	(??_adc_channel_pin_config_as_input+1)^0,c
 14301                           
 14302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14303                           ; Switch size 1, requested type "simple"
 14304                           ; Number of cases is 1, Range of values is 0 to 0
 14305                           ; switch strategies available:
 14306                           ; Name         Instructions Cycles
 14307                           ; simple_byte            4     3 (average)
 14308                           ;	Chosen strategy is simple_byte
 14309  004C38  502B               	movf	(??_adc_channel_pin_config_as_input+1)^0,w,c
 14310  004C3A  0A00               	xorlw	0	; case 0
 14311  004C3C  B4D8               	btfsc	status,2,c
 14312  004C3E  EF23  F026         	goto	l14077
 14313  004C42  EF5A  F026         	goto	l389
 14314  004C46                     l14077:
 14315                           
 14316                           ; BSR set to: 0
 14317                           ; Switch size 1, requested type "simple"
 14318                           ; Number of cases is 13, Range of values is 0 to 12
 14319                           ; switch strategies available:
 14320                           ; Name         Instructions Cycles
 14321                           ; simple_byte           40    21 (average)
 14322                           ;	Chosen strategy is simple_byte
 14323  004C46  502A               	movf	??_adc_channel_pin_config_as_input^0,w,c
 14324  004C48  0A00               	xorlw	0	; case 0
 14325  004C4A  B4D8               	btfsc	status,2,c
 14326  004C4C  EFF1  F025         	goto	l12523
 14327  004C50  0A01               	xorlw	1	; case 1
 14328  004C52  B4D8               	btfsc	status,2,c
 14329  004C54  EFF4  F025         	goto	l12525
 14330  004C58  0A03               	xorlw	3	; case 2
 14331  004C5A  B4D8               	btfsc	status,2,c
 14332  004C5C  EFF7  F025         	goto	l12527
 14333  004C60  0A01               	xorlw	1	; case 3
 14334  004C62  B4D8               	btfsc	status,2,c
 14335  004C64  EFFA  F025         	goto	l12529
 14336  004C68  0A07               	xorlw	7	; case 4
 14337  004C6A  B4D8               	btfsc	status,2,c
 14338  004C6C  EFFD  F025         	goto	l12531
 14339  004C70  0A01               	xorlw	1	; case 5
 14340  004C72  B4D8               	btfsc	status,2,c
 14341  004C74  EF00  F026         	goto	l12533
 14342  004C78  0A03               	xorlw	3	; case 6
 14343  004C7A  B4D8               	btfsc	status,2,c
 14344  004C7C  EF03  F026         	goto	l12535
 14345  004C80  0A01               	xorlw	1	; case 7
 14346  004C82  B4D8               	btfsc	status,2,c
 14347  004C84  EF06  F026         	goto	l12537
 14348  004C88  0A0F               	xorlw	15	; case 8
 14349  004C8A  B4D8               	btfsc	status,2,c
 14350  004C8C  EF09  F026         	goto	l12539
 14351  004C90  0A01               	xorlw	1	; case 9
 14352  004C92  B4D8               	btfsc	status,2,c
 14353  004C94  EF0C  F026         	goto	l12541
 14354  004C98  0A03               	xorlw	3	; case 10
 14355  004C9A  B4D8               	btfsc	status,2,c
 14356  004C9C  EF0F  F026         	goto	l12543
 14357  004CA0  0A01               	xorlw	1	; case 11
 14358  004CA2  B4D8               	btfsc	status,2,c
 14359  004CA4  EF12  F026         	goto	l12545
 14360  004CA8  0A07               	xorlw	7	; case 12
 14361  004CAA  B4D8               	btfsc	status,2,c
 14362  004CAC  EF15  F026         	goto	l12547
 14363  004CB0  EF5A  F026         	goto	l389
 14364  004CB4                     l389:
 14365                           
 14366                           ; BSR set to: 0
 14367  004CB4  0012               	return		;funcret
 14368  004CB6                     __end_of_adc_channel_pin_config_as_input:
 14369                           	callstack 0
 14370                           
 14371 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
 14372 ;; Defined at:
 14373 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  _pin_config     2   41[COMRAM] PTR const struct .
 14376 ;;		 -> pind1(1), pind2(1), 
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;  ERRORSTATUS     1    0        unsigned char 
 14379 ;; Return value:  Size  Location     Type
 14380 ;;                  1    wreg      unsigned char 
 14381 ;; Registers used:
 14382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;Total ram usage:        8 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; Hardware stack levels required when called:   10
 14395 ;; This function calls:
 14396 ;;		Nothing
 14397 ;; This function is called by:
 14398 ;;		_main
 14399 ;; This function uses a non-reentrant model
 14400 ;;
 14401                           
 14402                           	psect	text59
 14403  005738                     __ptext59:
 14404                           	callstack 0
 14405  005738                     _GPIO_Pin_Toggle_Logic:
 14406                           	callstack 20
 14407  005738                     
 14408                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 14409  005738  502A               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 14410  00573A  102B               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 14411  00573C  A4D8               	btfss	status,2,c
 14412  00573E  EFA3  F02B         	goto	u15891
 14413  005742  EFA5  F02B         	goto	u15890
 14414  005746                     u15891:
 14415  005746  EFA7  F02B         	goto	l13255
 14416  00574A                     u15890:
 14417  00574A                     
 14418                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 14419  00574A  EFD5  F02B         	goto	l858
 14420  00574E                     l13255:
 14421                           
 14422                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 14423  00574E  C02A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 14424  005752  C02B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 14425  005756  50DF               	movf	indf2,w,c
 14426  005758  0B07               	andlw	7
 14427  00575A  0100               	movlb	0	; () banked
 14428  00575C  6F80               	movwf	??_GPIO_Pin_Toggle_Logic& (0+255),b
 14429  00575E  0E01               	movlw	1
 14430  005760  6F81               	movwf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),b
 14431  005762  2B80               	incf	??_GPIO_Pin_Toggle_Logic& (0+255),f,b
 14432  005764  EFB6  F02B         	goto	u15904
 14433  005768                     u15905:
 14434  005768  90D8               	bcf	status,0,c
 14435  00576A  3781               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),f,b
 14436  00576C                     u15904:
 14437  00576C  2F80               	decfsz	??_GPIO_Pin_Toggle_Logic& (0+255),f,b
 14438  00576E  EFB4  F02B         	goto	u15905
 14439  005772  C02A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 14440  005776  C02B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 14441  00577A  30DF               	rrcf	indf2,w,c
 14442  00577C  32E8               	rrcf	wreg,f,c
 14443  00577E  32E8               	rrcf	wreg,f,c
 14444  005780  0B07               	andlw	7
 14445  005782  0100               	movlb	0	; () banked
 14446  005784  6F82               	movwf	(??_GPIO_Pin_Toggle_Logic+2)& (0+255),b
 14447  005786  5182               	movf	(??_GPIO_Pin_Toggle_Logic+2)& (0+255),w,b
 14448  005788  0D02               	mullw	2
 14449  00578A  0EB3               	movlw	low _lat_registers
 14450  00578C  24F3               	addwf	243,w,c
 14451  00578E  6ED9               	movwf	fsr2l,c
 14452  005790  0E01               	movlw	high _lat_registers
 14453  005792  20F4               	addwfc	prodh,w,c
 14454  005794  6EDA               	movwf	fsr2h,c
 14455  005796  CFDE F083          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
 14456  00579A  CFDD F084          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
 14457  00579E  C083  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
 14458  0057A2  C084  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
 14459  0057A6  5181               	movf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),w,b
 14460  0057A8  1ADF               	xorwf	indf2,f,c
 14461  0057AA                     l858:
 14462  0057AA  0012               	return		;funcret
 14463  0057AC                     __end_of_GPIO_Pin_Toggle_Logic:
 14464                           	callstack 0
 14465                           
 14466 ;; *************** function _InterruptManagerLow *****************
 14467 ;; Defined at:
 14468 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;		None
 14471 ;; Auto vars:     Size  Location     Type
 14472 ;;		None
 14473 ;; Return value:  Size  Location     Type
 14474 ;;                  1    wreg      void 
 14475 ;; Registers used:
 14476 ;;		wreg, status,2, cstack
 14477 ;; Tracked objects:
 14478 ;;		On entry : 0/0
 14479 ;;		On exit  : 0/0
 14480 ;;		Unchanged: 0/0
 14481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14485 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14486 ;;Total ram usage:        3 bytes
 14487 ;; Hardware stack levels used:    1
 14488 ;; Hardware stack levels required when called:    9
 14489 ;; This function calls:
 14490 ;;		_ADC_ISR
 14491 ;;		_INT1_ISR
 14492 ;;		_RB4_ISR
 14493 ;;		_RB5_ISR
 14494 ;;		_RB6_ISR
 14495 ;;		_RB7_ISR
 14496 ;; This function is called by:
 14497 ;;		Interrupt level 1
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501                           	psect	intcodelo
 14502  000018                     __pintcodelo:
 14503                           	callstack 0
 14504  000018                     _InterruptManagerLow:
 14505                           	callstack 11
 14506                           
 14507                           ;incstack = 0
 14508  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 14509  00001A  CFD8 F027          	movff	status,??_InterruptManagerLow
 14510  00001E  CFE8 F028          	movff	wreg,??_InterruptManagerLow+1
 14511  000022  CFE0 F029          	movff	bsr,??_InterruptManagerLow+2
 14512  000026                     
 14513                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
 14514  000026  A6F0               	btfss	240,3,c	;volatile
 14515  000028  EF18  F000         	goto	i1u1178_21
 14516  00002C  EF1A  F000         	goto	i1u1178_20
 14517  000030                     i1u1178_21:
 14518  000030  EF23  F000         	goto	i1l1127
 14519  000034                     i1u1178_20:
 14520  000034  A0F0               	btfss	240,0,c	;volatile
 14521  000036  EF1F  F000         	goto	i1u1179_21
 14522  00003A  EF21  F000         	goto	i1u1179_20
 14523  00003E                     i1u1179_21:
 14524  00003E  EF23  F000         	goto	i1l1127
 14525  000042                     i1u1179_20:
 14526  000042                     
 14527                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
 14528  000042  ECBB  F031         	call	_INT1_ISR	;wreg free
 14529  000046                     i1l1127:
 14530                           
 14531                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14532  000046  A6F2               	btfss	242,3,c	;volatile
 14533  000048  EF28  F000         	goto	i1u1180_21
 14534  00004C  EF2A  F000         	goto	i1u1180_20
 14535  000050                     i1u1180_21:
 14536  000050  EF43  F000         	goto	i1l1129
 14537  000054                     i1u1180_20:
 14538  000054  A0F2               	btfss	242,0,c	;volatile
 14539  000056  EF2F  F000         	goto	i1u1181_21
 14540  00005A  EF31  F000         	goto	i1u1181_20
 14541  00005E                     i1u1181_21:
 14542  00005E  EF43  F000         	goto	i1l1129
 14543  000062                     i1u1181_20:
 14544  000062  A881               	btfss	129,4,c	;volatile
 14545  000064  EF36  F000         	goto	i1u1182_21
 14546  000068  EF38  F000         	goto	i1u1182_20
 14547  00006C                     i1u1182_21:
 14548  00006C  EF43  F000         	goto	i1l1129
 14549  000070                     i1u1182_20:
 14550  000070  A04B               	btfss	_flags^0,0,c	;volatile
 14551  000072  EF3D  F000         	goto	i1u1183_21
 14552  000076  EF3F  F000         	goto	i1u1183_20
 14553  00007A                     i1u1183_21:
 14554  00007A  EF43  F000         	goto	i1l1129
 14555  00007E                     i1u1183_20:
 14556  00007E                     
 14557                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
 14558  00007E  904B               	bcf	_flags^0,0,c	;volatile
 14559  000080                     
 14560                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
 14561  000080  0E01               	movlw	1
 14562  000082  ECA7  F031         	call	_RB4_ISR
 14563  000086                     i1l1129:
 14564                           
 14565                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14566  000086  A6F2               	btfss	242,3,c	;volatile
 14567  000088  EF48  F000         	goto	i1u1184_21
 14568  00008C  EF4A  F000         	goto	i1u1184_20
 14569  000090                     i1u1184_21:
 14570  000090  EF63  F000         	goto	i1l1131
 14571  000094                     i1u1184_20:
 14572  000094  A0F2               	btfss	242,0,c	;volatile
 14573  000096  EF4F  F000         	goto	i1u1185_21
 14574  00009A  EF51  F000         	goto	i1u1185_20
 14575  00009E                     i1u1185_21:
 14576  00009E  EF63  F000         	goto	i1l1131
 14577  0000A2                     i1u1185_20:
 14578  0000A2  B881               	btfsc	129,4,c	;volatile
 14579  0000A4  EF56  F000         	goto	i1u1186_21
 14580  0000A8  EF58  F000         	goto	i1u1186_20
 14581  0000AC                     i1u1186_21:
 14582  0000AC  EF63  F000         	goto	i1l1131
 14583  0000B0                     i1u1186_20:
 14584  0000B0  B04B               	btfsc	_flags^0,0,c	;volatile
 14585  0000B2  EF5D  F000         	goto	i1u1187_21
 14586  0000B6  EF5F  F000         	goto	i1u1187_20
 14587  0000BA                     i1u1187_21:
 14588  0000BA  EF63  F000         	goto	i1l1131
 14589  0000BE                     i1u1187_20:
 14590  0000BE                     
 14591                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
 14592  0000BE  804B               	bsf	_flags^0,0,c	;volatile
 14593  0000C0                     
 14594                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
 14595  0000C0  0E00               	movlw	0
 14596  0000C2  ECA7  F031         	call	_RB4_ISR
 14597  0000C6                     i1l1131:
 14598                           
 14599                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14600  0000C6  A6F2               	btfss	242,3,c	;volatile
 14601  0000C8  EF68  F000         	goto	i1u1188_21
 14602  0000CC  EF6A  F000         	goto	i1u1188_20
 14603  0000D0                     i1u1188_21:
 14604  0000D0  EF83  F000         	goto	i1l1133
 14605  0000D4                     i1u1188_20:
 14606  0000D4  A0F2               	btfss	242,0,c	;volatile
 14607  0000D6  EF6F  F000         	goto	i1u1189_21
 14608  0000DA  EF71  F000         	goto	i1u1189_20
 14609  0000DE                     i1u1189_21:
 14610  0000DE  EF83  F000         	goto	i1l1133
 14611  0000E2                     i1u1189_20:
 14612  0000E2  AA81               	btfss	129,5,c	;volatile
 14613  0000E4  EF76  F000         	goto	i1u1190_21
 14614  0000E8  EF78  F000         	goto	i1u1190_20
 14615  0000EC                     i1u1190_21:
 14616  0000EC  EF83  F000         	goto	i1l1133
 14617  0000F0                     i1u1190_20:
 14618  0000F0  A24B               	btfss	_flags^0,1,c	;volatile
 14619  0000F2  EF7D  F000         	goto	i1u1191_21
 14620  0000F6  EF7F  F000         	goto	i1u1191_20
 14621  0000FA                     i1u1191_21:
 14622  0000FA  EF83  F000         	goto	i1l1133
 14623  0000FE                     i1u1191_20:
 14624  0000FE                     
 14625                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
 14626  0000FE  924B               	bcf	_flags^0,1,c	;volatile
 14627  000100                     
 14628                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
 14629  000100  0E01               	movlw	1
 14630  000102  EC9A  F031         	call	_RB5_ISR
 14631  000106                     i1l1133:
 14632                           
 14633                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14634  000106  A6F2               	btfss	242,3,c	;volatile
 14635  000108  EF88  F000         	goto	i1u1192_21
 14636  00010C  EF8A  F000         	goto	i1u1192_20
 14637  000110                     i1u1192_21:
 14638  000110  EFA3  F000         	goto	i1l1135
 14639  000114                     i1u1192_20:
 14640  000114  A0F2               	btfss	242,0,c	;volatile
 14641  000116  EF8F  F000         	goto	i1u1193_21
 14642  00011A  EF91  F000         	goto	i1u1193_20
 14643  00011E                     i1u1193_21:
 14644  00011E  EFA3  F000         	goto	i1l1135
 14645  000122                     i1u1193_20:
 14646  000122  BA81               	btfsc	129,5,c	;volatile
 14647  000124  EF96  F000         	goto	i1u1194_21
 14648  000128  EF98  F000         	goto	i1u1194_20
 14649  00012C                     i1u1194_21:
 14650  00012C  EFA3  F000         	goto	i1l1135
 14651  000130                     i1u1194_20:
 14652  000130  B24B               	btfsc	_flags^0,1,c	;volatile
 14653  000132  EF9D  F000         	goto	i1u1195_21
 14654  000136  EF9F  F000         	goto	i1u1195_20
 14655  00013A                     i1u1195_21:
 14656  00013A  EFA3  F000         	goto	i1l1135
 14657  00013E                     i1u1195_20:
 14658  00013E                     
 14659                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
 14660  00013E  824B               	bsf	_flags^0,1,c	;volatile
 14661  000140                     
 14662                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
 14663  000140  0E00               	movlw	0
 14664  000142  EC9A  F031         	call	_RB5_ISR
 14665  000146                     i1l1135:
 14666                           
 14667                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14668  000146  A6F2               	btfss	242,3,c	;volatile
 14669  000148  EFA8  F000         	goto	i1u1196_21
 14670  00014C  EFAA  F000         	goto	i1u1196_20
 14671  000150                     i1u1196_21:
 14672  000150  EFC3  F000         	goto	i1l1137
 14673  000154                     i1u1196_20:
 14674  000154  A0F2               	btfss	242,0,c	;volatile
 14675  000156  EFAF  F000         	goto	i1u1197_21
 14676  00015A  EFB1  F000         	goto	i1u1197_20
 14677  00015E                     i1u1197_21:
 14678  00015E  EFC3  F000         	goto	i1l1137
 14679  000162                     i1u1197_20:
 14680  000162  AC81               	btfss	129,6,c	;volatile
 14681  000164  EFB6  F000         	goto	i1u1198_21
 14682  000168  EFB8  F000         	goto	i1u1198_20
 14683  00016C                     i1u1198_21:
 14684  00016C  EFC3  F000         	goto	i1l1137
 14685  000170                     i1u1198_20:
 14686  000170  A44B               	btfss	_flags^0,2,c	;volatile
 14687  000172  EFBD  F000         	goto	i1u1199_21
 14688  000176  EFBF  F000         	goto	i1u1199_20
 14689  00017A                     i1u1199_21:
 14690  00017A  EFC3  F000         	goto	i1l1137
 14691  00017E                     i1u1199_20:
 14692  00017E                     
 14693                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
 14694  00017E  944B               	bcf	_flags^0,2,c	;volatile
 14695  000180                     
 14696                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
 14697  000180  0E01               	movlw	1
 14698  000182  EC8D  F031         	call	_RB6_ISR
 14699  000186                     i1l1137:
 14700                           
 14701                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14702  000186  A6F2               	btfss	242,3,c	;volatile
 14703  000188  EFC8  F000         	goto	i1u1200_21
 14704  00018C  EFCA  F000         	goto	i1u1200_20
 14705  000190                     i1u1200_21:
 14706  000190  EFE3  F000         	goto	i1l1139
 14707  000194                     i1u1200_20:
 14708  000194  A0F2               	btfss	242,0,c	;volatile
 14709  000196  EFCF  F000         	goto	i1u1201_21
 14710  00019A  EFD1  F000         	goto	i1u1201_20
 14711  00019E                     i1u1201_21:
 14712  00019E  EFE3  F000         	goto	i1l1139
 14713  0001A2                     i1u1201_20:
 14714  0001A2  BC81               	btfsc	129,6,c	;volatile
 14715  0001A4  EFD6  F000         	goto	i1u1202_21
 14716  0001A8  EFD8  F000         	goto	i1u1202_20
 14717  0001AC                     i1u1202_21:
 14718  0001AC  EFE3  F000         	goto	i1l1139
 14719  0001B0                     i1u1202_20:
 14720  0001B0  B44B               	btfsc	_flags^0,2,c	;volatile
 14721  0001B2  EFDD  F000         	goto	i1u1203_21
 14722  0001B6  EFDF  F000         	goto	i1u1203_20
 14723  0001BA                     i1u1203_21:
 14724  0001BA  EFE3  F000         	goto	i1l1139
 14725  0001BE                     i1u1203_20:
 14726  0001BE                     
 14727                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
 14728  0001BE  844B               	bsf	_flags^0,2,c	;volatile
 14729  0001C0                     
 14730                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
 14731  0001C0  0E00               	movlw	0
 14732  0001C2  EC8D  F031         	call	_RB6_ISR
 14733  0001C6                     i1l1139:
 14734                           
 14735                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14736  0001C6  A6F2               	btfss	242,3,c	;volatile
 14737  0001C8  EFE8  F000         	goto	i1u1204_21
 14738  0001CC  EFEA  F000         	goto	i1u1204_20
 14739  0001D0                     i1u1204_21:
 14740  0001D0  EF03  F001         	goto	i1l1141
 14741  0001D4                     i1u1204_20:
 14742  0001D4  A0F2               	btfss	242,0,c	;volatile
 14743  0001D6  EFEF  F000         	goto	i1u1205_21
 14744  0001DA  EFF1  F000         	goto	i1u1205_20
 14745  0001DE                     i1u1205_21:
 14746  0001DE  EF03  F001         	goto	i1l1141
 14747  0001E2                     i1u1205_20:
 14748  0001E2  AE81               	btfss	129,7,c	;volatile
 14749  0001E4  EFF6  F000         	goto	i1u1206_21
 14750  0001E8  EFF8  F000         	goto	i1u1206_20
 14751  0001EC                     i1u1206_21:
 14752  0001EC  EF03  F001         	goto	i1l1141
 14753  0001F0                     i1u1206_20:
 14754  0001F0  A64B               	btfss	_flags^0,3,c	;volatile
 14755  0001F2  EFFD  F000         	goto	i1u1207_21
 14756  0001F6  EFFF  F000         	goto	i1u1207_20
 14757  0001FA                     i1u1207_21:
 14758  0001FA  EF03  F001         	goto	i1l1141
 14759  0001FE                     i1u1207_20:
 14760  0001FE                     
 14761                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
 14762  0001FE  964B               	bcf	_flags^0,3,c	;volatile
 14763  000200                     
 14764                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
 14765  000200  0E01               	movlw	1
 14766  000202  EC80  F031         	call	_RB7_ISR
 14767  000206                     i1l1141:
 14768                           
 14769                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 14770  000206  A6F2               	btfss	242,3,c	;volatile
 14771  000208  EF08  F001         	goto	i1u1208_21
 14772  00020C  EF0A  F001         	goto	i1u1208_20
 14773  000210                     i1u1208_21:
 14774  000210  EF23  F001         	goto	i1l1143
 14775  000214                     i1u1208_20:
 14776  000214  A0F2               	btfss	242,0,c	;volatile
 14777  000216  EF0F  F001         	goto	i1u1209_21
 14778  00021A  EF11  F001         	goto	i1u1209_20
 14779  00021E                     i1u1209_21:
 14780  00021E  EF23  F001         	goto	i1l1143
 14781  000222                     i1u1209_20:
 14782  000222  BE81               	btfsc	129,7,c	;volatile
 14783  000224  EF16  F001         	goto	i1u1210_21
 14784  000228  EF18  F001         	goto	i1u1210_20
 14785  00022C                     i1u1210_21:
 14786  00022C  EF23  F001         	goto	i1l1143
 14787  000230                     i1u1210_20:
 14788  000230  B64B               	btfsc	_flags^0,3,c	;volatile
 14789  000232  EF1D  F001         	goto	i1u1211_21
 14790  000236  EF1F  F001         	goto	i1u1211_20
 14791  00023A                     i1u1211_21:
 14792  00023A  EF23  F001         	goto	i1l1143
 14793  00023E                     i1u1211_20:
 14794  00023E                     
 14795                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
 14796  00023E  864B               	bsf	_flags^0,3,c	;volatile
 14797  000240                     
 14798                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
 14799  000240  0E00               	movlw	0
 14800  000242  EC80  F031         	call	_RB7_ISR
 14801  000246                     i1l1143:
 14802                           
 14803                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
 14804  000246  AC9D               	btfss	157,6,c	;volatile
 14805  000248  EF28  F001         	goto	i1u1212_21
 14806  00024C  EF2A  F001         	goto	i1u1212_20
 14807  000250                     i1u1212_21:
 14808  000250  EF33  F001         	goto	i1l1145
 14809  000254                     i1u1212_20:
 14810  000254  AC9E               	btfss	158,6,c	;volatile
 14811  000256  EF2F  F001         	goto	i1u1213_21
 14812  00025A  EF31  F001         	goto	i1u1213_20
 14813  00025E                     i1u1213_21:
 14814  00025E  EF33  F001         	goto	i1l1145
 14815  000262                     i1u1213_20:
 14816  000262                     
 14817                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
 14818  000262  ECBE  F031         	call	_ADC_ISR	;wreg free
 14819  000266                     i1l1145:
 14820                           
 14821                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
 14822  000266  A09D               	btfss	157,0,c	;volatile
 14823  000268  EF38  F001         	goto	i1u1214_21
 14824  00026C  EF3A  F001         	goto	i1u1214_20
 14825  000270                     i1u1214_21:
 14826  000270  EF3B  F001         	goto	i1l1148
 14827  000274                     i1u1214_20:
 14828  000274  509E               	movf	158,w,c	;volatile
 14829  000276                     i1l1148:
 14830  000276  C029  FFE0         	movff	??_InterruptManagerLow+2,bsr
 14831  00027A  C028  FFE8         	movff	??_InterruptManagerLow+1,wreg
 14832  00027E  C027  FFD8         	movff	??_InterruptManagerLow,status
 14833  000282  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 14834  000284  0010               	retfie	
 14835  000286                     __end_of_InterruptManagerLow:
 14836                           	callstack 0
 14837                           
 14838 ;; *************** function _RB7_ISR *****************
 14839 ;; Defined at:
 14840 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 14841 ;; Parameters:    Size  Location     Type
 14842 ;;  Handler_Sele    1    wreg     unsigned char 
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
 14845 ;; Return value:  Size  Location     Type
 14846 ;;                  1    wreg      void 
 14847 ;; Registers used:
 14848 ;;		wreg, status,2
 14849 ;; Tracked objects:
 14850 ;;		On entry : 0/0
 14851 ;;		On exit  : 0/0
 14852 ;;		Unchanged: 0/0
 14853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14858 ;;Total ram usage:        1 bytes
 14859 ;; Hardware stack levels used:    1
 14860 ;; Hardware stack levels required when called:    8
 14861 ;; This function calls:
 14862 ;;		Nothing
 14863 ;; This function is called by:
 14864 ;;		_InterruptManagerLow
 14865 ;; This function uses a non-reentrant model
 14866 ;;
 14867                           
 14868                           	psect	text61
 14869  006300                     __ptext61:
 14870                           	callstack 0
 14871  006300                     _RB7_ISR:
 14872                           	callstack 11
 14873                           
 14874                           ;incstack = 0
 14875                           ;RB7_ISR@Handler_Select stored from wreg
 14876  006300  6E26               	movwf	RB7_ISR@Handler_Select^0,c
 14877  006302                     
 14878                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
 14879  006302  90F2               	bcf	242,0,c	;volatile
 14880  006304                     
 14881                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
 14882  006304  5026               	movf	RB7_ISR@Handler_Select^0,w,c
 14883  006306  B4D8               	btfsc	status,2,c
 14884  006308  EF88  F031         	goto	i1u1090_21
 14885  00630C  EF8A  F031         	goto	i1u1090_20
 14886  006310                     i1u1090_21:
 14887  006310  EF8C  F031         	goto	i1l9845
 14888  006314                     i1u1090_20:
 14889  006314  EF8C  F031         	goto	i1l1254
 14890  006318                     i1l9845:
 14891  006318                     i1l1254:
 14892  006318  0012               	return		;funcret
 14893  00631A                     __end_of_RB7_ISR:
 14894                           	callstack 0
 14895                           
 14896 ;; *************** function _RB6_ISR *****************
 14897 ;; Defined at:
 14898 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;  Handler_Sele    1    wreg     unsigned char 
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      void 
 14905 ;; Registers used:
 14906 ;;		wreg, status,2
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14916 ;;Total ram usage:        1 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; Hardware stack levels required when called:    8
 14919 ;; This function calls:
 14920 ;;		Nothing
 14921 ;; This function is called by:
 14922 ;;		_InterruptManagerLow
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           	psect	text62
 14927  00631A                     __ptext62:
 14928                           	callstack 0
 14929  00631A                     _RB6_ISR:
 14930                           	callstack 11
 14931                           
 14932                           ;incstack = 0
 14933                           ;RB6_ISR@Handler_Select stored from wreg
 14934  00631A  6E26               	movwf	RB6_ISR@Handler_Select^0,c
 14935  00631C                     
 14936                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
 14937  00631C  90F2               	bcf	242,0,c	;volatile
 14938  00631E                     
 14939                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
 14940  00631E  5026               	movf	RB6_ISR@Handler_Select^0,w,c
 14941  006320  B4D8               	btfsc	status,2,c
 14942  006322  EF95  F031         	goto	i1u1089_21
 14943  006326  EF97  F031         	goto	i1u1089_20
 14944  00632A                     i1u1089_21:
 14945  00632A  EF99  F031         	goto	i1l9835
 14946  00632E                     i1u1089_20:
 14947  00632E  EF99  F031         	goto	i1l1245
 14948  006332                     i1l9835:
 14949  006332                     i1l1245:
 14950  006332  0012               	return		;funcret
 14951  006334                     __end_of_RB6_ISR:
 14952                           	callstack 0
 14953                           
 14954 ;; *************** function _RB5_ISR *****************
 14955 ;; Defined at:
 14956 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  Handler_Sele    1    wreg     unsigned char 
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14974 ;;Total ram usage:        1 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:    8
 14977 ;; This function calls:
 14978 ;;		Nothing
 14979 ;; This function is called by:
 14980 ;;		_InterruptManagerLow
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text63
 14985  006334                     __ptext63:
 14986                           	callstack 0
 14987  006334                     _RB5_ISR:
 14988                           	callstack 11
 14989                           
 14990                           ;incstack = 0
 14991                           ;RB5_ISR@Handler_Select stored from wreg
 14992  006334  6E26               	movwf	RB5_ISR@Handler_Select^0,c
 14993  006336                     
 14994                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
 14995  006336  90F2               	bcf	242,0,c	;volatile
 14996  006338                     
 14997                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
 14998  006338  5026               	movf	RB5_ISR@Handler_Select^0,w,c
 14999  00633A  B4D8               	btfsc	status,2,c
 15000  00633C  EFA2  F031         	goto	i1u1088_21
 15001  006340  EFA4  F031         	goto	i1u1088_20
 15002  006344                     i1u1088_21:
 15003  006344  EFA6  F031         	goto	i1l9825
 15004  006348                     i1u1088_20:
 15005  006348  EFA6  F031         	goto	i1l1236
 15006  00634C                     i1l9825:
 15007  00634C                     i1l1236:
 15008  00634C  0012               	return		;funcret
 15009  00634E                     __end_of_RB5_ISR:
 15010                           	callstack 0
 15011                           
 15012 ;; *************** function _RB4_ISR *****************
 15013 ;; Defined at:
 15014 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;  Handler_Sele    1    wreg     unsigned char 
 15017 ;; Auto vars:     Size  Location     Type
 15018 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
 15019 ;; Return value:  Size  Location     Type
 15020 ;;                  1    wreg      void 
 15021 ;; Registers used:
 15022 ;;		wreg, status,2
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15032 ;;Total ram usage:        1 bytes
 15033 ;; Hardware stack levels used:    1
 15034 ;; Hardware stack levels required when called:    8
 15035 ;; This function calls:
 15036 ;;		Nothing
 15037 ;; This function is called by:
 15038 ;;		_InterruptManagerLow
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           
 15042                           	psect	text64
 15043  00634E                     __ptext64:
 15044                           	callstack 0
 15045  00634E                     _RB4_ISR:
 15046                           	callstack 11
 15047                           
 15048                           ;incstack = 0
 15049                           ;RB4_ISR@Handler_Select stored from wreg
 15050  00634E  6E26               	movwf	RB4_ISR@Handler_Select^0,c
 15051  006350                     
 15052                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
 15053  006350  90F2               	bcf	242,0,c	;volatile
 15054  006352                     
 15055                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
 15056  006352  5026               	movf	RB4_ISR@Handler_Select^0,w,c
 15057  006354  B4D8               	btfsc	status,2,c
 15058  006356  EFAF  F031         	goto	i1u427_21
 15059  00635A  EFB1  F031         	goto	i1u427_20
 15060  00635E                     i1u427_21:
 15061  00635E  EFB3  F031         	goto	i1l5387
 15062  006362                     i1u427_20:
 15063  006362  EFB3  F031         	goto	i1l1227
 15064  006366                     i1l5387:
 15065  006366                     i1l1227:
 15066  006366  0012               	return		;funcret
 15067  006368                     __end_of_RB4_ISR:
 15068                           	callstack 0
 15069                           
 15070 ;; *************** function _INT1_ISR *****************
 15071 ;; Defined at:
 15072 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 15073 ;; Parameters:    Size  Location     Type
 15074 ;;		None
 15075 ;; Auto vars:     Size  Location     Type
 15076 ;;		None
 15077 ;; Return value:  Size  Location     Type
 15078 ;;                  1    wreg      void 
 15079 ;; Registers used:
 15080 ;;		None
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15090 ;;Total ram usage:        0 bytes
 15091 ;; Hardware stack levels used:    1
 15092 ;; Hardware stack levels required when called:    8
 15093 ;; This function calls:
 15094 ;;		Nothing
 15095 ;; This function is called by:
 15096 ;;		_InterruptManagerLow
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text65
 15101  006376                     __ptext65:
 15102                           	callstack 0
 15103  006376                     _INT1_ISR:
 15104                           	callstack 11
 15105  006376                     
 15106                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
 15107  006376  90F0               	bcf	240,0,c	;volatile
 15108  006378  0012               	return		;funcret
 15109  00637A                     __end_of_INT1_ISR:
 15110                           	callstack 0
 15111                           
 15112 ;; *************** function _ADC_ISR *****************
 15113 ;; Defined at:
 15114 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		None
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used:    1
 15134 ;; Hardware stack levels required when called:    8
 15135 ;; This function calls:
 15136 ;;		Nothing
 15137 ;; This function is called by:
 15138 ;;		_InterruptManagerLow
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text66
 15143  00637C                     __ptext66:
 15144                           	callstack 0
 15145  00637C                     _ADC_ISR:
 15146                           	callstack 11
 15147  00637C  0012               	return		;funcret
 15148  00637E                     __end_of_ADC_ISR:
 15149                           	callstack 0
 15150                           
 15151 ;; *************** function _InterruptManagerHigh *****************
 15152 ;; Defined at:
 15153 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;		None
 15156 ;; Auto vars:     Size  Location     Type
 15157 ;;		None
 15158 ;; Return value:  Size  Location     Type
 15159 ;;                  1    wreg      void 
 15160 ;; Registers used:
 15161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15162 ;; Tracked objects:
 15163 ;;		On entry : 0/0
 15164 ;;		On exit  : 0/0
 15165 ;;		Unchanged: 0/0
 15166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15171 ;;Total ram usage:        6 bytes
 15172 ;; Hardware stack levels used:    1
 15173 ;; Hardware stack levels required when called:    7
 15174 ;; This function calls:
 15175 ;;		_EUSART_Rx_ISR
 15176 ;;		_EUSART_Tx_ISR
 15177 ;;		_TMR0_ISR
 15178 ;; This function is called by:
 15179 ;;		Interrupt level 2
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	intcode
 15184  000008                     __pintcode:
 15185                           	callstack 0
 15186  000008                     _InterruptManagerHigh:
 15187                           	callstack 11
 15188                           
 15189                           ;incstack = 0
 15190  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15191  00000A  ED28  F024         	call	int_func,f	;refresh shadow registers
 15192                           
 15193                           	psect	intcode_body
 15194  004850                     __pintcode_body:
 15195                           	callstack 11
 15196  004850                     int_func:
 15197                           	callstack 11
 15198  004850  0006               	pop		; remove dummy address from shadow register refresh
 15199  004852  CFFA F020          	movff	pclath,??_InterruptManagerHigh
 15200  004856  CFFB F021          	movff	pclatu,??_InterruptManagerHigh+1
 15201  00485A  CFD9 F022          	movff	fsr2l,??_InterruptManagerHigh+2
 15202  00485E  CFDA F023          	movff	fsr2h,??_InterruptManagerHigh+3
 15203  004862  CFF3 F024          	movff	prodl,??_InterruptManagerHigh+4
 15204  004866  CFF4 F025          	movff	prodh,??_InterruptManagerHigh+5
 15205  00486A                     
 15206                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
 15207  00486A  AAF2               	btfss	242,5,c	;volatile
 15208  00486C  EF3A  F024         	goto	i2u1167_41
 15209  004870  EF3C  F024         	goto	i2u1167_40
 15210  004874                     i2u1167_41:
 15211  004874  EF45  F024         	goto	i2l1106
 15212  004878                     i2u1167_40:
 15213  004878  A4F2               	btfss	242,2,c	;volatile
 15214  00487A  EF41  F024         	goto	i2u1168_41
 15215  00487E  EF43  F024         	goto	i2u1168_40
 15216  004882                     i2u1168_41:
 15217  004882  EF45  F024         	goto	i2l1106
 15218  004886                     i2u1168_40:
 15219  004886                     
 15220                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
 15221  004886  EC73  F02F         	call	_TMR0_ISR	;wreg free
 15222  00488A                     i2l1106:
 15223                           
 15224                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
 15225  00488A  A29D               	btfss	157,1,c	;volatile
 15226  00488C  EF4A  F024         	goto	i2u1169_41
 15227  004890  EF4C  F024         	goto	i2u1169_40
 15228  004894                     i2u1169_41:
 15229  004894  EF4D  F024         	goto	i2l1108
 15230  004898                     i2u1169_40:
 15231  004898  509E               	movf	158,w,c	;volatile
 15232  00489A                     i2l1108:
 15233                           
 15234                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
 15235  00489A  A2A0               	btfss	160,1,c	;volatile
 15236  00489C  EF52  F024         	goto	i2u1170_41
 15237  0048A0  EF54  F024         	goto	i2u1170_40
 15238  0048A4                     i2u1170_41:
 15239  0048A4  EF55  F024         	goto	i2l1110
 15240  0048A8                     i2u1170_40:
 15241  0048A8  50A1               	movf	161,w,c	;volatile
 15242  0048AA                     i2l1110:
 15243                           
 15244                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
 15245  0048AA  A0A0               	btfss	160,0,c	;volatile
 15246  0048AC  EF5A  F024         	goto	i2u1171_41
 15247  0048B0  EF5C  F024         	goto	i2u1171_40
 15248  0048B4                     i2u1171_41:
 15249  0048B4  EF5D  F024         	goto	i2l1112
 15250  0048B8                     i2u1171_40:
 15251  0048B8  50A1               	movf	161,w,c	;volatile
 15252  0048BA                     i2l1112:
 15253                           
 15254                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
 15255  0048BA  AA9D               	btfss	157,5,c	;volatile
 15256  0048BC  EF62  F024         	goto	i2u1172_41
 15257  0048C0  EF64  F024         	goto	i2u1172_40
 15258  0048C4                     i2u1172_41:
 15259  0048C4  EF6D  F024         	goto	i2l1114
 15260  0048C8                     i2u1172_40:
 15261  0048C8  AA9E               	btfss	158,5,c	;volatile
 15262  0048CA  EF69  F024         	goto	i2u1173_41
 15263  0048CE  EF6B  F024         	goto	i2u1173_40
 15264  0048D2                     i2u1173_41:
 15265  0048D2  EF6D  F024         	goto	i2l1114
 15266  0048D6                     i2u1173_40:
 15267  0048D6                     
 15268                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
 15269  0048D6  EC1C  F031         	call	_EUSART_Rx_ISR	;wreg free
 15270  0048DA                     i2l1114:
 15271                           
 15272                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
 15273  0048DA  A89D               	btfss	157,4,c	;volatile
 15274  0048DC  EF72  F024         	goto	i2u1174_41
 15275  0048E0  EF74  F024         	goto	i2u1174_40
 15276  0048E4                     i2u1174_41:
 15277  0048E4  EF7D  F024         	goto	i2l1116
 15278  0048E8                     i2u1174_40:
 15279  0048E8  A89E               	btfss	158,4,c	;volatile
 15280  0048EA  EF79  F024         	goto	i2u1175_41
 15281  0048EE  EF7B  F024         	goto	i2u1175_40
 15282  0048F2                     i2u1175_41:
 15283  0048F2  EF7D  F024         	goto	i2l1116
 15284  0048F6                     i2u1175_40:
 15285  0048F6                     
 15286                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
 15287  0048F6  ECBF  F031         	call	_EUSART_Tx_ISR	;wreg free
 15288  0048FA                     i2l1116:
 15289                           
 15290                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
 15291  0048FA  A6A0               	btfss	160,3,c	;volatile
 15292  0048FC  EF82  F024         	goto	i2u1176_41
 15293  004900  EF84  F024         	goto	i2u1176_40
 15294  004904                     i2u1176_41:
 15295  004904  EF85  F024         	goto	i2l1118
 15296  004908                     i2u1176_40:
 15297  004908  50A1               	movf	161,w,c	;volatile
 15298  00490A                     i2l1118:
 15299                           
 15300                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
 15301  00490A  A69D               	btfss	157,3,c	;volatile
 15302  00490C  EF8A  F024         	goto	i2u1177_41
 15303  004910  EF8C  F024         	goto	i2u1177_40
 15304  004914                     i2u1177_41:
 15305  004914  EF8D  F024         	goto	i2l1121
 15306  004918                     i2u1177_40:
 15307  004918  509E               	movf	158,w,c	;volatile
 15308  00491A                     i2l1121:
 15309  00491A  C025  FFF4         	movff	??_InterruptManagerHigh+5,prodh
 15310  00491E  C024  FFF3         	movff	??_InterruptManagerHigh+4,prodl
 15311  004922  C023  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 15312  004926  C022  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 15313  00492A  C021  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 15314  00492E  C020  FFFA         	movff	??_InterruptManagerHigh,pclath
 15315  004932  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15316  004934  0011               	retfie		f
 15317  004936                     __end_of_InterruptManagerHigh:
 15318                           	callstack 0
 15319                           
 15320 ;; *************** function _TMR0_ISR *****************
 15321 ;; Defined at:
 15322 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;		None
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;		None
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15340 ;;Total ram usage:        2 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:    3
 15343 ;; This function calls:
 15344 ;;		Absolute function
 15345 ;;		_Timer0_Handler
 15346 ;; This function is called by:
 15347 ;;		_InterruptManagerHigh
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text68
 15352  005EE6                     __ptext68:
 15353                           	callstack 0
 15354  005EE6                     _TMR0_ISR:
 15355                           	callstack 14
 15356  005EE6                     
 15357                           ;MCAL/Timer0/hal_timer0.c: 220:     (INTCONbits.TMR0IF = 0);
 15358  005EE6  94F2               	bcf	242,2,c	;volatile
 15359  005EE8                     
 15360                           ;MCAL/Timer0/hal_timer0.c: 228:     TMR0H = (uint8_t) (( (preloaded_val + 2) >> 8));
 15361  005EE8  0E02               	movlw	2
 15362  005EEA  2433               	addwf	_preloaded_val^0,w,c
 15363  005EEC  6E0E               	movwf	??_TMR0_ISR^0,c
 15364  005EEE  0E00               	movlw	0
 15365  005EF0  2034               	addwfc	(_preloaded_val+1)^0,w,c
 15366  005EF2  6E0F               	movwf	(??_TMR0_ISR+1)^0,c
 15367  005EF4  C00F  F00E         	movff	??_TMR0_ISR+1,??_TMR0_ISR
 15368  005EF8  6A0F               	clrf	(??_TMR0_ISR+1)^0,c
 15369  005EFA  500E               	movf	??_TMR0_ISR^0,w,c
 15370  005EFC  6ED7               	movwf	215,c	;volatile
 15371                           
 15372                           ;MCAL/Timer0/hal_timer0.c: 229:     TMR0L = (uint8_t) ((preloaded_val + 2) & 0x00ff);
 15373  005EFE  5033               	movf	_preloaded_val^0,w,c
 15374  005F00  0F02               	addlw	2
 15375  005F02  6ED6               	movwf	214,c	;volatile
 15376                           
 15377                           ;MCAL/Timer0/hal_timer0.c: 231:     if(tmr0_InterruptHandler)
 15378  005F04  5035               	movf	_tmr0_InterruptHandler^0,w,c
 15379  005F06  1036               	iorwf	(_tmr0_InterruptHandler+1)^0,w,c
 15380  005F08  B4D8               	btfsc	status,2,c
 15381  005F0A  EF89  F02F         	goto	i2u1086_41
 15382  005F0E  EF8B  F02F         	goto	i2u1086_40
 15383  005F12                     i2u1086_41:
 15384  005F12  EF97  F02F         	goto	i2l1521
 15385  005F16                     i2u1086_40:
 15386  005F16                     
 15387                           ;MCAL/Timer0/hal_timer0.c: 232:     {;MCAL/Timer0/hal_timer0.c: 233:         tmr0_Interr
      +                          uptHandler();
 15388  005F16  D802               	call	i2u1087_48
 15389  005F18  EF97  F02F         	goto	i2u1087_49
 15390  005F1C                     i2u1087_48:
 15391  005F1C  0005               	push	
 15392  005F1E  6EFA               	movwf	pclath,c
 15393  005F20  5035               	movf	_tmr0_InterruptHandler^0,w,c
 15394  005F22  6EFD               	movwf	tosl,c
 15395  005F24  5036               	movf	(_tmr0_InterruptHandler+1)^0,w,c
 15396  005F26  6EFE               	movwf	tosh,c
 15397  005F28  6AFF               	clrf	tosu,c
 15398  005F2A  50FA               	movf	pclath,w,c
 15399  005F2C  0012               	return		;indir
 15400  005F2E                     i2u1087_49:
 15401  005F2E                     i2l1521:
 15402  005F2E  0012               	return		;funcret
 15403  005F30                     __end_of_TMR0_ISR:
 15404                           	callstack 0
 15405                           
 15406 ;; *************** function _Timer0_Handler *****************
 15407 ;; Defined at:
 15408 ;;		line 249 in file "Robot/Navigation/robot_navigation.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;		None
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;Total ram usage:        0 bytes
 15427 ;; Hardware stack levels used:    1
 15428 ;; Hardware stack levels required when called:    2
 15429 ;; This function calls:
 15430 ;;		_ECU_DC_Motor_Stop
 15431 ;; This function is called by:
 15432 ;;		_TMR0_ISR
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436                           	psect	text69
 15437  0062B6                     __ptext69:
 15438                           	callstack 0
 15439  0062B6                     _Timer0_Handler:
 15440                           	callstack 14
 15441  0062B6                     
 15442                           ;Robot/Navigation/robot_navigation.c: 251:     ECU_DC_Motor_Stop(&W1_W5_W2_W6_Motor_Cont
      +                          rol);
 15443  0062B6  0E50               	movlw	low _W1_W5_W2_W6_Motor_Control
 15444  0062B8  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
 15445  0062BA  0E00               	movlw	high _W1_W5_W2_W6_Motor_Control
 15446  0062BC  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
 15447  0062BE  EC8A  F030         	call	_ECU_DC_Motor_Stop	;wreg free
 15448                           
 15449                           ;Robot/Navigation/robot_navigation.c: 252:     ECU_DC_Motor_Stop(&W3_Motor_Control);
 15450  0062C2  0E4E               	movlw	low _W3_Motor_Control
 15451  0062C4  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
 15452  0062C6  0E00               	movlw	high _W3_Motor_Control
 15453  0062C8  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
 15454  0062CA  EC8A  F030         	call	_ECU_DC_Motor_Stop	;wreg free
 15455                           
 15456                           ;Robot/Navigation/robot_navigation.c: 253:     ECU_DC_Motor_Stop(&W4_Motor_Control);
 15457  0062CE  0E4C               	movlw	low _W4_Motor_Control
 15458  0062D0  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
 15459  0062D2  0E00               	movlw	high _W4_Motor_Control
 15460  0062D4  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
 15461  0062D6  EC8A  F030         	call	_ECU_DC_Motor_Stop	;wreg free
 15462  0062DA  0012               	return		;funcret
 15463  0062DC                     __end_of_Timer0_Handler:
 15464                           	callstack 0
 15465                           
 15466 ;; *************** function _ECU_DC_Motor_Stop *****************
 15467 ;; Defined at:
 15468 ;;		line 82 in file "ECU/DC_Motor/ecu_dc_motor.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;  dc_motor        2   10[COMRAM] PTR const struct .
 15471 ;;		 -> W4_Motor_Control(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control(2), 
 15472 ;; Auto vars:     Size  Location     Type
 15473 ;;  ret_value       1    0        unsigned char 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  1    wreg      unsigned char 
 15476 ;; Registers used:
 15477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/0
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;Total ram usage:        3 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    1
 15490 ;; This function calls:
 15491 ;;		i2_GPIO_Pin_Write_Logic
 15492 ;; This function is called by:
 15493 ;;		_Timer0_Handler
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text70
 15498  006114                     __ptext70:
 15499                           	callstack 0
 15500  006114                     _ECU_DC_Motor_Stop:
 15501                           	callstack 14
 15502  006114                     
 15503                           ;ECU/DC_Motor/ecu_dc_motor.c: 85:     if(((void*)0) == dc_motor)
 15504  006114  500B               	movf	ECU_DC_Motor_Stop@dc_motor^0,w,c
 15505  006116  100C               	iorwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
 15506  006118  A4D8               	btfss	status,2,c
 15507  00611A  EF91  F030         	goto	i2u973_41
 15508  00611E  EF93  F030         	goto	i2u973_40
 15509  006122                     i2u973_41:
 15510  006122  EF95  F030         	goto	i2l8949
 15511  006126                     i2u973_40:
 15512  006126                     
 15513                           ;ECU/DC_Motor/ecu_dc_motor.c: 88:     }
 15514  006126  EFA7  F030         	goto	i2l70
 15515  00612A                     i2l8949:
 15516                           
 15517                           ;ECU/DC_Motor/ecu_dc_motor.c: 90:     {;ECU/DC_Motor/ecu_dc_motor.c: 91:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor[0x01U]) , GPIO_LOW );
 15518  00612A  0E01               	movlw	1
 15519  00612C  240B               	addwf	ECU_DC_Motor_Stop@dc_motor^0,w,c
 15520  00612E  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 15521  006130  0E00               	movlw	0
 15522  006132  200C               	addwfc	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
 15523  006134  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 15524  006136  0E00               	movlw	0
 15525  006138  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 15526  00613A  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 15527                           
 15528                           ;ECU/DC_Motor/ecu_dc_motor.c: 92:         GPIO_Pin_Write_Logic(&(dc_motor->dc_motor[0x00
      +                          U]) , GPIO_LOW );
 15529  00613E  C00B  F001         	movff	ECU_DC_Motor_Stop@dc_motor,i2GPIO_Pin_Write_Logic@_pin_config
 15530  006142  C00C  F002         	movff	ECU_DC_Motor_Stop@dc_motor+1,i2GPIO_Pin_Write_Logic@_pin_config+1
 15531  006146  0E00               	movlw	0
 15532  006148  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 15533  00614A  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 15534  00614E                     i2l70:
 15535  00614E  0012               	return		;funcret
 15536  006150                     __end_of_ECU_DC_Motor_Stop:
 15537                           	callstack 0
 15538                           
 15539 ;; *************** function _EUSART_Tx_ISR *****************
 15540 ;; Defined at:
 15541 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;		None
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;		None
 15546 ;; Return value:  Size  Location     Type
 15547 ;;                  1    wreg      void 
 15548 ;; Registers used:
 15549 ;;		None
 15550 ;; Tracked objects:
 15551 ;;		On entry : 0/0
 15552 ;;		On exit  : 0/0
 15553 ;;		Unchanged: 0/0
 15554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15559 ;;Total ram usage:        0 bytes
 15560 ;; Hardware stack levels used:    1
 15561 ;; This function calls:
 15562 ;;		Nothing
 15563 ;; This function is called by:
 15564 ;;		_InterruptManagerHigh
 15565 ;; This function uses a non-reentrant model
 15566 ;;
 15567                           
 15568                           	psect	text71
 15569  00637E                     __ptext71:
 15570                           	callstack 0
 15571  00637E                     _EUSART_Tx_ISR:
 15572                           	callstack 17
 15573  00637E  0012               	return		;funcret
 15574  006380                     __end_of_EUSART_Tx_ISR:
 15575                           	callstack 0
 15576                           
 15577 ;; *************** function _EUSART_Rx_ISR *****************
 15578 ;; Defined at:
 15579 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
 15580 ;; Parameters:    Size  Location     Type
 15581 ;;		None
 15582 ;; Auto vars:     Size  Location     Type
 15583 ;;		None
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  1    wreg      void 
 15586 ;; Registers used:
 15587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15597 ;;Total ram usage:        0 bytes
 15598 ;; Hardware stack levels used:    1
 15599 ;; Hardware stack levels required when called:    6
 15600 ;; This function calls:
 15601 ;;		Absolute function
 15602 ;;		_usart_isr
 15603 ;; This function is called by:
 15604 ;;		_InterruptManagerHigh
 15605 ;; This function uses a non-reentrant model
 15606 ;;
 15607                           
 15608                           	psect	text72
 15609  006238                     __ptext72:
 15610                           	callstack 0
 15611  006238                     _EUSART_Rx_ISR:
 15612                           	callstack 11
 15613  006238                     
 15614                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
 15615  006238  503F               	movf	_eusart_Rx_InterruptHandler^0,w,c
 15616  00623A  1040               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 15617  00623C  B4D8               	btfsc	status,2,c
 15618  00623E  EF23  F031         	goto	i2u1078_41
 15619  006242  EF25  F031         	goto	i2u1078_40
 15620  006246                     i2u1078_41:
 15621  006246  EF31  F031         	goto	i2l779
 15622  00624A                     i2u1078_40:
 15623  00624A                     
 15624                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
 15625  00624A  D802               	call	i2u1079_48
 15626  00624C  EF31  F031         	goto	i2u1079_49
 15627  006250                     i2u1079_48:
 15628  006250  0005               	push	
 15629  006252  6EFA               	movwf	pclath,c
 15630  006254  503F               	movf	_eusart_Rx_InterruptHandler^0,w,c
 15631  006256  6EFD               	movwf	tosl,c
 15632  006258  5040               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 15633  00625A  6EFE               	movwf	tosh,c
 15634  00625C  6AFF               	clrf	tosu,c
 15635  00625E  50FA               	movf	pclath,w,c
 15636  006260  0012               	return		;indir
 15637  006262                     i2u1079_49:
 15638  006262                     i2l779:
 15639  006262  0012               	return		;funcret
 15640  006264                     __end_of_EUSART_Rx_ISR:
 15641                           	callstack 0
 15642                           
 15643 ;; *************** function _usart_isr *****************
 15644 ;; Defined at:
 15645 ;;		line 137 in file "application.c"
 15646 ;; Parameters:    Size  Location     Type
 15647 ;;		None
 15648 ;; Auto vars:     Size  Location     Type
 15649 ;;		None
 15650 ;; Return value:  Size  Location     Type
 15651 ;;                  1    wreg      void 
 15652 ;; Registers used:
 15653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15654 ;; Tracked objects:
 15655 ;;		On entry : 0/0
 15656 ;;		On exit  : 0/0
 15657 ;;		Unchanged: 0/0
 15658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15663 ;;Total ram usage:        0 bytes
 15664 ;; Hardware stack levels used:    1
 15665 ;; Hardware stack levels required when called:    5
 15666 ;; This function calls:
 15667 ;;		_Bluetooth_Send_Data_Non_Blocking
 15668 ;;		_EUSART_Async_Read_Data
 15669 ;;		_lcd_4bit_send_char_data_pos
 15670 ;;		i2_GPIO_Pin_Toggle_Logic
 15671 ;; This function is called by:
 15672 ;;		_EUSART_Rx_ISR
 15673 ;; This function uses a non-reentrant model
 15674 ;;
 15675                           
 15676                           	psect	text73
 15677  005F30                     __ptext73:
 15678                           	callstack 0
 15679  005F30                     _usart_isr:
 15680                           	callstack 11
 15681  005F30                     
 15682                           ;application.c: 139:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
 15683  005F30  0EC7               	movlw	low __uart_obj
 15684  005F32  6E06               	movwf	EUSART_Async_Read_Data@_eusart_obj^0,c
 15685  005F34  0E01               	movlw	high __uart_obj
 15686  005F36  6E07               	movwf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,c
 15687  005F38  0E47               	movlw	low _datarecive
 15688  005F3A  6E08               	movwf	EUSART_Async_Read_Data@data^0,c
 15689  005F3C  0E00               	movlw	high _datarecive
 15690  005F3E  6E09               	movwf	(EUSART_Async_Read_Data@data+1)^0,c
 15691  005F40  EC5F  F01B         	call	_EUSART_Async_Read_Data	;wreg free
 15692                           
 15693                           ;application.c: 140:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
 15694  005F44  0EC7               	movlw	low __uart_obj
 15695  005F46  6E0D               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
 15696  005F48  0E01               	movlw	high __uart_obj
 15697  005F4A  6E0E               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
 15698  005F4C  C04A  F00F         	movff	_datasend,Bluetooth_Send_Data_Non_Blocking@data
 15699  005F50  EC32  F031         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
 15700  005F54                     
 15701                           ;application.c: 141:     lcd_4bit_send_char_data_pos(&lcd1,2,4,datarecive);
 15702  005F54  0EE7               	movlw	low _lcd1
 15703  005F56  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
 15704  005F58  0E01               	movlw	high _lcd1
 15705  005F5A  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
 15706  005F5C  0E02               	movlw	2
 15707  005F5E  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
 15708  005F60  0E04               	movlw	4
 15709  005F62  6E1D               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
 15710  005F64  C047  F01E         	movff	_datarecive,lcd_4bit_send_char_data_pos@data
 15711  005F68  ECA8  F030         	call	_lcd_4bit_send_char_data_pos	;wreg free
 15712  005F6C                     
 15713                           ;application.c: 142:     GPIO_Pin_Toggle_Logic(&pind2);
 15714  005F6C  0E55               	movlw	low _pind2
 15715  005F6E  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
 15716  005F70  0E00               	movlw	high _pind2
 15717  005F72  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
 15718  005F74  EC0E  F02C         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
 15719  005F78  0012               	return		;funcret
 15720  005F7A                     __end_of_usart_isr:
 15721                           	callstack 0
 15722                           
 15723 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
 15724 ;; Defined at:
 15725 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 15726 ;; Parameters:    Size  Location     Type
 15727 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 15728 ;;		 -> pind1(1), pind2(1), 
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;  ERRORSTATUS     1    0        unsigned char 
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      unsigned char 
 15733 ;; Registers used:
 15734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15742 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15743 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;Total ram usage:        8 bytes
 15745 ;; Hardware stack levels used:    1
 15746 ;; This function calls:
 15747 ;;		Nothing
 15748 ;; This function is called by:
 15749 ;;		_usart_isr
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text74
 15754  00581C                     __ptext74:
 15755                           	callstack 0
 15756  00581C                     i2_GPIO_Pin_Toggle_Logic:
 15757                           	callstack 15
 15758  00581C                     
 15759                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 15760  00581C  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 15761  00581E  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 15762  005820  A4D8               	btfss	status,2,c
 15763  005822  EF15  F02C         	goto	i2u1019_41
 15764  005826  EF17  F02C         	goto	i2u1019_40
 15765  00582A                     i2u1019_41:
 15766  00582A  EF19  F02C         	goto	i2l9263
 15767  00582E                     i2u1019_40:
 15768  00582E                     
 15769                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 15770  00582E  EF45  F02C         	goto	i2l858
 15771  005832                     i2l9263:
 15772                           
 15773                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 15774  005832  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 15775  005836  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 15776  00583A  50DF               	movf	indf2,w,c
 15777  00583C  0B07               	andlw	7
 15778  00583E  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
 15779  005840  0E01               	movlw	1
 15780  005842  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
 15781  005844  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 15782  005846  EF27  F02C         	goto	i2u1020_44
 15783  00584A                     i2u1020_45:
 15784  00584A  90D8               	bcf	status,0,c
 15785  00584C  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
 15786  00584E                     i2u1020_44:
 15787  00584E  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 15788  005850  EF25  F02C         	goto	i2u1020_45
 15789  005854  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 15790  005858  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 15791  00585C  30DF               	rrcf	indf2,w,c
 15792  00585E  32E8               	rrcf	wreg,f,c
 15793  005860  32E8               	rrcf	wreg,f,c
 15794  005862  0B07               	andlw	7
 15795  005864  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
 15796  005866  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
 15797  005868  0D02               	mullw	2
 15798  00586A  0EB3               	movlw	low _lat_registers
 15799  00586C  24F3               	addwf	243,w,c
 15800  00586E  6ED9               	movwf	fsr2l,c
 15801  005870  0E01               	movlw	high _lat_registers
 15802  005872  20F4               	addwfc	prodh,w,c
 15803  005874  6EDA               	movwf	fsr2h,c
 15804  005876  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
 15805  00587A  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
 15806  00587E  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
 15807  005882  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
 15808  005886  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
 15809  005888  1ADF               	xorwf	indf2,f,c
 15810  00588A                     i2l858:
 15811  00588A  0012               	return		;funcret
 15812  00588C                     __end_ofi2_GPIO_Pin_Toggle_Logic:
 15813                           	callstack 0
 15814                           
 15815 ;; *************** function _lcd_4bit_send_char_data_pos *****************
 15816 ;; Defined at:
 15817 ;;		line 117 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  lcd             2   25[COMRAM] PTR const struct .
 15820 ;;		 -> lcd1(6), 
 15821 ;;  row             1   27[COMRAM] unsigned char 
 15822 ;;  colum           1   28[COMRAM] unsigned char 
 15823 ;;  data            1   29[COMRAM] unsigned char 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  ERRORSTATUS     1    0        unsigned char 
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      unsigned char 
 15828 ;; Registers used:
 15829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15835 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15839 ;;Total ram usage:        6 bytes
 15840 ;; Hardware stack levels used:    1
 15841 ;; Hardware stack levels required when called:    4
 15842 ;; This function calls:
 15843 ;;		i2_lcd_4bit_send_char_data
 15844 ;;		i2_lcd_4bits_set_courser
 15845 ;; This function is called by:
 15846 ;;		_usart_isr
 15847 ;;		_lcd_4bit_send_custom_char
 15848 ;; This function uses a non-reentrant model
 15849 ;;
 15850                           
 15851                           	psect	text75
 15852  006150                     __ptext75:
 15853                           	callstack 0
 15854  006150                     _lcd_4bit_send_char_data_pos:
 15855                           	callstack 11
 15856  006150                     
 15857                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 120:     if ( ((void*)0)==lcd)
 15858  006150  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
 15859  006152  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
 15860  006154  A4D8               	btfss	status,2,c
 15861  006156  EFAF  F030         	goto	i2u975_41
 15862  00615A  EFB1  F030         	goto	i2u975_40
 15863  00615E                     i2u975_41:
 15864  00615E  EFB3  F030         	goto	i2l8969
 15865  006162                     i2u975_40:
 15866  006162                     
 15867                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 123:     }
 15868  006162  EFC5  F030         	goto	i2l116
 15869  006166                     i2l8969:
 15870                           
 15871                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 125:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 12
      +                          6:        lcd_4bits_set_courser(lcd,row,colum);
 15872  006166  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,i2lcd_4bits_set_courser@lcd
 15873  00616A  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,i2lcd_4bits_set_courser@lcd+1
 15874  00616E  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,i2lcd_4bits_set_courser@row
 15875  006172  C01D  F016         	movff	lcd_4bit_send_char_data_pos@colum,i2lcd_4bits_set_courser@colum
 15876  006176  ECF1  F028         	call	i2_lcd_4bits_set_courser	;wreg free
 15877                           
 15878                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 127:        lcd_4bit_send_char_data(lcd,data);
 15879  00617A  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,i2lcd_4bit_send_char_data@lcd
 15880  00617E  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,i2lcd_4bit_send_char_data@lcd+1
 15881  006182  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,i2lcd_4bit_send_char_data@data
 15882  006186  EC14  F02E         	call	i2_lcd_4bit_send_char_data	;wreg free
 15883  00618A                     i2l116:
 15884  00618A  0012               	return		;funcret
 15885  00618C                     __end_of_lcd_4bit_send_char_data_pos:
 15886                           	callstack 0
 15887                           
 15888 ;; *************** function i2_lcd_4bits_set_courser *****************
 15889 ;; Defined at:
 15890 ;;		line 591 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;  lcd             2   18[COMRAM] PTR const struct .
 15893 ;;		 -> lcd1(6), 
 15894 ;;  row             1   20[COMRAM] unsigned char 
 15895 ;;  colum           1   21[COMRAM] unsigned char 
 15896 ;; Auto vars:     Size  Location     Type
 15897 ;;  ERRORSTATUS     1    0        unsigned char 
 15898 ;; Return value:  Size  Location     Type
 15899 ;;                  1    wreg      unsigned char 
 15900 ;; Registers used:
 15901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15902 ;; Tracked objects:
 15903 ;;		On entry : 0/0
 15904 ;;		On exit  : 0/0
 15905 ;;		Unchanged: 0/0
 15906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15911 ;;Total ram usage:        7 bytes
 15912 ;; Hardware stack levels used:    1
 15913 ;; Hardware stack levels required when called:    3
 15914 ;; This function calls:
 15915 ;;		i2_lcd_4bit_send_command
 15916 ;; This function is called by:
 15917 ;;		_lcd_4bit_send_char_data_pos
 15918 ;; This function uses a non-reentrant model
 15919 ;;
 15920                           
 15921                           	psect	text76
 15922  0051E2                     __ptext76:
 15923                           	callstack 0
 15924  0051E2                     i2_lcd_4bits_set_courser:
 15925                           	callstack 11
 15926  0051E2                     
 15927                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 594:         if ( ((void*)0)==lcd)
 15928  0051E2  5013               	movf	i2lcd_4bits_set_courser@lcd^0,w,c
 15929  0051E4  1014               	iorwf	(i2lcd_4bits_set_courser@lcd+1)^0,w,c
 15930  0051E6  A4D8               	btfss	status,2,c
 15931  0051E8  EFF8  F028         	goto	i2u955_41
 15932  0051EC  EFFA  F028         	goto	i2u955_40
 15933  0051F0                     i2u955_41:
 15934  0051F0  EFFC  F028         	goto	i2l8843
 15935  0051F4                     i2u955_40:
 15936  0051F4                     
 15937                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 597:     }
 15938  0051F4  EF48  F029         	goto	i2l262
 15939  0051F8                     i2l8843:
 15940                           
 15941                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 599:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 60
      +                          0:             colum--;
 15942  0051F8  0616               	decf	i2lcd_4bits_set_courser@colum^0,f,c
 15943                           
 15944                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 601:             switch (row)
 15945  0051FA  EF2B  F029         	goto	i2l8855
 15946  0051FE                     i2l8845:
 15947  0051FE  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
 15948  005202  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
 15949  005206  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
 15950  005208  0F80               	addlw	128
 15951  00520A  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
 15952  00520C  ECE3  F02D         	call	i2_lcd_4bit_send_command	;wreg free
 15953  005210  EF48  F029         	goto	i2l262
 15954  005214                     i2l8847:
 15955  005214  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
 15956  005218  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
 15957  00521C  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
 15958  00521E  0FC0               	addlw	192
 15959  005220  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
 15960  005222  ECE3  F02D         	call	i2_lcd_4bit_send_command	;wreg free
 15961  005226  EF48  F029         	goto	i2l262
 15962  00522A                     i2l8849:
 15963  00522A  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
 15964  00522E  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
 15965  005232  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
 15966  005234  0F94               	addlw	148
 15967  005236  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
 15968  005238  ECE3  F02D         	call	i2_lcd_4bit_send_command	;wreg free
 15969  00523C  EF48  F029         	goto	i2l262
 15970  005240                     i2l8851:
 15971  005240  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
 15972  005244  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
 15973  005248  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
 15974  00524A  0FD4               	addlw	212
 15975  00524C  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
 15976  00524E  ECE3  F02D         	call	i2_lcd_4bit_send_command	;wreg free
 15977  005252  EF48  F029         	goto	i2l262
 15978  005256                     i2l8855:
 15979  005256  5015               	movf	i2lcd_4bits_set_courser@row^0,w,c
 15980  005258  6E17               	movwf	??i2_lcd_4bits_set_courser^0,c
 15981  00525A  6A18               	clrf	(??i2_lcd_4bits_set_courser+1)^0,c
 15982                           
 15983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15984                           ; Switch size 1, requested type "simple"
 15985                           ; Number of cases is 1, Range of values is 0 to 0
 15986                           ; switch strategies available:
 15987                           ; Name         Instructions Cycles
 15988                           ; simple_byte            4     3 (average)
 15989                           ;	Chosen strategy is simple_byte
 15990  00525C  5018               	movf	(??i2_lcd_4bits_set_courser+1)^0,w,c
 15991  00525E  0A00               	xorlw	0	; case 0
 15992  005260  B4D8               	btfsc	status,2,c
 15993  005262  EF35  F029         	goto	i2l14079
 15994  005266  EF48  F029         	goto	i2l262
 15995  00526A                     i2l14079:
 15996                           
 15997                           ; Switch size 1, requested type "simple"
 15998                           ; Number of cases is 4, Range of values is 1 to 4
 15999                           ; switch strategies available:
 16000                           ; Name         Instructions Cycles
 16001                           ; simple_byte           13     7 (average)
 16002                           ;	Chosen strategy is simple_byte
 16003  00526A  5017               	movf	??i2_lcd_4bits_set_courser^0,w,c
 16004  00526C  0A01               	xorlw	1	; case 1
 16005  00526E  B4D8               	btfsc	status,2,c
 16006  005270  EFFF  F028         	goto	i2l8845
 16007  005274  0A03               	xorlw	3	; case 2
 16008  005276  B4D8               	btfsc	status,2,c
 16009  005278  EF0A  F029         	goto	i2l8847
 16010  00527C  0A01               	xorlw	1	; case 3
 16011  00527E  B4D8               	btfsc	status,2,c
 16012  005280  EF15  F029         	goto	i2l8849
 16013  005284  0A07               	xorlw	7	; case 4
 16014  005286  B4D8               	btfsc	status,2,c
 16015  005288  EF20  F029         	goto	i2l8851
 16016  00528C  EF48  F029         	goto	i2l262
 16017  005290                     i2l262:
 16018  005290  0012               	return		;funcret
 16019  005292                     __end_ofi2_lcd_4bits_set_courser:
 16020                           	callstack 0
 16021                           
 16022 ;; *************** function i2_lcd_4bit_send_command *****************
 16023 ;; Defined at:
 16024 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 16025 ;; Parameters:    Size  Location     Type
 16026 ;;  lcd             2   14[COMRAM] PTR const struct .
 16027 ;;		 -> lcd1(6), 
 16028 ;;  command         1   16[COMRAM] unsigned char 
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;  ERRORSTATUS     1    0        unsigned char 
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  1    wreg      unsigned char 
 16033 ;; Registers used:
 16034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16035 ;; Tracked objects:
 16036 ;;		On entry : 0/0
 16037 ;;		On exit  : 0/0
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16040 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;Total ram usage:        4 bytes
 16045 ;; Hardware stack levels used:    1
 16046 ;; Hardware stack levels required when called:    2
 16047 ;; This function calls:
 16048 ;;		i2_GPIO_Pin_Write_Logic
 16049 ;;		i2_lcd_4bits_send_enable_signal
 16050 ;;		i2_lcd_send_4bits
 16051 ;; This function is called by:
 16052 ;;		i2_lcd_4bits_set_courser
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           	psect	text77
 16057  005BC6                     __ptext77:
 16058                           	callstack 0
 16059  005BC6                     i2_lcd_4bit_send_command:
 16060                           	callstack 11
 16061  005BC6                     
 16062                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
 16063  005BC6  500F               	movf	i2lcd_4bit_send_command@lcd^0,w,c
 16064  005BC8  1010               	iorwf	(i2lcd_4bit_send_command@lcd+1)^0,w,c
 16065  005BCA  A4D8               	btfss	status,2,c
 16066  005BCC  EFEA  F02D         	goto	i2u924_41
 16067  005BD0  EFEC  F02D         	goto	i2u924_40
 16068  005BD4                     i2u924_41:
 16069  005BD4  EFEE  F02D         	goto	i2l8647
 16070  005BD8                     i2u924_40:
 16071  005BD8                     
 16072                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
 16073  005BD8  EF13  F02E         	goto	i2l106
 16074  005BDC                     i2l8647:
 16075  005BDC  C00F  F001         	movff	i2lcd_4bit_send_command@lcd,i2GPIO_Pin_Write_Logic@_pin_config
 16076  005BE0  C010  F002         	movff	i2lcd_4bit_send_command@lcd+1,i2GPIO_Pin_Write_Logic@_pin_config+1
 16077  005BE4  0E00               	movlw	0
 16078  005BE6  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16079  005BE8  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16080                           
 16081                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
 16082  005BEC  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
 16083  005BF0  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
 16084  005BF4  3811               	swapf	i2lcd_4bit_send_command@command^0,w,c
 16085  005BF6  0B0F               	andlw	15
 16086  005BF8  6E0D               	movwf	i2lcd_send_4bits@data_command^0,c
 16087  005BFA  EC5F  F02B         	call	i2_lcd_send_4bits	;wreg free
 16088                           
 16089                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
 16090  005BFE  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bits_send_enable_signal@lcd
 16091  005C02  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
 16092  005C06  EC27  F030         	call	i2_lcd_4bits_send_enable_signal	;wreg free
 16093                           
 16094                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
 16095  005C0A  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
 16096  005C0E  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
 16097  005C12  C011  F00D         	movff	i2lcd_4bit_send_command@command,i2lcd_send_4bits@data_command
 16098  005C16  EC5F  F02B         	call	i2_lcd_send_4bits	;wreg free
 16099                           
 16100                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
 16101  005C1A  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bits_send_enable_signal@lcd
 16102  005C1E  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
 16103  005C22  EC27  F030         	call	i2_lcd_4bits_send_enable_signal	;wreg free
 16104  005C26                     i2l106:
 16105  005C26  0012               	return		;funcret
 16106  005C28                     __end_ofi2_lcd_4bit_send_command:
 16107                           	callstack 0
 16108                           
 16109 ;; *************** function i2_lcd_4bit_send_char_data *****************
 16110 ;; Defined at:
 16111 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;  lcd             2   14[COMRAM] PTR const struct .
 16114 ;;		 -> lcd1(6), 
 16115 ;;  data            1   16[COMRAM] unsigned char 
 16116 ;; Auto vars:     Size  Location     Type
 16117 ;;  ERRORSTATUS     1    0        unsigned char 
 16118 ;; Return value:  Size  Location     Type
 16119 ;;                  1    wreg      unsigned char 
 16120 ;; Registers used:
 16121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16122 ;; Tracked objects:
 16123 ;;		On entry : 0/0
 16124 ;;		On exit  : 0/0
 16125 ;;		Unchanged: 0/0
 16126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;Total ram usage:        4 bytes
 16132 ;; Hardware stack levels used:    1
 16133 ;; Hardware stack levels required when called:    2
 16134 ;; This function calls:
 16135 ;;		i2_GPIO_Pin_Write_Logic
 16136 ;;		i2_lcd_4bits_send_enable_signal
 16137 ;;		i2_lcd_send_4bits
 16138 ;; This function is called by:
 16139 ;;		_lcd_4bit_send_char_data_pos
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text78
 16144  005C28                     __ptext78:
 16145                           	callstack 0
 16146  005C28                     i2_lcd_4bit_send_char_data:
 16147                           	callstack 12
 16148  005C28                     
 16149                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
 16150  005C28  500F               	movf	i2lcd_4bit_send_char_data@lcd^0,w,c
 16151  005C2A  1010               	iorwf	(i2lcd_4bit_send_char_data@lcd+1)^0,w,c
 16152  005C2C  A4D8               	btfss	status,2,c
 16153  005C2E  EF1B  F02E         	goto	i2u954_41
 16154  005C32  EF1D  F02E         	goto	i2u954_40
 16155  005C36                     i2u954_41:
 16156  005C36  EF1F  F02E         	goto	i2l8833
 16157  005C3A                     i2u954_40:
 16158  005C3A                     
 16159                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
 16160  005C3A  EF44  F02E         	goto	i2l111
 16161  005C3E                     i2l8833:
 16162  005C3E  C00F  F001         	movff	i2lcd_4bit_send_char_data@lcd,i2GPIO_Pin_Write_Logic@_pin_config
 16163  005C42  C010  F002         	movff	i2lcd_4bit_send_char_data@lcd+1,i2GPIO_Pin_Write_Logic@_pin_config+1
 16164  005C46  0E01               	movlw	1
 16165  005C48  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16166  005C4A  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16167                           
 16168                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
 16169  005C4E  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
 16170  005C52  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
 16171  005C56  3811               	swapf	i2lcd_4bit_send_char_data@data^0,w,c
 16172  005C58  0B0F               	andlw	15
 16173  005C5A  6E0D               	movwf	i2lcd_send_4bits@data_command^0,c
 16174  005C5C  EC5F  F02B         	call	i2_lcd_send_4bits	;wreg free
 16175                           
 16176                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
 16177  005C60  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bits_send_enable_signal@lcd
 16178  005C64  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
 16179  005C68  EC27  F030         	call	i2_lcd_4bits_send_enable_signal	;wreg free
 16180                           
 16181                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
 16182  005C6C  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
 16183  005C70  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
 16184  005C74  C011  F00D         	movff	i2lcd_4bit_send_char_data@data,i2lcd_send_4bits@data_command
 16185  005C78  EC5F  F02B         	call	i2_lcd_send_4bits	;wreg free
 16186                           
 16187                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
 16188  005C7C  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bits_send_enable_signal@lcd
 16189  005C80  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
 16190  005C84  EC27  F030         	call	i2_lcd_4bits_send_enable_signal	;wreg free
 16191  005C88                     i2l111:
 16192  005C88  0012               	return		;funcret
 16193  005C8A                     __end_ofi2_lcd_4bit_send_char_data:
 16194                           	callstack 0
 16195                           
 16196 ;; *************** function i2_lcd_send_4bits *****************
 16197 ;; Defined at:
 16198 ;;		line 529 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;  lcd             2   10[COMRAM] PTR const struct .
 16201 ;;		 -> lcd1(6), 
 16202 ;;  data_command    1   12[COMRAM] unsigned char 
 16203 ;; Auto vars:     Size  Location     Type
 16204 ;;  ERRORSTATUS     1    0        unsigned char 
 16205 ;; Return value:  Size  Location     Type
 16206 ;;                  1    wreg      unsigned char 
 16207 ;; Registers used:
 16208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16209 ;; Tracked objects:
 16210 ;;		On entry : 0/0
 16211 ;;		On exit  : 0/0
 16212 ;;		Unchanged: 0/0
 16213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16218 ;;Total ram usage:        4 bytes
 16219 ;; Hardware stack levels used:    1
 16220 ;; Hardware stack levels required when called:    1
 16221 ;; This function calls:
 16222 ;;		i2_GPIO_Pin_Write_Logic
 16223 ;; This function is called by:
 16224 ;;		i2_lcd_4bit_send_command
 16225 ;;		i2_lcd_4bit_send_char_data
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text79
 16230  0056BE                     __ptext79:
 16231                           	callstack 0
 16232  0056BE                     i2_lcd_send_4bits:
 16233                           	callstack 11
 16234  0056BE                     
 16235                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 532:         if ( ((void*)0)==lcd)
 16236  0056BE  500B               	movf	i2lcd_send_4bits@lcd^0,w,c
 16237  0056C0  100C               	iorwf	(i2lcd_send_4bits@lcd+1)^0,w,c
 16238  0056C2  A4D8               	btfss	status,2,c
 16239  0056C4  EF66  F02B         	goto	i2u902_41
 16240  0056C8  EF68  F02B         	goto	i2u902_40
 16241  0056CC                     i2u902_41:
 16242  0056CC  EF6A  F02B         	goto	i2l8485
 16243  0056D0                     i2u902_40:
 16244  0056D0                     
 16245                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 535:     }
 16246  0056D0  EF9B  F02B         	goto	i2l233
 16247  0056D4                     i2l8485:
 16248                           
 16249                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 537:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 53
      +                          8:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
 16250  0056D4  0E02               	movlw	2
 16251  0056D6  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
 16252  0056D8  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 16253  0056DA  0E00               	movlw	0
 16254  0056DC  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
 16255  0056DE  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 16256  0056E0  500D               	movf	i2lcd_send_4bits@data_command^0,w,c
 16257  0056E2  0B01               	andlw	1
 16258  0056E4  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16259  0056E6  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16260                           
 16261                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 539:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
 16262  0056EA  0E03               	movlw	3
 16263  0056EC  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
 16264  0056EE  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 16265  0056F0  0E00               	movlw	0
 16266  0056F2  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
 16267  0056F4  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 16268  0056F6  90D8               	bcf	status,0,c
 16269  0056F8  300D               	rrcf	i2lcd_send_4bits@data_command^0,w,c
 16270  0056FA  0B01               	andlw	1
 16271  0056FC  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16272  0056FE  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16273                           
 16274                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 540:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
 16275  005702  0E04               	movlw	4
 16276  005704  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
 16277  005706  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 16278  005708  0E00               	movlw	0
 16279  00570A  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
 16280  00570C  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 16281  00570E  400D               	rrncf	i2lcd_send_4bits@data_command^0,w,c
 16282  005710  42E8               	rrncf	wreg,f,c
 16283  005712  0B3F               	andlw	63
 16284  005714  0B01               	andlw	1
 16285  005716  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16286  005718  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16287                           
 16288                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 541:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
 16289  00571C  0E05               	movlw	5
 16290  00571E  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
 16291  005720  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 16292  005722  0E00               	movlw	0
 16293  005724  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
 16294  005726  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 16295  005728  380D               	swapf	i2lcd_send_4bits@data_command^0,w,c
 16296  00572A  46E8               	rlncf	wreg,f,c
 16297  00572C  0B1F               	andlw	31
 16298  00572E  0B01               	andlw	1
 16299  005730  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16300  005732  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16301  005736                     i2l233:
 16302  005736  0012               	return		;funcret
 16303  005738                     __end_ofi2_lcd_send_4bits:
 16304                           	callstack 0
 16305                           
 16306 ;; *************** function i2_lcd_4bits_send_enable_signal *****************
 16307 ;; Defined at:
 16308 ;;		line 512 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  lcd             2   10[COMRAM] PTR const struct .
 16311 ;;		 -> lcd1(6), 
 16312 ;; Auto vars:     Size  Location     Type
 16313 ;;  ERRORSTATUS     1    0        unsigned char 
 16314 ;; Return value:  Size  Location     Type
 16315 ;;                  1    wreg      unsigned char 
 16316 ;; Registers used:
 16317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16318 ;; Tracked objects:
 16319 ;;		On entry : 0/0
 16320 ;;		On exit  : 0/0
 16321 ;;		Unchanged: 0/0
 16322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16326 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16327 ;;Total ram usage:        3 bytes
 16328 ;; Hardware stack levels used:    1
 16329 ;; Hardware stack levels required when called:    1
 16330 ;; This function calls:
 16331 ;;		i2_GPIO_Pin_Write_Logic
 16332 ;; This function is called by:
 16333 ;;		i2_lcd_4bit_send_command
 16334 ;;		i2_lcd_4bit_send_char_data
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text80
 16339  00604E                     __ptext80:
 16340                           	callstack 0
 16341  00604E                     i2_lcd_4bits_send_enable_signal:
 16342                           	callstack 11
 16343  00604E                     
 16344                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:         if ( ((void*)0)==lcd)
 16345  00604E  500B               	movf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
 16346  006050  100C               	iorwf	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
 16347  006052  A4D8               	btfss	status,2,c
 16348  006054  EF2E  F030         	goto	i2u901_41
 16349  006058  EF30  F030         	goto	i2u901_40
 16350  00605C                     i2u901_41:
 16351  00605C  EF32  F030         	goto	i2l8471
 16352  006060                     i2u901_40:
 16353  006060                     
 16354                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 518:     }
 16355  006060  EF49  F030         	goto	i2l228
 16356  006064                     i2l8471:
 16357                           
 16358                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 520:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 52
      +                          1:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
 16359  006064  0E01               	movlw	1
 16360  006066  240B               	addwf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
 16361  006068  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 16362  00606A  0E00               	movlw	0
 16363  00606C  200C               	addwfc	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
 16364  00606E  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 16365  006070  0E01               	movlw	1
 16366  006072  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16367  006074  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16368  006078                     
 16369                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 522:             _delay((unsigned long)((5)*(24000
      +                          000/4000000.0)));
 16370  006078  0E0A               	movlw	10
 16371  00607A                     i2u1658_47:
 16372  00607A  2EE8               	decfsz	wreg,f,c
 16373  00607C  D7FE               	bra	i2u1658_47
 16374  00607E                     
 16375                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 523:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
 16376  00607E  0E01               	movlw	1
 16377  006080  240B               	addwf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
 16378  006082  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
 16379  006084  0E00               	movlw	0
 16380  006086  200C               	addwfc	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
 16381  006088  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 16382  00608A  0E00               	movlw	0
 16383  00608C  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
 16384  00608E  EC0D  F022         	call	i2_GPIO_Pin_Write_Logic	;wreg free
 16385  006092                     i2l228:
 16386  006092  0012               	return		;funcret
 16387  006094                     __end_ofi2_lcd_4bits_send_enable_signal:
 16388                           	callstack 0
 16389                           
 16390 ;; *************** function i2_GPIO_Pin_Write_Logic *****************
 16391 ;; Defined at:
 16392 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 16393 ;; Parameters:    Size  Location     Type
 16394 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16395 ;;		 -> selector(1), pind0(1), pind1(1), pind2(1), 
 16396 ;;		 -> lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(10), CCP1_Obj(10), 
 16397 ;;		 -> W4_Motor_Control.dc_motor(2), W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), 
 16398 ;;		 -> W1_W5_W2_W6_Motor_Control.dc_motor(2), W1_W5_W2_W6_Motor_Control(2), 
 16399 ;;  logic           1    2[COMRAM] enum E2958
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;  ERRORSTATUS     1    9[COMRAM] unsigned char 
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1    wreg      unsigned char 
 16404 ;; Registers used:
 16405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16406 ;; Tracked objects:
 16407 ;;		On entry : 0/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16413 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16414 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16415 ;;Total ram usage:       10 bytes
 16416 ;; Hardware stack levels used:    1
 16417 ;; This function calls:
 16418 ;;		Nothing
 16419 ;; This function is called by:
 16420 ;;		_ECU_DC_Motor_Stop
 16421 ;;		i2_lcd_4bit_send_command
 16422 ;;		i2_lcd_4bit_send_char_data
 16423 ;;		i2_lcd_4bits_send_enable_signal
 16424 ;;		i2_lcd_send_4bits
 16425 ;; This function uses a non-reentrant model
 16426 ;;
 16427                           
 16428                           	psect	text81
 16429  00441A                     __ptext81:
 16430                           	callstack 0
 16431  00441A                     i2_GPIO_Pin_Write_Logic:
 16432                           	callstack 14
 16433  00441A                     
 16434                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 16435  00441A  0E01               	movlw	1
 16436  00441C  6E0A               	movwf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 16437  00441E                     
 16438                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 16439  00441E  5001               	movf	i2GPIO_Pin_Write_Logic@_pin_config^0,w,c
 16440  004420  1002               	iorwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 16441  004422  B4D8               	btfsc	status,2,c
 16442  004424  EF16  F022         	goto	i2u819_41
 16443  004428  EF18  F022         	goto	i2u819_40
 16444  00442C                     i2u819_41:
 16445  00442C  EF27  F022         	goto	i2l8033
 16446  004430                     i2u819_40:
 16447  004430  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
 16448  004434  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 16449  004438  50DF               	movf	indf2,w,c
 16450  00443A  0B07               	andlw	7
 16451  00443C  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
 16452  00443E  0E07               	movlw	7
 16453  004440  6404               	cpfsgt	??i2_GPIO_Pin_Write_Logic^0,c
 16454  004442  EF25  F022         	goto	i2u820_41
 16455  004446  EF27  F022         	goto	i2u820_40
 16456  00444A                     i2u820_41:
 16457  00444A  EF8A  F022         	goto	i2l8041
 16458  00444E                     i2u820_40:
 16459  00444E                     i2l8033:
 16460                           
 16461                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 16462  00444E  0E00               	movlw	0
 16463  004450  6E0A               	movwf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 16464                           
 16465                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 16466  004452  EF9F  F022         	goto	i2l8043
 16467  004456                     i2l8035:
 16468                           
 16469                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 16470  004456  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
 16471  00445A  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 16472  00445E  50DF               	movf	indf2,w,c
 16473  004460  0B07               	andlw	7
 16474  004462  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
 16475  004464  0E01               	movlw	1
 16476  004466  6E05               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
 16477  004468  2A04               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
 16478  00446A  EF39  F022         	goto	i2u821_44
 16479  00446E                     i2u821_45:
 16480  00446E  90D8               	bcf	status,0,c
 16481  004470  3605               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
 16482  004472                     i2u821_44:
 16483  004472  2E04               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
 16484  004474  EF37  F022         	goto	i2u821_45
 16485  004478  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
 16486  00447A  0AFF               	xorlw	255
 16487  00447C  6E06               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
 16488  00447E  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
 16489  004482  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 16490  004486  30DF               	rrcf	indf2,w,c
 16491  004488  32E8               	rrcf	wreg,f,c
 16492  00448A  32E8               	rrcf	wreg,f,c
 16493  00448C  0B07               	andlw	7
 16494  00448E  6E07               	movwf	(??i2_GPIO_Pin_Write_Logic+3)^0,c
 16495  004490  5007               	movf	(??i2_GPIO_Pin_Write_Logic+3)^0,w,c
 16496  004492  0D02               	mullw	2
 16497  004494  0EB3               	movlw	low _lat_registers
 16498  004496  24F3               	addwf	243,w,c
 16499  004498  6ED9               	movwf	fsr2l,c
 16500  00449A  0E01               	movlw	high _lat_registers
 16501  00449C  20F4               	addwfc	prodh,w,c
 16502  00449E  6EDA               	movwf	fsr2h,c
 16503  0044A0  CFDE F008          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+4
 16504  0044A4  CFDD F009          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+5
 16505  0044A8  C008  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2l
 16506  0044AC  C009  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+5,fsr2h
 16507  0044B0  5006               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
 16508  0044B2  16DF               	andwf	indf2,f,c
 16509                           
 16510                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 16511  0044B4  EF9F  F022         	goto	i2l8043
 16512  0044B8                     i2l8037:
 16513                           
 16514                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 16515  0044B8  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
 16516  0044BC  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 16517  0044C0  50DF               	movf	indf2,w,c
 16518  0044C2  0B07               	andlw	7
 16519  0044C4  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
 16520  0044C6  0E01               	movlw	1
 16521  0044C8  6E05               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
 16522  0044CA  2A04               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
 16523  0044CC  EF6A  F022         	goto	i2u822_44
 16524  0044D0                     i2u822_45:
 16525  0044D0  90D8               	bcf	status,0,c
 16526  0044D2  3605               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
 16527  0044D4                     i2u822_44:
 16528  0044D4  2E04               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
 16529  0044D6  EF68  F022         	goto	i2u822_45
 16530  0044DA  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
 16531  0044DE  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 16532  0044E2  30DF               	rrcf	indf2,w,c
 16533  0044E4  32E8               	rrcf	wreg,f,c
 16534  0044E6  32E8               	rrcf	wreg,f,c
 16535  0044E8  0B07               	andlw	7
 16536  0044EA  6E06               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
 16537  0044EC  5006               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
 16538  0044EE  0D02               	mullw	2
 16539  0044F0  0EB3               	movlw	low _lat_registers
 16540  0044F2  24F3               	addwf	243,w,c
 16541  0044F4  6ED9               	movwf	fsr2l,c
 16542  0044F6  0E01               	movlw	high _lat_registers
 16543  0044F8  20F4               	addwfc	prodh,w,c
 16544  0044FA  6EDA               	movwf	fsr2h,c
 16545  0044FC  CFDE F007          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+3
 16546  004500  CFDD F008          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+4
 16547  004504  C007  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+3,fsr2l
 16548  004508  C008  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2h
 16549  00450C  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
 16550  00450E  12DF               	iorwf	indf2,f,c
 16551                           
 16552                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 16553  004510  EF9F  F022         	goto	i2l8043
 16554  004514                     i2l8041:
 16555  004514  5003               	movf	i2GPIO_Pin_Write_Logic@logic^0,w,c
 16556  004516  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
 16557  004518  6A05               	clrf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
 16558                           
 16559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16560                           ; Switch size 1, requested type "simple"
 16561                           ; Number of cases is 1, Range of values is 0 to 0
 16562                           ; switch strategies available:
 16563                           ; Name         Instructions Cycles
 16564                           ; simple_byte            4     3 (average)
 16565                           ;	Chosen strategy is simple_byte
 16566  00451A  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
 16567  00451C  0A00               	xorlw	0	; case 0
 16568  00451E  B4D8               	btfsc	status,2,c
 16569  004520  EF94  F022         	goto	i2l14081
 16570  004524  EF27  F022         	goto	i2l8033
 16571  004528                     i2l14081:
 16572                           
 16573                           ; Switch size 1, requested type "simple"
 16574                           ; Number of cases is 2, Range of values is 0 to 1
 16575                           ; switch strategies available:
 16576                           ; Name         Instructions Cycles
 16577                           ; simple_byte            7     4 (average)
 16578                           ;	Chosen strategy is simple_byte
 16579  004528  5004               	movf	??i2_GPIO_Pin_Write_Logic^0,w,c
 16580  00452A  0A00               	xorlw	0	; case 0
 16581  00452C  B4D8               	btfsc	status,2,c
 16582  00452E  EF2B  F022         	goto	i2l8035
 16583  004532  0A01               	xorlw	1	; case 1
 16584  004534  B4D8               	btfsc	status,2,c
 16585  004536  EF5C  F022         	goto	i2l8037
 16586  00453A  EF27  F022         	goto	i2l8033
 16587  00453E                     i2l8043:
 16588                           
 16589                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 16590  00453E  500A               	movf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
 16591  004540  0012               	return		;funcret
 16592  004542                     __end_ofi2_GPIO_Pin_Write_Logic:
 16593                           	callstack 0
 16594                           
 16595 ;; *************** function _EUSART_Async_Read_Data *****************
 16596 ;; Defined at:
 16597 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 16600 ;;		 -> _uart_obj(12), 
 16601 ;;  data            2    7[COMRAM] PTR unsigned short 
 16602 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
 16603 ;; Auto vars:     Size  Location     Type
 16604 ;;  l_temp_data     2   18[COMRAM] unsigned short 
 16605 ;;  ret_val         1    0        unsigned char 
 16606 ;; Return value:  Size  Location     Type
 16607 ;;                  1    wreg      unsigned char 
 16608 ;; Registers used:
 16609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16610 ;; Tracked objects:
 16611 ;;		On entry : 0/0
 16612 ;;		On exit  : 0/0
 16613 ;;		Unchanged: 0/0
 16614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16616 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16618 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16619 ;;Total ram usage:       15 bytes
 16620 ;; Hardware stack levels used:    1
 16621 ;; Hardware stack levels required when called:    1
 16622 ;; This function calls:
 16623 ;;		_calc_parity_even
 16624 ;;		_calc_parity_odd
 16625 ;; This function is called by:
 16626 ;;		_usart_isr
 16627 ;;		_Bluetooth_Recieve_Data_Non_Blocking
 16628 ;;		_EUSART_Async_Read_Data_Blocking
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632                           	psect	text82
 16633  0036BE                     __ptext82:
 16634                           	callstack 0
 16635  0036BE                     _EUSART_Async_Read_Data:
 16636                           	callstack 14
 16637  0036BE                     
 16638                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 16639  0036BE  0E00               	movlw	0
 16640  0036C0  6E14               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16641  0036C2  0E00               	movlw	0
 16642  0036C4  6E13               	movwf	EUSART_Async_Read_Data@l_temp_data^0,c
 16643  0036C6                     
 16644                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 16645  0036C6  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16646  0036C8  1007               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16647  0036CA  B4D8               	btfsc	status,2,c
 16648  0036CC  EF6A  F01B         	goto	i2u957_41
 16649  0036D0  EF6C  F01B         	goto	i2u957_40
 16650  0036D4                     i2u957_41:
 16651  0036D4  EF75  F01B         	goto	i2l8877
 16652  0036D8                     i2u957_40:
 16653  0036D8  5008               	movf	EUSART_Async_Read_Data@data^0,w,c
 16654  0036DA  1009               	iorwf	(EUSART_Async_Read_Data@data+1)^0,w,c
 16655  0036DC  A4D8               	btfss	status,2,c
 16656  0036DE  EF73  F01B         	goto	i2u958_41
 16657  0036E2  EF75  F01B         	goto	i2u958_40
 16658  0036E6                     i2u958_41:
 16659  0036E6  EF77  F01B         	goto	i2l630
 16660  0036EA                     i2u958_40:
 16661  0036EA                     i2l8877:
 16662                           
 16663                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 16664  0036EA  EF53  F01C         	goto	i2l8927
 16665  0036EE                     i2l630:
 16666                           
 16667                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 16668  0036EE  AA9E               	btfss	158,5,c	;volatile
 16669  0036F0  EF7C  F01B         	goto	i2u959_41
 16670  0036F4  EF7E  F01B         	goto	i2u959_40
 16671  0036F8                     i2u959_41:
 16672  0036F8  EF75  F01B         	goto	i2l8877
 16673  0036FC                     i2u959_40:
 16674  0036FC                     
 16675                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 16676  0036FC  EE20 F009          	lfsr	2,9
 16677  003700  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16678  003702  26D9               	addwf	fsr2l,f,c
 16679  003704  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16680  003706  22DA               	addwfc	fsr2h,f,c
 16681  003708  B8DF               	btfsc	indf2,4,c
 16682  00370A  EF89  F01B         	goto	i2u960_41
 16683  00370E  EF8B  F01B         	goto	i2u960_40
 16684  003712                     i2u960_41:
 16685  003712  EF98  F01B         	goto	i2l8883
 16686  003716                     i2u960_40:
 16687  003716                     
 16688                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 16689  003716  50AE               	movf	174,w,c	;volatile
 16690  003718  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
 16691  00371A  6A0B               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
 16692  00371C  C008  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 16693  003720  C009  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 16694  003724  C00A  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 16695  003728  C00B  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 16696                           
 16697                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 16698  00372C  EF53  F01C         	goto	i2l8927
 16699  003730                     i2l8883:
 16700  003730  EE20 F009          	lfsr	2,9
 16701  003734  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16702  003736  26D9               	addwf	fsr2l,f,c
 16703  003738  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16704  00373A  22DA               	addwfc	fsr2h,f,c
 16705  00373C  A8DF               	btfss	indf2,4,c
 16706  00373E  EFA3  F01B         	goto	i2u961_41
 16707  003742  EFA5  F01B         	goto	i2u961_40
 16708  003746                     i2u961_41:
 16709  003746  EF53  F01C         	goto	i2l643
 16710  00374A                     i2u961_40:
 16711  00374A                     
 16712                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 16713  00374A  EE20 F009          	lfsr	2,9
 16714  00374E  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16715  003750  26D9               	addwf	fsr2l,f,c
 16716  003752  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16717  003754  22DA               	addwfc	fsr2h,f,c
 16718  003756  30DF               	rrcf	indf2,w,c
 16719  003758  0B03               	andlw	3
 16720  00375A  0900               	iorlw	0
 16721  00375C  A4D8               	btfss	status,2,c
 16722  00375E  EFB3  F01B         	goto	i2u962_41
 16723  003762  EFB5  F01B         	goto	i2u962_40
 16724  003766                     i2u962_41:
 16725  003766  EFD7  F01B         	goto	i2l8897
 16726  00376A                     i2u962_40:
 16727  00376A                     
 16728                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 16729  00376A  CFAE F013          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 16730  00376E  6A14               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16731                           
 16732                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 16733  003770  B0AB               	btfsc	4011,0,c	;volatile
 16734  003772  EFBD  F01B         	goto	i2u963_41
 16735  003776  EFBF  F01B         	goto	i2u963_40
 16736  00377A                     i2u963_41:
 16737  00377A  EFC5  F01B         	goto	i2l8891
 16738  00377E                     i2u963_40:
 16739  00377E  0E00               	movlw	0
 16740  003780  6E0E               	movwf	(_EUSART_Async_Read_Data$1885+1)^0,c
 16741  003782  0E00               	movlw	0
 16742  003784  6E0D               	movwf	_EUSART_Async_Read_Data$1885^0,c
 16743  003786  EFC9  F01B         	goto	i2l8893
 16744  00378A                     i2l8891:
 16745  00378A  0E01               	movlw	1
 16746  00378C  6E0E               	movwf	(_EUSART_Async_Read_Data$1885+1)^0,c
 16747  00378E  0E00               	movlw	0
 16748  003790  6E0D               	movwf	_EUSART_Async_Read_Data$1885^0,c
 16749  003792                     i2l8893:
 16750  003792  500D               	movf	_EUSART_Async_Read_Data$1885^0,w,c
 16751  003794  2613               	addwf	EUSART_Async_Read_Data@l_temp_data^0,f,c
 16752  003796  500E               	movf	(_EUSART_Async_Read_Data$1885+1)^0,w,c
 16753  003798  2214               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 16754  00379A                     
 16755                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 16756  00379A  C008  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 16757  00379E  C009  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 16758  0037A2  C013  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
 16759  0037A6  C014  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
 16760                           
 16761                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 16762  0037AA  EF53  F01C         	goto	i2l8927
 16763  0037AE                     i2l8897:
 16764  0037AE  EE20 F009          	lfsr	2,9
 16765  0037B2  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16766  0037B4  26D9               	addwf	fsr2l,f,c
 16767  0037B6  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16768  0037B8  22DA               	addwfc	fsr2h,f,c
 16769  0037BA  30DF               	rrcf	indf2,w,c
 16770  0037BC  0B03               	andlw	3
 16771  0037BE  06E8               	decf	wreg,f,c
 16772  0037C0  A4D8               	btfss	status,2,c
 16773  0037C2  EFE5  F01B         	goto	i2u964_41
 16774  0037C6  EFE7  F01B         	goto	i2u964_40
 16775  0037CA                     i2u964_41:
 16776  0037CA  EF1C  F01C         	goto	i2l8911
 16777  0037CE                     i2u964_40:
 16778  0037CE                     
 16779                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 16780  0037CE  CFAE F013          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 16781  0037D2  6A14               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16782                           
 16783                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 16784  0037D4  B0AB               	btfsc	171,0,c	;volatile
 16785  0037D6  EFEF  F01B         	goto	i2u965_41
 16786  0037DA  EFF1  F01B         	goto	i2u965_40
 16787  0037DE                     i2u965_41:
 16788  0037DE  EFF7  F01B         	goto	i2l8903
 16789  0037E2                     i2u965_40:
 16790  0037E2  0E00               	movlw	0
 16791  0037E4  6E10               	movwf	(_EUSART_Async_Read_Data$1886+1)^0,c
 16792  0037E6  0E00               	movlw	0
 16793  0037E8  6E0F               	movwf	_EUSART_Async_Read_Data$1886^0,c
 16794  0037EA  EFFB  F01B         	goto	i2l8905
 16795  0037EE                     i2l8903:
 16796  0037EE  0E01               	movlw	1
 16797  0037F0  6E10               	movwf	(_EUSART_Async_Read_Data$1886+1)^0,c
 16798  0037F2  0E00               	movlw	0
 16799  0037F4  6E0F               	movwf	_EUSART_Async_Read_Data$1886^0,c
 16800  0037F6                     i2l8905:
 16801  0037F6  500F               	movf	_EUSART_Async_Read_Data$1886^0,w,c
 16802  0037F8  2613               	addwf	EUSART_Async_Read_Data@l_temp_data^0,f,c
 16803  0037FA  5010               	movf	(_EUSART_Async_Read_Data$1886+1)^0,w,c
 16804  0037FC  2214               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 16805  0037FE                     
 16806                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 16807  0037FE  5013               	movf	EUSART_Async_Read_Data@l_temp_data^0,w,c
 16808  003800  ECE7  F02C         	call	_calc_parity_even
 16809  003804  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
 16810  003806  5014               	movf	(EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 16811  003808  180A               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 16812  00380A  A4D8               	btfss	status,2,c
 16813  00380C  EF0A  F01C         	goto	i2u966_41
 16814  003810  EF0C  F01C         	goto	i2u966_40
 16815  003814                     i2u966_41:
 16816  003814  EF53  F01C         	goto	i2l643
 16817  003818                     i2u966_40:
 16818  003818                     i2l8909:
 16819                           
 16820                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 16821  003818  0EFF               	movlw	255
 16822  00381A  1413               	andwf	EUSART_Async_Read_Data@l_temp_data^0,w,c
 16823  00381C  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
 16824  00381E  0E00               	movlw	0
 16825  003820  1414               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 16826  003822  6E0B               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
 16827  003824  C008  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 16828  003828  C009  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 16829  00382C  C00A  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 16830  003830  C00B  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 16831                           
 16832                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 16833  003834  EF53  F01C         	goto	i2l8927
 16834  003838                     i2l8911:
 16835  003838  EE20 F009          	lfsr	2,9
 16836  00383C  5006               	movf	EUSART_Async_Read_Data@_eusart_obj^0,w,c
 16837  00383E  26D9               	addwf	fsr2l,f,c
 16838  003840  5007               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 16839  003842  22DA               	addwfc	fsr2h,f,c
 16840  003844  30DF               	rrcf	indf2,w,c
 16841  003846  0B03               	andlw	3
 16842  003848  0A02               	xorlw	2
 16843  00384A  A4D8               	btfss	status,2,c
 16844  00384C  EF2A  F01C         	goto	i2u967_41
 16845  003850  EF2C  F01C         	goto	i2u967_40
 16846  003854                     i2u967_41:
 16847  003854  EF53  F01C         	goto	i2l643
 16848  003858                     i2u967_40:
 16849  003858                     
 16850                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 16851  003858  CFAE F013          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 16852  00385C  6A14               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)^0,c
 16853                           
 16854                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 16855  00385E  B0AB               	btfsc	171,0,c	;volatile
 16856  003860  EF34  F01C         	goto	i2u968_41
 16857  003864  EF36  F01C         	goto	i2u968_40
 16858  003868                     i2u968_41:
 16859  003868  EF3C  F01C         	goto	i2l8917
 16860  00386C                     i2u968_40:
 16861  00386C  0E00               	movlw	0
 16862  00386E  6E12               	movwf	(_EUSART_Async_Read_Data$1887+1)^0,c
 16863  003870  0E00               	movlw	0
 16864  003872  6E11               	movwf	_EUSART_Async_Read_Data$1887^0,c
 16865  003874  EF40  F01C         	goto	i2l8919
 16866  003878                     i2l8917:
 16867  003878  0E01               	movlw	1
 16868  00387A  6E12               	movwf	(_EUSART_Async_Read_Data$1887+1)^0,c
 16869  00387C  0E00               	movlw	0
 16870  00387E  6E11               	movwf	_EUSART_Async_Read_Data$1887^0,c
 16871  003880                     i2l8919:
 16872  003880  5011               	movf	_EUSART_Async_Read_Data$1887^0,w,c
 16873  003882  2613               	addwf	EUSART_Async_Read_Data@l_temp_data^0,f,c
 16874  003884  5012               	movf	(_EUSART_Async_Read_Data$1887+1)^0,w,c
 16875  003886  2214               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 16876  003888                     
 16877                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 16878  003888  5013               	movf	EUSART_Async_Read_Data@l_temp_data^0,w,c
 16879  00388A  ECB3  F02C         	call	_calc_parity_odd
 16880  00388E  6E0A               	movwf	??_EUSART_Async_Read_Data^0,c
 16881  003890  5014               	movf	(EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 16882  003892  180A               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 16883  003894  A4D8               	btfss	status,2,c
 16884  003896  EF4F  F01C         	goto	i2u969_41
 16885  00389A  EF51  F01C         	goto	i2u969_40
 16886  00389E                     i2u969_41:
 16887  00389E  EF53  F01C         	goto	i2l643
 16888  0038A2                     i2u969_40:
 16889  0038A2  EF0C  F01C         	goto	i2l8909
 16890  0038A6                     i2l643:
 16891  0038A6                     i2l8927:
 16892                           
 16893                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 16894  0038A6  B2AB               	btfsc	171,1,c	;volatile
 16895  0038A8  EF58  F01C         	goto	i2u970_41
 16896  0038AC  EF5A  F01C         	goto	i2u970_40
 16897  0038B0                     i2u970_41:
 16898  0038B0  EF61  F01C         	goto	i2l664
 16899  0038B4                     i2u970_40:
 16900  0038B4  A4AB               	btfss	171,2,c	;volatile
 16901  0038B6  EF5F  F01C         	goto	i2u971_41
 16902  0038BA  EF61  F01C         	goto	i2u971_40
 16903  0038BE                     i2u971_41:
 16904  0038BE  EF63  F01C         	goto	i2l665
 16905  0038C2                     i2u971_40:
 16906  0038C2                     i2l664:
 16907                           
 16908                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 16909  0038C2  98AB               	bcf	171,4,c	;volatile
 16910                           
 16911                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 16912  0038C4  88AB               	bsf	171,4,c	;volatile
 16913  0038C6                     i2l665:
 16914  0038C6  0012               	return		;funcret
 16915  0038C8                     __end_of_EUSART_Async_Read_Data:
 16916                           	callstack 0
 16917                           
 16918 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
 16919 ;; Defined at:
 16920 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;  _uart_obj       2   12[COMRAM] PTR const struct .
 16923 ;;		 -> _uart_obj(12), 
 16924 ;;  data            1   14[COMRAM] unsigned char 
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;  ret_val         1    0        unsigned char 
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  1    wreg      unsigned char 
 16929 ;; Registers used:
 16930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16936 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16940 ;;Total ram usage:        4 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:    2
 16943 ;; This function calls:
 16944 ;;		_EUSART_Async_Transmit_Data
 16945 ;; This function is called by:
 16946 ;;		_usart_isr
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           	psect	text83
 16951  006264                     __ptext83:
 16952                           	callstack 0
 16953  006264                     _Bluetooth_Send_Data_Non_Blocking:
 16954                           	callstack 13
 16955  006264                     
 16956                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 16957  006264  500D               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
 16958  006266  100E               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
 16959  006268  A4D8               	btfss	status,2,c
 16960  00626A  EF39  F031         	goto	i2u956_41
 16961  00626E  EF3B  F031         	goto	i2u956_40
 16962  006272                     i2u956_41:
 16963  006272  EF3D  F031         	goto	i2l8867
 16964  006276                     i2u956_40:
 16965  006276                     
 16966                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 16967  006276  EF46  F031         	goto	i2l32
 16968  00627A                     i2l8867:
 16969                           
 16970                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 16971  00627A  C00D  F006         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
 16972  00627E  C00E  F007         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
 16973  006282  C00F  F008         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
 16974  006286  6A09               	clrf	(EUSART_Async_Transmit_Data@data+1)^0,c
 16975  006288  EC9B  F024         	call	_EUSART_Async_Transmit_Data	;wreg free
 16976  00628C                     i2l32:
 16977  00628C  0012               	return		;funcret
 16978  00628E                     __end_of_Bluetooth_Send_Data_Non_Blocking:
 16979                           	callstack 0
 16980                           
 16981 ;; *************** function _EUSART_Async_Transmit_Data *****************
 16982 ;; Defined at:
 16983 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 16984 ;; Parameters:    Size  Location     Type
 16985 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 16986 ;;		 -> _uart_obj(12), 
 16987 ;;  data            2    7[COMRAM] unsigned short 
 16988 ;; Auto vars:     Size  Location     Type
 16989 ;;  ret_val         1    0        unsigned char 
 16990 ;; Return value:  Size  Location     Type
 16991 ;;                  1    wreg      unsigned char 
 16992 ;; Registers used:
 16993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16994 ;; Tracked objects:
 16995 ;;		On entry : 0/0
 16996 ;;		On exit  : 0/0
 16997 ;;		Unchanged: 0/0
 16998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17002 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17003 ;;Total ram usage:        7 bytes
 17004 ;; Hardware stack levels used:    1
 17005 ;; Hardware stack levels required when called:    1
 17006 ;; This function calls:
 17007 ;;		_calc_parity_even
 17008 ;;		_calc_parity_odd
 17009 ;; This function is called by:
 17010 ;;		_Bluetooth_Send_Data_Non_Blocking
 17011 ;;		_EUSART_Async_Transmit_Data_Blocking
 17012 ;; This function uses a non-reentrant model
 17013 ;;
 17014                           
 17015                           	psect	text84
 17016  004936                     __ptext84:
 17017                           	callstack 0
 17018  004936                     _EUSART_Async_Transmit_Data:
 17019                           	callstack 13
 17020  004936                     
 17021                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 17022  004936  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 17023  004938  1007               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 17024  00493A  A4D8               	btfss	status,2,c
 17025  00493C  EFA2  F024         	goto	i2u925_41
 17026  004940  EFA4  F024         	goto	i2u925_40
 17027  004944                     i2u925_41:
 17028  004944  EFA6  F024         	goto	i2l8657
 17029  004948                     i2u925_40:
 17030  004948                     
 17031                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 17032  004948  EF0C  F025         	goto	i2l627
 17033  00494C                     i2l8657:
 17034                           
 17035                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 17036  00494C  EE20 F002          	lfsr	2,2
 17037  004950  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 17038  004952  26D9               	addwf	fsr2l,f,c
 17039  004954  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 17040  004956  22DA               	addwfc	fsr2h,f,c
 17041  004958  A6DF               	btfss	indf2,3,c
 17042  00495A  EFB1  F024         	goto	i2u926_41
 17043  00495E  EFB3  F024         	goto	i2u926_40
 17044  004962                     i2u926_41:
 17045  004962  EF0A  F025         	goto	i2l8671
 17046  004966                     i2u926_40:
 17047  004966                     
 17048                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 17049  004966  EE20 F002          	lfsr	2,2
 17050  00496A  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 17051  00496C  26D9               	addwf	fsr2l,f,c
 17052  00496E  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 17053  004970  22DA               	addwfc	fsr2h,f,c
 17054  004972  50DF               	movf	indf2,w,c
 17055  004974  0B03               	andlw	3
 17056  004976  0900               	iorlw	0
 17057  004978  A4D8               	btfss	status,2,c
 17058  00497A  EFC1  F024         	goto	i2u927_41
 17059  00497E  EFC3  F024         	goto	i2u927_40
 17060  004982                     i2u927_41:
 17061  004982  EFD2  F024         	goto	i2l8663
 17062  004986                     i2u927_40:
 17063  004986                     
 17064                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 17065  004986  C008  F00A         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
 17066  00498A  C009  F00B         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
 17067  00498E  C00B  F00A         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
 17068  004992  6A0B               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
 17069  004994  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 17070  004996  A0D8               	btfss	status,0,c
 17071  004998  D002               	bra	i2u928_45
 17072  00499A  80AC               	bsf	172,0,c	;volatile
 17073  00499C  D001               	bra	i2u928_47
 17074  00499E                     i2u928_45:
 17075  00499E  90AC               	bcf	172,0,c	;volatile
 17076  0049A0                     i2u928_47:
 17077                           
 17078                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 17079  0049A0  EF0A  F025         	goto	i2l8671
 17080  0049A4                     i2l8663:
 17081  0049A4  EE20 F002          	lfsr	2,2
 17082  0049A8  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 17083  0049AA  26D9               	addwf	fsr2l,f,c
 17084  0049AC  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 17085  0049AE  22DA               	addwfc	fsr2h,f,c
 17086  0049B0  50DF               	movf	indf2,w,c
 17087  0049B2  0B03               	andlw	3
 17088  0049B4  06E8               	decf	wreg,f,c
 17089  0049B6  A4D8               	btfss	status,2,c
 17090  0049B8  EFE0  F024         	goto	i2u929_41
 17091  0049BC  EFE2  F024         	goto	i2u929_40
 17092  0049C0                     i2u929_41:
 17093  0049C0  EFEE  F024         	goto	i2l8667
 17094  0049C4                     i2u929_40:
 17095  0049C4                     
 17096                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 17097  0049C4  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 17098  0049C6  ECE7  F02C         	call	_calc_parity_even
 17099  0049CA  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 17100  0049CC  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 17101  0049CE  A0D8               	btfss	status,0,c
 17102  0049D0  D002               	bra	i2u930_45
 17103  0049D2  80AC               	bsf	172,0,c	;volatile
 17104  0049D4  D001               	bra	i2u930_47
 17105  0049D6                     i2u930_45:
 17106  0049D6  90AC               	bcf	172,0,c	;volatile
 17107  0049D8                     i2u930_47:
 17108                           
 17109                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 17110  0049D8  EF0A  F025         	goto	i2l8671
 17111  0049DC                     i2l8667:
 17112  0049DC  EE20 F002          	lfsr	2,2
 17113  0049E0  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 17114  0049E2  26D9               	addwf	fsr2l,f,c
 17115  0049E4  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 17116  0049E6  22DA               	addwfc	fsr2h,f,c
 17117  0049E8  50DF               	movf	indf2,w,c
 17118  0049EA  0B03               	andlw	3
 17119  0049EC  0A02               	xorlw	2
 17120  0049EE  A4D8               	btfss	status,2,c
 17121  0049F0  EFFC  F024         	goto	i2u931_41
 17122  0049F4  EFFE  F024         	goto	i2u931_40
 17123  0049F8                     i2u931_41:
 17124  0049F8  EF0A  F025         	goto	i2l623
 17125  0049FC                     i2u931_40:
 17126  0049FC                     
 17127                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 17128  0049FC  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 17129  0049FE  ECB3  F02C         	call	_calc_parity_odd
 17130  004A02  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 17131  004A04  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 17132  004A06  A0D8               	btfss	status,0,c
 17133  004A08  D002               	bra	i2u932_45
 17134  004A0A  80AC               	bsf	172,0,c	;volatile
 17135  004A0C  D001               	bra	i2u932_47
 17136  004A0E                     i2u932_45:
 17137  004A0E  90AC               	bcf	172,0,c	;volatile
 17138  004A10                     i2u932_47:
 17139  004A10  EF0A  F025         	goto	i2l8671
 17140  004A14                     i2l623:
 17141  004A14                     i2l8671:
 17142                           
 17143                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 17144  004A14  C008  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
 17145  004A18                     i2l627:
 17146  004A18  0012               	return		;funcret
 17147  004A1A                     __end_of_EUSART_Async_Transmit_Data:
 17148                           	callstack 0
 17149                           
 17150 ;; *************** function _calc_parity_odd *****************
 17151 ;; Defined at:
 17152 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 17153 ;; Parameters:    Size  Location     Type
 17154 ;;  data            1    wreg     unsigned char 
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;  data            1    2[COMRAM] unsigned char 
 17157 ;;  l_counter       1    4[COMRAM] unsigned char 
 17158 ;;  number_of_on    1    3[COMRAM] unsigned char 
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1    wreg      unsigned char 
 17161 ;; Registers used:
 17162 ;;		wreg, status,2, status,0
 17163 ;; Tracked objects:
 17164 ;;		On entry : 0/0
 17165 ;;		On exit  : 0/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17169 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17171 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17172 ;;Total ram usage:        5 bytes
 17173 ;; Hardware stack levels used:    1
 17174 ;; This function calls:
 17175 ;;		Nothing
 17176 ;; This function is called by:
 17177 ;;		_EUSART_Async_Transmit_Data
 17178 ;;		_EUSART_Async_Read_Data
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182                           	psect	text85
 17183  005966                     __ptext85:
 17184                           	callstack 0
 17185  005966                     _calc_parity_odd:
 17186                           	callstack 14
 17187                           
 17188                           ;incstack = 0
 17189                           ;calc_parity_odd@data stored from wreg
 17190  005966  6E03               	movwf	calc_parity_odd@data^0,c
 17191  005968                     
 17192                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 17193  005968  0E00               	movlw	0
 17194  00596A  6E04               	movwf	calc_parity_odd@number_of_ones^0,c
 17195                           
 17196                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 17197  00596C  0E00               	movlw	0
 17198  00596E  6E05               	movwf	calc_parity_odd@l_counter^0,c
 17199                           
 17200                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 17201  005970  0E00               	movlw	0
 17202  005972  6E05               	movwf	calc_parity_odd@l_counter^0,c
 17203  005974                     i2l8543:
 17204                           
 17205                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 17206  005974  C005  F001         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
 17207  005978  0E01               	movlw	1
 17208  00597A  6E02               	movwf	(??_calc_parity_odd+1)^0,c
 17209  00597C  2A01               	incf	??_calc_parity_odd^0,f,c
 17210  00597E  EFC3  F02C         	goto	i2u909_44
 17211  005982                     i2u909_45:
 17212  005982  90D8               	bcf	status,0,c
 17213  005984  3602               	rlcf	(??_calc_parity_odd+1)^0,f,c
 17214  005986                     i2u909_44:
 17215  005986  2E01               	decfsz	??_calc_parity_odd^0,f,c
 17216  005988  EFC1  F02C         	goto	i2u909_45
 17217  00598C  5002               	movf	(??_calc_parity_odd+1)^0,w,c
 17218  00598E  1403               	andwf	calc_parity_odd@data^0,w,c
 17219  005990  0900               	iorlw	0
 17220  005992  B4D8               	btfsc	status,2,c
 17221  005994  EFCE  F02C         	goto	i2u910_41
 17222  005998  EFD0  F02C         	goto	i2u910_40
 17223  00599C                     i2u910_41:
 17224  00599C  EFD1  F02C         	goto	i2l763
 17225  0059A0                     i2u910_40:
 17226  0059A0                     
 17227                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 17228  0059A0  2A04               	incf	calc_parity_odd@number_of_ones^0,f,c
 17229  0059A2                     i2l763:
 17230                           
 17231                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 17232  0059A2  2A05               	incf	calc_parity_odd@l_counter^0,f,c
 17233  0059A4  0E07               	movlw	7
 17234  0059A6  6405               	cpfsgt	calc_parity_odd@l_counter^0,c
 17235  0059A8  EFD8  F02C         	goto	i2u911_41
 17236  0059AC  EFDA  F02C         	goto	i2u911_40
 17237  0059B0                     i2u911_41:
 17238  0059B0  EFBA  F02C         	goto	i2l8543
 17239  0059B4                     i2u911_40:
 17240  0059B4                     
 17241                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 17242  0059B4  2A04               	incf	calc_parity_odd@number_of_ones^0,f,c
 17243  0059B6                     
 17244                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 17245  0059B6  B004               	btfsc	calc_parity_odd@number_of_ones^0,0,c
 17246  0059B8  EFE0  F02C         	goto	i2u912_41
 17247  0059BC  EFE2  F02C         	goto	i2u912_40
 17248  0059C0                     i2u912_41:
 17249  0059C0  EFE5  F02C         	goto	i2l8557
 17250  0059C4                     i2u912_40:
 17251  0059C4                     
 17252                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 17253  0059C4  0E01               	movlw	1
 17254  0059C6  EFE6  F02C         	goto	i2l765
 17255  0059CA                     i2l8557:
 17256                           
 17257                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 17258  0059CA  0E00               	movlw	0
 17259  0059CC                     i2l765:
 17260  0059CC  0012               	return		;funcret
 17261  0059CE                     __end_of_calc_parity_odd:
 17262                           	callstack 0
 17263                           
 17264 ;; *************** function _calc_parity_even *****************
 17265 ;; Defined at:
 17266 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 17267 ;; Parameters:    Size  Location     Type
 17268 ;;  data            1    wreg     unsigned char 
 17269 ;; Auto vars:     Size  Location     Type
 17270 ;;  data            1    2[COMRAM] unsigned char 
 17271 ;;  l_counter       1    4[COMRAM] unsigned char 
 17272 ;;  number_of_on    1    3[COMRAM] unsigned char 
 17273 ;; Return value:  Size  Location     Type
 17274 ;;                  1    wreg      unsigned char 
 17275 ;; Registers used:
 17276 ;;		wreg, status,2, status,0
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17283 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17285 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17286 ;;Total ram usage:        5 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; This function calls:
 17289 ;;		Nothing
 17290 ;; This function is called by:
 17291 ;;		_EUSART_Async_Transmit_Data
 17292 ;;		_EUSART_Async_Read_Data
 17293 ;; This function uses a non-reentrant model
 17294 ;;
 17295                           
 17296                           	psect	text86
 17297  0059CE                     __ptext86:
 17298                           	callstack 0
 17299  0059CE                     _calc_parity_even:
 17300                           	callstack 14
 17301                           
 17302                           ;incstack = 0
 17303                           ;calc_parity_even@data stored from wreg
 17304  0059CE  6E03               	movwf	calc_parity_even@data^0,c
 17305  0059D0                     
 17306                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 17307  0059D0  0E00               	movlw	0
 17308  0059D2  6E04               	movwf	calc_parity_even@number_of_ones^0,c
 17309                           
 17310                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 17311  0059D4  0E00               	movlw	0
 17312  0059D6  6E05               	movwf	calc_parity_even@l_counter^0,c
 17313                           
 17314                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 17315  0059D8  0E00               	movlw	0
 17316  0059DA  6E05               	movwf	calc_parity_even@l_counter^0,c
 17317  0059DC                     i2l8519:
 17318                           
 17319                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 17320  0059DC  C005  F001         	movff	calc_parity_even@l_counter,??_calc_parity_even
 17321  0059E0  0E01               	movlw	1
 17322  0059E2  6E02               	movwf	(??_calc_parity_even+1)^0,c
 17323  0059E4  2A01               	incf	??_calc_parity_even^0,f,c
 17324  0059E6  EFF7  F02C         	goto	i2u905_44
 17325  0059EA                     i2u905_45:
 17326  0059EA  90D8               	bcf	status,0,c
 17327  0059EC  3602               	rlcf	(??_calc_parity_even+1)^0,f,c
 17328  0059EE                     i2u905_44:
 17329  0059EE  2E01               	decfsz	??_calc_parity_even^0,f,c
 17330  0059F0  EFF5  F02C         	goto	i2u905_45
 17331  0059F4  5002               	movf	(??_calc_parity_even+1)^0,w,c
 17332  0059F6  1403               	andwf	calc_parity_even@data^0,w,c
 17333  0059F8  0900               	iorlw	0
 17334  0059FA  B4D8               	btfsc	status,2,c
 17335  0059FC  EF02  F02D         	goto	i2u906_41
 17336  005A00  EF04  F02D         	goto	i2u906_40
 17337  005A04                     i2u906_41:
 17338  005A04  EF05  F02D         	goto	i2l770
 17339  005A08                     i2u906_40:
 17340  005A08                     
 17341                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 17342  005A08  2A04               	incf	calc_parity_even@number_of_ones^0,f,c
 17343  005A0A                     i2l770:
 17344                           
 17345                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 17346  005A0A  2A05               	incf	calc_parity_even@l_counter^0,f,c
 17347  005A0C  0E07               	movlw	7
 17348  005A0E  6405               	cpfsgt	calc_parity_even@l_counter^0,c
 17349  005A10  EF0C  F02D         	goto	i2u907_41
 17350  005A14  EF0E  F02D         	goto	i2u907_40
 17351  005A18                     i2u907_41:
 17352  005A18  EFEE  F02C         	goto	i2l8519
 17353  005A1C                     i2u907_40:
 17354  005A1C                     
 17355                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 17356  005A1C  2A04               	incf	calc_parity_even@number_of_ones^0,f,c
 17357  005A1E                     
 17358                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 17359  005A1E  A004               	btfss	calc_parity_even@number_of_ones^0,0,c
 17360  005A20  EF14  F02D         	goto	i2u908_41
 17361  005A24  EF16  F02D         	goto	i2u908_40
 17362  005A28                     i2u908_41:
 17363  005A28  EF19  F02D         	goto	i2l8533
 17364  005A2C                     i2u908_40:
 17365  005A2C                     
 17366                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 17367  005A2C  0E01               	movlw	1
 17368  005A2E  EF1A  F02D         	goto	i2l772
 17369  005A32                     i2l8533:
 17370                           
 17371                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 17372  005A32  0E00               	movlw	0
 17373  005A34                     i2l772:
 17374  005A34  0012               	return		;funcret
 17375  005A36                     __end_of_calc_parity_even:
 17376                           	callstack 0
 17377                           
 17378                           	psect	text87
 17379  000000                     __ptext87:
 17380                           	callstack 0
 17381  000000                     
 17382                           	psect	rparam
 17383  0000                     
 17384                           	psect	temp
 17385  000056                     btemp:
 17386                           	callstack 0
 17387  000056                     	ds	1
 17388  0000                     int$flags	set	btemp
 17389  0000                     wtemp8	set	btemp+1
 17390  0000                     ttemp5	set	btemp+1
 17391  0000                     ttemp6	set	btemp+4
 17392  0000                     ttemp7	set	btemp+8
 17393                           
 17394                           	psect	idloc
 17395                           
 17396                           ;Config register IDLOC0 @ 0x200000
 17397                           ;	unspecified, using default values
 17398  200000                     	org	2097152
 17399  200000  FF                 	db	255
 17400                           
 17401                           ;Config register IDLOC1 @ 0x200001
 17402                           ;	unspecified, using default values
 17403  200001                     	org	2097153
 17404  200001  FF                 	db	255
 17405                           
 17406                           ;Config register IDLOC2 @ 0x200002
 17407                           ;	unspecified, using default values
 17408  200002                     	org	2097154
 17409  200002  FF                 	db	255
 17410                           
 17411                           ;Config register IDLOC3 @ 0x200003
 17412                           ;	unspecified, using default values
 17413  200003                     	org	2097155
 17414  200003  FF                 	db	255
 17415                           
 17416                           ;Config register IDLOC4 @ 0x200004
 17417                           ;	unspecified, using default values
 17418  200004                     	org	2097156
 17419  200004  FF                 	db	255
 17420                           
 17421                           ;Config register IDLOC5 @ 0x200005
 17422                           ;	unspecified, using default values
 17423  200005                     	org	2097157
 17424  200005  FF                 	db	255
 17425                           
 17426                           ;Config register IDLOC6 @ 0x200006
 17427                           ;	unspecified, using default values
 17428  200006                     	org	2097158
 17429  200006  FF                 	db	255
 17430                           
 17431                           ;Config register IDLOC7 @ 0x200007
 17432                           ;	unspecified, using default values
 17433  200007                     	org	2097159
 17434  200007  FF                 	db	255
 17435                           
 17436                           	psect	config
 17437                           
 17438                           ; Padding undefined space
 17439  300000                     	org	3145728
 17440  300000  FF                 	db	255
 17441                           
 17442                           ;Config register CONFIG1H @ 0x300001
 17443                           ;	Oscillator Selection bits
 17444                           ;	OSC = HS, HS oscillator
 17445                           ;	Fail-Safe Clock Monitor Enable bit
 17446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 17447                           ;	Internal/External Oscillator Switchover bit
 17448                           ;	IESO = OFF, Oscillator Switchover mode disabled
 17449  300001                     	org	3145729
 17450  300001  02                 	db	2
 17451                           
 17452                           ;Config register CONFIG2L @ 0x300002
 17453                           ;	Power-up Timer Enable bit
 17454                           ;	PWRT = OFF, PWRT disabled
 17455                           ;	Brown-out Reset Enable bits
 17456                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 17457                           ;	Brown Out Reset Voltage bits
 17458                           ;	BORV = 1, 
 17459  300002                     	org	3145730
 17460  300002  09                 	db	9
 17461                           
 17462                           ;Config register CONFIG2H @ 0x300003
 17463                           ;	Watchdog Timer Enable bit
 17464                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17465                           ;	Watchdog Timer Postscale Select bits
 17466                           ;	WDTPS = 512, 1:512
 17467  300003                     	org	3145731
 17468  300003  12                 	db	18
 17469                           
 17470                           ; Padding undefined space
 17471  300004                     	org	3145732
 17472  300004  FF                 	db	255
 17473                           
 17474                           ;Config register CONFIG3H @ 0x300005
 17475                           ;	CCP2 MUX bit
 17476                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 17477                           ;	PORTB A/D Enable bit
 17478                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 17479                           ;	Low-Power Timer1 Oscillator Enable bit
 17480                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 17481                           ;	MCLR Pin Enable bit
 17482                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17483  300005                     	org	3145733
 17484  300005  81                 	db	129
 17485                           
 17486                           ;Config register CONFIG4L @ 0x300006
 17487                           ;	Stack Full/Underflow Reset Enable bit
 17488                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17489                           ;	Single-Supply ICSP Enable bit
 17490                           ;	LVP = OFF, Single-Supply ICSP disabled
 17491                           ;	Extended Instruction Set Enable bit
 17492                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17493                           ;	Background Debugger Enable bit
 17494                           ;	DEBUG = 0x1, unprogrammed default
 17495  300006                     	org	3145734
 17496  300006  81                 	db	129
 17497                           
 17498                           ; Padding undefined space
 17499  300007                     	org	3145735
 17500  300007  FF                 	db	255
 17501                           
 17502                           ;Config register CONFIG5L @ 0x300008
 17503                           ;	Code Protection bit
 17504                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 17505                           ;	Code Protection bit
 17506                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 17507                           ;	Code Protection bit
 17508                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 17509                           ;	Code Protection bit
 17510                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 17511  300008                     	org	3145736
 17512  300008  0F                 	db	15
 17513                           
 17514                           ;Config register CONFIG5H @ 0x300009
 17515                           ;	Boot Block Code Protection bit
 17516                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 17517                           ;	Data EEPROM Code Protection bit
 17518                           ;	CPD = OFF, Data EEPROM not code-protected
 17519  300009                     	org	3145737
 17520  300009  C0                 	db	192
 17521                           
 17522                           ;Config register CONFIG6L @ 0x30000A
 17523                           ;	Write Protection bit
 17524                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 17525                           ;	Write Protection bit
 17526                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 17527                           ;	Write Protection bit
 17528                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 17529                           ;	Write Protection bit
 17530                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 17531  30000A                     	org	3145738
 17532  30000A  0F                 	db	15
 17533                           
 17534                           ;Config register CONFIG6H @ 0x30000B
 17535                           ;	Configuration Register Write Protection bit
 17536                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 17537                           ;	Boot Block Write Protection bit
 17538                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 17539                           ;	Data EEPROM Write Protection bit
 17540                           ;	WRTD = OFF, Data EEPROM not write-protected
 17541  30000B                     	org	3145739
 17542  30000B  E0                 	db	224
 17543                           
 17544                           ;Config register CONFIG7L @ 0x30000C
 17545                           ;	Table Read Protection bit
 17546                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 17547                           ;	Table Read Protection bit
 17548                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 17549                           ;	Table Read Protection bit
 17550                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 17551                           ;	Table Read Protection bit
 17552                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 17553  30000C                     	org	3145740
 17554  30000C  0F                 	db	15
 17555                           
 17556                           ;Config register CONFIG7H @ 0x30000D
 17557                           ;	Boot Block Table Read Protection bit
 17558                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 17559  30000D                     	org	3145741
 17560  30000D  40                 	db	64
 17561                           tosu	equ	0xFFF
 17562                           tosh	equ	0xFFE
 17563                           tosl	equ	0xFFD
 17564                           stkptr	equ	0xFFC
 17565                           pclatu	equ	0xFFB
 17566                           pclath	equ	0xFFA
 17567                           pcl	equ	0xFF9
 17568                           tblptru	equ	0xFF8
 17569                           tblptrh	equ	0xFF7
 17570                           tblptrl	equ	0xFF6
 17571                           tablat	equ	0xFF5
 17572                           prodh	equ	0xFF4
 17573                           prodl	equ	0xFF3
 17574                           indf0	equ	0xFEF
 17575                           postinc0	equ	0xFEE
 17576                           postdec0	equ	0xFED
 17577                           preinc0	equ	0xFEC
 17578                           plusw0	equ	0xFEB
 17579                           fsr0h	equ	0xFEA
 17580                           fsr0l	equ	0xFE9
 17581                           wreg	equ	0xFE8
 17582                           indf1	equ	0xFE7
 17583                           postinc1	equ	0xFE6
 17584                           postdec1	equ	0xFE5
 17585                           preinc1	equ	0xFE4
 17586                           plusw1	equ	0xFE3
 17587                           fsr1h	equ	0xFE2
 17588                           fsr1l	equ	0xFE1
 17589                           bsr	equ	0xFE0
 17590                           indf2	equ	0xFDF
 17591                           postinc2	equ	0xFDE
 17592                           postdec2	equ	0xFDD
 17593                           preinc2	equ	0xFDC
 17594                           plusw2	equ	0xFDB
 17595                           fsr2h	equ	0xFDA
 17596                           fsr2l	equ	0xFD9
 17597                           status	equ	0xFD8

Data Sizes:
    Strings     142
    Constant    0
    Data        93
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     44      85
    BANK0           128    125     125
    BANK1           256     81     248
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    _uart_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> usart_isr(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), convert_float32_to_string@temp_string(BANK1[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), convert_float32_to_string@temp_string(BANK1[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S4676_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), convert_float32_to_string@temp_string(BANK1[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), convert_float32_to_string@temp_string(BANK1[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    memset@dest	PTR void  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), 

    memset@s	PTR unsigned char  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), 

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Timer0.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Write_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Read_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    tmr0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), Absolute function(), 

    S3528$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Init@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3133$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3133$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3086$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S490$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S490$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S490$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind0(COMRAM[1]), pind1(COMRAM[1]), pind2(COMRAM[1]), 
		 -> lcd1.lcd_data_pins(BANK1[4]), lcd1(BANK1[6]), CCP2_Obj(BANK1[10]), CCP1_Obj(BANK1[10]), 
		 -> W4_Motor_Control.dc_motor(COMRAM[2]), W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pind1(COMRAM[1]), pind2(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind0(COMRAM[1]), pind1(COMRAM[1]), pind2(COMRAM[1]), 
		 -> lcd1.lcd_data_pins(BANK1[4]), lcd1(BANK1[6]), CCP2_Obj(BANK1[10]), CCP1_Obj(BANK1[10]), 
		 -> W4_Motor_Control.dc_motor(COMRAM[2]), W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind0(COMRAM[1]), pind1(COMRAM[1]), pind2(COMRAM[1]), 
		 -> lcd1.lcd_data_pins(BANK1[4]), lcd1(BANK1[6]), CCP2_Obj(BANK1[10]), CCP1_Obj(BANK1[10]), 
		 -> W4_Motor_Control.dc_motor(COMRAM[2]), W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), TRISE(SFR[1]), 
		 -> TRISA(SFR[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_config_baud_rate_gen@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    Rx_config_interrupt@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_Rx_config@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Tx_config@_tx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(COMRAM[1]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Init@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    adc_select_voltage_reference@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    adc_select_result_formate@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Get_Conversion_Blocking@_result	PTR unsigned short  size(2) Largest target is 2
		 -> battery_volt_adc_read(COMRAM[2]), 

    ADC_Get_Conversion_Blocking@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Get_Conversion_Results@_result	PTR unsigned short  size(2) Largest target is 2
		 -> battery_volt_adc_read(COMRAM[2]), 

    ADC_Get_Conversion_Results@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Start_Conversion@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_select_channel@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 5
		 -> battery_adc(BANK1[5]), 

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    convert_float32_to_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), 

    sp__memset	PTR void  size(2) Largest target is 9
		 -> battery_string(BANK1[9]), 

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), STR_16(CODE[12]), STR_15(CODE[17]), STR_14(CODE[8]), 
		 -> battery_string(BANK1[9]), STR_13(CODE[15]), STR_12(CODE[15]), longtude(BANK1[13]), 
		 -> latitude(BANK1[13]), STR_11(CODE[10]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK1[6]), 

    ECU_DC_Motor_Stop@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _main->_GPIO_Pin_Toggle_Logic
    _battery_level->_GPIO_Pin_Write_Logic
    _lcd_4bit_send_char_data->_GPIO_Pin_Write_Logic
    _tolower->_isupper
    _pad->_fputs
    _abs->___aomod
    _ADC_Get_Conversion_Blocking->_ADC_Start_Conversion
    _ADC_Get_Conversion_Blocking->_ADC_select_channel
    _ADC_select_channel->_adc_channel_pin_config_as_input
    _lcd_4bit_send_command->_GPIO_Pin_Write_Logic
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_Tx_config
    _async_config_baud_rate_gen->___fltol
    ___xxtofl->___wmul
    ___fldiv->___wmul
    _async_Rx_config->_Rx_config_interrupt
    _ADC_Init->_adc_select_result_formate
    _ADC_Init->_adc_select_voltage_reference

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _Timer0_Handler->_ECU_DC_Motor_Stop
    _ECU_DC_Motor_Stop->i2_GPIO_Pin_Write_Logic
    _usart_isr->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->i2_lcd_4bits_set_courser
    i2_lcd_4bits_set_courser->i2_lcd_4bit_send_command
    i2_lcd_4bit_send_command->i2_lcd_send_4bits
    i2_lcd_4bit_send_char_data->i2_lcd_send_4bits
    i2_lcd_send_4bits->i2_GPIO_Pin_Write_Logic
    i2_lcd_4bits_send_enable_signal->i2_GPIO_Pin_Write_Logic
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd
    _Bluetooth_Send_Data_Non_Blocking->_EUSART_Async_Transmit_Data
    _EUSART_Async_Transmit_Data->_calc_parity_even
    _EUSART_Async_Transmit_Data->_calc_parity_odd

Critical Paths under _main in BANK0

    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _convert_float32_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ADC_Get_Conversion_Blocking->_ADC_Get_Conversion_Results
    _ADC_select_channel->_adc_channel_pin_config_as_input
    _application_intialize->_EUSART_Async_Init
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fladd
    ___xxtofl->___wmul
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _ADC_Init->_adc_channel_pin_config_as_input

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _battery_level->_convert_float32_to_string
    _convert_float32_to_string->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  188084
              _GPIO_Pin_Toggle_Logic
              _application_intialize
                      _battery_level
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _battery_level                                        0     0      0  103550
        _ADC_Get_Conversion_Blocking
               _GPIO_Pin_Write_Logic
                            ___fldiv
                             ___flge
                             ___wmul
                           ___xxtofl
          _convert_float32_to_string
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   39005
                                             22 BANK0      7     1      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   18898
                                             15 BANK0      7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16243
                                             11 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _convert_float32_to_string                           17    11      6   50424
                                             64 BANK1     17    11      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   47704
                                            115 BANK0     10    10      0
                                             56 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   46300
                                            107 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   45794
                                             79 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             41 COMRAM     1     1      0
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   34415
                                             67 BANK0     12     5      7
                                              0 BANK1     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                              4 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             41 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             41 COMRAM     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             43 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4917
                                             59 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4143
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1166
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             41 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             26 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             13 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             41 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             41 COMRAM     3     3      0
                                              9 BANK0      4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             16 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             41 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2097
                                             41 COMRAM     2     2      0
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1062
                                             41 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Blocking                          7     2      5    1722
                                              9 BANK0      7     2      5
         _ADC_Get_Conversion_Results
               _ADC_Start_Conversion
                 _ADC_select_channel
 ---------------------------------------------------------------------------------
 (3) _ADC_select_channel                                   5     2      3     531
                                             43 COMRAM     1     1      0
                                              2 BANK0      4     1      3
    _adc_channel_pin_config_as_input
 ---------------------------------------------------------------------------------
 (3) _ADC_Start_Conversion                                 3     1      2     248
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Get_Conversion_Results                          10     6      4     434
                                             41 COMRAM     1     1      0
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   45188
                           _ADC_Init
                  _EUSART_Async_Init
                _GPIO_Pin_Initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   25262
                                             15 BANK0      6     4      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18137
                                             11 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5629
                                              7 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    5083
                                              7 BANK0      3     1      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    6481
                                              7 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    4617
                                             41 COMRAM     3     0      3
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     437
                                             41 COMRAM     3     1      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Init                                    3     1      2   12692
                                             72 BANK0      3     1      2
                    _async_Rx_config
                    _async_Tx_config
         _async_config_baud_rate_gen
 ---------------------------------------------------------------------------------
 (3) _async_config_baud_rate_gen                          13    11      2   11437
                                             59 BANK0     13    11      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1261
                                              4 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4    1002
                                             41 COMRAM     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4293
                                             18 BANK0     25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4352
                                             43 BANK0     16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _async_Tx_config                                      3     1      2     210
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _async_Rx_config                                      3     1      2     629
                                              0 BANK0      3     1      2
                _Rx_config_interrupt
 ---------------------------------------------------------------------------------
 (4) _Rx_config_interrupt                                  3     1      2     313
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     753
                                              2 BANK0      4     2      2
    _adc_channel_pin_config_as_input
          _adc_select_result_formate
       _adc_select_voltage_reference
 ---------------------------------------------------------------------------------
 (3) _adc_select_voltage_reference                         4     2      2     196
                                             41 COMRAM     3     1      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _adc_select_result_formate                            4     2      2     196
                                             41 COMRAM     3     1      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _adc_channel_pin_config_as_input                      4     4      0      41
                                             41 COMRAM     2     2      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     341
                                             41 COMRAM     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManagerLow                                 3     3      0     162
                                             38 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (12) _RB7_ISR                                             1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB6_ISR                                             1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB5_ISR                                             1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB4_ISR                                             1     1      0      30
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _InterruptManagerHigh                                6     6      0   10304
                                             31 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            2     2      0    1001
                                             13 COMRAM     2     2      0
                   Absolute function *
                     _Timer0_Handler *
 ---------------------------------------------------------------------------------
 (15) _Timer0_Handler                                      0     0      0    1001
                  _ECU_DC_Motor_Stop
 ---------------------------------------------------------------------------------
 (16) _ECU_DC_Motor_Stop                                   3     1      2    1001
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (14) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_Rx_ISR                                       0     0      0    9303
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (15) _usart_isr                                           0     0      0    9303
   _Bluetooth_Send_Data_Non_Blocking
             _EUSART_Async_Read_Data
        _lcd_4bit_send_char_data_pos
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (16) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _lcd_4bit_send_char_data_pos                         6     1      5    7063
                                             25 COMRAM     6     1      5
          i2_lcd_4bit_send_char_data
            i2_lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (17) i2_lcd_4bits_set_courser                             7     3      4    3389
                                             18 COMRAM     7     3      4
            i2_lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (18) i2_lcd_4bit_send_command                             4     1      3    3082
                                             14 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
     i2_lcd_4bits_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (17) i2_lcd_4bit_send_char_data                           4     1      3    2926
                                             14 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
     i2_lcd_4bits_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (19) i2_lcd_send_4bits                                    4     1      3    1113
                                             10 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (19) i2_lcd_4bits_send_enable_signal                      3     1      2     877
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (17) i2_GPIO_Pin_Write_Logic                             10     7      3     699
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (16) _EUSART_Async_Read_Data                             15    11      4    1172
                                              5 COMRAM    15    11      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (16) _Bluetooth_Send_Data_Non_Blocking                    4     1      3     968
                                             12 COMRAM     4     1      3
         _EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (17) _EUSART_Async_Transmit_Data                          7     3      4     742
                                              5 COMRAM     7     3      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (17) _calc_parity_odd                                     5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (17) _calc_parity_even                                    5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _application_intialize
     _ADC_Init
       _adc_channel_pin_config_as_input
       _adc_select_result_formate
       _adc_select_voltage_reference
     _EUSART_Async_Init
       _async_Rx_config
         _Rx_config_interrupt
       _async_Tx_config
       _async_config_baud_rate_gen
         ___fladd
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___fldiv
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___fltol
         ___xxtofl
           ___wmul (ARG)
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _battery_level
     _ADC_Get_Conversion_Blocking
       _ADC_Get_Conversion_Results
       _ADC_Start_Conversion
       _ADC_select_channel
         _adc_channel_pin_config_as_input
     _GPIO_Pin_Write_Logic
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flge
       ___flmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _convert_float32_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___fldiv (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isupper
             _strncmp
             _tolower
               _isupper
     _lcd_4bit_send_string_data_pos
       _lcd_4bit_send_char_data
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
       _lcd_4bits_set_courser
         _lcd_4bit_send_command
           _GPIO_Pin_Write_Logic
           _lcd_4bits_send_enable_signal
             _GPIO_Pin_Write_Logic
           _lcd_send_4bits
             _GPIO_Pin_Write_Logic
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
         _GPIO_Pin_Write_Logic
       _lcd_send_4bits
         _GPIO_Pin_Write_Logic
     _lcd_4bits_set_courser
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       _Bluetooth_Send_Data_Non_Blocking
         _EUSART_Async_Transmit_Data
           _calc_parity_even
           _calc_parity_odd
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
       _lcd_4bit_send_char_data_pos
         i2_lcd_4bit_send_char_data
           i2_GPIO_Pin_Write_Logic
           i2_lcd_4bits_send_enable_signal
             i2_GPIO_Pin_Write_Logic
           i2_lcd_send_4bits
             i2_GPIO_Pin_Write_Logic
         i2_lcd_4bits_set_courser
           i2_lcd_4bit_send_command
             i2_GPIO_Pin_Write_Logic
             i2_lcd_4bits_send_enable_signal
               i2_GPIO_Pin_Write_Logic
             i2_lcd_send_4bits
               i2_GPIO_Pin_Write_Logic
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _Timer0_Handler *
       _ECU_DC_Motor_Stop
         i2_GPIO_Pin_Write_Logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      50       9       31.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     51      F8       7       96.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7D      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2C      55       1       67.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21A      34        0.0%
DATA                 0      0     21A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 13 20:46:44 2022

                             ___fldiv@aexp 00AA                               ___fldiv@bexp 00A9  
                                        _i 0042                               ___fldiv@sign 00A2  
                          ?_lcd_send_4bits 0087           lcd_4bit_send_command@ERRORSTATUS 008E  
                              _SSPSTATbits 000FC7                               ___awdiv@sign 0085  
                                       bsr 000FE0                      ??_InterruptManagerLow 0027  
                      ___wmul@multiplicand 0082                 i2lcd_4bit_send_command@lcd 000F  
       __end_of_async_config_baud_rate_gen 2E28                 _async_config_baud_rate_gen 2A70  
                                      l101 42EA                                        l111 5A9A  
                                      l106 581A                                        l223 4AFA  
                                      l136 533E                                        l321 54A6  
                                      l233 56BC                                        l411 5B5E  
                                      l323 5524                                        l404 5B32  
                                      l228 5EE4                                        l413 5B62  
                                      l333 6112                                        l262 507C  
                                      l408 5B56                                        l336 62FA  
                                      l338 62FE                                        l611 5DA2  
                                      l356 4FCA          ADC_Get_Conversion_Results@_result 0082  
                                      l366 563A                                        l713 5590  
                                      l609 5D60                                        l396 5D44  
                                      l740 540A                                        l732 51E0  
                                      l716 55B2                                        l389 4CB4  
                                      l398 5D46                                        l726 51B8  
                                      l743 5488                                        l719 55B4  
                                      l752 2AA4                                        l729 51DE  
                                      l746 548C                                        l754 2B60  
                                      l755 2C1C                                        l827 41B2  
                                      l756 2CD8                                        l758 2E26  
                                      l846 4418                                        l863 5E4A  
                                      l858 57AA                                        _PR2 000FCB  
     __end_of_lcd_4bits_send_enable_signal 5EE6      __size_of_lcd_4bits_send_enable_signal 004A  
         ??i2_lcd_4bits_send_enable_signal 000D            ?i2_lcd_4bits_send_enable_signal 000B  
             _lcd_4bits_send_enable_signal 5E9C                           _calc_parity_even 59CE  
                                      _abs 6094                     ??_InterruptManagerHigh 0020  
                                      _pad 4D82                                        _gps 0049  
                _RB5_InterruptHandler_HIGH 0037                            __end_of_ADC_ISR 637E  
                             ___awmod@sign 002B           lcd_4bit_send_char_data_pos@colum 001D  
 GPIO_Pin_Direction_Initialize@ERRORSTATUS 002C                                        prod 000FF3  
                                      tosl 000FFD                                        wreg 000FE8  
                               _TXSTA1bits 000FAC                               ___flmul@aexp 008D  
                             ___flmul@bexp 0092                               ___flmul@sign 008C  
                             ___flmul@temp 0097                               ___flmul@prod 0093  
                   ??_GPIO_Pin_Write_Logic 0080                 __size_of_ECU_DC_Motor_Stop 003C  
                          __end_of_RB4_ISR 6368                            __end_of_RB5_ISR 634E  
                          __end_of_RB6_ISR 6334                            __end_of_RB7_ISR 631A  
             i2lcd_4bits_set_courser@colum 0016                               ___fltol@exp1 002B  
                                     ?_abs 0090                                       l2021 53EA  
                                     l2006 512E                                       l2032 474E  
                                     l2027 4708                                       l2036 61FE  
                                     l2307 2060                                       l2059 4648  
                                     l2316 2130                                       l2420 3A7E  
                                     l2500 3264                                       l2332 5FC0  
                                     l2317 211E                                       l2502 326C  
                                     l2431 3A16                                       l2344 31C2  
                                     l2424 39BA                                       l2520 34A6  
                                     l2417 3922                                       l2290 1F46  
                                     l2346 3022                                       l1714 5AFE  
                                     l2450 5DFA                                       l2291 1F34  
                                     l2355 3068                                       l2292 1EFA  
                                     l2380 2A6E                                       l1740 3D8E  
                                     l2357 30E0                                       l2349 2FE6  
                                     l2437 3F06                                       l2358 30CE  
                                     l2630 2584                                       l2622 2642  
                                     l2383 2900                                       l2703 5CE8  
                                     l2376 270A                                       l2393 2A30  
                                     l2385 2978                                       l2713 4BD8  
                                     l1762 62B4                                       l2386 2966  
                                     l2538 1D54                                       l2299 2216  
                                     l2723 5BBC                                       l2652 60CC  
                                     l2492 4E0C                                       l2556 14A6  
                                     l2636 595C                                       l2709 6236  
                                     l2661 36BC                                       l2637 5964  
                                     l2494 4E48                                       l2655 60D4  
                                     l2647 484E                                       l2671 61C4  
                                     l2664 3600                                       l2728 5BC4  
                                     l2584 1906                                       l2489 4DC8  
                                     l1876 3C08                                       l2686 4D80  
                                     l2694 604C                                       ?_pad 008D  
                                     l1889 406C                                       l2697 637A  
                                     l1993 4F0E                                       l9211 555A  
                                     l9203 5526                                       l9213 555C  
                                     l9221 5596                                       l9205 552A  
                                     l9223 55AC                                       l9215 5572  
                                     l9207 553C                                       l9217 5578  
                                     l9225 55B2                                       l9209 5544  
                                     l9219 558E                  _convert_float32_to_string 4A1A  
                                     STR_1 1025                                       STR_2 1060  
                                     STR_3 1045                                       STR_4 1001  
                                     STR_5 108C                                       STR_9 1089  
                    _battery_volt_adc_read 0044                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     i2l32 628C                                       i2l70 614E  
                                     _RX9D 007D58                    ??_application_intialize 002D  
                 _RB4_InterruptHandler_LOW 0039                                       abs@a 0090  
                                     _lcd1 01E7                                       _dbuf 0200  
                                     _blue 0048                                       _main 5FC2  
                                     _dtoa 31C4                                       _prec 002F  
                                     _nout 011B                   _RB7_InterruptHandler_LOW 011D  
                                     pad@i 0094                                       pad@p 0091  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     indf0 000FEF                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 0096                                       fsr2l 000FD9  
                                     btemp 0056                           __end_of_ADC_Init 5526  
                            ___fpclassifyf 4750                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0286  
         GPIO_Pin_Toggle_Logic@_pin_config 002A         i2GPIO_Pin_Toggle_Logic@_pin_config 0001  
                          ___fldiv@new_exp 00A3                    ?_EUSART_Async_Read_Data 0006  
     Bluetooth_Send_Data_Non_Blocking@data 000F                               _tolower$4933 008A  
                             ___param_bank 000000                               fp__usart_isr 0000  
         __size_of_lcd_4bit_send_char_data 0066           __size_ofi2_lcd_4bit_send_command 0062  
                    _lcd_4bit_send_command 57AC                                      ??_abs 0092  
           ??_adc_select_voltage_reference 002C                                      ??_pad 0093  
                         __end_of_INT1_ISR 637A                                      l11201 1E5C  
                                    l12001 438E                                      l11211 1E70  
                                    l11203 1E60                                      l11301 20B4  
                                    l11221 1E84                                      l11213 1E74  
                                    l11205 1E64                                      l12005 43EC  
                                    l11141 4CCA                                      l12021 322E  
                                    l12101 113C                                      l11303 20C2  
                                    l11311 20E0                                      l11223 1E88  
                                    l11215 1E78                                      l11207 1E68  
                                    l11231 1E98                                      l12007 4416  
                                    l11143 4CDC                                      l12031 3286  
                                    l12023 323C                                      l12015 31C4  
                                    l12103 1140                                      l11305 20CA  
                                    l11313 20EE                                      l11241 1F08  
                                    l11233 1E9C                                      l11225 1E8C  
                                    l11217 1E7C                                      l11209 1E6C  
                                    l11161 1D84                                      l11153 1D56  
                                    l11401 3B3E                                      l11145 4CE6  
                                    l12041 32B2                                      l12033 3294  
                                    l12025 323E                                      l12017 31E4  
                                    l12201 1580                                      l12121 1204  
                                    l12113 11A8                                      l12105 1144  
                                    l11323 2140                                      l11331 2196  
                                    l11315 20F2                                      l11307 20CE  
                                    l11251 1F32                                      l11243 1F14  
                                    l11235 1EC6                                      l11227 1E90  
                                    l11219 1E80                                      l11171 1DBE  
                                    l11163 1D94                                      l11155 1D64  
                                    l11411 3BB2                                      l11403 3B50  
                                    l11147 4D04                                      l11139 4CB6  
                                    l12051 33C2                                      l12043 3336  
                                    l12035 329A                                      l12027 3258  
                                    l12019 320E                                      l12203 1592  
                                    l12211 15D2                                      l12131 128C  
                                    l12115 11BA                                      l12107 114A  
                                    l11341 21E8                                      l11333 21A6  
                                    l11325 214C                                      l11317 2100  
                                    l11309 20DE                                      l11261 1F88  
                                    l11253 1F54                                      l11245 1F18  
                                    l11237 1EE2                                      l11229 1E94  
                                    l11181 1DEC                                      l11173 1DC4  
                                    l11165 1DA4                                      l11157 1D72  
                                    l11501 2F24                                      l11405 3B7E  
                                    l11413 3BB8                                      l11421 3F08  
                                    l11149 4D3A                                      l12061 3434  
                                    l12053 33E0                                      l12045 333C  
                                    l12037 32A2                                      l12029 3274  
                                    l12301 1ABE                                      l12221 16BA  
                                    l12213 15DA                                      l12205 15A0  
                                    l12133 129E                                      l12117 11DC  
                                    l12109 1172                                      l12125 122E  
                                    l13021 4A3E                                      l13013 4A1A  
                                    l11351 2206                                      l11343 21EE  
                                    l11335 21B6                                      l11327 215A  
                                    l11319 2116                                      l11271 1FC2  
                                    l11263 1F96                                      l11255 1F64  
                                    l11247 1F26                                      l11239 1EF2  
                                    l11191 1E20                                      l11183 1DEE  
                                    l11175 1DD6                                      l11167 1DA6  
                                    l11159 1D74                                      l11511 2F4C  
                                    l11503 2F28                                      l11415 3BC8  
                                    l11407 3B9E                                      l11431 3F4E  
                                    l11423 3F0C                                      l12071 346E  
                                    l12063 3442                                      l12055 33FA  
                                    l12047 3342                                      l12039 32AC  
                                    l12311 1B42                                      l12303 1AF4  
                                    l12231 1782                                      l12223 16F0  
                                    l12215 15EA                                      l12207 15B8  
                                    l12151 136A                                      l12135 12C0  
                                    l12127 1256                                      l12143 12E2  
                                    l12119 11FA                                      l13031 4AB6  
                                    l13023 4A42                                      l13015 4A1A  
                                    l13041 548E                                      l11345 21F0  
                                    l11337 21D6                                      l11329 2194  
                                    l11281 202E                                      l11273 1FC4  
                                    l11265 1FA4                                      l11249 1F28  
                                    l11185 1DFE                                      l11193 1E28  
                                    l11177 1DD8                                      l11169 1DAE  
                                    l11521 2F9A                                      l11417 3BE8  
                                    l11409 3BA0                                      l11441 3FB6  
                                    l11433 3F6E                                      l11425 3F1C  
                                    l11361 602A                                      l12065 3448  
                                    l12073 347E                                      l12057 3414  
                                    l12049 33A6                                      l11601 2662  
                                    l12321 1B88                                      l12313 1B56  
                                    l12305 1AFC                                      l12241 1820  
                                    l12233 1798                                      l12217 15FE  
                                    l12225 16F6                                      l12209 15CA  
                                    l12153 1370                                      l12161 143E  
                                    l12145 12FC                                      l12081 10AA  
                                    l12401 4BB4                                      l13033 4AB8  
                                    l13025 4A60                                      l13017 4A26  
                                    l13051 5516                                      l13043 54A2  
                                    l11347 21F6                                      l11339 21DA  
                                    l11291 2086                                      l11283 2030  
                                    l11275 1FCE                                      l11267 1FB0  
                                    l11259 1F78                                      l11195 1E38  
                                    l11187 1E0E                                      l11179 1DDE  
                                    l11531 2FE4                                      l11523 2FAA  
                                    l11515 2F60                                      l11507 2F3C  
                                    l12411 5654                                      l11451 402C  
                                    l11443 3FE4                                      l11435 3F8C  
                                    l11427 3F3C                                      l11355 6008  
                                    l11363 6200                                      l12067 345A  
                                    l12059 3422                                      l11611 26A8  
                                    l11603 2672                                      l12331 1BC8  
                                    l12323 1B9A                                      l12315 1B64  
                                    l12307 1B00                                      l12243 187A  
                                    l12251 18CE                                      l12235 17CC  
                                    l12227 171A                                      l12219 1662  
                                    l12171 1480                                      l12163 1450  
                                    l12155 13CE                                      l12091 10F6  
                                    l12083 10B8                                      l13035 4AD6  
                                    l13027 4A72                                      l13019 4A2C  
                                    l13053 5522                                      l13045 54A8  
                                    l11349 2204                                      l11285 2040  
                                    l11269 1FB4                                      l11277 1FD4  
                                    l11197 1E4A                                      l11189 1E1E  
                                    l11541 3032                                      l11533 2FF0  
                                    l11525 2FB2                                      l11517 2F7A  
                                    l11509 2F4C                                      l11461 2E44  
                                    l12421 5EB4                                      l12405 563C  
                                    l13061 55CA                                      l11381 3A94  
                                    l11453 404C                                      l11445 4004  
                                    l11437 3F94                                      l11429 3F40  
                                    l11357 6014                                      l11365 620C  
                                    l12069 3466                                      l11701 29CC  
                                    l11621 26D4                                      l11613 26AE  
                                    l11605 2682                                      l11373 618C  
                                    l12341 1C14                                      l12333 1BD0  
                                    l12325 1BA2                                      l12317 1B74  
                                    l12309 1B24                                      l12261 1986  
                                    l12253 18DE                                      l12245 1880  
                                    l12237 17DC                                      l12229 174E  
                                    l12181 14C4                                      l12173 149A  
                                    l12165 1454                                      l12157 1402  
                                    l12149 1336                                      l12093 1108  
                                    l12085 10C0                                      l12077 1090  
                                    l12501 2608                                      l13029 4A9A  
                                    l13047 54FC                                      l13039 548E  
                                    l11295 209A                                      l11279 1FFA  
                                    l11287 2050                                      l11199 1E58  
                                    l11543 3048                                      l11551 3078  
                                    l11535 300E                                      l11527 2FC2  
                                    l11519 2F8A                                      l11471 2E78  
                                    l11463 2E46                                      l12423 5EC8  
                                    l12415 5E9C                                      l12407 563C  
                                    l12511 57AC                                      l13071 562A  
                                    l13063 55DC                                      l11391 3AEA  
                                    l11383 3AB4                                      l11447 4016  
                                    l11439 3FA8                                      l11359 6026  
                                    l11367 6210                                      l11711 2A34  
                                    l11703 29D0                                      l11631 272A  
                                    l11623 26E4                                      l11615 26B4  
                                    l11607 2692                                      l12351 1C6A  
                                    l12343 1C30                                      l12335 1BD8  
                                    l12327 1BB2                                      l12319 1B78  
                                    l12263 1994                                      l12271 19D0  
                                    l12255 18F2                                      l12247 18B6  
                                    l12239 17EC                                      l12183 14D6  
                                    l12191 1542                                      l12167 1466  
                                    l12175 14B2                                      l12159 140A  
                                    l12095 1116                                      l12087 10E4  
                                    l12079 109A                                      l12503 2630  
                                    l12431 223E                                      l12521 4BDE  
                                    l13049 550A                                      l11297 20A4  
                                    l11289 2076                                      l11553 3086  
                                    l11545 304E                                      l11537 3010  
                                    l11529 2FD6                                      l11481 2EAA  
                                    l11465 2E56                                      l11473 2E80  
                                    l11457 2E28                                      l12601 41B0  
                                    l12425 5ECE                                      l12417 5E9C  
                                    l12409 5650                                      l12513 57C0  
                                    l13065 55E0                                      l13057 55B6  
                                    l11393 3AF6                                      l11385 3AB8  
                                    l11377 3A80                                      l11449 401C  
                                    l11369 6228                                      l11801 5108  
                                    l11721 2A5E                                      l11713 2A44  
                                    l11705 29EA                                      l11641 276A  
                                    l11625 26F4                                      l11617 26C2  
                                    l11609 2698                                      l12361 1CA6  
                                    l12353 1C70                                      l12345 1C38  
                                    l12337 1BE4                                      l12329 1BBA  
                                    l12281 1A0C                                      l12273 19E4  
                                    l12265 19A8                                      l12257 18FE  
                                    l12249 18CA                                      l12193 154A  
                                    l12185 14F2                                      l12169 1478  
                                    l12097 1128                                      l12089 10EE  
                                    l12441 2296                                      l12433 224C  
                                    l13251 5738                                      l12531 4BFA  
                                    l12523 4BE2                                      l11299 20B2  
                                    l11563 30F0                                      l11571 3138  
                                    l11555 308A                                      l11547 3058  
                                    l11539 3020                                      l11491 2EDE  
                                    l11483 2EAC                                      l11475 2E90  
                                    l11467 2E66                                      l11459 2E36  
                                    l12611 38DE                                      l12419 5EB0  
                                    l12515 57C8                                      l13067 5608  
                                    l13059 55B6                                      l13091 62AC  
                                    l11395 3B14                                      l11387 3AC6  
                                    l11379 3A86                                      l11731 4E4A  
                                    l11803 510E                                      l11811 5340  
                                    l11715 2A52                                      l11707 29FE  
                                    l11651 27B4                                      l11643 2776  
                                    l11635 273E                                      l11627 26FA  
                                    l11619 26C4                                      l12371 1CFC  
                                    l12363 1CAC                                      l12355 1C82  
                                    l12339 1BEA                                      l12347 1C3E  
                                    l12283 1A18                                      l12275 19F2  
                                    l12291 1A38                                      l12267 19BA  
                                    l12259 1922                                      l12195 155C  
                                    l12187 1532                                      l12099 1134  
                                    l12451 235A                                      l12443 22CA  
                                    l12435 225C                                      l13253 574A  
                                    l12541 4C18                                      l12533 4C00  
                                    l12525 4BE8                                      l11581 31A2  
                                    l11573 3152                                      l11565 30FC  
                                    l11557 3098                                      l11549 3066  
                                    l11485 2EBC                                      l11493 2EE6  
                                    l11477 2E96                                      l11469 2E76  
                                    l12621 395C                                      l12613 38EC  
                                    l12517 5816                                      l12509 57AC  
                                    l13261 5AD4                                      l13069 561C  
                                    l11397 3B1C                                      l11389 3AE6  
                                    l11901 4D82                                      l11741 4E78  
                                    l11733 4E50                                      l11805 511E  
                                    l11821 53E2                                      l11813 5370  
                                    l11717 2A54                                      l11709 2A18  
                                    l11661 2806                                      l11653 27C0  
                                    l11645 278E                                      l11637 274A  
                                    l11629 271A                                      l11725 5F7A  
                                    l12373 1D08                                      l12365 1CB2  
                                    l12357 1C8E                                      l12349 1C50  
                                    l12293 1A4A                                      l12285 1A28  
                                    l12277 1A02                                      l12269 19C8  
                                    l12197 156E                                      l12189 153C  
                                    l12461 2404                                      l12453 23A2  
                                    l12445 22DA                                      l12437 2260  
                                    l12429 2218                                      l13255 574E  
                                    l12543 4C1E                                      l12535 4C06  
                                    l12527 4BEE                                      l12551 4C30  
                                    l11583 31B0                                      l11575 3168  
                                    l11567 310A                                      l11559 30C6  
                                    l11495 2EF6                                      l11487 2ECC  
                                    l11479 2E9C                                      l12631 39B0  
                                    l12623 3964                                      l12615 3932  
                                    l14071 4400                                      l13263 5AE2  
                                    l11399 3B30                                      l11911 4DD4  
                                    l11903 4D90                                      l11751 4EA6  
                                    l11743 4E80                                      l11735 4E5E  
                                    l11807 5126                                      l11823 53E8  
                                    l11815 5380                                      l11831 468A  
                                    l11719 2A5A                                      l11671 2884  
                                    l11663 2816                                      l11655 27D0  
                                    l11647 279A                                      l11639 2754  
                                    l11727 5F8C                                      l12375 1D10  
                                    l12359 1C96                                      l12295 1A5C  
                                    l12287 1A2C                                      l12279 1A06  
                                    l12199 157C                                      l12391 4B34  
                                    l12471 249E                                      l12463 2412  
                                    l12447 230E                                      l12439 2286  
                                    l12703 5042                                      l13271 3CA2  
                                    l13249 5738                                      l12545 4C24  
                                    l12537 4C0C                                      l12529 4BF4  
                                    l12561 53F0                                      l11585 31B6  
                                    l11577 3182                                      l11569 3134  
                                    l11497 2F0C                                      l11489 2EDC  
                                    l12641 3A26                                      l12633 39EC  
                                    l12625 3970                                      l12617 3948  
                                    l12609 38CC                                      l14073 419A  
                                    l12801 4F10                                      l13089 628E  
                                    l12721 3E4A                                      l12713 3DB0  
                                    l11913 4DE8                                      l11905 4DA4  
                                    l11761 4EE0                                      l11753 4EAE  
                                    l11745 4E84                                      l11737 4E66  
                                    l11817 53AE                                      l11841 46F6  
                                    l11833 46B8                                      l11681 28FE  
                                    l11673 28BA                                      l11665 2832  
                                    l11657 27DC                                      l11649 27A6  
                                    l12377 1D20                                      l12369 1CEA  
                                    l12297 1A60                                      l12289 1A32  
                                    l12393 4B42                                      l12385 4AFC  
                                    l12465 2442                                      l12457 23DA  
                                    l12449 2334                                      l13281 3D62  
                                    l13273 3CC0                                      l13265 3C0A  
                                    l12547 4C2A                                      l12539 4C12  
                                    l12571 5444                                      l12563 5402  
                                    l11587 31B8                                      l11579 319E  
                                    l11499 2F1C                                      l12651 3A6E  
                                    l12643 3A2A                                      l12635 39F8  
                                    l12627 39A2                                      l14075 2DBC  
                                    l13259 5A9C                                      l12811 4F5E  
                                    l12803 4F14                                      l12731 3EAA  
                                    l12715 3DBC                                      l11923 6094  
                                    l11915 4DEE                                      l11907 4DB4  
                                    l11771 4F06                                      l11763 4EE2  
                                    l11755 4EBC                                      l11747 4E8C  
                                    l11739 4E6A                                      l11819 53BE  
                                    l11843 4746                                      l11835 46C8  
                                    l11827 464A                                      l11691 295E  
                                    l11683 2910                                      l11675 28C8  
                                    l11667 283E                                      l11659 27EC  
                                    l11595 2644                                      l11851 61DE  
                                    l11931 47B0                                      l12379 1D26  
                                    l12299 1A66                                      l12395 4B5A  
                                    l12387 4B28                                      l12491 25E0  
                                    l12475 250E                                      l12459 23EC  
                                    l13283 3D7E                                      l13275 3CDE  
                                    l13267 3C24                                      l14077 4C46  
                                    l12573 5446                                      l12565 540C  
                                    l12581 548A                                      l12645 3A4E  
                                    l12637 3A06                                      l12629 39A4  
                                    l12901 5D72                                      l12813 4FA4  
                                    l12805 4F28                                      l12733 3EDE  
                                    l12725 3E64                                      l12709 3D90  
                                    l11925 60B0                                      l11917 4E1A  
                                    l11909 4DC0                                      l11765 4EE8  
                                    l11757 4EC2                                      l11749 4E9E  
                                    l11781 509A                                      l11845 474C  
                                    l11837 46D6                                      l11829 467A  
                                    l11685 291E                                      l11677 28E6  
                                    l11669 285A                                      l11597 2652  
                                    l11853 61EE                                      l11941 4802  
                                    l11933 47D8                                      l12397 4B78  
                                    l12477 2520                                      l12485 2598  
                                    l12469 246E                                      l12661 593E  
                                    l12741 5DA4                                      l14069 5056  
                                    l13277 3D14                                      l13269 3C84  
                                    l12575 5460                                      l12567 541C  
                                    l12559 53EC                                      l11871 45AE  
                                    l11863 456E                                      l12647 3A5E  
                                    l12639 3A24                                      l12831 2AA8  
                                    l12823 2A70                                      l12903 5D74  
                                    l12591 40A4                                      l12671 5E48  
                                    l12663 5DFC                                      l12911 41B4  
                                    l12815 4FA4                                      l12807 4F3A  
                                    l12735 3EEA                                      l12727 3E90  
                                    l12719 3DF2                                      l11919 4E2E  
                                    l11759 4ED8                                      l11767 4EEE  
                                    l11791 50CE                                      l11783 509E  
                                    l11775 507E                                      l11839 46E8  
                                    l11695 2988                                      l11687 2922  
                                    l11679 28F0                                      l11599 2660  
                                    l11935 47E4                                      l11927 4750  
                                    l11951 5C9A                                      l12399 4B8A  
                                    l12487 25BE                                      l12495 25EE  
                                    l12479 2554                                      l12655 58FA  
                                    l12743 5DB6                                      l13279 3D4E  
                                    l12761 5D1C                                      l12753 5CEA  
                                    l12577 5468                                      l12569 5430  
                                    l11881 45DE                                      l11873 45BC  
                                    l11865 4598                                      l11857 4542  
                                    l12649 3A6C                                      l12841 2C78  
                                    l12833 2B00                                      l12825 2A76  
                                    l12905 5D8A                                      l12593 40AC  
                                    l12585 406E                                      l12665 5DFC  
                                    l12921 41D8                                      l12913 41B4  
                                    l12809 4F42                                      l12737 3EF0  
                                    l11769 4EFE                                      l11793 50D6  
                                    l11785 50AC                                      l11777 5082  
                                    l11697 2994                                      l11689 2930  
                                    l11849 61C6                                      l11945 4846  
                                    l11929 4770                                      l11953 5B64  
                                    l12497 25FC                                      l12489 25CC  
                                    l12657 5902                                      l12745 5DBE  
                                    l12681 5A4E                                      l12763 5D22  
                                    l12755 5CEA                                      l12771 5B12  
                                    l12579 5482                                      l11891 4608  
                                    l11883 45E8                                      l11867 459A  
                                    l11859 455A                                      l12843 2CDC  
                                    l12835 2B64                                      l12851 2D9C  
                                    l12827 2A88                                      l12907 5DA0  
                                    l12595 4110                                      l12587 4072  
                                    l12667 5E10                                      l12931 4210  
                                    l12915 41C8                                      l12819 4FC8  
                                    l12739 3EF4                                      l11795 50E4  
                                    l11787 50B4                                      l11779 5092  
                                    l11699 29A2                                      l11939 47F0  
                                    l11971 3542                                      l11963 34A8  
                                    l12659 5910                                      l12747 5DC6  
                                    l12675 5A36                                      l12691 4FE4  
                                    l12765 5D3E                                      l12757 5CFC  
                                    l12773 5B16                                      l11893 4618  
                                    l11869 45AA                                      l12845 2D34  
                                    l12837 2BBC                                      l12853 2DE2  
                                    l12829 2A90                                      l12589 4084  
                                    l12669 5E18                                      l12941 426C  
                                    l12933 4220                                      l12917 41CC  
                                    l12781 60EE                                      l11797 50FA  
                                    l11789 50C6                                      l11981 3660  
                                    l11965 34C8                                      l11949 5C8A  
                                    l11957 5B9C                                      l12749 5DE2  
                                    l12677 5A36                                      l12693 4FEA  
                                    l12685 4FCC                                      l12759 5D00  
                                    l12775 5B3A                                      l12767 5B00  
                                    l12871 5150                                      l11895 4628  
                                    l11879 45D4                                      l12847 2D94  
                                    l12839 2C20                                      l12855 2E24  
                                    l12599 416E                                      l11991 42EC  
                                    l12951 42C6                                      l12943 427E  
                                    l12935 4230                                      l12927 41F0  
                                    l12919 41CC                                      l12791 62DC  
                                    l12783 60F6                                      l11799 5102  
                                    l11983 3674                                      l11975 35B4  
                                    l11967 3520                                      l11959 5BAE  
                                    l12679 5A4A                                      l12695 5000  
                                    l12687 4FCC                                      l12769 5B00  
                                    l12881 519C                                      l12873 516A  
                                    l12865 5130                                      l11897 4638  
                                    l11889 45FC                                      l11993 42F2  
                                    l12953 42D8                                      l12945 4290  
                                    l12937 4242                                      l12929 420C  
                                    l12793 62E0                                      l12785 6108  
                                    l12777 60D6                                      l11985 369C  
                                    l11977 35F0                                      l11969 3534  
                                    l12697 5016                                      l12689 4FE0  
                                    l12961 52A6                                      l13841 5FD2  
                                    l12883 51B6                                      l12875 516C  
                                    l12867 5136                                      l11995 4304  
                                    l12947 42A2                                      l12939 4264  
                                    l12795 62F2                                      l12787 610E  
                                    l12779 60DC                                      l11987 36AC  
                                    l11979 3624                                      l12699 502C  
                                    l12971 530C                                      l12963 52B8  
                                    l13843 5FF0                                      l12877 517C  
                                    l12885 51BE                                      l12869 5148  
                                    l12893 5D48                                      l11997 4322  
                                    l12949 42B4                                      l12797 62FC  
                                    l12965 52BC                                      l12957 5292  
                                    l13845 5FFC                                      l12887 51D8  
                                    l12879 5196                                      l12895 5D48  
                                    l11999 432A                                      l12967 52D4  
                                    l12959 5292                                      l13839 5FC2  
                                    l12889 51DE                                      l12897 5D5C  
                                    l12969 5306                                      l12899 5D62  
                            ___fltol@sign1 002A                            __end_of___aodiv 3C0A  
                          __end_of___fladd 2218                                      ?_main 0001  
                                    ?_dtoa 009A                            __end_of___aomod 406E  
                          __end_of___fldiv 31C4                            __end_of___awdiv 4F10  
                          __end_of___flneg 6200                                      STR_10 1089  
                                    STR_11 106C                                      STR_12 1036  
                                    STR_14 101D                                      STR_22 107A  
                                    STR_23 1082                                      STR_15 1014  
                                    STR_16 1054                                      STR_17 1014  
                                    STR_26 1086                                      STR_18 1076  
                                    STR_19 107E                                      STR_28 1086  
                          __end_of___awmod 5130                            __end_of___flmul 2A70  
                          __end_of___flsub 5FC2                            __end_of___fltol 464A  
               ADC_select_channel@_channel 0084                                      u10100 555A  
                                    u10101 5556                                      u10110 5572  
                                    u10111 556E                                      u10120 558E  
                                    u10121 558A                                      u10130 55AC  
                                    u10131 55A8                                      u10090 553C  
                                    u10091 5538                                      u13000 3B14  
                                    u13001 3B10                                      u13010 3B3E  
                                    u13011 3B3A                                      u13100 2E44  
                                    u13020 3B7E                            ___awdiv@divisor 0082  
                                    u13101 2E40                                      u13021 3B7A  
                                    u13110 2E56                                      u13030 3BC8  
                                    u13111 2E52                                      u13031 3BC4  
                                    u13200 300E                                      u13120 2E66  
                                    u13040 3F1C                                      u13201 300A  
                                    u13121 2E62                                      u13041 3F18  
                                    u13210 3032                                      u13130 2EAA  
                                    u13050 3F4E                                      u14010 35B0  
                                    u13211 302E                                      u13131 2EA6  
                                    u13051 3F4A                                      u14011 35AC  
                                    u13300 3152                                      u13220 3048  
                                    u13140 2EBC                                      u13060 3F8C  
                                    u12500 4CCA                                      u14020 35D4  
                                    u13301 314E                                      u13221 3044  
                                    u13141 2EB8                                      u13061 3F88  
                                    u12501 4CC6                                      u14005 3556  
                                    u13310 3182                                      u13230 3066  
                                    u13150 2ECC                                      u13070 3FB6  
                                    u12510 4CDC                                      u14110 31F6  
                                    u14030 35F0                                      u14006 3560  
                                    u13311 317E                                      u13231 3062  
                                    u13151 2EC8                                      u13071 3FB2  
                                    u12511 4CD8                                      u14111 31F0  
                                    u14031 35EC                                      u14007 3570  
                                    u15000 5460                                      u12600 1E0E  
                                    u13320 31B0                                      u13240 3086  
                                    u13160 2F0C                                      u14104 43AA  
                                    u13080 3FE4                                      u12520 4D04  
                                    u14200 33FA                                      u14120 31F8  
                                    u13400 272A                                      u14040 3644  
                                    u15001 545C                                      u12601 1E0A  
                                    u13321 31AC                                      u13241 3082  
                                    u13161 2F08                                      u14105 43A6  
                                    u13081 3FE0                                      u12521 4D00  
                                    u14201 33F6                                      u13401 2726  
                                    u14025 35CA                                      u15010 5482  
                                    u12610 1E4A                                      u13250 3098  
                                    u13170 2F4C                                      u13090 402C  
                                    u12530 4D3A                                      u14210 3414  
                                    u14130 320E                                      u13410 28A4  
                                    u13330 2660                                      u14050 3660  
                                    u15011 547E                                      u12611 1E46  
                                    u13251 3094                                      u13171 2F48  
                                    u13091 4028                                      u12531 4D36  
                                    u14211 3410                                      u14131 320A  
                                    u13331 265C                                      u14051 365C  
                                    u12700 1F64                                      u12620 1E58  
                                    u12540 1D72                                      u13260 30C6  
                                    u13180 2FC2                                      u15100 3948  
                                    u15020 4084                                      u14220 3422  
                                    u14140 323C                                      u13500 2A18  
                                    u13420 28FE                                      u13340 2672  
                                    u14060 369C                                      u14300 1172  
                                    u12701 1F60                                      u12621 1E54  
                                    u12541 1D6E                                      u13261 30C2  
                                    u13181 2FBE                                      u15101 3944  
                                    u15021 4080                                      u14221 341E  
                                    u14141 3238                                      u13501 2A14  
                                    u13421 28FA                                      u13341 266E  
                                    u14061 3698                                      u14045 363A  
                                    u14301 116E                                      u12710 1F96  
                                    u12630 1EC6                                      u12550 1D84  
                                    u13270 30DC                                      u13190 2FE4  
                                    u15110 399E                                      u15030 40A4  
                                    u14070 4304                                      u14230 3434  
                                    u14150 3258                                      u13510 2A52  
                                    u13430 291E                                      u13350 2682  
                                    u14310 11A0                                      u12711 1F92  
                                    u12631 1EC2                                      u12551 1D80  
                                    u13271 30D8                                      u13191 2FE0  
                                    u15111 399A                                      u15031 40A0  
                                    u14071 4300                                      u14231 3430  
                                    u14151 3254                                      u13511 2A4E  
                                    u13431 291A                                      u13415 289A  
                                    u13351 267E                                      u14311 119A  
                                    u12800 20DE                                      u12720 1FA4  
                                    u12640 1EDE                                      u12560 1D94  
                                    u13280 30F0                                      u15120 39E8  
                                    u14080 4322                                      u14240 3442  
                                    u14160 3286                                      u13520 4E5E  
                                    u13600 50C6                                      u13440 2930  
                                    u13360 26C2                                      u14400 143E  
                                    u14320 11A2                                      u15200 5A4A  
                                    u12801 20DA                                      u12721 1FA0  
                                    u12641 1ED8                                      u12561 1D90  
                                    u13281 30EC                                      u15121 39E4  
                                    u14081 431E                                      u14241 343E  
                                    u14161 3282                                      u13521 4E5A  
                                    u13601 50C2                                      u13441 292C  
                                    u13361 26BE                                      u14401 143A  
                                    u15201 5A46                                      u12810 20EE  
                                    u12730 1FC2                                      u12650 1EE0  
                                    u12570 1DD6                                      u13290 310A  
                                    u15130 3A06                                      u14250 345A  
                                    u14170 3294                                      u13530 4E78  
                                    u13610 50E4                                      u13450 295E  
                                    u13370 26D4                                      u14410 1466  
                                    u14330 11BA                                      u15210 4FE0  
                                    u12811 20EA                                      u12731 1FBE  
                                    u12571 1DD2                                      u13291 3106  
                                    u15131 3A02                                      u14251 3456  
                                    u14171 3290                                      u13531 4E74  
                                    u13611 50E0                                      u13451 295A  
                                    u13371 26D0                                      u14411 1462  
                                    u14331 11B6                                      u15211 4FDC  
                                    u15300 5B12                                      u12900 21D6  
                                    u12820 2100                                      u12740 1FFA  
                                    u12660 1F08                                      u12580 1DEC  
                                    u15140 3A16                                      u15060 4186  
                                    u15044 40C8                                      u15220 3DAC  
                                    u14180 33C2                                      u13540 4E9E  
                                    u13620 50FA                                      u13700 46F6  
                                    u13460 2974                                      u13380 26E4  
                                    u14500 157C                                      u14420 1478  
                                    u14340 1256                                      u14260 10B8  
                                    u15301 5B0E                                      u12901 21D2  
                                    u12821 20FC                                      u12741 1FF6  
                                    u12661 1F04                                      u12581 1DE8  
                                    u15141 3A12                                      u15061 4180  
                                    u15045 40C4                                      u15221 3DA8  
                                    u14181 33BE                                      u13541 4E9A  
                                    u13621 50F6                                      u13701 46F2  
                                    u13461 2970                                      u13381 26E0  
                                    u14501 1578                                      u14421 1474  
                                    u14341 1252                                      u14261 10B4  
                                    u15310 5B32                                      u12910 21E8  
                                    u12830 2116                                      u12750 2040  
                                    u12670 1F26                                      u12590 1DFE  
                                    u15150 3A24                                      u15070 4188  
                                    u15054 412C                                      u14094 4346  
                                    u15230 3DEE                                      u14190 33E0  
                                    u13550 4EBC                                      u13630 511E  
                                    u13710 4746                                      u13470 2988  
                                    u13390 271A                                      u14510 1592  
                                    u14430 149A                                      u14350 1284  
                                    u14270 1108                                      u15311 5B2E  
                                    u12911 21E4                                      u12831 2112  
                                    u12751 203C                                      u12671 1F22  
                                    u12591 1DFA                                      u15151 3A20  
                                    u15055 4128                                      u14095 4342  
                                    u15231 3DEA                                      u14191 33DC  
                                    u13551 4EB8                                      u13631 511A  
                                    u13711 4742                                      u13471 2984  
                                    u13391 2716                                      u14511 158E  
                                    u14431 1496                                      u14351 127E  
                                    u14271 1104                                      u15320 5B56  
                                    u12920 2204                                      u12840 212C  
                                    u12760 2076                                      u12680 1F46  
                                    u15160 3A5E                                      u15080 38DE  
                                    u15400 2A88                                      u15240 3E60  
                                    u13800 4D90                                      u13560 4ED8  
                                    u13640 5370                                      u13480 29A2  
                                    u13720 61DE                                      u14600 18F2  
                                    u14520 15A0                                      u14440 14C0  
                                    u14360 1286                                      u14280 1116  
                                    u15321 5B52                                      u12921 2200  
                                    u12841 2128                                      u12761 2072  
                                    u12681 1F42                                      u15161 3A5A  
                                    u15081 38DA                                      u15401 2A84  
                                    u15241 3E5C                                      u13801 4D8C  
                                    u13561 4ED4                                      u13641 536C  
                                    u13481 299E                                      u13721 61DA  
                                    u14601 18EE                                      u14521 159C  
                                    u14441 14BC                                      u14281 1112  
                                    u15410 5148                                      u12850 2140  
                                    u12770 2086                                      u12690 1F54  
                                    u13730 455A                                      u15170 3A6C  
                                    u15090 38EC                                      u15330 60EE  
                                    u15250 3EA6                                      u12930 604C  
                                    u13810 4DB4                                      u13570 4EFE  
                                    u13650 53AE                                      u13490 29EA  
                                    u14610 1994                                      u14530 15CA  
                                    u14450 14D6                                      u14370 129E  
                                    u14290 1128                                      u15411 5144  
                                    u12851 213C                                      u12771 2082  
                                    u12691 1F50                                      u13731 4556  
                                    u15171 3A68                                      u15091 38E8  
                                    u15331 60EA                                      u15251 3EA2  
                                    u12931 6048                                      u13811 4DB0  
                                    u13571 4EFA                                      u13651 53AA  
                                    u13491 29E6                                      u14611 1990  
                                    u14531 15C6                                      u14451 14D2  
                                    u14371 129A                                      u14291 1124  
                                    u15420 516A                                      u12860 215A  
                                    u12780 20B2                                      u13740 458E  
                                    u15340 62F2                                      u15260 3F06  
                                    u12940 6228                                      u13820 4E0C  
                                    u13580 5092                                      u13660 53E2  
                                    u13900 483C                                      u14700 1B56  
                                    u14620 19A8                                      u14540 171A  
                                    u14460 14F2                                      u14380 1332  
                                    u15180 595C                                      u15500 52B8  
                                    u15421 5166                                      u12861 2156  
                                    u12781 20AE                                      u15341 62EE  
                                    u15261 3F02                                      u12941 6224  
                                    u13821 4E08                                      u13581 508E  
                                    u13661 53DE                                      u13901 4836  
                                    u14701 1B52                                      u14621 19A4  
                                    u14541 1716                                      u14461 14EE  
                                    u14381 132E                                      u15181 5958  
                                    u15501 52B4                                      u15270 5CFC  
                                    u15430 5196                                      u12870 2194  
                                    u12790 20C2                                      u13750 45BC  
                                    u15190 5E10                                      u15350 4F28  
                                    u13830 4E1A                                      u13590 50AC  
                                    u13670 467A                                      u13910 483E  
                                    u12950 61BE                                      u14710 1B64  
                                    u14630 19BA                                      u14550 1782  
                                    u14470 1532                                      u14390 13CA  
                                    u15510 52FE                                      u15271 5CF8  
                                    u15431 5192                                      u12871 2190  
                                    u12791 20BE                                      u13751 45B8  
                                    u15191 5E0C                                      u15351 4F24  
                                    u13831 4E16                                      u13591 50A8  
                                    u13671 4676                                      u12951 61B8  
                                    u14711 1B60                                      u14631 19B6  
                                    u14551 177E                                      u14471 152E  
                                    u14391 13C6                                      u15280 5D1C  
                                    u15440 51B6                                      u12880 21A6  
                                    u13760 45D0                                      u15360 4F3A  
                                    u13840 60B0                                      u13680 46B8  
                                    u13920 5CD6                                      u12960 61C0  
                                    u14720 1B9A                                      u14640 19C8  
                                    u14560 17CC                                      u14480 155C  
                                    u14800 4B28                                      u15600 4AD6  
                                    u15520 532E                                      u15281 5D18  
                                    u15441 51B2                                      u12881 21A2  
                                    u13761 45CC                                      u13745 4584  
                                    u15361 4F36                                      u13841 60AC  
                                    u13681 46B4                                      u14721 1B96  
                                    u14641 19C4                                      u14561 17C8  
                                    u14481 1558                                      u14801 4B24  
                                    u15601 4AD2                                      u15290 5D3E  
                                    u15610 54A2                                      u15450 51D8  
                                    u12890 21B6                                      u13770 45F8  
                                    u15370 4F5E                                      u12970 3A94  
                                    u13690 46D6                                      u13850 4792  
                                    u13930 5CE8                                      u14730 1BC8  
                                    u14650 19E4                                      u14570 17DC  
                                    u14490 156E                                      u14810 4B5A  
                                    u15530 533E                                      u15291 5D3A  
                                    u15611 549E                                      u15451 51D4  
                                    u12891 21B2                                      u13771 45F4  
                                    u15371 4F5A                                      u12971 3A90  
                                    u13691 46D2                                      u13931 5CE4  
                                    u14731 1BC4                                      u14651 19E0  
                                    u14571 17D8                                      u14491 156A  
                                    u14811 4B56                                      u15531 533A  
                                    u13780 4618                                      u15460 5D5C  
                                    u15620 55CA                                      u12980 3AC6  
                                    u13860 47B0                                      u13940 5B96  
                                    u14740 1C50                                      u14660 19F2  
                                    u14580 187A                                      u14820 4B78  
                                    u14900 2334                                      u13781 4614  
                                    u15461 5D58                                      u15621 55C6  
                                    u12981 3AC2                                      u13861 47AC  
                                    u13941 5B90                                      u14741 1C4C  
                                    u14661 19EE                                      u14581 1876  
                                    u14821 4B74                                      u14901 2330  
                                    u15517 52F4                                      u13790 4628  
                                    u15470 41C8                                      u15630 55DC  
                                    u13870 47D8                                      u13950 5B98  
                                    u14750 1C6A                                      u14670 1A4A  
                                    u14590 18CA                                      u14830 4B8A  
                                    u14910 235A                                      u13791 4624  
                                    u15471 41C4                                      u15631 55D8  
                                    u12991 3AF0                                      u13871 47D4  
                                    u13855 4786                                      u13927 5CCC  
                                    u14751 1C66                                      u14671 1A46  
                                    u14591 18C6                                      u14831 4B86  
                                    u14911 2356                                      u15527 5324  
                                    u15480 4220                                      u15640 562A  
                                    u13880 4802                                      u13960 5BAE  
                                    u14760 1C82                                      u14680 1B24  
                                    u14840 4BB4                                      u14920 23EC  
                                    u15481 421C                                      u15385 4F66  
                                    u15641 5626                                      u13881 47FE  
                                    u13961 5BAA                                      u14761 1C7E  
                                    u14681 1B20                                      u14841 4BB0  
                                    u14921 23E8                                      u14850 5650  
                                    u13970 34F2                                      u14770 1CE2  
                                    u14690 1B42                                      u14930 249E  
                                    u15490 52A6                                      u14851 564C  
                                    u15395 4F84                                      u14771 1CDC  
                                    u14691 1B3E                                      u14931 249A  
                                    u15491 52A2                                      u14860 5EB0  
                                    u13980 3520                                      u14780 1CE4  
                                    u14940 2508                                      u14861 5EAC  
                                    u13981 351C                                      u14941 2502  
                                    u15581 4A20                                      u13990 3542  
                                    u14790 1CFC                                      u14950 250A  
                                    u14870 223E                                      u15590 4A3E  
                                    u15910 3D14                                      u13895 4814  
                                    u13991 353E                                      u13975 34E8  
                                    u14791 1CF8                                      u14871 223A  
                                    u15591 4A3A                                      u15911 3D10  
                                    u15904 576C                                      u14960 2520  
                                    u14880 2296                                      u15905 5768  
                                    u16537 5632                                      u14961 251C  
                                    u14881 2292                                      u14970 25BE  
                                    u14890 22DA                                      u16547 4228  
                                    u14971 25BA                                      u14891 22D6  
                                    u14980 57C0                                      u14981 57BC  
                                    u16557 424A                                      u14990 5402  
                                    u14991 53FE                                      u16567 4266  
                                    u16577 5ECA                                      u15890 574A  
                                    u15891 5746                                      i2l111 5C88  
                                    i1l416 637C                                      i2l106 5C26  
                                    i2l116 618A                                      i2l233 5736  
                                    i2l228 6092                                      i2l262 5290  
                                    i2l630 36EE                                      i2l623 4A14  
                                    i2l627 4A18                                      i2l643 38A6  
                                    i2l664 38C2                                      i2l665 38C6  
                                    i2l770 5A0A                                      i2l763 59A2  
                                    i2l772 5A34                                      i2l765 59CC  
                                    i2l846 4540                                      i2l775 637E  
                                    i2l858 588A                                      i2l779 6262  
                          ___awdiv@counter 0084                                      _RCREG 000FAE  
                             vfpfcnvrt@fmt 00D1                                      _TMR0H 000FD7  
                                    _TMR0L 000FD6                                      _SPBRG 000FAF  
                                    _PORTA 000F80                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _PORTD 000F83  
                                    _PORTE 000F84                              _EUSART_Rx_ISR 6238  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              _EUSART_Tx_ISR 637E  
                                    _TXREG 000FAD              ?_lcd_4bits_send_enable_signal 0087  
   ADC_Get_Conversion_Blocking@ERRORSTATUS 008F                           __end_of_TMR0_ISR 5F30  
  async_config_baud_rate_gen@Baudrate_temp 00C0                                      _flags 004B  
                     _ADC_Start_Conversion 62DC                                      _pind0 0053  
                                    _pind1 0054                                      _pind2 0055  
                                    _fputc 4CB6                                      _fputs 6008  
                                    pad@fp 008D                                      _width 002D  
                                    _putch 637A                     ?_lcd_4bits_set_courser 008F  
                                    dtoa@d 009C                                      dtoa@i 00BC  
                                    dtoa@n 00B4                                      dtoa@p 00AE  
                                    dtoa@s 00B2                                      dtoa@w 00B0  
              __size_of_ADC_select_channel 003E                            __end_of_isupper 61C6  
                                    pclath 000FFA                                      tablat 000FF5  
               lcd_4bits_set_courser@colum 0092                   __size_of_calc_parity_odd 0068  
                 __size_of_async_Rx_config 00B2      __end_of_lcd_4bit_send_string_data_pos 5340  
   __size_of_lcd_4bit_send_string_data_pos 00AE              _lcd_4bit_send_string_data_pos 5292  
                                    ttemp5 0057                                      ttemp6 005A  
                                    ttemp7 005E                                      status 000FD8  
                                    wtemp8 0057                            __end_of_sprintf 5DFC  
                           ?___fpclassifyf 0080                            __end_of_tolower 5BC6  
                          __end_of_strncmp 4BDA             __end_of_EUSART_Async_Read_Data 38C8  
                 __size_of_async_Tx_config 0090      async_config_baud_rate_gen@_eusart_obj 00BB  
              _I2C_DefaultInterruptHandler 012F                            __initialization 588C  
                      _Rx_config_interrupt 53EC                               __end_of_main 6008  
                             __end_of_dtoa 34A8                         _flags@doprnt$F4763 0031  
               _eusart_Rx_InterruptHandler 003F             __size_of_GPIO_Pin_Toggle_Logic 0074  
                      i2lcd_send_4bits@lcd 000B              __end_of_GPIO_Pin_Toggle_Logic 57AC  
             ??_ADC_Get_Conversion_Results 0084                                  ??_ADC_ISR 0026  
                            _lat_registers 01B3                                     ??_main 002D  
                                   ??_dtoa 00A4                              __activetblptr 000003  
                           ?_EUSART_Rx_ISR 0001                             ?_EUSART_Tx_ISR 0001  
                                ??_RB4_ISR 0026                                  ??_RB5_ISR 0026  
                                ??_RB6_ISR 0026                                  ??_RB7_ISR 0026  
                    __end_of_battery_level 3D90                             _Timer0_Handler 62B6  
                    RB5_ISR@Handler_Select 0026                       ?_Rx_config_interrupt 002A  
                    ?_ADC_Start_Conversion 002A                                     ?_fputc 0080  
                                   ?_fputs 0089                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR1L 000FBE  
                                   _CCPR2L 000FBB                           ___awdiv@dividend 0080  
                  i2_lcd_4bits_set_courser 51E2                                     ?_putch 0001  
                                   i1l1131 00C6                                     i1l1141 0206  
                                   i1l1133 0106                                     i1l1214 6378  
                                   i1l1143 0246                                     i1l1135 0146  
                                   i1l1127 0046                                     i1l1145 0266  
                                   i1l1137 0186                                     i1l1129 0086  
                                   i1l1227 6366                                     i1l1139 01C6  
                                   i1l1236 634C                                     i1l1148 0276  
                                   i1l1245 6332                                     i1l1254 6318  
                                   i2l1110 48AA                                     i2l1112 48BA  
                                   i2l1121 491A                                     i2l1114 48DA  
                                   i2l1106 488A                                     i2l1116 48FA  
                                   i2l1108 489A                                     i2l1118 490A  
                                   i2l1521 5F2E                                     i1l5381 6350  
                                   i1l5383 6352                                     i1l5377 6376  
                                   i1l5387 6366                                     i2l1717 5F78  
                                   i2l1629 62DA                                     i2l8031 4430  
                                   i2l8041 4514                                     i2l8033 444E  
                                   i2l8035 4456                                     i2l8043 453E  
                                   i2l8027 441A                                     i2l8037 44B8  
                                   i2l8029 441E                                     i1l9821 6338  
                                   i1l9831 631E                                     i1l9825 634C  
                                   i1l9841 6304                                     i1l9819 6336  
                                   i1l9835 6332                                     i1l9829 631C  
                                   i1l9845 6318                                     i1l9839 6302  
                                   i2l8521 5A08                                     i2l8513 59D0  
                                   i2l8523 5A0C                                     i2l8533 5A32  
                                   i2l8525 5A1C                                     i2l9261 582E  
                                   i2l8527 5A1E                                     i2l8519 59DC  
                                   i2l8551 59B6                                     i2l8543 5974  
                                   i2l8471 6064                                     i2l9263 5832  
                                   i2l8529 5A2C                                     i2l8553 59C4  
                                   i2l8545 59A0                                     i2l8537 5968  
                                   i2l8473 6078                                     i2l8465 604E  
                                   i2l8481 56BE                                     i2l8641 5BC6  
                                   i2l9257 581C                                     i2l8547 59A4  
                                   i2l8651 4936                                     i2l8475 607E  
                                   i2l8467 604E                                     i2l8483 56D0  
                                   i2l8643 5BC6                                     i2l9259 581C  
                                   i2l8557 59CA                                     i2l8549 59B4  
                                   i2l8661 4986                                     i2l8653 4936  
                                   i2l8901 37E2                                     i2l8469 6060  
                                   i2l8485 56D4                                     i2l8645 5BD8  
                                   i2l8663 49A4                                     i2l8671 4A14  
                                   i2l8655 4948                                     i2l8903 37EE  
                                   i2l8911 3838                                     i2l8479 56BE  
                                   i2l8831 5C3A                                     i2l8647 5BDC  
                                   i2l8665 49C4                                     i2l8657 494C  
                                   i2l8921 3888                                     i2l8913 3858  
                                   i2l8905 37F6                                     i2l8833 5C3E  
                                   i2l8841 51F4                                     i2l8667 49DC  
                                   i2l8659 4966                                     i2l8915 386C  
                                   i2l8907 37FE                                     i2l8827 5C28  
                                   i2l8851 5240                                     i2l8843 51F8  
                                   i2l8669 49FC                                     i2l8861 6264  
                                   i2l8917 3878                                     i2l8909 3818  
                                   i2l8829 5C28                                     i2l8845 51FE  
                                   i2l8837 51E2                                     i2l9581 5F6C  
                                   i2l9813 5EE6                                     i2l8863 6264  
                                   i2l8919 3880                                     i2l8927 38A6  
                                   i2l8871 36BE                                     i2l8847 5214  
                                   i2l8855 5256                                     i2l8839 51E2  
                                   i2l8943 6114                                     i2l9575 62B6  
                                   i2l9815 5EE8                                     i2l8865 6276  
                                   i2l8929 38B4                                     i2l8881 3716  
                                   i2l8873 36C6                                     i2l8849 522A  
                                   i2l9577 5F30                                     i2l8945 6114  
                                   i2l9817 5F16                                     i2l8867 627A  
                                   i2l8891 378A                                     i2l8883 3730  
                                   i2l8875 36D8                                     i2l8963 6150  
                                   i2l9579 5F54                                     i2l8947 6126  
                                   i2l8893 3792                                     i2l8885 374A  
                                   i2l8877 36EA                                     i2l8965 6150  
                                   i2l8949 612A                                     i2l8895 379A  
                                   i2l8887 376A                                     i2l8879 36FC  
                                   i2l8967 6162                                     i2l8889 377E  
                                   i2l8897 37AE                                     i2l8969 6166  
                                   i2l9785 6238                                     i2l8899 37CE  
                                   i2l9787 624A                             _Movement_State 0043  
                                   _SPBRGH 000FB0                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                   calc_parity_odd@l_counter 0005  
                         __end_of___xxtofl 3A80                   ?i2_GPIO_Pin_Toggle_Logic 0001  
       lcd_4bit_send_string_data_pos@colum 0099        __size_of_ADC_Get_Conversion_Results 00BC  
                                   _Timer0 01ED                     ?_lcd_4bit_send_command 008B  
                             vfprintf@cfmt 00F1            ??_GPIO_Pin_Direction_Initialize 0080  
                                   ___flge 464A                                     ___fleq 5340  
                                ??___aodiv 002A                                  ??___fladd 00B3  
           ADC_Get_Conversion_Results@_adc 0080                                  ??___aomod 002A  
                                   ___wmul 628E                                  ??___fldiv 009A  
                                ??___awdiv 002A                                  ??___flneg 002A  
                 ??i2_GPIO_Pin_Write_Logic 0004                                  ??___awmod 002A  
                                ??___flmul 0088                                  ??___flsub 002C  
                                ??___fltol 0084                __end_of_GPIO_Pin_Initialize 5E4C  
                                   _efgtoa 1090                                     _floorf 34A8  
                                   _memset 3D90                                     clear_0 58D2  
                                   clear_1 58DE                                     clear_2 58EA  
              ?_EUSART_Async_Transmit_Data 0006                           ___awdiv@quotient 0086  
                          ___awmod@divisor 0082                            ___awmod@counter 002A  
                                   pad@buf 008F                                     dtoa@fp 009A  
                                   _strcpy 5C8A                                     _strlen 6200  
                        ?i2_lcd_send_4bits 000B                                     fputc@c 0080  
                   __end_of_Timer0_Handler 62DC                                     fputs@c 002A  
                                   fputs@i 002B                               __pdataCOMRAM 0048  
                                   fputs@s 0089                            ___fpclassifyf@e 0088  
                                ?_ADC_Init 0082                            ___fpclassifyf@u 008A  
                          ___fpclassifyf@x 0080                               __mediumconst 0000  
                       ??i2_lcd_send_4bits 000E      EUSART_Async_Transmit_Data@_eusart_obj 0006  
                                   tblptrh 000FF7                      ??_Rx_config_interrupt 002C  
                                ??_isupper 0080                                     tblptrl 000FF6  
                                   tblptru 000FF8        __end_of_ADC_Get_Conversion_Blocking 563C  
              _ADC_Get_Conversion_Blocking 55B6                                     putch@c 0001  
                         __end_of_vfprintf 5966                                  ??_sprintf 002D  
                                ??_tolower 0086                                  ??_strncmp 002A  
                               ___flge@ff1 0099                                 ___flge@ff2 009D  
                          ??___fpclassifyf 0084                               ___xxtofl@arg 008E  
                             ___xxtofl@exp 008D                               ___xxtofl@val 0084  
                               ___fleq@ff1 0080                                 ___fleq@ff2 0084  
             __size_of_lcd_4bit_initialize 0138                                 __accesstop 0080  
                  __end_of__initialization 58F0   __end_of_Bluetooth_Send_Data_Non_Blocking 628E  
__size_of_Bluetooth_Send_Data_Non_Blocking 002A         ??_Bluetooth_Send_Data_Non_Blocking 0010  
        ?_Bluetooth_Send_Data_Non_Blocking 000D           _Bluetooth_Send_Data_Non_Blocking 6264  
                                ?_INT1_ISR 0001                                 ___flneg@f1 0080  
            ??_ADC_Get_Conversion_Blocking 008E                              ___rparam_used 000001  
                 __end_of_calc_parity_even 5A36                                 ___fltol@f1 0080  
                         ??_lcd_send_4bits 002D                 _I2C_Report_Write_Collision 012B  
               ?i2_lcd_4bit_send_char_data 000F                    _lcd_4bit_send_char_data 5A36  
       __size_of_convert_float32_to_string 00E2             ?_lcd_4bit_send_string_data_pos 0096  
                  i2_lcd_4bit_send_command 5BC6                          ??_calc_parity_odd 0001  
                           __pcstackCOMRAM 0001                          ??_async_Rx_config 002D  
    ADC_Get_Conversion_Results@ERRORSTATUS 002A                               __pidataBANK1 5E4C  
                                ?_TMR0_ISR 0001                             _battery_volt_f 0117  
                           _battery_string 014F                              __end_of_fputc 4D82  
                            __end_of_fputs 604E                          ??_async_Tx_config 002C  
                            __end_of_putch 637C                i2GPIO_Pin_Write_Logic@logic 0003  
                          ??_EUSART_Rx_ISR 0020                            ??_EUSART_Tx_ISR 0001  
                 lcd_4bit_send_command@lcd 008B                ?_async_config_baud_rate_gen 00BB  
                          ?_Timer0_Handler 0001                                 ??_ADC_Init 0084  
                   ??_ADC_Start_Conversion 002C                  ??i2_lcd_4bits_set_courser 0017  
                calc_parity_even@l_counter 0005               ?_lcd_4bit_send_char_data_pos 001A  
                                  ??_fputc 0084                                    ??_fputs 002A  
                                  ??_putch 002A            ADC_Start_Conversion@ERRORSTATUS 002C  
          __end_ofi2_GPIO_Pin_Toggle_Logic 588C                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                      _INT0_InterruptHandler 0129  
                               ??_INT1_ISR 0026          i2lcd_4bits_send_enable_signal@lcd 000B  
          lcd_4bits_send_enable_signal@lcd 0087             __size_of_application_intialize 0064  
            __end_of_application_intialize 5B00                 ?_adc_select_result_formate 002A  
                 _eusart_frameerr_CallBack 0131                                 _datarecive 0047  
              __end_of_InterruptManagerLow 0286                       calc_parity_even@data 0003  
        __end_ofi2_lcd_4bit_send_char_data 5C8A         lcd_4bit_initialize@pin_lcd_counter 0093  
                                  ?___flge 0099                                    ?___fleq 0080  
        __end_of_convert_float32_to_string 4AFC                                    ?___wmul 0080  
                               ??_TMR0_ISR 000E         __end_of_ADC_Get_Conversion_Results 4FCC  
               _ADC_Get_Conversion_Results 4F10                                    ?_efgtoa 00C3  
          __size_ofi2_GPIO_Pin_Write_Logic 0128                                    ?_floorf 00AB  
                                  _ADC_ISR 637C                                    ?_memset 0080  
    __end_of_GPIO_Pin_Direction_Initialize 41B4     __size_of_GPIO_Pin_Direction_Initialize 0146  
            _GPIO_Pin_Direction_Initialize 406E                      _tmr0_InterruptHandler 0035  
                                  ?_strcpy 0080                                    ?_strlen 002A  
                                  i1l10501 00B0                                    i1l10511 00F0  
                                  i1l10503 00BE                                    i1l10521 0130  
                                  i1l10513 00FE                                    i1l10505 00C0  
                                  i1l10531 0170                                    i1l10523 013E  
                                  i1l10515 0100                                    i1l10507 00D4  
                                  i1l10541 01B0                                    i1l10533 017E  
                                  i1l10525 0140                                    i1l10517 0114  
                                  i1l10509 00E2                                    i1l10551 01F0  
                                  i1l10543 01BE                                    i1l10535 0180  
                                  i1l10527 0154                                    i1l10519 0122  
                                  i1l10561 0230                                    i1l10553 01FE  
                                  i1l10545 01C0                                    i1l10537 0194  
                                  i1l10529 0162                                    i1l10481 0026  
                                  i1l10571 0274                                    i1l10563 023E  
                                  i1l10555 0200                                    i1l10547 01D4  
                                  i1l10539 01A2                                    i1l10491 0070  
                                  i1l10483 0034                                    i1l10565 0240  
                                  i1l10557 0214                                    i1l10549 01E2  
                                  i1l10493 007E                                    i1l10485 0042  
                                  i1l10567 0254                                    i1l10559 0222  
                                  i1l10495 0080                                    i1l10487 0054  
                                  i1l10569 0262                                    i1l10497 0094  
                                  i1l10489 0062                                    i1l10499 00A2  
                                  i2l10451 4886                                    i2l10461 48B8  
                                  i2l10453 4898                                    i2l10471 48F6  
                                  i2l10447 486A                                    i2l10473 4908  
                                  i2l10465 48C8                                    i2l10457 48A8  
                                  i2l10449 4878                                    i2l10467 48D6  
                                  i2l10477 4918                                    i2l10469 48E8  
                                  i2l14081 4528                                    _RB4_ISR 634E  
                                  i2l14079 526A                                    _RB5_ISR 6334  
                                  _RB6_ISR 631A                                    _RB7_ISR 6300  
                                ?___xxtofl 0084                  _RB6_InterruptHandler_HIGH 0123  
                  ??_lcd_4bits_set_courser 0093                         __size_of_vfpfcnvrt 042C  
            __size_of_InterruptManagerHigh 492E                  ECU_DC_Motor_Stop@dc_motor 000B  
            __size_of_GPIO_Pin_Write_Logic 012E             EUSART_Async_Transmit_Data@data 0008  
                       __size_of_usart_isr 004A                             _tris_registers 01BD  
                 _RB6_InterruptHandler_LOW 0121                  ??_lcd_4bit_send_char_data 002D  
                ??i2_lcd_4bit_send_command 0012              adc_select_result_formate@_adc 002A  
                                  __Hparam 0000                 _eusart_overrunerr_CallBack 0133  
                             ADC_Init@_adc 0082                                    __Lparam 0000  
                          __size_of___flge 0106                            __size_of___fleq 00AC  
                                  ___aodiv 3A80                                    ___fladd 1D56  
                                  ___aomod 3F08                                    ___fldiv 2E28  
                                  ___awdiv 4E4A                                    ___flneg 61C6  
                                  ___awmod 507E                                    ___flmul 2644  
                                  ___flsub 5F7A                                    ___fltol 4542  
                          __size_of___wmul 0028                                  ?_vfprintf 00EB  
                             __psmallconst 1000                            __size_of_efgtoa 0CC6  
                          __size_of_floorf 0216                                    __pcinit 588C  
                          __size_of_memset 0178        ADC_Get_Conversion_Blocking@_channel 008B  
                                  __ramtop 1000                                    __ptext0 5FC2  
                                  __ptext1 3C0A                                    __ptext2 5292  
                                  __ptext3 4FCC                                    __ptext4 5A36  
                                  __ptext5 4A1A                                    __ptext6 5DA4  
                                  __ptext7 58FA                                    __ptext8 2218  
                                  __ptext9 4AFC               i2lcd_4bit_send_char_data@lcd 000F  
                                _T0CONbits 000FD5                            __size_of_strcpy 0060  
                          __size_of_strlen 0038                                    _counter 0041  
                             __size_of_abs 0042                               __size_of_pad 00C8  
                               ??___xxtofl 0088                                  _T3CONbits 000FB1  
                                  _gpstemp 0046                           ___awmod@dividend 0080  
                        _EUSART_Async_Init 5D48                                    _isupper 618C  
                                  efgtoa@c 00C9                                    efgtoa@d 0170  
                                  efgtoa@e 0188                                    efgtoa@f 00C5  
                                  efgtoa@g 0184                                    efgtoa@h 017A  
                                  efgtoa@i 0182                                    efgtoa@l 017E  
                                  efgtoa@m 016A                                    efgtoa@n 018A  
                                  efgtoa@p 0174                                    efgtoa@t 0164  
                                  efgtoa@u 018C                                    efgtoa@w 0176  
               __end_of_ADC_select_channel 6114                         ?_EUSART_Async_Init 00C8  
                                  _sprintf 5DA4                                    _tolower 5B64  
                   i2_GPIO_Pin_Write_Logic 441A                                    _strncmp 4AFC  
                           __pintcode_body 4850                       end_of_initialization 58F0  
                        lcd_send_4bits@lcd 0087       __end_of_adc_select_voltage_reference 5B64  
    __size_of_adc_select_voltage_reference 0064               _adc_select_voltage_reference 5B00  
                                  floorf@e 00B9                                    floorf@m 00B5  
                                  floorf@u 00BB                                    floorf@x 00AB  
           calc_parity_even@number_of_ones 0004                                    fputc@fp 0082  
                                i1u1200_20 0194                                  i1u1200_21 0190  
                                i1u1201_20 01A2                                  i1u1201_21 019E  
                                i1u1210_20 0230                                  i1u1202_20 01B0  
                                i1u1210_21 022C                                  i1u1202_21 01AC  
                                i1u1211_20 023E                                  i1u1203_20 01BE  
                                i1u1211_21 023A                                  i1u1203_21 01BA  
                                i1u1212_20 0254                                  i1u1204_20 01D4  
                                i1u1212_21 0250                                  i1u1204_21 01D0  
                                i1u1213_20 0262                                  i1u1205_20 01E2  
                                  memset@c 0082                                  i1u1213_21 025E  
                                i1u1205_21 01DE                                  i1u1214_20 0274  
                                i1u1206_20 01F0                                    memset@k 0086  
                                i1u1214_21 0270                                  i1u1206_21 01EC  
                                  memset@n 0084                                  i1u1207_20 01FE  
                                  memset@s 0088                                  i1u1207_21 01FA  
                                i1u1208_20 0214                                  i1u1208_21 0210  
                                i1u1209_20 0222                                  i1u1209_21 021E  
                                i1u1090_20 6314                                  i1u1090_21 6310  
                                i1u1180_20 0054                                  i1u1180_21 0050  
                                i1u1181_20 0062                                  i1u1181_21 005E  
                                  int_func 4850                                  i1u1190_20 00F0  
                                i1u1182_20 0070                                  i1u1190_21 00EC  
                                i1u1182_21 006C                                    fputs@fp 008B  
                                i1u1191_20 00FE                                  i1u1183_20 007E  
                                i1u1191_21 00FA                                  i1u1183_21 007A  
                                i1u1088_20 6348                                  i1u1192_20 0114  
                                i1u1184_20 0094                                  i1u1088_21 6344  
                                i1u1192_21 0110                                  i1u1184_21 0090  
                                i1u1089_20 632E                                  i1u1193_20 0122  
                                i1u1185_20 00A2                                  i1u1089_21 632A  
                                i1u1193_21 011E                                  i1u1185_21 009E  
                                i1u1194_20 0130                                  i1u1186_20 00B0  
                                i1u1178_20 0034                                  i1u1194_21 012C  
                                i1u1186_21 00AC                                  i1u1178_21 0030  
                                i1u1195_20 013E                                  i1u1187_20 00BE  
                                i1u1179_20 0042                                  i1u1195_21 013A  
                                i1u1187_21 00BA                                  i1u1179_21 003E  
                                i1u1196_20 0154                                  i1u1188_20 00D4  
                                i1u1196_21 0150                                  i1u1188_21 00D0  
                                i1u1197_20 0162                                  i1u1189_20 00E2  
                                i1u1197_21 015E                                  i1u1189_21 00DE  
                                i1u1198_20 0170                                  i1u1198_21 016C  
                                i1u1199_20 017E                                  i1u1199_21 017A  
                                i2u1020_44 584E                                  i2u1020_45 584A  
                      ??_EUSART_Async_Init 002D                    ??_lcd_4bit_send_command 002D  
                                i2u1019_40 582E                                  i2u1019_41 582A  
                                i2u1170_40 48A8                                  i2u1170_41 48A4  
                                i2u1171_40 48B8                                  i2u1171_41 48B4  
                                i2u1172_40 48C8                                  i2u1172_41 48C4  
                                i2u1173_40 48D6                                  i2u1173_41 48D2  
                                i2u1078_40 624A                                  i2u1086_40 5F16  
                                i2u1174_40 48E8                                  i2u1078_41 6246  
                                i2u1086_41 5F12                                  i2u1174_41 48E4  
                                i2u1175_40 48F6                                  i2u1167_40 4878  
                                i2u1175_41 48F2                                  i2u1167_41 4874  
                                i2u1079_48 6250                                  i2u1087_48 5F1C  
                                i2u1176_40 4908                                  i2u1168_40 4886  
                                i2u1079_49 6262                                  i2u1087_49 5F2E  
                                i2u1176_41 4904                                  i2u1168_41 4882  
                                i2u1177_40 4918                                  i2u1169_40 4898  
                                i2u1177_41 4914                                  i2u1169_41 4894  
        async_config_baud_rate_gen@ret_val 00BF                                  i2u1658_47 607A  
                        __end_of_vfpfcnvrt 2644                                 efgtoa@mode 0179  
                               efgtoa@sign 0172                                  _RCSTAbits 000FAB  
                         _W3_Motor_Control 004E                                    postdec1 000FE5  
                                  postdec2 000FDD       __size_of_lcd_4bit_send_char_data_pos 003C  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                                 ??_vfprintf 002D  
                 ADC_Start_Conversion@_adc 002A                                    strcpy@d 0086  
                                  strlen@a 0080                                    strcpy@s 0084  
                                  strlen@s 002A                        _lcd_4bit_initialize 41B4  
                        __end_of_usart_isr 5F7A           __size_ofi2_GPIO_Pin_Toggle_Logic 0070  
          __end_of_lcd_4bit_send_char_data 5A9C                      _INT1_InterruptHandler 003D  
                                _PORTBbits 000F81                      _GPIO_Pin_Toggle_Logic 5738  
                __end_of_EUSART_Async_Init 5DA4                                ___fladd@grs 00BA  
               lcd_4bit_send_char_data@lcd 008B             ?_GPIO_Pin_Direction_Initialize 002A  
     convert_float32_to_string@temp_string 019E                              ___xxtofl@sign 008C  
                                _TRISBbits 000F93                                  _TRISCbits 000F94  
                    RB4_ISR@Handler_Select 0026                      RB7_ISR@Handler_Select 0026  
                              ___fldiv@grs 00A5                                ___fldiv@rem 009E  
                        __size_of_ADC_Init 0098                            _calc_parity_odd 5966  
                          _async_Rx_config 5130            lcd_4bit_send_char_data_pos@data 001E  
                     ?_lcd_4bit_initialize 008F                                ___flmul@grs 008E  
                              _CCP1CONbits 000FBD                  __size_ofi2_lcd_send_4bits 007A  
                          _async_Tx_config 5526                                _CCP2CONbits 000FBA  
                                _TXSTAbits 000FAC              ADC_select_channel@ERRORSTATUS 0085  
                        ?_calc_parity_even 0001                          __size_of_INT1_ISR 0004  
              ??i2_lcd_4bit_send_char_data 0012                 EUSART_Async_Read_Data@data 0008  
                   __size_of_battery_level 0186                         ??_calc_parity_even 0001  
                   async_Rx_config@_rx_obj 0080              convert_uint16_to_string@F3194 0109  
                           __end_of___flge 4750                             __end_of___fleq 53EC  
                         ??_Timer0_Handler 000E                                vfpfcnvrt@ap 00D3  
                              vfpfcnvrt@ct 00E7                                vfpfcnvrt@fp 00CF  
                              vfpfcnvrt@ll 00D9                             __end_of___wmul 62B6  
                              _BAUDCONbits 000FB8                              __pidataCOMRAM 6368  
                           __end_of_efgtoa 1D56                          __size_of_TMR0_ISR 004A  
              __end_of_Rx_config_interrupt 548E                             __end_of_floorf 36BE  
                   async_Rx_config@ret_val 0082                                 floorf@F527 010F  
                           __end_of_memset 3F08               __size_of_GPIO_Pin_Initialize 0050  
                 EUSART_Async_Init@ret_val 00CA                             __end_of_strcpy 5CEA  
                           __end_of_strlen 6238                        start_initialization 588C  
        EUSART_Async_Read_Data@_eusart_obj 0006                 i2lcd_4bits_set_courser@lcd 0013  
                              __end_of_abs 60D6                 i2lcd_4bits_set_courser@row 0015  
          GPIO_Pin_Write_Logic@_pin_config 002A          i2GPIO_Pin_Write_Logic@_pin_config 0001  
                              __end_of_pad 4E4A                   ??_EUSART_Async_Read_Data 000A  
                    ??_lcd_4bit_initialize 0091                      __end_of___fpclassifyf 4850  
              ??_adc_select_result_formate 002C                                vfprintf@fmt 00ED  
                                 ??___flge 00A1                                   ??___fleq 0088  
           GPIO_Pin_Initialize@_pin_config 0087                                   ??___wmul 002A  
              ?_ADC_Get_Conversion_Results 0080                                   ??_efgtoa 00CA  
                              __pdataBANK1 01A9                                   ??_floorf 00AF  
                                 ?_ADC_ISR 0001                     ?_GPIO_Pin_Toggle_Logic 002A  
                                 ??_memset 002A                                 memset@dest 0080  
             lcd_4bit_send_command@command 008D                     ADC_select_channel@_adc 0082  
                                 ??_strcpy 002A                                   ??_strlen 002C  
                    __end_of_EUSART_Rx_ISR 6264                                  ___fladd@a 00AF  
                                ___fladd@b 00AB                 __size_of_EUSART_Async_Init 005C  
                    __end_of_EUSART_Tx_ISR 6380                                  ___fldiv@a 0096  
                                ___fldiv@b 0092                                   ?_RB4_ISR 0001  
                                 ?_RB5_ISR 0001                                   ?_RB6_ISR 0001  
                                 ?_RB7_ISR 0001                                  ___flmul@a 0084  
                                ___flmul@b 0080                                __pbssCOMRAM 002D  
                  __end_of_calc_parity_odd 59CE                                  ___flsub@a 00BF  
                i2_lcd_4bit_send_char_data 5C28                                  ___flsub@b 00BB  
                  __end_of_async_Rx_config 51E2                              __pcstackBANK0 0080  
                            __pcstackBANK1 0158                           ___aodiv@dividend 0080  
                            _battery_level 3C0A                          __size_of___xxtofl 01B8  
            __size_of_ADC_Start_Conversion 0024             __size_of_lcd_4bits_set_courser 00B2  
                  __end_of_async_Tx_config 55B6              __end_of_lcd_4bits_set_courser 507E  
             i2lcd_send_4bits@data_command 000D                      _INT2_InterruptHandler 0127  
           ??_lcd_4bits_send_enable_signal 002D                                _battery_adc 01F3  
                      calc_parity_odd@data 0003                                _efgtoa$4811 015C  
                              _efgtoa$4806 0158                                _efgtoa$4815 015E  
                              _efgtoa$4807 015A                                _efgtoa$4816 0160  
                              _efgtoa$4817 0162               __end_of_InterruptManagerHigh 4936  
                _W1_W5_W2_W6_Motor_Control 0050                      _application_intialize 5A9C  
                                _dtoa$4782 00AC                                  __pintcode 0008  
                                 ?___aodiv 0080               __end_of_GPIO_Pin_Write_Logic 441A  
                                 ?___fladd 00AB                                   ?___aomod 0080  
                                 ?___fldiv 0092                                   ?___awdiv 0080  
                         ___aodiv@quotient 0092                                   ?___flneg 0080  
                                __uart_obj 01C7                                   ?___awmod 0080  
                                 ?___flmul 0080    adc_channel_pin_config_as_input@_channel 0081  
        i2GPIO_Pin_Write_Logic@ERRORSTATUS 000A                                   ?___flsub 00BB  
          GPIO_Pin_Write_Logic@ERRORSTATUS 0086                                   ?___fltol 0080  
               ?_convert_float32_to_string 0198                 Rx_config_interrupt@_rx_obj 002A  
                  i2_GPIO_Pin_Toggle_Logic 581C                                __pintcodelo 0018  
             __size_of_InterruptManagerLow 026E                    __size_of_lcd_send_4bits 0082  
                        __size_of_vfprintf 006C                   ?i2_lcd_4bits_set_courser 0013  
                _adc_select_result_formate 5CEA                                __smallconst 1000  
                _RB4_InterruptHandler_HIGH 003B                 Rx_config_interrupt@ret_val 002C  
                                 _CCP1_Obj 01DD                                   _CCP2_Obj 01D3  
                  ?i2_GPIO_Pin_Write_Logic 0001                                   _ADC_Init 548E  
                           ?_battery_level 0001                  _RB7_InterruptHandler_HIGH 011F  
                                 ?_isupper 002A                                   ?_sprintf 0190  
                                 ?_tolower 0084                             __size_of_fputc 00CC  
                           __size_of_fputs 0046          EUSART_Async_Read_Data@l_temp_data 0013  
                   async_Tx_config@_tx_obj 002A                                   ?_strncmp 0080  
           GPIO_Pin_Initialize@ERRORSTATUS 0089            __size_of_EUSART_Async_Read_Data 020A  
                           __size_of_putch 0002             convert_float32_to_string@F3205 0100  
                 _RB5_InterruptHandler_LOW 0125                                   _INT1_ISR 6376  
                           ___wmul@product 002A                           i2_lcd_send_4bits 56BE  
                   async_Tx_config@ret_val 002C                 lcd_send_4bits@data_command 0089  
                                 _IPR1bits 000F9F                                   _IPR2bits 000FA2  
                                 _PIE1bits 000F9D                                   _PIE2bits 000FA0  
   __end_ofi2_lcd_4bits_send_enable_signal 6094    __size_ofi2_lcd_4bits_send_enable_signal 0046  
           i2_lcd_4bits_send_enable_signal 604E             __size_of_lcd_4bit_send_command 0070  
                       _ADC_select_channel 60D6                                   i1u427_20 6362  
                                 i1u427_21 635E              __end_of_lcd_4bit_send_command 581C  
                                 _PIR1bits 000F9E                                   _PIR2bits 000FA1  
                                 i2u820_40 444E                                   i2u820_41 444A  
                                 i2u901_40 6060                                   i2u901_41 605C  
                                 i2u821_44 4472                                   i2u821_45 446E  
                                 i2u910_40 59A0                                   i2u902_40 56D0  
                                 i2u910_41 599C                                   i2u902_41 56CC  
                                 i2u822_44 44D4                                   i2u822_45 44D0  
                                 i2u911_40 59B4                                   i2u911_41 59B0  
                                 i2u912_40 59C4                                   i2u912_41 59C0  
                                 i2u905_44 59EE                                   i2u905_45 59EA  
                                 i2u906_40 5A08                                   i2u906_41 5A04  
                                 i2u930_45 49D6                                   i2u930_47 49D8  
                                 i2u907_40 5A1C                                   i2u931_40 49FC  
                                 i2u819_40 4430                                   i2u907_41 5A18  
                                 i2u931_41 49F8                                   i2u819_41 442C  
                                 i2u908_40 5A2C                                   i2u924_40 5BD8  
                                 i2u908_41 5A28                                   i2u924_41 5BD4  
                                 i2u932_45 4A0E                                   i2u932_47 4A10  
                                 i2u925_40 4948                                   i2u925_41 4944  
                                 i2u909_44 5986                                   i2u909_45 5982  
                                 i2u926_40 4966                                   i2u926_41 4962  
                                 i2u927_40 4986                                   i2u927_41 4982  
                                 i2u960_40 3716                                   i2u960_41 3712  
                                 i2u928_45 499E                                   i2u928_47 49A0  
                                 i2u929_40 49C4                                   i2u961_40 374A  
                                 i2u929_41 49C0                                   i2u961_41 3746  
                                 i2u970_40 38B4                                   i2u962_40 376A  
                                 i2u954_40 5C3A                                   i2u970_41 38B0  
                                 i2u962_41 3766                                   i2u954_41 5C36  
                                 i2u971_40 38C2                                   i2u963_40 377E  
                                 i2u955_40 51F4                                   i2u971_41 38BE  
                                 i2u963_41 377A                                   i2u955_41 51F0  
                                 i2u956_40 6276                                   i2u964_40 37CE  
                                 i2u956_41 6272                                   i2u964_41 37CA  
                                 i2u965_40 37E2                                   i2u957_40 36D8  
                                 i2u973_40 6126                                   i2u965_41 37DE  
                                 i2u957_41 36D4                                   i2u973_41 6122  
                                 i2u966_40 3818                                   i2u958_40 36EA  
                                 i2u966_41 3814                                   i2u958_41 36E6  
                                 i2u967_40 3858                                   i2u959_40 36FC  
                                 i2u975_40 6162                                   i2u967_41 3854  
                                 i2u959_41 36F8                                   i2u975_41 615E  
                                 _RCONbits 000FD0                                   i2u968_40 386C  
                                 i2u968_41 3868                                   i2u969_40 38A2  
                                 i2u969_41 389E             convert_float32_to_string@value 0198  
                                 _TMR0_ISR 5EE6                           _W4_Motor_Control 004C  
                      ?_ADC_select_channel 0082                                  _vfpfcnvrt 2218  
              _I2C_Report_Receive_Overflow 012D                           __size_of_ADC_ISR 0002  
             ??_EUSART_Async_Transmit_Data 000A                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                                 _ADCON2bits 000FC0  
                        ___wmul@multiplier 0080             __end_ofi2_GPIO_Pin_Write_Logic 4542  
           lcd_4bit_send_char_data_pos@lcd 001A             lcd_4bit_send_char_data_pos@row 001C  
                                _usart_isr 5F30                           ?_calc_parity_odd 0001  
                         __size_of_RB4_ISR 001A                           __size_of_RB5_ISR 001A  
                         __size_of_RB6_ISR 001A                           ?_async_Rx_config 0080  
                         __size_of_RB7_ISR 001A        __end_of_lcd_4bit_send_char_data_pos 618C  
              _lcd_4bit_send_char_data_pos 6150                                 vfpfcnvrt@c 00EA  
                               vfpfcnvrt@f 00E3               ?_ADC_Get_Conversion_Blocking 0089  
                         ?_async_Tx_config 002A                                _INTCON2bits 000FF1  
                              _INTCON3bits 000FF0                   ?_lcd_4bit_send_char_data 008B  
                                copy_data0 58A0                                  copy_data1 58C0  
                     ??_ADC_select_channel 002C                   ?i2_lcd_4bit_send_command 000F  
              _EUSART_Async_Read_Data$1885 000D                _EUSART_Async_Read_Data$1886 000F  
              _EUSART_Async_Read_Data$1887 0011              ??_lcd_4bit_send_char_data_pos 001F  
                   ?_application_intialize 0001                        _GPIO_Pin_Initialize 5DFC  
                                 __Hrparam 0000           lcd_4bit_send_string_data_pos@lcd 0096  
         lcd_4bit_send_string_data_pos@row 0098        __size_of_EUSART_Async_Transmit_Data 00E4  
         lcd_4bit_send_string_data_pos@str 009A                                 vfprintf@ap 00EF  
                                 __Lrparam 0000                                 vfprintf@fp 00EB  
                ??i2_GPIO_Pin_Toggle_Logic 0003            __end_ofi2_lcd_4bits_set_courser 5292  
                   _EUSART_Async_Read_Data 36BE                           __size_of___aodiv 018A  
                         __size_of___fladd 04C2                           __size_of___aomod 0166  
                         __size_of___fldiv 039C                           __size_of___awdiv 00C6  
                         __size_of___flneg 003A                           __size_of___awmod 00B2  
                         __size_of___flmul 042C                           __size_of___flsub 0048  
                         __size_of___fltol 0108                                 ?_vfpfcnvrt 00CF  
                GPIO_Pin_Write_Logic@logic 002C                            ___aodiv@divisor 0088  
                            _preloaded_val 0033                            ___aodiv@counter 0090  
             ??_async_config_baud_rate_gen 00BD                            ??_battery_level 002D  
                       ___fpclassifyf@F465 0113                  __size_of_calc_parity_even 0068  
                     ?_GPIO_Pin_Initialize 0087                                 sprintf@fmt 0192  
                                 ___xxtofl 38C8                                 ?_usart_isr 0001  
                                 _datasend 004A                      RB6_ISR@Handler_Select 0026  
                     _InterruptManagerHigh 0008                   lcd_4bits_set_courser@lcd 008F  
          _async_config_baud_rate_gen$5368 00C4                   lcd_4bits_set_courser@row 0091  
                                 __ptext10 1090                                   __ptext11 5B64  
                                 __ptext20 5340                                   __ptext12 618C  
                                 __ptext21 507E                                   __ptext13 5C8A  
                                 __ptext30 3F08                                   __ptext22 4E4A  
                                 __ptext14 34A8                                   __ptext31 3A80  
                                 __ptext23 31C4                                   __ptext15 4750  
                                 __ptext40 57AC                                   __ptext32 3D90  
                                 __ptext24 4D82                                   __ptext16 5F7A  
                                 __ptext41 563C                                   __ptext33 628E  
                                 __ptext25 6200                                   __ptext17 61C6  
                                 __ptext50 2E28                                   __ptext42 5E9C  
                                 __ptext34 55B6                                   __ptext26 6008  
                                 __ptext18 2644                                   __ptext51 1D56  
                                 __ptext43 5DFC                                   __ptext35 60D6  
                                 __ptext27 4CB6                                   __ptext19 464A  
                                 __ptext52 5526                                   __ptext44 42EC  
                                 __ptext36 62DC                                   __ptext28 637A  
                                 __ptext61 6300                                   __ptext53 5130  
                                 __ptext45 406E                                   __ptext37 4F10  
                                 __ptext29 6094                                   __ptext70 6114  
                                 __ptext62 631A                                   __ptext54 53EC  
                                 __ptext46 5D48                                   __ptext38 5A9C  
                                 __ptext71 637E                                   __ptext63 6334  
                                 __ptext55 548E                                   __ptext47 2A70  
                                 __ptext39 41B4                                   __ptext80 604E  
                                 __ptext72 6238                                   __ptext64 634E  
                                 __ptext56 5B00                                   __ptext48 38C8  
                                 __ptext81 441A                                   __ptext73 5F30  
                                 __ptext65 6376                                   __ptext57 5CEA  
                                 __ptext49 4542                                   __ptext82 36BE  
                                 __ptext74 581C                                   __ptext66 637C  
                                 __ptext58 4BDA                                   __ptext83 6264  
                                 __ptext75 6150                                   __ptext59 5738  
                                 __ptext84 4936                                   __ptext76 51E2  
                                 __ptext68 5EE6                                   __ptext85 5966  
                                 __ptext77 5BC6                                   __ptext69 62B6  
                                 __ptext86 59CE                                   __ptext78 5C28  
                                 __ptext87 0000                                   __ptext79 56BE  
                         __size_of_isupper 003A  Bluetooth_Send_Data_Non_Blocking@_uart_obj 000D  
            i2lcd_4bit_send_char_data@data 0011                       _GPIO_Pin_Write_Logic 42EC  
                         __size_of_sprintf 0058                           __size_of_tolower 0062  
                        _ECU_DC_Motor_Stop 6114                                 strcpy@dest 0080  
                         __size_of_strncmp 00DE         __size_ofi2_lcd_4bit_send_char_data 0062  
                                 _latitude 0142                              __size_of_main 0046  
                            __size_of_dtoa 02E4                         ?_ECU_DC_Motor_Stop 000B  
                                 _longtude 0135                                   _selector 0052  
  __end_of_adc_channel_pin_config_as_input 4CB6   __size_of_adc_channel_pin_config_as_input 00DC  
        ??_adc_channel_pin_config_as_input 002A           ?_adc_channel_pin_config_as_input 0001  
          _adc_channel_pin_config_as_input 4BDA                                   efgtoa@fp 00C3  
                                 efgtoa@ne 0168                                   efgtoa@pp 0166  
                                 efgtoa@ou 016C        __size_of_async_config_baud_rate_gen 03B8  
                  ??_GPIO_Pin_Toggle_Logic 0080                        ??_ECU_DC_Motor_Stop 000D  
                                 int$flags 0056                                   _vfprintf 58FA  
                           _lcd_send_4bits 563C                           ___aomod@dividend 0080  
                    ??_GPIO_Pin_Initialize 002D                             _vfpfcnvrt$4835 00E1  
                               _INTCONbits 000FF2              calc_parity_odd@number_of_ones 0004  
              __end_of_lcd_4bit_initialize 42EC            __end_ofi2_lcd_4bit_send_command 5C28  
                    ?_InterruptManagerHigh 0001               __size_of_Rx_config_interrupt 00A2  
                __end_of_ECU_DC_Motor_Stop 6150                      ?_GPIO_Pin_Write_Logic 002A  
                                 intlevel1 0000                                   intlevel2 0000  
       __size_of_adc_select_result_formate 005E                                  sprintf@ap 00F5  
           i2lcd_4bit_send_command@command 0011            ADC_Get_Conversion_Blocking@_adc 0089  
                      _InterruptManagerLow 0018         ADC_Get_Conversion_Blocking@_result 008C  
 GPIO_Pin_Direction_Initialize@_pin_config 002A                                  strcpy@src 0082  
                               _RCSTA1bits 000FAB                                   isupper@c 002A  
            ?_adc_select_voltage_reference 002A                                  strncmp@_l 0080  
                                strncmp@_r 0082               __end_of_ADC_Start_Conversion 6300  
             convert_float32_to_string@str 019C                                efgtoa@nmode 0178  
     __size_of_ADC_Get_Conversion_Blocking 0086                     __end_of_lcd_send_4bits 56BE  
                          ___aomod@divisor 0088                ??_convert_float32_to_string 002D  
       __end_of_EUSART_Async_Transmit_Data 4A1A                 _EUSART_Async_Transmit_Data 4936  
                              ??_vfpfcnvrt 00D5                            ___aomod@counter 002A  
                     ?_InterruptManagerLow 0001      convert_float32_to_string@data_counter 01A8  
                 __end_ofi2_lcd_send_4bits 5738                                   sprintf@f 00F7  
                                 tolower@c 0084                                   sprintf@s 0190  
                   __size_of___fpclassifyf 0100                             _port_registers 01A9  
                              ??_usart_isr 0020                                   strncmp@l 0086  
                                 strncmp@n 0084                                   strncmp@r 0088  
                              _SSPCON1bits 000FC6                                _SSPCON2bits 000FC5  
                  __size_of_Timer0_Handler 0026                                 _WDTCONbits 000FD1  
                        fp__Timer0_Handler 0000            ??_lcd_4bit_send_string_data_pos 002D  
                            ___fladd@signs 00B7                               ___aodiv@sign 0091  
         __size_ofi2_lcd_4bits_set_courser 00B0                      _lcd_4bits_set_courser 4FCC  
                             ___fladd@aexp 00B8                               ___fladd@bexp 00B9  
        __end_of_adc_select_result_formate 5D48               EUSART_Async_Init@_eusart_obj 00C8  
              lcd_4bit_send_char_data@data 008D                               ___aomod@sign 002B  
                   __size_of_EUSART_Rx_ISR 002C                     __size_of_EUSART_Tx_ISR 0002  
                   lcd_4bit_initialize@lcd 008F           adc_select_voltage_reference@_adc 002A  
