

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jun 04 02:06:59 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110  0000                     
   111                           ; Version 2.20
   112                           ; Generated 05/05/2020 GMT
   113                           ; 
   114                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F46K20 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     
   146                           	psect	idataCOMRAM
   147  00519C                     __pidataCOMRAM:
   148                           	callstack 0
   149                           
   150                           ;initializer for _datasend
   151  00519C  77                 	db	119
   152                           
   153                           ;initializer for _blue
   154  00519D  01                 	db	1
   155                           
   156                           ;initializer for _gps
   157  00519E  01                 	db	1
   158                           
   159                           ;initializer for _flags
   160  00519F  0F                 	db	15
   161                           
   162                           ;initializer for _stepper_base
   163  0051A0  1B                 	db	27
   164  0051A1  1A                 	db	26
   165                           
   166                           ;initializer for _selector
   167  0051A2  9C                 	db	156
   168                           
   169                           ;initializer for _TEST_PIN
   170  0051A3  10                 	db	16
   171                           
   172                           	psect	idataBANK0
   173  0050F2                     __pidataBANK0:
   174                           	callstack 0
   175                           
   176                           ;initializer for _lat_registers
   177  0050F2  89                 	db	137
   178  0050F3  0F                 	db	15
   179  0050F4  8A                 	db	138
   180  0050F5  0F                 	db	15
   181  0050F6  8B                 	db	139
   182  0050F7  0F                 	db	15
   183  0050F8  8C                 	db	140
   184  0050F9  0F                 	db	15
   185  0050FA  8D                 	db	141
   186  0050FB  0F                 	db	15
   187                           
   188                           ;initializer for _tris_registers
   189  0050FC  92                 	db	146
   190  0050FD  0F                 	db	15
   191  0050FE  93                 	db	147
   192  0050FF  0F                 	db	15
   193  005100  94                 	db	148
   194  005101  0F                 	db	15
   195  005102  95                 	db	149
   196  005103  0F                 	db	15
   197  005104  96                 	db	150
   198  005105  0F                 	db	15
   199                           
   200                           ;initializer for _i2c_obj
   201  005106  86A0               	dw	34464
   202  005108  0001               	dw	1
   203  00510A  08                 	db	8
   204  00510B  00                 	db	0
   205  00510C  03                 	db	3
   206                           
   207                           ;initializer for _servo_driver_obj
   208  00510D  80                 	db	128
   209  00510E  79                 	db	121
   210  00510F  21                 	db	33
   211  005110  04                 	db	4
   212                           
   213                           ;initializer for _ultrasonic
   214  005111  0B                 	db	11
   215  005112  4A                 	db	74
   216                           
   217                           ;initializer for _W2_W4_W6_Motor_Control
   218  005113  19                 	db	25
   219                           
   220                           ;initializer for _W1_W3_W5_Motor_Control
   221  005114  18                 	db	24
   222                           
   223                           	psect	idataBANK1
   224  004F50                     __pidataBANK1:
   225                           	callstack 0
   226                           
   227                           ;initializer for _port_registers
   228  004F50  80                 	db	128
   229  004F51  0F                 	db	15
   230  004F52  81                 	db	129
   231  004F53  0F                 	db	15
   232  004F54  82                 	db	130
   233  004F55  0F                 	db	15
   234  004F56  83                 	db	131
   235  004F57  0F                 	db	15
   236  004F58  84                 	db	132
   237  004F59  0F                 	db	15
   238                           
   239                           ;initializer for __uart_obj
   240  004F5A  2580               	dw	9600
   241  004F5C  04                 	db	4
   242  004F5D  1E                 	db	low _usart_isr
   243  004F5E  4F                 	db	high _usart_isr
   244  004F5F  00                 	db	0
   245  004F60  00                 	db	0
   246  004F61  00                 	db	0
   247  004F62  00                 	db	0
   248  004F63  09                 	db	9
   249  004F64  00                 	db	0
   250  004F65  00                 	db	0
   251                           
   252                           ;initializer for _CCP2_Obj
   253  004F66  01                 	db	1
   254  004F67  02                 	db	2
   255  004F68  00                 	db	0
   256  004F69  11                 	db	17
   257  004F6A  00                 	db	0
   258  004F6B  01F4               	dw	500
   259  004F6D  0000               	dw	0
   260  004F6F  F9                 	db	249
   261  004F70  00                 	db	0
   262  004F71  0F                 	db	15
   263                           
   264                           ;initializer for _CCP1_Obj
   265  004F72  00                 	db	0
   266  004F73  02                 	db	2
   267  004F74  00                 	db	0
   268  004F75  12                 	db	18
   269  004F76  00                 	db	0
   270  004F77  01F4               	dw	500
   271  004F79  0000               	dw	0
   272  004F7B  F9                 	db	249
   273  004F7C  00                 	db	0
   274  004F7D  0F                 	db	15
   275  0000                     _TMR2	set	4044
   276  0000                     _T2CONbits	set	4042
   277  0000                     _TMR1L	set	4046
   278  0000                     _TMR1H	set	4047
   279  0000                     _T1CONbits	set	4045
   280  0000                     _INTCON2bits	set	4081
   281  0000                     _SSPBUF	set	4041
   282  0000                     _SSPSTATbits	set	4039
   283  0000                     _SSPADD	set	4040
   284  0000                     _SSPCON2bits	set	4037
   285  0000                     _SSPCON1bits	set	4038
   286  0000                     _SPBRGH	set	4016
   287  0000                     _SPBRG	set	4015
   288  0000                     _RCONbits	set	4048
   289  0000                     _RCREG	set	4014
   290  0000                     _TXREG	set	4013
   291  0000                     _TRISCbits	set	3988
   292  0000                     _TXSTA1bits	set	4012
   293  0000                     _PR2	set	4043
   294  0000                     _ADCON1bits	set	4033
   295  0000                     _ADRESL	set	4035
   296  0000                     _ADRESH	set	4036
   297  0000                     _TRISD	set	3989
   298  0000                     _TRISB	set	3987
   299  0000                     _TRISE	set	3990
   300  0000                     _PORTDbits	set	3971
   301  0000                     _LATDbits	set	3980
   302  0000                     _TRISDbits	set	3989
   303  0000                     _TRISBbits	set	3987
   304  0000                     _PORTBbits	set	3969
   305  0000                     _RCSTA1bits	set	4011
   306  0000                     _TXSTAbits	set	4012
   307  0000                     _TRISC	set	3988
   308  0000                     _RX9D	set	32088
   309  0000                     _ADCON2bits	set	4032
   310  0000                     _ADCON0bits	set	4034
   311  0000                     _PORTA	set	3968
   312  0000                     _LATA	set	3977
   313  0000                     _TRISA	set	3986
   314  0000                     _PIE1bits	set	3997
   315  0000                     _RCSTAbits	set	4011
   316  0000                     _T3CONbits	set	4017
   317  0000                     _CCP2CONbits	set	4026
   318  0000                     _CCP1CONbits	set	4029
   319  0000                     _CCPR1L	set	4030
   320  0000                     _CCPR2L	set	4027
   321  0000                     _BAUDCONbits	set	4024
   322  0000                     _PIR2bits	set	4001
   323  0000                     _PIE2bits	set	4000
   324  0000                     _IPR1bits	set	3999
   325  0000                     _PIR1bits	set	3998
   326  0000                     _WDTCONbits	set	4049
   327  0000                     _T0CONbits	set	4053
   328  0000                     _INTCON3bits	set	4080
   329  0000                     _INTCONbits	set	4082
   330  0000                     _LATE	set	3981
   331  0000                     _LATD	set	3980
   332  0000                     _LATC	set	3979
   333  0000                     _LATB	set	3978
   334  0000                     _PORTE	set	3972
   335  0000                     _PORTD	set	3971
   336  0000                     _PORTC	set	3970
   337  0000                     _PORTB	set	3969
   338  0000                     _TMR0H	set	4055
   339  0000                     _TMR0L	set	4054
   340                           
   341                           	psect	smallconst
   342  001000                     __psmallconst:
   343                           	callstack 0
   344  001000  00                 	db	0
   345  001001  41                 	db	65	;'A'
   346  001002  54                 	db	84	;'T'
   347  001003  2B                 	db	43
   348  001004  55                 	db	85	;'U'
   349  001005  41                 	db	65	;'A'
   350  001006  52                 	db	82	;'R'
   351  001007  54                 	db	84	;'T'
   352  001008  3A                 	db	58	;':'
   353  001009  39                 	db	57	;'9'
   354  00100A  36                 	db	54	;'6'
   355  00100B  30                 	db	48	;'0'
   356  00100C  30                 	db	48	;'0'
   357  00100D  2C                 	db	44
   358  00100E  30                 	db	48	;'0'
   359  00100F  2C                 	db	44
   360  001010  30                 	db	48	;'0'
   361  001011  0D                 	db	13
   362  001012  0A                 	db	10
   363  001013  00                 	db	0
   364  001014  41                 	db	65	;'A'
   365  001015  54                 	db	84	;'T'
   366  001016  2B                 	db	43
   367  001017  52                 	db	82	;'R'
   368  001018  4E                 	db	78	;'N'
   369  001019  41                 	db	65	;'A'
   370  00101A  4D                 	db	77	;'M'
   371  00101B  45                 	db	69	;'E'
   372  00101C  3A                 	db	58	;':'
   373  00101D  52                 	db	82	;'R'
   374  00101E  6F                 	db	111	;'o'
   375  00101F  62                 	db	98	;'b'
   376  001020  6F                 	db	111	;'o'
   377  001021  74                 	db	116	;'t'
   378  001022  0D                 	db	13
   379  001023  0A                 	db	10
   380  001024  00                 	db	0
   381  001025  41                 	db	65	;'A'
   382  001026  54                 	db	84	;'T'
   383  001027  2B                 	db	43
   384  001028  50                 	db	80	;'P'
   385  001029  53                 	db	83	;'S'
   386  00102A  57                 	db	87	;'W'
   387  00102B  44                 	db	68	;'D'
   388  00102C  3A                 	db	58	;':'
   389  00102D  31                 	db	49	;'1'
   390  00102E  32                 	db	50	;'2'
   391  00102F  33                 	db	51	;'3'
   392  001030  34                 	db	52	;'4'
   393  001031  0D                 	db	13
   394  001032  0A                 	db	10
   395  001033  00                 	db	0
   396  001034  41                 	db	65	;'A'
   397  001035  54                 	db	84	;'T'
   398  001036  2B                 	db	43
   399  001037  52                 	db	82	;'R'
   400  001038  4F                 	db	79	;'O'
   401  001039  4C                 	db	76	;'L'
   402  00103A  45                 	db	69	;'E'
   403  00103B  3A                 	db	58	;':'
   404  00103C  30                 	db	48	;'0'
   405  00103D  0D                 	db	13
   406  00103E  0A                 	db	10
   407  00103F  00                 	db	0
   408  001040                     STR_9:
   409  001040  25                 	db	37
   410  001041  66                 	db	102	;'f'
   411  001042  00                 	db	0
   412  001043                     STR_5:
   413  001043  25                 	db	37
   414  001044  69                 	db	105	;'i'
   415  001045  00                 	db	0
   416  001046  00                 	db	0	; dummy byte at the end
   417  0000                     
   418                           ; #config settings
   419                           
   420                           	psect	cinit
   421  0045BE                     __pcinit:
   422                           	callstack 0
   423  0045BE                     start_initialization:
   424                           	callstack 0
   425  0045BE                     __initialization:
   426                           	callstack 0
   427                           
   428                           ; Initialize objects allocated to BANK1 (46 bytes)
   429                           ; load TBLPTR registers with __pidataBANK1
   430  0045BE  0E50               	movlw	low __pidataBANK1
   431  0045C0  6EF6               	movwf	tblptrl,c
   432  0045C2  0E4F               	movlw	high __pidataBANK1
   433  0045C4  6EF7               	movwf	tblptrh,c
   434  0045C6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   435  0045C8  6EF8               	movwf	tblptru,c
   436  0045CA  EE01  F000         	lfsr	0,__pdataBANK1
   437  0045CE  EE10 F02E          	lfsr	1,46
   438  0045D2                     copy_data0:
   439  0045D2  0009               	tblrd		*+
   440  0045D4  CFF5 FFEE          	movff	tablat,postinc0
   441  0045D8  50E5               	movf	postdec1,w,c
   442  0045DA  50E1               	movf	fsr1l,w,c
   443  0045DC  E1FA               	bnz	copy_data0
   444                           
   445                           ; Initialize objects allocated to BANK0 (35 bytes)
   446                           ; load TBLPTR registers with __pidataBANK0
   447  0045DE  0EF2               	movlw	low __pidataBANK0
   448  0045E0  6EF6               	movwf	tblptrl,c
   449  0045E2  0E50               	movlw	high __pidataBANK0
   450  0045E4  6EF7               	movwf	tblptrh,c
   451  0045E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   452  0045E8  6EF8               	movwf	tblptru,c
   453  0045EA  EE00  F0DD         	lfsr	0,__pdataBANK0
   454  0045EE  EE10 F023          	lfsr	1,35
   455  0045F2                     copy_data1:
   456  0045F2  0009               	tblrd		*+
   457  0045F4  CFF5 FFEE          	movff	tablat,postinc0
   458  0045F8  50E5               	movf	postdec1,w,c
   459  0045FA  50E1               	movf	fsr1l,w,c
   460  0045FC  E1FA               	bnz	copy_data1
   461                           
   462                           ; Initialize objects allocated to COMRAM (8 bytes)
   463                           ; load TBLPTR registers with __pidataCOMRAM
   464  0045FE  0E9C               	movlw	low __pidataCOMRAM
   465  004600  6EF6               	movwf	tblptrl,c
   466  004602  0E51               	movlw	high __pidataCOMRAM
   467  004604  6EF7               	movwf	tblptrh,c
   468  004606  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   469  004608  6EF8               	movwf	tblptru,c
   470  00460A  EE00  F03A         	lfsr	0,__pdataCOMRAM
   471  00460E  EE10 F008          	lfsr	1,8
   472  004612                     copy_data2:
   473  004612  0009               	tblrd		*+
   474  004614  CFF5 FFEE          	movff	tablat,postinc0
   475  004618  50E5               	movf	postdec1,w,c
   476  00461A  50E1               	movf	fsr1l,w,c
   477  00461C  E1FA               	bnz	copy_data2
   478                           
   479                           ; Clear objects allocated to BANK1 (35 bytes)
   480  00461E  EE01  F02E         	lfsr	0,__pbssBANK1
   481  004622  0E23               	movlw	35
   482  004624                     clear_0:
   483  004624  6AEE               	clrf	postinc0,c
   484  004626  06E8               	decf	wreg,f,c
   485  004628  E1FD               	bnz	clear_0
   486                           
   487                           ; Clear objects allocated to BANK0 (51 bytes)
   488  00462A  EE00  F0AA         	lfsr	0,__pbssBANK0
   489  00462E  0E33               	movlw	51
   490  004630                     clear_1:
   491  004630  6AEE               	clrf	postinc0,c
   492  004632  06E8               	decf	wreg,f,c
   493  004634  E1FD               	bnz	clear_1
   494                           
   495                           ; Clear objects allocated to COMRAM (20 bytes)
   496  004636  EE00  F026         	lfsr	0,__pbssCOMRAM
   497  00463A  0E14               	movlw	20
   498  00463C                     clear_2:
   499  00463C  6AEE               	clrf	postinc0,c
   500  00463E  06E8               	decf	wreg,f,c
   501  004640  E1FD               	bnz	clear_2
   502  004642                     end_of_initialization:
   503                           	callstack 0
   504  004642                     __end_of__initialization:
   505                           	callstack 0
   506  004642  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   507  004644  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   508  004646  0100               	movlb	0
   509  004648  EF45  F010         	goto	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMRAM
   512  000026                     __pbssCOMRAM:
   513                           	callstack 0
   514  000026                     _Timer1_PreLoaded_Value_Store:
   515                           	callstack 0
   516  000026                     	ds	2
   517  000028                     _eusart_Rx_InterruptHandler:
   518                           	callstack 0
   519  000028                     	ds	2
   520  00002A                     _i:
   521                           	callstack 0
   522  00002A                     	ds	1
   523  00002B                     _counter:
   524                           	callstack 0
   525  00002B                     	ds	1
   526  00002C                     _stepper_pos:
   527                           	callstack 0
   528  00002C                     	ds	1
   529  00002D                     _servo4Pos:
   530                           	callstack 0
   531  00002D                     	ds	1
   532  00002E                     _servo3Pos:
   533                           	callstack 0
   534  00002E                     	ds	1
   535  00002F                     _servo2Pos:
   536                           	callstack 0
   537  00002F                     	ds	1
   538  000030                     _servo1Pos:
   539                           	callstack 0
   540  000030                     	ds	1
   541  000031                     _Timer2_PreLoaded_Value_Store:
   542                           	callstack 0
   543  000031                     	ds	1
   544  000032                     _datarecive:
   545                           	callstack 0
   546  000032                     	ds	2
   547  000034                     _Checksum:
   548                           	callstack 0
   549  000034                     	ds	1
   550  000035                     _T_Integral:
   551                           	callstack 0
   552  000035                     	ds	1
   553  000036                     _T_Decimal:
   554                           	callstack 0
   555  000036                     	ds	1
   556  000037                     _RH_Integral:
   557                           	callstack 0
   558  000037                     	ds	1
   559  000038                     _RH_Decimal:
   560                           	callstack 0
   561  000038                     	ds	1
   562  000039                     _gpstemp:
   563                           	callstack 0
   564  000039                     	ds	1
   565                           
   566                           	psect	dataCOMRAM
   567  00003A                     __pdataCOMRAM:
   568                           	callstack 0
   569  00003A                     _datasend:
   570                           	callstack 0
   571  00003A                     	ds	1
   572  00003B                     _blue:
   573                           	callstack 0
   574  00003B                     	ds	1
   575  00003C                     _gps:
   576                           	callstack 0
   577  00003C                     	ds	1
   578  00003D                     _flags:
   579                           	callstack 0
   580  00003D                     	ds	1
   581  00003E                     _stepper_base:
   582                           	callstack 0
   583  00003E                     	ds	2
   584  000040                     _selector:
   585                           	callstack 0
   586  000040                     	ds	1
   587  000041                     _TEST_PIN:
   588                           	callstack 0
   589  000041                     	ds	1
   590                           
   591                           	psect	bssBANK0
   592  0000AA                     __pbssBANK0:
   593                           	callstack 0
   594  0000AA                     	ds	6
   595  0000B0                     _Timer1_Interrupt_Handler:
   596                           	callstack 0
   597  0000B0                     	ds	2
   598  0000B2                     _preloaded_val:
   599                           	callstack 0
   600  0000B2                     	ds	2
   601  0000B4                     _RB7_InterruptHandler_LOW:
   602                           	callstack 0
   603  0000B4                     	ds	2
   604  0000B6                     _RB7_InterruptHandler_HIGH:
   605                           	callstack 0
   606  0000B6                     	ds	2
   607  0000B8                     _RB6_InterruptHandler_LOW:
   608                           	callstack 0
   609  0000B8                     	ds	2
   610  0000BA                     _RB6_InterruptHandler_HIGH:
   611                           	callstack 0
   612  0000BA                     	ds	2
   613  0000BC                     _RB5_InterruptHandler_LOW:
   614                           	callstack 0
   615  0000BC                     	ds	2
   616  0000BE                     _RB5_InterruptHandler_HIGH:
   617                           	callstack 0
   618  0000BE                     	ds	2
   619  0000C0                     _RB4_InterruptHandler_LOW:
   620                           	callstack 0
   621  0000C0                     	ds	2
   622  0000C2                     _RB4_InterruptHandler_HIGH:
   623                           	callstack 0
   624  0000C2                     	ds	2
   625  0000C4                     _INT2_InterruptHandler:
   626                           	callstack 0
   627  0000C4                     	ds	2
   628  0000C6                     _INT1_InterruptHandler:
   629                           	callstack 0
   630  0000C6                     	ds	2
   631  0000C8                     _INT0_InterruptHandler:
   632                           	callstack 0
   633  0000C8                     	ds	2
   634  0000CA                     	ds	2
   635  0000CC                     	ds	2
   636  0000CE                     	ds	2
   637  0000D0                     _eusart_frameerr_CallBack:
   638                           	callstack 0
   639  0000D0                     	ds	2
   640  0000D2                     _eusart_overrunerr_CallBack:
   641                           	callstack 0
   642  0000D2                     	ds	2
   643  0000D4                     _Movement_State:
   644                           	callstack 0
   645  0000D4                     	ds	1
   646  0000D5                     _timer0:
   647                           	callstack 0
   648  0000D5                     	ds	4
   649  0000D9                     _distance:
   650                           	callstack 0
   651  0000D9                     	ds	4
   652                           
   653                           	psect	dataBANK0
   654  0000DD                     __pdataBANK0:
   655                           	callstack 0
   656  0000DD                     _lat_registers:
   657                           	callstack 0
   658  0000DD                     	ds	10
   659  0000E7                     _tris_registers:
   660                           	callstack 0
   661  0000E7                     	ds	10
   662  0000F1                     _i2c_obj:
   663                           	callstack 0
   664  0000F1                     	ds	7
   665  0000F8                     _servo_driver_obj:
   666                           	callstack 0
   667  0000F8                     	ds	4
   668  0000FC                     _ultrasonic:
   669                           	callstack 0
   670  0000FC                     	ds	2
   671  0000FE                     _W2_W4_W6_Motor_Control:
   672                           	callstack 0
   673  0000FE                     	ds	1
   674  0000FF                     _W1_W3_W5_Motor_Control:
   675                           	callstack 0
   676  0000FF                     	ds	1
   677                           
   678                           	psect	bssBANK1
   679  00012E                     __pbssBANK1:
   680                           	callstack 0
   681  00012E                     	ds	9
   682  000137                     _longtude:
   683                           	callstack 0
   684  000137                     	ds	13
   685  000144                     _latitude:
   686                           	callstack 0
   687  000144                     	ds	13
   688                           
   689                           	psect	dataBANK1
   690  000100                     __pdataBANK1:
   691                           	callstack 0
   692  000100                     _port_registers:
   693                           	callstack 0
   694  000100                     	ds	10
   695  00010A                     __uart_obj:
   696                           	callstack 0
   697  00010A                     	ds	12
   698  000116                     _CCP2_Obj:
   699                           	callstack 0
   700  000116                     	ds	12
   701  000122                     _CCP1_Obj:
   702                           	callstack 0
   703  000122                     	ds	12
   704                           
   705                           	psect	cstackBANK1
   706  000151                     __pcstackBANK1:
   707                           	callstack 0
   708  000151                     ?___fltol:
   709                           	callstack 0
   710  000151                     ___fltol@f1:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x0
   714  000151                     	ds	4
   715  000155                     ??___fltol:
   716                           
   717                           ; 1 bytes @ 0x4
   718  000155                     	ds	4
   719  000159                     Servo_SetAngle@i2c_obj:
   720                           	callstack 0
   721  000159                     CCP_PWM_Set_Duty@_ccp_obj:
   722                           	callstack 0
   723  000159                     async_config_baud_rate_gen@_eusart_obj:
   724                           	callstack 0
   725  000159                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x8
   729  000159                     	ds	2
   730  00015B                     ??_async_config_baud_rate_gen:
   731  00015B                     ??_I2C_Master_Mode_Clock_Configurations:
   732  00015B                     CCP_PWM_Set_Duty@_duty:
   733                           	callstack 0
   734  00015B                     Servo_SetAngle@servo_driver_obj:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0xA
   738  00015B                     	ds	1
   739  00015C                     ??_CCP_PWM_Set_Duty:
   740  00015C                     MSSP_I2C_Init@i2c_obj:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0xB
   744  00015C                     	ds	1
   745  00015D                     Servo_SetAngle@servo_no:
   746                           	callstack 0
   747  00015D                     async_config_baud_rate_gen@ret_val:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0xC
   751  00015D                     	ds	1
   752  00015E                     Servo_SetAngle@angle:
   753                           	callstack 0
   754  00015E                     ServoDriver_Init@i2c_obj:
   755                           	callstack 0
   756  00015E                     async_config_baud_rate_gen@Baudrate_temp:
   757                           	callstack 0
   758  00015E                     _CCP_PWM_Set_Duty$5752:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0xD
   762  00015E                     	ds	1
   763  00015F                     Servo_SetAngle@angle_in_reg:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xE
   767  00015F                     	ds	1
   768  000160                     ServoDriver_Init@servo_driver_obj:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xF
   772  000160                     	ds	1
   773  000161                     Servo_SetAngle@reg_addrees:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x10
   777  000161                     	ds	1
   778  000162                     CCP_PWM_Set_Duty@l_duty_temp:
   779                           	callstack 0
   780  000162                     _async_config_baud_rate_gen$5753:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x11
   784  000162                     	ds	4
   785  000166                     EUSART_Async_Init@_eusart_obj:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x15
   789  000166                     	ds	2
   790  000168                     EUSART_Async_Init@ret_val:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x17
   794  000168                     	ds	1
   795  000169                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x18
   798  000169                     	ds	2
   799                           
   800                           	psect	cstackBANK0
   801  000060                     __pcstackBANK0:
   802                           	callstack 0
   803  000060                     ??_GPIO_Pin_Write_Logic:
   804  000060                     ??_GPIO_Pin_Read_Logic:
   805  000060                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   806                           	callstack 0
   807  000060                     HAL_Timer0_Read_Val@l_high_byte:
   808                           	callstack 0
   809  000060                     ___xxtofl@sign:
   810                           	callstack 0
   811  000060                     PCA_Write_Reg@i2c_obj:
   812                           	callstack 0
   813  000060                     EUSART_Async_Read_Data@_eusart_obj:
   814                           	callstack 0
   815  000060                     Get_Temp_HUM@RH_Decimal:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x0
   819  000060                     	ds	1
   820  000061                     HAL_Timer0_Read_Val@l_low_byte:
   821                           	callstack 0
   822  000061                     ___xxtofl@exp:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x1
   826  000061                     	ds	1
   827  000062                     PCA_Write_Reg@slave_address:
   828                           	callstack 0
   829  000062                     EUSART_Async_Read_Data@data:
   830                           	callstack 0
   831  000062                     Get_Temp_HUM@RH_Integral:
   832                           	callstack 0
   833  000062                     ___xxtofl@arg:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x2
   837  000062                     	ds	1
   838  000063                     PCA_Write_Reg@reg_address:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x3
   842  000063                     	ds	1
   843  000064                     PCA_Write_Reg@data:
   844                           	callstack 0
   845  000064                     _EUSART_Async_Read_Data$2031:
   846                           	callstack 0
   847  000064                     Get_Temp_HUM@T_Decimal:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x4
   851  000064                     	ds	2
   852  000066                     ?___fldiv:
   853                           	callstack 0
   854  000066                     stepper_move_one_deg_cw@stepper:
   855                           	callstack 0
   856  000066                     stepper_move_one_deg_ccw@stepper:
   857                           	callstack 0
   858  000066                     _EUSART_Async_Read_Data$2032:
   859                           	callstack 0
   860  000066                     GPIO_Pin_Initialize@_pin_config:
   861                           	callstack 0
   862  000066                     Get_Temp_HUM@T_Integral:
   863                           	callstack 0
   864  000066                     ___fldiv@b:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x6
   868  000066                     	ds	2
   869  000068                     GPIO_Pin_Initialize@ERRORSTATUS:
   870                           	callstack 0
   871  000068                     stepper_move_one_deg_cw@i:
   872                           	callstack 0
   873  000068                     stepper_move_one_deg_ccw@i:
   874                           	callstack 0
   875  000068                     _EUSART_Async_Read_Data$2033:
   876                           	callstack 0
   877  000068                     Get_Temp_HUM@Checksum:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x8
   881  000068                     	ds	1
   882  000069                     ECU_DC_Motor_Init@dc_motor:
   883                           	callstack 0
   884  000069                     Ecu_Stepper_Init@stepper:
   885                           	callstack 0
   886  000069                     CCP_Init@_ccp_obj:
   887                           	callstack 0
   888  000069                     Ultra_Sonic_Init@ultrasonic_object:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x9
   892  000069                     	ds	1
   893  00006A                     EUSART_Async_Read_Data@l_temp_data:
   894                           	callstack 0
   895  00006A                     ___fldiv@a:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0xA
   899  00006A                     	ds	1
   900  00006B                     Ultra_Sonic_Init@_tmr0_config:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0xB
   904  00006B                     	ds	1
   905  00006C                     EUSART_Async_Read_Data_Blocking@_eusart_obj:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0xC
   909  00006C                     	ds	2
   910  00006E                     ??___fldiv:
   911  00006E                     EUSART_Async_Read_Data_Blocking@data:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0xE
   915  00006E                     	ds	2
   916  000070                     ??_GPS_Service:
   917                           
   918                           ; 1 bytes @ 0x10
   919  000070                     	ds	2
   920  000072                     ___fldiv@rem:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x12
   924  000072                     	ds	4
   925  000076                     ___fldiv@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x16
   929  000076                     	ds	1
   930  000077                     ___fldiv@new_exp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x17
   934  000077                     	ds	2
   935  000079                     ___fldiv@grs:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x19
   939  000079                     	ds	4
   940  00007D                     ___fldiv@bexp:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x1D
   944  00007D                     	ds	1
   945  00007E                     ___fldiv@aexp:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x1E
   949  00007E                     	ds	1
   950  00007F                     ?___flmul:
   951                           	callstack 0
   952  00007F                     Get_Distance@ultrasonic_object:
   953                           	callstack 0
   954  00007F                     ___flmul@b:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x1F
   958  00007F                     	ds	2
   959  000081                     Get_Distance@_tmr0_config:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x21
   963  000081                     	ds	2
   964  000083                     Get_Distance@distance:
   965                           	callstack 0
   966  000083                     ___flmul@a:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x23
   970  000083                     	ds	2
   971  000085                     Get_Distance@timer_val:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x25
   975  000085                     	ds	2
   976  000087                     ??___flmul:
   977  000087                     Get_Distance@logic:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x27
   981  000087                     	ds	4
   982  00008B                     ___flmul@sign:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x2B
   986  00008B                     	ds	1
   987  00008C                     ___flmul@aexp:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x2C
   991  00008C                     	ds	1
   992  00008D                     ___flmul@grs:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x2D
   996  00008D                     	ds	4
   997  000091                     ___flmul@bexp:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x31
  1001  000091                     	ds	1
  1002  000092                     ___flmul@prod:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x32
  1006  000092                     	ds	4
  1007  000096                     ___flmul@temp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x36
  1011  000096                     	ds	2
  1012  000098                     ?___fladd:
  1013                           	callstack 0
  1014  000098                     ___fladd@b:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x38
  1018  000098                     	ds	4
  1019  00009C                     ___fladd@a:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x3C
  1023  00009C                     	ds	4
  1024  0000A0                     ??___fladd:
  1025                           
  1026                           ; 1 bytes @ 0x40
  1027  0000A0                     	ds	4
  1028  0000A4                     ___fladd@signs:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x44
  1032  0000A4                     	ds	1
  1033  0000A5                     ___fladd@aexp:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x45
  1037  0000A5                     	ds	1
  1038  0000A6                     ___fladd@bexp:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x46
  1042  0000A6                     	ds	1
  1043  0000A7                     ___fladd@grs:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x47
  1047  0000A7                     	ds	1
  1048  0000A8                     ___fltol@sign1:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x48
  1052  0000A8                     	ds	1
  1053  0000A9                     ___fltol@exp1:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x49
  1057  0000A9                     	ds	1
  1058                           
  1059                           	psect	cstackCOMRAM
  1060  000001                     __pcstackCOMRAM:
  1061                           	callstack 0
  1062  000001                     ??i2_calc_parity_odd:
  1063  000001                     ??i2_calc_parity_even:
  1064  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x0
  1068  000001                     	ds	2
  1069  000003                     ??i2_GPIO_Pin_Toggle_Logic:
  1070  000003                     i2calc_parity_odd@data:
  1071                           	callstack 0
  1072  000003                     i2calc_parity_even@data:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x2
  1076  000003                     	ds	1
  1077  000004                     i2calc_parity_odd@number_of_ones:
  1078                           	callstack 0
  1079  000004                     i2calc_parity_even@number_of_ones:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x3
  1083  000004                     	ds	1
  1084  000005                     i2calc_parity_odd@l_counter:
  1085                           	callstack 0
  1086  000005                     i2calc_parity_even@l_counter:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x4
  1090  000005                     	ds	1
  1091  000006                     EUSART_Async_Transmit_Data@_eusart_obj:
  1092                           	callstack 0
  1093  000006                     i2EUSART_Async_Read_Data@_eusart_obj:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x5
  1097  000006                     	ds	2
  1098  000008                     EUSART_Async_Transmit_Data@data:
  1099                           	callstack 0
  1100  000008                     i2EUSART_Async_Read_Data@data:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x7
  1104  000008                     	ds	2
  1105  00000A                     ??_EUSART_Async_Transmit_Data:
  1106  00000A                     ??i2_EUSART_Async_Read_Data:
  1107                           
  1108                           ; 1 bytes @ 0x9
  1109  00000A                     	ds	2
  1110  00000C                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
  1111                           	callstack 0
  1112  00000C                     i2_EUSART_Async_Read_Data$2031:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0xB
  1116  00000C                     	ds	2
  1117  00000E                     Bluetooth_Send_Data_Non_Blocking@data:
  1118                           	callstack 0
  1119  00000E                     i2_EUSART_Async_Read_Data$2032:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0xD
  1123  00000E                     	ds	1
  1124  00000F                     
  1125                           ; 1 bytes @ 0xE
  1126  00000F                     	ds	1
  1127  000010                     i2_EUSART_Async_Read_Data$2033:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xF
  1131  000010                     	ds	2
  1132  000012                     i2EUSART_Async_Read_Data@l_temp_data:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x11
  1136  000012                     	ds	2
  1137  000014                     ??_InterruptManagerHigh:
  1138                           
  1139                           ; 1 bytes @ 0x13
  1140  000014                     	ds	6
  1141  00001A                     RB4_ISR@Handler_Select:
  1142                           	callstack 0
  1143  00001A                     RB5_ISR@Handler_Select:
  1144                           	callstack 0
  1145  00001A                     RB6_ISR@Handler_Select:
  1146                           	callstack 0
  1147  00001A                     RB7_ISR@Handler_Select:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x19
  1151  00001A                     	ds	1
  1152  00001B                     ??_InterruptManagerLow:
  1153                           
  1154                           ; 1 bytes @ 0x1A
  1155  00001B                     	ds	3
  1156  00001E                     ??_calc_parity_even:
  1157  00001E                     ??_calc_parity_odd:
  1158  00001E                     ??_DHT11_Start:
  1159  00001E                     ?___xxtofl:
  1160                           	callstack 0
  1161  00001E                     CCP_PWM_Start@_ccp_obj:
  1162                           	callstack 0
  1163  00001E                     CCP_Interrupt_Config@_ccp_obj:
  1164                           	callstack 0
  1165  00001E                     CCP_Mode_Timer_Select@_ccp_obj:
  1166                           	callstack 0
  1167  00001E                     async_Tx_config@_tx_obj:
  1168                           	callstack 0
  1169  00001E                     Rx_config_interrupt@_rx_obj:
  1170                           	callstack 0
  1171  00001E                     GPIO_Pin_Direction_Initialize@_pin_config:
  1172                           	callstack 0
  1173  00001E                     GPIO_Pin_Write_Logic@_pin_config:
  1174                           	callstack 0
  1175  00001E                     GPIO_Pin_Read_Logic@_pin_config:
  1176                           	callstack 0
  1177  00001E                     GPIO_Pin_Toggle_Logic@_pin_config:
  1178                           	callstack 0
  1179  00001E                     MSSP_I2C_Master_Send_Start@i2c_obj:
  1180                           	callstack 0
  1181  00001E                     MSSP_I2C_Master_Send_Stop@i2c_obj:
  1182                           	callstack 0
  1183  00001E                     MSSP_I2C_Master_Write_Blocking@i2c_obj:
  1184                           	callstack 0
  1185  00001E                     I2C_Slave_Mode_Clock_Configurations@i2c_obj:
  1186                           	callstack 0
  1187  00001E                     HAL_Timer0_Read_Val@_tmr0_config:
  1188                           	callstack 0
  1189  00001E                     HAL_Timer0_Write_Val@_tmr0_config:
  1190                           	callstack 0
  1191  00001E                     Timer2_Init@_timer2:
  1192                           	callstack 0
  1193  00001E                     DHT11_Read_Data@data:
  1194                           	callstack 0
  1195  00001E                     ___xxtofl@val:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x1D
  1199  00001E                     	ds	2
  1200  000020                     ??_GPIO_Pin_Direction_Initialize:
  1201  000020                     ??_Timer2_Init:
  1202  000020                     ??_I2C_Slave_Mode_Clock_Configurations:
  1203  000020                     ??_DHT11_Read_Data:
  1204  000020                     ??_GPIO_Pin_Toggle_Logic:
  1205  000020                     async_Tx_config@ret_val:
  1206                           	callstack 0
  1207  000020                     Rx_config_interrupt@ret_val:
  1208                           	callstack 0
  1209  000020                     calc_parity_odd@data:
  1210                           	callstack 0
  1211  000020                     calc_parity_even@data:
  1212                           	callstack 0
  1213  000020                     GPIO_Pin_Write_Logic@logic:
  1214                           	callstack 0
  1215  000020                     MSSP_I2C_Master_Write_Blocking@i2c_data:
  1216                           	callstack 0
  1217  000020                     GPIO_Pin_Read_Logic@logic:
  1218                           	callstack 0
  1219  000020                     HAL_Timer0_Read_Val@result:
  1220                           	callstack 0
  1221  000020                     HAL_Timer0_Write_Val@val:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x1F
  1225  000020                     	ds	1
  1226  000021                     calc_parity_odd@number_of_ones:
  1227                           	callstack 0
  1228  000021                     calc_parity_even@number_of_ones:
  1229                           	callstack 0
  1230  000021                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1231                           	callstack 0
  1232  000021                     DHT11_Read_Data@i:
  1233                           	callstack 0
  1234  000021                     CCP_PWM_Mode_Config@_ccp_obj:
  1235                           	callstack 0
  1236  000021                     CCP_Capture_Mode_Config@_ccp_obj:
  1237                           	callstack 0
  1238  000021                     CCP_Compare_Mode_Config@_ccp_obj:
  1239                           	callstack 0
  1240  000021                     async_Rx_config@_rx_obj:
  1241                           	callstack 0
  1242  000021                     MSSP_I2C_Master_Write_Blocking@_ack:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x20
  1246  000021                     	ds	1
  1247  000022                     ??_HAL_Timer0_Read_Val:
  1248  000022                     ??___xxtofl:
  1249  000022                     calc_parity_odd@l_counter:
  1250                           	callstack 0
  1251  000022                     calc_parity_even@l_counter:
  1252                           	callstack 0
  1253  000022                     HAL_Timer0_Write_Val@ret_value:
  1254                           	callstack 0
  1255  000022                     ECU_DC_Motor_Run_Left@dc_motor:
  1256                           	callstack 0
  1257  000022                     ECU_DC_Motor_Run_Right@dc_motor:
  1258                           	callstack 0
  1259  000022                     Ecu_Stepper_Step@stepper:
  1260                           	callstack 0
  1261  000022                     send_trig_pulse@ultrasonic_object:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x21
  1265  000022                     	ds	1
  1266  000023                     ??_EUSART_Async_Read_Data:
  1267  000023                     ??_CCP_Capture_Mode_Config:
  1268  000023                     ??_CCP_Compare_Mode_Config:
  1269  000023                     PCA_Write_Reg@ack:
  1270                           	callstack 0
  1271  000023                     async_Rx_config@ret_val:
  1272                           	callstack 0
  1273  000023                     HAL_Timer0_Init@_tmr0_config:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x22
  1277  000023                     	ds	1
  1278  000024                     ??_Ecu_Stepper_Step:
  1279                           
  1280                           ; 1 bytes @ 0x23
  1281  000024                     	ds	1
  1282  000025                     ??_HAL_Timer0_Init:
  1283  000025                     CCP_Capture_Mode_Config@ret:
  1284                           	callstack 0
  1285  000025                     CCP_Compare_Mode_Config@ret:
  1286                           	callstack 0
  1287  000025                     GPS_Service@key:
  1288                           	callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x24
  1291  000025                     	ds	1
  1292  000026                     
  1293                           ; 1 bytes @ 0x25
  1294 ;;
  1295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1296 ;;
  1297 ;; *************** function _main *****************
  1298 ;; Defined at:
  1299 ;;		line 212 in file "application.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  2  1926[None  ] int 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;Total ram usage:        2 bytes
  1318 ;; Hardware stack levels required when called: 14
  1319 ;; This function calls:
  1320 ;;		_GPIO_Pin_Toggle_Logic
  1321 ;;		_GPS_Service
  1322 ;;		_Get_Distance
  1323 ;;		_Get_Temp_HUM
  1324 ;;		_Robot_Move_Backward
  1325 ;;		_Robot_Move_Forward
  1326 ;;		_Robot_Steer_Left_Backward
  1327 ;;		_Robot_Steer_Left_Forward
  1328 ;;		_Robot_Steer_Right_Backward
  1329 ;;		_Robot_Steer_Right_Forward
  1330 ;;		_Robot_Steer_Stop
  1331 ;;		_Servo_SetAngle
  1332 ;;		_application_intialize
  1333 ;;		_stepper_move_one_deg_ccw
  1334 ;;		_stepper_move_one_deg_cw
  1335 ;; This function is called by:
  1336 ;;		Startup code after reset
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text0
  1341  00208A                     __ptext0:
  1342                           	callstack 0
  1343  00208A                     _main:
  1344                           	callstack 17
  1345  00208A                     
  1346                           ;application.c: 214:     application_intialize();
  1347  00208A  ECD1  F016         	call	_application_intialize	;wreg free
  1348                           
  1349                           ;application.c: 215:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
  1350  00208E  0E41               	movlw	low _TEST_PIN
  1351  002090  6E1E               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1352  002092  0E00               	movlw	high _TEST_PIN
  1353  002094  6E1F               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1354  002096  ECE2  F023         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1355  00209A  EF4B  F011         	goto	l11894
  1356  00209E                     l11804:
  1357                           
  1358                           ; BSR set to: 1
  1359                           ;application.c: 226:                 Robot_Steer_Stop();
  1360  00209E  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  1361                           
  1362                           ;application.c: 227:                 break;
  1363  0020A2  EF4B  F011         	goto	l11894
  1364  0020A6                     l11806:
  1365                           
  1366                           ; BSR set to: 1
  1367                           ;application.c: 230:                 Robot_Steer_Left_Forward();
  1368  0020A6  EC1D  F01E         	call	_Robot_Steer_Left_Forward	;wreg free
  1369                           
  1370                           ;application.c: 231:                 break;
  1371  0020AA  EF4B  F011         	goto	l11894
  1372  0020AE                     l11808:
  1373                           
  1374                           ; BSR set to: 1
  1375                           ;application.c: 234:                 Robot_Move_Forward();
  1376  0020AE  EC7D  F01E         	call	_Robot_Move_Forward	;wreg free
  1377                           
  1378                           ;application.c: 235:                 break;
  1379  0020B2  EF4B  F011         	goto	l11894
  1380  0020B6                     l11810:
  1381                           
  1382                           ; BSR set to: 1
  1383                           ;application.c: 238:                 Robot_Steer_Right_Forward();
  1384  0020B6  ECBD  F01D         	call	_Robot_Steer_Right_Forward	;wreg free
  1385                           
  1386                           ;application.c: 239:                 break;
  1387  0020BA  EF4B  F011         	goto	l11894
  1388  0020BE                     l11812:
  1389                           
  1390                           ; BSR set to: 1
  1391                           ;application.c: 248:                 Robot_Steer_Left_Backward();
  1392  0020BE  EC9A  F01F         	call	_Robot_Steer_Left_Backward	;wreg free
  1393                           
  1394                           ;application.c: 249:                 break;
  1395  0020C2  EF4B  F011         	goto	l11894
  1396  0020C6                     l11814:
  1397                           
  1398                           ; BSR set to: 1
  1399                           ;application.c: 252:                 Robot_Move_Backward();
  1400  0020C6  ECDD  F01E         	call	_Robot_Move_Backward	;wreg free
  1401                           
  1402                           ;application.c: 253:                 break;
  1403  0020CA  EF4B  F011         	goto	l11894
  1404  0020CE                     l11816:
  1405                           
  1406                           ; BSR set to: 1
  1407                           ;application.c: 256:                 Robot_Steer_Right_Backward();
  1408  0020CE  EC3D  F01F         	call	_Robot_Steer_Right_Backward	;wreg free
  1409                           
  1410                           ;application.c: 257:                 break;
  1411  0020D2  EF4B  F011         	goto	l11894
  1412  0020D6                     l11818:
  1413                           
  1414                           ; BSR set to: 1
  1415                           ;application.c: 267:                  stepper_move_one_deg_cw(&stepper_base);
  1416  0020D6  0E3E               	movlw	low _stepper_base
  1417  0020D8  0100               	movlb	0	; () banked
  1418  0020DA  6F66               	movwf	stepper_move_one_deg_cw@stepper& (0+255),b
  1419  0020DC  0E00               	movlw	high _stepper_base
  1420  0020DE  6F67               	movwf	(stepper_move_one_deg_cw@stepper+1)& (0+255),b
  1421  0020E0  ECC4  F025         	call	_stepper_move_one_deg_cw	;wreg free
  1422                           
  1423                           ;application.c: 268:                  break;
  1424  0020E4  EF4B  F011         	goto	l11894
  1425  0020E8                     l11820:
  1426                           
  1427                           ; BSR set to: 1
  1428                           ;application.c: 272:                 stepper_move_one_deg_ccw(&stepper_base);
  1429  0020E8  0E3E               	movlw	low _stepper_base
  1430  0020EA  0100               	movlb	0	; () banked
  1431  0020EC  6F66               	movwf	stepper_move_one_deg_ccw@stepper& (0+255),b
  1432  0020EE  0E00               	movlw	high _stepper_base
  1433  0020F0  6F67               	movwf	(stepper_move_one_deg_ccw@stepper+1)& (0+255),b
  1434  0020F2  ECF7  F025         	call	_stepper_move_one_deg_ccw	;wreg free
  1435                           
  1436                           ;application.c: 273:                 break;
  1437  0020F6  EF4B  F011         	goto	l11894
  1438  0020FA                     l11822:
  1439                           
  1440                           ; BSR set to: 1
  1441                           ;application.c: 277:                   servo1Pos--;
  1442  0020FA  0630               	decf	_servo1Pos^0,f,c
  1443  0020FC                     
  1444                           ; BSR set to: 1
  1445                           ;application.c: 278:                   if(servo1Pos<1)
  1446  0020FC  5030               	movf	_servo1Pos^0,w,c
  1447  0020FE  A4D8               	btfss	status,2,c
  1448  002100  EF84  F010         	goto	u12531
  1449  002104  EF86  F010         	goto	u12530
  1450  002108                     u12531:
  1451  002108  EF88  F010         	goto	l11828
  1452  00210C                     u12530:
  1453  00210C                     
  1454                           ; BSR set to: 1
  1455                           ;application.c: 279:                   {;application.c: 280:                     servo1P
      +                          os=1;
  1456  00210C  0E01               	movlw	1
  1457  00210E  6E30               	movwf	_servo1Pos^0,c
  1458  002110                     l11828:
  1459                           
  1460                           ; BSR set to: 1
  1461                           ;application.c: 282:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_9 , servo1Pos );
  1462  002110  0EF1               	movlw	low _i2c_obj
  1463  002112  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1464  002114  0E00               	movlw	high _i2c_obj
  1465  002116  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1466  002118  0EF8               	movlw	low _servo_driver_obj
  1467  00211A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1468  00211C  0E00               	movlw	high _servo_driver_obj
  1469  00211E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1470  002120  0E08               	movlw	8
  1471  002122  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1472  002124  C030  F15E         	movff	_servo1Pos,Servo_SetAngle@angle
  1473  002128  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  1474                           
  1475                           ;application.c: 284:                   break;
  1476  00212C  EF4B  F011         	goto	l11894
  1477  002130                     l11830:
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;application.c: 288:                  servo1Pos++;
  1481  002130  2A30               	incf	_servo1Pos^0,f,c
  1482  002132                     
  1483                           ; BSR set to: 1
  1484                           ;application.c: 289:                  if(servo1Pos>180)
  1485  002132  0EB4               	movlw	180
  1486  002134  6430               	cpfsgt	_servo1Pos^0,c
  1487  002136  EF9F  F010         	goto	u12541
  1488  00213A  EFA1  F010         	goto	u12540
  1489  00213E                     u12541:
  1490  00213E  EF88  F010         	goto	l11828
  1491  002142                     u12540:
  1492  002142                     
  1493                           ; BSR set to: 1
  1494                           ;application.c: 290:                  {;application.c: 291:                    servo1Pos
      +                          =180;
  1495  002142  0EB4               	movlw	180
  1496  002144  6E30               	movwf	_servo1Pos^0,c
  1497  002146  EF88  F010         	goto	l11828
  1498  00214A                     l11838:
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;application.c: 298:                   servo2Pos--;
  1502  00214A  062F               	decf	_servo2Pos^0,f,c
  1503  00214C                     
  1504                           ; BSR set to: 1
  1505                           ;application.c: 299:                   if(servo2Pos<1)
  1506  00214C  502F               	movf	_servo2Pos^0,w,c
  1507  00214E  A4D8               	btfss	status,2,c
  1508  002150  EFAC  F010         	goto	u12551
  1509  002154  EFAE  F010         	goto	u12550
  1510  002158                     u12551:
  1511  002158  EFB0  F010         	goto	l11844
  1512  00215C                     u12550:
  1513  00215C                     
  1514                           ; BSR set to: 1
  1515                           ;application.c: 300:                   {;application.c: 301:                     servo2P
      +                          os=1;
  1516  00215C  0E01               	movlw	1
  1517  00215E  6E2F               	movwf	_servo2Pos^0,c
  1518  002160                     l11844:
  1519                           
  1520                           ; BSR set to: 1
  1521                           ;application.c: 303:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_10 , servo2Pos );
  1522  002160  0EF1               	movlw	low _i2c_obj
  1523  002162  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1524  002164  0E00               	movlw	high _i2c_obj
  1525  002166  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1526  002168  0EF8               	movlw	low _servo_driver_obj
  1527  00216A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1528  00216C  0E00               	movlw	high _servo_driver_obj
  1529  00216E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1530  002170  0E09               	movlw	9
  1531  002172  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1532  002174  C02F  F15E         	movff	_servo2Pos,Servo_SetAngle@angle
  1533  002178  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  1534                           
  1535                           ;application.c: 304:                   break;
  1536  00217C  EF4B  F011         	goto	l11894
  1537  002180                     l11846:
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;application.c: 308:                   servo2Pos++;
  1541  002180  2A2F               	incf	_servo2Pos^0,f,c
  1542  002182                     
  1543                           ; BSR set to: 1
  1544                           ;application.c: 309:                   if(servo2Pos>180)
  1545  002182  0EB4               	movlw	180
  1546  002184  642F               	cpfsgt	_servo2Pos^0,c
  1547  002186  EFC7  F010         	goto	u12561
  1548  00218A  EFC9  F010         	goto	u12560
  1549  00218E                     u12561:
  1550  00218E  EFB0  F010         	goto	l11844
  1551  002192                     u12560:
  1552  002192                     
  1553                           ; BSR set to: 1
  1554                           ;application.c: 310:                   {;application.c: 311:                     servo2P
      +                          os=180;
  1555  002192  0EB4               	movlw	180
  1556  002194  6E2F               	movwf	_servo2Pos^0,c
  1557  002196  EFB0  F010         	goto	l11844
  1558  00219A                     l11854:
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;application.c: 318:                   servo3Pos--;
  1562  00219A  062E               	decf	_servo3Pos^0,f,c
  1563  00219C                     
  1564                           ; BSR set to: 1
  1565                           ;application.c: 319:                   if(servo3Pos<1)
  1566  00219C  502E               	movf	_servo3Pos^0,w,c
  1567  00219E  A4D8               	btfss	status,2,c
  1568  0021A0  EFD4  F010         	goto	u12571
  1569  0021A4  EFD6  F010         	goto	u12570
  1570  0021A8                     u12571:
  1571  0021A8  EFD8  F010         	goto	l11860
  1572  0021AC                     u12570:
  1573  0021AC                     
  1574                           ; BSR set to: 1
  1575                           ;application.c: 320:                   {;application.c: 321:                     servo3P
      +                          os=1;
  1576  0021AC  0E01               	movlw	1
  1577  0021AE  6E2E               	movwf	_servo3Pos^0,c
  1578  0021B0                     l11860:
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;application.c: 323:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_11 , servo3Pos );
  1582  0021B0  0EF1               	movlw	low _i2c_obj
  1583  0021B2  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1584  0021B4  0E00               	movlw	high _i2c_obj
  1585  0021B6  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1586  0021B8  0EF8               	movlw	low _servo_driver_obj
  1587  0021BA  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1588  0021BC  0E00               	movlw	high _servo_driver_obj
  1589  0021BE  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1590  0021C0  0E0A               	movlw	10
  1591  0021C2  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1592  0021C4  C02E  F15E         	movff	_servo3Pos,Servo_SetAngle@angle
  1593  0021C8  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  1594                           
  1595                           ;application.c: 324:                   break;
  1596  0021CC  EF4B  F011         	goto	l11894
  1597  0021D0                     l11862:
  1598                           
  1599                           ; BSR set to: 1
  1600                           ;application.c: 328:                   servo3Pos++;
  1601  0021D0  2A2E               	incf	_servo3Pos^0,f,c
  1602  0021D2                     
  1603                           ; BSR set to: 1
  1604                           ;application.c: 329:                   if(servo3Pos>180)
  1605  0021D2  0EB4               	movlw	180
  1606  0021D4  642E               	cpfsgt	_servo3Pos^0,c
  1607  0021D6  EFEF  F010         	goto	u12581
  1608  0021DA  EFF1  F010         	goto	u12580
  1609  0021DE                     u12581:
  1610  0021DE  EFD8  F010         	goto	l11860
  1611  0021E2                     u12580:
  1612  0021E2                     
  1613                           ; BSR set to: 1
  1614                           ;application.c: 330:                   {;application.c: 331:                     servo3P
      +                          os=180;
  1615  0021E2  0EB4               	movlw	180
  1616  0021E4  6E2E               	movwf	_servo3Pos^0,c
  1617  0021E6  EFD8  F010         	goto	l11860
  1618  0021EA                     l11870:
  1619                           
  1620                           ; BSR set to: 1
  1621                           ;application.c: 338:                   servo4Pos--;
  1622  0021EA  062D               	decf	_servo4Pos^0,f,c
  1623  0021EC                     
  1624                           ; BSR set to: 1
  1625                           ;application.c: 339:                   if(servo4Pos<1)
  1626  0021EC  502D               	movf	_servo4Pos^0,w,c
  1627  0021EE  A4D8               	btfss	status,2,c
  1628  0021F0  EFFC  F010         	goto	u12591
  1629  0021F4  EFFE  F010         	goto	u12590
  1630  0021F8                     u12591:
  1631  0021F8  EF00  F011         	goto	l11876
  1632  0021FC                     u12590:
  1633  0021FC                     
  1634                           ; BSR set to: 1
  1635                           ;application.c: 340:                   {;application.c: 341:                     servo4P
      +                          os=1;
  1636  0021FC  0E01               	movlw	1
  1637  0021FE  6E2D               	movwf	_servo4Pos^0,c
  1638  002200                     l11876:
  1639                           
  1640                           ; BSR set to: 1
  1641                           ;application.c: 343:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_12 , servo4Pos );
  1642  002200  0EF1               	movlw	low _i2c_obj
  1643  002202  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1644  002204  0E00               	movlw	high _i2c_obj
  1645  002206  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1646  002208  0EF8               	movlw	low _servo_driver_obj
  1647  00220A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1648  00220C  0E00               	movlw	high _servo_driver_obj
  1649  00220E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1650  002210  0E0B               	movlw	11
  1651  002212  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1652  002214  C02D  F15E         	movff	_servo4Pos,Servo_SetAngle@angle
  1653  002218  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  1654                           
  1655                           ;application.c: 344:                   break;
  1656  00221C  EF4B  F011         	goto	l11894
  1657  002220                     l11878:
  1658                           
  1659                           ; BSR set to: 1
  1660                           ;application.c: 348:                   servo4Pos++;
  1661  002220  2A2D               	incf	_servo4Pos^0,f,c
  1662  002222                     
  1663                           ; BSR set to: 1
  1664                           ;application.c: 349:                   if(servo4Pos>180)
  1665  002222  0EB4               	movlw	180
  1666  002224  642D               	cpfsgt	_servo4Pos^0,c
  1667  002226  EF17  F011         	goto	u12601
  1668  00222A  EF19  F011         	goto	u12600
  1669  00222E                     u12601:
  1670  00222E  EF00  F011         	goto	l11876
  1671  002232                     u12600:
  1672  002232                     
  1673                           ; BSR set to: 1
  1674                           ;application.c: 350:                   {;application.c: 351:                     servo4P
      +                          os=180;
  1675  002232  0EB4               	movlw	180
  1676  002234  6E2D               	movwf	_servo4Pos^0,c
  1677  002236  EF00  F011         	goto	l11876
  1678  00223A                     l11886:
  1679                           
  1680                           ; BSR set to: 1
  1681                           ;application.c: 358:                  Get_Temp_HUM(&RH_Decimal, &RH_Integral, &T_Decimal
      +                          , &T_Integral, &Checksum);
  1682  00223A  0E38               	movlw	low _RH_Decimal
  1683  00223C  0100               	movlb	0	; () banked
  1684  00223E  6F60               	movwf	Get_Temp_HUM@RH_Decimal& (0+255),b
  1685  002240  0E00               	movlw	high _RH_Decimal
  1686  002242  6F61               	movwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),b
  1687  002244  0E37               	movlw	low _RH_Integral
  1688  002246  6F62               	movwf	Get_Temp_HUM@RH_Integral& (0+255),b
  1689  002248  0E00               	movlw	high _RH_Integral
  1690  00224A  6F63               	movwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),b
  1691  00224C  0E36               	movlw	low _T_Decimal
  1692  00224E  6F64               	movwf	Get_Temp_HUM@T_Decimal& (0+255),b
  1693  002250  0E00               	movlw	high _T_Decimal
  1694  002252  6F65               	movwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),b
  1695  002254  0E35               	movlw	low _T_Integral
  1696  002256  6F66               	movwf	Get_Temp_HUM@T_Integral& (0+255),b
  1697  002258  0E00               	movlw	high _T_Integral
  1698  00225A  6F67               	movwf	(Get_Temp_HUM@T_Integral+1)& (0+255),b
  1699  00225C  0E34               	movlw	low _Checksum
  1700  00225E  6F68               	movwf	Get_Temp_HUM@Checksum& (0+255),b
  1701  002260  0E00               	movlw	high _Checksum
  1702  002262  6F69               	movwf	(Get_Temp_HUM@Checksum+1)& (0+255),b
  1703  002264  EC5A  F021         	call	_Get_Temp_HUM	;wreg free
  1704                           
  1705                           ;application.c: 359:                  break;
  1706  002268  EF4B  F011         	goto	l11894
  1707  00226C                     l11888:
  1708                           
  1709                           ; BSR set to: 1
  1710                           ;application.c: 362:                  Get_Distance(&ultrasonic,&timer0,&distance);
  1711  00226C  0EFC               	movlw	low _ultrasonic
  1712  00226E  0100               	movlb	0	; () banked
  1713  002270  6F7F               	movwf	Get_Distance@ultrasonic_object& (0+255),b
  1714  002272  0E00               	movlw	high _ultrasonic
  1715  002274  6F80               	movwf	(Get_Distance@ultrasonic_object+1)& (0+255),b
  1716  002276  0ED5               	movlw	low _timer0
  1717  002278  6F81               	movwf	Get_Distance@_tmr0_config& (0+255),b
  1718  00227A  0E00               	movlw	high _timer0
  1719  00227C  6F82               	movwf	(Get_Distance@_tmr0_config+1)& (0+255),b
  1720  00227E  0ED9               	movlw	low _distance
  1721  002280  6F83               	movwf	Get_Distance@distance& (0+255),b
  1722  002282  0E00               	movlw	high _distance
  1723  002284  6F84               	movwf	(Get_Distance@distance+1)& (0+255),b
  1724  002286  EC7A  F01A         	call	_Get_Distance	;wreg free
  1725                           
  1726                           ;application.c: 363:                  break;
  1727  00228A  EF4B  F011         	goto	l11894
  1728  00228E                     l11890:
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;application.c: 366:                  GPS_Service();
  1732  00228E  EC1D  F016         	call	_GPS_Service	;wreg free
  1733                           
  1734                           ;application.c: 367:                  break;
  1735  002292  EF4B  F011         	goto	l11894
  1736  002296                     l1928:
  1737  002296                     l11894:
  1738  002296  C032  F169         	movff	_datarecive,??_main	;volatile
  1739  00229A  C033  F16A         	movff	_datarecive+1,??_main+1	;volatile
  1740                           
  1741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1742                           ; Switch size 1, requested type "simple"
  1743                           ; Number of cases is 1, Range of values is 0 to 0
  1744                           ; switch strategies available:
  1745                           ; Name         Instructions Cycles
  1746                           ; simple_byte            4     3 (average)
  1747                           ;	Chosen strategy is simple_byte
  1748  00229E  0101               	movlb	1	; () banked
  1749  0022A0  516A               	movf	(??_main+1)& (0+255),w,b
  1750  0022A2  0A00               	xorlw	0	; case 0
  1751  0022A4  B4D8               	btfsc	status,2,c
  1752  0022A6  EF57  F011         	goto	l12082
  1753  0022AA  EF4B  F011         	goto	l1928
  1754  0022AE                     l12082:
  1755                           
  1756                           ; BSR set to: 1
  1757                           ; Switch size 1, requested type "simple"
  1758                           ; Number of cases is 24, Range of values is 0 to 79
  1759                           ; switch strategies available:
  1760                           ; Name         Instructions Cycles
  1761                           ; simple_byte           73    37 (average)
  1762                           ;	Chosen strategy is simple_byte
  1763  0022AE  5169               	movf	??_main& (0+255),w,b
  1764  0022B0  0A00               	xorlw	0	; case 0
  1765  0022B2  B4D8               	btfsc	status,2,c
  1766  0022B4  EF4F  F010         	goto	l11804
  1767  0022B8  0A01               	xorlw	1	; case 1
  1768  0022BA  B4D8               	btfsc	status,2,c
  1769  0022BC  EF53  F010         	goto	l11806
  1770  0022C0  0A03               	xorlw	3	; case 2
  1771  0022C2  B4D8               	btfsc	status,2,c
  1772  0022C4  EF57  F010         	goto	l11808
  1773  0022C8  0A01               	xorlw	1	; case 3
  1774  0022CA  B4D8               	btfsc	status,2,c
  1775  0022CC  EF5B  F010         	goto	l11810
  1776  0022D0  0A07               	xorlw	7	; case 4
  1777  0022D2  B4D8               	btfsc	status,2,c
  1778  0022D4  EF4B  F011         	goto	l1928
  1779  0022D8  0A01               	xorlw	1	; case 5
  1780  0022DA  B4D8               	btfsc	status,2,c
  1781  0022DC  EF4B  F011         	goto	l1928
  1782  0022E0  0A03               	xorlw	3	; case 6
  1783  0022E2  B4D8               	btfsc	status,2,c
  1784  0022E4  EF5F  F010         	goto	l11812
  1785  0022E8  0A01               	xorlw	1	; case 7
  1786  0022EA  B4D8               	btfsc	status,2,c
  1787  0022EC  EF63  F010         	goto	l11814
  1788  0022F0  0A0F               	xorlw	15	; case 8
  1789  0022F2  B4D8               	btfsc	status,2,c
  1790  0022F4  EF67  F010         	goto	l11816
  1791  0022F8  0A01               	xorlw	1	; case 9
  1792  0022FA  B4D8               	btfsc	status,2,c
  1793  0022FC  EF4B  F011         	goto	l1928
  1794  002300  0A03               	xorlw	3	; case 10
  1795  002302  B4D8               	btfsc	status,2,c
  1796  002304  EF4B  F011         	goto	l1928
  1797  002308  0A1A               	xorlw	26	; case 16
  1798  00230A  B4D8               	btfsc	status,2,c
  1799  00230C  EF6B  F010         	goto	l11818
  1800  002310  0A01               	xorlw	1	; case 17
  1801  002312  B4D8               	btfsc	status,2,c
  1802  002314  EF74  F010         	goto	l11820
  1803  002318  0A03               	xorlw	3	; case 18
  1804  00231A  B4D8               	btfsc	status,2,c
  1805  00231C  EF7D  F010         	goto	l11822
  1806  002320  0A01               	xorlw	1	; case 19
  1807  002322  B4D8               	btfsc	status,2,c
  1808  002324  EF98  F010         	goto	l11830
  1809  002328  0A07               	xorlw	7	; case 20
  1810  00232A  B4D8               	btfsc	status,2,c
  1811  00232C  EFA5  F010         	goto	l11838
  1812  002330  0A01               	xorlw	1	; case 21
  1813  002332  B4D8               	btfsc	status,2,c
  1814  002334  EFC0  F010         	goto	l11846
  1815  002338  0A03               	xorlw	3	; case 22
  1816  00233A  B4D8               	btfsc	status,2,c
  1817  00233C  EFCD  F010         	goto	l11854
  1818  002340  0A01               	xorlw	1	; case 23
  1819  002342  B4D8               	btfsc	status,2,c
  1820  002344  EFE8  F010         	goto	l11862
  1821  002348  0A0F               	xorlw	15	; case 24
  1822  00234A  B4D8               	btfsc	status,2,c
  1823  00234C  EFF5  F010         	goto	l11870
  1824  002350  0A01               	xorlw	1	; case 25
  1825  002352  B4D8               	btfsc	status,2,c
  1826  002354  EF10  F011         	goto	l11878
  1827  002358  0A54               	xorlw	84	; case 77
  1828  00235A  B4D8               	btfsc	status,2,c
  1829  00235C  EF1D  F011         	goto	l11886
  1830  002360  0A03               	xorlw	3	; case 78
  1831  002362  B4D8               	btfsc	status,2,c
  1832  002364  EF36  F011         	goto	l11888
  1833  002368  0A01               	xorlw	1	; case 79
  1834  00236A  B4D8               	btfsc	status,2,c
  1835  00236C  EF47  F011         	goto	l11890
  1836  002370  EF4B  F011         	goto	l1928
  1837  002374  EF43  F001         	goto	start
  1838  002378                     __end_of_main:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _stepper_move_one_deg_cw *****************
  1842 ;; Defined at:
  1843 ;;		line 61 in file "ECU/stepper/ecu_stepper.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  stepper         2    6[BANK0 ] PTR struct .
  1846 ;;		 -> stepper_base(2), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  i               2    8[BANK0 ] int 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:        4 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 10
  1865 ;; This function calls:
  1866 ;;		_Ecu_Stepper_Step
  1867 ;;		_GPIO_Pin_Write_Logic
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text1
  1874  004B88                     __ptext1:
  1875                           	callstack 0
  1876  004B88                     _stepper_move_one_deg_cw:
  1877                           	callstack 20
  1878  004B88                     
  1879                           ;ECU/stepper/ecu_stepper.c: 61: Std_ReturnType stepper_move_one_deg_cw(stepper_config_st
      +                           *stepper);ECU/stepper/ecu_stepper.c: 62: {;ECU/stepper/ecu_stepper.c: 63:     if(((void
      +                          *)0) == stepper)
  1880  004B88  0100               	movlb	0	; () banked
  1881  004B8A  5166               	movf	stepper_move_one_deg_cw@stepper& (0+255),w,b
  1882  004B8C  1167               	iorwf	(stepper_move_one_deg_cw@stepper+1)& (0+255),w,b
  1883  004B8E  A4D8               	btfss	status,2,c
  1884  004B90  EFCC  F025         	goto	u12051
  1885  004B94  EFCE  F025         	goto	u12050
  1886  004B98                     u12051:
  1887  004B98  EFD0  F025         	goto	l11200
  1888  004B9C                     u12050:
  1889  004B9C  EFF6  F025         	goto	l342
  1890  004BA0                     l11200:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;ECU/stepper/ecu_stepper.c: 68:     {;ECU/stepper/ecu_stepper.c: 69:        GPIO_Pin_Wri
      +                          te_Logic(&(stepper->dir_pin) , GPIO_HIGH);
  1894  004BA0  0E01               	movlw	1
  1895  004BA2  2566               	addwf	stepper_move_one_deg_cw@stepper& (0+255),w,b
  1896  004BA4  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1897  004BA6  0E00               	movlw	0
  1898  004BA8  2167               	addwfc	(stepper_move_one_deg_cw@stepper+1)& (0+255),w,b
  1899  004BAA  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1900  004BAC  0E01               	movlw	1
  1901  004BAE  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1902  004BB0  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  1903  004BB4                     
  1904                           ;ECU/stepper/ecu_stepper.c: 70:         for(int i=0; i<= 9; i++)
  1905  004BB4  0E00               	movlw	0
  1906  004BB6  0100               	movlb	0	; () banked
  1907  004BB8  6F69               	movwf	(stepper_move_one_deg_cw@i+1)& (0+255),b
  1908  004BBA  0E00               	movlw	0
  1909  004BBC  6F68               	movwf	stepper_move_one_deg_cw@i& (0+255),b
  1910  004BBE                     l11208:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;ECU/stepper/ecu_stepper.c: 71:         {;ECU/stepper/ecu_stepper.c: 72:             Ecu
      +                          _Stepper_Step(stepper);
  1914  004BBE  C066  F022         	movff	stepper_move_one_deg_cw@stepper,Ecu_Stepper_Step@stepper
  1915  004BC2  C067  F023         	movff	stepper_move_one_deg_cw@stepper+1,Ecu_Stepper_Step@stepper+1
  1916  004BC6  EC5D  F026         	call	_Ecu_Stepper_Step	;wreg free
  1917  004BCA                     
  1918                           ;ECU/stepper/ecu_stepper.c: 73:         }
  1919  004BCA  0100               	movlb	0	; () banked
  1920  004BCC  4B68               	infsnz	stepper_move_one_deg_cw@i& (0+255),f,b
  1921  004BCE  2B69               	incf	(stepper_move_one_deg_cw@i+1)& (0+255),f,b
  1922  004BD0                     
  1923                           ; BSR set to: 0
  1924  004BD0  BF69               	btfsc	(stepper_move_one_deg_cw@i+1)& (0+255),7,b
  1925  004BD2  EFF4  F025         	goto	u12061
  1926  004BD6  5169               	movf	(stepper_move_one_deg_cw@i+1)& (0+255),w,b
  1927  004BD8  E109               	bnz	u12060
  1928  004BDA  0E0A               	movlw	10
  1929  004BDC  5D68               	subwf	stepper_move_one_deg_cw@i& (0+255),w,b
  1930  004BDE  A0D8               	btfss	status,0,c
  1931  004BE0  EFF4  F025         	goto	u12061
  1932  004BE4  EFF6  F025         	goto	u12060
  1933  004BE8                     u12061:
  1934  004BE8  EFDF  F025         	goto	l11208
  1935  004BEC                     u12060:
  1936  004BEC                     l342:
  1937                           
  1938                           ; BSR set to: 0
  1939  004BEC  0012               	return		;funcret
  1940  004BEE                     __end_of_stepper_move_one_deg_cw:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _stepper_move_one_deg_ccw *****************
  1944 ;; Defined at:
  1945 ;;		line 77 in file "ECU/stepper/ecu_stepper.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  stepper         2    6[BANK0 ] PTR struct .
  1948 ;;		 -> stepper_base(2), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  i               2    8[BANK0 ] int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      unsigned char 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 10
  1967 ;; This function calls:
  1968 ;;		_Ecu_Stepper_Step
  1969 ;;		_GPIO_Pin_Write_Logic
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text2
  1976  004BEE                     __ptext2:
  1977                           	callstack 0
  1978  004BEE                     _stepper_move_one_deg_ccw:
  1979                           	callstack 20
  1980  004BEE                     
  1981                           ;ECU/stepper/ecu_stepper.c: 77: Std_ReturnType stepper_move_one_deg_ccw(stepper_config_s
      +                          t *stepper);ECU/stepper/ecu_stepper.c: 78: {;ECU/stepper/ecu_stepper.c: 79:     if(((voi
      +                          d*)0) == stepper)
  1982  004BEE  0100               	movlb	0	; () banked
  1983  004BF0  5166               	movf	stepper_move_one_deg_ccw@stepper& (0+255),w,b
  1984  004BF2  1167               	iorwf	(stepper_move_one_deg_ccw@stepper+1)& (0+255),w,b
  1985  004BF4  A4D8               	btfss	status,2,c
  1986  004BF6  EFFF  F025         	goto	u12071
  1987  004BFA  EF01  F026         	goto	u12070
  1988  004BFE                     u12071:
  1989  004BFE  EF03  F026         	goto	l11220
  1990  004C02                     u12070:
  1991  004C02  EF29  F026         	goto	l349
  1992  004C06                     l11220:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;ECU/stepper/ecu_stepper.c: 84:     {;ECU/stepper/ecu_stepper.c: 85:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->dir_pin) , GPIO_LOW);
  1996  004C06  0E01               	movlw	1
  1997  004C08  2566               	addwf	stepper_move_one_deg_ccw@stepper& (0+255),w,b
  1998  004C0A  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1999  004C0C  0E00               	movlw	0
  2000  004C0E  2167               	addwfc	(stepper_move_one_deg_ccw@stepper+1)& (0+255),w,b
  2001  004C10  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  2002  004C12  0E00               	movlw	0
  2003  004C14  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2004  004C16  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  2005  004C1A                     
  2006                           ;ECU/stepper/ecu_stepper.c: 86:         for(int i=0; i<= 9; i++)
  2007  004C1A  0E00               	movlw	0
  2008  004C1C  0100               	movlb	0	; () banked
  2009  004C1E  6F69               	movwf	(stepper_move_one_deg_ccw@i+1)& (0+255),b
  2010  004C20  0E00               	movlw	0
  2011  004C22  6F68               	movwf	stepper_move_one_deg_ccw@i& (0+255),b
  2012  004C24                     l11228:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;ECU/stepper/ecu_stepper.c: 87:         {;ECU/stepper/ecu_stepper.c: 88:             Ecu
      +                          _Stepper_Step(stepper);
  2016  004C24  C066  F022         	movff	stepper_move_one_deg_ccw@stepper,Ecu_Stepper_Step@stepper
  2017  004C28  C067  F023         	movff	stepper_move_one_deg_ccw@stepper+1,Ecu_Stepper_Step@stepper+1
  2018  004C2C  EC5D  F026         	call	_Ecu_Stepper_Step	;wreg free
  2019  004C30                     
  2020                           ;ECU/stepper/ecu_stepper.c: 89:         }
  2021  004C30  0100               	movlb	0	; () banked
  2022  004C32  4B68               	infsnz	stepper_move_one_deg_ccw@i& (0+255),f,b
  2023  004C34  2B69               	incf	(stepper_move_one_deg_ccw@i+1)& (0+255),f,b
  2024  004C36                     
  2025                           ; BSR set to: 0
  2026  004C36  BF69               	btfsc	(stepper_move_one_deg_ccw@i+1)& (0+255),7,b
  2027  004C38  EF27  F026         	goto	u12081
  2028  004C3C  5169               	movf	(stepper_move_one_deg_ccw@i+1)& (0+255),w,b
  2029  004C3E  E109               	bnz	u12080
  2030  004C40  0E0A               	movlw	10
  2031  004C42  5D68               	subwf	stepper_move_one_deg_ccw@i& (0+255),w,b
  2032  004C44  A0D8               	btfss	status,0,c
  2033  004C46  EF27  F026         	goto	u12081
  2034  004C4A  EF29  F026         	goto	u12080
  2035  004C4E                     u12081:
  2036  004C4E  EF12  F026         	goto	l11228
  2037  004C52                     u12080:
  2038  004C52                     l349:
  2039                           
  2040                           ; BSR set to: 0
  2041  004C52  0012               	return		;funcret
  2042  004C54                     __end_of_stepper_move_one_deg_ccw:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _Ecu_Stepper_Step *****************
  2046 ;; Defined at:
  2047 ;;		line 26 in file "ECU/stepper/ecu_stepper.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  stepper         2   33[COMRAM] PTR struct .
  2050 ;;		 -> stepper_base(2), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      unsigned char 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:        4 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 9
  2069 ;; This function calls:
  2070 ;;		_GPIO_Pin_Write_Logic
  2071 ;; This function is called by:
  2072 ;;		_stepper_move_one_deg_cw
  2073 ;;		_stepper_move_one_deg_ccw
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text3
  2078  004CBA                     __ptext3:
  2079                           	callstack 0
  2080  004CBA                     _Ecu_Stepper_Step:
  2081                           	callstack 20
  2082  004CBA                     
  2083                           ;ECU/stepper/ecu_stepper.c: 26: Std_ReturnType Ecu_Stepper_Step(stepper_config_st *stepp
      +                          er);ECU/stepper/ecu_stepper.c: 27: {;ECU/stepper/ecu_stepper.c: 28:     if(((void*)0) ==
      +                           stepper)
  2084  004CBA  5022               	movf	Ecu_Stepper_Step@stepper^0,w,c
  2085  004CBC  1023               	iorwf	(Ecu_Stepper_Step@stepper+1)^0,w,c
  2086  004CBE  A4D8               	btfss	status,2,c
  2087  004CC0  EF64  F026         	goto	u11891
  2088  004CC4  EF66  F026         	goto	u11890
  2089  004CC8                     u11891:
  2090  004CC8  EF68  F026         	goto	l11038
  2091  004CCC                     u11890:
  2092  004CCC  EF8E  F026         	goto	l330
  2093  004CD0                     l11038:
  2094                           
  2095                           ;ECU/stepper/ecu_stepper.c: 33:     {;ECU/stepper/ecu_stepper.c: 34:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->step_pin) , 1);
  2096  004CD0  C022  F01E         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  2097  004CD4  C023  F01F         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2098  004CD8  0E01               	movlw	1
  2099  004CDA  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2100  004CDC  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  2101  004CE0                     
  2102                           ;ECU/stepper/ecu_stepper.c: 35:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2103  004CE0  0E06               	movlw	6
  2104  004CE2  6E25               	movwf	(??_Ecu_Stepper_Step+1)^0,c
  2105  004CE4  0E13               	movlw	19
  2106  004CE6  6E24               	movwf	??_Ecu_Stepper_Step^0,c
  2107  004CE8  0EAE               	movlw	174
  2108  004CEA                     u12617:
  2109  004CEA  2EE8               	decfsz	wreg,f,c
  2110  004CEC  D7FE               	bra	u12617
  2111  004CEE  2E24               	decfsz	??_Ecu_Stepper_Step^0,f,c
  2112  004CF0  D7FC               	bra	u12617
  2113  004CF2  2E25               	decfsz	(??_Ecu_Stepper_Step+1)^0,f,c
  2114  004CF4  D7FA               	bra	u12617
  2115  004CF6                     
  2116                           ;ECU/stepper/ecu_stepper.c: 36:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , 0);
  2117  004CF6  C022  F01E         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  2118  004CFA  C023  F01F         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2119  004CFE  0E00               	movlw	0
  2120  004D00  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2121  004D02  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  2122                           
  2123                           ;ECU/stepper/ecu_stepper.c: 37:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2124  004D06  0E06               	movlw	6
  2125  004D08  6E25               	movwf	(??_Ecu_Stepper_Step+1)^0,c
  2126  004D0A  0E13               	movlw	19
  2127  004D0C  6E24               	movwf	??_Ecu_Stepper_Step^0,c
  2128  004D0E  0EAE               	movlw	174
  2129  004D10                     u12627:
  2130  004D10  2EE8               	decfsz	wreg,f,c
  2131  004D12  D7FE               	bra	u12627
  2132  004D14  2E24               	decfsz	??_Ecu_Stepper_Step^0,f,c
  2133  004D16  D7FC               	bra	u12627
  2134  004D18  2E25               	decfsz	(??_Ecu_Stepper_Step+1)^0,f,c
  2135  004D1A  D7FA               	bra	u12627
  2136  004D1C                     l330:
  2137  004D1C  0012               	return		;funcret
  2138  004D1E                     __end_of_Ecu_Stepper_Step:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _application_intialize *****************
  2142 ;; Defined at:
  2143 ;;		line 375 in file "application.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 13
  2164 ;; This function calls:
  2165 ;;		_EUSART_Async_Init
  2166 ;;		_Ecu_Stepper_Init
  2167 ;;		_GPIO_Pin_Initialize
  2168 ;;		_Robot_Nav_Init
  2169 ;;		_Servo_SetAngle
  2170 ;;		_Ultra_Sonic_Init
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text4
  2177  002DA2                     __ptext4:
  2178                           	callstack 0
  2179  002DA2                     _application_intialize:
  2180                           	callstack 17
  2181  002DA2                     
  2182                           ;application.c: 379:     GPIO_Pin_Initialize(&TEST_PIN);
  2183  002DA2  0E41               	movlw	low _TEST_PIN
  2184  002DA4  0100               	movlb	0	; () banked
  2185  002DA6  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  2186  002DA8  0E00               	movlw	high _TEST_PIN
  2187  002DAA  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  2188  002DAC  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  2189                           
  2190                           ;application.c: 380:     GPIO_Pin_Initialize(&selector);
  2191  002DB0  0E40               	movlw	low _selector
  2192  002DB2  0100               	movlb	0	; () banked
  2193  002DB4  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  2194  002DB6  0E00               	movlw	high _selector
  2195  002DB8  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  2196  002DBA  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  2197                           
  2198                           ;application.c: 384:     Ecu_Stepper_Init(&stepper_base);
  2199  002DBE  0E3E               	movlw	low _stepper_base
  2200  002DC0  0100               	movlb	0	; () banked
  2201  002DC2  6F69               	movwf	Ecu_Stepper_Init@stepper& (0+255),b
  2202  002DC4  0E00               	movlw	high _stepper_base
  2203  002DC6  6F6A               	movwf	(Ecu_Stepper_Init@stepper+1)& (0+255),b
  2204  002DC8  EC6C  F023         	call	_Ecu_Stepper_Init	;wreg free
  2205                           
  2206                           ;application.c: 388:     Robot_Nav_Init();
  2207  002DCC  EC26  F023         	call	_Robot_Nav_Init	;wreg free
  2208                           
  2209                           ;application.c: 392:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 0 , 90 );
  2210  002DD0  0EF1               	movlw	low _i2c_obj
  2211  002DD2  0101               	movlb	1	; () banked
  2212  002DD4  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2213  002DD6  0E00               	movlw	high _i2c_obj
  2214  002DD8  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2215  002DDA  0EF8               	movlw	low _servo_driver_obj
  2216  002DDC  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2217  002DDE  0E00               	movlw	high _servo_driver_obj
  2218  002DE0  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2219  002DE2  0E00               	movlw	0
  2220  002DE4  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2221  002DE6  0E5A               	movlw	90
  2222  002DE8  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2223  002DEA  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2224                           
  2225                           ;application.c: 393:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 1 , 90 );
  2226  002DEE  0EF1               	movlw	low _i2c_obj
  2227  002DF0  0101               	movlb	1	; () banked
  2228  002DF2  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2229  002DF4  0E00               	movlw	high _i2c_obj
  2230  002DF6  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2231  002DF8  0EF8               	movlw	low _servo_driver_obj
  2232  002DFA  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2233  002DFC  0E00               	movlw	high _servo_driver_obj
  2234  002DFE  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2235  002E00  0E01               	movlw	1
  2236  002E02  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2237  002E04  0E5A               	movlw	90
  2238  002E06  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2239  002E08  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2240                           
  2241                           ;application.c: 394:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 2 , 90 );
  2242  002E0C  0EF1               	movlw	low _i2c_obj
  2243  002E0E  0101               	movlb	1	; () banked
  2244  002E10  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2245  002E12  0E00               	movlw	high _i2c_obj
  2246  002E14  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2247  002E16  0EF8               	movlw	low _servo_driver_obj
  2248  002E18  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2249  002E1A  0E00               	movlw	high _servo_driver_obj
  2250  002E1C  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2251  002E1E  0E02               	movlw	2
  2252  002E20  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2253  002E22  0E5A               	movlw	90
  2254  002E24  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2255  002E26  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2256                           
  2257                           ;application.c: 395:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 3 , 90 );
  2258  002E2A  0EF1               	movlw	low _i2c_obj
  2259  002E2C  0101               	movlb	1	; () banked
  2260  002E2E  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2261  002E30  0E00               	movlw	high _i2c_obj
  2262  002E32  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2263  002E34  0EF8               	movlw	low _servo_driver_obj
  2264  002E36  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2265  002E38  0E00               	movlw	high _servo_driver_obj
  2266  002E3A  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2267  002E3C  0E03               	movlw	3
  2268  002E3E  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2269  002E40  0E5A               	movlw	90
  2270  002E42  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2271  002E44  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2272                           
  2273                           ;application.c: 399:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 4 , 0);
  2274  002E48  0EF1               	movlw	low _i2c_obj
  2275  002E4A  0101               	movlb	1	; () banked
  2276  002E4C  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2277  002E4E  0E00               	movlw	high _i2c_obj
  2278  002E50  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2279  002E52  0EF8               	movlw	low _servo_driver_obj
  2280  002E54  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2281  002E56  0E00               	movlw	high _servo_driver_obj
  2282  002E58  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2283  002E5A  0E04               	movlw	4
  2284  002E5C  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2285  002E5E  0E00               	movlw	0
  2286  002E60  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2287  002E62  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2288                           
  2289                           ;application.c: 400:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 5 , 0);
  2290  002E66  0EF1               	movlw	low _i2c_obj
  2291  002E68  0101               	movlb	1	; () banked
  2292  002E6A  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2293  002E6C  0E00               	movlw	high _i2c_obj
  2294  002E6E  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2295  002E70  0EF8               	movlw	low _servo_driver_obj
  2296  002E72  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2297  002E74  0E00               	movlw	high _servo_driver_obj
  2298  002E76  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2299  002E78  0E05               	movlw	5
  2300  002E7A  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2301  002E7C  0E00               	movlw	0
  2302  002E7E  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2303  002E80  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2304                           
  2305                           ;application.c: 401:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 6 , 0);
  2306  002E84  0EF1               	movlw	low _i2c_obj
  2307  002E86  0101               	movlb	1	; () banked
  2308  002E88  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2309  002E8A  0E00               	movlw	high _i2c_obj
  2310  002E8C  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2311  002E8E  0EF8               	movlw	low _servo_driver_obj
  2312  002E90  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2313  002E92  0E00               	movlw	high _servo_driver_obj
  2314  002E94  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2315  002E96  0E06               	movlw	6
  2316  002E98  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2317  002E9A  0E00               	movlw	0
  2318  002E9C  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2319  002E9E  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2320                           
  2321                           ;application.c: 402:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 7 , 0);
  2322  002EA2  0EF1               	movlw	low _i2c_obj
  2323  002EA4  0101               	movlb	1	; () banked
  2324  002EA6  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2325  002EA8  0E00               	movlw	high _i2c_obj
  2326  002EAA  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2327  002EAC  0EF8               	movlw	low _servo_driver_obj
  2328  002EAE  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2329  002EB0  0E00               	movlw	high _servo_driver_obj
  2330  002EB2  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2331  002EB4  0E07               	movlw	7
  2332  002EB6  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2333  002EB8  0E00               	movlw	0
  2334  002EBA  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  2335  002EBC  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  2336                           
  2337                           ;application.c: 405:     Ultra_Sonic_Init(&ultrasonic,&timer0);
  2338  002EC0  0EFC               	movlw	low _ultrasonic
  2339  002EC2  0100               	movlb	0	; () banked
  2340  002EC4  6F69               	movwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),b
  2341  002EC6  0E00               	movlw	high _ultrasonic
  2342  002EC8  6F6A               	movwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),b
  2343  002ECA  0ED5               	movlw	low _timer0
  2344  002ECC  6F6B               	movwf	Ultra_Sonic_Init@_tmr0_config& (0+255),b
  2345  002ECE  0E00               	movlw	high _timer0
  2346  002ED0  6F6C               	movwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),b
  2347  002ED2  ECEB  F026         	call	_Ultra_Sonic_Init	;wreg free
  2348  002ED6                     
  2349                           ;application.c: 408:     EUSART_Async_Init(&_uart_obj);
  2350  002ED6  0E0A               	movlw	low __uart_obj
  2351  002ED8  0101               	movlb	1	; () banked
  2352  002EDA  6F66               	movwf	EUSART_Async_Init@_eusart_obj& (0+255),b
  2353  002EDC  0E01               	movlw	high __uart_obj
  2354  002EDE  6F67               	movwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),b
  2355  002EE0  ECBD  F026         	call	_EUSART_Async_Init	;wreg free
  2356  002EE4  0012               	return		;funcret
  2357  002EE6                     __end_of_application_intialize:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _Ultra_Sonic_Init *****************
  2361 ;; Defined at:
  2362 ;;		line 9 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  ultrasonic_o    2    9[BANK0 ] PTR const struct .
  2365 ;;		 -> ultrasonic(2), 
  2366 ;;  _tmr0_config    2   11[BANK0 ] PTR const struct .
  2367 ;;		 -> timer0(4), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  ERRORSTATUS     1    0        unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      unsigned char 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2379 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;Total ram usage:        4 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 10
  2386 ;; This function calls:
  2387 ;;		_GPIO_Pin_Initialize
  2388 ;;		_HAL_Timer0_Init
  2389 ;; This function is called by:
  2390 ;;		_application_intialize
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text5
  2395  004DD6                     __ptext5:
  2396                           	callstack 0
  2397  004DD6                     _Ultra_Sonic_Init:
  2398                           	callstack 19
  2399  004DD6                     
  2400                           ;Robot/sensors/ultrasonic/ultrasonic.c: 12:     if ( ((void*)0)==ultrasonic_object||((vo
      +                          id*)0)==_tmr0_config)
  2401  004DD6  0100               	movlb	0	; () banked
  2402  004DD8  5169               	movf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  2403  004DDA  116A               	iorwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  2404  004DDC  B4D8               	btfsc	status,2,c
  2405  004DDE  EFF3  F026         	goto	u11941
  2406  004DE2  EFF5  F026         	goto	u11940
  2407  004DE6                     u11941:
  2408  004DE6  EFFE  F026         	goto	l11106
  2409  004DEA                     u11940:
  2410  004DEA                     
  2411                           ; BSR set to: 0
  2412  004DEA  516B               	movf	Ultra_Sonic_Init@_tmr0_config& (0+255),w,b
  2413  004DEC  116C               	iorwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),w,b
  2414  004DEE  A4D8               	btfss	status,2,c
  2415  004DF0  EFFC  F026         	goto	u11951
  2416  004DF4  EFFE  F026         	goto	u11950
  2417  004DF8                     u11951:
  2418  004DF8  EF00  F027         	goto	l11108
  2419  004DFC                     u11950:
  2420  004DFC                     l11106:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;Robot/sensors/ultrasonic/ultrasonic.c: 15:     }
  2424  004DFC  EF15  F027         	goto	l1792
  2425  004E00                     l11108:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;Robot/sensors/ultrasonic/ultrasonic.c: 17:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           18:         GPIO_Pin_Initialize(&(ultrasonic_object->trig_pin));
  2429  004E00  C069  F066         	movff	Ultra_Sonic_Init@ultrasonic_object,GPIO_Pin_Initialize@_pin_config
  2430  004E04  C06A  F067         	movff	Ultra_Sonic_Init@ultrasonic_object+1,GPIO_Pin_Initialize@_pin_config+1
  2431  004E08  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  2432                           
  2433                           ;Robot/sensors/ultrasonic/ultrasonic.c: 19:         GPIO_Pin_Initialize(&(ultrasonic_obj
      +                          ect->echo_pin));
  2434  004E0C  0E01               	movlw	1
  2435  004E0E  0100               	movlb	0	; () banked
  2436  004E10  2569               	addwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  2437  004E12  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  2438  004E14  0E00               	movlw	0
  2439  004E16  216A               	addwfc	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  2440  004E18  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  2441  004E1A  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  2442  004E1E                     
  2443                           ;Robot/sensors/ultrasonic/ultrasonic.c: 20:         HAL_Timer0_Init(_tmr0_config);
  2444  004E1E  C06B  F023         	movff	Ultra_Sonic_Init@_tmr0_config,HAL_Timer0_Init@_tmr0_config
  2445  004E22  C06C  F024         	movff	Ultra_Sonic_Init@_tmr0_config+1,HAL_Timer0_Init@_tmr0_config+1
  2446  004E26  EC01  F01B         	call	_HAL_Timer0_Init	;wreg free
  2447  004E2A                     l1792:
  2448  004E2A  0012               	return		;funcret
  2449  004E2C                     __end_of_Ultra_Sonic_Init:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _HAL_Timer0_Init *****************
  2453 ;; Defined at:
  2454 ;;		line 25 in file "MCAL/Timer0/hal_timer0.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  _tmr0_config    2   34[COMRAM] PTR const struct .
  2457 ;;		 -> timer0(4), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  ret_value       1    0        unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;Total ram usage:        3 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 9
  2476 ;; This function calls:
  2477 ;;		_HAL_Timer0_Write_Val
  2478 ;; This function is called by:
  2479 ;;		_Ultra_Sonic_Init
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text6
  2484  003602                     __ptext6:
  2485                           	callstack 0
  2486  003602                     _HAL_Timer0_Init:
  2487                           	callstack 19
  2488  003602                     
  2489                           ;MCAL/Timer0/hal_timer0.c: 29:     if(((void*)0) == _tmr0_config)
  2490  003602  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2491  003604  1024               	iorwf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2492  003606  A4D8               	btfss	status,2,c
  2493  003608  EF08  F01B         	goto	u11611
  2494  00360C  EF0A  F01B         	goto	u11610
  2495  003610                     u11611:
  2496  003610  EF0C  F01B         	goto	l1510
  2497  003614                     u11610:
  2498  003614                     
  2499                           ;MCAL/Timer0/hal_timer0.c: 32:     }
  2500  003614  EF80  F01B         	goto	l1517
  2501  003618                     l1510:
  2502                           
  2503                           ;MCAL/Timer0/hal_timer0.c: 34:     {;MCAL/Timer0/hal_timer0.c: 36:         (T0CONbits.TM
      +                          R0ON = 0 );
  2504  003618  9ED5               	bcf	213,7,c	;volatile
  2505  00361A                     
  2506                           ;MCAL/Timer0/hal_timer0.c: 38:         (T0CONbits.T08BIT = _tmr0_config->reg_bit_size);
  2507  00361A  EE20 F003          	lfsr	2,3
  2508  00361E  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2509  003620  26D9               	addwf	fsr2l,f,c
  2510  003622  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2511  003624  22DA               	addwfc	fsr2h,f,c
  2512  003626  A2DF               	btfss	indf2,1,c
  2513  003628  D002               	bra	u11625
  2514  00362A  8CD5               	bsf	213,6,c	;volatile
  2515  00362C  D001               	bra	u11627
  2516  00362E                     u11625:
  2517  00362E  9CD5               	bcf	213,6,c	;volatile
  2518  003630                     u11627:
  2519                           
  2520                           ;MCAL/Timer0/hal_timer0.c: 40:         if(0x00U == _tmr0_config->prescaler_enable )
  2521  003630  EE20 F003          	lfsr	2,3
  2522  003634  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2523  003636  26D9               	addwf	fsr2l,f,c
  2524  003638  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2525  00363A  22DA               	addwfc	fsr2h,f,c
  2526  00363C  B4DF               	btfsc	indf2,2,c
  2527  00363E  EF23  F01B         	goto	u11631
  2528  003642  EF25  F01B         	goto	u11630
  2529  003646                     u11631:
  2530  003646  EF33  F01B         	goto	l10844
  2531  00364A                     u11630:
  2532  00364A                     
  2533                           ;MCAL/Timer0/hal_timer0.c: 41:         {;MCAL/Timer0/hal_timer0.c: 42:             (T0CO
      +                          Nbits.T0PS = _tmr0_config->prescalar_value );
  2534  00364A  C023  FFD9         	movff	HAL_Timer0_Init@_tmr0_config,fsr2l
  2535  00364E  C024  FFDA         	movff	HAL_Timer0_Init@_tmr0_config+1,fsr2h
  2536  003652  50DF               	movf	indf2,w,c
  2537  003654  6E25               	movwf	??_HAL_Timer0_Init^0,c
  2538  003656  50D5               	movf	213,w,c	;volatile
  2539  003658  1825               	xorwf	??_HAL_Timer0_Init^0,w,c
  2540  00365A  0BF8               	andlw	-8
  2541  00365C  1825               	xorwf	??_HAL_Timer0_Init^0,w,c
  2542  00365E  6ED5               	movwf	213,c	;volatile
  2543  003660                     
  2544                           ;MCAL/Timer0/hal_timer0.c: 43:             (T0CONbits.PSA = 0 );
  2545  003660  96D5               	bcf	213,3,c	;volatile
  2546                           
  2547                           ;MCAL/Timer0/hal_timer0.c: 44:         }
  2548  003662  EF41  F01B         	goto	l10848
  2549  003666                     l10844:
  2550  003666  EE20 F003          	lfsr	2,3
  2551  00366A  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2552  00366C  26D9               	addwf	fsr2l,f,c
  2553  00366E  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2554  003670  22DA               	addwfc	fsr2h,f,c
  2555  003672  A4DF               	btfss	indf2,2,c
  2556  003674  EF3E  F01B         	goto	u11641
  2557  003678  EF40  F01B         	goto	u11640
  2558  00367C                     u11641:
  2559  00367C  EF41  F01B         	goto	l10848
  2560  003680                     u11640:
  2561  003680                     
  2562                           ;MCAL/Timer0/hal_timer0.c: 46:         {;MCAL/Timer0/hal_timer0.c: 47:             (T0CO
      +                          Nbits.PSA = 1 );
  2563  003680  86D5               	bsf	213,3,c	;volatile
  2564  003682                     l10848:
  2565                           
  2566                           ;MCAL/Timer0/hal_timer0.c: 52:         if( 0x01U == _tmr0_config->timer_mode)
  2567  003682  EE20 F003          	lfsr	2,3
  2568  003686  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2569  003688  26D9               	addwf	fsr2l,f,c
  2570  00368A  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2571  00368C  22DA               	addwfc	fsr2h,f,c
  2572  00368E  A0DF               	btfss	indf2,0,c
  2573  003690  EF4C  F01B         	goto	u11651
  2574  003694  EF4E  F01B         	goto	u11650
  2575  003698                     u11651:
  2576  003698  EF5A  F01B         	goto	l10854
  2577  00369C                     u11650:
  2578  00369C                     
  2579                           ;MCAL/Timer0/hal_timer0.c: 53:         {;MCAL/Timer0/hal_timer0.c: 55:              (T0C
      +                          ONbits.T0SE = _tmr0_config->edge);
  2580  00369C  EE20 F003          	lfsr	2,3
  2581  0036A0  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2582  0036A2  26D9               	addwf	fsr2l,f,c
  2583  0036A4  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2584  0036A6  22DA               	addwfc	fsr2h,f,c
  2585  0036A8  A6DF               	btfss	indf2,3,c
  2586  0036AA  D002               	bra	u11665
  2587  0036AC  88D5               	bsf	213,4,c	;volatile
  2588  0036AE  D001               	bra	u11667
  2589  0036B0                     u11665:
  2590  0036B0  98D5               	bcf	213,4,c	;volatile
  2591  0036B2                     u11667:
  2592  0036B2                     
  2593                           ;MCAL/Timer0/hal_timer0.c: 58:             (TRISA|=( (uint8)1<<GPIO_PIN4 ));
  2594  0036B2  8892               	bsf	146,4,c	;volatile
  2595  0036B4                     l10854:
  2596                           
  2597                           ;MCAL/Timer0/hal_timer0.c: 60:         (T0CONbits.T0CS = _tmr0_config->timer_mode);
  2598  0036B4  EE20 F003          	lfsr	2,3
  2599  0036B8  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2600  0036BA  26D9               	addwf	fsr2l,f,c
  2601  0036BC  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2602  0036BE  22DA               	addwfc	fsr2h,f,c
  2603  0036C0  A0DF               	btfss	indf2,0,c
  2604  0036C2  D002               	bra	u11675
  2605  0036C4  8AD5               	bsf	213,5,c	;volatile
  2606  0036C6  D001               	bra	u11677
  2607  0036C8                     u11675:
  2608  0036C8  9AD5               	bcf	213,5,c	;volatile
  2609  0036CA                     u11677:
  2610  0036CA  C023  F01E         	movff	HAL_Timer0_Init@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
  2611  0036CE  C024  F01F         	movff	HAL_Timer0_Init@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
  2612  0036D2  EE20 F001          	lfsr	2,1
  2613  0036D6  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2614  0036D8  26D9               	addwf	fsr2l,f,c
  2615  0036DA  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2616  0036DC  22DA               	addwfc	fsr2h,f,c
  2617  0036DE  CFDE F020          	movff	postinc2,HAL_Timer0_Write_Val@val
  2618  0036E2  CFDD F021          	movff	postdec2,HAL_Timer0_Write_Val@val+1
  2619  0036E6  EC01  F028         	call	_HAL_Timer0_Write_Val	;wreg free
  2620  0036EA                     
  2621                           ;MCAL/Timer0/hal_timer0.c: 64:         preloaded_val = _tmr0_config->preloaded_value ;
  2622  0036EA  EE20 F001          	lfsr	2,1
  2623  0036EE  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2624  0036F0  26D9               	addwf	fsr2l,f,c
  2625  0036F2  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2626  0036F4  22DA               	addwfc	fsr2h,f,c
  2627  0036F6  CFDE F0B2          	movff	postinc2,_preloaded_val
  2628  0036FA  CFDD F0B3          	movff	postdec2,_preloaded_val+1
  2629  0036FE                     
  2630                           ;MCAL/Timer0/hal_timer0.c: 97:         (T0CONbits.TMR0ON = 1 );
  2631  0036FE  8ED5               	bsf	213,7,c	;volatile
  2632  003700                     l1517:
  2633  003700  0012               	return		;funcret
  2634  003702                     __end_of_HAL_Timer0_Init:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _Robot_Nav_Init *****************
  2638 ;; Defined at:
  2639 ;;		line 38 in file "Robot/Navigation/robot_navigation.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  ret_val         1    0        unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      unsigned char 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 12
  2660 ;; This function calls:
  2661 ;;		_CCP_Init
  2662 ;;		_CCP_PWM_Set_Duty
  2663 ;;		_CCP_PWM_Start
  2664 ;;		_ECU_DC_Motor_Init
  2665 ;;		_ServoDriver_Init
  2666 ;; This function is called by:
  2667 ;;		_application_intialize
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text7
  2672  00464C                     __ptext7:
  2673                           	callstack 0
  2674  00464C                     _Robot_Nav_Init:
  2675                           	callstack 17
  2676  00464C                     
  2677                           ;Robot/Navigation/robot_navigation.c: 44:         ECU_DC_Motor_Init(&W1_W3_W5_Motor_Cont
      +                          rol);
  2678  00464C  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  2679  00464E  0100               	movlb	0	; () banked
  2680  004650  6F69               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  2681  004652  0E00               	movlw	high _W1_W3_W5_Motor_Control
  2682  004654  6F6A               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  2683  004656  EC53  F028         	call	_ECU_DC_Motor_Init	;wreg free
  2684  00465A                     
  2685                           ;Robot/Navigation/robot_navigation.c: 45:         ECU_DC_Motor_Init(&W2_W4_W6_Motor_Cont
      +                          rol);
  2686  00465A  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  2687  00465C  0100               	movlb	0	; () banked
  2688  00465E  6F69               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  2689  004660  0E00               	movlw	high _W2_W4_W6_Motor_Control
  2690  004662  6F6A               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  2691  004664  EC53  F028         	call	_ECU_DC_Motor_Init	;wreg free
  2692  004668                     
  2693                           ;Robot/Navigation/robot_navigation.c: 48:         CCP_Init(&CCP1_Obj);
  2694  004668  0E22               	movlw	low _CCP1_Obj
  2695  00466A  0100               	movlb	0	; () banked
  2696  00466C  6F69               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2697  00466E  0E01               	movlw	high _CCP1_Obj
  2698  004670  6F6A               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2699  004672  EC81  F01B         	call	_CCP_Init	;wreg free
  2700  004676                     
  2701                           ;Robot/Navigation/robot_navigation.c: 49:         CCP_Init(&CCP2_Obj);
  2702  004676  0E16               	movlw	low _CCP2_Obj
  2703  004678  0100               	movlb	0	; () banked
  2704  00467A  6F69               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2705  00467C  0E01               	movlw	high _CCP2_Obj
  2706  00467E  6F6A               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2707  004680  EC81  F01B         	call	_CCP_Init	;wreg free
  2708  004684                     
  2709                           ;Robot/Navigation/robot_navigation.c: 50:         CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  2710  004684  0E22               	movlw	low _CCP1_Obj
  2711  004686  0101               	movlb	1	; () banked
  2712  004688  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  2713  00468A  0E01               	movlw	high _CCP1_Obj
  2714  00468C  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  2715  00468E  0E00               	movlw	0
  2716  004690  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  2717  004692  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  2718  004696                     
  2719                           ;Robot/Navigation/robot_navigation.c: 51:         CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  2720  004696  0E16               	movlw	low _CCP2_Obj
  2721  004698  0101               	movlb	1	; () banked
  2722  00469A  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  2723  00469C  0E01               	movlw	high _CCP2_Obj
  2724  00469E  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  2725  0046A0  0E00               	movlw	0
  2726  0046A2  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  2727  0046A4  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  2728  0046A8                     
  2729                           ;Robot/Navigation/robot_navigation.c: 52:         CCP_PWM_Start(&CCP1_Obj);
  2730  0046A8  0E22               	movlw	low _CCP1_Obj
  2731  0046AA  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  2732  0046AC  0E01               	movlw	high _CCP1_Obj
  2733  0046AE  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  2734  0046B0  EC8F  F026         	call	_CCP_PWM_Start	;wreg free
  2735  0046B4                     
  2736                           ;Robot/Navigation/robot_navigation.c: 53:         CCP_PWM_Start(&CCP2_Obj);
  2737  0046B4  0E16               	movlw	low _CCP2_Obj
  2738  0046B6  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  2739  0046B8  0E01               	movlw	high _CCP2_Obj
  2740  0046BA  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  2741  0046BC  EC8F  F026         	call	_CCP_PWM_Start	;wreg free
  2742  0046C0                     
  2743                           ;Robot/Navigation/robot_navigation.c: 57:         ServoDriver_Init(&i2c_obj,&servo_drive
      +                          r_obj);
  2744  0046C0  0EF1               	movlw	low _i2c_obj
  2745  0046C2  0101               	movlb	1	; () banked
  2746  0046C4  6F5E               	movwf	ServoDriver_Init@i2c_obj& (0+255),b
  2747  0046C6  0E00               	movlw	high _i2c_obj
  2748  0046C8  6F5F               	movwf	(ServoDriver_Init@i2c_obj+1)& (0+255),b
  2749  0046CA  0EF8               	movlw	low _servo_driver_obj
  2750  0046CC  6F60               	movwf	ServoDriver_Init@servo_driver_obj& (0+255),b
  2751  0046CE  0E00               	movlw	high _servo_driver_obj
  2752  0046D0  6F61               	movwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),b
  2753  0046D2  EC56  F01D         	call	_ServoDriver_Init	;wreg free
  2754  0046D6  0012               	return		;funcret
  2755  0046D8                     __end_of_Robot_Nav_Init:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _ServoDriver_Init *****************
  2759 ;; Defined at:
  2760 ;;		line 13 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  i2c_obj         2   13[BANK1 ] PTR const struct .
  2763 ;;		 -> i2c_obj(7), 
  2764 ;;  servo_driver    2   15[BANK1 ] PTR const struct .
  2765 ;;		 -> servo_driver_obj(4), 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  ERRORSTATUS     1    0        unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        4 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 11
  2784 ;; This function calls:
  2785 ;;		_MSSP_I2C_Init
  2786 ;;		_PCA_Write_Reg
  2787 ;; This function is called by:
  2788 ;;		_Robot_Nav_Init
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text8
  2793  003AAC                     __ptext8:
  2794                           	callstack 0
  2795  003AAC                     _ServoDriver_Init:
  2796                           	callstack 17
  2797  003AAC                     
  2798                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 16:     if ((((void*)0)==i2c_obj)
      +                          ||(((void*)0)==servo_driver_obj))
  2799  003AAC  0101               	movlb	1	; () banked
  2800  003AAE  515E               	movf	ServoDriver_Init@i2c_obj& (0+255),w,b
  2801  003AB0  115F               	iorwf	(ServoDriver_Init@i2c_obj+1)& (0+255),w,b
  2802  003AB2  B4D8               	btfsc	status,2,c
  2803  003AB4  EF5E  F01D         	goto	u11391
  2804  003AB8  EF60  F01D         	goto	u11390
  2805  003ABC                     u11391:
  2806  003ABC  EF69  F01D         	goto	l10676
  2807  003AC0                     u11390:
  2808  003AC0                     
  2809                           ; BSR set to: 1
  2810  003AC0  5160               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2811  003AC2  1161               	iorwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2812  003AC4  A4D8               	btfss	status,2,c
  2813  003AC6  EF67  F01D         	goto	u11401
  2814  003ACA  EF69  F01D         	goto	u11400
  2815  003ACE                     u11401:
  2816  003ACE  EF6B  F01D         	goto	l10678
  2817  003AD2                     u11400:
  2818  003AD2                     l10676:
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 19:     }
  2822  003AD2  EFBC  F01D         	goto	l300
  2823  003AD6                     l10678:
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 21:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 22:      MSSP_I2C_Init(i2c_obj);
  2827  003AD6  C15E  F15C         	movff	ServoDriver_Init@i2c_obj,MSSP_I2C_Init@i2c_obj
  2828  003ADA  C15F  F15D         	movff	ServoDriver_Init@i2c_obj+1,MSSP_I2C_Init@i2c_obj+1
  2829  003ADE  ECB5  F018         	call	_MSSP_I2C_Init	;wreg free
  2830                           
  2831                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 23:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0xFE,servo_driver_obj->frequancy);
  2832  003AE2  C15E  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2833  003AE6  C15F  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2834  003AEA  C160  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2835  003AEE  C161  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2836  003AF2  50DF               	movf	indf2,w,c
  2837  003AF4  0100               	movlb	0	; () banked
  2838  003AF6  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2839  003AF8  0EFE               	movlw	254
  2840  003AFA  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2841  003AFC  0101               	movlb	1	; () banked
  2842  003AFE  EE20 F001          	lfsr	2,1
  2843  003B02  5160               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2844  003B04  26D9               	addwf	fsr2l,f,c
  2845  003B06  5161               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2846  003B08  22DA               	addwfc	fsr2h,f,c
  2847  003B0A  50DF               	movf	indf2,w,c
  2848  003B0C  0100               	movlb	0	; () banked
  2849  003B0E  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2850  003B10  EC2A  F026         	call	_PCA_Write_Reg	;wreg free
  2851                           
  2852                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 24:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x00,servo_driver_obj->mode_1_cfg);
  2853  003B14  C15E  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2854  003B18  C15F  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2855  003B1C  C160  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2856  003B20  C161  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2857  003B24  50DF               	movf	indf2,w,c
  2858  003B26  0100               	movlb	0	; () banked
  2859  003B28  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2860  003B2A  0E00               	movlw	0
  2861  003B2C  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2862  003B2E  0101               	movlb	1	; () banked
  2863  003B30  EE20 F002          	lfsr	2,2
  2864  003B34  5160               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2865  003B36  26D9               	addwf	fsr2l,f,c
  2866  003B38  5161               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2867  003B3A  22DA               	addwfc	fsr2h,f,c
  2868  003B3C  50DF               	movf	indf2,w,c
  2869  003B3E  0100               	movlb	0	; () banked
  2870  003B40  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2871  003B42  EC2A  F026         	call	_PCA_Write_Reg	;wreg free
  2872                           
  2873                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 25:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x01,servo_driver_obj->mode_2_cfg);
  2874  003B46  C15E  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2875  003B4A  C15F  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2876  003B4E  C160  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2877  003B52  C161  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2878  003B56  50DF               	movf	indf2,w,c
  2879  003B58  0100               	movlb	0	; () banked
  2880  003B5A  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2881  003B5C  0E01               	movlw	1
  2882  003B5E  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2883  003B60  0101               	movlb	1	; () banked
  2884  003B62  EE20 F003          	lfsr	2,3
  2885  003B66  5160               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2886  003B68  26D9               	addwf	fsr2l,f,c
  2887  003B6A  5161               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2888  003B6C  22DA               	addwfc	fsr2h,f,c
  2889  003B6E  50DF               	movf	indf2,w,c
  2890  003B70  0100               	movlb	0	; () banked
  2891  003B72  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2892  003B74  EC2A  F026         	call	_PCA_Write_Reg	;wreg free
  2893  003B78                     l300:
  2894  003B78  0012               	return		;funcret
  2895  003B7A                     __end_of_ServoDriver_Init:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _MSSP_I2C_Init *****************
  2899 ;; Defined at:
  2900 ;;		line 23 in file "MCAL/I2C/mcal_i2c.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  i2c_obj         2   11[BANK1 ] PTR const struct .
  2903 ;;		 -> i2c_obj(7), 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  ERRORSTATUS     1    0        unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 10
  2922 ;; This function calls:
  2923 ;;		_I2C_Master_Mode_Clock_Configurations
  2924 ;;		_I2C_Pin_Configurations
  2925 ;;		_I2C_Slave_Mode_Clock_Configurations
  2926 ;; This function is called by:
  2927 ;;		_ServoDriver_Init
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text9
  2932  00316A                     __ptext9:
  2933                           	callstack 0
  2934  00316A                     _MSSP_I2C_Init:
  2935                           	callstack 17
  2936  00316A                     
  2937                           ;MCAL/I2C/mcal_i2c.c: 26:     if (((void*)0)==i2c_obj)
  2938  00316A  0101               	movlb	1	; () banked
  2939  00316C  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2940  00316E  115D               	iorwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2941  003170  A4D8               	btfss	status,2,c
  2942  003172  EFBD  F018         	goto	u10831
  2943  003176  EFBF  F018         	goto	u10830
  2944  00317A                     u10831:
  2945  00317A  EFC1  F018         	goto	l984
  2946  00317E                     u10830:
  2947  00317E                     
  2948                           ; BSR set to: 1
  2949                           ;MCAL/I2C/mcal_i2c.c: 29:     }
  2950  00317E  EF53  F019         	goto	l1002
  2951  003182                     l984:
  2952                           
  2953                           ; BSR set to: 1
  2954                           ;MCAL/I2C/mcal_i2c.c: 31:     {;MCAL/I2C/mcal_i2c.c: 33:         (SSPCON1bits.SSPEN = 0)
      +                          ;
  2955  003182  9AC6               	bcf	198,5,c	;volatile
  2956  003184                     
  2957                           ; BSR set to: 1
  2958                           ;MCAL/I2C/mcal_i2c.c: 35:         if(1==i2c_obj->i2c_cfg.i2c_mode)
  2959  003184  EE20 F006          	lfsr	2,6
  2960  003188  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2961  00318A  26D9               	addwf	fsr2l,f,c
  2962  00318C  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2963  00318E  22DA               	addwfc	fsr2h,f,c
  2964  003190  A0DF               	btfss	indf2,0,c
  2965  003192  EFCD  F018         	goto	u10841
  2966  003196  EFCF  F018         	goto	u10840
  2967  00319A                     u10841:
  2968  00319A  EFD7  F018         	goto	l10340
  2969  00319E                     u10840:
  2970  00319E                     
  2971                           ; BSR set to: 1
  2972                           ;MCAL/I2C/mcal_i2c.c: 36:         {;MCAL/I2C/mcal_i2c.c: 38:            I2C_Master_Mode_
      +                          Clock_Configurations(i2c_obj);
  2973  00319E  C15C  F159         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  2974  0031A2  C15D  F15A         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  2975  0031A6  ECF7  F01F         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  2976                           
  2977                           ;MCAL/I2C/mcal_i2c.c: 39:         }
  2978  0031AA  EF13  F019         	goto	l10354
  2979  0031AE                     l10340:
  2980                           
  2981                           ; BSR set to: 1
  2982  0031AE  EE20 F006          	lfsr	2,6
  2983  0031B2  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2984  0031B4  26D9               	addwf	fsr2l,f,c
  2985  0031B6  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2986  0031B8  22DA               	addwfc	fsr2h,f,c
  2987  0031BA  B0DF               	btfsc	indf2,0,c
  2988  0031BC  EFE2  F018         	goto	u10851
  2989  0031C0  EFE4  F018         	goto	u10850
  2990  0031C4                     u10851:
  2991  0031C4  EF13  F019         	goto	l10354
  2992  0031C8                     u10850:
  2993  0031C8                     
  2994                           ; BSR set to: 1
  2995                           ;MCAL/I2C/mcal_i2c.c: 41:         {;MCAL/I2C/mcal_i2c.c: 43:             if(1==i2c_obj->
      +                          i2c_cfg.i2c_general_call)
  2996  0031C8  EE20 F006          	lfsr	2,6
  2997  0031CC  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2998  0031CE  26D9               	addwf	fsr2l,f,c
  2999  0031D0  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3000  0031D2  22DA               	addwfc	fsr2h,f,c
  3001  0031D4  A6DF               	btfss	indf2,3,c
  3002  0031D6  EFEF  F018         	goto	u10861
  3003  0031DA  EFF1  F018         	goto	u10860
  3004  0031DE                     u10861:
  3005  0031DE  EFF4  F018         	goto	l10346
  3006  0031E2                     u10860:
  3007  0031E2                     
  3008                           ; BSR set to: 1
  3009                           ;MCAL/I2C/mcal_i2c.c: 44:             {;MCAL/I2C/mcal_i2c.c: 45:                 (SSPCON
      +                          2bits.GCEN = 1);
  3010  0031E2  8EC5               	bsf	197,7,c	;volatile
  3011                           
  3012                           ;MCAL/I2C/mcal_i2c.c: 46:             }
  3013  0031E4  EF02  F019         	goto	l990
  3014  0031E8                     l10346:
  3015                           
  3016                           ; BSR set to: 1
  3017  0031E8  EE20 F006          	lfsr	2,6
  3018  0031EC  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3019  0031EE  26D9               	addwf	fsr2l,f,c
  3020  0031F0  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3021  0031F2  22DA               	addwfc	fsr2h,f,c
  3022  0031F4  B6DF               	btfsc	indf2,3,c
  3023  0031F6  EFFF  F018         	goto	u10871
  3024  0031FA  EF01  F019         	goto	u10870
  3025  0031FE                     u10871:
  3026  0031FE  EF02  F019         	goto	l990
  3027  003202                     u10870:
  3028  003202                     
  3029                           ; BSR set to: 1
  3030                           ;MCAL/I2C/mcal_i2c.c: 48:             {;MCAL/I2C/mcal_i2c.c: 49:                 (SSPCON
      +                          2bits.GCEN = 0);
  3031  003202  9EC5               	bcf	197,7,c	;volatile
  3032  003204                     l990:
  3033                           
  3034                           ; BSR set to: 1
  3035                           ;MCAL/I2C/mcal_i2c.c: 53:              SSPCON1bits.WCOL=0;
  3036  003204  9EC6               	bcf	198,7,c	;volatile
  3037                           
  3038                           ;MCAL/I2C/mcal_i2c.c: 55:              SSPCON1bits.SSPOV=0;
  3039  003206  9CC6               	bcf	198,6,c	;volatile
  3040                           
  3041                           ;MCAL/I2C/mcal_i2c.c: 57:              SSPCON1bits.CKP=1;
  3042  003208  88C6               	bsf	198,4,c	;volatile
  3043  00320A                     
  3044                           ; BSR set to: 1
  3045                           ;MCAL/I2C/mcal_i2c.c: 59:              SSPADD=i2c_obj->i2c_cfg.i2c_slave_address;
  3046  00320A  EE20 F005          	lfsr	2,5
  3047  00320E  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3048  003210  26D9               	addwf	fsr2l,f,c
  3049  003212  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3050  003214  22DA               	addwfc	fsr2h,f,c
  3051  003216  50DF               	movf	indf2,w,c
  3052  003218  6EC8               	movwf	200,c	;volatile
  3053  00321A                     
  3054                           ; BSR set to: 1
  3055                           ;MCAL/I2C/mcal_i2c.c: 61:              I2C_Slave_Mode_Clock_Configurations(i2c_obj);
  3056  00321A  C15C  F01E         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Clock_Configurations@i2c_obj
  3057  00321E  C15D  F01F         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Clock_Configurations@i2c_obj+1
  3058  003222  EC76  F027         	call	_I2C_Slave_Mode_Clock_Configurations	;wreg free
  3059  003226                     l10354:
  3060                           
  3061                           ;MCAL/I2C/mcal_i2c.c: 65:         I2C_Pin_Configurations();
  3062  003226  ECD2  F028         	call	_I2C_Pin_Configurations	;wreg free
  3063  00322A                     
  3064                           ;MCAL/I2C/mcal_i2c.c: 67:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  3065  00322A  0101               	movlb	1	; () banked
  3066  00322C  EE20 F006          	lfsr	2,6
  3067  003230  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3068  003232  26D9               	addwf	fsr2l,f,c
  3069  003234  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3070  003236  22DA               	addwfc	fsr2h,f,c
  3071  003238  A2DF               	btfss	indf2,1,c
  3072  00323A  EF21  F019         	goto	u10881
  3073  00323E  EF23  F019         	goto	u10880
  3074  003242                     u10881:
  3075  003242  EF26  F019         	goto	l10360
  3076  003246                     u10880:
  3077  003246                     
  3078                           ; BSR set to: 1
  3079                           ;MCAL/I2C/mcal_i2c.c: 68:             (SSPSTATbits.SMP = 1);
  3080  003246  8EC7               	bsf	199,7,c	;volatile
  3081                           
  3082                           ;MCAL/I2C/mcal_i2c.c: 69:         }
  3083  003248  EF34  F019         	goto	l10364
  3084  00324C                     l10360:
  3085                           
  3086                           ; BSR set to: 1
  3087  00324C  EE20 F006          	lfsr	2,6
  3088  003250  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3089  003252  26D9               	addwf	fsr2l,f,c
  3090  003254  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3091  003256  22DA               	addwfc	fsr2h,f,c
  3092  003258  B2DF               	btfsc	indf2,1,c
  3093  00325A  EF31  F019         	goto	u10891
  3094  00325E  EF33  F019         	goto	u10890
  3095  003262                     u10891:
  3096  003262  EF34  F019         	goto	l10364
  3097  003266                     u10890:
  3098  003266                     
  3099                           ; BSR set to: 1
  3100                           ;MCAL/I2C/mcal_i2c.c: 71:             (SSPSTATbits.SMP = 0);
  3101  003266  9EC7               	bcf	199,7,c	;volatile
  3102  003268                     l10364:
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;MCAL/I2C/mcal_i2c.c: 75:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  3106  003268  EE20 F006          	lfsr	2,6
  3107  00326C  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3108  00326E  26D9               	addwf	fsr2l,f,c
  3109  003270  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3110  003272  22DA               	addwfc	fsr2h,f,c
  3111  003274  A4DF               	btfss	indf2,2,c
  3112  003276  EF3F  F019         	goto	u10901
  3113  00327A  EF41  F019         	goto	u10900
  3114  00327E                     u10901:
  3115  00327E  EF44  F019         	goto	l10368
  3116  003282                     u10900:
  3117  003282                     
  3118                           ; BSR set to: 1
  3119                           ;MCAL/I2C/mcal_i2c.c: 76:             (SSPSTATbits.CKE = 1);
  3120  003282  8CC7               	bsf	199,6,c	;volatile
  3121                           
  3122                           ;MCAL/I2C/mcal_i2c.c: 77:         }
  3123  003284  EF52  F019         	goto	l999
  3124  003288                     l10368:
  3125                           
  3126                           ; BSR set to: 1
  3127  003288  EE20 F006          	lfsr	2,6
  3128  00328C  515C               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3129  00328E  26D9               	addwf	fsr2l,f,c
  3130  003290  515D               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3131  003292  22DA               	addwfc	fsr2h,f,c
  3132  003294  B4DF               	btfsc	indf2,2,c
  3133  003296  EF4F  F019         	goto	u10911
  3134  00329A  EF51  F019         	goto	u10910
  3135  00329E                     u10911:
  3136  00329E  EF52  F019         	goto	l999
  3137  0032A2                     u10910:
  3138  0032A2                     
  3139                           ; BSR set to: 1
  3140                           ;MCAL/I2C/mcal_i2c.c: 79:             (SSPSTATbits.CKE = 0);
  3141  0032A2  9CC7               	bcf	199,6,c	;volatile
  3142  0032A4                     l999:
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;MCAL/I2C/mcal_i2c.c: 89:         (SSPCON1bits.SSPEN = 1);
  3146  0032A4  8AC6               	bsf	198,5,c	;volatile
  3147  0032A6                     l1002:
  3148                           
  3149                           ; BSR set to: 1
  3150  0032A6  0012               	return		;funcret
  3151  0032A8                     __end_of_MSSP_I2C_Init:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _I2C_Slave_Mode_Clock_Configurations *****************
  3155 ;; Defined at:
  3156 ;;		line 325 in file "MCAL/I2C/mcal_i2c.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  3159 ;;		 -> i2c_obj(7), 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  ERRORSTATUS     1    0        unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        3 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 8
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_MSSP_I2C_Init
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text10
  3186  004EEC                     __ptext10:
  3187                           	callstack 0
  3188  004EEC                     _I2C_Slave_Mode_Clock_Configurations:
  3189                           	callstack 18
  3190  004EEC                     
  3191                           ;MCAL/I2C/mcal_i2c.c: 328:     if (((void*)0)==i2c_obj)
  3192  004EEC  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  3193  004EEE  101F               	iorwf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  3194  004EF0  A4D8               	btfss	status,2,c
  3195  004EF2  EF7D  F027         	goto	u6391
  3196  004EF6  EF7F  F027         	goto	u6390
  3197  004EFA                     u6391:
  3198  004EFA  EF81  F027         	goto	l7090
  3199  004EFE                     u6390:
  3200  004EFE                     
  3201                           ;MCAL/I2C/mcal_i2c.c: 331:     }
  3202  004EFE  EF8E  F027         	goto	l1097
  3203  004F02                     l7090:
  3204                           
  3205                           ;MCAL/I2C/mcal_i2c.c: 333:     {;MCAL/I2C/mcal_i2c.c: 335:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  3206  004F02  EE20 F004          	lfsr	2,4
  3207  004F06  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  3208  004F08  26D9               	addwf	fsr2l,f,c
  3209  004F0A  501F               	movf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  3210  004F0C  22DA               	addwfc	fsr2h,f,c
  3211  004F0E  50DF               	movf	indf2,w,c
  3212  004F10  6E20               	movwf	??_I2C_Slave_Mode_Clock_Configurations^0,c
  3213  004F12  50C6               	movf	198,w,c	;volatile
  3214  004F14  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  3215  004F16  0BF0               	andlw	-16
  3216  004F18  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  3217  004F1A  6EC6               	movwf	198,c	;volatile
  3218  004F1C                     l1097:
  3219  004F1C  0012               	return		;funcret
  3220  004F1E                     __end_of_I2C_Slave_Mode_Clock_Configurations:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _I2C_Pin_Configurations *****************
  3224 ;; Defined at:
  3225 ;;		line 339 in file "MCAL/I2C/mcal_i2c.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		None
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 8
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_MSSP_I2C_Init
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text11
  3254  0051A4                     __ptext11:
  3255                           	callstack 0
  3256  0051A4                     _I2C_Pin_Configurations:
  3257                           	callstack 18
  3258  0051A4                     
  3259                           ;MCAL/I2C/mcal_i2c.c: 341:     TRISCbits.RC3=1;
  3260  0051A4  8694               	bsf	148,3,c	;volatile
  3261                           
  3262                           ;MCAL/I2C/mcal_i2c.c: 342:     TRISCbits.RC4=1;
  3263  0051A6  8894               	bsf	148,4,c	;volatile
  3264  0051A8  0012               	return		;funcret
  3265  0051AA                     __end_of_I2C_Pin_Configurations:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  3269 ;; Defined at:
  3270 ;;		line 310 in file "MCAL/I2C/mcal_i2c.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  i2c_obj         2    8[BANK1 ] PTR const struct .
  3273 ;;		 -> i2c_obj(7), 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  ERRORSTATUS     1    0        unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3285 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;Total ram usage:        3 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 9
  3292 ;; This function calls:
  3293 ;;		___fladd
  3294 ;;		___fldiv
  3295 ;;		___fltol
  3296 ;;		___xxtofl
  3297 ;; This function is called by:
  3298 ;;		_MSSP_I2C_Init
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text12
  3303  003FEE                     __ptext12:
  3304                           	callstack 0
  3305  003FEE                     _I2C_Master_Mode_Clock_Configurations:
  3306                           	callstack 17
  3307  003FEE                     
  3308                           ;MCAL/I2C/mcal_i2c.c: 313:     if (((void*)0)==i2c_obj)
  3309  003FEE  0101               	movlb	1	; () banked
  3310  003FF0  5159               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  3311  003FF2  115A               	iorwf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  3312  003FF4  A4D8               	btfss	status,2,c
  3313  003FF6  EFFF  F01F         	goto	u10811
  3314  003FFA  EF01  F020         	goto	u10810
  3315  003FFE                     u10811:
  3316  003FFE  EF03  F020         	goto	l10314
  3317  004002                     u10810:
  3318  004002                     
  3319                           ; BSR set to: 1
  3320                           ;MCAL/I2C/mcal_i2c.c: 316:     }
  3321  004002  EF52  F020         	goto	l1092
  3322  004006                     l10314:
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;MCAL/I2C/mcal_i2c.c: 318:     {;MCAL/I2C/mcal_i2c.c: 320:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  3326  004006  EE20 F004          	lfsr	2,4
  3327  00400A  5159               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  3328  00400C  26D9               	addwf	fsr2l,f,c
  3329  00400E  515A               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  3330  004010  22DA               	addwfc	fsr2h,f,c
  3331  004012  50DF               	movf	indf2,w,c
  3332  004014  6F5B               	movwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),b
  3333  004016  50C6               	movf	198,w,c	;volatile
  3334  004018  195B               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  3335  00401A  0BF0               	andlw	-16
  3336  00401C  195B               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  3337  00401E  6EC6               	movwf	198,c	;volatile
  3338  004020                     
  3339                           ; BSR set to: 1
  3340                           ;MCAL/I2C/mcal_i2c.c: 321:         SSPADD=(uint8)(((8000000/4.0)/i2c_obj->i2c_clock)-1);
  3341  004020  0E00               	movlw	0
  3342  004022  0100               	movlb	0	; () banked
  3343  004024  6F9C               	movwf	___fladd@a& (0+255),b
  3344  004026  0E00               	movlw	0
  3345  004028  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  3346  00402A  0E80               	movlw	128
  3347  00402C  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  3348  00402E  0EBF               	movlw	191
  3349  004030  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  3350  004032  C159  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  3351  004036  C15A  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  3352  00403A  CFDE F01E          	movff	postinc2,___xxtofl@val
  3353  00403E  CFDE F01F          	movff	postinc2,___xxtofl@val+1
  3354  004042  CFDE F020          	movff	postinc2,___xxtofl@val+2
  3355  004046  CFDE F021          	movff	postinc2,___xxtofl@val+3
  3356  00404A  0E00               	movlw	0
  3357  00404C  ECC9  F013         	call	___xxtofl
  3358  004050  C01E  F06A         	movff	?___xxtofl,___fldiv@a
  3359  004054  C01F  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  3360  004058  C020  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  3361  00405C  C021  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  3362  004060  0E00               	movlw	0
  3363  004062  0100               	movlb	0	; () banked
  3364  004064  6F66               	movwf	___fldiv@b& (0+255),b
  3365  004066  0E24               	movlw	36
  3366  004068  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  3367  00406A  0EF4               	movlw	244
  3368  00406C  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  3369  00406E  0E49               	movlw	73
  3370  004070  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  3371  004072  EC77  F00E         	call	___fldiv	;wreg free
  3372  004076  C066  F098         	movff	?___fldiv,___fladd@b
  3373  00407A  C067  F099         	movff	?___fldiv+1,___fladd@b+1
  3374  00407E  C068  F09A         	movff	?___fldiv+2,___fladd@b+2
  3375  004082  C069  F09B         	movff	?___fldiv+3,___fladd@b+3
  3376  004086  EC24  F008         	call	___fladd	;wreg free
  3377  00408A  C098  F151         	movff	?___fladd,___fltol@f1
  3378  00408E  C099  F152         	movff	?___fladd+1,___fltol@f1+1
  3379  004092  C09A  F153         	movff	?___fladd+2,___fltol@f1+2
  3380  004096  C09B  F154         	movff	?___fladd+3,___fltol@f1+3
  3381  00409A  ECEB  F019         	call	___fltol	;wreg free
  3382  00409E  0101               	movlb	1	; () banked
  3383  0040A0  5151               	movf	?___fltol& (0+255),w,b
  3384  0040A2  6EC8               	movwf	200,c	;volatile
  3385  0040A4                     l1092:
  3386                           
  3387                           ; BSR set to: 1
  3388  0040A4  0012               	return		;funcret
  3389  0040A6                     __end_of_I2C_Master_Mode_Clock_Configurations:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _ECU_DC_Motor_Init *****************
  3393 ;; Defined at:
  3394 ;;		line 19 in file "ECU/DC_Motor/ecu_dc_motor.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  dc_motor        2    9[BANK0 ] PTR const struct .
  3397 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  ret_value       1    0        unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;Total ram usage:        2 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 10
  3416 ;; This function calls:
  3417 ;;		_GPIO_Pin_Initialize
  3418 ;; This function is called by:
  3419 ;;		_Robot_Nav_Init
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text13
  3424  0050A6                     __ptext13:
  3425                           	callstack 0
  3426  0050A6                     _ECU_DC_Motor_Init:
  3427                           	callstack 18
  3428  0050A6                     
  3429                           ;ECU/DC_Motor/ecu_dc_motor.c: 22:     if(((void*)0) == dc_motor)
  3430  0050A6  0100               	movlb	0	; () banked
  3431  0050A8  5169               	movf	ECU_DC_Motor_Init@dc_motor& (0+255),w,b
  3432  0050AA  116A               	iorwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),w,b
  3433  0050AC  A4D8               	btfss	status,2,c
  3434  0050AE  EF5B  F028         	goto	u11381
  3435  0050B2  EF5D  F028         	goto	u11380
  3436  0050B6                     u11381:
  3437  0050B6  EF5F  F028         	goto	l10666
  3438  0050BA                     u11380:
  3439  0050BA                     
  3440                           ; BSR set to: 0
  3441                           ;ECU/DC_Motor/ecu_dc_motor.c: 25:     }
  3442  0050BA  EF65  F028         	goto	l55
  3443  0050BE                     l10666:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;ECU/DC_Motor/ecu_dc_motor.c: 27:     {;ECU/DC_Motor/ecu_dc_motor.c: 28:         GPIO_Pi
      +                          n_Initialize(&(dc_motor->dc_motor));
  3447  0050BE  C069  F066         	movff	ECU_DC_Motor_Init@dc_motor,GPIO_Pin_Initialize@_pin_config
  3448  0050C2  C06A  F067         	movff	ECU_DC_Motor_Init@dc_motor+1,GPIO_Pin_Initialize@_pin_config+1
  3449  0050C6  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  3450  0050CA                     l55:
  3451  0050CA  0012               	return		;funcret
  3452  0050CC                     __end_of_ECU_DC_Motor_Init:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _CCP_PWM_Start *****************
  3456 ;; Defined at:
  3457 ;;		line 202 in file "MCAL/CCP/hal_ccp.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  3460 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  ret             1    0        unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      unsigned char 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;Total ram usage:        3 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 8
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_Robot_Nav_Init
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text14
  3487  004D1E                     __ptext14:
  3488                           	callstack 0
  3489  004D1E                     _CCP_PWM_Start:
  3490                           	callstack 20
  3491  004D1E                     
  3492                           ;MCAL/CCP/hal_ccp.c: 205:     if(((void*)0) == _ccp_obj){
  3493  004D1E  501E               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  3494  004D20  101F               	iorwf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  3495  004D22  A4D8               	btfss	status,2,c
  3496  004D24  EF96  F026         	goto	u7331
  3497  004D28  EF98  F026         	goto	u7330
  3498  004D2C                     u7331:
  3499  004D2C  EF9A  F026         	goto	l7716
  3500  004D30                     u7330:
  3501  004D30                     
  3502                           ;MCAL/CCP/hal_ccp.c: 207:     }
  3503  004D30  EFBC  F026         	goto	l543
  3504  004D34                     l7716:
  3505                           
  3506                           ;MCAL/CCP/hal_ccp.c: 209:         if(CCP1_INST == _ccp_obj->ccp_inst){
  3507  004D34  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  3508  004D38  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  3509  004D3C  50DF               	movf	indf2,w,c
  3510  004D3E  A4D8               	btfss	status,2,c
  3511  004D40  EFA4  F026         	goto	u7341
  3512  004D44  EFA6  F026         	goto	u7340
  3513  004D48                     u7341:
  3514  004D48  EFAC  F026         	goto	l7720
  3515  004D4C                     u7340:
  3516  004D4C                     
  3517                           ;MCAL/CCP/hal_ccp.c: 210:             CCP1CONbits.CCP1M = ((uint8)0x0C);
  3518  004D4C  50BD               	movf	189,w,c	;volatile
  3519  004D4E  0BF0               	andlw	-16
  3520  004D50  090C               	iorlw	12
  3521  004D52  6EBD               	movwf	189,c	;volatile
  3522                           
  3523                           ;MCAL/CCP/hal_ccp.c: 211:         }
  3524  004D54  EFBC  F026         	goto	l7724
  3525  004D58                     l7720:
  3526  004D58  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  3527  004D5C  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  3528  004D60  04DE               	decf	postinc2,w,c
  3529  004D62  A4D8               	btfss	status,2,c
  3530  004D64  EFB6  F026         	goto	u7351
  3531  004D68  EFB8  F026         	goto	u7350
  3532  004D6C                     u7351:
  3533  004D6C  EFBC  F026         	goto	l7724
  3534  004D70                     u7350:
  3535  004D70                     
  3536                           ;MCAL/CCP/hal_ccp.c: 213:             CCP2CONbits.CCP2M = ((uint8)0x0C);
  3537  004D70  50BA               	movf	186,w,c	;volatile
  3538  004D72  0BF0               	andlw	-16
  3539  004D74  090C               	iorlw	12
  3540  004D76  6EBA               	movwf	186,c	;volatile
  3541  004D78                     l7724:
  3542  004D78                     l543:
  3543  004D78  0012               	return		;funcret
  3544  004D7A                     __end_of_CCP_PWM_Start:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _CCP_Init *****************
  3548 ;; Defined at:
  3549 ;;		line 24 in file "MCAL/CCP/hal_ccp.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  _ccp_obj        2    9[BANK0 ] PTR const struct .
  3552 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  ret             1    0        unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      unsigned char 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;Total ram usage:        3 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 10
  3571 ;; This function calls:
  3572 ;;		_CCP_Capture_Mode_Config
  3573 ;;		_CCP_Compare_Mode_Config
  3574 ;;		_CCP_Interrupt_Config
  3575 ;;		_CCP_PWM_Mode_Config
  3576 ;;		_GPIO_Pin_Initialize
  3577 ;; This function is called by:
  3578 ;;		_Robot_Nav_Init
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text15
  3583  003702                     __ptext15:
  3584                           	callstack 0
  3585  003702                     _CCP_Init:
  3586                           	callstack 18
  3587  003702                     
  3588                           ;MCAL/CCP/hal_ccp.c: 26:     if(((void*)0) == _ccp_obj){
  3589  003702  0100               	movlb	0	; () banked
  3590  003704  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3591  003706  116A               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3592  003708  A4D8               	btfss	status,2,c
  3593  00370A  EF89  F01B         	goto	u11411
  3594  00370E  EF8B  F01B         	goto	u11410
  3595  003712                     u11411:
  3596  003712  EF8D  F01B         	goto	l10688
  3597  003716                     u11410:
  3598  003716                     
  3599                           ; BSR set to: 0
  3600                           ;MCAL/CCP/hal_ccp.c: 28:     }
  3601  003716  EFFD  F01B         	goto	l516
  3602  00371A                     l10688:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;MCAL/CCP/hal_ccp.c: 31:         if(CCP1_INST == _ccp_obj->ccp_inst){
  3606  00371A  C069  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  3607  00371E  C06A  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  3608  003722  50DF               	movf	indf2,w,c
  3609  003724  A4D8               	btfss	status,2,c
  3610  003726  EF97  F01B         	goto	u11421
  3611  00372A  EF99  F01B         	goto	u11420
  3612  00372E                     u11421:
  3613  00372E  EF9D  F01B         	goto	l10692
  3614  003732                     u11420:
  3615  003732                     
  3616                           ; BSR set to: 0
  3617                           ;MCAL/CCP/hal_ccp.c: 32:             (CCP1CONbits.CCP1M = ((uint8)0x00));
  3618  003732  0EF0               	movlw	-16
  3619  003734  16BD               	andwf	189,f,c	;volatile
  3620                           
  3621                           ;MCAL/CCP/hal_ccp.c: 33:         }
  3622  003736  EFAB  F01B         	goto	l10696
  3623  00373A                     l10692:
  3624                           
  3625                           ; BSR set to: 0
  3626  00373A  C069  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  3627  00373E  C06A  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  3628  003742  04DE               	decf	postinc2,w,c
  3629  003744  A4D8               	btfss	status,2,c
  3630  003746  EFA7  F01B         	goto	u11431
  3631  00374A  EFA9  F01B         	goto	u11430
  3632  00374E                     u11431:
  3633  00374E  EFAB  F01B         	goto	l10696
  3634  003752                     u11430:
  3635  003752                     
  3636                           ; BSR set to: 0
  3637                           ;MCAL/CCP/hal_ccp.c: 35:             (CCP2CONbits.CCP2M = ((uint8)0x00));
  3638  003752  0EF0               	movlw	-16
  3639  003754  16BA               	andwf	186,f,c	;volatile
  3640  003756                     l10696:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;MCAL/CCP/hal_ccp.c: 40:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mode){
  3644  003756  EE20 F001          	lfsr	2,1
  3645  00375A  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3646  00375C  26D9               	addwf	fsr2l,f,c
  3647  00375E  516A               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3648  003760  22DA               	addwfc	fsr2h,f,c
  3649  003762  50DF               	movf	indf2,w,c
  3650  003764  A4D8               	btfss	status,2,c
  3651  003766  EFB7  F01B         	goto	u11441
  3652  00376A  EFB9  F01B         	goto	u11440
  3653  00376E                     u11441:
  3654  00376E  EFC1  F01B         	goto	l10700
  3655  003772                     u11440:
  3656  003772                     
  3657                           ; BSR set to: 0
  3658  003772  C069  F021         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Config@_ccp_obj
  3659  003776  C06A  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Config@_ccp_obj+1
  3660  00377A  EC15  F018         	call	_CCP_Capture_Mode_Config	;wreg free
  3661                           
  3662                           ;MCAL/CCP/hal_ccp.c: 42:         }
  3663  00377E  EFEE  F01B         	goto	l10708
  3664  003782                     l10700:
  3665                           
  3666                           ; BSR set to: 0
  3667  003782  EE20 F001          	lfsr	2,1
  3668  003786  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3669  003788  26D9               	addwf	fsr2l,f,c
  3670  00378A  516A               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3671  00378C  22DA               	addwfc	fsr2h,f,c
  3672  00378E  04DE               	decf	postinc2,w,c
  3673  003790  A4D8               	btfss	status,2,c
  3674  003792  EFCD  F01B         	goto	u11451
  3675  003796  EFCF  F01B         	goto	u11450
  3676  00379A                     u11451:
  3677  00379A  EFD7  F01B         	goto	l10704
  3678  00379E                     u11450:
  3679  00379E                     
  3680                           ; BSR set to: 0
  3681  00379E  C069  F021         	movff	CCP_Init@_ccp_obj,CCP_Compare_Mode_Config@_ccp_obj
  3682  0037A2  C06A  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Compare_Mode_Config@_ccp_obj+1
  3683  0037A6  EC69  F015         	call	_CCP_Compare_Mode_Config	;wreg free
  3684                           
  3685                           ;MCAL/CCP/hal_ccp.c: 46:         }
  3686  0037AA  EFEE  F01B         	goto	l10708
  3687  0037AE                     l10704:
  3688                           
  3689                           ; BSR set to: 0
  3690  0037AE  EE20 F001          	lfsr	2,1
  3691  0037B2  5169               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3692  0037B4  26D9               	addwf	fsr2l,f,c
  3693  0037B6  516A               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3694  0037B8  22DA               	addwfc	fsr2h,f,c
  3695  0037BA  0E02               	movlw	2
  3696  0037BC  18DE               	xorwf	postinc2,w,c
  3697  0037BE  A4D8               	btfss	status,2,c
  3698  0037C0  EFE4  F01B         	goto	u11461
  3699  0037C4  EFE6  F01B         	goto	u11460
  3700  0037C8                     u11461:
  3701  0037C8  EFEE  F01B         	goto	l513
  3702  0037CC                     u11460:
  3703  0037CC                     
  3704                           ; BSR set to: 0
  3705                           ;MCAL/CCP/hal_ccp.c: 50:             CCP_PWM_Mode_Config(_ccp_obj);
  3706  0037CC  C069  F021         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Config@_ccp_obj
  3707  0037D0  C06A  F022         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Config@_ccp_obj+1
  3708  0037D4  ECAD  F021         	call	_CCP_PWM_Mode_Config	;wreg free
  3709                           
  3710                           ;MCAL/CCP/hal_ccp.c: 51:         }
  3711  0037D8  EFEE  F01B         	goto	l10708
  3712  0037DC                     l513:
  3713  0037DC                     l10708:
  3714  0037DC  0E03               	movlw	3
  3715  0037DE  0100               	movlb	0	; () banked
  3716  0037E0  2569               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  3717  0037E2  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  3718  0037E4  0E00               	movlw	0
  3719  0037E6  216A               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3720  0037E8  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  3721  0037EA  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  3722  0037EE                     
  3723                           ;MCAL/CCP/hal_ccp.c: 58:         CCP_Interrupt_Config(_ccp_obj);
  3724  0037EE  C069  F01E         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Config@_ccp_obj
  3725  0037F2  C06A  F01F         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Config@_ccp_obj+1
  3726  0037F6  ECD7  F028         	call	_CCP_Interrupt_Config	;wreg free
  3727  0037FA                     l516:
  3728  0037FA  0012               	return		;funcret
  3729  0037FC                     __end_of_CCP_Init:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function _CCP_PWM_Mode_Config *****************
  3733 ;; Defined at:
  3734 ;;		line 264 in file "MCAL/CCP/hal_ccp.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  3737 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:        3 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 9
  3756 ;; This function calls:
  3757 ;;		_Timer2_Init
  3758 ;; This function is called by:
  3759 ;;		_CCP_Init
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text16
  3764  00435A                     __ptext16:
  3765                           	callstack 0
  3766  00435A                     _CCP_PWM_Mode_Config:
  3767                           	callstack 18
  3768  00435A                     
  3769                           ;MCAL/CCP/hal_ccp.c: 269:     PR2 = _ccp_obj->timer2.timer2_preload_value ;
  3770  00435A  EE20 F009          	lfsr	2,9
  3771  00435E  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3772  004360  26D9               	addwf	fsr2l,f,c
  3773  004362  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3774  004364  22DA               	addwfc	fsr2h,f,c
  3775  004366  50DF               	movf	indf2,w,c
  3776  004368  6ECB               	movwf	203,c	;volatile
  3777  00436A                     
  3778                           ;MCAL/CCP/hal_ccp.c: 270:     Timer2_Init(&(_ccp_obj->timer2));
  3779  00436A  0E09               	movlw	9
  3780  00436C  2421               	addwf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3781  00436E  6E1E               	movwf	Timer2_Init@_timer2^0,c
  3782  004370  0E00               	movlw	0
  3783  004372  2022               	addwfc	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3784  004374  6E1F               	movwf	(Timer2_Init@_timer2+1)^0,c
  3785  004376  EC52  F024         	call	_Timer2_Init	;wreg free
  3786  00437A                     
  3787                           ;MCAL/CCP/hal_ccp.c: 271:     if(CCP1_INST == _ccp_obj->ccp_inst){
  3788  00437A  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  3789  00437E  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  3790  004382  50DF               	movf	indf2,w,c
  3791  004384  A4D8               	btfss	status,2,c
  3792  004386  EFC7  F021         	goto	u6701
  3793  00438A  EFC9  F021         	goto	u6700
  3794  00438E                     u6701:
  3795  00438E  EFDE  F021         	goto	l7342
  3796  004392                     u6700:
  3797  004392                     
  3798                           ;MCAL/CCP/hal_ccp.c: 272:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  3799  004392  EE20 F002          	lfsr	2,2
  3800  004396  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3801  004398  26D9               	addwf	fsr2l,f,c
  3802  00439A  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3803  00439C  22DA               	addwfc	fsr2h,f,c
  3804  00439E  0E0C               	movlw	12
  3805  0043A0  18DE               	xorwf	postinc2,w,c
  3806  0043A2  A4D8               	btfss	status,2,c
  3807  0043A4  EFD6  F021         	goto	u6711
  3808  0043A8  EFD8  F021         	goto	u6710
  3809  0043AC                     u6711:
  3810  0043AC  EFFD  F021         	goto	l563
  3811  0043B0                     u6710:
  3812  0043B0                     
  3813                           ;MCAL/CCP/hal_ccp.c: 273:             (CCP1CONbits.CCP1M = ((uint8)0x0C));
  3814  0043B0  50BD               	movf	189,w,c	;volatile
  3815  0043B2  0BF0               	andlw	-16
  3816  0043B4  090C               	iorlw	12
  3817  0043B6  6EBD               	movwf	189,c	;volatile
  3818                           
  3819                           ;MCAL/CCP/hal_ccp.c: 274:         }
  3820  0043B8  EFFD  F021         	goto	l563
  3821  0043BC                     l7342:
  3822  0043BC  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  3823  0043C0  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  3824  0043C4  04DE               	decf	postinc2,w,c
  3825  0043C6  A4D8               	btfss	status,2,c
  3826  0043C8  EFE8  F021         	goto	u6721
  3827  0043CC  EFEA  F021         	goto	u6720
  3828  0043D0                     u6721:
  3829  0043D0  EFFD  F021         	goto	l563
  3830  0043D4                     u6720:
  3831  0043D4                     
  3832                           ;MCAL/CCP/hal_ccp.c: 278:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  3833  0043D4  EE20 F002          	lfsr	2,2
  3834  0043D8  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3835  0043DA  26D9               	addwf	fsr2l,f,c
  3836  0043DC  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3837  0043DE  22DA               	addwfc	fsr2h,f,c
  3838  0043E0  0E0C               	movlw	12
  3839  0043E2  18DE               	xorwf	postinc2,w,c
  3840  0043E4  A4D8               	btfss	status,2,c
  3841  0043E6  EFF7  F021         	goto	u6731
  3842  0043EA  EFF9  F021         	goto	u6730
  3843  0043EE                     u6731:
  3844  0043EE  EFFD  F021         	goto	l563
  3845  0043F2                     u6730:
  3846  0043F2                     
  3847                           ;MCAL/CCP/hal_ccp.c: 279:             (CCP2CONbits.CCP2M = ((uint8)0x0C));
  3848  0043F2  50BA               	movf	186,w,c	;volatile
  3849  0043F4  0BF0               	andlw	-16
  3850  0043F6  090C               	iorlw	12
  3851  0043F8  6EBA               	movwf	186,c	;volatile
  3852  0043FA                     l563:
  3853  0043FA  0012               	return		;funcret
  3854  0043FC                     __end_of_CCP_PWM_Mode_Config:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _Timer2_Init *****************
  3858 ;; Defined at:
  3859 ;;		line 15 in file "MCAL/TIMER2/mcal_timer2.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  _timer2         2   29[COMRAM] PTR const struct .
  3862 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  ERRORSTATUS     1    0        unsigned char 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      unsigned char 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:        3 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 8
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_CCP_PWM_Mode_Config
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text17
  3889  0048A4                     __ptext17:
  3890                           	callstack 0
  3891  0048A4                     _Timer2_Init:
  3892                           	callstack 18
  3893  0048A4                     
  3894                           ;MCAL/TIMER2/mcal_timer2.c: 17:   if (((void*)0) == _timer2) {
  3895  0048A4  501E               	movf	Timer2_Init@_timer2^0,w,c
  3896  0048A6  101F               	iorwf	(Timer2_Init@_timer2+1)^0,w,c
  3897  0048A8  A4D8               	btfss	status,2,c
  3898  0048AA  EF59  F024         	goto	u6341
  3899  0048AE  EF5B  F024         	goto	u6340
  3900  0048B2                     u6341:
  3901  0048B2  EF5D  F024         	goto	l1632
  3902  0048B6                     u6340:
  3903  0048B6                     
  3904                           ;MCAL/TIMER2/mcal_timer2.c: 19:   } else {
  3905  0048B6  EF88  F024         	goto	l1634
  3906  0048BA                     l1632:
  3907                           
  3908                           ;MCAL/TIMER2/mcal_timer2.c: 21:     (T2CONbits.TMR2ON=0);
  3909  0048BA  94CA               	bcf	202,2,c	;volatile
  3910  0048BC                     
  3911                           ;MCAL/TIMER2/mcal_timer2.c: 23:     (T2CONbits.T2CKPS=_timer2->timer2_prescaler_value);
  3912  0048BC  EE20 F001          	lfsr	2,1
  3913  0048C0  501E               	movf	Timer2_Init@_timer2^0,w,c
  3914  0048C2  26D9               	addwf	fsr2l,f,c
  3915  0048C4  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  3916  0048C6  22DA               	addwfc	fsr2h,f,c
  3917  0048C8  50DF               	movf	indf2,w,c
  3918  0048CA  6E20               	movwf	??_Timer2_Init^0,c
  3919  0048CC  50CA               	movf	202,w,c	;volatile
  3920  0048CE  1820               	xorwf	??_Timer2_Init^0,w,c
  3921  0048D0  0BFC               	andlw	-4
  3922  0048D2  1820               	xorwf	??_Timer2_Init^0,w,c
  3923  0048D4  6ECA               	movwf	202,c	;volatile
  3924                           
  3925                           ;MCAL/TIMER2/mcal_timer2.c: 25:     (T2CONbits.T2OUTPS=_timer2->timer2_postscaler_value)
      +                          ;
  3926  0048D6  EE20 F002          	lfsr	2,2
  3927  0048DA  501E               	movf	Timer2_Init@_timer2^0,w,c
  3928  0048DC  26D9               	addwf	fsr2l,f,c
  3929  0048DE  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  3930  0048E0  22DA               	addwfc	fsr2h,f,c
  3931  0048E2  50DF               	movf	indf2,w,c
  3932  0048E4  6E20               	movwf	??_Timer2_Init^0,c
  3933  0048E6  4620               	rlncf	??_Timer2_Init^0,f,c
  3934  0048E8  4620               	rlncf	??_Timer2_Init^0,f,c
  3935  0048EA  4620               	rlncf	??_Timer2_Init^0,f,c
  3936  0048EC  50CA               	movf	202,w,c	;volatile
  3937  0048EE  1820               	xorwf	??_Timer2_Init^0,w,c
  3938  0048F0  0B87               	andlw	-121
  3939  0048F2  1820               	xorwf	??_Timer2_Init^0,w,c
  3940  0048F4  6ECA               	movwf	202,c	;volatile
  3941  0048F6                     
  3942                           ;MCAL/TIMER2/mcal_timer2.c: 27:     TMR2 = _timer2->timer2_preload_value;
  3943  0048F6  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  3944  0048FA  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  3945  0048FE  50DF               	movf	indf2,w,c
  3946  004900  6ECC               	movwf	204,c	;volatile
  3947  004902                     
  3948                           ;MCAL/TIMER2/mcal_timer2.c: 28:     Timer2_PreLoaded_Value_Store = _timer2->timer2_prelo
      +                          ad_value;
  3949  004902  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  3950  004906  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  3951  00490A  50DF               	movf	indf2,w,c
  3952  00490C  6E31               	movwf	_Timer2_PreLoaded_Value_Store^0,c
  3953  00490E                     
  3954                           ;MCAL/TIMER2/mcal_timer2.c: 53:     (T2CONbits.TMR2ON=1);
  3955  00490E  84CA               	bsf	202,2,c	;volatile
  3956  004910                     l1634:
  3957  004910  0012               	return		;funcret
  3958  004912                     __end_of_Timer2_Init:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _CCP_Interrupt_Config *****************
  3962 ;; Defined at:
  3963 ;;		line 287 in file "MCAL/CCP/hal_ccp.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  3966 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		None
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:        2 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 8
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_CCP_Init
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text18
  3993  0051AE                     __ptext18:
  3994                           	callstack 0
  3995  0051AE                     _CCP_Interrupt_Config:
  3996                           	callstack 19
  3997  0051AE  0012               	return		;funcret
  3998  0051B0                     __end_of_CCP_Interrupt_Config:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _CCP_Compare_Mode_Config *****************
  4002 ;; Defined at:
  4003 ;;		line 406 in file "MCAL/CCP/hal_ccp.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  4006 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  ret             1   36[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        5 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 9
  4025 ;; This function calls:
  4026 ;;		_CCP_Mode_Timer_Select
  4027 ;; This function is called by:
  4028 ;;		_CCP_Init
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text19
  4033  002AD2                     __ptext19:
  4034                           	callstack 0
  4035  002AD2                     _CCP_Compare_Mode_Config:
  4036                           	callstack 18
  4037  002AD2                     
  4038                           ;MCAL/CCP/hal_ccp.c: 407:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  4039  002AD2  0E01               	movlw	1
  4040  002AD4  6E25               	movwf	CCP_Compare_Mode_Config@ret^0,c
  4041  002AD6                     
  4042                           ;MCAL/CCP/hal_ccp.c: 409:     if(CCP1_INST == _ccp_obj->ccp_inst){
  4043  002AD6  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  4044  002ADA  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  4045  002ADE  50DF               	movf	indf2,w,c
  4046  002AE0  A4D8               	btfss	status,2,c
  4047  002AE2  EF75  F015         	goto	u6681
  4048  002AE6  EF77  F015         	goto	u6680
  4049  002AEA                     u6681:
  4050  002AEA  EFC2  F015         	goto	l7300
  4051  002AEE                     u6680:
  4052  002AEE  EF9B  F015         	goto	l7298
  4053  002AF2                     l7286:
  4054                           
  4055                           ;MCAL/CCP/hal_ccp.c: 413:                 (CCP1CONbits.CCP1M = ((uint8)0x08));
  4056  002AF2  50BD               	movf	189,w,c	;volatile
  4057  002AF4  0BF0               	andlw	-16
  4058  002AF6  0908               	iorlw	8
  4059  002AF8  6EBD               	movwf	189,c	;volatile
  4060                           
  4061                           ;MCAL/CCP/hal_ccp.c: 414:                 break;
  4062  002AFA  EF15  F016         	goto	l7318
  4063  002AFE                     l7288:
  4064                           
  4065                           ;MCAL/CCP/hal_ccp.c: 416:                 (CCP1CONbits.CCP1M = ((uint8)0x09));
  4066  002AFE  50BD               	movf	189,w,c	;volatile
  4067  002B00  0BF0               	andlw	-16
  4068  002B02  0909               	iorlw	9
  4069  002B04  6EBD               	movwf	189,c	;volatile
  4070                           
  4071                           ;MCAL/CCP/hal_ccp.c: 417:                 break;
  4072  002B06  EF15  F016         	goto	l7318
  4073  002B0A                     l7290:
  4074                           
  4075                           ;MCAL/CCP/hal_ccp.c: 419:                 (CCP1CONbits.CCP1M = ((uint8)0x02));
  4076  002B0A  50BD               	movf	189,w,c	;volatile
  4077  002B0C  0BF0               	andlw	-16
  4078  002B0E  0902               	iorlw	2
  4079  002B10  6EBD               	movwf	189,c	;volatile
  4080                           
  4081                           ;MCAL/CCP/hal_ccp.c: 420:                 break;
  4082  002B12  EF15  F016         	goto	l7318
  4083  002B16                     l7292:
  4084                           
  4085                           ;MCAL/CCP/hal_ccp.c: 422:                 (CCP1CONbits.CCP1M = ((uint8)0x0A));
  4086  002B16  50BD               	movf	189,w,c	;volatile
  4087  002B18  0BF0               	andlw	-16
  4088  002B1A  090A               	iorlw	10
  4089  002B1C  6EBD               	movwf	189,c	;volatile
  4090                           
  4091                           ;MCAL/CCP/hal_ccp.c: 423:                 break;
  4092  002B1E  EF15  F016         	goto	l7318
  4093  002B22                     l7294:
  4094                           
  4095                           ;MCAL/CCP/hal_ccp.c: 425:                 (CCP1CONbits.CCP1M = ((uint8)0x0B));
  4096  002B22  50BD               	movf	189,w,c	;volatile
  4097  002B24  0BF0               	andlw	-16
  4098  002B26  090B               	iorlw	11
  4099  002B28  6EBD               	movwf	189,c	;volatile
  4100                           
  4101                           ;MCAL/CCP/hal_ccp.c: 426:                 break;
  4102  002B2A  EF15  F016         	goto	l7318
  4103  002B2E                     l7296:
  4104  002B2E  0E00               	movlw	0
  4105  002B30  6E25               	movwf	CCP_Compare_Mode_Config@ret^0,c
  4106                           
  4107                           ;MCAL/CCP/hal_ccp.c: 428:         }
  4108  002B32  EF15  F016         	goto	l7318
  4109  002B36                     l7298:
  4110  002B36  EE20 F002          	lfsr	2,2
  4111  002B3A  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  4112  002B3C  26D9               	addwf	fsr2l,f,c
  4113  002B3E  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  4114  002B40  22DA               	addwfc	fsr2h,f,c
  4115  002B42  50DF               	movf	indf2,w,c
  4116  002B44  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  4117  002B46  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  4118                           
  4119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4120                           ; Switch size 1, requested type "simple"
  4121                           ; Number of cases is 1, Range of values is 0 to 0
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte            4     3 (average)
  4125                           ;	Chosen strategy is simple_byte
  4126  002B48  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  4127  002B4A  0A00               	xorlw	0	; case 0
  4128  002B4C  B4D8               	btfsc	status,2,c
  4129  002B4E  EFAB  F015         	goto	l12084
  4130  002B52  EF97  F015         	goto	l7296
  4131  002B56                     l12084:
  4132                           
  4133                           ; Switch size 1, requested type "simple"
  4134                           ; Number of cases is 5, Range of values is 2 to 11
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte           16     9 (average)
  4138                           ;	Chosen strategy is simple_byte
  4139  002B56  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  4140  002B58  0A02               	xorlw	2	; case 2
  4141  002B5A  B4D8               	btfsc	status,2,c
  4142  002B5C  EF85  F015         	goto	l7290
  4143  002B60  0A0A               	xorlw	10	; case 8
  4144  002B62  B4D8               	btfsc	status,2,c
  4145  002B64  EF79  F015         	goto	l7286
  4146  002B68  0A01               	xorlw	1	; case 9
  4147  002B6A  B4D8               	btfsc	status,2,c
  4148  002B6C  EF7F  F015         	goto	l7288
  4149  002B70  0A03               	xorlw	3	; case 10
  4150  002B72  B4D8               	btfsc	status,2,c
  4151  002B74  EF8B  F015         	goto	l7292
  4152  002B78  0A01               	xorlw	1	; case 11
  4153  002B7A  B4D8               	btfsc	status,2,c
  4154  002B7C  EF91  F015         	goto	l7294
  4155  002B80  EF97  F015         	goto	l7296
  4156  002B84                     l7300:
  4157  002B84  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  4158  002B88  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  4159  002B8C  04DE               	decf	postinc2,w,c
  4160  002B8E  A4D8               	btfss	status,2,c
  4161  002B90  EFCC  F015         	goto	u6691
  4162  002B94  EFCE  F015         	goto	u6690
  4163  002B98                     u6691:
  4164  002B98  EF15  F016         	goto	l7318
  4165  002B9C                     u6690:
  4166  002B9C  EFEE  F015         	goto	l7316
  4167  002BA0                     l7304:
  4168                           
  4169                           ;MCAL/CCP/hal_ccp.c: 434:                 (CCP2CONbits.CCP2M = ((uint8)0x08));
  4170  002BA0  50BA               	movf	186,w,c	;volatile
  4171  002BA2  0BF0               	andlw	-16
  4172  002BA4  0908               	iorlw	8
  4173  002BA6  6EBA               	movwf	186,c	;volatile
  4174                           
  4175                           ;MCAL/CCP/hal_ccp.c: 435:                 break;
  4176  002BA8  EF15  F016         	goto	l7318
  4177  002BAC                     l7306:
  4178                           
  4179                           ;MCAL/CCP/hal_ccp.c: 437:                 (CCP2CONbits.CCP2M = ((uint8)0x09));
  4180  002BAC  50BA               	movf	186,w,c	;volatile
  4181  002BAE  0BF0               	andlw	-16
  4182  002BB0  0909               	iorlw	9
  4183  002BB2  6EBA               	movwf	186,c	;volatile
  4184                           
  4185                           ;MCAL/CCP/hal_ccp.c: 438:                 break;
  4186  002BB4  EF15  F016         	goto	l7318
  4187  002BB8                     l7308:
  4188                           
  4189                           ;MCAL/CCP/hal_ccp.c: 440:                 (CCP2CONbits.CCP2M = ((uint8)0x02));
  4190  002BB8  50BA               	movf	186,w,c	;volatile
  4191  002BBA  0BF0               	andlw	-16
  4192  002BBC  0902               	iorlw	2
  4193  002BBE  6EBA               	movwf	186,c	;volatile
  4194                           
  4195                           ;MCAL/CCP/hal_ccp.c: 441:                 break;
  4196  002BC0  EF15  F016         	goto	l7318
  4197  002BC4                     l7310:
  4198                           
  4199                           ;MCAL/CCP/hal_ccp.c: 443:                 (CCP2CONbits.CCP2M = ((uint8)0x0A));
  4200  002BC4  50BA               	movf	186,w,c	;volatile
  4201  002BC6  0BF0               	andlw	-16
  4202  002BC8  090A               	iorlw	10
  4203  002BCA  6EBA               	movwf	186,c	;volatile
  4204                           
  4205                           ;MCAL/CCP/hal_ccp.c: 444:                 break;
  4206  002BCC  EF15  F016         	goto	l7318
  4207  002BD0                     l7312:
  4208                           
  4209                           ;MCAL/CCP/hal_ccp.c: 446:                 (CCP2CONbits.CCP2M = ((uint8)0x0B));
  4210  002BD0  50BA               	movf	186,w,c	;volatile
  4211  002BD2  0BF0               	andlw	-16
  4212  002BD4  090B               	iorlw	11
  4213  002BD6  6EBA               	movwf	186,c	;volatile
  4214                           
  4215                           ;MCAL/CCP/hal_ccp.c: 447:                 break;
  4216  002BD8  EF15  F016         	goto	l7318
  4217  002BDC                     l7316:
  4218  002BDC  EE20 F002          	lfsr	2,2
  4219  002BE0  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  4220  002BE2  26D9               	addwf	fsr2l,f,c
  4221  002BE4  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  4222  002BE6  22DA               	addwfc	fsr2h,f,c
  4223  002BE8  50DF               	movf	indf2,w,c
  4224  002BEA  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  4225  002BEC  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  4226                           
  4227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4228                           ; Switch size 1, requested type "simple"
  4229                           ; Number of cases is 1, Range of values is 0 to 0
  4230                           ; switch strategies available:
  4231                           ; Name         Instructions Cycles
  4232                           ; simple_byte            4     3 (average)
  4233                           ;	Chosen strategy is simple_byte
  4234  002BEE  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  4235  002BF0  0A00               	xorlw	0	; case 0
  4236  002BF2  B4D8               	btfsc	status,2,c
  4237  002BF4  EFFE  F015         	goto	l12086
  4238  002BF8  EF97  F015         	goto	l7296
  4239  002BFC                     l12086:
  4240                           
  4241                           ; Switch size 1, requested type "simple"
  4242                           ; Number of cases is 5, Range of values is 2 to 11
  4243                           ; switch strategies available:
  4244                           ; Name         Instructions Cycles
  4245                           ; simple_byte           16     9 (average)
  4246                           ;	Chosen strategy is simple_byte
  4247  002BFC  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  4248  002BFE  0A02               	xorlw	2	; case 2
  4249  002C00  B4D8               	btfsc	status,2,c
  4250  002C02  EFDC  F015         	goto	l7308
  4251  002C06  0A0A               	xorlw	10	; case 8
  4252  002C08  B4D8               	btfsc	status,2,c
  4253  002C0A  EFD0  F015         	goto	l7304
  4254  002C0E  0A01               	xorlw	1	; case 9
  4255  002C10  B4D8               	btfsc	status,2,c
  4256  002C12  EFD6  F015         	goto	l7306
  4257  002C16  0A03               	xorlw	3	; case 10
  4258  002C18  B4D8               	btfsc	status,2,c
  4259  002C1A  EFE2  F015         	goto	l7310
  4260  002C1E  0A01               	xorlw	1	; case 11
  4261  002C20  B4D8               	btfsc	status,2,c
  4262  002C22  EFE8  F015         	goto	l7312
  4263  002C26  EF97  F015         	goto	l7296
  4264  002C2A                     l7318:
  4265                           
  4266                           ;MCAL/CCP/hal_ccp.c: 453:     CCP_Mode_Timer_Select(_ccp_obj);
  4267  002C2A  C021  F01E         	movff	CCP_Compare_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  4268  002C2E  C022  F01F         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  4269  002C32  ECAA  F023         	call	_CCP_Mode_Timer_Select	;wreg free
  4270  002C36                     
  4271                           ;MCAL/CCP/hal_ccp.c: 455:     return ret;
  4272  002C36  5025               	movf	CCP_Compare_Mode_Config@ret^0,w,c
  4273  002C38  0012               	return		;funcret
  4274  002C3A                     __end_of_CCP_Compare_Mode_Config:
  4275                           	callstack 0
  4276                           
  4277 ;; *************** function _CCP_Capture_Mode_Config *****************
  4278 ;; Defined at:
  4279 ;;		line 359 in file "MCAL/CCP/hal_ccp.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  4282 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  ret             1   36[COMRAM] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      unsigned char 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;Total ram usage:        5 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 9
  4301 ;; This function calls:
  4302 ;;		_CCP_Mode_Timer_Select
  4303 ;; This function is called by:
  4304 ;;		_CCP_Init
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text20
  4309  00302A                     __ptext20:
  4310                           	callstack 0
  4311  00302A                     _CCP_Capture_Mode_Config:
  4312                           	callstack 18
  4313  00302A                     
  4314                           ;MCAL/CCP/hal_ccp.c: 360:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  4315  00302A  0E01               	movlw	1
  4316  00302C  6E25               	movwf	CCP_Capture_Mode_Config@ret^0,c
  4317  00302E                     
  4318                           ;MCAL/CCP/hal_ccp.c: 362:     if(CCP1_INST == _ccp_obj->ccp_inst){
  4319  00302E  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  4320  003032  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  4321  003036  50DF               	movf	indf2,w,c
  4322  003038  A4D8               	btfss	status,2,c
  4323  00303A  EF21  F018         	goto	u6661
  4324  00303E  EF23  F018         	goto	u6660
  4325  003042                     u6661:
  4326  003042  EF64  F018         	goto	l7250
  4327  003046                     u6660:
  4328  003046  EF41  F018         	goto	l7248
  4329  00304A                     l7238:
  4330                           
  4331                           ;MCAL/CCP/hal_ccp.c: 366:                 (CCP1CONbits.CCP1M = ((uint8)0x04));
  4332  00304A  50BD               	movf	189,w,c	;volatile
  4333  00304C  0BF0               	andlw	-16
  4334  00304E  0904               	iorlw	4
  4335  003050  6EBD               	movwf	189,c	;volatile
  4336                           
  4337                           ;MCAL/CCP/hal_ccp.c: 367:                 break;
  4338  003052  EFAD  F018         	goto	l7266
  4339  003056                     l7240:
  4340                           
  4341                           ;MCAL/CCP/hal_ccp.c: 369:                 (CCP1CONbits.CCP1M = ((uint8)0x05));
  4342  003056  50BD               	movf	189,w,c	;volatile
  4343  003058  0BF0               	andlw	-16
  4344  00305A  0905               	iorlw	5
  4345  00305C  6EBD               	movwf	189,c	;volatile
  4346                           
  4347                           ;MCAL/CCP/hal_ccp.c: 370:                 break;
  4348  00305E  EFAD  F018         	goto	l7266
  4349  003062                     l7242:
  4350                           
  4351                           ;MCAL/CCP/hal_ccp.c: 372:                 (CCP1CONbits.CCP1M = ((uint8)0x06));
  4352  003062  50BD               	movf	189,w,c	;volatile
  4353  003064  0BF0               	andlw	-16
  4354  003066  0906               	iorlw	6
  4355  003068  6EBD               	movwf	189,c	;volatile
  4356                           
  4357                           ;MCAL/CCP/hal_ccp.c: 373:                 break;
  4358  00306A  EFAD  F018         	goto	l7266
  4359  00306E                     l7244:
  4360                           
  4361                           ;MCAL/CCP/hal_ccp.c: 375:                 (CCP1CONbits.CCP1M = ((uint8)0x07));
  4362  00306E  50BD               	movf	189,w,c	;volatile
  4363  003070  0BF0               	andlw	-16
  4364  003072  0907               	iorlw	7
  4365  003074  6EBD               	movwf	189,c	;volatile
  4366                           
  4367                           ;MCAL/CCP/hal_ccp.c: 376:                 break;
  4368  003076  EFAD  F018         	goto	l7266
  4369  00307A                     l7246:
  4370  00307A  0E00               	movlw	0
  4371  00307C  6E25               	movwf	CCP_Capture_Mode_Config@ret^0,c
  4372                           
  4373                           ;MCAL/CCP/hal_ccp.c: 378:         }
  4374  00307E  EFAD  F018         	goto	l7266
  4375  003082                     l7248:
  4376  003082  EE20 F002          	lfsr	2,2
  4377  003086  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  4378  003088  26D9               	addwf	fsr2l,f,c
  4379  00308A  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  4380  00308C  22DA               	addwfc	fsr2h,f,c
  4381  00308E  50DF               	movf	indf2,w,c
  4382  003090  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  4383  003092  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  4384                           
  4385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4386                           ; Switch size 1, requested type "simple"
  4387                           ; Number of cases is 1, Range of values is 0 to 0
  4388                           ; switch strategies available:
  4389                           ; Name         Instructions Cycles
  4390                           ; simple_byte            4     3 (average)
  4391                           ;	Chosen strategy is simple_byte
  4392  003094  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  4393  003096  0A00               	xorlw	0	; case 0
  4394  003098  B4D8               	btfsc	status,2,c
  4395  00309A  EF51  F018         	goto	l12088
  4396  00309E  EF3D  F018         	goto	l7246
  4397  0030A2                     l12088:
  4398                           
  4399                           ; Switch size 1, requested type "simple"
  4400                           ; Number of cases is 4, Range of values is 4 to 7
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte           13     7 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  0030A2  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  4406  0030A4  0A04               	xorlw	4	; case 4
  4407  0030A6  B4D8               	btfsc	status,2,c
  4408  0030A8  EF25  F018         	goto	l7238
  4409  0030AC  0A01               	xorlw	1	; case 5
  4410  0030AE  B4D8               	btfsc	status,2,c
  4411  0030B0  EF2B  F018         	goto	l7240
  4412  0030B4  0A03               	xorlw	3	; case 6
  4413  0030B6  B4D8               	btfsc	status,2,c
  4414  0030B8  EF31  F018         	goto	l7242
  4415  0030BC  0A01               	xorlw	1	; case 7
  4416  0030BE  B4D8               	btfsc	status,2,c
  4417  0030C0  EF37  F018         	goto	l7244
  4418  0030C4  EF3D  F018         	goto	l7246
  4419  0030C8                     l7250:
  4420  0030C8  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  4421  0030CC  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  4422  0030D0  04DE               	decf	postinc2,w,c
  4423  0030D2  A4D8               	btfss	status,2,c
  4424  0030D4  EF6E  F018         	goto	u6671
  4425  0030D8  EF70  F018         	goto	u6670
  4426  0030DC                     u6671:
  4427  0030DC  EFAD  F018         	goto	l7266
  4428  0030E0                     u6670:
  4429  0030E0  EF8A  F018         	goto	l7264
  4430  0030E4                     l7254:
  4431                           
  4432                           ;MCAL/CCP/hal_ccp.c: 384:                 (CCP2CONbits.CCP2M = ((uint8)0x04));
  4433  0030E4  50BA               	movf	186,w,c	;volatile
  4434  0030E6  0BF0               	andlw	-16
  4435  0030E8  0904               	iorlw	4
  4436  0030EA  6EBA               	movwf	186,c	;volatile
  4437                           
  4438                           ;MCAL/CCP/hal_ccp.c: 385:             break;
  4439  0030EC  EFAD  F018         	goto	l7266
  4440  0030F0                     l7256:
  4441                           
  4442                           ;MCAL/CCP/hal_ccp.c: 387:                 (CCP2CONbits.CCP2M = ((uint8)0x05));
  4443  0030F0  50BA               	movf	186,w,c	;volatile
  4444  0030F2  0BF0               	andlw	-16
  4445  0030F4  0905               	iorlw	5
  4446  0030F6  6EBA               	movwf	186,c	;volatile
  4447                           
  4448                           ;MCAL/CCP/hal_ccp.c: 388:                 break;
  4449  0030F8  EFAD  F018         	goto	l7266
  4450  0030FC                     l7258:
  4451                           
  4452                           ;MCAL/CCP/hal_ccp.c: 390:                 (CCP2CONbits.CCP2M = ((uint8)0x06));
  4453  0030FC  50BA               	movf	186,w,c	;volatile
  4454  0030FE  0BF0               	andlw	-16
  4455  003100  0906               	iorlw	6
  4456  003102  6EBA               	movwf	186,c	;volatile
  4457                           
  4458                           ;MCAL/CCP/hal_ccp.c: 391:                 break;
  4459  003104  EFAD  F018         	goto	l7266
  4460  003108                     l7260:
  4461                           
  4462                           ;MCAL/CCP/hal_ccp.c: 393:                 (CCP2CONbits.CCP2M = ((uint8)0x07));
  4463  003108  50BA               	movf	186,w,c	;volatile
  4464  00310A  0BF0               	andlw	-16
  4465  00310C  0907               	iorlw	7
  4466  00310E  6EBA               	movwf	186,c	;volatile
  4467                           
  4468                           ;MCAL/CCP/hal_ccp.c: 394:                 break;
  4469  003110  EFAD  F018         	goto	l7266
  4470  003114                     l7264:
  4471  003114  EE20 F002          	lfsr	2,2
  4472  003118  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  4473  00311A  26D9               	addwf	fsr2l,f,c
  4474  00311C  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  4475  00311E  22DA               	addwfc	fsr2h,f,c
  4476  003120  50DF               	movf	indf2,w,c
  4477  003122  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  4478  003124  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  4479                           
  4480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4481                           ; Switch size 1, requested type "simple"
  4482                           ; Number of cases is 1, Range of values is 0 to 0
  4483                           ; switch strategies available:
  4484                           ; Name         Instructions Cycles
  4485                           ; simple_byte            4     3 (average)
  4486                           ;	Chosen strategy is simple_byte
  4487  003126  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  4488  003128  0A00               	xorlw	0	; case 0
  4489  00312A  B4D8               	btfsc	status,2,c
  4490  00312C  EF9A  F018         	goto	l12090
  4491  003130  EF3D  F018         	goto	l7246
  4492  003134                     l12090:
  4493                           
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 4, Range of values is 4 to 7
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           13     7 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500  003134  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  4501  003136  0A04               	xorlw	4	; case 4
  4502  003138  B4D8               	btfsc	status,2,c
  4503  00313A  EF72  F018         	goto	l7254
  4504  00313E  0A01               	xorlw	1	; case 5
  4505  003140  B4D8               	btfsc	status,2,c
  4506  003142  EF78  F018         	goto	l7256
  4507  003146  0A03               	xorlw	3	; case 6
  4508  003148  B4D8               	btfsc	status,2,c
  4509  00314A  EF7E  F018         	goto	l7258
  4510  00314E  0A01               	xorlw	1	; case 7
  4511  003150  B4D8               	btfsc	status,2,c
  4512  003152  EF84  F018         	goto	l7260
  4513  003156  EF3D  F018         	goto	l7246
  4514  00315A                     l7266:
  4515                           
  4516                           ;MCAL/CCP/hal_ccp.c: 401:     CCP_Mode_Timer_Select(_ccp_obj);
  4517  00315A  C021  F01E         	movff	CCP_Capture_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  4518  00315E  C022  F01F         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  4519  003162  ECAA  F023         	call	_CCP_Mode_Timer_Select	;wreg free
  4520  003166                     
  4521                           ;MCAL/CCP/hal_ccp.c: 403:     return ret;
  4522  003166  5025               	movf	CCP_Capture_Mode_Config@ret^0,w,c
  4523  003168  0012               	return		;funcret
  4524  00316A                     __end_of_CCP_Capture_Mode_Config:
  4525                           	callstack 0
  4526                           
  4527 ;; *************** function _CCP_Mode_Timer_Select *****************
  4528 ;; Defined at:
  4529 ;;		line 339 in file "MCAL/CCP/hal_ccp.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  4532 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        3 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 8
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_CCP_Capture_Mode_Config
  4555 ;;		_CCP_Compare_Mode_Config
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text21
  4560  004754                     __ptext21:
  4561                           	callstack 0
  4562  004754                     _CCP_Mode_Timer_Select:
  4563                           	callstack 18
  4564  004754                     
  4565                           ;MCAL/CCP/hal_ccp.c: 340:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
  4566  004754  EE20 F004          	lfsr	2,4
  4567  004758  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4568  00475A  26D9               	addwf	fsr2l,f,c
  4569  00475C  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4570  00475E  22DA               	addwfc	fsr2h,f,c
  4571  004760  50DF               	movf	indf2,w,c
  4572  004762  A4D8               	btfss	status,2,c
  4573  004764  EFB6  F023         	goto	u6351
  4574  004768  EFB8  F023         	goto	u6350
  4575  00476C                     u6351:
  4576  00476C  EFBC  F023         	goto	l7066
  4577  004770                     u6350:
  4578  004770                     
  4579                           ;MCAL/CCP/hal_ccp.c: 342:         T3CONbits.T3CCP1 = 0;
  4580  004770  96B1               	bcf	177,3,c	;volatile
  4581                           
  4582                           ;MCAL/CCP/hal_ccp.c: 343:         T3CONbits.T3CCP2 = 1;
  4583  004772  8CB1               	bsf	177,6,c	;volatile
  4584                           
  4585                           ;MCAL/CCP/hal_ccp.c: 344:     }
  4586  004774  EFE1  F023         	goto	l575
  4587  004778                     l7066:
  4588  004778  EE20 F004          	lfsr	2,4
  4589  00477C  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4590  00477E  26D9               	addwf	fsr2l,f,c
  4591  004780  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4592  004782  22DA               	addwfc	fsr2h,f,c
  4593  004784  04DE               	decf	postinc2,w,c
  4594  004786  A4D8               	btfss	status,2,c
  4595  004788  EFC8  F023         	goto	u6361
  4596  00478C  EFCA  F023         	goto	u6360
  4597  004790                     u6361:
  4598  004790  EFCE  F023         	goto	l7070
  4599  004794                     u6360:
  4600  004794                     
  4601                           ;MCAL/CCP/hal_ccp.c: 348:         T3CONbits.T3CCP1 = 1;
  4602  004794  86B1               	bsf	177,3,c	;volatile
  4603                           
  4604                           ;MCAL/CCP/hal_ccp.c: 349:         T3CONbits.T3CCP2 = 0;
  4605  004796  9CB1               	bcf	177,6,c	;volatile
  4606                           
  4607                           ;MCAL/CCP/hal_ccp.c: 350:     }
  4608  004798  EFE1  F023         	goto	l575
  4609  00479C                     l7070:
  4610  00479C  EE20 F004          	lfsr	2,4
  4611  0047A0  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4612  0047A2  26D9               	addwf	fsr2l,f,c
  4613  0047A4  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4614  0047A6  22DA               	addwfc	fsr2h,f,c
  4615  0047A8  0E02               	movlw	2
  4616  0047AA  18DE               	xorwf	postinc2,w,c
  4617  0047AC  A4D8               	btfss	status,2,c
  4618  0047AE  EFDB  F023         	goto	u6371
  4619  0047B2  EFDD  F023         	goto	u6370
  4620  0047B6                     u6371:
  4621  0047B6  EFE1  F023         	goto	l572
  4622  0047BA                     u6370:
  4623  0047BA                     
  4624                           ;MCAL/CCP/hal_ccp.c: 353:         T3CONbits.T3CCP1 = 0;
  4625  0047BA  96B1               	bcf	177,3,c	;volatile
  4626                           
  4627                           ;MCAL/CCP/hal_ccp.c: 354:         T3CONbits.T3CCP2 = 0;
  4628  0047BC  9CB1               	bcf	177,6,c	;volatile
  4629                           
  4630                           ;MCAL/CCP/hal_ccp.c: 355:     }
  4631  0047BE  EFE1  F023         	goto	l575
  4632  0047C2                     l572:
  4633  0047C2                     l575:
  4634  0047C2  0012               	return		;funcret
  4635  0047C4                     __end_of_CCP_Mode_Timer_Select:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _Ecu_Stepper_Init *****************
  4639 ;; Defined at:
  4640 ;;		line 9 in file "ECU/stepper/ecu_stepper.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  stepper         2    9[BANK0 ] PTR struct .
  4643 ;;		 -> stepper_base(2), 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      unsigned char 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        2 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 10
  4662 ;; This function calls:
  4663 ;;		_GPIO_Pin_Direction_Initialize
  4664 ;;		_GPIO_Pin_Initialize
  4665 ;;		_GPIO_Pin_Write_Logic
  4666 ;; This function is called by:
  4667 ;;		_application_intialize
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text22
  4672  0046D8                     __ptext22:
  4673                           	callstack 0
  4674  0046D8                     _Ecu_Stepper_Init:
  4675                           	callstack 19
  4676  0046D8                     
  4677                           ;ECU/stepper/ecu_stepper.c: 9: Std_ReturnType Ecu_Stepper_Init(stepper_config_st *steppe
      +                          r);ECU/stepper/ecu_stepper.c: 10: {;ECU/stepper/ecu_stepper.c: 11:     if(((void*)0) == 
      +                          stepper)
  4678  0046D8  0100               	movlb	0	; () banked
  4679  0046DA  5169               	movf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4680  0046DC  116A               	iorwf	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4681  0046DE  A4D8               	btfss	status,2,c
  4682  0046E0  EF74  F023         	goto	u11881
  4683  0046E4  EF76  F023         	goto	u11880
  4684  0046E8                     u11881:
  4685  0046E8  EF78  F023         	goto	l11028
  4686  0046EC                     u11880:
  4687  0046EC  EFA9  F023         	goto	l325
  4688  0046F0                     l11028:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;ECU/stepper/ecu_stepper.c: 16:     {;ECU/stepper/ecu_stepper.c: 17:         GPIO_Pin_In
      +                          itialize(&(stepper->step_pin));
  4692  0046F0  C069  F066         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Initialize@_pin_config
  4693  0046F4  C06A  F067         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Initialize@_pin_config+1
  4694  0046F8  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  4695                           
  4696                           ;ECU/stepper/ecu_stepper.c: 18:         GPIO_Pin_Initialize(&(stepper->dir_pin));
  4697  0046FC  0E01               	movlw	1
  4698  0046FE  0100               	movlb	0	; () banked
  4699  004700  2569               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4700  004702  6F66               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  4701  004704  0E00               	movlw	0
  4702  004706  216A               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4703  004708  6F67               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  4704  00470A  EC16  F027         	call	_GPIO_Pin_Initialize	;wreg free
  4705                           
  4706                           ;ECU/stepper/ecu_stepper.c: 19:         GPIO_Pin_Direction_Initialize(&(stepper->dir_pin
      +                          ));
  4707  00470E  0E01               	movlw	1
  4708  004710  0100               	movlb	0	; () banked
  4709  004712  2569               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4710  004714  6E1E               	movwf	GPIO_Pin_Direction_Initialize@_pin_config^0,c
  4711  004716  0E00               	movlw	0
  4712  004718  216A               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4713  00471A  6E1F               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,c
  4714  00471C  EC73  F017         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4715                           
  4716                           ;ECU/stepper/ecu_stepper.c: 20:         GPIO_Pin_Direction_Initialize(&(stepper->step_pi
      +                          n));
  4717  004720  C069  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Direction_Initialize@_pin_config
  4718  004724  C06A  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  4719  004728  EC73  F017         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4720                           
  4721                           ;ECU/stepper/ecu_stepper.c: 21:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , GPIO
      +                          _LOW);
  4722  00472C  C069  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Write_Logic@_pin_config
  4723  004730  C06A  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  4724  004734  0E00               	movlw	0
  4725  004736  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4726  004738  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  4727                           
  4728                           ;ECU/stepper/ecu_stepper.c: 22:         GPIO_Pin_Write_Logic(&(stepper->dir_pin) , GPIO_
      +                          LOW);
  4729  00473C  0E01               	movlw	1
  4730  00473E  0100               	movlb	0	; () banked
  4731  004740  2569               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4732  004742  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  4733  004744  0E00               	movlw	0
  4734  004746  216A               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4735  004748  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  4736  00474A  0E00               	movlw	0
  4737  00474C  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4738  00474E  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  4739  004752                     l325:
  4740  004752  0012               	return		;funcret
  4741  004754                     __end_of_Ecu_Stepper_Init:
  4742                           	callstack 0
  4743                           
  4744 ;; *************** function _GPIO_Pin_Initialize *****************
  4745 ;; Defined at:
  4746 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  _pin_config     2    6[BANK0 ] PTR const struct .
  4749 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
  4750 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
  4751 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  ERRORSTATUS     1    8[BANK0 ] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      unsigned char 
  4756 ;; Registers used:
  4757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4763 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;Total ram usage:        3 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 9
  4770 ;; This function calls:
  4771 ;;		_GPIO_Pin_Direction_Initialize
  4772 ;;		_GPIO_Pin_Write_Logic
  4773 ;; This function is called by:
  4774 ;;		_ECU_DC_Motor_Init
  4775 ;;		_Ecu_Stepper_Init
  4776 ;;		_CCP_Init
  4777 ;;		_Ultra_Sonic_Init
  4778 ;;		_application_intialize
  4779 ;;		_IR_Sensor_Init
  4780 ;;		_lcd_4bit_initialize
  4781 ;;		_lcd_8bit_initialize
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text23
  4786  004E2C                     __ptext23:
  4787                           	callstack 0
  4788  004E2C                     _GPIO_Pin_Initialize:
  4789                           	callstack 19
  4790  004E2C                     
  4791                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  4792  004E2C  0100               	movlb	0	; () banked
  4793  004E2E  5166               	movf	GPIO_Pin_Initialize@_pin_config& (0+255),w,b
  4794  004E30  1167               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),w,b
  4795  004E32  A4D8               	btfss	status,2,c
  4796  004E34  EF1E  F027         	goto	u10821
  4797  004E38  EF20  F027         	goto	u10820
  4798  004E3C                     u10821:
  4799  004E3C  EF24  F027         	goto	l10324
  4800  004E40                     u10820:
  4801  004E40                     
  4802                           ; BSR set to: 0
  4803                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  4804  004E40  0E00               	movlw	0
  4805  004E42  6F68               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  4806                           
  4807                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  4808  004E44  EF3C  F027         	goto	l10326
  4809  004E48                     l10324:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  4813  004E48  C066  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  4814  004E4C  C067  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  4815  004E50  EC73  F017         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4816  004E54  0100               	movlb	0	; () banked
  4817  004E56  6F68               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  4818                           
  4819                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  4820  004E58  C066  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  4821  004E5C  C067  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  4822  004E60  C066  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  4823  004E64  C067  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  4824  004E68  0E00               	movlw	0
  4825  004E6A  BEDF               	btfsc	indf2,7,c
  4826  004E6C  0E01               	movlw	1
  4827  004E6E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4828  004E70  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  4829  004E74  0100               	movlb	0	; () banked
  4830  004E76  6F68               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  4831  004E78                     l10326:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  4835  004E78  5168               	movf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),w,b
  4836  004E7A                     
  4837                           ; BSR set to: 0
  4838  004E7A  0012               	return		;funcret
  4839  004E7C                     __end_of_GPIO_Pin_Initialize:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  4843 ;; Defined at:
  4844 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  _pin_config     2   29[COMRAM] PTR const struct .
  4847 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
  4848 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
  4849 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  ERRORSTATUS     1    0[BANK0 ] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      unsigned char 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;Total ram usage:        9 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; Hardware stack levels required when called: 8
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_Ecu_Stepper_Init
  4872 ;;		_GPIO_Pin_Initialize
  4873 ;;		_interrupt_RBx_pin_init
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text24
  4878  002EE6                     __ptext24:
  4879                           	callstack 0
  4880  002EE6                     _GPIO_Pin_Direction_Initialize:
  4881                           	callstack 19
  4882  002EE6                     
  4883                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  4884  002EE6  0E01               	movlw	1
  4885  002EE8  0100               	movlb	0	; () banked
  4886  002EEA  6F60               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),b
  4887  002EEC                     
  4888                           ; BSR set to: 0
  4889                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  4890  002EEC  501E               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  4891  002EEE  101F               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  4892  002EF0  B4D8               	btfsc	status,2,c
  4893  002EF2  EF7D  F017         	goto	u10751
  4894  002EF6  EF7F  F017         	goto	u10750
  4895  002EFA                     u10751:
  4896  002EFA  EF8E  F017         	goto	l10290
  4897  002EFE                     u10750:
  4898  002EFE                     
  4899                           ; BSR set to: 0
  4900  002EFE  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4901  002F02  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4902  002F06  50DF               	movf	223,w,c
  4903  002F08  0B07               	andlw	7
  4904  002F0A  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  4905  002F0C  0E07               	movlw	7
  4906  002F0E  6420               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
  4907  002F10  EF8C  F017         	goto	u10761
  4908  002F14  EF8E  F017         	goto	u10760
  4909  002F18                     u10761:
  4910  002F18  EFF1  F017         	goto	l10298
  4911  002F1C                     u10760:
  4912  002F1C                     l10290:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  4916  002F1C  0E00               	movlw	0
  4917  002F1E  6F60               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),b
  4918                           
  4919                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  4920  002F20  EF12  F018         	goto	l10300
  4921  002F24                     l10292:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  4925  002F24  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4926  002F28  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4927  002F2C  50DF               	movf	223,w,c
  4928  002F2E  0B07               	andlw	7
  4929  002F30  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  4930  002F32  0E01               	movlw	1
  4931  002F34  6E21               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  4932  002F36  2A20               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  4933  002F38  EFA0  F017         	goto	u10774
  4934  002F3C                     u10775:
  4935  002F3C  90D8               	bcf	status,0,c
  4936  002F3E  3621               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  4937  002F40                     u10774:
  4938  002F40  2E20               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  4939  002F42  EF9E  F017         	goto	u10775
  4940  002F46  5021               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  4941  002F48  0AFF               	xorlw	255
  4942  002F4A  6E22               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  4943  002F4C  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4944  002F50  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4945  002F54  30DF               	rrcf	223,w,c
  4946  002F56  32E8               	rrcf	wreg,f,c
  4947  002F58  32E8               	rrcf	wreg,f,c
  4948  002F5A  0B07               	andlw	7
  4949  002F5C  6E23               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  4950  002F5E  5023               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  4951  002F60  0D02               	mullw	2
  4952  002F62  0EE7               	movlw	low _tris_registers
  4953  002F64  24F3               	addwf	243,w,c
  4954  002F66  6ED9               	movwf	fsr2l,c
  4955  002F68  0E00               	movlw	high _tris_registers
  4956  002F6A  20F4               	addwfc	prodh,w,c
  4957  002F6C  6EDA               	movwf	fsr2h,c
  4958  002F6E  CFDE F024          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  4959  002F72  CFDD F025          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  4960  002F76  C024  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  4961  002F7A  C025  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  4962  002F7E  5022               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  4963  002F80  16DF               	andwf	indf2,f,c
  4964                           
  4965                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  4966  002F82  EF12  F018         	goto	l10300
  4967  002F86                     l10294:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  4971  002F86  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4972  002F8A  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4973  002F8E  50DF               	movf	223,w,c
  4974  002F90  0B07               	andlw	7
  4975  002F92  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  4976  002F94  0E01               	movlw	1
  4977  002F96  6E21               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  4978  002F98  2A20               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  4979  002F9A  EFD1  F017         	goto	u10784
  4980  002F9E                     u10785:
  4981  002F9E  90D8               	bcf	status,0,c
  4982  002FA0  3621               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  4983  002FA2                     u10784:
  4984  002FA2  2E20               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  4985  002FA4  EFCF  F017         	goto	u10785
  4986  002FA8  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4987  002FAC  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4988  002FB0  30DF               	rrcf	223,w,c
  4989  002FB2  32E8               	rrcf	wreg,f,c
  4990  002FB4  32E8               	rrcf	wreg,f,c
  4991  002FB6  0B07               	andlw	7
  4992  002FB8  6E22               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  4993  002FBA  5022               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  4994  002FBC  0D02               	mullw	2
  4995  002FBE  0EE7               	movlw	low _tris_registers
  4996  002FC0  24F3               	addwf	243,w,c
  4997  002FC2  6ED9               	movwf	fsr2l,c
  4998  002FC4  0E00               	movlw	high _tris_registers
  4999  002FC6  20F4               	addwfc	prodh,w,c
  5000  002FC8  6EDA               	movwf	fsr2h,c
  5001  002FCA  CFDE F023          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  5002  002FCE  CFDD F024          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  5003  002FD2  C023  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  5004  002FD6  C024  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  5005  002FDA  5021               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  5006  002FDC  12DF               	iorwf	indf2,f,c
  5007                           
  5008                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  5009  002FDE  EF12  F018         	goto	l10300
  5010  002FE2                     l10298:
  5011                           
  5012                           ; BSR set to: 0
  5013  002FE2  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  5014  002FE6  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  5015  002FEA  BCDF               	btfsc	indf2,6,c
  5016  002FEC  EFFA  F017         	goto	u10791
  5017  002FF0  EFFD  F017         	goto	u10790
  5018  002FF4                     u10791:
  5019  002FF4  0E01               	movlw	1
  5020  002FF6  EFFE  F017         	goto	u10800
  5021  002FFA                     u10790:
  5022  002FFA  0E00               	movlw	0
  5023  002FFC                     u10800:
  5024  002FFC  6E20               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  5025  002FFE  6A21               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  5026                           
  5027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5028                           ; Switch size 1, requested type "simple"
  5029                           ; Number of cases is 1, Range of values is 0 to 0
  5030                           ; switch strategies available:
  5031                           ; Name         Instructions Cycles
  5032                           ; simple_byte            4     3 (average)
  5033                           ;	Chosen strategy is simple_byte
  5034  003000  5021               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  5035  003002  0A00               	xorlw	0	; case 0
  5036  003004  B4D8               	btfsc	status,2,c
  5037  003006  EF07  F018         	goto	l12092
  5038  00300A  EF8E  F017         	goto	l10290
  5039  00300E                     l12092:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ; Switch size 1, requested type "simple"
  5043                           ; Number of cases is 2, Range of values is 0 to 1
  5044                           ; switch strategies available:
  5045                           ; Name         Instructions Cycles
  5046                           ; simple_byte            7     4 (average)
  5047                           ;	Chosen strategy is simple_byte
  5048  00300E  5020               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  5049  003010  0A00               	xorlw	0	; case 0
  5050  003012  B4D8               	btfsc	status,2,c
  5051  003014  EF92  F017         	goto	l10292
  5052  003018  0A01               	xorlw	1	; case 1
  5053  00301A  B4D8               	btfsc	status,2,c
  5054  00301C  EFC3  F017         	goto	l10294
  5055  003020  EF8E  F017         	goto	l10290
  5056  003024                     l10300:
  5057                           
  5058                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  5059  003024  0100               	movlb	0	; () banked
  5060  003026  5160               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),w,b
  5061  003028                     
  5062                           ; BSR set to: 0
  5063  003028  0012               	return		;funcret
  5064  00302A                     __end_of_GPIO_Pin_Direction_Initialize:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _EUSART_Async_Init *****************
  5068 ;; Defined at:
  5069 ;;		line 42 in file "MCAL/EUSART/mcal_EUSART.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  _eusart_obj     2   21[BANK1 ] PTR const struct .
  5072 ;;		 -> _uart_obj(12), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  ret_val         1   23[BANK1 ] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      unsigned char 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5084 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;Total ram usage:        3 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 10
  5091 ;; This function calls:
  5092 ;;		_async_Rx_config
  5093 ;;		_async_Tx_config
  5094 ;;		_async_config_baud_rate_gen
  5095 ;; This function is called by:
  5096 ;;		_application_intialize
  5097 ;;		_Bluetooth_Init
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text25
  5102  004D7A                     __ptext25:
  5103                           	callstack 0
  5104  004D7A                     _EUSART_Async_Init:
  5105                           	callstack 19
  5106  004D7A                     
  5107                           ;MCAL/EUSART/mcal_EUSART.c: 46:     if(((void*)0) == _eusart_obj)
  5108  004D7A  0101               	movlb	1	; () banked
  5109  004D7C  5166               	movf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  5110  004D7E  1167               	iorwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  5111  004D80  A4D8               	btfss	status,2,c
  5112  004D82  EFC5  F026         	goto	u11681
  5113  004D86  EFC7  F026         	goto	u11680
  5114  004D8A                     u11681:
  5115  004D8A  EFC9  F026         	goto	l672
  5116  004D8E                     u11680:
  5117  004D8E                     
  5118                           ; BSR set to: 1
  5119                           ;MCAL/EUSART/mcal_EUSART.c: 49:     }
  5120  004D8E  EFEA  F026         	goto	l674
  5121  004D92                     l672:
  5122                           
  5123                           ; BSR set to: 1
  5124                           ;MCAL/EUSART/mcal_EUSART.c: 51:     {;MCAL/EUSART/mcal_EUSART.c: 53:         (RCSTAbits.
      +                          SPEN = 0 );
  5125  004D92  9EAB               	bcf	171,7,c	;volatile
  5126  004D94                     
  5127                           ; BSR set to: 1
  5128                           ;MCAL/EUSART/mcal_EUSART.c: 56:         ret_val = async_config_baud_rate_gen(_eusart_obj
      +                          );
  5129  004D94  C166  F159         	movff	EUSART_Async_Init@_eusart_obj,async_config_baud_rate_gen@_eusart_obj
  5130  004D98  C167  F15A         	movff	EUSART_Async_Init@_eusart_obj+1,async_config_baud_rate_gen@_eusart_obj+1
  5131  004D9C  EC9B  F00C         	call	_async_config_baud_rate_gen	;wreg free
  5132  004DA0  0101               	movlb	1	; () banked
  5133  004DA2  6F68               	movwf	EUSART_Async_Init@ret_val& (0+255),b
  5134  004DA4                     
  5135                           ; BSR set to: 1
  5136                           ;MCAL/EUSART/mcal_EUSART.c: 59:         (TXSTA1bits.SYNC = 0);
  5137  004DA4  98AC               	bcf	172,4,c	;volatile
  5138  004DA6                     
  5139                           ; BSR set to: 1
  5140                           ;MCAL/EUSART/mcal_EUSART.c: 62:         TRISCbits.RC6 = GPIO_DIRECTION_INPUT ;
  5141  004DA6  8C94               	bsf	148,6,c	;volatile
  5142                           
  5143                           ;MCAL/EUSART/mcal_EUSART.c: 64:         ret_val &= async_Tx_config(&(_eusart_obj->tx_con
      +                          fig));
  5144  004DA8  0E02               	movlw	2
  5145  004DAA  2566               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  5146  004DAC  6E1E               	movwf	async_Tx_config@_tx_obj^0,c
  5147  004DAE  0E00               	movlw	0
  5148  004DB0  2167               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  5149  004DB2  6E1F               	movwf	(async_Tx_config@_tx_obj+1)^0,c
  5150  004DB4  EC4F  F022         	call	_async_Tx_config	;wreg free
  5151  004DB8  0101               	movlb	1	; () banked
  5152  004DBA  1768               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  5153  004DBC                     
  5154                           ; BSR set to: 1
  5155                           ;MCAL/EUSART/mcal_EUSART.c: 67:         TRISCbits.RC7 = GPIO_DIRECTION_INPUT ;
  5156  004DBC  8E94               	bsf	148,7,c	;volatile
  5157                           
  5158                           ;MCAL/EUSART/mcal_EUSART.c: 69:         ret_val &= async_Rx_config(&(_eusart_obj->rx_con
      +                          fig));
  5159  004DBE  0E03               	movlw	3
  5160  004DC0  2566               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  5161  004DC2  6E21               	movwf	async_Rx_config@_rx_obj^0,c
  5162  004DC4  0E00               	movlw	0
  5163  004DC6  2167               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  5164  004DC8  6E22               	movwf	(async_Rx_config@_rx_obj+1)^0,c
  5165  004DCA  ECAC  F020         	call	_async_Rx_config	;wreg free
  5166  004DCE  0101               	movlb	1	; () banked
  5167  004DD0  1768               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  5168  004DD2                     
  5169                           ; BSR set to: 1
  5170                           ;MCAL/EUSART/mcal_EUSART.c: 72:         (RCSTAbits.SPEN = 1 );
  5171  004DD2  8EAB               	bsf	171,7,c	;volatile
  5172  004DD4                     l674:
  5173                           
  5174                           ; BSR set to: 1
  5175  004DD4  0012               	return		;funcret
  5176  004DD6                     __end_of_EUSART_Async_Init:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _async_config_baud_rate_gen *****************
  5180 ;; Defined at:
  5181 ;;		line 564 in file "MCAL/EUSART/mcal_EUSART.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  _eusart_obj     2    8[BANK1 ] PTR const struct .
  5184 ;;		 -> _uart_obj(12), 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  Baudrate_tem    4   13[BANK1 ] float 
  5187 ;;  ret_val         1   12[BANK1 ] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      unsigned char 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5197 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;Total ram usage:       13 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 9
  5204 ;; This function calls:
  5205 ;;		___fladd
  5206 ;;		___fldiv
  5207 ;;		___fltol
  5208 ;;		___xxtofl
  5209 ;; This function is called by:
  5210 ;;		_EUSART_Async_Init
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text26
  5215  001936                     __ptext26:
  5216                           	callstack 0
  5217  001936                     _async_config_baud_rate_gen:
  5218                           	callstack 19
  5219  001936                     
  5220                           ;MCAL/EUSART/mcal_EUSART.c: 564: static __attribute__((inline)) Std_ReturnType async_con
      +                          fig_baud_rate_gen(const uart_config_st *_eusart_obj);MCAL/EUSART/mcal_EUSART.c: 565: {;M
      +                          CAL/EUSART/mcal_EUSART.c: 567:     Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5221  001936  0E01               	movlw	1
  5222  001938  0101               	movlb	1	; () banked
  5223  00193A  6F5D               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  5224  00193C                     
  5225                           ; BSR set to: 1
  5226                           ;MCAL/EUSART/mcal_EUSART.c: 569:     if(((void*)0) == _eusart_obj)
  5227  00193C  5159               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  5228  00193E  115A               	iorwf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  5229  001940  A4D8               	btfss	status,2,c
  5230  001942  EFA5  F00C         	goto	u11501
  5231  001946  EFA7  F00C         	goto	u11500
  5232  00194A                     u11501:
  5233  00194A  EFAB  F00C         	goto	l10742
  5234  00194E                     u11500:
  5235  00194E                     
  5236                           ; BSR set to: 1
  5237                           ;MCAL/EUSART/mcal_EUSART.c: 570:     {;MCAL/EUSART/mcal_EUSART.c: 571:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5238  00194E  0E00               	movlw	0
  5239  001950  6F5D               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  5240                           
  5241                           ;MCAL/EUSART/mcal_EUSART.c: 572:     }
  5242  001952  EF75  F00E         	goto	l10768
  5243  001956                     l10742:
  5244                           
  5245                           ; BSR set to: 1
  5246                           ;MCAL/EUSART/mcal_EUSART.c: 574:     {;MCAL/EUSART/mcal_EUSART.c: 575:         float32 B
      +                          audrate_temp=0;
  5247  001956  0E00               	movlw	0
  5248  001958  6F5E               	movwf	async_config_baud_rate_gen@Baudrate_temp& (0+255),b
  5249  00195A  0E00               	movlw	0
  5250  00195C  6F5F               	movwf	(async_config_baud_rate_gen@Baudrate_temp+1)& (0+255),b
  5251  00195E  0E00               	movlw	0
  5252  001960  6F60               	movwf	(async_config_baud_rate_gen@Baudrate_temp+2)& (0+255),b
  5253  001962  0E00               	movlw	0
  5254  001964  6F61               	movwf	(async_config_baud_rate_gen@Baudrate_temp+3)& (0+255),b
  5255                           
  5256                           ;MCAL/EUSART/mcal_EUSART.c: 576:         switch(_eusart_obj->baud_rate_config)
  5257  001966  EF31  F00E         	goto	l10764
  5258  00196A                     l815:
  5259                           
  5260                           ; BSR set to: 1
  5261                           ;MCAL/EUSART/mcal_EUSART.c: 579:                 TXSTAbits.BRGH = 0 ;
  5262  00196A  94AC               	bcf	172,2,c	;volatile
  5263                           
  5264                           ;MCAL/EUSART/mcal_EUSART.c: 580:                 BAUDCONbits.BRG16 = 0 ;
  5265  00196C  96B8               	bcf	184,3,c	;volatile
  5266  00196E                     
  5267                           ; BSR set to: 1
  5268                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  5269  00196E  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5270  001972  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5271  001976  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5272  00197A  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5273  00197E  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5274  001982  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5275  001986  6A20               	clrf	(___xxtofl@val+2)^0,c
  5276  001988  6A21               	clrf	(___xxtofl@val+3)^0,c
  5277  00198A  0E00               	movlw	0
  5278  00198C  ECC9  F013         	call	___xxtofl
  5279  001990  C01E  F06A         	movff	?___xxtofl,___fldiv@a
  5280  001994  C01F  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  5281  001998  C020  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  5282  00199C  C021  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  5283  0019A0  0E00               	movlw	0
  5284  0019A2  0100               	movlb	0	; () banked
  5285  0019A4  6F66               	movwf	___fldiv@b& (0+255),b
  5286  0019A6  0E24               	movlw	36
  5287  0019A8  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  5288  0019AA  0EF4               	movlw	244
  5289  0019AC  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  5290  0019AE  0E4A               	movlw	74
  5291  0019B0  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  5292  0019B2  EC77  F00E         	call	___fldiv	;wreg free
  5293  0019B6  C066  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5753
  5294  0019BA  C067  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5753+1
  5295  0019BE  C068  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5753+2
  5296  0019C2  C069  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5753+3
  5297  0019C6                     
  5298                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  5299  0019C6  0E00               	movlw	0
  5300  0019C8  0100               	movlb	0	; () banked
  5301  0019CA  6F6A               	movwf	___fldiv@a& (0+255),b
  5302  0019CC  0E00               	movlw	0
  5303  0019CE  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  5304  0019D0  0E80               	movlw	128
  5305  0019D2  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  5306  0019D4  0E42               	movlw	66
  5307  0019D6  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  5308  0019D8  C162  F066         	movff	_async_config_baud_rate_gen$5753,___fldiv@b
  5309  0019DC  C163  F067         	movff	_async_config_baud_rate_gen$5753+1,___fldiv@b+1
  5310  0019E0  C164  F068         	movff	_async_config_baud_rate_gen$5753+2,___fldiv@b+2
  5311  0019E4  C165  F069         	movff	_async_config_baud_rate_gen$5753+3,___fldiv@b+3
  5312  0019E8  EC77  F00E         	call	___fldiv	;wreg free
  5313  0019EC  C066  F098         	movff	?___fldiv,___fladd@b
  5314  0019F0  C067  F099         	movff	?___fldiv+1,___fladd@b+1
  5315  0019F4  C068  F09A         	movff	?___fldiv+2,___fladd@b+2
  5316  0019F8  C069  F09B         	movff	?___fldiv+3,___fladd@b+3
  5317  0019FC  0E00               	movlw	0
  5318  0019FE  0100               	movlb	0	; () banked
  5319  001A00  6F9C               	movwf	___fladd@a& (0+255),b
  5320  001A02  0E00               	movlw	0
  5321  001A04  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  5322  001A06  0E80               	movlw	128
  5323  001A08  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  5324  001A0A  0EBF               	movlw	191
  5325  001A0C  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  5326  001A0E  EC24  F008         	call	___fladd	;wreg free
  5327  001A12  C098  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5328  001A16  C099  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5329  001A1A  C09A  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5330  001A1E  C09B  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5331                           
  5332                           ;MCAL/EUSART/mcal_EUSART.c: 582:                 break;
  5333  001A22  EF54  F00E         	goto	l10766
  5334  001A26                     l817:
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;MCAL/EUSART/mcal_EUSART.c: 584:                 TXSTAbits.BRGH = 1 ;
  5338  001A26  84AC               	bsf	172,2,c	;volatile
  5339                           
  5340                           ;MCAL/EUSART/mcal_EUSART.c: 585:                 BAUDCONbits.BRG16 = 0 ;
  5341  001A28  96B8               	bcf	184,3,c	;volatile
  5342  001A2A                     
  5343                           ; BSR set to: 1
  5344                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5345  001A2A  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5346  001A2E  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5347  001A32  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5348  001A36  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5349  001A3A  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5350  001A3E  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5351  001A42  6A20               	clrf	(___xxtofl@val+2)^0,c
  5352  001A44  6A21               	clrf	(___xxtofl@val+3)^0,c
  5353  001A46  0E00               	movlw	0
  5354  001A48  ECC9  F013         	call	___xxtofl
  5355  001A4C  C01E  F06A         	movff	?___xxtofl,___fldiv@a
  5356  001A50  C01F  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  5357  001A54  C020  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  5358  001A58  C021  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  5359  001A5C  0E00               	movlw	0
  5360  001A5E  0100               	movlb	0	; () banked
  5361  001A60  6F66               	movwf	___fldiv@b& (0+255),b
  5362  001A62  0E24               	movlw	36
  5363  001A64  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  5364  001A66  0EF4               	movlw	244
  5365  001A68  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  5366  001A6A  0E4A               	movlw	74
  5367  001A6C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  5368  001A6E  EC77  F00E         	call	___fldiv	;wreg free
  5369  001A72  C066  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5753
  5370  001A76  C067  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5753+1
  5371  001A7A  C068  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5753+2
  5372  001A7E  C069  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5753+3
  5373  001A82                     
  5374                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5375  001A82  0E00               	movlw	0
  5376  001A84  0100               	movlb	0	; () banked
  5377  001A86  6F6A               	movwf	___fldiv@a& (0+255),b
  5378  001A88  0E00               	movlw	0
  5379  001A8A  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  5380  001A8C  0E80               	movlw	128
  5381  001A8E  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  5382  001A90  0E41               	movlw	65
  5383  001A92  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  5384  001A94  C162  F066         	movff	_async_config_baud_rate_gen$5753,___fldiv@b
  5385  001A98  C163  F067         	movff	_async_config_baud_rate_gen$5753+1,___fldiv@b+1
  5386  001A9C  C164  F068         	movff	_async_config_baud_rate_gen$5753+2,___fldiv@b+2
  5387  001AA0  C165  F069         	movff	_async_config_baud_rate_gen$5753+3,___fldiv@b+3
  5388  001AA4  EC77  F00E         	call	___fldiv	;wreg free
  5389  001AA8  C066  F098         	movff	?___fldiv,___fladd@b
  5390  001AAC  C067  F099         	movff	?___fldiv+1,___fladd@b+1
  5391  001AB0  C068  F09A         	movff	?___fldiv+2,___fladd@b+2
  5392  001AB4  C069  F09B         	movff	?___fldiv+3,___fladd@b+3
  5393  001AB8  0E00               	movlw	0
  5394  001ABA  0100               	movlb	0	; () banked
  5395  001ABC  6F9C               	movwf	___fladd@a& (0+255),b
  5396  001ABE  0E00               	movlw	0
  5397  001AC0  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  5398  001AC2  0E80               	movlw	128
  5399  001AC4  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  5400  001AC6  0EBF               	movlw	191
  5401  001AC8  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  5402  001ACA  EC24  F008         	call	___fladd	;wreg free
  5403  001ACE  C098  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5404  001AD2  C099  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5405  001AD6  C09A  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5406  001ADA  C09B  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5407                           
  5408                           ;MCAL/EUSART/mcal_EUSART.c: 587:                 break ;
  5409  001ADE  EF54  F00E         	goto	l10766
  5410  001AE2                     l818:
  5411                           
  5412                           ; BSR set to: 1
  5413                           ;MCAL/EUSART/mcal_EUSART.c: 589:                 TXSTAbits.BRGH = 0 ;
  5414  001AE2  94AC               	bcf	172,2,c	;volatile
  5415                           
  5416                           ;MCAL/EUSART/mcal_EUSART.c: 590:                 BAUDCONbits.BRG16 = 1 ;
  5417  001AE4  86B8               	bsf	184,3,c	;volatile
  5418  001AE6                     
  5419                           ; BSR set to: 1
  5420                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5421  001AE6  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5422  001AEA  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5423  001AEE  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5424  001AF2  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5425  001AF6  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5426  001AFA  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5427  001AFE  6A20               	clrf	(___xxtofl@val+2)^0,c
  5428  001B00  6A21               	clrf	(___xxtofl@val+3)^0,c
  5429  001B02  0E00               	movlw	0
  5430  001B04  ECC9  F013         	call	___xxtofl
  5431  001B08  C01E  F06A         	movff	?___xxtofl,___fldiv@a
  5432  001B0C  C01F  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  5433  001B10  C020  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  5434  001B14  C021  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  5435  001B18  0E00               	movlw	0
  5436  001B1A  0100               	movlb	0	; () banked
  5437  001B1C  6F66               	movwf	___fldiv@b& (0+255),b
  5438  001B1E  0E24               	movlw	36
  5439  001B20  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  5440  001B22  0EF4               	movlw	244
  5441  001B24  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  5442  001B26  0E4A               	movlw	74
  5443  001B28  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  5444  001B2A  EC77  F00E         	call	___fldiv	;wreg free
  5445  001B2E  C066  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5753
  5446  001B32  C067  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5753+1
  5447  001B36  C068  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5753+2
  5448  001B3A  C069  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5753+3
  5449  001B3E                     
  5450                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5451  001B3E  0E00               	movlw	0
  5452  001B40  0100               	movlb	0	; () banked
  5453  001B42  6F6A               	movwf	___fldiv@a& (0+255),b
  5454  001B44  0E00               	movlw	0
  5455  001B46  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  5456  001B48  0E80               	movlw	128
  5457  001B4A  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  5458  001B4C  0E41               	movlw	65
  5459  001B4E  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  5460  001B50  C162  F066         	movff	_async_config_baud_rate_gen$5753,___fldiv@b
  5461  001B54  C163  F067         	movff	_async_config_baud_rate_gen$5753+1,___fldiv@b+1
  5462  001B58  C164  F068         	movff	_async_config_baud_rate_gen$5753+2,___fldiv@b+2
  5463  001B5C  C165  F069         	movff	_async_config_baud_rate_gen$5753+3,___fldiv@b+3
  5464  001B60  EC77  F00E         	call	___fldiv	;wreg free
  5465  001B64  C066  F098         	movff	?___fldiv,___fladd@b
  5466  001B68  C067  F099         	movff	?___fldiv+1,___fladd@b+1
  5467  001B6C  C068  F09A         	movff	?___fldiv+2,___fladd@b+2
  5468  001B70  C069  F09B         	movff	?___fldiv+3,___fladd@b+3
  5469  001B74  0E00               	movlw	0
  5470  001B76  0100               	movlb	0	; () banked
  5471  001B78  6F9C               	movwf	___fladd@a& (0+255),b
  5472  001B7A  0E00               	movlw	0
  5473  001B7C  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  5474  001B7E  0E80               	movlw	128
  5475  001B80  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  5476  001B82  0EBF               	movlw	191
  5477  001B84  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  5478  001B86  EC24  F008         	call	___fladd	;wreg free
  5479  001B8A  C098  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5480  001B8E  C099  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5481  001B92  C09A  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5482  001B96  C09B  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5483                           
  5484                           ;MCAL/EUSART/mcal_EUSART.c: 592:                 break ;
  5485  001B9A  EF54  F00E         	goto	l10766
  5486  001B9E                     l819:
  5487                           
  5488                           ; BSR set to: 1
  5489                           ;MCAL/EUSART/mcal_EUSART.c: 594:                 TXSTAbits.BRGH = 1 ;
  5490  001B9E  84AC               	bsf	172,2,c	;volatile
  5491                           
  5492                           ;MCAL/EUSART/mcal_EUSART.c: 595:                 BAUDCONbits.BRG16 = 1 ;
  5493  001BA0  86B8               	bsf	184,3,c	;volatile
  5494  001BA2                     
  5495                           ; BSR set to: 1
  5496                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  5497  001BA2  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5498  001BA6  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5499  001BAA  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5500  001BAE  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5501  001BB2  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5502  001BB6  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5503  001BBA  6A20               	clrf	(___xxtofl@val+2)^0,c
  5504  001BBC  6A21               	clrf	(___xxtofl@val+3)^0,c
  5505  001BBE  0E00               	movlw	0
  5506  001BC0  ECC9  F013         	call	___xxtofl
  5507  001BC4  C01E  F06A         	movff	?___xxtofl,___fldiv@a
  5508  001BC8  C01F  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  5509  001BCC  C020  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  5510  001BD0  C021  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  5511  001BD4  0E00               	movlw	0
  5512  001BD6  0100               	movlb	0	; () banked
  5513  001BD8  6F66               	movwf	___fldiv@b& (0+255),b
  5514  001BDA  0E24               	movlw	36
  5515  001BDC  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  5516  001BDE  0EF4               	movlw	244
  5517  001BE0  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  5518  001BE2  0E4A               	movlw	74
  5519  001BE4  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  5520  001BE6  EC77  F00E         	call	___fldiv	;wreg free
  5521  001BEA  C066  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5753
  5522  001BEE  C067  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5753+1
  5523  001BF2  C068  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5753+2
  5524  001BF6  C069  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5753+3
  5525  001BFA                     
  5526                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  5527  001BFA  0E00               	movlw	0
  5528  001BFC  0100               	movlb	0	; () banked
  5529  001BFE  6F6A               	movwf	___fldiv@a& (0+255),b
  5530  001C00  0E00               	movlw	0
  5531  001C02  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  5532  001C04  0E80               	movlw	128
  5533  001C06  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  5534  001C08  0E40               	movlw	64
  5535  001C0A  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  5536  001C0C  C162  F066         	movff	_async_config_baud_rate_gen$5753,___fldiv@b
  5537  001C10  C163  F067         	movff	_async_config_baud_rate_gen$5753+1,___fldiv@b+1
  5538  001C14  C164  F068         	movff	_async_config_baud_rate_gen$5753+2,___fldiv@b+2
  5539  001C18  C165  F069         	movff	_async_config_baud_rate_gen$5753+3,___fldiv@b+3
  5540  001C1C  EC77  F00E         	call	___fldiv	;wreg free
  5541  001C20  C066  F098         	movff	?___fldiv,___fladd@b
  5542  001C24  C067  F099         	movff	?___fldiv+1,___fladd@b+1
  5543  001C28  C068  F09A         	movff	?___fldiv+2,___fladd@b+2
  5544  001C2C  C069  F09B         	movff	?___fldiv+3,___fladd@b+3
  5545  001C30  0E00               	movlw	0
  5546  001C32  0100               	movlb	0	; () banked
  5547  001C34  6F9C               	movwf	___fladd@a& (0+255),b
  5548  001C36  0E00               	movlw	0
  5549  001C38  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  5550  001C3A  0E80               	movlw	128
  5551  001C3C  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  5552  001C3E  0EBF               	movlw	191
  5553  001C40  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  5554  001C42  EC24  F008         	call	___fladd	;wreg free
  5555  001C46  C098  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5556  001C4A  C099  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5557  001C4E  C09A  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5558  001C52  C09B  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5559                           
  5560                           ;MCAL/EUSART/mcal_EUSART.c: 597:                 break ;
  5561  001C56  EF54  F00E         	goto	l10766
  5562  001C5A                     l10760:
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;MCAL/EUSART/mcal_EUSART.c: 599:                 ret_val = (Std_ReturnType) 0x00 ;
  5566  001C5A  0E00               	movlw	0
  5567  001C5C  6F5D               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  5568                           
  5569                           ;MCAL/EUSART/mcal_EUSART.c: 600:                 break ;
  5570  001C5E  EF54  F00E         	goto	l10766
  5571  001C62                     l10764:
  5572                           
  5573                           ; BSR set to: 1
  5574  001C62  EE20 F00B          	lfsr	2,11
  5575  001C66  5159               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  5576  001C68  26D9               	addwf	fsr2l,f,c
  5577  001C6A  515A               	movf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  5578  001C6C  22DA               	addwfc	fsr2h,f,c
  5579  001C6E  50DF               	movf	indf2,w,c
  5580  001C70  6F5B               	movwf	??_async_config_baud_rate_gen& (0+255),b
  5581  001C72  6B5C               	clrf	(??_async_config_baud_rate_gen+1)& (0+255),b
  5582                           
  5583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5584                           ; Switch size 1, requested type "simple"
  5585                           ; Number of cases is 1, Range of values is 0 to 0
  5586                           ; switch strategies available:
  5587                           ; Name         Instructions Cycles
  5588                           ; simple_byte            4     3 (average)
  5589                           ;	Chosen strategy is simple_byte
  5590  001C74  515C               	movf	(??_async_config_baud_rate_gen+1)& (0+255),w,b
  5591  001C76  0A00               	xorlw	0	; case 0
  5592  001C78  B4D8               	btfsc	status,2,c
  5593  001C7A  EF41  F00E         	goto	l12094
  5594  001C7E  EF2D  F00E         	goto	l10760
  5595  001C82                     l12094:
  5596                           
  5597                           ; BSR set to: 1
  5598                           ; Switch size 1, requested type "simple"
  5599                           ; Number of cases is 4, Range of values is 0 to 3
  5600                           ; switch strategies available:
  5601                           ; Name         Instructions Cycles
  5602                           ; simple_byte           13     7 (average)
  5603                           ;	Chosen strategy is simple_byte
  5604  001C82  515B               	movf	??_async_config_baud_rate_gen& (0+255),w,b
  5605  001C84  0A00               	xorlw	0	; case 0
  5606  001C86  B4D8               	btfsc	status,2,c
  5607  001C88  EFB5  F00C         	goto	l815
  5608  001C8C  0A01               	xorlw	1	; case 1
  5609  001C8E  B4D8               	btfsc	status,2,c
  5610  001C90  EF13  F00D         	goto	l817
  5611  001C94  0A03               	xorlw	3	; case 2
  5612  001C96  B4D8               	btfsc	status,2,c
  5613  001C98  EF71  F00D         	goto	l818
  5614  001C9C  0A01               	xorlw	1	; case 3
  5615  001C9E  B4D8               	btfsc	status,2,c
  5616  001CA0  EFCF  F00D         	goto	l819
  5617  001CA4  EF2D  F00E         	goto	l10760
  5618  001CA8                     l10766:
  5619                           
  5620                           ;MCAL/EUSART/mcal_EUSART.c: 604:         SPBRG=(uint8)((uint32)Baudrate_temp);
  5621  001CA8  C15E  F151         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  5622  001CAC  C15F  F152         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  5623  001CB0  C160  F153         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  5624  001CB4  C161  F154         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  5625  001CB8  ECEB  F019         	call	___fltol	;wreg free
  5626  001CBC  0101               	movlb	1	; () banked
  5627  001CBE  5151               	movf	?___fltol& (0+255),w,b
  5628  001CC0  6EAF               	movwf	175,c	;volatile
  5629                           
  5630                           ;MCAL/EUSART/mcal_EUSART.c: 605:         SPBRGH=(uint8)(((uint32)Baudrate_temp)>>8);
  5631  001CC2  C15E  F151         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  5632  001CC6  C15F  F152         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  5633  001CCA  C160  F153         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  5634  001CCE  C161  F154         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  5635  001CD2  ECEB  F019         	call	___fltol	;wreg free
  5636  001CD6  0101               	movlb	1	; () banked
  5637  001CD8  C152  F151         	movff	?___fltol+1,?___fltol
  5638  001CDC  C153  F152         	movff	?___fltol+2,?___fltol+1
  5639  001CE0  C154  F153         	movff	?___fltol+3,?___fltol+2
  5640  001CE4  6B54               	clrf	(?___fltol+3)& (0+255),b
  5641  001CE6  5151               	movf	?___fltol& (0+255),w,b
  5642  001CE8  6EB0               	movwf	176,c	;volatile
  5643  001CEA                     l10768:
  5644                           
  5645                           ; BSR set to: 1
  5646                           ;MCAL/EUSART/mcal_EUSART.c: 608:     return ret_val ;
  5647  001CEA  515D               	movf	async_config_baud_rate_gen@ret_val& (0+255),w,b
  5648  001CEC                     
  5649                           ; BSR set to: 1
  5650  001CEC  0012               	return		;funcret
  5651  001CEE                     __end_of_async_config_baud_rate_gen:
  5652                           	callstack 0
  5653                           
  5654 ;; *************** function _async_Tx_config *****************
  5655 ;; Defined at:
  5656 ;;		line 386 in file "MCAL/EUSART/mcal_EUSART.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  _tx_obj         2   29[COMRAM] PTR const struct .
  5659 ;;		 -> _uart_obj(12), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  ret_val         1   31[COMRAM] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      unsigned char 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;Total ram usage:        3 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 8
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_EUSART_Async_Init
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text27
  5686  00449E                     __ptext27:
  5687                           	callstack 0
  5688  00449E                     _async_Tx_config:
  5689                           	callstack 20
  5690  00449E                     
  5691                           ;MCAL/EUSART/mcal_EUSART.c: 386: static Std_ReturnType async_Tx_config(const uart_tx_con
      +                          fig_st *_tx_obj );MCAL/EUSART/mcal_EUSART.c: 387: {;MCAL/EUSART/mcal_EUSART.c: 388:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5692  00449E  0E01               	movlw	1
  5693  0044A0  6E20               	movwf	async_Tx_config@ret_val^0,c
  5694  0044A2                     
  5695                           ;MCAL/EUSART/mcal_EUSART.c: 390:     if(((void*)0) == _tx_obj)
  5696  0044A2  501E               	movf	async_Tx_config@_tx_obj^0,w,c
  5697  0044A4  101F               	iorwf	(async_Tx_config@_tx_obj+1)^0,w,c
  5698  0044A6  A4D8               	btfss	status,2,c
  5699  0044A8  EF58  F022         	goto	u11511
  5700  0044AC  EF5A  F022         	goto	u11510
  5701  0044B0                     u11511:
  5702  0044B0  EF5E  F022         	goto	l10784
  5703  0044B4                     u11510:
  5704  0044B4                     
  5705                           ;MCAL/EUSART/mcal_EUSART.c: 391:     {;MCAL/EUSART/mcal_EUSART.c: 392:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5706  0044B4  0E00               	movlw	0
  5707  0044B6  6E20               	movwf	async_Tx_config@ret_val^0,c
  5708                           
  5709                           ;MCAL/EUSART/mcal_EUSART.c: 393:     }
  5710  0044B8  EF95  F022         	goto	l10800
  5711  0044BC                     l10784:
  5712                           
  5713                           ;MCAL/EUSART/mcal_EUSART.c: 395:     {;MCAL/EUSART/mcal_EUSART.c: 396:         if(1 == _
      +                          tx_obj->tx_enable)
  5714  0044BC  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5715  0044C0  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5716  0044C4  A4DF               	btfss	indf2,2,c
  5717  0044C6  EF67  F022         	goto	u11521
  5718  0044CA  EF69  F022         	goto	u11520
  5719  0044CE                     u11521:
  5720  0044CE  EF87  F022         	goto	l10796
  5721  0044D2                     u11520:
  5722  0044D2                     
  5723                           ;MCAL/EUSART/mcal_EUSART.c: 397:         {;MCAL/EUSART/mcal_EUSART.c: 400:             (
      +                          TXSTAbits.TXEN = 0);
  5724  0044D2  9AAC               	bcf	172,5,c	;volatile
  5725  0044D4                     
  5726                           ;MCAL/EUSART/mcal_EUSART.c: 406:             if(1 == _tx_obj->tx_9th_bit_en )
  5727  0044D4  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5728  0044D8  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5729  0044DC  A6DF               	btfss	indf2,3,c
  5730  0044DE  EF73  F022         	goto	u11531
  5731  0044E2  EF75  F022         	goto	u11530
  5732  0044E6                     u11531:
  5733  0044E6  EF78  F022         	goto	l10792
  5734  0044EA                     u11530:
  5735  0044EA                     
  5736                           ;MCAL/EUSART/mcal_EUSART.c: 407:             {;MCAL/EUSART/mcal_EUSART.c: 408:          
      +                                 TXSTAbits.TX9 = 1 ;
  5737  0044EA  8CAC               	bsf	172,6,c	;volatile
  5738                           
  5739                           ;MCAL/EUSART/mcal_EUSART.c: 409:             }
  5740  0044EC  EF84  F022         	goto	l776
  5741  0044F0                     l10792:
  5742  0044F0  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5743  0044F4  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5744  0044F8  B6DF               	btfsc	indf2,3,c
  5745  0044FA  EF81  F022         	goto	u11541
  5746  0044FE  EF83  F022         	goto	u11540
  5747  004502                     u11541:
  5748  004502  EF84  F022         	goto	l776
  5749  004506                     u11540:
  5750  004506                     
  5751                           ;MCAL/EUSART/mcal_EUSART.c: 411:             {;MCAL/EUSART/mcal_EUSART.c: 412:          
      +                                 TXSTAbits.TX9 = 0 ;
  5752  004506  9CAC               	bcf	172,6,c	;volatile
  5753  004508                     l776:
  5754                           
  5755                           ;MCAL/EUSART/mcal_EUSART.c: 417:             (TXSTAbits.TXEN = 1);
  5756  004508  8AAC               	bsf	172,5,c	;volatile
  5757                           
  5758                           ;MCAL/EUSART/mcal_EUSART.c: 418:         }
  5759  00450A  EF95  F022         	goto	l10800
  5760  00450E                     l10796:
  5761  00450E  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5762  004512  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5763  004516  B4DF               	btfsc	indf2,2,c
  5764  004518  EF90  F022         	goto	u11551
  5765  00451C  EF92  F022         	goto	u11550
  5766  004520                     u11551:
  5767  004520  EF95  F022         	goto	l779
  5768  004524                     u11550:
  5769  004524                     
  5770                           ;MCAL/EUSART/mcal_EUSART.c: 420:         {;MCAL/EUSART/mcal_EUSART.c: 422:             (
      +                          TXSTAbits.TXEN = 0);
  5771  004524  9AAC               	bcf	172,5,c	;volatile
  5772                           
  5773                           ;MCAL/EUSART/mcal_EUSART.c: 423:         }
  5774  004526  EF95  F022         	goto	l10800
  5775  00452A                     l779:
  5776  00452A                     l10800:
  5777                           
  5778                           ;MCAL/EUSART/mcal_EUSART.c: 428:     return ret_val ;
  5779  00452A  5020               	movf	async_Tx_config@ret_val^0,w,c
  5780  00452C  0012               	return		;funcret
  5781  00452E                     __end_of_async_Tx_config:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _async_Rx_config *****************
  5785 ;; Defined at:
  5786 ;;		line 431 in file "MCAL/EUSART/mcal_EUSART.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  _rx_obj         2   32[COMRAM] PTR const struct .
  5789 ;;		 -> _uart_obj(12), 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  ret_val         1   34[COMRAM] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      unsigned char 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;Total ram usage:        3 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 9
  5808 ;; This function calls:
  5809 ;;		_Rx_config_interrupt
  5810 ;; This function is called by:
  5811 ;;		_EUSART_Async_Init
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text28
  5816  004158                     __ptext28:
  5817                           	callstack 0
  5818  004158                     _async_Rx_config:
  5819                           	callstack 19
  5820  004158                     
  5821                           ;MCAL/EUSART/mcal_EUSART.c: 431: static Std_ReturnType async_Rx_config(const uart_rx_con
      +                          fig_st *_rx_obj );MCAL/EUSART/mcal_EUSART.c: 432: {;MCAL/EUSART/mcal_EUSART.c: 433:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5822  004158  0E01               	movlw	1
  5823  00415A  6E23               	movwf	async_Rx_config@ret_val^0,c
  5824  00415C                     
  5825                           ;MCAL/EUSART/mcal_EUSART.c: 435:     if(((void*)0) == _rx_obj)
  5826  00415C  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5827  00415E  1022               	iorwf	(async_Rx_config@_rx_obj+1)^0,w,c
  5828  004160  A4D8               	btfss	status,2,c
  5829  004162  EFB5  F020         	goto	u11561
  5830  004166  EFB7  F020         	goto	u11560
  5831  00416A                     u11561:
  5832  00416A  EFBB  F020         	goto	l10810
  5833  00416E                     u11560:
  5834  00416E                     
  5835                           ;MCAL/EUSART/mcal_EUSART.c: 436:     {;MCAL/EUSART/mcal_EUSART.c: 437:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5836  00416E  0E00               	movlw	0
  5837  004170  6E23               	movwf	async_Rx_config@ret_val^0,c
  5838                           
  5839                           ;MCAL/EUSART/mcal_EUSART.c: 438:     }
  5840  004172  EF01  F021         	goto	l10828
  5841  004176                     l10810:
  5842                           
  5843                           ;MCAL/EUSART/mcal_EUSART.c: 440:     {;MCAL/EUSART/mcal_EUSART.c: 441:         if(1 == _
      +                          rx_obj->rx_enable)
  5844  004176  EE20 F006          	lfsr	2,6
  5845  00417A  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5846  00417C  26D9               	addwf	fsr2l,f,c
  5847  00417E  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5848  004180  22DA               	addwfc	fsr2h,f,c
  5849  004182  A6DF               	btfss	indf2,3,c
  5850  004184  EFC6  F020         	goto	u11571
  5851  004188  EFC8  F020         	goto	u11570
  5852  00418C                     u11571:
  5853  00418C  EFF1  F020         	goto	l10824
  5854  004190                     u11570:
  5855  004190                     
  5856                           ;MCAL/EUSART/mcal_EUSART.c: 442:         {;MCAL/EUSART/mcal_EUSART.c: 444:             (
      +                          RCSTAbits.CREN = 0);
  5857  004190  98AB               	bcf	171,4,c	;volatile
  5858  004192                     
  5859                           ;MCAL/EUSART/mcal_EUSART.c: 447:             ret_val = Rx_config_interrupt(_rx_obj);
  5860  004192  C021  F01E         	movff	async_Rx_config@_rx_obj,Rx_config_interrupt@_rx_obj
  5861  004196  C022  F01F         	movff	async_Rx_config@_rx_obj+1,Rx_config_interrupt@_rx_obj+1
  5862  00419A  ECFE  F021         	call	_Rx_config_interrupt	;wreg free
  5863  00419E  6E23               	movwf	async_Rx_config@ret_val^0,c
  5864  0041A0                     
  5865                           ;MCAL/EUSART/mcal_EUSART.c: 450:             if(1 == _rx_obj->rx_9th_bit_en )
  5866  0041A0  EE20 F006          	lfsr	2,6
  5867  0041A4  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5868  0041A6  26D9               	addwf	fsr2l,f,c
  5869  0041A8  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5870  0041AA  22DA               	addwfc	fsr2h,f,c
  5871  0041AC  A8DF               	btfss	indf2,4,c
  5872  0041AE  EFDB  F020         	goto	u11581
  5873  0041B2  EFDD  F020         	goto	u11580
  5874  0041B6                     u11581:
  5875  0041B6  EFE0  F020         	goto	l10820
  5876  0041BA                     u11580:
  5877  0041BA                     
  5878                           ;MCAL/EUSART/mcal_EUSART.c: 451:             {;MCAL/EUSART/mcal_EUSART.c: 452:          
      +                                 RCSTAbits.RX9 = 1 ;
  5879  0041BA  8CAB               	bsf	171,6,c	;volatile
  5880                           
  5881                           ;MCAL/EUSART/mcal_EUSART.c: 453:             }
  5882  0041BC  EFEE  F020         	goto	l789
  5883  0041C0                     l10820:
  5884  0041C0  EE20 F006          	lfsr	2,6
  5885  0041C4  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5886  0041C6  26D9               	addwf	fsr2l,f,c
  5887  0041C8  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5888  0041CA  22DA               	addwfc	fsr2h,f,c
  5889  0041CC  B8DF               	btfsc	indf2,4,c
  5890  0041CE  EFEB  F020         	goto	u11591
  5891  0041D2  EFED  F020         	goto	u11590
  5892  0041D6                     u11591:
  5893  0041D6  EFEE  F020         	goto	l789
  5894  0041DA                     u11590:
  5895  0041DA                     
  5896                           ;MCAL/EUSART/mcal_EUSART.c: 455:             {;MCAL/EUSART/mcal_EUSART.c: 456:          
      +                                 RCSTAbits.RX9 = 0 ;
  5897  0041DA  9CAB               	bcf	171,6,c	;volatile
  5898  0041DC                     l789:
  5899                           
  5900                           ;MCAL/EUSART/mcal_EUSART.c: 461:             (RCSTAbits.CREN = 1);
  5901  0041DC  88AB               	bsf	171,4,c	;volatile
  5902                           
  5903                           ;MCAL/EUSART/mcal_EUSART.c: 462:         }
  5904  0041DE  EF01  F021         	goto	l10828
  5905  0041E2                     l10824:
  5906  0041E2  EE20 F006          	lfsr	2,6
  5907  0041E6  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5908  0041E8  26D9               	addwf	fsr2l,f,c
  5909  0041EA  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5910  0041EC  22DA               	addwfc	fsr2h,f,c
  5911  0041EE  B6DF               	btfsc	indf2,3,c
  5912  0041F0  EFFC  F020         	goto	u11601
  5913  0041F4  EFFE  F020         	goto	u11600
  5914  0041F8                     u11601:
  5915  0041F8  EF01  F021         	goto	l792
  5916  0041FC                     u11600:
  5917  0041FC                     
  5918                           ;MCAL/EUSART/mcal_EUSART.c: 464:         {;MCAL/EUSART/mcal_EUSART.c: 466:             (
      +                          RCSTAbits.CREN = 0);
  5919  0041FC  98AB               	bcf	171,4,c	;volatile
  5920                           
  5921                           ;MCAL/EUSART/mcal_EUSART.c: 467:         }
  5922  0041FE  EF01  F021         	goto	l10828
  5923  004202                     l792:
  5924  004202                     l10828:
  5925                           
  5926                           ;MCAL/EUSART/mcal_EUSART.c: 472:     return ret_val ;
  5927  004202  5023               	movf	async_Rx_config@ret_val^0,w,c
  5928  004204  0012               	return		;funcret
  5929  004206                     __end_of_async_Rx_config:
  5930                           	callstack 0
  5931                           
  5932 ;; *************** function _Rx_config_interrupt *****************
  5933 ;; Defined at:
  5934 ;;		line 518 in file "MCAL/EUSART/mcal_EUSART.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  _rx_obj         2   29[COMRAM] PTR const struct .
  5937 ;;		 -> _uart_obj(12), 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  ret_val         1   31[COMRAM] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      unsigned char 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;Total ram usage:        3 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 8
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_async_Rx_config
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text29
  5964  0043FC                     __ptext29:
  5965                           	callstack 0
  5966  0043FC                     _Rx_config_interrupt:
  5967                           	callstack 19
  5968  0043FC                     
  5969                           ;MCAL/EUSART/mcal_EUSART.c: 518: static __attribute__((inline)) Std_ReturnType Rx_config
      +                          _interrupt(const uart_rx_config_st *_rx_obj);MCAL/EUSART/mcal_EUSART.c: 519: {;MCAL/EUSA
      +                          RT/mcal_EUSART.c: 521:      Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5970  0043FC  0E01               	movlw	1
  5971  0043FE  6E20               	movwf	Rx_config_interrupt@ret_val^0,c
  5972  004400                     
  5973                           ;MCAL/EUSART/mcal_EUSART.c: 523:     if(((void*)0) == _rx_obj)
  5974  004400  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5975  004402  101F               	iorwf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5976  004404  A4D8               	btfss	status,2,c
  5977  004406  EF07  F022         	goto	u11001
  5978  00440A  EF09  F022         	goto	u11000
  5979  00440E                     u11001:
  5980  00440E  EF0D  F022         	goto	l803
  5981  004412                     u11000:
  5982  004412                     
  5983                           ;MCAL/EUSART/mcal_EUSART.c: 524:     {;MCAL/EUSART/mcal_EUSART.c: 525:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5984  004412  0E00               	movlw	0
  5985  004414  6E20               	movwf	Rx_config_interrupt@ret_val^0,c
  5986                           
  5987                           ;MCAL/EUSART/mcal_EUSART.c: 526:     }
  5988  004416  EF4D  F022         	goto	l10454
  5989  00441A                     l803:
  5990                           
  5991                           ;MCAL/EUSART/mcal_EUSART.c: 528:     {;MCAL/EUSART/mcal_EUSART.c: 530:         (PIE1bits
      +                          .RCIE = 0);
  5992  00441A  9A9D               	bcf	157,5,c	;volatile
  5993  00441C                     
  5994                           ;MCAL/EUSART/mcal_EUSART.c: 531:         eusart_Rx_InterruptHandler = _rx_obj->rx_Interr
      +                          uptHandler ;
  5995  00441C  C01E  FFD9         	movff	Rx_config_interrupt@_rx_obj,fsr2l
  5996  004420  C01F  FFDA         	movff	Rx_config_interrupt@_rx_obj+1,fsr2h
  5997  004424  CFDE F028          	movff	postinc2,_eusart_Rx_InterruptHandler
  5998  004428  CFDD F029          	movff	postdec2,_eusart_Rx_InterruptHandler+1
  5999  00442C                     
  6000                           ;MCAL/EUSART/mcal_EUSART.c: 532:         eusart_frameerr_CallBack = _rx_obj->ferr_Interr
      +                          uptHandler ;
  6001  00442C  EE20 F004          	lfsr	2,4
  6002  004430  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  6003  004432  26D9               	addwf	fsr2l,f,c
  6004  004434  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  6005  004436  22DA               	addwfc	fsr2h,f,c
  6006  004438  CFDE F0D0          	movff	postinc2,_eusart_frameerr_CallBack
  6007  00443C  CFDD F0D1          	movff	postdec2,_eusart_frameerr_CallBack+1
  6008  004440                     
  6009                           ;MCAL/EUSART/mcal_EUSART.c: 533:         eusart_overrunerr_CallBack = _rx_obj->oerr_Inte
      +                          rruptHandler ;
  6010  004440  EE20 F002          	lfsr	2,2
  6011  004444  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  6012  004446  26D9               	addwf	fsr2l,f,c
  6013  004448  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  6014  00444A  22DA               	addwfc	fsr2h,f,c
  6015  00444C  CFDE F0D2          	movff	postinc2,_eusart_overrunerr_CallBack
  6016  004450  CFDD F0D3          	movff	postdec2,_eusart_overrunerr_CallBack+1
  6017  004454                     
  6018                           ;MCAL/EUSART/mcal_EUSART.c: 536:                 (RCONbits.IPEN = 1 );
  6019  004454  8ED0               	bsf	208,7,c	;volatile
  6020  004456                     
  6021                           ;MCAL/EUSART/mcal_EUSART.c: 537:                 if(1 == _rx_obj->uart_rx_priority)
  6022  004456  EE20 F006          	lfsr	2,6
  6023  00445A  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  6024  00445C  26D9               	addwf	fsr2l,f,c
  6025  00445E  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  6026  004460  22DA               	addwfc	fsr2h,f,c
  6027  004462  A0DF               	btfss	indf2,0,c
  6028  004464  EF36  F022         	goto	u11011
  6029  004468  EF38  F022         	goto	u11010
  6030  00446C                     u11011:
  6031  00446C  EF3C  F022         	goto	l10450
  6032  004470                     u11010:
  6033  004470                     
  6034                           ;MCAL/EUSART/mcal_EUSART.c: 538:                 {;MCAL/EUSART/mcal_EUSART.c: 539:      
      +                                         (IPR1bits.RCIP = 1);
  6035  004470  8A9F               	bsf	159,5,c	;volatile
  6036                           
  6037                           ;MCAL/EUSART/mcal_EUSART.c: 540:                     (INTCONbits.GIEH = 1);
  6038  004472  8EF2               	bsf	242,7,c	;volatile
  6039                           
  6040                           ;MCAL/EUSART/mcal_EUSART.c: 542:                 }
  6041  004474  EF4C  F022         	goto	l806
  6042  004478                     l10450:
  6043  004478  EE20 F006          	lfsr	2,6
  6044  00447C  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  6045  00447E  26D9               	addwf	fsr2l,f,c
  6046  004480  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  6047  004482  22DA               	addwfc	fsr2h,f,c
  6048  004484  B0DF               	btfsc	indf2,0,c
  6049  004486  EF47  F022         	goto	u11021
  6050  00448A  EF49  F022         	goto	u11020
  6051  00448E                     u11021:
  6052  00448E  EF4C  F022         	goto	l806
  6053  004492                     u11020:
  6054  004492                     
  6055                           ;MCAL/EUSART/mcal_EUSART.c: 544:                 {;MCAL/EUSART/mcal_EUSART.c: 545:      
      +                                         (IPR1bits.RCIP = 0);
  6056  004492  9A9F               	bcf	159,5,c	;volatile
  6057                           
  6058                           ;MCAL/EUSART/mcal_EUSART.c: 546:                     (INTCONbits.GIEH = 1);
  6059  004494  8EF2               	bsf	242,7,c	;volatile
  6060                           
  6061                           ;MCAL/EUSART/mcal_EUSART.c: 547:                     (INTCONbits.GIEL = 1);
  6062  004496  8CF2               	bsf	242,6,c	;volatile
  6063  004498                     l806:
  6064                           
  6065                           ;MCAL/EUSART/mcal_EUSART.c: 555:         (PIE1bits.RCIE = 1);
  6066  004498  8A9D               	bsf	157,5,c	;volatile
  6067  00449A                     l10454:
  6068                           
  6069                           ;MCAL/EUSART/mcal_EUSART.c: 560:     return ret_val ;
  6070  00449A  5020               	movf	Rx_config_interrupt@ret_val^0,w,c
  6071  00449C  0012               	return		;funcret
  6072  00449E                     __end_of_Rx_config_interrupt:
  6073                           	callstack 0
  6074                           
  6075 ;; *************** function _Robot_Steer_Right_Forward *****************
  6076 ;; Defined at:
  6077 ;;		line 108 in file "Robot/Navigation/robot_navigation.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;		None
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  ret_val         1    0        unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      unsigned char 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;Total ram usage:        0 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 11
  6098 ;; This function calls:
  6099 ;;		_CCP_PWM_Set_Duty
  6100 ;;		_ECU_DC_Motor_Run_Right
  6101 ;;		_Robot_Steer_Stop
  6102 ;;		_Servo_SetAngle
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text30
  6109  003B7A                     __ptext30:
  6110                           	callstack 0
  6111  003B7A                     _Robot_Steer_Right_Forward:
  6112                           	callstack 19
  6113  003B7A                     
  6114                           ;Robot/Navigation/robot_navigation.c: 113:       Movement_State = NAV_MOV_FORW_STEER_RIG
      +                          HT ;
  6115  003B7A  0E02               	movlw	2
  6116  003B7C  0100               	movlb	0	; () banked
  6117  003B7E  6FD4               	movwf	_Movement_State& (0+255),b
  6118  003B80                     
  6119                           ; BSR set to: 0
  6120                           ;Robot/Navigation/robot_navigation.c: 115:       Robot_Steer_Stop();
  6121  003B80  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  6122  003B84                     
  6123                           ;Robot/Navigation/robot_navigation.c: 117:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 135 );
  6124  003B84  0EF1               	movlw	low _i2c_obj
  6125  003B86  0101               	movlb	1	; () banked
  6126  003B88  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6127  003B8A  0E00               	movlw	high _i2c_obj
  6128  003B8C  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6129  003B8E  0EF8               	movlw	low _servo_driver_obj
  6130  003B90  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6131  003B92  0E00               	movlw	high _servo_driver_obj
  6132  003B94  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6133  003B96  0E00               	movlw	0
  6134  003B98  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6135  003B9A  0E87               	movlw	135
  6136  003B9C  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6137  003B9E  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6138  003BA2                     
  6139                           ;Robot/Navigation/robot_navigation.c: 118:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 120 );
  6140  003BA2  0EF1               	movlw	low _i2c_obj
  6141  003BA4  0101               	movlb	1	; () banked
  6142  003BA6  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6143  003BA8  0E00               	movlw	high _i2c_obj
  6144  003BAA  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6145  003BAC  0EF8               	movlw	low _servo_driver_obj
  6146  003BAE  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6147  003BB0  0E00               	movlw	high _servo_driver_obj
  6148  003BB2  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6149  003BB4  0E01               	movlw	1
  6150  003BB6  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6151  003BB8  0E78               	movlw	120
  6152  003BBA  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6153  003BBC  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6154  003BC0                     
  6155                           ;Robot/Navigation/robot_navigation.c: 119:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 45 );
  6156  003BC0  0EF1               	movlw	low _i2c_obj
  6157  003BC2  0101               	movlb	1	; () banked
  6158  003BC4  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6159  003BC6  0E00               	movlw	high _i2c_obj
  6160  003BC8  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6161  003BCA  0EF8               	movlw	low _servo_driver_obj
  6162  003BCC  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6163  003BCE  0E00               	movlw	high _servo_driver_obj
  6164  003BD0  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6165  003BD2  0E02               	movlw	2
  6166  003BD4  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6167  003BD6  0E2D               	movlw	45
  6168  003BD8  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6169  003BDA  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6170  003BDE                     
  6171                           ;Robot/Navigation/robot_navigation.c: 120:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 30 );
  6172  003BDE  0EF1               	movlw	low _i2c_obj
  6173  003BE0  0101               	movlb	1	; () banked
  6174  003BE2  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6175  003BE4  0E00               	movlw	high _i2c_obj
  6176  003BE6  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6177  003BE8  0EF8               	movlw	low _servo_driver_obj
  6178  003BEA  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6179  003BEC  0E00               	movlw	high _servo_driver_obj
  6180  003BEE  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6181  003BF0  0E03               	movlw	3
  6182  003BF2  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6183  003BF4  0E1E               	movlw	30
  6184  003BF6  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6185  003BF8  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6186  003BFC                     
  6187                           ;Robot/Navigation/robot_navigation.c: 122:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  6188  003BFC  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  6189  003BFE  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6190  003C00  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6191  003C02  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6192  003C04  EC2B  F028         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6193  003C08                     
  6194                           ;Robot/Navigation/robot_navigation.c: 123:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  6195  003C08  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  6196  003C0A  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6197  003C0C  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6198  003C0E  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6199  003C10  EC2B  F028         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6200  003C14                     
  6201                           ;Robot/Navigation/robot_navigation.c: 125:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6202  003C14  0E22               	movlw	low _CCP1_Obj
  6203  003C16  0101               	movlb	1	; () banked
  6204  003C18  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6205  003C1A  0E01               	movlw	high _CCP1_Obj
  6206  003C1C  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6207  003C1E  0E5F               	movlw	95
  6208  003C20  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6209  003C22  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6210  003C26                     
  6211                           ;Robot/Navigation/robot_navigation.c: 126:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6212  003C26  0E16               	movlw	low _CCP2_Obj
  6213  003C28  0101               	movlb	1	; () banked
  6214  003C2A  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6215  003C2C  0E01               	movlw	high _CCP2_Obj
  6216  003C2E  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6217  003C30  0E5F               	movlw	95
  6218  003C32  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6219  003C34  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6220  003C38  0012               	return		;funcret
  6221  003C3A                     __end_of_Robot_Steer_Right_Forward:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _Robot_Steer_Right_Backward *****************
  6225 ;; Defined at:
  6226 ;;		line 151 in file "Robot/Navigation/robot_navigation.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  ret_val         1    0        unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      unsigned char 
  6233 ;; Registers used:
  6234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used: 1
  6246 ;; Hardware stack levels required when called: 11
  6247 ;; This function calls:
  6248 ;;		_CCP_PWM_Set_Duty
  6249 ;;		_ECU_DC_Motor_Run_Left
  6250 ;;		_Robot_Steer_Stop
  6251 ;;		_Servo_SetAngle
  6252 ;; This function is called by:
  6253 ;;		_main
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text31
  6258  003E7A                     __ptext31:
  6259                           	callstack 0
  6260  003E7A                     _Robot_Steer_Right_Backward:
  6261                           	callstack 19
  6262  003E7A                     
  6263                           ;Robot/Navigation/robot_navigation.c: 156:       Robot_Steer_Stop();
  6264  003E7A  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  6265  003E7E                     
  6266                           ;Robot/Navigation/robot_navigation.c: 158:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 135 );
  6267  003E7E  0EF1               	movlw	low _i2c_obj
  6268  003E80  0101               	movlb	1	; () banked
  6269  003E82  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6270  003E84  0E00               	movlw	high _i2c_obj
  6271  003E86  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6272  003E88  0EF8               	movlw	low _servo_driver_obj
  6273  003E8A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6274  003E8C  0E00               	movlw	high _servo_driver_obj
  6275  003E8E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6276  003E90  0E00               	movlw	0
  6277  003E92  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6278  003E94  0E87               	movlw	135
  6279  003E96  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6280  003E98  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6281  003E9C                     
  6282                           ;Robot/Navigation/robot_navigation.c: 159:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 120 );
  6283  003E9C  0EF1               	movlw	low _i2c_obj
  6284  003E9E  0101               	movlb	1	; () banked
  6285  003EA0  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6286  003EA2  0E00               	movlw	high _i2c_obj
  6287  003EA4  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6288  003EA6  0EF8               	movlw	low _servo_driver_obj
  6289  003EA8  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6290  003EAA  0E00               	movlw	high _servo_driver_obj
  6291  003EAC  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6292  003EAE  0E01               	movlw	1
  6293  003EB0  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6294  003EB2  0E78               	movlw	120
  6295  003EB4  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6296  003EB6  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6297  003EBA                     
  6298                           ;Robot/Navigation/robot_navigation.c: 160:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 45 );
  6299  003EBA  0EF1               	movlw	low _i2c_obj
  6300  003EBC  0101               	movlb	1	; () banked
  6301  003EBE  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6302  003EC0  0E00               	movlw	high _i2c_obj
  6303  003EC2  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6304  003EC4  0EF8               	movlw	low _servo_driver_obj
  6305  003EC6  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6306  003EC8  0E00               	movlw	high _servo_driver_obj
  6307  003ECA  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6308  003ECC  0E02               	movlw	2
  6309  003ECE  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6310  003ED0  0E2D               	movlw	45
  6311  003ED2  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6312  003ED4  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6313  003ED8                     
  6314                           ;Robot/Navigation/robot_navigation.c: 161:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 30 );
  6315  003ED8  0EF1               	movlw	low _i2c_obj
  6316  003EDA  0101               	movlb	1	; () banked
  6317  003EDC  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6318  003EDE  0E00               	movlw	high _i2c_obj
  6319  003EE0  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6320  003EE2  0EF8               	movlw	low _servo_driver_obj
  6321  003EE4  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6322  003EE6  0E00               	movlw	high _servo_driver_obj
  6323  003EE8  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6324  003EEA  0E03               	movlw	3
  6325  003EEC  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6326  003EEE  0E1E               	movlw	30
  6327  003EF0  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6328  003EF2  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6329  003EF6                     
  6330                           ;Robot/Navigation/robot_navigation.c: 163:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_C
      +                          ontrol);
  6331  003EF6  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  6332  003EF8  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6333  003EFA  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6334  003EFC  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6335  003EFE  EC3F  F028         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6336  003F02                     
  6337                           ;Robot/Navigation/robot_navigation.c: 164:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_C
      +                          ontrol);
  6338  003F02  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  6339  003F04  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6340  003F06  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6341  003F08  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6342  003F0A  EC3F  F028         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6343  003F0E                     
  6344                           ;Robot/Navigation/robot_navigation.c: 166:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6345  003F0E  0E22               	movlw	low _CCP1_Obj
  6346  003F10  0101               	movlb	1	; () banked
  6347  003F12  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6348  003F14  0E01               	movlw	high _CCP1_Obj
  6349  003F16  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6350  003F18  0E5F               	movlw	95
  6351  003F1A  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6352  003F1C  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6353  003F20                     
  6354                           ;Robot/Navigation/robot_navigation.c: 167:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6355  003F20  0E16               	movlw	low _CCP2_Obj
  6356  003F22  0101               	movlb	1	; () banked
  6357  003F24  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6358  003F26  0E01               	movlw	high _CCP2_Obj
  6359  003F28  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6360  003F2A  0E5F               	movlw	95
  6361  003F2C  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6362  003F2E  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6363  003F32  0012               	return		;funcret
  6364  003F34                     __end_of_Robot_Steer_Right_Backward:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _Robot_Steer_Left_Forward *****************
  6368 ;; Defined at:
  6369 ;;		line 130 in file "Robot/Navigation/robot_navigation.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  ret_val         1    0        unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      unsigned char 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;Total ram usage:        0 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 11
  6390 ;; This function calls:
  6391 ;;		_CCP_PWM_Set_Duty
  6392 ;;		_ECU_DC_Motor_Run_Right
  6393 ;;		_Robot_Steer_Stop
  6394 ;;		_Servo_SetAngle
  6395 ;; This function is called by:
  6396 ;;		_main
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text32
  6401  003C3A                     __ptext32:
  6402                           	callstack 0
  6403  003C3A                     _Robot_Steer_Left_Forward:
  6404                           	callstack 19
  6405  003C3A                     
  6406                           ;Robot/Navigation/robot_navigation.c: 133:             Movement_State = NAV_MOV_FORW_STE
      +                          ER_LEFT ;
  6407  003C3A  0E03               	movlw	3
  6408  003C3C  0100               	movlb	0	; () banked
  6409  003C3E  6FD4               	movwf	_Movement_State& (0+255),b
  6410  003C40                     
  6411                           ; BSR set to: 0
  6412                           ;Robot/Navigation/robot_navigation.c: 135:       Robot_Steer_Stop();
  6413  003C40  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  6414  003C44                     
  6415                           ;Robot/Navigation/robot_navigation.c: 137:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 45 );
  6416  003C44  0EF1               	movlw	low _i2c_obj
  6417  003C46  0101               	movlb	1	; () banked
  6418  003C48  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6419  003C4A  0E00               	movlw	high _i2c_obj
  6420  003C4C  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6421  003C4E  0EF8               	movlw	low _servo_driver_obj
  6422  003C50  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6423  003C52  0E00               	movlw	high _servo_driver_obj
  6424  003C54  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6425  003C56  0E00               	movlw	0
  6426  003C58  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6427  003C5A  0E2D               	movlw	45
  6428  003C5C  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6429  003C5E  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6430  003C62                     
  6431                           ;Robot/Navigation/robot_navigation.c: 138:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 30 );
  6432  003C62  0EF1               	movlw	low _i2c_obj
  6433  003C64  0101               	movlb	1	; () banked
  6434  003C66  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6435  003C68  0E00               	movlw	high _i2c_obj
  6436  003C6A  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6437  003C6C  0EF8               	movlw	low _servo_driver_obj
  6438  003C6E  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6439  003C70  0E00               	movlw	high _servo_driver_obj
  6440  003C72  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6441  003C74  0E01               	movlw	1
  6442  003C76  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6443  003C78  0E1E               	movlw	30
  6444  003C7A  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6445  003C7C  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6446  003C80                     
  6447                           ;Robot/Navigation/robot_navigation.c: 139:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 135 );
  6448  003C80  0EF1               	movlw	low _i2c_obj
  6449  003C82  0101               	movlb	1	; () banked
  6450  003C84  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6451  003C86  0E00               	movlw	high _i2c_obj
  6452  003C88  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6453  003C8A  0EF8               	movlw	low _servo_driver_obj
  6454  003C8C  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6455  003C8E  0E00               	movlw	high _servo_driver_obj
  6456  003C90  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6457  003C92  0E02               	movlw	2
  6458  003C94  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6459  003C96  0E87               	movlw	135
  6460  003C98  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6461  003C9A  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6462  003C9E                     
  6463                           ;Robot/Navigation/robot_navigation.c: 140:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 120 );
  6464  003C9E  0EF1               	movlw	low _i2c_obj
  6465  003CA0  0101               	movlb	1	; () banked
  6466  003CA2  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6467  003CA4  0E00               	movlw	high _i2c_obj
  6468  003CA6  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6469  003CA8  0EF8               	movlw	low _servo_driver_obj
  6470  003CAA  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6471  003CAC  0E00               	movlw	high _servo_driver_obj
  6472  003CAE  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6473  003CB0  0E03               	movlw	3
  6474  003CB2  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6475  003CB4  0E78               	movlw	120
  6476  003CB6  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6477  003CB8  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6478  003CBC                     
  6479                           ;Robot/Navigation/robot_navigation.c: 142:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  6480  003CBC  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  6481  003CBE  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6482  003CC0  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6483  003CC2  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6484  003CC4  EC2B  F028         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6485  003CC8                     
  6486                           ;Robot/Navigation/robot_navigation.c: 143:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  6487  003CC8  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  6488  003CCA  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6489  003CCC  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6490  003CCE  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6491  003CD0  EC2B  F028         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6492  003CD4                     
  6493                           ;Robot/Navigation/robot_navigation.c: 145:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6494  003CD4  0E22               	movlw	low _CCP1_Obj
  6495  003CD6  0101               	movlb	1	; () banked
  6496  003CD8  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6497  003CDA  0E01               	movlw	high _CCP1_Obj
  6498  003CDC  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6499  003CDE  0E5F               	movlw	95
  6500  003CE0  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6501  003CE2  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6502  003CE6                     
  6503                           ;Robot/Navigation/robot_navigation.c: 146:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6504  003CE6  0E16               	movlw	low _CCP2_Obj
  6505  003CE8  0101               	movlb	1	; () banked
  6506  003CEA  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6507  003CEC  0E01               	movlw	high _CCP2_Obj
  6508  003CEE  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6509  003CF0  0E5F               	movlw	95
  6510  003CF2  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6511  003CF4  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6512  003CF8  0012               	return		;funcret
  6513  003CFA                     __end_of_Robot_Steer_Left_Forward:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function _Robot_Steer_Left_Backward *****************
  6517 ;; Defined at:
  6518 ;;		line 172 in file "Robot/Navigation/robot_navigation.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  ret_val         1    0        unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      unsigned char 
  6525 ;; Registers used:
  6526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 11
  6539 ;; This function calls:
  6540 ;;		_CCP_PWM_Set_Duty
  6541 ;;		_ECU_DC_Motor_Run_Left
  6542 ;;		_Robot_Steer_Stop
  6543 ;;		_Servo_SetAngle
  6544 ;; This function is called by:
  6545 ;;		_main
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text33
  6550  003F34                     __ptext33:
  6551                           	callstack 0
  6552  003F34                     _Robot_Steer_Left_Backward:
  6553                           	callstack 19
  6554  003F34                     
  6555                           ;Robot/Navigation/robot_navigation.c: 176:       Robot_Steer_Stop();
  6556  003F34  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  6557  003F38                     
  6558                           ;Robot/Navigation/robot_navigation.c: 178:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 45 );
  6559  003F38  0EF1               	movlw	low _i2c_obj
  6560  003F3A  0101               	movlb	1	; () banked
  6561  003F3C  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6562  003F3E  0E00               	movlw	high _i2c_obj
  6563  003F40  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6564  003F42  0EF8               	movlw	low _servo_driver_obj
  6565  003F44  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6566  003F46  0E00               	movlw	high _servo_driver_obj
  6567  003F48  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6568  003F4A  0E00               	movlw	0
  6569  003F4C  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6570  003F4E  0E2D               	movlw	45
  6571  003F50  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6572  003F52  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6573  003F56                     
  6574                           ;Robot/Navigation/robot_navigation.c: 179:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 30 );
  6575  003F56  0EF1               	movlw	low _i2c_obj
  6576  003F58  0101               	movlb	1	; () banked
  6577  003F5A  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6578  003F5C  0E00               	movlw	high _i2c_obj
  6579  003F5E  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6580  003F60  0EF8               	movlw	low _servo_driver_obj
  6581  003F62  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6582  003F64  0E00               	movlw	high _servo_driver_obj
  6583  003F66  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6584  003F68  0E01               	movlw	1
  6585  003F6A  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6586  003F6C  0E1E               	movlw	30
  6587  003F6E  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6588  003F70  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6589  003F74                     
  6590                           ;Robot/Navigation/robot_navigation.c: 180:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 135 );
  6591  003F74  0EF1               	movlw	low _i2c_obj
  6592  003F76  0101               	movlb	1	; () banked
  6593  003F78  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6594  003F7A  0E00               	movlw	high _i2c_obj
  6595  003F7C  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6596  003F7E  0EF8               	movlw	low _servo_driver_obj
  6597  003F80  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6598  003F82  0E00               	movlw	high _servo_driver_obj
  6599  003F84  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6600  003F86  0E02               	movlw	2
  6601  003F88  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6602  003F8A  0E87               	movlw	135
  6603  003F8C  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6604  003F8E  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6605  003F92                     
  6606                           ;Robot/Navigation/robot_navigation.c: 181:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 120 );
  6607  003F92  0EF1               	movlw	low _i2c_obj
  6608  003F94  0101               	movlb	1	; () banked
  6609  003F96  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6610  003F98  0E00               	movlw	high _i2c_obj
  6611  003F9A  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6612  003F9C  0EF8               	movlw	low _servo_driver_obj
  6613  003F9E  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6614  003FA0  0E00               	movlw	high _servo_driver_obj
  6615  003FA2  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6616  003FA4  0E03               	movlw	3
  6617  003FA6  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6618  003FA8  0E78               	movlw	120
  6619  003FAA  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6620  003FAC  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6621  003FB0                     
  6622                           ;Robot/Navigation/robot_navigation.c: 183:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_C
      +                          ontrol);
  6623  003FB0  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  6624  003FB2  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6625  003FB4  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6626  003FB6  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6627  003FB8  EC3F  F028         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6628  003FBC                     
  6629                           ;Robot/Navigation/robot_navigation.c: 184:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_C
      +                          ontrol);
  6630  003FBC  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  6631  003FBE  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6632  003FC0  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6633  003FC2  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6634  003FC4  EC3F  F028         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6635  003FC8                     
  6636                           ;Robot/Navigation/robot_navigation.c: 186:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6637  003FC8  0E22               	movlw	low _CCP1_Obj
  6638  003FCA  0101               	movlb	1	; () banked
  6639  003FCC  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6640  003FCE  0E01               	movlw	high _CCP1_Obj
  6641  003FD0  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6642  003FD2  0E5F               	movlw	95
  6643  003FD4  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6644  003FD6  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6645  003FDA                     
  6646                           ;Robot/Navigation/robot_navigation.c: 187:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6647  003FDA  0E16               	movlw	low _CCP2_Obj
  6648  003FDC  0101               	movlb	1	; () banked
  6649  003FDE  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6650  003FE0  0E01               	movlw	high _CCP2_Obj
  6651  003FE2  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6652  003FE4  0E5F               	movlw	95
  6653  003FE6  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6654  003FE8  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6655  003FEC  0012               	return		;funcret
  6656  003FEE                     __end_of_Robot_Steer_Left_Backward:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _Robot_Move_Forward *****************
  6660 ;; Defined at:
  6661 ;;		line 62 in file "Robot/Navigation/robot_navigation.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  ret_val         1    0        unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      unsigned char 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; Hardware stack levels required when called: 11
  6682 ;; This function calls:
  6683 ;;		_CCP_PWM_Set_Duty
  6684 ;;		_ECU_DC_Motor_Run_Right
  6685 ;;		_Robot_Steer_Stop
  6686 ;;		_Servo_SetAngle
  6687 ;; This function is called by:
  6688 ;;		_main
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text34
  6693  003CFA                     __ptext34:
  6694                           	callstack 0
  6695  003CFA                     _Robot_Move_Forward:
  6696                           	callstack 19
  6697  003CFA                     
  6698                           ;Robot/Navigation/robot_navigation.c: 67:             Movement_State = NAV_MOV_FORW ;
  6699  003CFA  0E01               	movlw	1
  6700  003CFC  0100               	movlb	0	; () banked
  6701  003CFE  6FD4               	movwf	_Movement_State& (0+255),b
  6702  003D00                     
  6703                           ; BSR set to: 0
  6704                           ;Robot/Navigation/robot_navigation.c: 69:             Robot_Steer_Stop();
  6705  003D00  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  6706  003D04                     
  6707                           ;Robot/Navigation/robot_navigation.c: 71:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_1 , 90 );
  6708  003D04  0EF1               	movlw	low _i2c_obj
  6709  003D06  0101               	movlb	1	; () banked
  6710  003D08  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6711  003D0A  0E00               	movlw	high _i2c_obj
  6712  003D0C  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6713  003D0E  0EF8               	movlw	low _servo_driver_obj
  6714  003D10  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6715  003D12  0E00               	movlw	high _servo_driver_obj
  6716  003D14  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6717  003D16  0E00               	movlw	0
  6718  003D18  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6719  003D1A  0E5A               	movlw	90
  6720  003D1C  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6721  003D1E  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6722  003D22                     
  6723                           ;Robot/Navigation/robot_navigation.c: 72:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_2 , 90 );
  6724  003D22  0EF1               	movlw	low _i2c_obj
  6725  003D24  0101               	movlb	1	; () banked
  6726  003D26  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6727  003D28  0E00               	movlw	high _i2c_obj
  6728  003D2A  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6729  003D2C  0EF8               	movlw	low _servo_driver_obj
  6730  003D2E  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6731  003D30  0E00               	movlw	high _servo_driver_obj
  6732  003D32  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6733  003D34  0E01               	movlw	1
  6734  003D36  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6735  003D38  0E5A               	movlw	90
  6736  003D3A  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6737  003D3C  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6738  003D40                     
  6739                           ;Robot/Navigation/robot_navigation.c: 73:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_3 , 90 );
  6740  003D40  0EF1               	movlw	low _i2c_obj
  6741  003D42  0101               	movlb	1	; () banked
  6742  003D44  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6743  003D46  0E00               	movlw	high _i2c_obj
  6744  003D48  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6745  003D4A  0EF8               	movlw	low _servo_driver_obj
  6746  003D4C  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6747  003D4E  0E00               	movlw	high _servo_driver_obj
  6748  003D50  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6749  003D52  0E02               	movlw	2
  6750  003D54  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6751  003D56  0E5A               	movlw	90
  6752  003D58  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6753  003D5A  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6754  003D5E                     
  6755                           ;Robot/Navigation/robot_navigation.c: 74:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_4 , 90 );
  6756  003D5E  0EF1               	movlw	low _i2c_obj
  6757  003D60  0101               	movlb	1	; () banked
  6758  003D62  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6759  003D64  0E00               	movlw	high _i2c_obj
  6760  003D66  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6761  003D68  0EF8               	movlw	low _servo_driver_obj
  6762  003D6A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6763  003D6C  0E00               	movlw	high _servo_driver_obj
  6764  003D6E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6765  003D70  0E03               	movlw	3
  6766  003D72  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6767  003D74  0E5A               	movlw	90
  6768  003D76  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6769  003D78  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6770  003D7C                     
  6771                           ;Robot/Navigation/robot_navigation.c: 76:             ECU_DC_Motor_Run_Right(&W1_W3_W5_M
      +                          otor_Control);
  6772  003D7C  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  6773  003D7E  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6774  003D80  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6775  003D82  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6776  003D84  EC2B  F028         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6777  003D88                     
  6778                           ;Robot/Navigation/robot_navigation.c: 77:             ECU_DC_Motor_Run_Right(&W2_W4_W6_M
      +                          otor_Control);
  6779  003D88  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  6780  003D8A  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6781  003D8C  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6782  003D8E  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6783  003D90  EC2B  F028         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6784  003D94                     
  6785                           ;Robot/Navigation/robot_navigation.c: 79:             CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6786  003D94  0E22               	movlw	low _CCP1_Obj
  6787  003D96  0101               	movlb	1	; () banked
  6788  003D98  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6789  003D9A  0E01               	movlw	high _CCP1_Obj
  6790  003D9C  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6791  003D9E  0E5F               	movlw	95
  6792  003DA0  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6793  003DA2  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6794  003DA6                     
  6795                           ;Robot/Navigation/robot_navigation.c: 80:             CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6796  003DA6  0E16               	movlw	low _CCP2_Obj
  6797  003DA8  0101               	movlb	1	; () banked
  6798  003DAA  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6799  003DAC  0E01               	movlw	high _CCP2_Obj
  6800  003DAE  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6801  003DB0  0E5F               	movlw	95
  6802  003DB2  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6803  003DB4  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6804  003DB8  0012               	return		;funcret
  6805  003DBA                     __end_of_Robot_Move_Forward:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function _ECU_DC_Motor_Run_Right *****************
  6809 ;; Defined at:
  6810 ;;		line 59 in file "ECU/DC_Motor/ecu_dc_motor.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  6813 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  ret_value       1    0        unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      unsigned char 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;Total ram usage:        2 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 9
  6832 ;; This function calls:
  6833 ;;		_GPIO_Pin_Write_Logic
  6834 ;; This function is called by:
  6835 ;;		_Robot_Move_Forward
  6836 ;;		_Robot_Steer_Right_Forward
  6837 ;;		_Robot_Steer_Left_Forward
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text35
  6842  005056                     __ptext35:
  6843                           	callstack 0
  6844  005056                     _ECU_DC_Motor_Run_Right:
  6845                           	callstack 20
  6846  005056                     
  6847                           ;ECU/DC_Motor/ecu_dc_motor.c: 62:     if(((void*)0) == dc_motor)
  6848  005056  5022               	movf	ECU_DC_Motor_Run_Right@dc_motor^0,w,c
  6849  005058  1023               	iorwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,w,c
  6850  00505A  A4D8               	btfss	status,2,c
  6851  00505C  EF32  F028         	goto	u11751
  6852  005060  EF34  F028         	goto	u11750
  6853  005064                     u11751:
  6854  005064  EF36  F028         	goto	l10912
  6855  005068                     u11750:
  6856  005068                     
  6857                           ;ECU/DC_Motor/ecu_dc_motor.c: 65:     }
  6858  005068  EF3E  F028         	goto	l65
  6859  00506C                     l10912:
  6860                           
  6861                           ;ECU/DC_Motor/ecu_dc_motor.c: 67:     {;ECU/DC_Motor/ecu_dc_motor.c: 68:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_LOW );
  6862  00506C  C022  F01E         	movff	ECU_DC_Motor_Run_Right@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  6863  005070  C023  F01F         	movff	ECU_DC_Motor_Run_Right@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  6864  005074  0E00               	movlw	0
  6865  005076  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6866  005078  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  6867  00507C                     l65:
  6868  00507C  0012               	return		;funcret
  6869  00507E                     __end_of_ECU_DC_Motor_Run_Right:
  6870                           	callstack 0
  6871                           
  6872 ;; *************** function _Robot_Move_Backward *****************
  6873 ;; Defined at:
  6874 ;;		line 86 in file "Robot/Navigation/robot_navigation.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;		None
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  ret_val         1    0        unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      unsigned char 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used: 1
  6894 ;; Hardware stack levels required when called: 11
  6895 ;; This function calls:
  6896 ;;		_CCP_PWM_Set_Duty
  6897 ;;		_ECU_DC_Motor_Run_Left
  6898 ;;		_Robot_Steer_Stop
  6899 ;;		_Servo_SetAngle
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text36
  6906  003DBA                     __ptext36:
  6907                           	callstack 0
  6908  003DBA                     _Robot_Move_Backward:
  6909                           	callstack 19
  6910  003DBA                     
  6911                           ;Robot/Navigation/robot_navigation.c: 89:       Movement_State = NAV_MOV_BACKW ;
  6912  003DBA  0E04               	movlw	4
  6913  003DBC  0100               	movlb	0	; () banked
  6914  003DBE  6FD4               	movwf	_Movement_State& (0+255),b
  6915  003DC0                     
  6916                           ; BSR set to: 0
  6917                           ;Robot/Navigation/robot_navigation.c: 91:       Robot_Steer_Stop();
  6918  003DC0  EC66  F028         	call	_Robot_Steer_Stop	;wreg free
  6919  003DC4                     
  6920                           ;Robot/Navigation/robot_navigation.c: 93:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_1 , 90 );
  6921  003DC4  0EF1               	movlw	low _i2c_obj
  6922  003DC6  0101               	movlb	1	; () banked
  6923  003DC8  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6924  003DCA  0E00               	movlw	high _i2c_obj
  6925  003DCC  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6926  003DCE  0EF8               	movlw	low _servo_driver_obj
  6927  003DD0  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6928  003DD2  0E00               	movlw	high _servo_driver_obj
  6929  003DD4  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6930  003DD6  0E00               	movlw	0
  6931  003DD8  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6932  003DDA  0E5A               	movlw	90
  6933  003DDC  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6934  003DDE  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6935  003DE2                     
  6936                           ;Robot/Navigation/robot_navigation.c: 94:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_2 , 90 );
  6937  003DE2  0EF1               	movlw	low _i2c_obj
  6938  003DE4  0101               	movlb	1	; () banked
  6939  003DE6  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6940  003DE8  0E00               	movlw	high _i2c_obj
  6941  003DEA  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6942  003DEC  0EF8               	movlw	low _servo_driver_obj
  6943  003DEE  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6944  003DF0  0E00               	movlw	high _servo_driver_obj
  6945  003DF2  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6946  003DF4  0E01               	movlw	1
  6947  003DF6  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6948  003DF8  0E5A               	movlw	90
  6949  003DFA  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6950  003DFC  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6951  003E00                     
  6952                           ;Robot/Navigation/robot_navigation.c: 95:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_3 , 90 );
  6953  003E00  0EF1               	movlw	low _i2c_obj
  6954  003E02  0101               	movlb	1	; () banked
  6955  003E04  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6956  003E06  0E00               	movlw	high _i2c_obj
  6957  003E08  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6958  003E0A  0EF8               	movlw	low _servo_driver_obj
  6959  003E0C  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6960  003E0E  0E00               	movlw	high _servo_driver_obj
  6961  003E10  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6962  003E12  0E02               	movlw	2
  6963  003E14  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6964  003E16  0E5A               	movlw	90
  6965  003E18  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6966  003E1A  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6967  003E1E                     
  6968                           ;Robot/Navigation/robot_navigation.c: 96:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_4 , 90 );
  6969  003E1E  0EF1               	movlw	low _i2c_obj
  6970  003E20  0101               	movlb	1	; () banked
  6971  003E22  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6972  003E24  0E00               	movlw	high _i2c_obj
  6973  003E26  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6974  003E28  0EF8               	movlw	low _servo_driver_obj
  6975  003E2A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6976  003E2C  0E00               	movlw	high _servo_driver_obj
  6977  003E2E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6978  003E30  0E03               	movlw	3
  6979  003E32  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6980  003E34  0E5A               	movlw	90
  6981  003E36  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6982  003E38  ECFE  F01B         	call	_Servo_SetAngle	;wreg free
  6983  003E3C                     
  6984                           ;Robot/Navigation/robot_navigation.c: 98:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_Co
      +                          ntrol);
  6985  003E3C  0EFF               	movlw	low _W1_W3_W5_Motor_Control
  6986  003E3E  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6987  003E40  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6988  003E42  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6989  003E44  EC3F  F028         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6990  003E48                     
  6991                           ;Robot/Navigation/robot_navigation.c: 99:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_Co
      +                          ntrol);
  6992  003E48  0EFE               	movlw	low _W2_W4_W6_Motor_Control
  6993  003E4A  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6994  003E4C  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6995  003E4E  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6996  003E50  EC3F  F028         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6997  003E54                     
  6998                           ;Robot/Navigation/robot_navigation.c: 101:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6999  003E54  0E22               	movlw	low _CCP1_Obj
  7000  003E56  0101               	movlb	1	; () banked
  7001  003E58  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  7002  003E5A  0E01               	movlw	high _CCP1_Obj
  7003  003E5C  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  7004  003E5E  0E5F               	movlw	95
  7005  003E60  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  7006  003E62  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  7007  003E66                     
  7008                           ;Robot/Navigation/robot_navigation.c: 102:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  7009  003E66  0E16               	movlw	low _CCP2_Obj
  7010  003E68  0101               	movlb	1	; () banked
  7011  003E6A  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  7012  003E6C  0E01               	movlw	high _CCP2_Obj
  7013  003E6E  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  7014  003E70  0E5F               	movlw	95
  7015  003E72  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  7016  003E74  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  7017  003E78  0012               	return		;funcret
  7018  003E7A                     __end_of_Robot_Move_Backward:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _Servo_SetAngle *****************
  7022 ;; Defined at:
  7023 ;;		line 43 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  i2c_obj         2    8[BANK1 ] PTR const struct .
  7026 ;;		 -> i2c_obj(7), 
  7027 ;;  servo_driver    2   10[BANK1 ] PTR const struct .
  7028 ;;		 -> servo_driver_obj(4), 
  7029 ;;  servo_no        1   12[BANK1 ] const enum E3294
  7030 ;;  angle           1   13[BANK1 ] const unsigned char 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  angle_in_reg    2   14[BANK1 ] unsigned short 
  7033 ;;  reg_addrees     1   16[BANK1 ] unsigned char 
  7034 ;;  ERRORSTATUS     1    0        unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      unsigned char 
  7037 ;; Registers used:
  7038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7044 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;Total ram usage:        9 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 10
  7051 ;; This function calls:
  7052 ;;		_PCA_Write_Reg
  7053 ;;		___fladd
  7054 ;;		___flmul
  7055 ;;		___fltol
  7056 ;;		___xxtofl
  7057 ;; This function is called by:
  7058 ;;		_Robot_Move_Forward
  7059 ;;		_Robot_Move_Backward
  7060 ;;		_Robot_Steer_Right_Forward
  7061 ;;		_Robot_Steer_Left_Forward
  7062 ;;		_Robot_Steer_Right_Backward
  7063 ;;		_Robot_Steer_Left_Backward
  7064 ;;		_main
  7065 ;;		_application_intialize
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text37
  7070  0037FC                     __ptext37:
  7071                           	callstack 0
  7072  0037FC                     _Servo_SetAngle:
  7073                           	callstack 19
  7074  0037FC                     
  7075                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 46:     if (((void*)0)==i2c_obj)
  7076  0037FC  0101               	movlb	1	; () banked
  7077  0037FE  5159               	movf	Servo_SetAngle@i2c_obj& (0+255),w,b
  7078  003800  115A               	iorwf	(Servo_SetAngle@i2c_obj+1)& (0+255),w,b
  7079  003802  A4D8               	btfss	status,2,c
  7080  003804  EF06  F01C         	goto	u11871
  7081  003808  EF08  F01C         	goto	u11870
  7082  00380C                     u11871:
  7083  00380C  EF0A  F01C         	goto	l11010
  7084  003810                     u11870:
  7085  003810                     
  7086                           ; BSR set to: 1
  7087                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 49:     }
  7088  003810  EF71  F01C         	goto	l310
  7089  003814                     l11010:
  7090                           
  7091                           ; BSR set to: 1
  7092                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 51:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 52:         uint8 reg_addrees=6+(servo_no*4)+2;
  7093  003814  515D               	movf	Servo_SetAngle@servo_no& (0+255),w,b
  7094  003816  0D04               	mullw	4
  7095  003818  50F3               	movf	243,w,c
  7096  00381A  0F08               	addlw	8
  7097  00381C  6F61               	movwf	Servo_SetAngle@reg_addrees& (0+255),b
  7098  00381E                     
  7099                           ; BSR set to: 1
  7100                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 54:          uint16 angle_in_reg=
      +                          (uint16)(angle*1.138+204);
  7101  00381E  0E00               	movlw	0
  7102  003820  0100               	movlb	0	; () banked
  7103  003822  6F9C               	movwf	___fladd@a& (0+255),b
  7104  003824  0E00               	movlw	0
  7105  003826  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  7106  003828  0E4C               	movlw	76
  7107  00382A  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  7108  00382C  0E43               	movlw	67
  7109  00382E  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  7110  003830  0EFC               	movlw	252
  7111  003832  6F83               	movwf	___flmul@a& (0+255),b
  7112  003834  0EA9               	movlw	169
  7113  003836  6F84               	movwf	(___flmul@a+1)& (0+255),b
  7114  003838  0E91               	movlw	145
  7115  00383A  6F85               	movwf	(___flmul@a+2)& (0+255),b
  7116  00383C  0E3F               	movlw	63
  7117  00383E  6F86               	movwf	(___flmul@a+3)& (0+255),b
  7118  003840  0101               	movlb	1	; () banked
  7119  003842  515E               	movf	Servo_SetAngle@angle& (0+255),w,b
  7120  003844  6E1E               	movwf	___xxtofl@val^0,c
  7121  003846  6A1F               	clrf	(___xxtofl@val+1)^0,c
  7122  003848  6A20               	clrf	(___xxtofl@val+2)^0,c
  7123  00384A  6A21               	clrf	(___xxtofl@val+3)^0,c
  7124  00384C  0E01               	movlw	1
  7125  00384E  ECC9  F013         	call	___xxtofl
  7126  003852  C01E  F07F         	movff	?___xxtofl,___flmul@b
  7127  003856  C01F  F080         	movff	?___xxtofl+1,___flmul@b+1
  7128  00385A  C020  F081         	movff	?___xxtofl+2,___flmul@b+2
  7129  00385E  C021  F082         	movff	?___xxtofl+3,___flmul@b+3
  7130  003862  EC85  F00A         	call	___flmul	;wreg free
  7131  003866  C07F  F098         	movff	?___flmul,___fladd@b
  7132  00386A  C080  F099         	movff	?___flmul+1,___fladd@b+1
  7133  00386E  C081  F09A         	movff	?___flmul+2,___fladd@b+2
  7134  003872  C082  F09B         	movff	?___flmul+3,___fladd@b+3
  7135  003876  EC24  F008         	call	___fladd	;wreg free
  7136  00387A  C098  F151         	movff	?___fladd,___fltol@f1
  7137  00387E  C099  F152         	movff	?___fladd+1,___fltol@f1+1
  7138  003882  C09A  F153         	movff	?___fladd+2,___fltol@f1+2
  7139  003886  C09B  F154         	movff	?___fladd+3,___fltol@f1+3
  7140  00388A  ECEB  F019         	call	___fltol	;wreg free
  7141  00388E  C151  F15F         	movff	?___fltol,Servo_SetAngle@angle_in_reg
  7142  003892  C152  F160         	movff	?___fltol+1,Servo_SetAngle@angle_in_reg+1
  7143  003896                     
  7144                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 61:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)angle_in_reg));
  7145  003896  C159  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  7146  00389A  C15A  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  7147  00389E  C15B  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  7148  0038A2  C15C  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  7149  0038A6  50DF               	movf	indf2,w,c
  7150  0038A8  0100               	movlb	0	; () banked
  7151  0038AA  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  7152  0038AC  C161  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  7153  0038B0  C15F  F064         	movff	Servo_SetAngle@angle_in_reg,PCA_Write_Reg@data
  7154  0038B4  EC2A  F026         	call	_PCA_Write_Reg	;wreg free
  7155  0038B8                     
  7156                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 62:         reg_addrees++;
  7157  0038B8  0101               	movlb	1	; () banked
  7158  0038BA  2B61               	incf	Servo_SetAngle@reg_addrees& (0+255),f,b
  7159  0038BC                     
  7160                           ; BSR set to: 1
  7161                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 63:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)(angle_in_reg>>8)));
  7162  0038BC  C159  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  7163  0038C0  C15A  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  7164  0038C4  C15B  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  7165  0038C8  C15C  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  7166  0038CC  50DF               	movf	indf2,w,c
  7167  0038CE  0100               	movlb	0	; () banked
  7168  0038D0  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  7169  0038D2  C161  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  7170  0038D6  0101               	movlb	1	; () banked
  7171  0038D8  5160               	movf	(Servo_SetAngle@angle_in_reg+1)& (0+255),w,b
  7172  0038DA  0100               	movlb	0	; () banked
  7173  0038DC  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  7174  0038DE  EC2A  F026         	call	_PCA_Write_Reg	;wreg free
  7175  0038E2                     l310:
  7176  0038E2  0012               	return		;funcret
  7177  0038E4                     __end_of_Servo_SetAngle:
  7178                           	callstack 0
  7179                           
  7180 ;; *************** function ___fladd *****************
  7181 ;; Defined at:
  7182 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  b               4   56[BANK0 ] unsigned char 
  7185 ;;  a               4   60[BANK0 ] unsigned char 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  grs             1   71[BANK0 ] unsigned char 
  7188 ;;  bexp            1   70[BANK0 ] unsigned char 
  7189 ;;  aexp            1   69[BANK0 ] unsigned char 
  7190 ;;  signs           1   68[BANK0 ] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  4   56[BANK0 ] unsigned char 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7200 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7201 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7202 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;Total ram usage:       16 bytes
  7205 ;; Hardware stack levels used: 1
  7206 ;; Hardware stack levels required when called: 8
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_Servo_SetAngle
  7211 ;;		_async_config_baud_rate_gen
  7212 ;;		_I2C_Master_Mode_Clock_Configurations
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text38
  7217  001048                     __ptext38:
  7218                           	callstack 0
  7219  001048                     ___fladd:
  7220                           	callstack 20
  7221  001048  0100               	movlb	0	; () banked
  7222  00104A  519B               	movf	(___fladd@b+3)& (0+255),w,b
  7223  00104C  0B80               	andlw	128
  7224  00104E  6FA4               	movwf	___fladd@signs& (0+255),b
  7225  001050  519B               	movf	(___fladd@b+3)& (0+255),w,b
  7226  001052  259B               	addwf	(___fladd@b+3)& (0+255),w,b
  7227  001054  6FA6               	movwf	___fladd@bexp& (0+255),b
  7228  001056                     
  7229                           ; BSR set to: 0
  7230  001056  AF9A               	btfss	(___fladd@b+2)& (0+255),7,b
  7231  001058  EF30  F008         	goto	u9821
  7232  00105C  EF32  F008         	goto	u9820
  7233  001060                     u9821:
  7234  001060  EF33  F008         	goto	l9798
  7235  001064                     u9820:
  7236  001064                     
  7237                           ; BSR set to: 0
  7238  001064  81A6               	bsf	___fladd@bexp& (0+255),0,b
  7239  001066                     l9798:
  7240                           
  7241                           ; BSR set to: 0
  7242  001066  51A6               	movf	___fladd@bexp& (0+255),w,b
  7243  001068  B4D8               	btfsc	status,2,c
  7244  00106A  EF39  F008         	goto	u9831
  7245  00106E  EF3B  F008         	goto	u9830
  7246  001072                     u9831:
  7247  001072  EF50  F008         	goto	l9808
  7248  001076                     u9830:
  7249  001076                     
  7250                           ; BSR set to: 0
  7251  001076  29A6               	incf	___fladd@bexp& (0+255),w,b
  7252  001078  A4D8               	btfss	status,2,c
  7253  00107A  EF41  F008         	goto	u9841
  7254  00107E  EF43  F008         	goto	u9840
  7255  001082                     u9841:
  7256  001082  EF4B  F008         	goto	l9804
  7257  001086                     u9840:
  7258  001086                     
  7259                           ; BSR set to: 0
  7260  001086  0E00               	movlw	0
  7261  001088  6F98               	movwf	___fladd@b& (0+255),b
  7262  00108A  0E00               	movlw	0
  7263  00108C  6F99               	movwf	(___fladd@b+1)& (0+255),b
  7264  00108E  0E00               	movlw	0
  7265  001090  6F9A               	movwf	(___fladd@b+2)& (0+255),b
  7266  001092  0E00               	movlw	0
  7267  001094  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7268  001096                     l9804:
  7269                           
  7270                           ; BSR set to: 0
  7271  001096  8F9A               	bsf	(___fladd@b+2)& (0+255),7,b
  7272  001098                     
  7273                           ; BSR set to: 0
  7274  001098  0E00               	movlw	0
  7275  00109A  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7276  00109C  EF58  F008         	goto	l9810
  7277  0010A0                     l9808:
  7278                           
  7279                           ; BSR set to: 0
  7280  0010A0  0E00               	movlw	0
  7281  0010A2  6F98               	movwf	___fladd@b& (0+255),b
  7282  0010A4  0E00               	movlw	0
  7283  0010A6  6F99               	movwf	(___fladd@b+1)& (0+255),b
  7284  0010A8  0E00               	movlw	0
  7285  0010AA  6F9A               	movwf	(___fladd@b+2)& (0+255),b
  7286  0010AC  0E00               	movlw	0
  7287  0010AE  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7288  0010B0                     l9810:
  7289                           
  7290                           ; BSR set to: 0
  7291  0010B0  519F               	movf	(___fladd@a+3)& (0+255),w,b
  7292  0010B2  0B80               	andlw	128
  7293  0010B4  6FA5               	movwf	___fladd@aexp& (0+255),b
  7294  0010B6                     
  7295                           ; BSR set to: 0
  7296  0010B6  51A4               	movf	___fladd@signs& (0+255),w,b
  7297  0010B8  19A5               	xorwf	___fladd@aexp& (0+255),w,b
  7298  0010BA  B4D8               	btfsc	status,2,c
  7299  0010BC  EF62  F008         	goto	u9851
  7300  0010C0  EF64  F008         	goto	u9850
  7301  0010C4                     u9851:
  7302  0010C4  EF65  F008         	goto	l9816
  7303  0010C8                     u9850:
  7304  0010C8                     
  7305                           ; BSR set to: 0
  7306  0010C8  8DA4               	bsf	___fladd@signs& (0+255),6,b
  7307  0010CA                     l9816:
  7308                           
  7309                           ; BSR set to: 0
  7310  0010CA  519F               	movf	(___fladd@a+3)& (0+255),w,b
  7311  0010CC  259F               	addwf	(___fladd@a+3)& (0+255),w,b
  7312  0010CE  6FA5               	movwf	___fladd@aexp& (0+255),b
  7313  0010D0                     
  7314                           ; BSR set to: 0
  7315  0010D0  AF9E               	btfss	(___fladd@a+2)& (0+255),7,b
  7316  0010D2  EF6D  F008         	goto	u9861
  7317  0010D6  EF6F  F008         	goto	u9860
  7318  0010DA                     u9861:
  7319  0010DA  EF70  F008         	goto	l9822
  7320  0010DE                     u9860:
  7321  0010DE                     
  7322                           ; BSR set to: 0
  7323  0010DE  81A5               	bsf	___fladd@aexp& (0+255),0,b
  7324  0010E0                     l9822:
  7325                           
  7326                           ; BSR set to: 0
  7327  0010E0  51A5               	movf	___fladd@aexp& (0+255),w,b
  7328  0010E2  B4D8               	btfsc	status,2,c
  7329  0010E4  EF76  F008         	goto	u9871
  7330  0010E8  EF78  F008         	goto	u9870
  7331  0010EC                     u9871:
  7332  0010EC  EF8D  F008         	goto	l9832
  7333  0010F0                     u9870:
  7334  0010F0                     
  7335                           ; BSR set to: 0
  7336  0010F0  29A5               	incf	___fladd@aexp& (0+255),w,b
  7337  0010F2  A4D8               	btfss	status,2,c
  7338  0010F4  EF7E  F008         	goto	u9881
  7339  0010F8  EF80  F008         	goto	u9880
  7340  0010FC                     u9881:
  7341  0010FC  EF88  F008         	goto	l9828
  7342  001100                     u9880:
  7343  001100                     
  7344                           ; BSR set to: 0
  7345  001100  0E00               	movlw	0
  7346  001102  6F9C               	movwf	___fladd@a& (0+255),b
  7347  001104  0E00               	movlw	0
  7348  001106  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  7349  001108  0E00               	movlw	0
  7350  00110A  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  7351  00110C  0E00               	movlw	0
  7352  00110E  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  7353  001110                     l9828:
  7354                           
  7355                           ; BSR set to: 0
  7356  001110  8F9E               	bsf	(___fladd@a+2)& (0+255),7,b
  7357  001112                     
  7358                           ; BSR set to: 0
  7359  001112  0E00               	movlw	0
  7360  001114  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  7361  001116  EF95  F008         	goto	l9834
  7362  00111A                     l9832:
  7363                           
  7364                           ; BSR set to: 0
  7365  00111A  0E00               	movlw	0
  7366  00111C  6F9C               	movwf	___fladd@a& (0+255),b
  7367  00111E  0E00               	movlw	0
  7368  001120  6F9D               	movwf	(___fladd@a+1)& (0+255),b
  7369  001122  0E00               	movlw	0
  7370  001124  6F9E               	movwf	(___fladd@a+2)& (0+255),b
  7371  001126  0E00               	movlw	0
  7372  001128  6F9F               	movwf	(___fladd@a+3)& (0+255),b
  7373  00112A                     l9834:
  7374                           
  7375                           ; BSR set to: 0
  7376  00112A  51A6               	movf	___fladd@bexp& (0+255),w,b
  7377  00112C  5DA5               	subwf	___fladd@aexp& (0+255),w,b
  7378  00112E  B0D8               	btfsc	status,0,c
  7379  001130  EF9C  F008         	goto	u9891
  7380  001134  EF9E  F008         	goto	u9890
  7381  001138                     u9891:
  7382  001138  EFC5  F008         	goto	l9870
  7383  00113C                     u9890:
  7384  00113C                     
  7385                           ; BSR set to: 0
  7386  00113C  ADA4               	btfss	___fladd@signs& (0+255),6,b
  7387  00113E  EFA3  F008         	goto	u9901
  7388  001142  EFA5  F008         	goto	u9900
  7389  001146                     u9901:
  7390  001146  EFA7  F008         	goto	l9840
  7391  00114A                     u9900:
  7392  00114A                     
  7393                           ; BSR set to: 0
  7394  00114A  0E80               	movlw	128
  7395  00114C  1BA4               	xorwf	___fladd@signs& (0+255),f,b
  7396  00114E                     l9840:
  7397                           
  7398                           ; BSR set to: 0
  7399  00114E  C0A6  F0A7         	movff	___fladd@bexp,___fladd@grs
  7400  001152                     
  7401                           ; BSR set to: 0
  7402  001152  C0A5  F0A6         	movff	___fladd@aexp,___fladd@bexp
  7403  001156                     
  7404                           ; BSR set to: 0
  7405  001156  C0A7  F0A5         	movff	___fladd@grs,___fladd@aexp
  7406  00115A                     
  7407                           ; BSR set to: 0
  7408  00115A  C098  F0A7         	movff	___fladd@b,___fladd@grs
  7409  00115E                     
  7410                           ; BSR set to: 0
  7411  00115E  C09C  F098         	movff	___fladd@a,___fladd@b
  7412  001162                     
  7413                           ; BSR set to: 0
  7414  001162  C0A7  F09C         	movff	___fladd@grs,___fladd@a
  7415  001166                     
  7416                           ; BSR set to: 0
  7417  001166  C099  F0A7         	movff	___fladd@b+1,___fladd@grs
  7418  00116A                     
  7419                           ; BSR set to: 0
  7420  00116A  C09D  F099         	movff	___fladd@a+1,___fladd@b+1
  7421  00116E                     
  7422                           ; BSR set to: 0
  7423  00116E  C0A7  F09D         	movff	___fladd@grs,___fladd@a+1
  7424  001172                     
  7425                           ; BSR set to: 0
  7426  001172  C09A  F0A7         	movff	___fladd@b+2,___fladd@grs
  7427  001176                     
  7428                           ; BSR set to: 0
  7429  001176  C09E  F09A         	movff	___fladd@a+2,___fladd@b+2
  7430  00117A                     
  7431                           ; BSR set to: 0
  7432  00117A  C0A7  F09E         	movff	___fladd@grs,___fladd@a+2
  7433  00117E                     
  7434                           ; BSR set to: 0
  7435  00117E  C09B  F0A7         	movff	___fladd@b+3,___fladd@grs
  7436  001182                     
  7437                           ; BSR set to: 0
  7438  001182  C09F  F09B         	movff	___fladd@a+3,___fladd@b+3
  7439  001186                     
  7440                           ; BSR set to: 0
  7441  001186  C0A7  F09F         	movff	___fladd@grs,___fladd@a+3
  7442  00118A                     l9870:
  7443                           
  7444                           ; BSR set to: 0
  7445  00118A  0E00               	movlw	0
  7446  00118C  6FA7               	movwf	___fladd@grs& (0+255),b
  7447  00118E                     
  7448                           ; BSR set to: 0
  7449  00118E  51A6               	movf	___fladd@bexp& (0+255),w,b
  7450  001190  C0A5  F0A0         	movff	___fladd@aexp,??___fladd
  7451  001194  6BA1               	clrf	(??___fladd+1)& (0+255),b
  7452  001196  5FA0               	subwf	??___fladd& (0+255),f,b
  7453  001198  0E00               	movlw	0
  7454  00119A  5BA1               	subwfb	(??___fladd+1)& (0+255),f,b
  7455  00119C  BFA1               	btfsc	(??___fladd+1)& (0+255),7,b
  7456  00119E  EFDA  F008         	goto	u9911
  7457  0011A2  51A1               	movf	(??___fladd+1)& (0+255),w,b
  7458  0011A4  E109               	bnz	u9910
  7459  0011A6  0E1A               	movlw	26
  7460  0011A8  5DA0               	subwf	??___fladd& (0+255),w,b
  7461  0011AA  A0D8               	btfss	status,0,c
  7462  0011AC  EFDA  F008         	goto	u9911
  7463  0011B0  EFDC  F008         	goto	u9910
  7464  0011B4                     u9911:
  7465  0011B4  EF13  F009         	goto	l2521
  7466  0011B8                     u9910:
  7467  0011B8                     
  7468                           ; BSR set to: 0
  7469  0011B8  5198               	movf	___fladd@b& (0+255),w,b
  7470  0011BA  1199               	iorwf	(___fladd@b+1)& (0+255),w,b
  7471  0011BC  119A               	iorwf	(___fladd@b+2)& (0+255),w,b
  7472  0011BE  119B               	iorwf	(___fladd@b+3)& (0+255),w,b
  7473  0011C0  A4D8               	btfss	status,2,c
  7474  0011C2  EFE5  F008         	goto	u9921
  7475  0011C6  EFE8  F008         	goto	u9920
  7476  0011CA                     u9921:
  7477  0011CA  0E01               	movlw	1
  7478  0011CC  EFE9  F008         	goto	u9930
  7479  0011D0                     u9920:
  7480  0011D0  0E00               	movlw	0
  7481  0011D2                     u9930:
  7482  0011D2  6FA7               	movwf	___fladd@grs& (0+255),b
  7483  0011D4                     
  7484                           ; BSR set to: 0
  7485  0011D4  0E00               	movlw	0
  7486  0011D6  6F98               	movwf	___fladd@b& (0+255),b
  7487  0011D8  0E00               	movlw	0
  7488  0011DA  6F99               	movwf	(___fladd@b+1)& (0+255),b
  7489  0011DC  0E00               	movlw	0
  7490  0011DE  6F9A               	movwf	(___fladd@b+2)& (0+255),b
  7491  0011E0  0E00               	movlw	0
  7492  0011E2  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7493  0011E4                     
  7494                           ; BSR set to: 0
  7495  0011E4  C0A5  F0A6         	movff	___fladd@aexp,___fladd@bexp
  7496  0011E8  EF1C  F009         	goto	l2520
  7497  0011EC                     l2522:
  7498                           
  7499                           ; BSR set to: 0
  7500  0011EC  A1A7               	btfss	___fladd@grs& (0+255),0,b
  7501  0011EE  EFFB  F008         	goto	u9941
  7502  0011F2  EFFD  F008         	goto	u9940
  7503  0011F6                     u9941:
  7504  0011F6  EF03  F009         	goto	l9882
  7505  0011FA                     u9940:
  7506  0011FA                     
  7507                           ; BSR set to: 0
  7508  0011FA  90D8               	bcf	status,0,c
  7509  0011FC  31A7               	rrcf	___fladd@grs& (0+255),w,b
  7510  0011FE  0901               	iorlw	1
  7511  001200  6FA7               	movwf	___fladd@grs& (0+255),b
  7512  001202  EF05  F009         	goto	l9884
  7513  001206                     l9882:
  7514                           
  7515                           ; BSR set to: 0
  7516  001206  90D8               	bcf	status,0,c
  7517  001208  33A7               	rrcf	___fladd@grs& (0+255),f,b
  7518  00120A                     l9884:
  7519                           
  7520                           ; BSR set to: 0
  7521  00120A  A198               	btfss	___fladd@b& (0+255),0,b
  7522  00120C  EF0A  F009         	goto	u9951
  7523  001210  EF0C  F009         	goto	u9950
  7524  001214                     u9951:
  7525  001214  EF0D  F009         	goto	l9888
  7526  001218                     u9950:
  7527  001218                     
  7528                           ; BSR set to: 0
  7529  001218  8FA7               	bsf	___fladd@grs& (0+255),7,b
  7530  00121A                     l9888:
  7531                           
  7532                           ; BSR set to: 0
  7533  00121A  359B               	rlcf	(___fladd@b+3)& (0+255),w,b
  7534  00121C  339B               	rrcf	(___fladd@b+3)& (0+255),f,b
  7535  00121E  339A               	rrcf	(___fladd@b+2)& (0+255),f,b
  7536  001220  3399               	rrcf	(___fladd@b+1)& (0+255),f,b
  7537  001222  3398               	rrcf	___fladd@b& (0+255),f,b
  7538  001224                     
  7539                           ; BSR set to: 0
  7540  001224  2BA6               	incf	___fladd@bexp& (0+255),f,b
  7541  001226                     l2521:
  7542                           
  7543                           ; BSR set to: 0
  7544  001226  51A5               	movf	___fladd@aexp& (0+255),w,b
  7545  001228  5DA6               	subwf	___fladd@bexp& (0+255),w,b
  7546  00122A  A0D8               	btfss	status,0,c
  7547  00122C  EF1A  F009         	goto	u9961
  7548  001230  EF1C  F009         	goto	u9960
  7549  001234                     u9961:
  7550  001234  EFF6  F008         	goto	l2522
  7551  001238                     u9960:
  7552  001238                     l2520:
  7553                           
  7554                           ; BSR set to: 0
  7555  001238  BDA4               	btfsc	___fladd@signs& (0+255),6,b
  7556  00123A  EF21  F009         	goto	u9971
  7557  00123E  EF23  F009         	goto	u9970
  7558  001242                     u9971:
  7559  001242  EF63  F009         	goto	l9916
  7560  001246                     u9970:
  7561  001246                     
  7562                           ; BSR set to: 0
  7563  001246  51A6               	movf	___fladd@bexp& (0+255),w,b
  7564  001248  A4D8               	btfss	status,2,c
  7565  00124A  EF29  F009         	goto	u9981
  7566  00124E  EF2B  F009         	goto	u9980
  7567  001252                     u9981:
  7568  001252  EF35  F009         	goto	l9898
  7569  001256                     u9980:
  7570  001256                     
  7571                           ; BSR set to: 0
  7572  001256  0E00               	movlw	0
  7573  001258  6F98               	movwf	?___fladd& (0+255),b
  7574  00125A  0E00               	movlw	0
  7575  00125C  6F99               	movwf	(?___fladd+1)& (0+255),b
  7576  00125E  0E00               	movlw	0
  7577  001260  6F9A               	movwf	(?___fladd+2)& (0+255),b
  7578  001262  0E00               	movlw	0
  7579  001264  6F9B               	movwf	(?___fladd+3)& (0+255),b
  7580  001266  EF84  F00A         	goto	l2529
  7581  00126A                     l9898:
  7582                           
  7583                           ; BSR set to: 0
  7584  00126A  519C               	movf	___fladd@a& (0+255),w,b
  7585  00126C  2798               	addwf	___fladd@b& (0+255),f,b
  7586  00126E  519D               	movf	(___fladd@a+1)& (0+255),w,b
  7587  001270  2399               	addwfc	(___fladd@b+1)& (0+255),f,b
  7588  001272  519E               	movf	(___fladd@a+2)& (0+255),w,b
  7589  001274  239A               	addwfc	(___fladd@b+2)& (0+255),f,b
  7590  001276  519F               	movf	(___fladd@a+3)& (0+255),w,b
  7591  001278  239B               	addwfc	(___fladd@b+3)& (0+255),f,b
  7592  00127A                     
  7593                           ; BSR set to: 0
  7594  00127A  A19B               	btfss	(___fladd@b+3)& (0+255),0,b
  7595  00127C  EF42  F009         	goto	u9991
  7596  001280  EF44  F009         	goto	u9990
  7597  001284                     u9991:
  7598  001284  EFF0  F009         	goto	l9952
  7599  001288                     u9990:
  7600  001288                     
  7601                           ; BSR set to: 0
  7602  001288  A1A7               	btfss	___fladd@grs& (0+255),0,b
  7603  00128A  EF49  F009         	goto	u10001
  7604  00128E  EF4B  F009         	goto	u10000
  7605  001292                     u10001:
  7606  001292  EF51  F009         	goto	l9906
  7607  001296                     u10000:
  7608  001296                     
  7609                           ; BSR set to: 0
  7610  001296  90D8               	bcf	status,0,c
  7611  001298  31A7               	rrcf	___fladd@grs& (0+255),w,b
  7612  00129A  0901               	iorlw	1
  7613  00129C  6FA7               	movwf	___fladd@grs& (0+255),b
  7614  00129E  EF53  F009         	goto	l9908
  7615  0012A2                     l9906:
  7616                           
  7617                           ; BSR set to: 0
  7618  0012A2  90D8               	bcf	status,0,c
  7619  0012A4  33A7               	rrcf	___fladd@grs& (0+255),f,b
  7620  0012A6                     l9908:
  7621                           
  7622                           ; BSR set to: 0
  7623  0012A6  A198               	btfss	___fladd@b& (0+255),0,b
  7624  0012A8  EF58  F009         	goto	u10011
  7625  0012AC  EF5A  F009         	goto	u10010
  7626  0012B0                     u10011:
  7627  0012B0  EF5B  F009         	goto	l9912
  7628  0012B4                     u10010:
  7629  0012B4                     
  7630                           ; BSR set to: 0
  7631  0012B4  8FA7               	bsf	___fladd@grs& (0+255),7,b
  7632  0012B6                     l9912:
  7633                           
  7634                           ; BSR set to: 0
  7635  0012B6  359B               	rlcf	(___fladd@b+3)& (0+255),w,b
  7636  0012B8  339B               	rrcf	(___fladd@b+3)& (0+255),f,b
  7637  0012BA  339A               	rrcf	(___fladd@b+2)& (0+255),f,b
  7638  0012BC  3399               	rrcf	(___fladd@b+1)& (0+255),f,b
  7639  0012BE  3398               	rrcf	___fladd@b& (0+255),f,b
  7640  0012C0                     
  7641                           ; BSR set to: 0
  7642  0012C0  2BA6               	incf	___fladd@bexp& (0+255),f,b
  7643  0012C2  EFF0  F009         	goto	l9952
  7644  0012C6                     l9916:
  7645                           
  7646                           ; BSR set to: 0
  7647  0012C6  519C               	movf	___fladd@a& (0+255),w,b
  7648  0012C8  5D98               	subwf	___fladd@b& (0+255),w,b
  7649  0012CA  519D               	movf	(___fladd@a+1)& (0+255),w,b
  7650  0012CC  5999               	subwfb	(___fladd@b+1)& (0+255),w,b
  7651  0012CE  519E               	movf	(___fladd@a+2)& (0+255),w,b
  7652  0012D0  599A               	subwfb	(___fladd@b+2)& (0+255),w,b
  7653  0012D2  519B               	movf	(___fladd@b+3)& (0+255),w,b
  7654  0012D4  0A80               	xorlw	128
  7655  0012D6  6FA0               	movwf	??___fladd& (0+255),b
  7656  0012D8  519F               	movf	(___fladd@a+3)& (0+255),w,b
  7657  0012DA  0A80               	xorlw	128
  7658  0012DC  59A0               	subwfb	??___fladd& (0+255),w,b
  7659  0012DE  B0D8               	btfsc	status,0,c
  7660  0012E0  EF74  F009         	goto	u10021
  7661  0012E4  EF76  F009         	goto	u10020
  7662  0012E8                     u10021:
  7663  0012E8  EFA1  F009         	goto	l9926
  7664  0012EC                     u10020:
  7665  0012EC                     
  7666                           ; BSR set to: 0
  7667  0012EC  5198               	movf	___fladd@b& (0+255),w,b
  7668  0012EE  5D9C               	subwf	___fladd@a& (0+255),w,b
  7669  0012F0  6FA0               	movwf	??___fladd& (0+255),b
  7670  0012F2  5199               	movf	(___fladd@b+1)& (0+255),w,b
  7671  0012F4  599D               	subwfb	(___fladd@a+1)& (0+255),w,b
  7672  0012F6  6FA1               	movwf	(??___fladd+1)& (0+255),b
  7673  0012F8  519A               	movf	(___fladd@b+2)& (0+255),w,b
  7674  0012FA  599E               	subwfb	(___fladd@a+2)& (0+255),w,b
  7675  0012FC  6FA2               	movwf	(??___fladd+2)& (0+255),b
  7676  0012FE  519B               	movf	(___fladd@b+3)& (0+255),w,b
  7677  001300  599F               	subwfb	(___fladd@a+3)& (0+255),w,b
  7678  001302  6FA3               	movwf	(??___fladd+3)& (0+255),b
  7679  001304  0EFF               	movlw	255
  7680  001306  25A0               	addwf	??___fladd& (0+255),w,b
  7681  001308  6F98               	movwf	___fladd@b& (0+255),b
  7682  00130A  0EFF               	movlw	255
  7683  00130C  21A1               	addwfc	(??___fladd+1)& (0+255),w,b
  7684  00130E  6F99               	movwf	(___fladd@b+1)& (0+255),b
  7685  001310  0EFF               	movlw	255
  7686  001312  21A2               	addwfc	(??___fladd+2)& (0+255),w,b
  7687  001314  6F9A               	movwf	(___fladd@b+2)& (0+255),b
  7688  001316  0EFF               	movlw	255
  7689  001318  21A3               	addwfc	(??___fladd+3)& (0+255),w,b
  7690  00131A  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7691  00131C  0E80               	movlw	128
  7692  00131E  1BA4               	xorwf	___fladd@signs& (0+255),f,b
  7693  001320                     
  7694                           ; BSR set to: 0
  7695  001320  6DA7               	negf	___fladd@grs& (0+255),b
  7696  001322                     
  7697                           ; BSR set to: 0
  7698  001322  51A7               	movf	___fladd@grs& (0+255),w,b
  7699  001324  A4D8               	btfss	status,2,c
  7700  001326  EF97  F009         	goto	u10031
  7701  00132A  EF99  F009         	goto	u10030
  7702  00132E                     u10031:
  7703  00132E  EFA9  F009         	goto	l2537
  7704  001332                     u10030:
  7705  001332                     
  7706                           ; BSR set to: 0
  7707  001332  0E01               	movlw	1
  7708  001334  2798               	addwf	___fladd@b& (0+255),f,b
  7709  001336  0E00               	movlw	0
  7710  001338  2399               	addwfc	(___fladd@b+1)& (0+255),f,b
  7711  00133A  239A               	addwfc	(___fladd@b+2)& (0+255),f,b
  7712  00133C  239B               	addwfc	(___fladd@b+3)& (0+255),f,b
  7713  00133E  EFA9  F009         	goto	l2537
  7714  001342                     l9926:
  7715                           
  7716                           ; BSR set to: 0
  7717  001342  519C               	movf	___fladd@a& (0+255),w,b
  7718  001344  5F98               	subwf	___fladd@b& (0+255),f,b
  7719  001346  519D               	movf	(___fladd@a+1)& (0+255),w,b
  7720  001348  5B99               	subwfb	(___fladd@b+1)& (0+255),f,b
  7721  00134A  519E               	movf	(___fladd@a+2)& (0+255),w,b
  7722  00134C  5B9A               	subwfb	(___fladd@b+2)& (0+255),f,b
  7723  00134E  519F               	movf	(___fladd@a+3)& (0+255),w,b
  7724  001350  5B9B               	subwfb	(___fladd@b+3)& (0+255),f,b
  7725  001352                     l2537:
  7726                           
  7727                           ; BSR set to: 0
  7728  001352  5198               	movf	___fladd@b& (0+255),w,b
  7729  001354  1199               	iorwf	(___fladd@b+1)& (0+255),w,b
  7730  001356  119A               	iorwf	(___fladd@b+2)& (0+255),w,b
  7731  001358  119B               	iorwf	(___fladd@b+3)& (0+255),w,b
  7732  00135A  A4D8               	btfss	status,2,c
  7733  00135C  EFB2  F009         	goto	u10041
  7734  001360  EFB4  F009         	goto	u10040
  7735  001364                     u10041:
  7736  001364  EFE9  F009         	goto	l9950
  7737  001368                     u10040:
  7738  001368                     
  7739                           ; BSR set to: 0
  7740  001368  51A7               	movf	___fladd@grs& (0+255),w,b
  7741  00136A  A4D8               	btfss	status,2,c
  7742  00136C  EFBA  F009         	goto	u10051
  7743  001370  EFBC  F009         	goto	u10050
  7744  001374                     u10051:
  7745  001374  EFE9  F009         	goto	l9950
  7746  001378                     u10050:
  7747  001378                     
  7748                           ; BSR set to: 0
  7749  001378  0E00               	movlw	0
  7750  00137A  6F98               	movwf	?___fladd& (0+255),b
  7751  00137C  0E00               	movlw	0
  7752  00137E  6F99               	movwf	(?___fladd+1)& (0+255),b
  7753  001380  0E00               	movlw	0
  7754  001382  6F9A               	movwf	(?___fladd+2)& (0+255),b
  7755  001384  0E00               	movlw	0
  7756  001386  6F9B               	movwf	(?___fladd+3)& (0+255),b
  7757  001388  EF84  F00A         	goto	l2529
  7758  00138C                     l9934:
  7759                           
  7760                           ; BSR set to: 0
  7761  00138C  90D8               	bcf	status,0,c
  7762  00138E  3798               	rlcf	___fladd@b& (0+255),f,b
  7763  001390  3799               	rlcf	(___fladd@b+1)& (0+255),f,b
  7764  001392  379A               	rlcf	(___fladd@b+2)& (0+255),f,b
  7765  001394  379B               	rlcf	(___fladd@b+3)& (0+255),f,b
  7766  001396                     
  7767                           ; BSR set to: 0
  7768  001396  AFA7               	btfss	___fladd@grs& (0+255),7,b
  7769  001398  EFD0  F009         	goto	u10061
  7770  00139C  EFD2  F009         	goto	u10060
  7771  0013A0                     u10061:
  7772  0013A0  EFD3  F009         	goto	l9940
  7773  0013A4                     u10060:
  7774  0013A4                     
  7775                           ; BSR set to: 0
  7776  0013A4  8198               	bsf	___fladd@b& (0+255),0,b
  7777  0013A6                     l9940:
  7778                           
  7779                           ; BSR set to: 0
  7780  0013A6  A1A7               	btfss	___fladd@grs& (0+255),0,b
  7781  0013A8  EFD8  F009         	goto	u10071
  7782  0013AC  EFDA  F009         	goto	u10070
  7783  0013B0                     u10071:
  7784  0013B0  EFDE  F009         	goto	l9944
  7785  0013B4                     u10070:
  7786  0013B4                     
  7787                           ; BSR set to: 0
  7788  0013B4  80D8               	bsf	status,0,c
  7789  0013B6  37A7               	rlcf	___fladd@grs& (0+255),f,b
  7790  0013B8  EFE0  F009         	goto	l9946
  7791  0013BC                     l9944:
  7792                           
  7793                           ; BSR set to: 0
  7794  0013BC  90D8               	bcf	status,0,c
  7795  0013BE  37A7               	rlcf	___fladd@grs& (0+255),f,b
  7796  0013C0                     l9946:
  7797                           
  7798                           ; BSR set to: 0
  7799  0013C0  51A6               	movf	___fladd@bexp& (0+255),w,b
  7800  0013C2  B4D8               	btfsc	status,2,c
  7801  0013C4  EFE6  F009         	goto	u10081
  7802  0013C8  EFE8  F009         	goto	u10080
  7803  0013CC                     u10081:
  7804  0013CC  EFE9  F009         	goto	l9950
  7805  0013D0                     u10080:
  7806  0013D0                     
  7807                           ; BSR set to: 0
  7808  0013D0  07A6               	decf	___fladd@bexp& (0+255),f,b
  7809  0013D2                     l9950:
  7810                           
  7811                           ; BSR set to: 0
  7812  0013D2  AF9A               	btfss	(___fladd@b+2)& (0+255),7,b
  7813  0013D4  EFEE  F009         	goto	u10091
  7814  0013D8  EFF0  F009         	goto	u10090
  7815  0013DC                     u10091:
  7816  0013DC  EFC6  F009         	goto	l9934
  7817  0013E0                     u10090:
  7818  0013E0                     l9952:
  7819                           
  7820                           ; BSR set to: 0
  7821  0013E0  0E00               	movlw	0
  7822  0013E2  6FA5               	movwf	___fladd@aexp& (0+255),b
  7823  0013E4                     
  7824                           ; BSR set to: 0
  7825  0013E4  AFA7               	btfss	___fladd@grs& (0+255),7,b
  7826  0013E6  EFF7  F009         	goto	u10101
  7827  0013EA  EFF9  F009         	goto	u10100
  7828  0013EE                     u10101:
  7829  0013EE  EF11  F00A         	goto	l2546
  7830  0013F2                     u10100:
  7831  0013F2                     
  7832                           ; BSR set to: 0
  7833  0013F2  C0A7  F0A0         	movff	___fladd@grs,??___fladd
  7834  0013F6  0E7F               	movlw	127
  7835  0013F8  17A0               	andwf	??___fladd& (0+255),f,b
  7836  0013FA  B4D8               	btfsc	status,2,c
  7837  0013FC  EF02  F00A         	goto	u10111
  7838  001400  EF04  F00A         	goto	u10110
  7839  001404                     u10111:
  7840  001404  EF08  F00A         	goto	l2547
  7841  001408                     u10110:
  7842  001408                     l9958:
  7843                           
  7844                           ; BSR set to: 0
  7845  001408  0E01               	movlw	1
  7846  00140A  6FA5               	movwf	___fladd@aexp& (0+255),b
  7847  00140C  EF11  F00A         	goto	l2546
  7848  001410                     l2547:
  7849                           
  7850                           ; BSR set to: 0
  7851  001410  A198               	btfss	___fladd@b& (0+255),0,b
  7852  001412  EF0D  F00A         	goto	u10121
  7853  001416  EF0F  F00A         	goto	u10120
  7854  00141A                     u10121:
  7855  00141A  EF11  F00A         	goto	l2546
  7856  00141E                     u10120:
  7857  00141E  EF04  F00A         	goto	l9958
  7858  001422                     l2546:
  7859                           
  7860                           ; BSR set to: 0
  7861  001422  51A5               	movf	___fladd@aexp& (0+255),w,b
  7862  001424  B4D8               	btfsc	status,2,c
  7863  001426  EF17  F00A         	goto	u10131
  7864  00142A  EF19  F00A         	goto	u10130
  7865  00142E                     u10131:
  7866  00142E  EF44  F00A         	goto	l9970
  7867  001432                     u10130:
  7868  001432                     
  7869                           ; BSR set to: 0
  7870  001432  0E01               	movlw	1
  7871  001434  2798               	addwf	___fladd@b& (0+255),f,b
  7872  001436  0E00               	movlw	0
  7873  001438  2399               	addwfc	(___fladd@b+1)& (0+255),f,b
  7874  00143A  239A               	addwfc	(___fladd@b+2)& (0+255),f,b
  7875  00143C  239B               	addwfc	(___fladd@b+3)& (0+255),f,b
  7876  00143E                     
  7877                           ; BSR set to: 0
  7878  00143E  A19B               	btfss	(___fladd@b+3)& (0+255),0,b
  7879  001440  EF24  F00A         	goto	u10141
  7880  001444  EF26  F00A         	goto	u10140
  7881  001448                     u10141:
  7882  001448  EF44  F00A         	goto	l9970
  7883  00144C                     u10140:
  7884  00144C                     
  7885                           ; BSR set to: 0
  7886  00144C  C098  F0A0         	movff	___fladd@b,??___fladd
  7887  001450  C099  F0A1         	movff	___fladd@b+1,??___fladd+1
  7888  001454  C09A  F0A2         	movff	___fladd@b+2,??___fladd+2
  7889  001458  C09B  F0A3         	movff	___fladd@b+3,??___fladd+3
  7890  00145C  35A3               	rlcf	(??___fladd+3)& (0+255),w,b
  7891  00145E  33A3               	rrcf	(??___fladd+3)& (0+255),f,b
  7892  001460  33A2               	rrcf	(??___fladd+2)& (0+255),f,b
  7893  001462  33A1               	rrcf	(??___fladd+1)& (0+255),f,b
  7894  001464  33A0               	rrcf	??___fladd& (0+255),f,b
  7895  001466  C0A0  F098         	movff	??___fladd,___fladd@b
  7896  00146A  C0A1  F099         	movff	??___fladd+1,___fladd@b+1
  7897  00146E  C0A2  F09A         	movff	??___fladd+2,___fladd@b+2
  7898  001472  C0A3  F09B         	movff	??___fladd+3,___fladd@b+3
  7899  001476  29A6               	incf	___fladd@bexp& (0+255),w,b
  7900  001478  B4D8               	btfsc	status,2,c
  7901  00147A  EF41  F00A         	goto	u10151
  7902  00147E  EF43  F00A         	goto	u10150
  7903  001482                     u10151:
  7904  001482  EF44  F00A         	goto	l9970
  7905  001486                     u10150:
  7906  001486                     
  7907                           ; BSR set to: 0
  7908  001486  2BA6               	incf	___fladd@bexp& (0+255),f,b
  7909  001488                     l9970:
  7910                           
  7911                           ; BSR set to: 0
  7912  001488  29A6               	incf	___fladd@bexp& (0+255),w,b
  7913  00148A  B4D8               	btfsc	status,2,c
  7914  00148C  EF4A  F00A         	goto	u10161
  7915  001490  EF4C  F00A         	goto	u10160
  7916  001494                     u10161:
  7917  001494  EF54  F00A         	goto	l9974
  7918  001498                     u10160:
  7919  001498                     
  7920                           ; BSR set to: 0
  7921  001498  51A6               	movf	___fladd@bexp& (0+255),w,b
  7922  00149A  A4D8               	btfss	status,2,c
  7923  00149C  EF52  F00A         	goto	u10171
  7924  0014A0  EF54  F00A         	goto	u10170
  7925  0014A4                     u10171:
  7926  0014A4  EF66  F00A         	goto	l9978
  7927  0014A8                     u10170:
  7928  0014A8                     l9974:
  7929                           
  7930                           ; BSR set to: 0
  7931  0014A8  0E00               	movlw	0
  7932  0014AA  6F98               	movwf	___fladd@b& (0+255),b
  7933  0014AC  0E00               	movlw	0
  7934  0014AE  6F99               	movwf	(___fladd@b+1)& (0+255),b
  7935  0014B0  0E00               	movlw	0
  7936  0014B2  6F9A               	movwf	(___fladd@b+2)& (0+255),b
  7937  0014B4  0E00               	movlw	0
  7938  0014B6  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7939  0014B8  51A6               	movf	___fladd@bexp& (0+255),w,b
  7940  0014BA  A4D8               	btfss	status,2,c
  7941  0014BC  EF62  F00A         	goto	u10181
  7942  0014C0  EF64  F00A         	goto	u10180
  7943  0014C4                     u10181:
  7944  0014C4  EF66  F00A         	goto	l9978
  7945  0014C8                     u10180:
  7946  0014C8                     
  7947                           ; BSR set to: 0
  7948  0014C8  0E00               	movlw	0
  7949  0014CA  6FA4               	movwf	___fladd@signs& (0+255),b
  7950  0014CC                     l9978:
  7951                           
  7952                           ; BSR set to: 0
  7953  0014CC  A1A6               	btfss	___fladd@bexp& (0+255),0,b
  7954  0014CE  EF6B  F00A         	goto	u10191
  7955  0014D2  EF6D  F00A         	goto	u10190
  7956  0014D6                     u10191:
  7957  0014D6  EF70  F00A         	goto	l9982
  7958  0014DA                     u10190:
  7959  0014DA                     
  7960                           ; BSR set to: 0
  7961  0014DA  8F9A               	bsf	(___fladd@b+2)& (0+255),7,b
  7962  0014DC  EF71  F00A         	goto	l9984
  7963  0014E0                     l9982:
  7964                           
  7965                           ; BSR set to: 0
  7966  0014E0  9F9A               	bcf	(___fladd@b+2)& (0+255),7,b
  7967  0014E2                     l9984:
  7968                           
  7969                           ; BSR set to: 0
  7970  0014E2  90D8               	bcf	status,0,c
  7971  0014E4  31A6               	rrcf	___fladd@bexp& (0+255),w,b
  7972  0014E6  6F9B               	movwf	(___fladd@b+3)& (0+255),b
  7973  0014E8                     
  7974                           ; BSR set to: 0
  7975  0014E8  AFA4               	btfss	___fladd@signs& (0+255),7,b
  7976  0014EA  EF79  F00A         	goto	u10201
  7977  0014EE  EF7B  F00A         	goto	u10200
  7978  0014F2                     u10201:
  7979  0014F2  EF7C  F00A         	goto	l9990
  7980  0014F6                     u10200:
  7981  0014F6                     
  7982                           ; BSR set to: 0
  7983  0014F6  8F9B               	bsf	(___fladd@b+3)& (0+255),7,b
  7984  0014F8                     l9990:
  7985                           
  7986                           ; BSR set to: 0
  7987  0014F8  C098  F098         	movff	___fladd@b,?___fladd
  7988  0014FC  C099  F099         	movff	___fladd@b+1,?___fladd+1
  7989  001500  C09A  F09A         	movff	___fladd@b+2,?___fladd+2
  7990  001504  C09B  F09B         	movff	___fladd@b+3,?___fladd+3
  7991  001508                     l2529:
  7992                           
  7993                           ; BSR set to: 0
  7994  001508  0012               	return		;funcret
  7995  00150A                     __end_of___fladd:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function _PCA_Write_Reg *****************
  7999 ;; Defined at:
  8000 ;;		line 68 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  i2c_obj         2    0[BANK0 ] PTR const struct .
  8003 ;;		 -> i2c_obj(7), 
  8004 ;;  slave_addres    1    2[BANK0 ] unsigned char 
  8005 ;;  reg_address     1    3[BANK0 ] unsigned char 
  8006 ;;  data            1    4[BANK0 ] unsigned char 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  ack             1   34[COMRAM] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8018 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8022 ;;Total ram usage:        6 bytes
  8023 ;; Hardware stack levels used: 1
  8024 ;; Hardware stack levels required when called: 9
  8025 ;; This function calls:
  8026 ;;		_MSSP_I2C_Master_Send_Start
  8027 ;;		_MSSP_I2C_Master_Send_Stop
  8028 ;;		_MSSP_I2C_Master_Write_Blocking
  8029 ;; This function is called by:
  8030 ;;		_ServoDriver_Init
  8031 ;;		_Servo_SetAngle
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text39
  8036  004C54                     __ptext39:
  8037                           	callstack 0
  8038  004C54                     _PCA_Write_Reg:
  8039                           	callstack 19
  8040  004C54                     
  8041                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 68: static void PCA_Write_Reg(con
      +                          st mssp_i2c_st *i2c_obj,uint8 slave_address,uint8 reg_address,uint8 data);ECU/SERVO_MOTO
      +                          R_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 69: {;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_m
      +                          otor_i2c.c: 70:     uint8 ack=6;
  8042  004C54  0E06               	movlw	6
  8043  004C56  6E23               	movwf	PCA_Write_Reg@ack^0,c
  8044  004C58                     
  8045                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 72:     MSSP_I2C_Master_Send_Star
      +                          t(i2c_obj);
  8046  004C58  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  8047  004C5C  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  8048  004C60  EC5A  F027         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  8049  004C64                     
  8050                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 74:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,slave_address,&ack);
  8051  004C64  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  8052  004C68  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  8053  004C6C  C062  F020         	movff	PCA_Write_Reg@slave_address,MSSP_I2C_Master_Write_Blocking@i2c_data
  8054  004C70  0E23               	movlw	low PCA_Write_Reg@ack
  8055  004C72  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  8056  004C74  0E00               	movlw	high PCA_Write_Reg@ack
  8057  004C76  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  8058  004C78  ECC0  F024         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  8059  004C7C                     
  8060                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 76:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,reg_address,&ack);
  8061  004C7C  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  8062  004C80  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  8063  004C84  C063  F020         	movff	PCA_Write_Reg@reg_address,MSSP_I2C_Master_Write_Blocking@i2c_data
  8064  004C88  0E23               	movlw	low PCA_Write_Reg@ack
  8065  004C8A  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  8066  004C8C  0E00               	movlw	high PCA_Write_Reg@ack
  8067  004C8E  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  8068  004C90  ECC0  F024         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  8069  004C94                     
  8070                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 78:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,data,&ack);
  8071  004C94  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  8072  004C98  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  8073  004C9C  C064  F020         	movff	PCA_Write_Reg@data,MSSP_I2C_Master_Write_Blocking@i2c_data
  8074  004CA0  0E23               	movlw	low PCA_Write_Reg@ack
  8075  004CA2  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  8076  004CA4  0E00               	movlw	high PCA_Write_Reg@ack
  8077  004CA6  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  8078  004CA8  ECC0  F024         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  8079  004CAC                     
  8080                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 80:     MSSP_I2C_Master_Send_Stop
      +                          (i2c_obj);
  8081  004CAC  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  8082  004CB0  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  8083  004CB4  EC3E  F027         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  8084  004CB8  0012               	return		;funcret
  8085  004CBA                     __end_of_PCA_Write_Reg:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
  8089 ;; Defined at:
  8090 ;;		line 196 in file "MCAL/I2C/mcal_i2c.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  8093 ;;		 -> i2c_obj(7), 
  8094 ;;  i2c_data        1   31[COMRAM] unsigned char 
  8095 ;;  _ack            2   32[COMRAM] PTR unsigned char 
  8096 ;;		 -> PCA_Write_Reg@ack(1), 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  ERRORSTATUS     1    0        unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      unsigned char 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8108 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;Total ram usage:        5 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 8
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_PCA_Write_Reg
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text40
  8123  004980                     __ptext40:
  8124                           	callstack 0
  8125  004980                     _MSSP_I2C_Master_Write_Blocking:
  8126                           	callstack 19
  8127  004980                     
  8128                           ;MCAL/I2C/mcal_i2c.c: 199:     if (((void*)0)==i2c_obj||((void*)0)==_ack)
  8129  004980  501E               	movf	MSSP_I2C_Master_Write_Blocking@i2c_obj^0,w,c
  8130  004982  101F               	iorwf	(MSSP_I2C_Master_Write_Blocking@i2c_obj+1)^0,w,c
  8131  004984  B4D8               	btfsc	status,2,c
  8132  004986  EFC7  F024         	goto	u10681
  8133  00498A  EFC9  F024         	goto	u10680
  8134  00498E                     u10681:
  8135  00498E  EFD2  F024         	goto	l10264
  8136  004992                     u10680:
  8137  004992  5021               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
  8138  004994  1022               	iorwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,w,c
  8139  004996  A4D8               	btfss	status,2,c
  8140  004998  EFD0  F024         	goto	u10691
  8141  00499C  EFD2  F024         	goto	u10690
  8142  0049A0                     u10691:
  8143  0049A0  EFD4  F024         	goto	l1038
  8144  0049A4                     u10690:
  8145  0049A4                     l10264:
  8146                           
  8147                           ;MCAL/I2C/mcal_i2c.c: 202:     }
  8148  0049A4  EFF3  F024         	goto	l1047
  8149  0049A8                     l1038:
  8150                           
  8151                           ;MCAL/I2C/mcal_i2c.c: 204:     {;MCAL/I2C/mcal_i2c.c: 206:         SSPBUF=i2c_data;
  8152  0049A8  C020  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@i2c_data,4041	;volatile
  8153  0049AC                     l1042:
  8154  0049AC  B0C7               	btfsc	199,0,c	;volatile
  8155  0049AE  EFDB  F024         	goto	u10701
  8156  0049B2  EFDD  F024         	goto	u10700
  8157  0049B6                     u10701:
  8158  0049B6  EFD6  F024         	goto	l1042
  8159  0049BA                     u10700:
  8160  0049BA                     
  8161                           ;MCAL/I2C/mcal_i2c.c: 210:         PIR1bits.SSPIF = 0;
  8162  0049BA  969E               	bcf	158,3,c	;volatile
  8163                           
  8164                           ;MCAL/I2C/mcal_i2c.c: 212:         if(0 == SSPCON2bits.ACKSTAT)
  8165  0049BC  BCC5               	btfsc	197,6,c	;volatile
  8166  0049BE  EFE3  F024         	goto	u10711
  8167  0049C2  EFE5  F024         	goto	u10710
  8168  0049C6                     u10711:
  8169  0049C6  EFED  F024         	goto	l10268
  8170  0049CA                     u10710:
  8171  0049CA                     
  8172                           ;MCAL/I2C/mcal_i2c.c: 213:         {;MCAL/I2C/mcal_i2c.c: 214:             *_ack = 0;
  8173  0049CA  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
  8174  0049CE  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
  8175  0049D2  0E00               	movlw	0
  8176  0049D4  6EDF               	movwf	indf2,c
  8177                           
  8178                           ;MCAL/I2C/mcal_i2c.c: 215:         }
  8179  0049D6  EFF3  F024         	goto	l1047
  8180  0049DA                     l10268:
  8181                           
  8182                           ;MCAL/I2C/mcal_i2c.c: 217:         {;MCAL/I2C/mcal_i2c.c: 218:             *_ack = 1;
  8183  0049DA  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
  8184  0049DE  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
  8185  0049E2  0E01               	movlw	1
  8186  0049E4  6EDF               	movwf	indf2,c
  8187  0049E6                     l1047:
  8188  0049E6  0012               	return		;funcret
  8189  0049E8                     __end_of_MSSP_I2C_Master_Write_Blocking:
  8190                           	callstack 0
  8191                           
  8192 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
  8193 ;; Defined at:
  8194 ;;		line 166 in file "MCAL/I2C/mcal_i2c.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  8197 ;;		 -> i2c_obj(7), 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  ERRORSTATUS     1    0        unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      unsigned char 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;Total ram usage:        2 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 8
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_PCA_Write_Reg
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text41
  8224  004E7C                     __ptext41:
  8225                           	callstack 0
  8226  004E7C                     _MSSP_I2C_Master_Send_Stop:
  8227                           	callstack 19
  8228  004E7C                     
  8229                           ;MCAL/I2C/mcal_i2c.c: 169:     if (((void*)0)==i2c_obj)
  8230  004E7C  501E               	movf	MSSP_I2C_Master_Send_Stop@i2c_obj^0,w,c
  8231  004E7E  101F               	iorwf	(MSSP_I2C_Master_Send_Stop@i2c_obj+1)^0,w,c
  8232  004E80  A4D8               	btfss	status,2,c
  8233  004E82  EF45  F027         	goto	u10721
  8234  004E86  EF47  F027         	goto	u10720
  8235  004E8A                     u10721:
  8236  004E8A  EF49  F027         	goto	l1028
  8237  004E8E                     u10720:
  8238  004E8E                     l10276:
  8239                           
  8240                           ;MCAL/I2C/mcal_i2c.c: 172:     }
  8241  004E8E  EF59  F027         	goto	l1035
  8242  004E92                     l1028:
  8243                           
  8244                           ;MCAL/I2C/mcal_i2c.c: 174:     {;MCAL/I2C/mcal_i2c.c: 176:         SSPCON2bits.PEN = 1;
  8245  004E92  84C5               	bsf	197,2,c	;volatile
  8246  004E94                     l1030:
  8247  004E94  B4C5               	btfsc	197,2,c	;volatile
  8248  004E96  EF4F  F027         	goto	u10731
  8249  004E9A  EF51  F027         	goto	u10730
  8250  004E9E                     u10731:
  8251  004E9E  EF4A  F027         	goto	l1030
  8252  004EA2                     u10730:
  8253  004EA2                     
  8254                           ;MCAL/I2C/mcal_i2c.c: 180:         PIR1bits.SSPIF = 0;
  8255  004EA2  969E               	bcf	158,3,c	;volatile
  8256                           
  8257                           ;MCAL/I2C/mcal_i2c.c: 182:         if(1 == SSPSTATbits.P)
  8258  004EA4  A8C7               	btfss	199,4,c	;volatile
  8259  004EA6  EF57  F027         	goto	u10741
  8260  004EAA  EF59  F027         	goto	u10740
  8261  004EAE                     u10741:
  8262  004EAE  EF47  F027         	goto	l10276
  8263  004EB2                     u10740:
  8264  004EB2                     l1035:
  8265  004EB2  0012               	return		;funcret
  8266  004EB4                     __end_of_MSSP_I2C_Master_Send_Stop:
  8267                           	callstack 0
  8268                           
  8269 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
  8270 ;; Defined at:
  8271 ;;		line 116 in file "MCAL/I2C/mcal_i2c.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  8274 ;;		 -> i2c_obj(7), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  ERRORSTATUS     1    0        unsigned char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      unsigned char 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;Total ram usage:        2 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 8
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_PCA_Write_Reg
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text42
  8301  004EB4                     __ptext42:
  8302                           	callstack 0
  8303  004EB4                     _MSSP_I2C_Master_Send_Start:
  8304                           	callstack 19
  8305  004EB4                     
  8306                           ;MCAL/I2C/mcal_i2c.c: 119:     if (((void*)0)==i2c_obj)
  8307  004EB4  501E               	movf	MSSP_I2C_Master_Send_Start@i2c_obj^0,w,c
  8308  004EB6  101F               	iorwf	(MSSP_I2C_Master_Send_Start@i2c_obj+1)^0,w,c
  8309  004EB8  A4D8               	btfss	status,2,c
  8310  004EBA  EF61  F027         	goto	u10651
  8311  004EBE  EF63  F027         	goto	u10650
  8312  004EC2                     u10651:
  8313  004EC2  EF65  F027         	goto	l1010
  8314  004EC6                     u10650:
  8315  004EC6                     l10250:
  8316                           
  8317                           ;MCAL/I2C/mcal_i2c.c: 122:     }
  8318  004EC6  EF75  F027         	goto	l1017
  8319  004ECA                     l1010:
  8320                           
  8321                           ;MCAL/I2C/mcal_i2c.c: 124:     {;MCAL/I2C/mcal_i2c.c: 126:         SSPCON2bits.SEN = 1;
  8322  004ECA  80C5               	bsf	197,0,c	;volatile
  8323  004ECC                     l1012:
  8324  004ECC  B0C5               	btfsc	197,0,c	;volatile
  8325  004ECE  EF6B  F027         	goto	u10661
  8326  004ED2  EF6D  F027         	goto	u10660
  8327  004ED6                     u10661:
  8328  004ED6  EF66  F027         	goto	l1012
  8329  004EDA                     u10660:
  8330  004EDA                     
  8331                           ;MCAL/I2C/mcal_i2c.c: 130:         PIR1bits.SSPIF = 0;
  8332  004EDA  969E               	bcf	158,3,c	;volatile
  8333                           
  8334                           ;MCAL/I2C/mcal_i2c.c: 132:         if(1 == SSPSTATbits.S)
  8335  004EDC  A6C7               	btfss	199,3,c	;volatile
  8336  004EDE  EF73  F027         	goto	u10671
  8337  004EE2  EF75  F027         	goto	u10670
  8338  004EE6                     u10671:
  8339  004EE6  EF63  F027         	goto	l10250
  8340  004EEA                     u10670:
  8341  004EEA                     l1017:
  8342  004EEA  0012               	return		;funcret
  8343  004EEC                     __end_of_MSSP_I2C_Master_Send_Start:
  8344                           	callstack 0
  8345                           
  8346 ;; *************** function _Robot_Steer_Stop *****************
  8347 ;; Defined at:
  8348 ;;		line 193 in file "Robot/Navigation/robot_navigation.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  ret_val         1    0        unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used: 1
  8368 ;; Hardware stack levels required when called: 10
  8369 ;; This function calls:
  8370 ;;		_CCP_PWM_Set_Duty
  8371 ;; This function is called by:
  8372 ;;		_Robot_Move_Forward
  8373 ;;		_Robot_Move_Backward
  8374 ;;		_Robot_Steer_Right_Forward
  8375 ;;		_Robot_Steer_Left_Forward
  8376 ;;		_Robot_Steer_Right_Backward
  8377 ;;		_Robot_Steer_Left_Backward
  8378 ;;		_main
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text43
  8383  0050CC                     __ptext43:
  8384                           	callstack 0
  8385  0050CC                     _Robot_Steer_Stop:
  8386                           	callstack 20
  8387  0050CC                     
  8388                           ;Robot/Navigation/robot_navigation.c: 196:             CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  8389  0050CC  0E22               	movlw	low _CCP1_Obj
  8390  0050CE  0101               	movlb	1	; () banked
  8391  0050D0  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8392  0050D2  0E01               	movlw	high _CCP1_Obj
  8393  0050D4  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8394  0050D6  0E00               	movlw	0
  8395  0050D8  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8396  0050DA  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  8397  0050DE                     
  8398                           ;Robot/Navigation/robot_navigation.c: 197:             CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  8399  0050DE  0E16               	movlw	low _CCP2_Obj
  8400  0050E0  0101               	movlb	1	; () banked
  8401  0050E2  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8402  0050E4  0E01               	movlw	high _CCP2_Obj
  8403  0050E6  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8404  0050E8  0E00               	movlw	0
  8405  0050EA  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8406  0050EC  ECA5  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  8407  0050F0  0012               	return		;funcret
  8408  0050F2                     __end_of_Robot_Steer_Stop:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _CCP_PWM_Set_Duty *****************
  8412 ;; Defined at:
  8413 ;;		line 176 in file "MCAL/CCP/hal_ccp.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  _ccp_obj        2    8[BANK1 ] PTR const struct .
  8416 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  8417 ;;  _duty           1   10[BANK1 ] const unsigned char 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;  l_duty_temp     2   17[BANK1 ] unsigned short 
  8420 ;;  ret             1    0        unsigned char 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      unsigned char 
  8423 ;; Registers used:
  8424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8430 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;Total ram usage:       11 bytes
  8435 ;; Hardware stack levels used: 1
  8436 ;; Hardware stack levels required when called: 9
  8437 ;; This function calls:
  8438 ;;		___fldiv
  8439 ;;		___flmul
  8440 ;;		___fltol
  8441 ;;		___xxtofl
  8442 ;; This function is called by:
  8443 ;;		_Robot_Nav_Init
  8444 ;;		_Robot_Move_Forward
  8445 ;;		_Robot_Move_Backward
  8446 ;;		_Robot_Steer_Right_Forward
  8447 ;;		_Robot_Steer_Left_Forward
  8448 ;;		_Robot_Steer_Right_Backward
  8449 ;;		_Robot_Steer_Left_Backward
  8450 ;;		_Robot_Steer_Stop
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text44
  8455  00294A                     __ptext44:
  8456                           	callstack 0
  8457  00294A                     _CCP_PWM_Set_Duty:
  8458                           	callstack 19
  8459  00294A                     
  8460                           ;MCAL/CCP/hal_ccp.c: 178:     uint16 l_duty_temp = 0;
  8461  00294A  0E00               	movlw	0
  8462  00294C  0101               	movlb	1	; () banked
  8463  00294E  6F63               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)& (0+255),b
  8464  002950  0E00               	movlw	0
  8465  002952  6F62               	movwf	CCP_PWM_Set_Duty@l_duty_temp& (0+255),b
  8466  002954                     
  8467                           ; BSR set to: 1
  8468                           ;MCAL/CCP/hal_ccp.c: 180:     if(((void*)0) == _ccp_obj){
  8469  002954  5159               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  8470  002956  115A               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  8471  002958  A4D8               	btfss	status,2,c
  8472  00295A  EFB1  F014         	goto	u11471
  8473  00295E  EFB3  F014         	goto	u11470
  8474  002962                     u11471:
  8475  002962  EFB5  F014         	goto	l10722
  8476  002966                     u11470:
  8477  002966                     
  8478                           ; BSR set to: 1
  8479                           ;MCAL/CCP/hal_ccp.c: 182:     }
  8480  002966  EF68  F015         	goto	l534
  8481  00296A                     l10722:
  8482                           
  8483                           ; BSR set to: 1
  8484                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
  8485  00296A  0E00               	movlw	0
  8486  00296C  0100               	movlb	0	; () banked
  8487  00296E  6F6A               	movwf	___fldiv@a& (0+255),b
  8488  002970  0E00               	movlw	0
  8489  002972  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  8490  002974  0EC8               	movlw	200
  8491  002976  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  8492  002978  0E42               	movlw	66
  8493  00297A  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  8494  00297C  0101               	movlb	1	; () banked
  8495  00297E  515B               	movf	CCP_PWM_Set_Duty@_duty& (0+255),w,b
  8496  002980  6E1E               	movwf	___xxtofl@val^0,c
  8497  002982  6A1F               	clrf	(___xxtofl@val+1)^0,c
  8498  002984  6A20               	clrf	(___xxtofl@val+2)^0,c
  8499  002986  6A21               	clrf	(___xxtofl@val+3)^0,c
  8500  002988  0E01               	movlw	1
  8501  00298A  ECC9  F013         	call	___xxtofl
  8502  00298E  C01E  F066         	movff	?___xxtofl,___fldiv@b
  8503  002992  C01F  F067         	movff	?___xxtofl+1,___fldiv@b+1
  8504  002996  C020  F068         	movff	?___xxtofl+2,___fldiv@b+2
  8505  00299A  C021  F069         	movff	?___xxtofl+3,___fldiv@b+3
  8506  00299E  EC77  F00E         	call	___fldiv	;wreg free
  8507  0029A2  C066  F083         	movff	?___fldiv,___flmul@a
  8508  0029A6  C067  F084         	movff	?___fldiv+1,___flmul@a+1
  8509  0029AA  C068  F085         	movff	?___fldiv+2,___flmul@a+2
  8510  0029AE  C069  F086         	movff	?___fldiv+3,___flmul@a+3
  8511  0029B2  50CB               	movf	203,w,c	;volatile
  8512  0029B4  0101               	movlb	1	; () banked
  8513  0029B6  6F5C               	movwf	??_CCP_PWM_Set_Duty& (0+255),b
  8514  0029B8  6B5D               	clrf	(??_CCP_PWM_Set_Duty+1)& (0+255),b
  8515  0029BA  0E01               	movlw	1
  8516  0029BC  275C               	addwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8517  0029BE  0E00               	movlw	0
  8518  0029C0  235D               	addwfc	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8519  0029C2  C15C  F01E         	movff	??_CCP_PWM_Set_Duty,___xxtofl@val
  8520  0029C6  C15D  F01F         	movff	??_CCP_PWM_Set_Duty+1,___xxtofl@val+1
  8521  0029CA  0E00               	movlw	0
  8522  0029CC  BE1F               	btfsc	(___xxtofl@val+1)^0,7,c
  8523  0029CE  0EFF               	movlw	-1
  8524  0029D0  6E20               	movwf	(___xxtofl@val+2)^0,c
  8525  0029D2  6E21               	movwf	(___xxtofl@val+3)^0,c
  8526  0029D4  0E01               	movlw	1
  8527  0029D6  ECC9  F013         	call	___xxtofl
  8528  0029DA  C01E  F07F         	movff	?___xxtofl,___flmul@b
  8529  0029DE  C01F  F080         	movff	?___xxtofl+1,___flmul@b+1
  8530  0029E2  C020  F081         	movff	?___xxtofl+2,___flmul@b+2
  8531  0029E6  C021  F082         	movff	?___xxtofl+3,___flmul@b+3
  8532  0029EA  EC85  F00A         	call	___flmul	;wreg free
  8533  0029EE  C07F  F15E         	movff	?___flmul,_CCP_PWM_Set_Duty$5752
  8534  0029F2  C080  F15F         	movff	?___flmul+1,_CCP_PWM_Set_Duty$5752+1
  8535  0029F6  C081  F160         	movff	?___flmul+2,_CCP_PWM_Set_Duty$5752+2
  8536  0029FA  C082  F161         	movff	?___flmul+3,_CCP_PWM_Set_Duty$5752+3
  8537                           
  8538                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
  8539  0029FE  0E00               	movlw	0
  8540  002A00  0100               	movlb	0	; () banked
  8541  002A02  6F83               	movwf	___flmul@a& (0+255),b
  8542  002A04  0E00               	movlw	0
  8543  002A06  6F84               	movwf	(___flmul@a+1)& (0+255),b
  8544  002A08  0E80               	movlw	128
  8545  002A0A  6F85               	movwf	(___flmul@a+2)& (0+255),b
  8546  002A0C  0E40               	movlw	64
  8547  002A0E  6F86               	movwf	(___flmul@a+3)& (0+255),b
  8548  002A10  C15E  F07F         	movff	_CCP_PWM_Set_Duty$5752,___flmul@b
  8549  002A14  C15F  F080         	movff	_CCP_PWM_Set_Duty$5752+1,___flmul@b+1
  8550  002A18  C160  F081         	movff	_CCP_PWM_Set_Duty$5752+2,___flmul@b+2
  8551  002A1C  C161  F082         	movff	_CCP_PWM_Set_Duty$5752+3,___flmul@b+3
  8552  002A20  EC85  F00A         	call	___flmul	;wreg free
  8553  002A24  C07F  F151         	movff	?___flmul,___fltol@f1
  8554  002A28  C080  F152         	movff	?___flmul+1,___fltol@f1+1
  8555  002A2C  C081  F153         	movff	?___flmul+2,___fltol@f1+2
  8556  002A30  C082  F154         	movff	?___flmul+3,___fltol@f1+3
  8557  002A34  ECEB  F019         	call	___fltol	;wreg free
  8558  002A38  C151  F162         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
  8559  002A3C  C152  F163         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
  8560  002A40                     
  8561                           ;MCAL/CCP/hal_ccp.c: 186:         if(CCP1_INST == _ccp_obj->ccp_inst){
  8562  002A40  C159  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  8563  002A44  C15A  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  8564  002A48  50DF               	movf	indf2,w,c
  8565  002A4A  A4D8               	btfss	status,2,c
  8566  002A4C  EF2A  F015         	goto	u11481
  8567  002A50  EF2C  F015         	goto	u11480
  8568  002A54                     u11481:
  8569  002A54  EF45  F015         	goto	l10728
  8570  002A58                     u11480:
  8571  002A58                     
  8572                           ;MCAL/CCP/hal_ccp.c: 187:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
  8573  002A58  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8574  002A5C  0E03               	movlw	3
  8575  002A5E  0101               	movlb	1	; () banked
  8576  002A60  175C               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8577  002A62  3B5C               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8578  002A64  50BD               	movf	189,w,c	;volatile
  8579  002A66  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8580  002A68  0BCF               	andlw	-49
  8581  002A6A  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8582  002A6C  6EBD               	movwf	189,c	;volatile
  8583                           
  8584                           ;MCAL/CCP/hal_ccp.c: 188:             CCPR1L = (uint8)(l_duty_temp >> 2);
  8585  002A6E  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8586  002A72  C163  F15D         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  8587  002A76  90D8               	bcf	status,0,c
  8588  002A78  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8589  002A7A  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8590  002A7C  90D8               	bcf	status,0,c
  8591  002A7E  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8592  002A80  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8593  002A82  515C               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8594  002A84  6EBE               	movwf	190,c	;volatile
  8595                           
  8596                           ;MCAL/CCP/hal_ccp.c: 189:         }
  8597  002A86  EF68  F015         	goto	l10732
  8598  002A8A                     l10728:
  8599  002A8A  C159  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  8600  002A8E  C15A  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  8601  002A92  04DE               	decf	postinc2,w,c
  8602  002A94  A4D8               	btfss	status,2,c
  8603  002A96  EF4F  F015         	goto	u11491
  8604  002A9A  EF51  F015         	goto	u11490
  8605  002A9E                     u11491:
  8606  002A9E  EF68  F015         	goto	l10732
  8607  002AA2                     u11490:
  8608  002AA2                     
  8609                           ;MCAL/CCP/hal_ccp.c: 191:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003);
  8610  002AA2  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8611  002AA6  0E03               	movlw	3
  8612  002AA8  0101               	movlb	1	; () banked
  8613  002AAA  175C               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8614  002AAC  3B5C               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8615  002AAE  50BA               	movf	186,w,c	;volatile
  8616  002AB0  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8617  002AB2  0BCF               	andlw	-49
  8618  002AB4  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8619  002AB6  6EBA               	movwf	186,c	;volatile
  8620                           
  8621                           ;MCAL/CCP/hal_ccp.c: 192:             CCPR2L = (uint8)(l_duty_temp >> 2);
  8622  002AB8  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8623  002ABC  C163  F15D         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  8624  002AC0  90D8               	bcf	status,0,c
  8625  002AC2  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8626  002AC4  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8627  002AC6  90D8               	bcf	status,0,c
  8628  002AC8  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8629  002ACA  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8630  002ACC  515C               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8631  002ACE  6EBB               	movwf	187,c	;volatile
  8632  002AD0                     l10732:
  8633  002AD0                     l534:
  8634  002AD0  0012               	return		;funcret
  8635  002AD2                     __end_of_CCP_PWM_Set_Duty:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function ___fltol *****************
  8639 ;; Defined at:
  8640 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  f1              4    0[BANK1 ] unsigned char 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  exp1            1   73[BANK0 ] unsigned char 
  8645 ;;  sign1           1   72[BANK0 ] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  4    0[BANK1 ] long 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8655 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8657 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8659 ;;Total ram usage:       10 bytes
  8660 ;; Hardware stack levels used: 1
  8661 ;; Hardware stack levels required when called: 8
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_Servo_SetAngle
  8666 ;;		_CCP_PWM_Set_Duty
  8667 ;;		_async_config_baud_rate_gen
  8668 ;;		_I2C_Master_Mode_Clock_Configurations
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text45
  8673  0033D6                     __ptext45:
  8674                           	callstack 0
  8675  0033D6                     ___fltol:
  8676                           	callstack 20
  8677  0033D6  0101               	movlb	1	; () banked
  8678  0033D8  3553               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8679  0033DA  3554               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8680  0033DC  0100               	movlb	0	; () banked
  8681  0033DE  6FA9               	movwf	___fltol@exp1& (0+255),b
  8682  0033E0  51A9               	movf	___fltol@exp1& (0+255),w,b
  8683  0033E2  A4D8               	btfss	status,2,c
  8684  0033E4  EFF6  F019         	goto	u10441
  8685  0033E8  EFF8  F019         	goto	u10440
  8686  0033EC                     u10441:
  8687  0033EC  EF03  F01A         	goto	l10138
  8688  0033F0                     u10440:
  8689  0033F0                     l10134:
  8690                           
  8691                           ; BSR set to: 0
  8692  0033F0  0E00               	movlw	0
  8693  0033F2  0101               	movlb	1	; () banked
  8694  0033F4  6F51               	movwf	?___fltol& (0+255),b
  8695  0033F6  0E00               	movlw	0
  8696  0033F8  6F52               	movwf	(?___fltol+1)& (0+255),b
  8697  0033FA  0E00               	movlw	0
  8698  0033FC  6F53               	movwf	(?___fltol+2)& (0+255),b
  8699  0033FE  0E00               	movlw	0
  8700  003400  6F54               	movwf	(?___fltol+3)& (0+255),b
  8701  003402  EF79  F01A         	goto	l2289
  8702  003406                     l10138:
  8703                           
  8704                           ; BSR set to: 0
  8705  003406  C151  F155         	movff	___fltol@f1,??___fltol
  8706  00340A  C152  F156         	movff	___fltol@f1+1,??___fltol+1
  8707  00340E  C153  F157         	movff	___fltol@f1+2,??___fltol+2
  8708  003412  C154  F158         	movff	___fltol@f1+3,??___fltol+3
  8709  003416  0E20               	movlw	32
  8710  003418  EF14  F01A         	goto	u10450
  8711  00341C                     u10455:
  8712  00341C  0101               	movlb	1	; () banked
  8713  00341E  90D8               	bcf	status,0,c
  8714  003420  3358               	rrcf	(??___fltol+3)& (0+255),f,b
  8715  003422  3357               	rrcf	(??___fltol+2)& (0+255),f,b
  8716  003424  3356               	rrcf	(??___fltol+1)& (0+255),f,b
  8717  003426  3355               	rrcf	??___fltol& (0+255),f,b
  8718  003428                     u10450:
  8719  003428  2EE8               	decfsz	wreg,f,c
  8720  00342A  EF0E  F01A         	goto	u10455
  8721  00342E  5155               	movf	??___fltol& (0+255),w,b
  8722  003430  0100               	movlb	0	; () banked
  8723  003432  6FA8               	movwf	___fltol@sign1& (0+255),b
  8724  003434                     
  8725                           ; BSR set to: 0
  8726  003434  0101               	movlb	1	; () banked
  8727  003436  8F53               	bsf	(___fltol@f1+2)& (0+255),7,b
  8728  003438                     
  8729                           ; BSR set to: 1
  8730  003438  0EFF               	movlw	255
  8731  00343A  1751               	andwf	___fltol@f1& (0+255),f,b
  8732  00343C  0EFF               	movlw	255
  8733  00343E  1752               	andwf	(___fltol@f1+1)& (0+255),f,b
  8734  003440  0EFF               	movlw	255
  8735  003442  1753               	andwf	(___fltol@f1+2)& (0+255),f,b
  8736  003444  0E00               	movlw	0
  8737  003446  1754               	andwf	(___fltol@f1+3)& (0+255),f,b
  8738  003448                     
  8739                           ; BSR set to: 1
  8740  003448  0E96               	movlw	150
  8741  00344A  0100               	movlb	0	; () banked
  8742  00344C  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  8743  00344E                     
  8744                           ; BSR set to: 0
  8745  00344E  BFA9               	btfsc	___fltol@exp1& (0+255),7,b
  8746  003450  EF2E  F01A         	goto	u10460
  8747  003454  EF2C  F01A         	goto	u10461
  8748  003458                     u10461:
  8749  003458  EF46  F01A         	goto	l10158
  8750  00345C                     u10460:
  8751  00345C                     
  8752                           ; BSR set to: 0
  8753  00345C  51A9               	movf	___fltol@exp1& (0+255),w,b
  8754  00345E  0A80               	xorlw	128
  8755  003460  0F97               	addlw	151
  8756  003462  B0D8               	btfsc	status,0,c
  8757  003464  EF36  F01A         	goto	u10471
  8758  003468  EF38  F01A         	goto	u10470
  8759  00346C                     u10471:
  8760  00346C  EF3A  F01A         	goto	l10154
  8761  003470                     u10470:
  8762  003470  EFF8  F019         	goto	l10134
  8763  003474                     l10154:
  8764                           
  8765                           ; BSR set to: 0
  8766  003474  0101               	movlb	1	; () banked
  8767  003476  90D8               	bcf	status,0,c
  8768  003478  3354               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8769  00347A  3353               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8770  00347C  3352               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8771  00347E  3351               	rrcf	___fltol@f1& (0+255),f,b
  8772  003480                     
  8773                           ; BSR set to: 1
  8774  003480  0100               	movlb	0	; () banked
  8775  003482  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  8776  003484  EF3A  F01A         	goto	l10154
  8777  003488  EF60  F01A         	goto	l10168
  8778  00348C                     l10158:
  8779                           
  8780                           ; BSR set to: 0
  8781  00348C  0E1F               	movlw	31
  8782  00348E  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  8783  003490  EF4C  F01A         	goto	u10481
  8784  003494  EF4E  F01A         	goto	u10480
  8785  003498                     u10481:
  8786  003498  EF58  F01A         	goto	l10166
  8787  00349C                     u10480:
  8788  00349C  EFF8  F019         	goto	l10134
  8789  0034A0                     l10164:
  8790                           
  8791                           ; BSR set to: 0
  8792  0034A0  0101               	movlb	1	; () banked
  8793  0034A2  90D8               	bcf	status,0,c
  8794  0034A4  3751               	rlcf	___fltol@f1& (0+255),f,b
  8795  0034A6  3752               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8796  0034A8  3753               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8797  0034AA  3754               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8798  0034AC  0100               	movlb	0	; () banked
  8799  0034AE  07A9               	decf	___fltol@exp1& (0+255),f,b
  8800  0034B0                     l10166:
  8801                           
  8802                           ; BSR set to: 0
  8803  0034B0  51A9               	movf	___fltol@exp1& (0+255),w,b
  8804  0034B2  A4D8               	btfss	status,2,c
  8805  0034B4  EF5E  F01A         	goto	u10491
  8806  0034B8  EF60  F01A         	goto	u10490
  8807  0034BC                     u10491:
  8808  0034BC  EF50  F01A         	goto	l10164
  8809  0034C0                     u10490:
  8810  0034C0                     l10168:
  8811                           
  8812                           ; BSR set to: 0
  8813  0034C0  51A8               	movf	___fltol@sign1& (0+255),w,b
  8814  0034C2  B4D8               	btfsc	status,2,c
  8815  0034C4  EF66  F01A         	goto	u10501
  8816  0034C8  EF68  F01A         	goto	u10500
  8817  0034CC                     u10501:
  8818  0034CC  EF71  F01A         	goto	l10172
  8819  0034D0                     u10500:
  8820  0034D0                     
  8821                           ; BSR set to: 0
  8822  0034D0  0101               	movlb	1	; () banked
  8823  0034D2  1F54               	comf	(___fltol@f1+3)& (0+255),f,b
  8824  0034D4  1F53               	comf	(___fltol@f1+2)& (0+255),f,b
  8825  0034D6  1F52               	comf	(___fltol@f1+1)& (0+255),f,b
  8826  0034D8  6D51               	negf	___fltol@f1& (0+255),b
  8827  0034DA  0E00               	movlw	0
  8828  0034DC  2352               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8829  0034DE  2353               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8830  0034E0  2354               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8831  0034E2                     l10172:
  8832  0034E2  C151  F151         	movff	___fltol@f1,?___fltol
  8833  0034E6  C152  F152         	movff	___fltol@f1+1,?___fltol+1
  8834  0034EA  C153  F153         	movff	___fltol@f1+2,?___fltol+2
  8835  0034EE  C154  F154         	movff	___fltol@f1+3,?___fltol+3
  8836  0034F2                     l2289:
  8837  0034F2  0012               	return		;funcret
  8838  0034F4                     __end_of___fltol:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function ___flmul *****************
  8842 ;; Defined at:
  8843 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  b               4   31[BANK0 ] long 
  8846 ;;  a               4   35[BANK0 ] long 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  prod            4   50[BANK0 ] struct .
  8849 ;;  grs             4   45[BANK0 ] unsigned long 
  8850 ;;  temp            2   54[BANK0 ] struct .
  8851 ;;  bexp            1   49[BANK0 ] unsigned char 
  8852 ;;  aexp            1   44[BANK0 ] unsigned char 
  8853 ;;  sign            1   43[BANK0 ] unsigned char 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  4   31[BANK0 ] unsigned char 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0, prodl, prodh
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8863 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8867 ;;Total ram usage:       25 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; Hardware stack levels required when called: 8
  8870 ;; This function calls:
  8871 ;;		Nothing
  8872 ;; This function is called by:
  8873 ;;		_Servo_SetAngle
  8874 ;;		_CCP_PWM_Set_Duty
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text46
  8879  00150A                     __ptext46:
  8880                           	callstack 0
  8881  00150A                     ___flmul:
  8882                           	callstack 20
  8883  00150A  0100               	movlb	0	; () banked
  8884  00150C  5182               	movf	(___flmul@b+3)& (0+255),w,b
  8885  00150E  0B80               	andlw	128
  8886  001510  6F8B               	movwf	___flmul@sign& (0+255),b
  8887  001512  5182               	movf	(___flmul@b+3)& (0+255),w,b
  8888  001514  2582               	addwf	(___flmul@b+3)& (0+255),w,b
  8889  001516  6F91               	movwf	___flmul@bexp& (0+255),b
  8890  001518                     
  8891                           ; BSR set to: 0
  8892  001518  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
  8893  00151A  EF91  F00A         	goto	u11041
  8894  00151E  EF93  F00A         	goto	u11040
  8895  001522                     u11041:
  8896  001522  EF94  F00A         	goto	l10476
  8897  001526                     u11040:
  8898  001526                     
  8899                           ; BSR set to: 0
  8900  001526  8191               	bsf	___flmul@bexp& (0+255),0,b
  8901  001528                     l10476:
  8902                           
  8903                           ; BSR set to: 0
  8904  001528  5191               	movf	___flmul@bexp& (0+255),w,b
  8905  00152A  B4D8               	btfsc	status,2,c
  8906  00152C  EF9A  F00A         	goto	u11051
  8907  001530  EF9C  F00A         	goto	u11050
  8908  001534                     u11051:
  8909  001534  EFAF  F00A         	goto	l10484
  8910  001538                     u11050:
  8911  001538                     
  8912                           ; BSR set to: 0
  8913  001538  2991               	incf	___flmul@bexp& (0+255),w,b
  8914  00153A  A4D8               	btfss	status,2,c
  8915  00153C  EFA2  F00A         	goto	u11061
  8916  001540  EFA4  F00A         	goto	u11060
  8917  001544                     u11061:
  8918  001544  EFAC  F00A         	goto	l10482
  8919  001548                     u11060:
  8920  001548                     
  8921                           ; BSR set to: 0
  8922  001548  0E00               	movlw	0
  8923  00154A  6F7F               	movwf	___flmul@b& (0+255),b
  8924  00154C  0E00               	movlw	0
  8925  00154E  6F80               	movwf	(___flmul@b+1)& (0+255),b
  8926  001550  0E00               	movlw	0
  8927  001552  6F81               	movwf	(___flmul@b+2)& (0+255),b
  8928  001554  0E00               	movlw	0
  8929  001556  6F82               	movwf	(___flmul@b+3)& (0+255),b
  8930  001558                     l10482:
  8931                           
  8932                           ; BSR set to: 0
  8933  001558  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
  8934  00155A  EFB7  F00A         	goto	l10486
  8935  00155E                     l10484:
  8936                           
  8937                           ; BSR set to: 0
  8938  00155E  0E00               	movlw	0
  8939  001560  6F7F               	movwf	___flmul@b& (0+255),b
  8940  001562  0E00               	movlw	0
  8941  001564  6F80               	movwf	(___flmul@b+1)& (0+255),b
  8942  001566  0E00               	movlw	0
  8943  001568  6F81               	movwf	(___flmul@b+2)& (0+255),b
  8944  00156A  0E00               	movlw	0
  8945  00156C  6F82               	movwf	(___flmul@b+3)& (0+255),b
  8946  00156E                     l10486:
  8947                           
  8948                           ; BSR set to: 0
  8949  00156E  5186               	movf	(___flmul@a+3)& (0+255),w,b
  8950  001570  0B80               	andlw	128
  8951  001572  1B8B               	xorwf	___flmul@sign& (0+255),f,b
  8952  001574                     
  8953                           ; BSR set to: 0
  8954  001574  5186               	movf	(___flmul@a+3)& (0+255),w,b
  8955  001576  2586               	addwf	(___flmul@a+3)& (0+255),w,b
  8956  001578  6F8C               	movwf	___flmul@aexp& (0+255),b
  8957  00157A                     
  8958                           ; BSR set to: 0
  8959  00157A  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
  8960  00157C  EFC2  F00A         	goto	u11071
  8961  001580  EFC4  F00A         	goto	u11070
  8962  001584                     u11071:
  8963  001584  EFC5  F00A         	goto	l10494
  8964  001588                     u11070:
  8965  001588                     
  8966                           ; BSR set to: 0
  8967  001588  818C               	bsf	___flmul@aexp& (0+255),0,b
  8968  00158A                     l10494:
  8969                           
  8970                           ; BSR set to: 0
  8971  00158A  518C               	movf	___flmul@aexp& (0+255),w,b
  8972  00158C  B4D8               	btfsc	status,2,c
  8973  00158E  EFCB  F00A         	goto	u11081
  8974  001592  EFCD  F00A         	goto	u11080
  8975  001596                     u11081:
  8976  001596  EFE0  F00A         	goto	l10502
  8977  00159A                     u11080:
  8978  00159A                     
  8979                           ; BSR set to: 0
  8980  00159A  298C               	incf	___flmul@aexp& (0+255),w,b
  8981  00159C  A4D8               	btfss	status,2,c
  8982  00159E  EFD3  F00A         	goto	u11091
  8983  0015A2  EFD5  F00A         	goto	u11090
  8984  0015A6                     u11091:
  8985  0015A6  EFDD  F00A         	goto	l10500
  8986  0015AA                     u11090:
  8987  0015AA                     
  8988                           ; BSR set to: 0
  8989  0015AA  0E00               	movlw	0
  8990  0015AC  6F83               	movwf	___flmul@a& (0+255),b
  8991  0015AE  0E00               	movlw	0
  8992  0015B0  6F84               	movwf	(___flmul@a+1)& (0+255),b
  8993  0015B2  0E00               	movlw	0
  8994  0015B4  6F85               	movwf	(___flmul@a+2)& (0+255),b
  8995  0015B6  0E00               	movlw	0
  8996  0015B8  6F86               	movwf	(___flmul@a+3)& (0+255),b
  8997  0015BA                     l10500:
  8998                           
  8999                           ; BSR set to: 0
  9000  0015BA  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
  9001  0015BC  EFE8  F00A         	goto	l2606
  9002  0015C0                     l10502:
  9003                           
  9004                           ; BSR set to: 0
  9005  0015C0  0E00               	movlw	0
  9006  0015C2  6F83               	movwf	___flmul@a& (0+255),b
  9007  0015C4  0E00               	movlw	0
  9008  0015C6  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9009  0015C8  0E00               	movlw	0
  9010  0015CA  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9011  0015CC  0E00               	movlw	0
  9012  0015CE  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9013  0015D0                     l2606:
  9014                           
  9015                           ; BSR set to: 0
  9016  0015D0  518C               	movf	___flmul@aexp& (0+255),w,b
  9017  0015D2  B4D8               	btfsc	status,2,c
  9018  0015D4  EFEE  F00A         	goto	u11101
  9019  0015D8  EFF0  F00A         	goto	u11100
  9020  0015DC                     u11101:
  9021  0015DC  EFF8  F00A         	goto	l10506
  9022  0015E0                     u11100:
  9023  0015E0                     
  9024                           ; BSR set to: 0
  9025  0015E0  5191               	movf	___flmul@bexp& (0+255),w,b
  9026  0015E2  A4D8               	btfss	status,2,c
  9027  0015E4  EFF6  F00A         	goto	u11111
  9028  0015E8  EFF8  F00A         	goto	u11110
  9029  0015EC                     u11111:
  9030  0015EC  EF02  F00B         	goto	l10510
  9031  0015F0                     u11110:
  9032  0015F0                     l10506:
  9033                           
  9034                           ; BSR set to: 0
  9035  0015F0  0E00               	movlw	0
  9036  0015F2  6F7F               	movwf	?___flmul& (0+255),b
  9037  0015F4  0E00               	movlw	0
  9038  0015F6  6F80               	movwf	(?___flmul+1)& (0+255),b
  9039  0015F8  0E00               	movlw	0
  9040  0015FA  6F81               	movwf	(?___flmul+2)& (0+255),b
  9041  0015FC  0E00               	movlw	0
  9042  0015FE  6F82               	movwf	(?___flmul+3)& (0+255),b
  9043  001600  EF9A  F00C         	goto	l2610
  9044  001604                     l10510:
  9045                           
  9046                           ; BSR set to: 0
  9047  001604  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9048  001606  037F               	mulwf	___flmul@b& (0+255),b
  9049  001608  CFF3 F096          	movff	prodl,___flmul@temp
  9050  00160C  CFF4 F097          	movff	prodh,___flmul@temp+1
  9051  001610                     
  9052                           ; BSR set to: 0
  9053  001610  5196               	movf	___flmul@temp& (0+255),w,b
  9054  001612  6F8D               	movwf	___flmul@grs& (0+255),b
  9055  001614  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
  9056  001616  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
  9057  001618  6B90               	clrf	(___flmul@grs+3)& (0+255),b
  9058  00161A                     
  9059                           ; BSR set to: 0
  9060  00161A  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9061  00161C  6F92               	movwf	___flmul@prod& (0+255),b
  9062  00161E  6B93               	clrf	(___flmul@prod+1)& (0+255),b
  9063  001620  6B94               	clrf	(___flmul@prod+2)& (0+255),b
  9064  001622  6B95               	clrf	(___flmul@prod+3)& (0+255),b
  9065  001624  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9066  001626  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9067  001628  CFF3 F096          	movff	prodl,___flmul@temp
  9068  00162C  CFF4 F097          	movff	prodh,___flmul@temp+1
  9069  001630                     
  9070                           ; BSR set to: 0
  9071  001630  5196               	movf	___flmul@temp& (0+255),w,b
  9072  001632  278D               	addwf	___flmul@grs& (0+255),f,b
  9073  001634  0E00               	movlw	0
  9074  001636  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9075  001638  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9076  00163A  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9077  00163C                     
  9078                           ; BSR set to: 0
  9079  00163C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9080  00163E  2792               	addwf	___flmul@prod& (0+255),f,b
  9081  001640  0E00               	movlw	0
  9082  001642  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9083  001644  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9084  001646  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9085  001648  5183               	movf	___flmul@a& (0+255),w,b
  9086  00164A  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9087  00164C  CFF3 F096          	movff	prodl,___flmul@temp
  9088  001650  CFF4 F097          	movff	prodh,___flmul@temp+1
  9089  001654                     
  9090                           ; BSR set to: 0
  9091  001654  5196               	movf	___flmul@temp& (0+255),w,b
  9092  001656  278D               	addwf	___flmul@grs& (0+255),f,b
  9093  001658  0E00               	movlw	0
  9094  00165A  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9095  00165C  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9096  00165E  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9097  001660                     
  9098                           ; BSR set to: 0
  9099  001660  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9100  001662  2792               	addwf	___flmul@prod& (0+255),f,b
  9101  001664  0E00               	movlw	0
  9102  001666  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9103  001668  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9104  00166A  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9105  00166C                     
  9106                           ; BSR set to: 0
  9107  00166C  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9108  001670  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9109  001674  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9110  001678  6B8D               	clrf	___flmul@grs& (0+255),b
  9111  00167A                     
  9112                           ; BSR set to: 0
  9113  00167A  5183               	movf	___flmul@a& (0+255),w,b
  9114  00167C  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9115  00167E  CFF3 F096          	movff	prodl,___flmul@temp
  9116  001682  CFF4 F097          	movff	prodh,___flmul@temp+1
  9117  001686                     
  9118                           ; BSR set to: 0
  9119  001686  5196               	movf	___flmul@temp& (0+255),w,b
  9120  001688  278D               	addwf	___flmul@grs& (0+255),f,b
  9121  00168A  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9122  00168C  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9123  00168E  0E00               	movlw	0
  9124  001690  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9125  001692  0E00               	movlw	0
  9126  001694  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9127  001696                     
  9128                           ; BSR set to: 0
  9129  001696  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9130  001698  037F               	mulwf	___flmul@b& (0+255),b
  9131  00169A  CFF3 F096          	movff	prodl,___flmul@temp
  9132  00169E  CFF4 F097          	movff	prodh,___flmul@temp+1
  9133  0016A2                     
  9134                           ; BSR set to: 0
  9135  0016A2  5196               	movf	___flmul@temp& (0+255),w,b
  9136  0016A4  278D               	addwf	___flmul@grs& (0+255),f,b
  9137  0016A6  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9138  0016A8  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9139  0016AA  0E00               	movlw	0
  9140  0016AC  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9141  0016AE  0E00               	movlw	0
  9142  0016B0  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9143  0016B2                     
  9144                           ; BSR set to: 0
  9145  0016B2  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9146  0016B6  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9147  0016BA  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9148  0016BE  6B8D               	clrf	___flmul@grs& (0+255),b
  9149  0016C0  5183               	movf	___flmul@a& (0+255),w,b
  9150  0016C2  037F               	mulwf	___flmul@b& (0+255),b
  9151  0016C4  CFF3 F096          	movff	prodl,___flmul@temp
  9152  0016C8  CFF4 F097          	movff	prodh,___flmul@temp+1
  9153  0016CC                     
  9154                           ; BSR set to: 0
  9155  0016CC  5196               	movf	___flmul@temp& (0+255),w,b
  9156  0016CE  278D               	addwf	___flmul@grs& (0+255),f,b
  9157  0016D0  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9158  0016D2  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9159  0016D4  0E00               	movlw	0
  9160  0016D6  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9161  0016D8  0E00               	movlw	0
  9162  0016DA  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9163  0016DC                     
  9164                           ; BSR set to: 0
  9165  0016DC  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9166  0016DE  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9167  0016E0  CFF3 F096          	movff	prodl,___flmul@temp
  9168  0016E4  CFF4 F097          	movff	prodh,___flmul@temp+1
  9169  0016E8  5196               	movf	___flmul@temp& (0+255),w,b
  9170  0016EA  2792               	addwf	___flmul@prod& (0+255),f,b
  9171  0016EC  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9172  0016EE  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9173  0016F0  0E00               	movlw	0
  9174  0016F2  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9175  0016F4  0E00               	movlw	0
  9176  0016F6  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9177  0016F8                     
  9178                           ; BSR set to: 0
  9179  0016F8  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9180  0016FA  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9181  0016FC  CFF3 F096          	movff	prodl,___flmul@temp
  9182  001700  CFF4 F097          	movff	prodh,___flmul@temp+1
  9183  001704                     
  9184                           ; BSR set to: 0
  9185  001704  5196               	movf	___flmul@temp& (0+255),w,b
  9186  001706  2792               	addwf	___flmul@prod& (0+255),f,b
  9187  001708  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9188  00170A  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9189  00170C  0E00               	movlw	0
  9190  00170E  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9191  001710  0E00               	movlw	0
  9192  001712  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9193  001714  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9194  001716  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9195  001718  CFF3 F096          	movff	prodl,___flmul@temp
  9196  00171C  CFF4 F097          	movff	prodh,___flmul@temp+1
  9197  001720                     
  9198                           ; BSR set to: 0
  9199  001720  5196               	movf	___flmul@temp& (0+255),w,b
  9200  001722  6F87               	movwf	??___flmul& (0+255),b
  9201  001724  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9202  001726  6F88               	movwf	(??___flmul+1)& (0+255),b
  9203  001728  6B89               	clrf	(??___flmul+2)& (0+255),b
  9204  00172A  6B8A               	clrf	(??___flmul+3)& (0+255),b
  9205  00172C  C089  F08A         	movff	??___flmul+2,??___flmul+3
  9206  001730  C088  F089         	movff	??___flmul+1,??___flmul+2
  9207  001734  C087  F088         	movff	??___flmul,??___flmul+1
  9208  001738  6B87               	clrf	??___flmul& (0+255),b
  9209  00173A  5187               	movf	??___flmul& (0+255),w,b
  9210  00173C  2792               	addwf	___flmul@prod& (0+255),f,b
  9211  00173E  5188               	movf	(??___flmul+1)& (0+255),w,b
  9212  001740  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9213  001742  5189               	movf	(??___flmul+2)& (0+255),w,b
  9214  001744  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9215  001746  518A               	movf	(??___flmul+3)& (0+255),w,b
  9216  001748  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9217  00174A                     
  9218                           ; BSR set to: 0
  9219  00174A  C08D  F087         	movff	___flmul@grs,??___flmul
  9220  00174E  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
  9221  001752  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
  9222  001756  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
  9223  00175A  0E19               	movlw	25
  9224  00175C  EFB5  F00B         	goto	u11120
  9225  001760                     u11125:
  9226  001760  90D8               	bcf	status,0,c
  9227  001762  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  9228  001764  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  9229  001766  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  9230  001768  3387               	rrcf	??___flmul& (0+255),f,b
  9231  00176A                     u11120:
  9232  00176A  2EE8               	decfsz	wreg,f,c
  9233  00176C  EFB0  F00B         	goto	u11125
  9234  001770  5187               	movf	??___flmul& (0+255),w,b
  9235  001772  2792               	addwf	___flmul@prod& (0+255),f,b
  9236  001774  5188               	movf	(??___flmul+1)& (0+255),w,b
  9237  001776  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9238  001778  5189               	movf	(??___flmul+2)& (0+255),w,b
  9239  00177A  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9240  00177C  518A               	movf	(??___flmul+3)& (0+255),w,b
  9241  00177E  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9242  001780                     
  9243                           ; BSR set to: 0
  9244  001780  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9245  001784  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9246  001788  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9247  00178C  6B8D               	clrf	___flmul@grs& (0+255),b
  9248  00178E                     
  9249                           ; BSR set to: 0
  9250  00178E  518C               	movf	___flmul@aexp& (0+255),w,b
  9251  001790  C091  F087         	movff	___flmul@bexp,??___flmul
  9252  001794  6B88               	clrf	(??___flmul+1)& (0+255),b
  9253  001796  2787               	addwf	??___flmul& (0+255),f,b
  9254  001798  0E00               	movlw	0
  9255  00179A  2388               	addwfc	(??___flmul+1)& (0+255),f,b
  9256  00179C  0E82               	movlw	130
  9257  00179E  2587               	addwf	??___flmul& (0+255),w,b
  9258  0017A0  6F96               	movwf	___flmul@temp& (0+255),b
  9259  0017A2  0EFF               	movlw	255
  9260  0017A4  2188               	addwfc	(??___flmul+1)& (0+255),w,b
  9261  0017A6  6F97               	movwf	(___flmul@temp+1)& (0+255),b
  9262  0017A8  EFEB  F00B         	goto	l10558
  9263  0017AC                     l10552:
  9264                           
  9265                           ; BSR set to: 0
  9266  0017AC  90D8               	bcf	status,0,c
  9267  0017AE  3792               	rlcf	___flmul@prod& (0+255),f,b
  9268  0017B0  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9269  0017B2  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9270  0017B4  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9271  0017B6                     
  9272                           ; BSR set to: 0
  9273  0017B6  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
  9274  0017B8  EFE0  F00B         	goto	u11131
  9275  0017BC  EFE2  F00B         	goto	u11130
  9276  0017C0                     u11131:
  9277  0017C0  EFE3  F00B         	goto	l2613
  9278  0017C4                     u11130:
  9279  0017C4                     
  9280                           ; BSR set to: 0
  9281  0017C4  8192               	bsf	___flmul@prod& (0+255),0,b
  9282  0017C6                     l2613:
  9283                           
  9284                           ; BSR set to: 0
  9285  0017C6  90D8               	bcf	status,0,c
  9286  0017C8  378D               	rlcf	___flmul@grs& (0+255),f,b
  9287  0017CA  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9288  0017CC  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9289  0017CE  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9290  0017D0  0796               	decf	___flmul@temp& (0+255),f,b
  9291  0017D2  A0D8               	btfss	status,0,c
  9292  0017D4  0797               	decf	(___flmul@temp+1)& (0+255),f,b
  9293  0017D6                     l10558:
  9294                           
  9295                           ; BSR set to: 0
  9296  0017D6  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
  9297  0017D8  EFF0  F00B         	goto	u11141
  9298  0017DC  EFF2  F00B         	goto	u11140
  9299  0017E0                     u11141:
  9300  0017E0  EFD6  F00B         	goto	l10552
  9301  0017E4                     u11140:
  9302  0017E4                     
  9303                           ; BSR set to: 0
  9304  0017E4  0E00               	movlw	0
  9305  0017E6  6F8C               	movwf	___flmul@aexp& (0+255),b
  9306  0017E8                     
  9307                           ; BSR set to: 0
  9308  0017E8  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
  9309  0017EA  EFF9  F00B         	goto	u11151
  9310  0017EE  EFFB  F00B         	goto	u11150
  9311  0017F2                     u11151:
  9312  0017F2  EF1F  F00C         	goto	l2615
  9313  0017F6                     u11150:
  9314  0017F6                     
  9315                           ; BSR set to: 0
  9316  0017F6  0EFF               	movlw	255
  9317  0017F8  158D               	andwf	___flmul@grs& (0+255),w,b
  9318  0017FA  6F87               	movwf	??___flmul& (0+255),b
  9319  0017FC  0EFF               	movlw	255
  9320  0017FE  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
  9321  001800  6F88               	movwf	(??___flmul+1)& (0+255),b
  9322  001802  0EFF               	movlw	255
  9323  001804  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
  9324  001806  6F89               	movwf	(??___flmul+2)& (0+255),b
  9325  001808  0E7F               	movlw	127
  9326  00180A  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
  9327  00180C  6F8A               	movwf	(??___flmul+3)& (0+255),b
  9328  00180E  5187               	movf	??___flmul& (0+255),w,b
  9329  001810  1188               	iorwf	(??___flmul+1)& (0+255),w,b
  9330  001812  1189               	iorwf	(??___flmul+2)& (0+255),w,b
  9331  001814  118A               	iorwf	(??___flmul+3)& (0+255),w,b
  9332  001816  B4D8               	btfsc	status,2,c
  9333  001818  EF10  F00C         	goto	u11161
  9334  00181C  EF12  F00C         	goto	u11160
  9335  001820                     u11161:
  9336  001820  EF16  F00C         	goto	l2616
  9337  001824                     u11160:
  9338  001824                     l10566:
  9339                           
  9340                           ; BSR set to: 0
  9341  001824  0E01               	movlw	1
  9342  001826  6F8C               	movwf	___flmul@aexp& (0+255),b
  9343  001828  EF1F  F00C         	goto	l2615
  9344  00182C                     l2616:
  9345                           
  9346                           ; BSR set to: 0
  9347  00182C  A192               	btfss	___flmul@prod& (0+255),0,b
  9348  00182E  EF1B  F00C         	goto	u11171
  9349  001832  EF1D  F00C         	goto	u11170
  9350  001836                     u11171:
  9351  001836  EF1F  F00C         	goto	l2615
  9352  00183A                     u11170:
  9353  00183A  EF12  F00C         	goto	l10566
  9354  00183E                     l2615:
  9355                           
  9356                           ; BSR set to: 0
  9357  00183E  518C               	movf	___flmul@aexp& (0+255),w,b
  9358  001840  B4D8               	btfsc	status,2,c
  9359  001842  EF25  F00C         	goto	u11181
  9360  001846  EF27  F00C         	goto	u11180
  9361  00184A                     u11181:
  9362  00184A  EF4B  F00C         	goto	l10578
  9363  00184E                     u11180:
  9364  00184E                     
  9365                           ; BSR set to: 0
  9366  00184E  0E01               	movlw	1
  9367  001850  2792               	addwf	___flmul@prod& (0+255),f,b
  9368  001852  0E00               	movlw	0
  9369  001854  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9370  001856  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9371  001858  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9372  00185A                     
  9373                           ; BSR set to: 0
  9374  00185A  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
  9375  00185C  EF32  F00C         	goto	u11191
  9376  001860  EF34  F00C         	goto	u11190
  9377  001864                     u11191:
  9378  001864  EF4B  F00C         	goto	l10578
  9379  001868                     u11190:
  9380  001868                     
  9381                           ; BSR set to: 0
  9382  001868  C092  F087         	movff	___flmul@prod,??___flmul
  9383  00186C  C093  F088         	movff	___flmul@prod+1,??___flmul+1
  9384  001870  C094  F089         	movff	___flmul@prod+2,??___flmul+2
  9385  001874  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
  9386  001878  358A               	rlcf	(??___flmul+3)& (0+255),w,b
  9387  00187A  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  9388  00187C  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  9389  00187E  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  9390  001880  3387               	rrcf	??___flmul& (0+255),f,b
  9391  001882  C087  F092         	movff	??___flmul,___flmul@prod
  9392  001886  C088  F093         	movff	??___flmul+1,___flmul@prod+1
  9393  00188A  C089  F094         	movff	??___flmul+2,___flmul@prod+2
  9394  00188E  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
  9395  001892                     
  9396                           ; BSR set to: 0
  9397  001892  4B96               	infsnz	___flmul@temp& (0+255),f,b
  9398  001894  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
  9399  001896                     l10578:
  9400                           
  9401                           ; BSR set to: 0
  9402  001896  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9403  001898  EF56  F00C         	goto	u11201
  9404  00189C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9405  00189E  E108               	bnz	u11200
  9406  0018A0  2996               	incf	___flmul@temp& (0+255),w,b
  9407  0018A2  A0D8               	btfss	status,0,c
  9408  0018A4  EF56  F00C         	goto	u11201
  9409  0018A8  EF58  F00C         	goto	u11200
  9410  0018AC                     u11201:
  9411  0018AC  EF62  F00C         	goto	l10582
  9412  0018B0                     u11200:
  9413  0018B0                     
  9414                           ; BSR set to: 0
  9415  0018B0  0E00               	movlw	0
  9416  0018B2  6F92               	movwf	___flmul@prod& (0+255),b
  9417  0018B4  0E00               	movlw	0
  9418  0018B6  6F93               	movwf	(___flmul@prod+1)& (0+255),b
  9419  0018B8  0E80               	movlw	128
  9420  0018BA  6F94               	movwf	(___flmul@prod+2)& (0+255),b
  9421  0018BC  0E7F               	movlw	127
  9422  0018BE  6F95               	movwf	(___flmul@prod+3)& (0+255),b
  9423  0018C0  EF90  F00C         	goto	l10594
  9424  0018C4                     l10582:
  9425                           
  9426                           ; BSR set to: 0
  9427  0018C4  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9428  0018C6  EF6F  F00C         	goto	u11210
  9429  0018CA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9430  0018CC  E106               	bnz	u11211
  9431  0018CE  0596               	decf	___flmul@temp& (0+255),w,b
  9432  0018D0  B0D8               	btfsc	status,0,c
  9433  0018D2  EF6D  F00C         	goto	u11211
  9434  0018D6  EF6F  F00C         	goto	u11210
  9435  0018DA                     u11211:
  9436  0018DA  EF7B  F00C         	goto	l2623
  9437  0018DE                     u11210:
  9438  0018DE                     
  9439                           ; BSR set to: 0
  9440  0018DE  0E00               	movlw	0
  9441  0018E0  6F92               	movwf	___flmul@prod& (0+255),b
  9442  0018E2  0E00               	movlw	0
  9443  0018E4  6F93               	movwf	(___flmul@prod+1)& (0+255),b
  9444  0018E6  0E00               	movlw	0
  9445  0018E8  6F94               	movwf	(___flmul@prod+2)& (0+255),b
  9446  0018EA  0E00               	movlw	0
  9447  0018EC  6F95               	movwf	(___flmul@prod+3)& (0+255),b
  9448  0018EE  0E00               	movlw	0
  9449  0018F0  6F8B               	movwf	___flmul@sign& (0+255),b
  9450  0018F2  EF90  F00C         	goto	l10594
  9451  0018F6                     l2623:
  9452                           
  9453                           ; BSR set to: 0
  9454  0018F6  C096  F091         	movff	___flmul@temp,___flmul@bexp
  9455  0018FA                     
  9456                           ; BSR set to: 0
  9457  0018FA  0EFF               	movlw	255
  9458  0018FC  1792               	andwf	___flmul@prod& (0+255),f,b
  9459  0018FE  0EFF               	movlw	255
  9460  001900  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
  9461  001902  0E7F               	movlw	127
  9462  001904  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
  9463  001906  0E00               	movlw	0
  9464  001908  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
  9465  00190A                     
  9466                           ; BSR set to: 0
  9467  00190A  A191               	btfss	___flmul@bexp& (0+255),0,b
  9468  00190C  EF8A  F00C         	goto	u11221
  9469  001910  EF8C  F00C         	goto	u11220
  9470  001914                     u11221:
  9471  001914  EF8D  F00C         	goto	l10592
  9472  001918                     u11220:
  9473  001918                     
  9474                           ; BSR set to: 0
  9475  001918  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
  9476  00191A                     l10592:
  9477                           
  9478                           ; BSR set to: 0
  9479  00191A  90D8               	bcf	status,0,c
  9480  00191C  3191               	rrcf	___flmul@bexp& (0+255),w,b
  9481  00191E  6F95               	movwf	(___flmul@prod+3)& (0+255),b
  9482  001920                     l10594:
  9483                           
  9484                           ; BSR set to: 0
  9485  001920  518B               	movf	___flmul@sign& (0+255),w,b
  9486  001922  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9487  001924                     
  9488                           ; BSR set to: 0
  9489  001924  C092  F07F         	movff	___flmul@prod,?___flmul
  9490  001928  C093  F080         	movff	___flmul@prod+1,?___flmul+1
  9491  00192C  C094  F081         	movff	___flmul@prod+2,?___flmul+2
  9492  001930  C095  F082         	movff	___flmul@prod+3,?___flmul+3
  9493  001934                     l2610:
  9494                           
  9495                           ; BSR set to: 0
  9496  001934  0012               	return		;funcret
  9497  001936                     __end_of___flmul:
  9498                           	callstack 0
  9499                           
  9500 ;; *************** function _ECU_DC_Motor_Run_Left *****************
  9501 ;; Defined at:
  9502 ;;		line 39 in file "ECU/DC_Motor/ecu_dc_motor.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  9505 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  ret_value       1    0        unsigned char 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      unsigned char 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;Total ram usage:        2 bytes
  9522 ;; Hardware stack levels used: 1
  9523 ;; Hardware stack levels required when called: 9
  9524 ;; This function calls:
  9525 ;;		_GPIO_Pin_Write_Logic
  9526 ;; This function is called by:
  9527 ;;		_Robot_Move_Backward
  9528 ;;		_Robot_Steer_Right_Backward
  9529 ;;		_Robot_Steer_Left_Backward
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text47
  9534  00507E                     __ptext47:
  9535                           	callstack 0
  9536  00507E                     _ECU_DC_Motor_Run_Left:
  9537                           	callstack 20
  9538  00507E                     
  9539                           ;ECU/DC_Motor/ecu_dc_motor.c: 42:     if(((void*)0) == dc_motor)
  9540  00507E  5022               	movf	ECU_DC_Motor_Run_Left@dc_motor^0,w,c
  9541  005080  1023               	iorwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,w,c
  9542  005082  A4D8               	btfss	status,2,c
  9543  005084  EF46  F028         	goto	u11741
  9544  005088  EF48  F028         	goto	u11740
  9545  00508C                     u11741:
  9546  00508C  EF4A  F028         	goto	l10902
  9547  005090                     u11740:
  9548  005090                     
  9549                           ;ECU/DC_Motor/ecu_dc_motor.c: 45:     }
  9550  005090  EF52  F028         	goto	l60
  9551  005094                     l10902:
  9552                           
  9553                           ;ECU/DC_Motor/ecu_dc_motor.c: 47:     {;ECU/DC_Motor/ecu_dc_motor.c: 48:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_HIGH );
  9554  005094  C022  F01E         	movff	ECU_DC_Motor_Run_Left@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  9555  005098  C023  F01F         	movff	ECU_DC_Motor_Run_Left@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  9556  00509C  0E01               	movlw	1
  9557  00509E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9558  0050A0  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
  9559  0050A4                     l60:
  9560  0050A4  0012               	return		;funcret
  9561  0050A6                     __end_of_ECU_DC_Motor_Run_Left:
  9562                           	callstack 0
  9563                           
  9564 ;; *************** function _Get_Temp_HUM *****************
  9565 ;; Defined at:
  9566 ;;		line 13 in file "Robot/sensors/DHT11/DHT.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  RH_Decimal      2    0[BANK0 ] PTR unsigned char 
  9569 ;;		 -> RH_Decimal(1), 
  9570 ;;  RH_Integral     2    2[BANK0 ] PTR unsigned char 
  9571 ;;		 -> RH_Integral(1), 
  9572 ;;  T_Decimal       2    4[BANK0 ] PTR unsigned char 
  9573 ;;		 -> T_Decimal(1), 
  9574 ;;  T_Integral      2    6[BANK0 ] PTR unsigned char 
  9575 ;;		 -> T_Integral(1), 
  9576 ;;  Checksum        2    8[BANK0 ] PTR unsigned char 
  9577 ;;		 -> Checksum(1), 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  ERRORSTATUS     1    0        unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      unsigned char 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9589 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;Total ram usage:       10 bytes
  9594 ;; Hardware stack levels used: 1
  9595 ;; Hardware stack levels required when called: 9
  9596 ;; This function calls:
  9597 ;;		_DHT11_Check_Response
  9598 ;;		_DHT11_Read_Data
  9599 ;;		_DHT11_Start
  9600 ;; This function is called by:
  9601 ;;		_main
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text48
  9606  0042B4                     __ptext48:
  9607                           	callstack 0
  9608  0042B4                     _Get_Temp_HUM:
  9609                           	callstack 21
  9610  0042B4                     
  9611                           ;Robot/sensors/DHT11/DHT.c: 16:     if ( ((void*)0)==RH_Decimal||((void*)0)==RH_Integral
      +                          ||((void*)0)==T_Decimal||((void*)0)==T_Integral||((void*)0)==Checksum)
  9612  0042B4  0100               	movlb	0	; () banked
  9613  0042B6  5160               	movf	Get_Temp_HUM@RH_Decimal& (0+255),w,b
  9614  0042B8  1161               	iorwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),w,b
  9615  0042BA  B4D8               	btfsc	status,2,c
  9616  0042BC  EF62  F021         	goto	u12091
  9617  0042C0  EF64  F021         	goto	u12090
  9618  0042C4                     u12091:
  9619  0042C4  EF88  F021         	goto	l11378
  9620  0042C8                     u12090:
  9621  0042C8                     
  9622                           ; BSR set to: 0
  9623  0042C8  5162               	movf	Get_Temp_HUM@RH_Integral& (0+255),w,b
  9624  0042CA  1163               	iorwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),w,b
  9625  0042CC  B4D8               	btfsc	status,2,c
  9626  0042CE  EF6B  F021         	goto	u12101
  9627  0042D2  EF6D  F021         	goto	u12100
  9628  0042D6                     u12101:
  9629  0042D6  EF88  F021         	goto	l11378
  9630  0042DA                     u12100:
  9631  0042DA                     
  9632                           ; BSR set to: 0
  9633  0042DA  5164               	movf	Get_Temp_HUM@T_Decimal& (0+255),w,b
  9634  0042DC  1165               	iorwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),w,b
  9635  0042DE  B4D8               	btfsc	status,2,c
  9636  0042E0  EF74  F021         	goto	u12111
  9637  0042E4  EF76  F021         	goto	u12110
  9638  0042E8                     u12111:
  9639  0042E8  EF88  F021         	goto	l11378
  9640  0042EC                     u12110:
  9641  0042EC                     
  9642                           ; BSR set to: 0
  9643  0042EC  5166               	movf	Get_Temp_HUM@T_Integral& (0+255),w,b
  9644  0042EE  1167               	iorwf	(Get_Temp_HUM@T_Integral+1)& (0+255),w,b
  9645  0042F0  B4D8               	btfsc	status,2,c
  9646  0042F2  EF7D  F021         	goto	u12121
  9647  0042F6  EF7F  F021         	goto	u12120
  9648  0042FA                     u12121:
  9649  0042FA  EF88  F021         	goto	l11378
  9650  0042FE                     u12120:
  9651  0042FE                     
  9652                           ; BSR set to: 0
  9653  0042FE  5168               	movf	Get_Temp_HUM@Checksum& (0+255),w,b
  9654  004300  1169               	iorwf	(Get_Temp_HUM@Checksum+1)& (0+255),w,b
  9655  004302  A4D8               	btfss	status,2,c
  9656  004304  EF86  F021         	goto	u12131
  9657  004308  EF88  F021         	goto	u12130
  9658  00430C                     u12131:
  9659  00430C  EF8A  F021         	goto	l11380
  9660  004310                     u12130:
  9661  004310                     l11378:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;Robot/sensors/DHT11/DHT.c: 19:     }
  9665  004310  EFAC  F021         	goto	l1739
  9666  004314                     l11380:
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;Robot/sensors/DHT11/DHT.c: 21:     {;Robot/sensors/DHT11/DHT.c: 22:        DHT11_Start(
      +                          );
  9670  004314  EC8B  F028         	call	_DHT11_Start	;wreg free
  9671  004318                     
  9672                           ;Robot/sensors/DHT11/DHT.c: 23:        DHT11_Check_Response();
  9673  004318  ECBF  F027         	call	_DHT11_Check_Response	;wreg free
  9674  00431C                     
  9675                           ;Robot/sensors/DHT11/DHT.c: 24:        DHT11_Read_Data(RH_Decimal);
  9676  00431C  C060  F01E         	movff	Get_Temp_HUM@RH_Decimal,DHT11_Read_Data@data
  9677  004320  C061  F01F         	movff	Get_Temp_HUM@RH_Decimal+1,DHT11_Read_Data@data+1
  9678  004324  EC97  F022         	call	_DHT11_Read_Data	;wreg free
  9679  004328                     
  9680                           ;Robot/sensors/DHT11/DHT.c: 25:        DHT11_Read_Data(RH_Integral);
  9681  004328  C062  F01E         	movff	Get_Temp_HUM@RH_Integral,DHT11_Read_Data@data
  9682  00432C  C063  F01F         	movff	Get_Temp_HUM@RH_Integral+1,DHT11_Read_Data@data+1
  9683  004330  EC97  F022         	call	_DHT11_Read_Data	;wreg free
  9684  004334                     
  9685                           ;Robot/sensors/DHT11/DHT.c: 26:        DHT11_Read_Data(T_Decimal);
  9686  004334  C064  F01E         	movff	Get_Temp_HUM@T_Decimal,DHT11_Read_Data@data
  9687  004338  C065  F01F         	movff	Get_Temp_HUM@T_Decimal+1,DHT11_Read_Data@data+1
  9688  00433C  EC97  F022         	call	_DHT11_Read_Data	;wreg free
  9689  004340                     
  9690                           ;Robot/sensors/DHT11/DHT.c: 27:        DHT11_Read_Data(T_Integral);
  9691  004340  C066  F01E         	movff	Get_Temp_HUM@T_Integral,DHT11_Read_Data@data
  9692  004344  C067  F01F         	movff	Get_Temp_HUM@T_Integral+1,DHT11_Read_Data@data+1
  9693  004348  EC97  F022         	call	_DHT11_Read_Data	;wreg free
  9694  00434C                     
  9695                           ;Robot/sensors/DHT11/DHT.c: 28:        DHT11_Read_Data(Checksum);
  9696  00434C  C068  F01E         	movff	Get_Temp_HUM@Checksum,DHT11_Read_Data@data
  9697  004350  C069  F01F         	movff	Get_Temp_HUM@Checksum+1,DHT11_Read_Data@data+1
  9698  004354  EC97  F022         	call	_DHT11_Read_Data	;wreg free
  9699  004358                     l1739:
  9700  004358  0012               	return		;funcret
  9701  00435A                     __end_of_Get_Temp_HUM:
  9702                           	callstack 0
  9703                           
  9704 ;; *************** function _DHT11_Start *****************
  9705 ;; Defined at:
  9706 ;;		line 32 in file "Robot/sensors/DHT11/DHT.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:        1 bytes
  9725 ;; Hardware stack levels used: 1
  9726 ;; Hardware stack levels required when called: 8
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_Get_Temp_HUM
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text49
  9735  005116                     __ptext49:
  9736                           	callstack 0
  9737  005116                     _DHT11_Start:
  9738                           	callstack 21
  9739  005116                     
  9740                           ;Robot/sensors/DHT11/DHT.c: 34:     TRISDbits.TRISD7=GPIO_DIRECTION_OUTPUT;
  9741  005116  9E95               	bcf	149,7,c	;volatile
  9742                           
  9743                           ;Robot/sensors/DHT11/DHT.c: 35:     LATDbits.LATD7=GPIO_LOW;
  9744  005118  9E8C               	bcf	140,7,c	;volatile
  9745  00511A                     
  9746                           ;Robot/sensors/DHT11/DHT.c: 36:     _delay((unsigned long)((18)*(8000000/4000.0)));
  9747  00511A  0E2F               	movlw	47
  9748  00511C  6E1E               	movwf	??_DHT11_Start^0,c
  9749  00511E  0EC0               	movlw	192
  9750  005120                     u12637:
  9751  005120  2EE8               	decfsz	wreg,f,c
  9752  005122  D7FE               	bra	u12637
  9753  005124  2E1E               	decfsz	??_DHT11_Start^0,f,c
  9754  005126  D7FC               	bra	u12637
  9755  005128                     
  9756                           ;Robot/sensors/DHT11/DHT.c: 37:     LATDbits.LATD7=GPIO_HIGH;
  9757  005128  8E8C               	bsf	140,7,c	;volatile
  9758                           
  9759                           ;Robot/sensors/DHT11/DHT.c: 38:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  9760  00512A  0E14               	movlw	20
  9761  00512C                     u12647:
  9762  00512C  2EE8               	decfsz	wreg,f,c
  9763  00512E  D7FE               	bra	u12647
  9764  005130                     
  9765                           ;Robot/sensors/DHT11/DHT.c: 39:     TRISDbits.TRISD7=GPIO_DIRECTION_INPUT;
  9766  005130  8E95               	bsf	149,7,c	;volatile
  9767  005132  0012               	return		;funcret
  9768  005134                     __end_of_DHT11_Start:
  9769                           	callstack 0
  9770                           
  9771 ;; *************** function _DHT11_Read_Data *****************
  9772 ;; Defined at:
  9773 ;;		line 47 in file "Robot/sensors/DHT11/DHT.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  data            2   29[COMRAM] PTR unsigned char 
  9776 ;;		 -> Checksum(1), T_Integral(1), T_Decimal(1), RH_Integral(1), 
  9777 ;;		 -> RH_Decimal(1), 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  i               1   32[COMRAM] unsigned char 
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      void 
  9782 ;; Registers used:
  9783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9793 ;;Total ram usage:        4 bytes
  9794 ;; Hardware stack levels used: 1
  9795 ;; Hardware stack levels required when called: 8
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_Get_Temp_HUM
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text50
  9804  00452E                     __ptext50:
  9805                           	callstack 0
  9806  00452E                     _DHT11_Read_Data:
  9807                           	callstack 21
  9808  00452E                     
  9809                           ;Robot/sensors/DHT11/DHT.c: 47: static void DHT11_Read_Data(uint8* data);Robot/sensors/D
      +                          HT11/DHT.c: 48: {;Robot/sensors/DHT11/DHT.c: 49:   uint8 i;;Robot/sensors/DHT11/DHT.c: 5
      +                          0:   *data = 0;
  9810  00452E  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9811  004532  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9812  004536  0E00               	movlw	0
  9813  004538  6EDF               	movwf	indf2,c
  9814  00453A                     
  9815                           ;Robot/sensors/DHT11/DHT.c: 51:     for(i=0;i<8;i++)
  9816  00453A  0E00               	movlw	0
  9817  00453C  6E21               	movwf	DHT11_Read_Data@i^0,c
  9818  00453E                     l1759:
  9819  00453E  AE83               	btfss	131,7,c	;volatile
  9820  004540  EFA4  F022         	goto	u8001
  9821  004544  EFA6  F022         	goto	u8000
  9822  004548                     u8001:
  9823  004548  EF9F  F022         	goto	l1759
  9824  00454C                     u8000:
  9825  00454C                     
  9826                           ;Robot/sensors/DHT11/DHT.c: 54:         _delay((unsigned long)((40)*(8000000/4000000.0))
      +                          );
  9827  00454C  0E1A               	movlw	26
  9828  00454E                     u12657:
  9829  00454E  2EE8               	decfsz	wreg,f,c
  9830  004550  D7FE               	bra	u12657
  9831  004552  F000 F000          	nop2	
  9832  004556                     
  9833                           ;Robot/sensors/DHT11/DHT.c: 55:         if(PORTDbits.RD7 & 1)
  9834  004556  AE83               	btfss	131,7,c	;volatile
  9835  004558  EFB0  F022         	goto	u8011
  9836  00455C  EFB2  F022         	goto	u8010
  9837  004560                     u8011:
  9838  004560  EFC1  F022         	goto	l8186
  9839  004564                     u8010:
  9840  004564                     
  9841                           ;Robot/sensors/DHT11/DHT.c: 56:         {;Robot/sensors/DHT11/DHT.c: 57:             *da
      +                          ta = (((*data)<<1)|1);
  9842  004564  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9843  004568  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9844  00456C  50DF               	movf	indf2,w,c
  9845  00456E  6E20               	movwf	??_DHT11_Read_Data^0,c
  9846  004570  80D8               	bsf	status,0,c
  9847  004572  3420               	rlcf	??_DHT11_Read_Data^0,w,c
  9848  004574  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9849  004578  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9850  00457C  6EDF               	movwf	indf2,c
  9851                           
  9852                           ;Robot/sensors/DHT11/DHT.c: 59:         }
  9853  00457E  EFCE  F022         	goto	l1764
  9854  004582                     l8186:
  9855                           
  9856                           ;Robot/sensors/DHT11/DHT.c: 61:         {;Robot/sensors/DHT11/DHT.c: 62:             *da
      +                          ta = ((*data)<<1);
  9857  004582  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9858  004586  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9859  00458A  50DF               	movf	indf2,w,c
  9860  00458C  6E20               	movwf	??_DHT11_Read_Data^0,c
  9861  00458E  90D8               	bcf	status,0,c
  9862  004590  3420               	rlcf	??_DHT11_Read_Data^0,w,c
  9863  004592  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9864  004596  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9865  00459A  6EDF               	movwf	indf2,c
  9866  00459C                     l1764:
  9867  00459C  BE83               	btfsc	131,7,c	;volatile
  9868  00459E  EFD3  F022         	goto	u8021
  9869  0045A2  EFD5  F022         	goto	u8020
  9870  0045A6                     u8021:
  9871  0045A6  EFCE  F022         	goto	l1764
  9872  0045AA                     u8020:
  9873  0045AA                     
  9874                           ;Robot/sensors/DHT11/DHT.c: 66:     }
  9875  0045AA  2A21               	incf	DHT11_Read_Data@i^0,f,c
  9876  0045AC  0E07               	movlw	7
  9877  0045AE  6421               	cpfsgt	DHT11_Read_Data@i^0,c
  9878  0045B0  EFDC  F022         	goto	u8031
  9879  0045B4  EFDE  F022         	goto	u8030
  9880  0045B8                     u8031:
  9881  0045B8  EF9F  F022         	goto	l1759
  9882  0045BC                     u8030:
  9883  0045BC  0012               	return		;funcret
  9884  0045BE                     __end_of_DHT11_Read_Data:
  9885                           	callstack 0
  9886                           
  9887 ;; *************** function _DHT11_Check_Response *****************
  9888 ;; Defined at:
  9889 ;;		line 41 in file "Robot/sensors/DHT11/DHT.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;		None
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      void 
  9896 ;; Registers used:
  9897 ;;		None
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;Total ram usage:        0 bytes
  9908 ;; Hardware stack levels used: 1
  9909 ;; Hardware stack levels required when called: 8
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_Get_Temp_HUM
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text51
  9918  004F7E                     __ptext51:
  9919                           	callstack 0
  9920  004F7E                     _DHT11_Check_Response:
  9921                           	callstack 21
  9922  004F7E                     l1745:
  9923  004F7E  BE83               	btfsc	131,7,c	;volatile
  9924  004F80  EFC4  F027         	goto	u7971
  9925  004F84  EFC6  F027         	goto	u7970
  9926  004F88                     u7971:
  9927  004F88  EFBF  F027         	goto	l1745
  9928  004F8C                     u7970:
  9929  004F8C                     l1748:
  9930  004F8C  AE83               	btfss	131,7,c	;volatile
  9931  004F8E  EFCB  F027         	goto	u7981
  9932  004F92  EFCD  F027         	goto	u7980
  9933  004F96                     u7981:
  9934  004F96  EFC6  F027         	goto	l1748
  9935  004F9A                     u7980:
  9936  004F9A                     l1751:
  9937  004F9A  BE83               	btfsc	131,7,c	;volatile
  9938  004F9C  EFD2  F027         	goto	u7991
  9939  004FA0  EFD4  F027         	goto	u7990
  9940  004FA4                     u7991:
  9941  004FA4  EFCD  F027         	goto	l1751
  9942  004FA8                     u7990:
  9943  004FA8  0012               	return		;funcret
  9944  004FAA                     __end_of_DHT11_Check_Response:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _Get_Distance *****************
  9948 ;; Defined at:
  9949 ;;		line 25 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  ultrasonic_o    2   31[BANK0 ] PTR const struct .
  9952 ;;		 -> ultrasonic(2), 
  9953 ;;  _tmr0_config    2   33[BANK0 ] PTR const struct .
  9954 ;;		 -> timer0(4), 
  9955 ;;  distance        2   35[BANK0 ] PTR float 
  9956 ;;		 -> distance(4), 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  timer_val       2   37[BANK0 ] unsigned short 
  9959 ;;  logic           1   39[BANK0 ] enum E3185
  9960 ;;  ERRORSTATUS     1    0        unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      unsigned char 
  9963 ;; Registers used:
  9964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9970 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9974 ;;Total ram usage:        9 bytes
  9975 ;; Hardware stack levels used: 1
  9976 ;; Hardware stack levels required when called: 10
  9977 ;; This function calls:
  9978 ;;		_GPIO_Pin_Read_Logic
  9979 ;;		_HAL_Timer0_Read_Val
  9980 ;;		_HAL_Timer0_Write_Val
  9981 ;;		___fldiv
  9982 ;;		___xxtofl
  9983 ;;		_send_trig_pulse
  9984 ;; This function is called by:
  9985 ;;		_main
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text52
  9990  0034F4                     __ptext52:
  9991                           	callstack 0
  9992  0034F4                     _Get_Distance:
  9993                           	callstack 20
  9994  0034F4                     
  9995                           ;Robot/sensors/ultrasonic/ultrasonic.c: 25: Std_ReturnType Get_Distance(const ultrasonic
      +                          _config_st* ultrasonic_object,const timer0_config_st *_tmr0_config,float32* distance);Ro
      +                          bot/sensors/ultrasonic/ultrasonic.c: 26: {;Robot/sensors/ultrasonic/ultrasonic.c: 27:   
      +                            logic_et logic=0;
  9996  0034F4  0E00               	movlw	0
  9997  0034F6  0100               	movlb	0	; () banked
  9998  0034F8  6F87               	movwf	Get_Distance@logic& (0+255),b
  9999                           
 10000                           ;Robot/sensors/ultrasonic/ultrasonic.c: 28:     uint16 timer_val=0;
 10001  0034FA  0E00               	movlw	0
 10002  0034FC  6F86               	movwf	(Get_Distance@timer_val+1)& (0+255),b
 10003  0034FE  0E00               	movlw	0
 10004  003500  6F85               	movwf	Get_Distance@timer_val& (0+255),b
 10005  003502                     
 10006                           ; BSR set to: 0
 10007                           ;Robot/sensors/ultrasonic/ultrasonic.c: 30:     if ( ((void*)0)==distance)
 10008  003502  5183               	movf	Get_Distance@distance& (0+255),w,b
 10009  003504  1184               	iorwf	(Get_Distance@distance+1)& (0+255),w,b
 10010  003506  A4D8               	btfss	status,2,c
 10011  003508  EF88  F01A         	goto	u12141
 10012  00350C  EF8A  F01A         	goto	u12140
 10013  003510                     u12141:
 10014  003510  EF8C  F01A         	goto	l1795
 10015  003514                     u12140:
 10016  003514                     
 10017                           ; BSR set to: 0
 10018                           ;Robot/sensors/ultrasonic/ultrasonic.c: 34:     }
 10019  003514  EF00  F01B         	goto	l1803
 10020  003518                     l1795:
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;Robot/sensors/ultrasonic/ultrasonic.c: 36:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           37:         (T0CONbits.TMR0ON = 0 );
 10024  003518  9ED5               	bcf	213,7,c	;volatile
 10025  00351A                     
 10026                           ; BSR set to: 0
 10027                           ;Robot/sensors/ultrasonic/ultrasonic.c: 38:         HAL_Timer0_Write_Val(_tmr0_config ,0
      +                          );
 10028  00351A  C081  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
 10029  00351E  C082  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
 10030  003522  0E00               	movlw	0
 10031  003524  6E21               	movwf	(HAL_Timer0_Write_Val@val+1)^0,c
 10032  003526  0E00               	movlw	0
 10033  003528  6E20               	movwf	HAL_Timer0_Write_Val@val^0,c
 10034  00352A  EC01  F028         	call	_HAL_Timer0_Write_Val	;wreg free
 10035  00352E                     
 10036                           ;Robot/sensors/ultrasonic/ultrasonic.c: 39:         send_trig_pulse(ultrasonic_object);
 10037  00352E  C07F  F022         	movff	Get_Distance@ultrasonic_object,send_trig_pulse@ultrasonic_object
 10038  003532  C080  F023         	movff	Get_Distance@ultrasonic_object+1,send_trig_pulse@ultrasonic_object+1
 10039  003536  ECD5  F027         	call	_send_trig_pulse	;wreg free
 10040                           
 10041                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
 10042  00353A  EFAB  F01A         	goto	l11408
 10043  00353E                     l11406:
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;Robot/sensors/ultrasonic/ultrasonic.c: 41:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 42:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
 10047  00353E  0E01               	movlw	1
 10048  003540  257F               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
 10049  003542  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
 10050  003544  0E00               	movlw	0
 10051  003546  2180               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
 10052  003548  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
 10053  00354A  0E87               	movlw	low Get_Distance@logic
 10054  00354C  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
 10055  00354E  0E00               	movlw	high Get_Distance@logic
 10056  003550  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
 10057  003552  EC03  F021         	call	_GPIO_Pin_Read_Logic	;wreg free
 10058  003556                     l11408:
 10059                           
 10060                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
 10061  003556  0100               	movlb	0	; () banked
 10062  003558  5187               	movf	Get_Distance@logic& (0+255),w,b
 10063  00355A  B4D8               	btfsc	status,2,c
 10064  00355C  EFB2  F01A         	goto	u12151
 10065  003560  EFB4  F01A         	goto	u12150
 10066  003564                     u12151:
 10067  003564  EF9F  F01A         	goto	l11406
 10068  003568                     u12150:
 10069  003568                     
 10070                           ; BSR set to: 0
 10071                           ;Robot/sensors/ultrasonic/ultrasonic.c: 44:         (T0CONbits.TMR0ON = 1 );
 10072  003568  8ED5               	bsf	213,7,c	;volatile
 10073                           
 10074                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
 10075  00356A  EFC3  F01A         	goto	l11412
 10076  00356E                     l11410:
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;Robot/sensors/ultrasonic/ultrasonic.c: 46:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 47:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
 10080  00356E  0E01               	movlw	1
 10081  003570  257F               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
 10082  003572  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
 10083  003574  0E00               	movlw	0
 10084  003576  2180               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
 10085  003578  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
 10086  00357A  0E87               	movlw	low Get_Distance@logic
 10087  00357C  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
 10088  00357E  0E00               	movlw	high Get_Distance@logic
 10089  003580  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
 10090  003582  EC03  F021         	call	_GPIO_Pin_Read_Logic	;wreg free
 10091  003586                     l11412:
 10092                           
 10093                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
 10094  003586  0100               	movlb	0	; () banked
 10095  003588  5187               	movf	Get_Distance@logic& (0+255),w,b
 10096  00358A  A4D8               	btfss	status,2,c
 10097  00358C  EFCA  F01A         	goto	u12161
 10098  003590  EFCC  F01A         	goto	u12160
 10099  003594                     u12161:
 10100  003594  EFB7  F01A         	goto	l11410
 10101  003598                     u12160:
 10102  003598                     
 10103                           ; BSR set to: 0
 10104                           ;Robot/sensors/ultrasonic/ultrasonic.c: 49:         (T0CONbits.TMR0ON = 0 );
 10105  003598  9ED5               	bcf	213,7,c	;volatile
 10106  00359A                     
 10107                           ; BSR set to: 0
 10108                           ;Robot/sensors/ultrasonic/ultrasonic.c: 50:         HAL_Timer0_Read_Val(_tmr0_config ,&t
      +                          imer_val);
 10109  00359A  C081  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Read_Val@_tmr0_config
 10110  00359E  C082  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Read_Val@_tmr0_config+1
 10111  0035A2  0E85               	movlw	low Get_Distance@timer_val
 10112  0035A4  6E20               	movwf	HAL_Timer0_Read_Val@result^0,c
 10113  0035A6  0E00               	movlw	high Get_Distance@timer_val
 10114  0035A8  6E21               	movwf	(HAL_Timer0_Read_Val@result+1)^0,c
 10115  0035AA  EC53  F020         	call	_HAL_Timer0_Read_Val	;wreg free
 10116                           
 10117                           ;Robot/sensors/ultrasonic/ultrasonic.c: 52:         *distance=timer_val/(float32)58.8;
 10118  0035AE  C085  F01E         	movff	Get_Distance@timer_val,___xxtofl@val
 10119  0035B2  C086  F01F         	movff	Get_Distance@timer_val+1,___xxtofl@val+1
 10120  0035B6  6A20               	clrf	(___xxtofl@val+2)^0,c
 10121  0035B8  6A21               	clrf	(___xxtofl@val+3)^0,c
 10122  0035BA  0E00               	movlw	0
 10123  0035BC  ECC9  F013         	call	___xxtofl
 10124  0035C0  C01E  F066         	movff	?___xxtofl,___fldiv@b
 10125  0035C4  C01F  F067         	movff	?___xxtofl+1,___fldiv@b+1
 10126  0035C8  C020  F068         	movff	?___xxtofl+2,___fldiv@b+2
 10127  0035CC  C021  F069         	movff	?___xxtofl+3,___fldiv@b+3
 10128  0035D0  0E33               	movlw	51
 10129  0035D2  0100               	movlb	0	; () banked
 10130  0035D4  6F6A               	movwf	___fldiv@a& (0+255),b
 10131  0035D6  0E33               	movlw	51
 10132  0035D8  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
 10133  0035DA  0E6B               	movlw	107
 10134  0035DC  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
 10135  0035DE  0E42               	movlw	66
 10136  0035E0  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
 10137  0035E2  EC77  F00E         	call	___fldiv	;wreg free
 10138  0035E6  C083  FFD9         	movff	Get_Distance@distance,fsr2l
 10139  0035EA  C084  FFDA         	movff	Get_Distance@distance+1,fsr2h
 10140  0035EE  0100               	movlb	0	; () banked
 10141  0035F0  C066  FFDE         	movff	?___fldiv,postinc2
 10142  0035F4  C067  FFDE         	movff	?___fldiv+1,postinc2
 10143  0035F8  C068  FFDE         	movff	?___fldiv+2,postinc2
 10144  0035FC  C069  FFDE         	movff	?___fldiv+3,postinc2
 10145  003600                     l1803:
 10146                           
 10147                           ; BSR set to: 0
 10148  003600  0012               	return		;funcret
 10149  003602                     __end_of_Get_Distance:
 10150                           	callstack 0
 10151                           
 10152 ;; *************** function _send_trig_pulse *****************
 10153 ;; Defined at:
 10154 ;;		line 57 in file "Robot/sensors/ultrasonic/ultrasonic.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  ultrasonic_o    2   33[COMRAM] PTR const struct .
 10157 ;;		 -> ultrasonic(2), 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10173 ;;Total ram usage:        2 bytes
 10174 ;; Hardware stack levels used: 1
 10175 ;; Hardware stack levels required when called: 9
 10176 ;; This function calls:
 10177 ;;		_GPIO_Pin_Write_Logic
 10178 ;; This function is called by:
 10179 ;;		_Get_Distance
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183                           	psect	text53
 10184  004FAA                     __ptext53:
 10185                           	callstack 0
 10186  004FAA                     _send_trig_pulse:
 10187                           	callstack 20
 10188  004FAA                     
 10189                           ;Robot/sensors/ultrasonic/ultrasonic.c: 57: static void send_trig_pulse(const ultrasonic
      +                          _config_st* ultrasonic_object);Robot/sensors/ultrasonic/ultrasonic.c: 58: {;Robot/sensor
      +                          s/ultrasonic/ultrasonic.c: 59:     GPIO_Pin_Write_Logic(&(ultrasonic_object->trig_pin),G
      +                          PIO_HIGH);
 10190  004FAA  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
 10191  004FAE  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
 10192  004FB2  0E01               	movlw	1
 10193  004FB4  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10194  004FB6  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
 10195  004FBA                     
 10196                           ;Robot/sensors/ultrasonic/ultrasonic.c: 60:     _delay((unsigned long)((10)*(8000000/400
      +                          0000.0)));
 10197  004FBA  0E06               	movlw	6
 10198  004FBC                     u12667:
 10199  004FBC  2EE8               	decfsz	wreg,f,c
 10200  004FBE  D7FE               	bra	u12667
 10201  004FC0  F000 F000          	nop2	
 10202  004FC4                     
 10203                           ;Robot/sensors/ultrasonic/ultrasonic.c: 61:     GPIO_Pin_Write_Logic(&(ultrasonic_object
      +                          ->trig_pin),GPIO_LOW);
 10204  004FC4  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
 10205  004FC8  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
 10206  004FCC  0E00               	movlw	0
 10207  004FCE  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10208  004FD0  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
 10209  004FD4  0012               	return		;funcret
 10210  004FD6                     __end_of_send_trig_pulse:
 10211                           	callstack 0
 10212                           
 10213 ;; *************** function ___xxtofl *****************
 10214 ;; Defined at:
 10215 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  sign            1    wreg     unsigned char 
 10218 ;;  val             4   29[COMRAM] long 
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;  sign            1    0[BANK0 ] unsigned char 
 10221 ;;  arg             4    2[BANK0 ] unsigned long 
 10222 ;;  exp             1    1[BANK0 ] unsigned char 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  4   29[COMRAM] unsigned char 
 10225 ;; Registers used:
 10226 ;;		wreg, status,2, status,0
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;Total ram usage:       14 bytes
 10237 ;; Hardware stack levels used: 1
 10238 ;; Hardware stack levels required when called: 8
 10239 ;; This function calls:
 10240 ;;		Nothing
 10241 ;; This function is called by:
 10242 ;;		_Servo_SetAngle
 10243 ;;		_CCP_PWM_Set_Duty
 10244 ;;		_async_config_baud_rate_gen
 10245 ;;		_I2C_Master_Mode_Clock_Configurations
 10246 ;;		_Get_Distance
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text54
 10251  002792                     __ptext54:
 10252                           	callstack 0
 10253  002792                     ___xxtofl:
 10254                           	callstack 20
 10255                           
 10256                           ;incstack = 0
 10257                           ;___xxtofl@sign stored from wreg
 10258  002792  0100               	movlb	0	; () banked
 10259  002794  6F60               	movwf	___xxtofl@sign& (0+255),b
 10260  002796  0100               	movlb	0	; () banked
 10261  002798  5160               	movf	___xxtofl@sign& (0+255),w,b
 10262  00279A  B4D8               	btfsc	status,2,c
 10263  00279C  EFD2  F013         	goto	u10511
 10264  0027A0  EFD4  F013         	goto	u10510
 10265  0027A4                     u10511:
 10266  0027A4  EFF6  F013         	goto	l2647
 10267  0027A8                     u10510:
 10268  0027A8                     
 10269                           ; BSR set to: 0
 10270  0027A8  BE21               	btfsc	(___xxtofl@val+3)^0,7,c
 10271  0027AA  EFDB  F013         	goto	u10520
 10272  0027AE  EFD9  F013         	goto	u10521
 10273  0027B2                     u10521:
 10274  0027B2  EFF6  F013         	goto	l2647
 10275  0027B6                     u10520:
 10276  0027B6                     
 10277                           ; BSR set to: 0
 10278  0027B6  C01E  F022         	movff	___xxtofl@val,??___xxtofl
 10279  0027BA  C01F  F023         	movff	___xxtofl@val+1,??___xxtofl+1
 10280  0027BE  C020  F024         	movff	___xxtofl@val+2,??___xxtofl+2
 10281  0027C2  C021  F025         	movff	___xxtofl@val+3,??___xxtofl+3
 10282  0027C6  1E22               	comf	??___xxtofl^0,f,c
 10283  0027C8  1E23               	comf	(??___xxtofl+1)^0,f,c
 10284  0027CA  1E24               	comf	(??___xxtofl+2)^0,f,c
 10285  0027CC  1E25               	comf	(??___xxtofl+3)^0,f,c
 10286  0027CE  2A22               	incf	??___xxtofl^0,f,c
 10287  0027D0  0E00               	movlw	0
 10288  0027D2  2223               	addwfc	(??___xxtofl+1)^0,f,c
 10289  0027D4  2224               	addwfc	(??___xxtofl+2)^0,f,c
 10290  0027D6  2225               	addwfc	(??___xxtofl+3)^0,f,c
 10291  0027D8  C022  F062         	movff	??___xxtofl,___xxtofl@arg
 10292  0027DC  C023  F063         	movff	??___xxtofl+1,___xxtofl@arg+1
 10293  0027E0  C024  F064         	movff	??___xxtofl+2,___xxtofl@arg+2
 10294  0027E4  C025  F065         	movff	??___xxtofl+3,___xxtofl@arg+3
 10295  0027E8  EFFE  F013         	goto	l10182
 10296  0027EC                     l2647:
 10297                           
 10298                           ; BSR set to: 0
 10299  0027EC  C01E  F062         	movff	___xxtofl@val,___xxtofl@arg
 10300  0027F0  C01F  F063         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10301  0027F4  C020  F064         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10302  0027F8  C021  F065         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10303  0027FC                     l10182:
 10304                           
 10305                           ; BSR set to: 0
 10306  0027FC  501E               	movf	___xxtofl@val^0,w,c
 10307  0027FE  101F               	iorwf	(___xxtofl@val+1)^0,w,c
 10308  002800  1020               	iorwf	(___xxtofl@val+2)^0,w,c
 10309  002802  1021               	iorwf	(___xxtofl@val+3)^0,w,c
 10310  002804  A4D8               	btfss	status,2,c
 10311  002806  EF07  F014         	goto	u10531
 10312  00280A  EF09  F014         	goto	u10530
 10313  00280E                     u10531:
 10314  00280E  EF13  F014         	goto	l10188
 10315  002812                     u10530:
 10316  002812                     
 10317                           ; BSR set to: 0
 10318  002812  0E00               	movlw	0
 10319  002814  6E1E               	movwf	?___xxtofl^0,c
 10320  002816  0E00               	movlw	0
 10321  002818  6E1F               	movwf	(?___xxtofl+1)^0,c
 10322  00281A  0E00               	movlw	0
 10323  00281C  6E20               	movwf	(?___xxtofl+2)^0,c
 10324  00281E  0E00               	movlw	0
 10325  002820  6E21               	movwf	(?___xxtofl+3)^0,c
 10326  002822  EFA4  F014         	goto	l2650
 10327  002826                     l10188:
 10328                           
 10329                           ; BSR set to: 0
 10330  002826  0E96               	movlw	150
 10331  002828  6F61               	movwf	___xxtofl@exp& (0+255),b
 10332  00282A  EF1D  F014         	goto	l10192
 10333  00282E                     l10190:
 10334                           
 10335                           ; BSR set to: 0
 10336  00282E  2B61               	incf	___xxtofl@exp& (0+255),f,b
 10337  002830  90D8               	bcf	status,0,c
 10338  002832  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10339  002834  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10340  002836  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10341  002838  3362               	rrcf	___xxtofl@arg& (0+255),f,b
 10342  00283A                     l10192:
 10343                           
 10344                           ; BSR set to: 0
 10345  00283A  0E00               	movlw	0
 10346  00283C  1562               	andwf	___xxtofl@arg& (0+255),w,b
 10347  00283E  6E22               	movwf	??___xxtofl^0,c
 10348  002840  0E00               	movlw	0
 10349  002842  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10350  002844  6E23               	movwf	(??___xxtofl+1)^0,c
 10351  002846  0E00               	movlw	0
 10352  002848  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10353  00284A  6E24               	movwf	(??___xxtofl+2)^0,c
 10354  00284C  0EFE               	movlw	254
 10355  00284E  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10356  002850  6E25               	movwf	(??___xxtofl+3)^0,c
 10357  002852  5022               	movf	??___xxtofl^0,w,c
 10358  002854  1023               	iorwf	(??___xxtofl+1)^0,w,c
 10359  002856  1024               	iorwf	(??___xxtofl+2)^0,w,c
 10360  002858  1025               	iorwf	(??___xxtofl+3)^0,w,c
 10361  00285A  A4D8               	btfss	status,2,c
 10362  00285C  EF32  F014         	goto	u10541
 10363  002860  EF34  F014         	goto	u10540
 10364  002864                     u10541:
 10365  002864  EF17  F014         	goto	l10190
 10366  002868                     u10540:
 10367  002868  EF42  F014         	goto	l2654
 10368  00286C                     l10194:
 10369                           
 10370                           ; BSR set to: 0
 10371  00286C  2B61               	incf	___xxtofl@exp& (0+255),f,b
 10372  00286E                     
 10373                           ; BSR set to: 0
 10374  00286E  0E01               	movlw	1
 10375  002870  2762               	addwf	___xxtofl@arg& (0+255),f,b
 10376  002872  0E00               	movlw	0
 10377  002874  2363               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10378  002876  2364               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10379  002878  2365               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10380  00287A                     
 10381                           ; BSR set to: 0
 10382  00287A  90D8               	bcf	status,0,c
 10383  00287C  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10384  00287E  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10385  002880  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10386  002882  3362               	rrcf	___xxtofl@arg& (0+255),f,b
 10387  002884                     l2654:
 10388                           
 10389                           ; BSR set to: 0
 10390  002884  0E00               	movlw	0
 10391  002886  1562               	andwf	___xxtofl@arg& (0+255),w,b
 10392  002888  6E22               	movwf	??___xxtofl^0,c
 10393  00288A  0E00               	movlw	0
 10394  00288C  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10395  00288E  6E23               	movwf	(??___xxtofl+1)^0,c
 10396  002890  0E00               	movlw	0
 10397  002892  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10398  002894  6E24               	movwf	(??___xxtofl+2)^0,c
 10399  002896  0EFF               	movlw	255
 10400  002898  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10401  00289A  6E25               	movwf	(??___xxtofl+3)^0,c
 10402  00289C  5022               	movf	??___xxtofl^0,w,c
 10403  00289E  1023               	iorwf	(??___xxtofl+1)^0,w,c
 10404  0028A0  1024               	iorwf	(??___xxtofl+2)^0,w,c
 10405  0028A2  1025               	iorwf	(??___xxtofl+3)^0,w,c
 10406  0028A4  A4D8               	btfss	status,2,c
 10407  0028A6  EF57  F014         	goto	u10551
 10408  0028AA  EF59  F014         	goto	u10550
 10409  0028AE                     u10551:
 10410  0028AE  EF36  F014         	goto	l10194
 10411  0028B2                     u10550:
 10412  0028B2  EF61  F014         	goto	l10202
 10413  0028B6                     l10200:
 10414                           
 10415                           ; BSR set to: 0
 10416  0028B6  0761               	decf	___xxtofl@exp& (0+255),f,b
 10417  0028B8  90D8               	bcf	status,0,c
 10418  0028BA  3762               	rlcf	___xxtofl@arg& (0+255),f,b
 10419  0028BC  3763               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10420  0028BE  3764               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10421  0028C0  3765               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10422  0028C2                     l10202:
 10423                           
 10424                           ; BSR set to: 0
 10425  0028C2  BF64               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10426  0028C4  EF66  F014         	goto	u10561
 10427  0028C8  EF68  F014         	goto	u10560
 10428  0028CC                     u10561:
 10429  0028CC  EF70  F014         	goto	l2661
 10430  0028D0                     u10560:
 10431  0028D0                     
 10432                           ; BSR set to: 0
 10433  0028D0  0E02               	movlw	2
 10434  0028D2  6161               	cpfslt	___xxtofl@exp& (0+255),b
 10435  0028D4  EF6E  F014         	goto	u10571
 10436  0028D8  EF70  F014         	goto	u10570
 10437  0028DC                     u10571:
 10438  0028DC  EF5B  F014         	goto	l10200
 10439  0028E0                     u10570:
 10440  0028E0                     l2661:
 10441                           
 10442                           ; BSR set to: 0
 10443  0028E0  B161               	btfsc	___xxtofl@exp& (0+255),0,b
 10444  0028E2  EF75  F014         	goto	u10581
 10445  0028E6  EF77  F014         	goto	u10580
 10446  0028EA                     u10581:
 10447  0028EA  EF78  F014         	goto	l10208
 10448  0028EE                     u10580:
 10449  0028EE                     
 10450                           ; BSR set to: 0
 10451  0028EE  9F64               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 10452  0028F0                     l10208:
 10453                           
 10454                           ; BSR set to: 0
 10455  0028F0  90D8               	bcf	status,0,c
 10456  0028F2  3361               	rrcf	___xxtofl@exp& (0+255),f,b
 10457  0028F4                     
 10458                           ; BSR set to: 0
 10459  0028F4  C061  F022         	movff	___xxtofl@exp,??___xxtofl
 10460  0028F8  6A23               	clrf	(??___xxtofl+1)^0,c
 10461  0028FA  6A24               	clrf	(??___xxtofl+2)^0,c
 10462  0028FC  6A25               	clrf	(??___xxtofl+3)^0,c
 10463  0028FE  C022  F025         	movff	??___xxtofl,??___xxtofl+3
 10464  002902  6A24               	clrf	(??___xxtofl+2)^0,c
 10465  002904  6A23               	clrf	(??___xxtofl+1)^0,c
 10466  002906  6A22               	clrf	??___xxtofl^0,c
 10467  002908  5022               	movf	??___xxtofl^0,w,c
 10468  00290A  1362               	iorwf	___xxtofl@arg& (0+255),f,b
 10469  00290C  5023               	movf	(??___xxtofl+1)^0,w,c
 10470  00290E  1363               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10471  002910  5024               	movf	(??___xxtofl+2)^0,w,c
 10472  002912  1364               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10473  002914  5025               	movf	(??___xxtofl+3)^0,w,c
 10474  002916  1365               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10475  002918                     
 10476                           ; BSR set to: 0
 10477  002918  5160               	movf	___xxtofl@sign& (0+255),w,b
 10478  00291A  B4D8               	btfsc	status,2,c
 10479  00291C  EF92  F014         	goto	u10591
 10480  002920  EF94  F014         	goto	u10590
 10481  002924                     u10591:
 10482  002924  EF9C  F014         	goto	l10218
 10483  002928                     u10590:
 10484  002928                     
 10485                           ; BSR set to: 0
 10486  002928  BE21               	btfsc	(___xxtofl@val+3)^0,7,c
 10487  00292A  EF9B  F014         	goto	u10600
 10488  00292E  EF99  F014         	goto	u10601
 10489  002932                     u10601:
 10490  002932  EF9C  F014         	goto	l10218
 10491  002936                     u10600:
 10492  002936                     
 10493                           ; BSR set to: 0
 10494  002936  8F65               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10495  002938                     l10218:
 10496                           
 10497                           ; BSR set to: 0
 10498  002938  C062  F01E         	movff	___xxtofl@arg,?___xxtofl
 10499  00293C  C063  F01F         	movff	___xxtofl@arg+1,?___xxtofl+1
 10500  002940  C064  F020         	movff	___xxtofl@arg+2,?___xxtofl+2
 10501  002944  C065  F021         	movff	___xxtofl@arg+3,?___xxtofl+3
 10502  002948                     l2650:
 10503                           
 10504                           ; BSR set to: 0
 10505  002948  0012               	return		;funcret
 10506  00294A                     __end_of___xxtofl:
 10507                           	callstack 0
 10508                           
 10509 ;; *************** function ___fldiv *****************
 10510 ;; Defined at:
 10511 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;  b               4    6[BANK0 ] unsigned char 
 10514 ;;  a               4   10[BANK0 ] unsigned char 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  grs             4   25[BANK0 ] unsigned long 
 10517 ;;  rem             4   18[BANK0 ] unsigned long 
 10518 ;;  new_exp         2   23[BANK0 ] short 
 10519 ;;  aexp            1   30[BANK0 ] unsigned char 
 10520 ;;  bexp            1   29[BANK0 ] unsigned char 
 10521 ;;  sign            1   22[BANK0 ] unsigned char 
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  4    6[BANK0 ] unsigned char 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10531 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;Total ram usage:       25 bytes
 10536 ;; Hardware stack levels used: 1
 10537 ;; Hardware stack levels required when called: 8
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_CCP_PWM_Set_Duty
 10542 ;;		_async_config_baud_rate_gen
 10543 ;;		_I2C_Master_Mode_Clock_Configurations
 10544 ;;		_Get_Distance
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           	psect	text55
 10549  001CEE                     __ptext55:
 10550                           	callstack 0
 10551  001CEE                     ___fldiv:
 10552                           	callstack 17
 10553  001CEE  0100               	movlb	0	; () banked
 10554  001CF0  5169               	movf	(___fldiv@b+3)& (0+255),w,b
 10555  001CF2  0B80               	andlw	128
 10556  001CF4  6F76               	movwf	___fldiv@sign& (0+255),b
 10557  001CF6  5169               	movf	(___fldiv@b+3)& (0+255),w,b
 10558  001CF8  2569               	addwf	(___fldiv@b+3)& (0+255),w,b
 10559  001CFA  6F7D               	movwf	___fldiv@bexp& (0+255),b
 10560  001CFC                     
 10561                           ; BSR set to: 0
 10562  001CFC  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
 10563  001CFE  EF83  F00E         	goto	u10211
 10564  001D02  EF85  F00E         	goto	u10210
 10565  001D06                     u10211:
 10566  001D06  EF86  F00E         	goto	l10000
 10567  001D0A                     u10210:
 10568  001D0A                     
 10569                           ; BSR set to: 0
 10570  001D0A  817D               	bsf	___fldiv@bexp& (0+255),0,b
 10571  001D0C                     l10000:
 10572                           
 10573                           ; BSR set to: 0
 10574  001D0C  517D               	movf	___fldiv@bexp& (0+255),w,b
 10575  001D0E  B4D8               	btfsc	status,2,c
 10576  001D10  EF8C  F00E         	goto	u10221
 10577  001D14  EF8E  F00E         	goto	u10220
 10578  001D18                     u10221:
 10579  001D18  EFA3  F00E         	goto	l10010
 10580  001D1C                     u10220:
 10581  001D1C                     
 10582                           ; BSR set to: 0
 10583  001D1C  297D               	incf	___fldiv@bexp& (0+255),w,b
 10584  001D1E  A4D8               	btfss	status,2,c
 10585  001D20  EF94  F00E         	goto	u10231
 10586  001D24  EF96  F00E         	goto	u10230
 10587  001D28                     u10231:
 10588  001D28  EF9E  F00E         	goto	l10006
 10589  001D2C                     u10230:
 10590  001D2C                     
 10591                           ; BSR set to: 0
 10592  001D2C  0E00               	movlw	0
 10593  001D2E  6F66               	movwf	___fldiv@b& (0+255),b
 10594  001D30  0E00               	movlw	0
 10595  001D32  6F67               	movwf	(___fldiv@b+1)& (0+255),b
 10596  001D34  0E00               	movlw	0
 10597  001D36  6F68               	movwf	(___fldiv@b+2)& (0+255),b
 10598  001D38  0E00               	movlw	0
 10599  001D3A  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 10600  001D3C                     l10006:
 10601                           
 10602                           ; BSR set to: 0
 10603  001D3C  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
 10604  001D3E                     
 10605                           ; BSR set to: 0
 10606  001D3E  0E00               	movlw	0
 10607  001D40  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 10608  001D42  EFAB  F00E         	goto	l10012
 10609  001D46                     l10010:
 10610                           
 10611                           ; BSR set to: 0
 10612  001D46  0E00               	movlw	0
 10613  001D48  6F66               	movwf	___fldiv@b& (0+255),b
 10614  001D4A  0E00               	movlw	0
 10615  001D4C  6F67               	movwf	(___fldiv@b+1)& (0+255),b
 10616  001D4E  0E00               	movlw	0
 10617  001D50  6F68               	movwf	(___fldiv@b+2)& (0+255),b
 10618  001D52  0E00               	movlw	0
 10619  001D54  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 10620  001D56                     l10012:
 10621                           
 10622                           ; BSR set to: 0
 10623  001D56  516D               	movf	(___fldiv@a+3)& (0+255),w,b
 10624  001D58  0B80               	andlw	128
 10625  001D5A  1B76               	xorwf	___fldiv@sign& (0+255),f,b
 10626  001D5C                     
 10627                           ; BSR set to: 0
 10628  001D5C  516D               	movf	(___fldiv@a+3)& (0+255),w,b
 10629  001D5E  256D               	addwf	(___fldiv@a+3)& (0+255),w,b
 10630  001D60  6F7E               	movwf	___fldiv@aexp& (0+255),b
 10631  001D62                     
 10632                           ; BSR set to: 0
 10633  001D62  AF6C               	btfss	(___fldiv@a+2)& (0+255),7,b
 10634  001D64  EFB6  F00E         	goto	u10241
 10635  001D68  EFB8  F00E         	goto	u10240
 10636  001D6C                     u10241:
 10637  001D6C  EFB9  F00E         	goto	l10020
 10638  001D70                     u10240:
 10639  001D70                     
 10640                           ; BSR set to: 0
 10641  001D70  817E               	bsf	___fldiv@aexp& (0+255),0,b
 10642  001D72                     l10020:
 10643                           
 10644                           ; BSR set to: 0
 10645  001D72  517E               	movf	___fldiv@aexp& (0+255),w,b
 10646  001D74  B4D8               	btfsc	status,2,c
 10647  001D76  EFBF  F00E         	goto	u10251
 10648  001D7A  EFC1  F00E         	goto	u10250
 10649  001D7E                     u10251:
 10650  001D7E  EFD6  F00E         	goto	l10030
 10651  001D82                     u10250:
 10652  001D82                     
 10653                           ; BSR set to: 0
 10654  001D82  297E               	incf	___fldiv@aexp& (0+255),w,b
 10655  001D84  A4D8               	btfss	status,2,c
 10656  001D86  EFC7  F00E         	goto	u10261
 10657  001D8A  EFC9  F00E         	goto	u10260
 10658  001D8E                     u10261:
 10659  001D8E  EFD1  F00E         	goto	l10026
 10660  001D92                     u10260:
 10661  001D92                     
 10662                           ; BSR set to: 0
 10663  001D92  0E00               	movlw	0
 10664  001D94  6F6A               	movwf	___fldiv@a& (0+255),b
 10665  001D96  0E00               	movlw	0
 10666  001D98  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
 10667  001D9A  0E00               	movlw	0
 10668  001D9C  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
 10669  001D9E  0E00               	movlw	0
 10670  001DA0  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
 10671  001DA2                     l10026:
 10672                           
 10673                           ; BSR set to: 0
 10674  001DA2  8F6C               	bsf	(___fldiv@a+2)& (0+255),7,b
 10675  001DA4                     
 10676                           ; BSR set to: 0
 10677  001DA4  0E00               	movlw	0
 10678  001DA6  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
 10679  001DA8  EFDE  F00E         	goto	l10032
 10680  001DAC                     l10030:
 10681                           
 10682                           ; BSR set to: 0
 10683  001DAC  0E00               	movlw	0
 10684  001DAE  6F6A               	movwf	___fldiv@a& (0+255),b
 10685  001DB0  0E00               	movlw	0
 10686  001DB2  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
 10687  001DB4  0E00               	movlw	0
 10688  001DB6  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
 10689  001DB8  0E00               	movlw	0
 10690  001DBA  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
 10691  001DBC                     l10032:
 10692                           
 10693                           ; BSR set to: 0
 10694  001DBC  516A               	movf	___fldiv@a& (0+255),w,b
 10695  001DBE  116B               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10696  001DC0  116C               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10697  001DC2  116D               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10698  001DC4  A4D8               	btfss	status,2,c
 10699  001DC6  EFE7  F00E         	goto	u10271
 10700  001DCA  EFE9  F00E         	goto	u10270
 10701  001DCE                     u10271:
 10702  001DCE  EF01  F00F         	goto	l10044
 10703  001DD2                     u10270:
 10704  001DD2                     
 10705                           ; BSR set to: 0
 10706  001DD2  0E00               	movlw	0
 10707  001DD4  6F66               	movwf	___fldiv@b& (0+255),b
 10708  001DD6  0E00               	movlw	0
 10709  001DD8  6F67               	movwf	(___fldiv@b+1)& (0+255),b
 10710  001DDA  0E00               	movlw	0
 10711  001DDC  6F68               	movwf	(___fldiv@b+2)& (0+255),b
 10712  001DDE  0E00               	movlw	0
 10713  001DE0  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 10714  001DE2                     
 10715                           ; BSR set to: 0
 10716  001DE2  0E80               	movlw	128
 10717  001DE4  1368               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10718  001DE6  0E7F               	movlw	127
 10719  001DE8  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10720  001DEA                     l10038:
 10721                           
 10722                           ; BSR set to: 0
 10723  001DEA  5176               	movf	___fldiv@sign& (0+255),w,b
 10724  001DEC  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10725  001DEE                     
 10726                           ; BSR set to: 0
 10727  001DEE  C066  F066         	movff	___fldiv@b,?___fldiv
 10728  001DF2  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
 10729  001DF6  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
 10730  001DFA  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
 10731  001DFE  EF44  F010         	goto	l2574
 10732  001E02                     l10044:
 10733                           
 10734                           ; BSR set to: 0
 10735  001E02  517D               	movf	___fldiv@bexp& (0+255),w,b
 10736  001E04  A4D8               	btfss	status,2,c
 10737  001E06  EF07  F00F         	goto	u10281
 10738  001E0A  EF09  F00F         	goto	u10280
 10739  001E0E                     u10281:
 10740  001E0E  EF13  F00F         	goto	l10052
 10741  001E12                     u10280:
 10742  001E12                     
 10743                           ; BSR set to: 0
 10744  001E12  0E00               	movlw	0
 10745  001E14  6F66               	movwf	?___fldiv& (0+255),b
 10746  001E16  0E00               	movlw	0
 10747  001E18  6F67               	movwf	(?___fldiv+1)& (0+255),b
 10748  001E1A  0E00               	movlw	0
 10749  001E1C  6F68               	movwf	(?___fldiv+2)& (0+255),b
 10750  001E1E  0E00               	movlw	0
 10751  001E20  6F69               	movwf	(?___fldiv+3)& (0+255),b
 10752  001E22  EF44  F010         	goto	l2574
 10753  001E26                     l10052:
 10754                           
 10755                           ; BSR set to: 0
 10756  001E26  517E               	movf	___fldiv@aexp& (0+255),w,b
 10757  001E28  C07D  F06E         	movff	___fldiv@bexp,??___fldiv
 10758  001E2C  6B6F               	clrf	(??___fldiv+1)& (0+255),b
 10759  001E2E  5F6E               	subwf	??___fldiv& (0+255),f,b
 10760  001E30  0E00               	movlw	0
 10761  001E32  5B6F               	subwfb	(??___fldiv+1)& (0+255),f,b
 10762  001E34  0E7F               	movlw	127
 10763  001E36  256E               	addwf	??___fldiv& (0+255),w,b
 10764  001E38  6F77               	movwf	___fldiv@new_exp& (0+255),b
 10765  001E3A  0E00               	movlw	0
 10766  001E3C  216F               	addwfc	(??___fldiv+1)& (0+255),w,b
 10767  001E3E  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10768  001E40                     
 10769                           ; BSR set to: 0
 10770  001E40  C066  F072         	movff	___fldiv@b,___fldiv@rem
 10771  001E44  C067  F073         	movff	___fldiv@b+1,___fldiv@rem+1
 10772  001E48  C068  F074         	movff	___fldiv@b+2,___fldiv@rem+2
 10773  001E4C  C069  F075         	movff	___fldiv@b+3,___fldiv@rem+3
 10774  001E50                     
 10775                           ; BSR set to: 0
 10776  001E50  0E00               	movlw	0
 10777  001E52  6F66               	movwf	___fldiv@b& (0+255),b
 10778  001E54  0E00               	movlw	0
 10779  001E56  6F67               	movwf	(___fldiv@b+1)& (0+255),b
 10780  001E58  0E00               	movlw	0
 10781  001E5A  6F68               	movwf	(___fldiv@b+2)& (0+255),b
 10782  001E5C  0E00               	movlw	0
 10783  001E5E  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 10784  001E60                     
 10785                           ; BSR set to: 0
 10786  001E60  0E00               	movlw	0
 10787  001E62  6F79               	movwf	___fldiv@grs& (0+255),b
 10788  001E64  0E00               	movlw	0
 10789  001E66  6F7A               	movwf	(___fldiv@grs+1)& (0+255),b
 10790  001E68  0E00               	movlw	0
 10791  001E6A  6F7B               	movwf	(___fldiv@grs+2)& (0+255),b
 10792  001E6C  0E00               	movlw	0
 10793  001E6E  6F7C               	movwf	(___fldiv@grs+3)& (0+255),b
 10794  001E70                     
 10795                           ; BSR set to: 0
 10796  001E70  0E00               	movlw	0
 10797  001E72  6F7E               	movwf	___fldiv@aexp& (0+255),b
 10798  001E74  EF74  F00F         	goto	l2576
 10799  001E78                     l10062:
 10800                           
 10801                           ; BSR set to: 0
 10802  001E78  517E               	movf	___fldiv@aexp& (0+255),w,b
 10803  001E7A  B4D8               	btfsc	status,2,c
 10804  001E7C  EF42  F00F         	goto	u10291
 10805  001E80  EF44  F00F         	goto	u10290
 10806  001E84                     u10291:
 10807  001E84  EF5B  F00F         	goto	l10070
 10808  001E88                     u10290:
 10809  001E88                     
 10810                           ; BSR set to: 0
 10811  001E88  90D8               	bcf	status,0,c
 10812  001E8A  3772               	rlcf	___fldiv@rem& (0+255),f,b
 10813  001E8C  3773               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10814  001E8E  3774               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10815  001E90  3775               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10816  001E92  90D8               	bcf	status,0,c
 10817  001E94  3766               	rlcf	___fldiv@b& (0+255),f,b
 10818  001E96  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10819  001E98  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10820  001E9A  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10821  001E9C                     
 10822                           ; BSR set to: 0
 10823  001E9C  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10824  001E9E  EF53  F00F         	goto	u10301
 10825  001EA2  EF55  F00F         	goto	u10300
 10826  001EA6                     u10301:
 10827  001EA6  EF56  F00F         	goto	l2579
 10828  001EAA                     u10300:
 10829  001EAA                     
 10830                           ; BSR set to: 0
 10831  001EAA  8166               	bsf	___fldiv@b& (0+255),0,b
 10832  001EAC                     l2579:
 10833                           
 10834                           ; BSR set to: 0
 10835  001EAC  90D8               	bcf	status,0,c
 10836  001EAE  3779               	rlcf	___fldiv@grs& (0+255),f,b
 10837  001EB0  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10838  001EB2  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10839  001EB4  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10840  001EB6                     l10070:
 10841                           
 10842                           ; BSR set to: 0
 10843  001EB6  516A               	movf	___fldiv@a& (0+255),w,b
 10844  001EB8  5D72               	subwf	___fldiv@rem& (0+255),w,b
 10845  001EBA  516B               	movf	(___fldiv@a+1)& (0+255),w,b
 10846  001EBC  5973               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10847  001EBE  516C               	movf	(___fldiv@a+2)& (0+255),w,b
 10848  001EC0  5974               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10849  001EC2  516D               	movf	(___fldiv@a+3)& (0+255),w,b
 10850  001EC4  5975               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10851  001EC6  A0D8               	btfss	status,0,c
 10852  001EC8  EF68  F00F         	goto	u10311
 10853  001ECC  EF6A  F00F         	goto	u10310
 10854  001ED0                     u10311:
 10855  001ED0  EF73  F00F         	goto	l10076
 10856  001ED4                     u10310:
 10857  001ED4                     
 10858                           ; BSR set to: 0
 10859  001ED4  8D7C               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10860  001ED6                     
 10861                           ; BSR set to: 0
 10862  001ED6  516A               	movf	___fldiv@a& (0+255),w,b
 10863  001ED8  5F72               	subwf	___fldiv@rem& (0+255),f,b
 10864  001EDA  516B               	movf	(___fldiv@a+1)& (0+255),w,b
 10865  001EDC  5B73               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10866  001EDE  516C               	movf	(___fldiv@a+2)& (0+255),w,b
 10867  001EE0  5B74               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10868  001EE2  516D               	movf	(___fldiv@a+3)& (0+255),w,b
 10869  001EE4  5B75               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10870  001EE6                     l10076:
 10871                           
 10872                           ; BSR set to: 0
 10873  001EE6  2B7E               	incf	___fldiv@aexp& (0+255),f,b
 10874  001EE8                     l2576:
 10875                           
 10876                           ; BSR set to: 0
 10877  001EE8  0E19               	movlw	25
 10878  001EEA  657E               	cpfsgt	___fldiv@aexp& (0+255),b
 10879  001EEC  EF7A  F00F         	goto	u10321
 10880  001EF0  EF7C  F00F         	goto	u10320
 10881  001EF4                     u10321:
 10882  001EF4  EF3C  F00F         	goto	l10062
 10883  001EF8                     u10320:
 10884  001EF8                     
 10885                           ; BSR set to: 0
 10886  001EF8  5172               	movf	___fldiv@rem& (0+255),w,b
 10887  001EFA  1173               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10888  001EFC  1174               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10889  001EFE  1175               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10890  001F00  B4D8               	btfsc	status,2,c
 10891  001F02  EF85  F00F         	goto	u10331
 10892  001F06  EF87  F00F         	goto	u10330
 10893  001F0A                     u10331:
 10894  001F0A  EF9F  F00F         	goto	l10088
 10895  001F0E                     u10330:
 10896  001F0E                     
 10897                           ; BSR set to: 0
 10898  001F0E  8179               	bsf	___fldiv@grs& (0+255),0,b
 10899  001F10  EF9F  F00F         	goto	l10088
 10900  001F14                     l10082:
 10901                           
 10902                           ; BSR set to: 0
 10903  001F14  90D8               	bcf	status,0,c
 10904  001F16  3766               	rlcf	___fldiv@b& (0+255),f,b
 10905  001F18  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10906  001F1A  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10907  001F1C  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10908  001F1E                     
 10909                           ; BSR set to: 0
 10910  001F1E  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10911  001F20  EF94  F00F         	goto	u10341
 10912  001F24  EF96  F00F         	goto	u10340
 10913  001F28                     u10341:
 10914  001F28  EF97  F00F         	goto	l2585
 10915  001F2C                     u10340:
 10916  001F2C                     
 10917                           ; BSR set to: 0
 10918  001F2C  8166               	bsf	___fldiv@b& (0+255),0,b
 10919  001F2E                     l2585:
 10920                           
 10921                           ; BSR set to: 0
 10922  001F2E  90D8               	bcf	status,0,c
 10923  001F30  3779               	rlcf	___fldiv@grs& (0+255),f,b
 10924  001F32  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10925  001F34  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10926  001F36  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10927  001F38  0777               	decf	___fldiv@new_exp& (0+255),f,b
 10928  001F3A  A0D8               	btfss	status,0,c
 10929  001F3C  0778               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10930  001F3E                     l10088:
 10931                           
 10932                           ; BSR set to: 0
 10933  001F3E  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
 10934  001F40  EFA4  F00F         	goto	u10351
 10935  001F44  EFA6  F00F         	goto	u10350
 10936  001F48                     u10351:
 10937  001F48  EF8A  F00F         	goto	l10082
 10938  001F4C                     u10350:
 10939  001F4C                     
 10940                           ; BSR set to: 0
 10941  001F4C  0E00               	movlw	0
 10942  001F4E  6F7E               	movwf	___fldiv@aexp& (0+255),b
 10943  001F50                     
 10944                           ; BSR set to: 0
 10945  001F50  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10946  001F52  EFAD  F00F         	goto	u10361
 10947  001F56  EFAF  F00F         	goto	u10360
 10948  001F5A                     u10361:
 10949  001F5A  EFD3  F00F         	goto	l2587
 10950  001F5E                     u10360:
 10951  001F5E                     
 10952                           ; BSR set to: 0
 10953  001F5E  0EFF               	movlw	255
 10954  001F60  1579               	andwf	___fldiv@grs& (0+255),w,b
 10955  001F62  6F6E               	movwf	??___fldiv& (0+255),b
 10956  001F64  0EFF               	movlw	255
 10957  001F66  157A               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10958  001F68  6F6F               	movwf	(??___fldiv+1)& (0+255),b
 10959  001F6A  0EFF               	movlw	255
 10960  001F6C  157B               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10961  001F6E  6F70               	movwf	(??___fldiv+2)& (0+255),b
 10962  001F70  0E7F               	movlw	127
 10963  001F72  157C               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10964  001F74  6F71               	movwf	(??___fldiv+3)& (0+255),b
 10965  001F76  516E               	movf	??___fldiv& (0+255),w,b
 10966  001F78  116F               	iorwf	(??___fldiv+1)& (0+255),w,b
 10967  001F7A  1170               	iorwf	(??___fldiv+2)& (0+255),w,b
 10968  001F7C  1171               	iorwf	(??___fldiv+3)& (0+255),w,b
 10969  001F7E  B4D8               	btfsc	status,2,c
 10970  001F80  EFC4  F00F         	goto	u10371
 10971  001F84  EFC6  F00F         	goto	u10370
 10972  001F88                     u10371:
 10973  001F88  EFCA  F00F         	goto	l2588
 10974  001F8C                     u10370:
 10975  001F8C                     l10096:
 10976                           
 10977                           ; BSR set to: 0
 10978  001F8C  0E01               	movlw	1
 10979  001F8E  6F7E               	movwf	___fldiv@aexp& (0+255),b
 10980  001F90  EFD3  F00F         	goto	l2587
 10981  001F94                     l2588:
 10982                           
 10983                           ; BSR set to: 0
 10984  001F94  A166               	btfss	___fldiv@b& (0+255),0,b
 10985  001F96  EFCF  F00F         	goto	u10381
 10986  001F9A  EFD1  F00F         	goto	u10380
 10987  001F9E                     u10381:
 10988  001F9E  EFD3  F00F         	goto	l2587
 10989  001FA2                     u10380:
 10990  001FA2  EFC6  F00F         	goto	l10096
 10991  001FA6                     l2587:
 10992                           
 10993                           ; BSR set to: 0
 10994  001FA6  517E               	movf	___fldiv@aexp& (0+255),w,b
 10995  001FA8  B4D8               	btfsc	status,2,c
 10996  001FAA  EFD9  F00F         	goto	u10391
 10997  001FAE  EFDB  F00F         	goto	u10390
 10998  001FB2                     u10391:
 10999  001FB2  EFFF  F00F         	goto	l10108
 11000  001FB6                     u10390:
 11001  001FB6                     
 11002                           ; BSR set to: 0
 11003  001FB6  0E01               	movlw	1
 11004  001FB8  2766               	addwf	___fldiv@b& (0+255),f,b
 11005  001FBA  0E00               	movlw	0
 11006  001FBC  2367               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11007  001FBE  2368               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11008  001FC0  2369               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11009  001FC2                     
 11010                           ; BSR set to: 0
 11011  001FC2  A169               	btfss	(___fldiv@b+3)& (0+255),0,b
 11012  001FC4  EFE6  F00F         	goto	u10401
 11013  001FC8  EFE8  F00F         	goto	u10400
 11014  001FCC                     u10401:
 11015  001FCC  EFFF  F00F         	goto	l10108
 11016  001FD0                     u10400:
 11017  001FD0                     
 11018                           ; BSR set to: 0
 11019  001FD0  C066  F06E         	movff	___fldiv@b,??___fldiv
 11020  001FD4  C067  F06F         	movff	___fldiv@b+1,??___fldiv+1
 11021  001FD8  C068  F070         	movff	___fldiv@b+2,??___fldiv+2
 11022  001FDC  C069  F071         	movff	___fldiv@b+3,??___fldiv+3
 11023  001FE0  3571               	rlcf	(??___fldiv+3)& (0+255),w,b
 11024  001FE2  3371               	rrcf	(??___fldiv+3)& (0+255),f,b
 11025  001FE4  3370               	rrcf	(??___fldiv+2)& (0+255),f,b
 11026  001FE6  336F               	rrcf	(??___fldiv+1)& (0+255),f,b
 11027  001FE8  336E               	rrcf	??___fldiv& (0+255),f,b
 11028  001FEA  C06E  F066         	movff	??___fldiv,___fldiv@b
 11029  001FEE  C06F  F067         	movff	??___fldiv+1,___fldiv@b+1
 11030  001FF2  C070  F068         	movff	??___fldiv+2,___fldiv@b+2
 11031  001FF6  C071  F069         	movff	??___fldiv+3,___fldiv@b+3
 11032  001FFA                     
 11033                           ; BSR set to: 0
 11034  001FFA  4B77               	infsnz	___fldiv@new_exp& (0+255),f,b
 11035  001FFC  2B78               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11036  001FFE                     l10108:
 11037                           
 11038                           ; BSR set to: 0
 11039  001FFE  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11040  002000  EF0A  F010         	goto	u10411
 11041  002004  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11042  002006  E108               	bnz	u10410
 11043  002008  2977               	incf	___fldiv@new_exp& (0+255),w,b
 11044  00200A  A0D8               	btfss	status,0,c
 11045  00200C  EF0A  F010         	goto	u10411
 11046  002010  EF0C  F010         	goto	u10410
 11047  002014                     u10411:
 11048  002014  EF17  F010         	goto	l10112
 11049  002018                     u10410:
 11050  002018                     
 11051                           ; BSR set to: 0
 11052  002018  0E00               	movlw	0
 11053  00201A  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11054  00201C  6977               	setf	___fldiv@new_exp& (0+255),b
 11055  00201E  0E00               	movlw	0
 11056  002020  6F66               	movwf	___fldiv@b& (0+255),b
 11057  002022  0E00               	movlw	0
 11058  002024  6F67               	movwf	(___fldiv@b+1)& (0+255),b
 11059  002026  0E00               	movlw	0
 11060  002028  6F68               	movwf	(___fldiv@b+2)& (0+255),b
 11061  00202A  0E00               	movlw	0
 11062  00202C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 11063  00202E                     l10112:
 11064                           
 11065                           ; BSR set to: 0
 11066  00202E  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11067  002030  EF24  F010         	goto	u10420
 11068  002034  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11069  002036  E106               	bnz	u10421
 11070  002038  0577               	decf	___fldiv@new_exp& (0+255),w,b
 11071  00203A  B0D8               	btfsc	status,0,c
 11072  00203C  EF22  F010         	goto	u10421
 11073  002040  EF24  F010         	goto	u10420
 11074  002044                     u10421:
 11075  002044  EF32  F010         	goto	l10116
 11076  002048                     u10420:
 11077  002048                     
 11078                           ; BSR set to: 0
 11079  002048  0E00               	movlw	0
 11080  00204A  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11081  00204C  0E00               	movlw	0
 11082  00204E  6F77               	movwf	___fldiv@new_exp& (0+255),b
 11083  002050  0E00               	movlw	0
 11084  002052  6F66               	movwf	___fldiv@b& (0+255),b
 11085  002054  0E00               	movlw	0
 11086  002056  6F67               	movwf	(___fldiv@b+1)& (0+255),b
 11087  002058  0E00               	movlw	0
 11088  00205A  6F68               	movwf	(___fldiv@b+2)& (0+255),b
 11089  00205C  0E00               	movlw	0
 11090  00205E  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 11091  002060  0E00               	movlw	0
 11092  002062  6F76               	movwf	___fldiv@sign& (0+255),b
 11093  002064                     l10116:
 11094                           
 11095                           ; BSR set to: 0
 11096  002064  C077  F07D         	movff	___fldiv@new_exp,___fldiv@bexp
 11097  002068                     
 11098                           ; BSR set to: 0
 11099  002068  A17D               	btfss	___fldiv@bexp& (0+255),0,b
 11100  00206A  EF39  F010         	goto	u10431
 11101  00206E  EF3B  F010         	goto	u10430
 11102  002072                     u10431:
 11103  002072  EF3E  F010         	goto	l10122
 11104  002076                     u10430:
 11105  002076                     
 11106                           ; BSR set to: 0
 11107  002076  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
 11108  002078  EF3F  F010         	goto	l10124
 11109  00207C                     l10122:
 11110                           
 11111                           ; BSR set to: 0
 11112  00207C  9F68               	bcf	(___fldiv@b+2)& (0+255),7,b
 11113  00207E                     l10124:
 11114                           
 11115                           ; BSR set to: 0
 11116  00207E  90D8               	bcf	status,0,c
 11117  002080  317D               	rrcf	___fldiv@bexp& (0+255),w,b
 11118  002082  6F69               	movwf	(___fldiv@b+3)& (0+255),b
 11119  002084  EFF5  F00E         	goto	l10038
 11120  002088                     l2574:
 11121                           
 11122                           ; BSR set to: 0
 11123  002088  0012               	return		;funcret
 11124  00208A                     __end_of___fldiv:
 11125                           	callstack 0
 11126                           
 11127 ;; *************** function _HAL_Timer0_Write_Val *****************
 11128 ;; Defined at:
 11129 ;;		line 179 in file "MCAL/Timer0/hal_timer0.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 11132 ;;		 -> timer0(4), 
 11133 ;;  val             2   31[COMRAM] unsigned short 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  ret_value       1   33[COMRAM] unsigned char 
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      unsigned char 
 11138 ;; Registers used:
 11139 ;;		wreg, status,2, status,0
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;Total ram usage:        5 bytes
 11150 ;; Hardware stack levels used: 1
 11151 ;; Hardware stack levels required when called: 8
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		_HAL_Timer0_Init
 11156 ;;		_Get_Distance
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           	psect	text56
 11161  005002                     __ptext56:
 11162                           	callstack 0
 11163  005002                     _HAL_Timer0_Write_Val:
 11164                           	callstack 19
 11165  005002                     
 11166                           ;MCAL/Timer0/hal_timer0.c: 179: Std_ReturnType HAL_Timer0_Write_Val(const timer0_config_
      +                          st *_tmr0_config ,;MCAL/Timer0/hal_timer0.c: 180:         uint16_t val);MCAL/Timer0/hal_
      +                          timer0.c: 181: {;MCAL/Timer0/hal_timer0.c: 182:     Std_ReturnType ret_value = (Std_Retu
      +                          rnType) 0x01 ;
 11167  005002  0E01               	movlw	1
 11168  005004  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 11169  005006                     
 11170                           ;MCAL/Timer0/hal_timer0.c: 184:     if(((void*)0) == _tmr0_config)
 11171  005006  501E               	movf	HAL_Timer0_Write_Val@_tmr0_config^0,w,c
 11172  005008  101F               	iorwf	(HAL_Timer0_Write_Val@_tmr0_config+1)^0,w,c
 11173  00500A  A4D8               	btfss	status,2,c
 11174  00500C  EF0A  F028         	goto	u11031
 11175  005010  EF0C  F028         	goto	u11030
 11176  005014                     u11031:
 11177  005014  EF10  F028         	goto	l10464
 11178  005018                     u11030:
 11179  005018                     
 11180                           ;MCAL/Timer0/hal_timer0.c: 185:     {;MCAL/Timer0/hal_timer0.c: 186:         ret_value =
      +                           (Std_ReturnType) 0x00 ;
 11181  005018  0E00               	movlw	0
 11182  00501A  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 11183                           
 11184                           ;MCAL/Timer0/hal_timer0.c: 187:     }
 11185  00501C  EF14  F028         	goto	l1537
 11186  005020                     l10464:
 11187                           
 11188                           ;MCAL/Timer0/hal_timer0.c: 189:     {;MCAL/Timer0/hal_timer0.c: 190:        TMR0H=(val)>
      +                          >8;
 11189  005020  5021               	movf	(HAL_Timer0_Write_Val@val+1)^0,w,c
 11190  005022  6ED7               	movwf	215,c	;volatile
 11191  005024                     
 11192                           ;MCAL/Timer0/hal_timer0.c: 191:        TMR0L=(uint8)(val);
 11193  005024  C020  FFD6         	movff	HAL_Timer0_Write_Val@val,4054	;volatile
 11194  005028                     l1537:
 11195                           
 11196                           ;MCAL/Timer0/hal_timer0.c: 212:     return ret_value ;
 11197  005028  5022               	movf	HAL_Timer0_Write_Val@ret_value^0,w,c
 11198  00502A  0012               	return		;funcret
 11199  00502C                     __end_of_HAL_Timer0_Write_Val:
 11200                           	callstack 0
 11201                           
 11202 ;; *************** function _HAL_Timer0_Read_Val *****************
 11203 ;; Defined at:
 11204 ;;		line 141 in file "MCAL/Timer0/hal_timer0.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 11207 ;;		 -> timer0(4), 
 11208 ;;  result          2   31[COMRAM] PTR unsigned short 
 11209 ;;		 -> Get_Distance@timer_val(2), 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  l_low_byte      1    1[BANK0 ] unsigned char 
 11212 ;;  l_high_byte     1    0[BANK0 ] unsigned char 
 11213 ;;  ret_value       1    0        unsigned char 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      unsigned char 
 11216 ;; Registers used:
 11217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;Total ram usage:       10 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 8
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_Get_Distance
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text57
 11238  0040A6                     __ptext57:
 11239                           	callstack 0
 11240  0040A6                     _HAL_Timer0_Read_Val:
 11241                           	callstack 21
 11242  0040A6                     
 11243                           ;MCAL/Timer0/hal_timer0.c: 145:     uint8_t l_low_byte = 0;
 11244  0040A6  0E00               	movlw	0
 11245  0040A8  0100               	movlb	0	; () banked
 11246  0040AA  6F61               	movwf	HAL_Timer0_Read_Val@l_low_byte& (0+255),b
 11247                           
 11248                           ;MCAL/Timer0/hal_timer0.c: 146:     uint8_t l_high_byte = 0;
 11249  0040AC  0E00               	movlw	0
 11250  0040AE  6F60               	movwf	HAL_Timer0_Read_Val@l_high_byte& (0+255),b
 11251  0040B0                     
 11252                           ; BSR set to: 0
 11253                           ;MCAL/Timer0/hal_timer0.c: 148:     if((((void*)0) == _tmr0_config) || (((void*)0) == re
      +                          sult))
 11254  0040B0  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 11255  0040B2  101F               	iorwf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 11256  0040B4  B4D8               	btfsc	status,2,c
 11257  0040B6  EF5F  F020         	goto	u11901
 11258  0040BA  EF61  F020         	goto	u11900
 11259  0040BE                     u11901:
 11260  0040BE  EF6A  F020         	goto	l11052
 11261  0040C2                     u11900:
 11262  0040C2                     
 11263                           ; BSR set to: 0
 11264  0040C2  5020               	movf	HAL_Timer0_Read_Val@result^0,w,c
 11265  0040C4  1021               	iorwf	(HAL_Timer0_Read_Val@result+1)^0,w,c
 11266  0040C6  A4D8               	btfss	status,2,c
 11267  0040C8  EF68  F020         	goto	u11911
 11268  0040CC  EF6A  F020         	goto	u11910
 11269  0040D0                     u11911:
 11270  0040D0  EF6C  F020         	goto	l11054
 11271  0040D4                     u11910:
 11272  0040D4                     l11052:
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;MCAL/Timer0/hal_timer0.c: 151:     }
 11276  0040D4  EFAB  F020         	goto	l1533
 11277  0040D8                     l11054:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;MCAL/Timer0/hal_timer0.c: 153:     {;MCAL/Timer0/hal_timer0.c: 154:         if( 0x00U =
      +                          = _tmr0_config->reg_bit_size)
 11281  0040D8  EE20 F003          	lfsr	2,3
 11282  0040DC  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 11283  0040DE  26D9               	addwf	fsr2l,f,c
 11284  0040E0  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 11285  0040E2  22DA               	addwfc	fsr2h,f,c
 11286  0040E4  B2DF               	btfsc	indf2,1,c
 11287  0040E6  EF77  F020         	goto	u11921
 11288  0040EA  EF79  F020         	goto	u11920
 11289  0040EE                     u11921:
 11290  0040EE  EF91  F020         	goto	l11060
 11291  0040F2                     u11920:
 11292  0040F2                     
 11293                           ; BSR set to: 0
 11294                           ;MCAL/Timer0/hal_timer0.c: 155:         {;MCAL/Timer0/hal_timer0.c: 156:             l_l
      +                          ow_byte = TMR0L ;
 11295  0040F2  CFD6 F061          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 11296                           
 11297                           ;MCAL/Timer0/hal_timer0.c: 157:             l_high_byte = TMR0H ;
 11298  0040F6  CFD7 F060          	movff	4055,HAL_Timer0_Read_Val@l_high_byte	;volatile
 11299  0040FA                     
 11300                           ; BSR set to: 0
 11301                           ;MCAL/Timer0/hal_timer0.c: 158:             *result = (uint16_t) (l_low_byte + (l_high_b
      +                          yte << 8));
 11302  0040FA  5160               	movf	HAL_Timer0_Read_Val@l_high_byte& (0+255),w,b
 11303  0040FC  6E23               	movwf	(??_HAL_Timer0_Read_Val+1)^0,c
 11304  0040FE  6A22               	clrf	??_HAL_Timer0_Read_Val^0,c
 11305  004100  5161               	movf	HAL_Timer0_Read_Val@l_low_byte& (0+255),w,b
 11306  004102  6E24               	movwf	(??_HAL_Timer0_Read_Val+2)^0,c
 11307  004104  6A25               	clrf	(??_HAL_Timer0_Read_Val+3)^0,c
 11308  004106  5022               	movf	??_HAL_Timer0_Read_Val^0,w,c
 11309  004108  2624               	addwf	(??_HAL_Timer0_Read_Val+2)^0,f,c
 11310  00410A  5023               	movf	(??_HAL_Timer0_Read_Val+1)^0,w,c
 11311  00410C  2225               	addwfc	(??_HAL_Timer0_Read_Val+3)^0,f,c
 11312  00410E  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 11313  004112  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 11314  004116  C024  FFDE         	movff	??_HAL_Timer0_Read_Val+2,postinc2
 11315  00411A  C025  FFDD         	movff	??_HAL_Timer0_Read_Val+3,postdec2
 11316                           
 11317                           ;MCAL/Timer0/hal_timer0.c: 159:         }
 11318  00411E  EFAB  F020         	goto	l1533
 11319  004122                     l11060:
 11320                           
 11321                           ; BSR set to: 0
 11322  004122  EE20 F003          	lfsr	2,3
 11323  004126  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 11324  004128  26D9               	addwf	fsr2l,f,c
 11325  00412A  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 11326  00412C  22DA               	addwfc	fsr2h,f,c
 11327  00412E  A2DF               	btfss	indf2,1,c
 11328  004130  EF9C  F020         	goto	u11931
 11329  004134  EF9E  F020         	goto	u11930
 11330  004138                     u11931:
 11331  004138  EF6A  F020         	goto	l11052
 11332  00413C                     u11930:
 11333  00413C                     
 11334                           ; BSR set to: 0
 11335                           ;MCAL/Timer0/hal_timer0.c: 161:         {;MCAL/Timer0/hal_timer0.c: 162:             l_l
      +                          ow_byte = TMR0L ;
 11336  00413C  CFD6 F061          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 11337  004140                     
 11338                           ; BSR set to: 0
 11339                           ;MCAL/Timer0/hal_timer0.c: 163:             *result = (uint16_t) (l_low_byte);
 11340  004140  5161               	movf	HAL_Timer0_Read_Val@l_low_byte& (0+255),w,b
 11341  004142  6E22               	movwf	??_HAL_Timer0_Read_Val^0,c
 11342  004144  6A23               	clrf	(??_HAL_Timer0_Read_Val+1)^0,c
 11343  004146  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 11344  00414A  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 11345  00414E  C022  FFDE         	movff	??_HAL_Timer0_Read_Val,postinc2
 11346  004152  C023  FFDD         	movff	??_HAL_Timer0_Read_Val+1,postdec2
 11347  004156                     l1533:
 11348                           
 11349                           ; BSR set to: 0
 11350  004156  0012               	return		;funcret
 11351  004158                     __end_of_HAL_Timer0_Read_Val:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function _GPIO_Pin_Read_Logic *****************
 11355 ;; Defined at:
 11356 ;;		line 114 in file "MCAL/GPIO/hal_gpio.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 11359 ;;		 -> ultrasonic(2), 
 11360 ;;  logic           2   31[COMRAM] PTR enum E3185
 11361 ;;		 -> Get_Distance@logic(1), 
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;  ERRORSTATUS     1    0        unsigned char 
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      unsigned char 
 11366 ;; Registers used:
 11367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;Total ram usage:        9 bytes
 11378 ;; Hardware stack levels used: 1
 11379 ;; Hardware stack levels required when called: 8
 11380 ;; This function calls:
 11381 ;;		Nothing
 11382 ;; This function is called by:
 11383 ;;		_Get_Distance
 11384 ;;		_IR_Sensor_Detect
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text58
 11389  004206                     __ptext58:
 11390                           	callstack 0
 11391  004206                     _GPIO_Pin_Read_Logic:
 11392                           	callstack 21
 11393  004206                     
 11394                           ;MCAL/GPIO/hal_gpio.c: 117:           if ( ((void*)0)==_pin_config||((void*)0)==logic||_
      +                          pin_config->pin> 8 -1)
 11395  004206  501E               	movf	GPIO_Pin_Read_Logic@_pin_config^0,w,c
 11396  004208  101F               	iorwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,w,c
 11397  00420A  B4D8               	btfsc	status,2,c
 11398  00420C  EF0A  F021         	goto	u11761
 11399  004210  EF0C  F021         	goto	u11760
 11400  004214                     u11761:
 11401  004214  EF25  F021         	goto	l10924
 11402  004218                     u11760:
 11403  004218  5020               	movf	GPIO_Pin_Read_Logic@logic^0,w,c
 11404  00421A  1021               	iorwf	(GPIO_Pin_Read_Logic@logic+1)^0,w,c
 11405  00421C  B4D8               	btfsc	status,2,c
 11406  00421E  EF13  F021         	goto	u11771
 11407  004222  EF15  F021         	goto	u11770
 11408  004226                     u11771:
 11409  004226  EF25  F021         	goto	l10924
 11410  00422A                     u11770:
 11411  00422A  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 11412  00422E  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 11413  004232  50DF               	movf	223,w,c
 11414  004234  0B07               	andlw	7
 11415  004236  0100               	movlb	0	; () banked
 11416  004238  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 11417  00423A  0E07               	movlw	7
 11418  00423C  6560               	cpfsgt	??_GPIO_Pin_Read_Logic& (0+255),b
 11419  00423E  EF23  F021         	goto	u11781
 11420  004242  EF25  F021         	goto	u11780
 11421  004246                     u11781:
 11422  004246  EF27  F021         	goto	l10926
 11423  00424A                     u11780:
 11424  00424A                     l10924:
 11425                           
 11426                           ;MCAL/GPIO/hal_gpio.c: 120:     }
 11427  00424A  EF59  F021         	goto	l916
 11428  00424E                     l10926:
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;MCAL/GPIO/hal_gpio.c: 122:     {;MCAL/GPIO/hal_gpio.c: 123:          *logic= (( *port_r
      +                          egisters[_pin_config->port]>>_pin_config->pin )&(uint8)1);
 11432  00424E  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 11433  004252  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 11434  004256  50DF               	movf	223,w,c
 11435  004258  0B07               	andlw	7
 11436  00425A  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 11437  00425C  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 11438  004260  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 11439  004264  30DF               	rrcf	223,w,c
 11440  004266  32E8               	rrcf	wreg,f,c
 11441  004268  32E8               	rrcf	wreg,f,c
 11442  00426A  0B07               	andlw	7
 11443  00426C  6F61               	movwf	(??_GPIO_Pin_Read_Logic+1)& (0+255),b
 11444  00426E  5161               	movf	(??_GPIO_Pin_Read_Logic+1)& (0+255),w,b
 11445  004270  0D02               	mullw	2
 11446  004272  0E00               	movlw	low _port_registers
 11447  004274  24F3               	addwf	243,w,c
 11448  004276  6ED9               	movwf	fsr2l,c
 11449  004278  0E01               	movlw	high _port_registers
 11450  00427A  20F4               	addwfc	prodh,w,c
 11451  00427C  6EDA               	movwf	fsr2h,c
 11452  00427E  CFDE F062          	movff	postinc2,??_GPIO_Pin_Read_Logic+2
 11453  004282  CFDD F063          	movff	postdec2,??_GPIO_Pin_Read_Logic+3
 11454  004286  C062  FFD9         	movff	??_GPIO_Pin_Read_Logic+2,fsr2l
 11455  00428A  C063  FFDA         	movff	??_GPIO_Pin_Read_Logic+3,fsr2h
 11456  00428E  50DF               	movf	indf2,w,c
 11457  004290  6F64               	movwf	(??_GPIO_Pin_Read_Logic+4)& (0+255),b
 11458  004292  2B60               	incf	??_GPIO_Pin_Read_Logic& (0+255),f,b
 11459  004294  EF4E  F021         	goto	u11794
 11460  004298                     u11795:
 11461  004298  90D8               	bcf	status,0,c
 11462  00429A  3364               	rrcf	(??_GPIO_Pin_Read_Logic+4)& (0+255),f,b
 11463  00429C                     u11794:
 11464  00429C  2F60               	decfsz	??_GPIO_Pin_Read_Logic& (0+255),f,b
 11465  00429E  EF4C  F021         	goto	u11795
 11466  0042A2  0100               	movlb	0	; () banked
 11467  0042A4  5164               	movf	(??_GPIO_Pin_Read_Logic+4)& (0+255),w,b
 11468  0042A6  0B01               	andlw	1
 11469  0042A8  C020  FFD9         	movff	GPIO_Pin_Read_Logic@logic,fsr2l
 11470  0042AC  C021  FFDA         	movff	GPIO_Pin_Read_Logic@logic+1,fsr2h
 11471  0042B0  6EDF               	movwf	indf2,c
 11472  0042B2                     l916:
 11473  0042B2  0012               	return		;funcret
 11474  0042B4                     __end_of_GPIO_Pin_Read_Logic:
 11475                           	callstack 0
 11476                           
 11477 ;; *************** function _GPS_Service *****************
 11478 ;; Defined at:
 11479 ;;		line 421 in file "application.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  key             1   36[COMRAM] unsigned char 
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;Total ram usage:        3 bytes
 11498 ;; Hardware stack levels used: 1
 11499 ;; Hardware stack levels required when called: 11
 11500 ;; This function calls:
 11501 ;;		_EUSART_Async_Read_Data_Blocking
 11502 ;;		_GPIO_Pin_Write_Logic
 11503 ;; This function is called by:
 11504 ;;		_main
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text59
 11509  002C3A                     __ptext59:
 11510                           	callstack 0
 11511  002C3A                     _GPS_Service:
 11512                           	callstack 19
 11513  002C3A                     
 11514                           ;application.c: 423:     uint8 key=1;
 11515  002C3A  0E01               	movlw	1
 11516  002C3C  6E25               	movwf	GPS_Service@key^0,c
 11517  002C3E                     
 11518                           ;application.c: 424:     (PIE1bits.RCIE = 0);
 11519  002C3E  9A9D               	bcf	157,5,c	;volatile
 11520  002C40                     
 11521                           ;application.c: 425:     GPIO_Pin_Write_Logic(&selector,GPIO_HIGH);
 11522  002C40  0E40               	movlw	low _selector
 11523  002C42  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 11524  002C44  0E00               	movlw	high _selector
 11525  002C46  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 11526  002C48  0E01               	movlw	1
 11527  002C4A  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11528  002C4C  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
 11529                           
 11530                           ;application.c: 427:     while (key)
 11531  002C50  EFB2  F016         	goto	l11464
 11532  002C54                     l11428:
 11533                           
 11534                           ;application.c: 428:     {;application.c: 429:         EUSART_Async_Read_Data_Blocking(&
      +                          _uart_obj,&gpstemp);
 11535  002C54  0E0A               	movlw	low __uart_obj
 11536  002C56  0100               	movlb	0	; () banked
 11537  002C58  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11538  002C5A  0E01               	movlw	high __uart_obj
 11539  002C5C  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11540  002C5E  0E39               	movlw	low _gpstemp
 11541  002C60  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11542  002C62  0E00               	movlw	high _gpstemp
 11543  002C64  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11544  002C66  EC89  F024         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11545  002C6A                     
 11546                           ;application.c: 430:         if ('$'==gpstemp)
 11547  002C6A  0E24               	movlw	36
 11548  002C6C  1839               	xorwf	_gpstemp^0,w,c	;volatile
 11549  002C6E  A4D8               	btfss	status,2,c
 11550  002C70  EF3C  F016         	goto	u12171
 11551  002C74  EF3E  F016         	goto	u12170
 11552  002C78                     u12171:
 11553  002C78  EFB2  F016         	goto	l11464
 11554  002C7C                     u12170:
 11555  002C7C  EFAA  F016         	goto	l1977
 11556  002C80                     l11434:
 11557                           
 11558                           ;application.c: 433:             {;application.c: 434:                     EUSART_Async_
      +                          Read_Data_Blocking(&_uart_obj,&gpstemp);
 11559  002C80  0E0A               	movlw	low __uart_obj
 11560  002C82  0100               	movlb	0	; () banked
 11561  002C84  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11562  002C86  0E01               	movlw	high __uart_obj
 11563  002C88  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11564  002C8A  0E39               	movlw	low _gpstemp
 11565  002C8C  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11566  002C8E  0E00               	movlw	high _gpstemp
 11567  002C90  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11568  002C92  EC89  F024         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11569  002C96                     
 11570                           ;application.c: 435:                     if (','==gpstemp)
 11571  002C96  0E2C               	movlw	44
 11572  002C98  1839               	xorwf	_gpstemp^0,w,c	;volatile
 11573  002C9A  A4D8               	btfss	status,2,c
 11574  002C9C  EF52  F016         	goto	u12181
 11575  002CA0  EF54  F016         	goto	u12180
 11576  002CA4                     u12181:
 11577  002CA4  EFAA  F016         	goto	l1977
 11578  002CA8                     u12180:
 11579  002CA8                     
 11580                           ;application.c: 436:                     {;application.c: 437:                         c
      +                          ounter++;
 11581  002CA8  2A2B               	incf	_counter^0,f,c	;volatile
 11582  002CAA                     
 11583                           ;application.c: 438:                         if (3==counter)
 11584  002CAA  0E03               	movlw	3
 11585  002CAC  182B               	xorwf	_counter^0,w,c	;volatile
 11586  002CAE  A4D8               	btfss	status,2,c
 11587  002CB0  EF5C  F016         	goto	u12191
 11588  002CB4  EF5E  F016         	goto	u12190
 11589  002CB8                     u12191:
 11590  002CB8  EF80  F016         	goto	l11452
 11591  002CBC                     u12190:
 11592  002CBC                     
 11593                           ;application.c: 439:                         {;application.c: 440:                      
      +                                 i=0;
 11594  002CBC  0E00               	movlw	0
 11595  002CBE  6E2A               	movwf	_i^0,c
 11596  002CC0                     l11444:
 11597                           
 11598                           ;application.c: 443:                             {;application.c: 444:                  
      +                                         EUSART_Async_Read_Data_Blocking(&_uart_obj,(latitude+i));
 11599  002CC0  0E0A               	movlw	low __uart_obj
 11600  002CC2  0100               	movlb	0	; () banked
 11601  002CC4  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11602  002CC6  0E01               	movlw	high __uart_obj
 11603  002CC8  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11604  002CCA  0E44               	movlw	low _latitude
 11605  002CCC  242A               	addwf	_i^0,w,c
 11606  002CCE  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11607  002CD0  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11608  002CD2  0E01               	movlw	high _latitude
 11609  002CD4  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 11610  002CD6  EC89  F024         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11611  002CDA                     
 11612                           ;application.c: 445:                                 i++;
 11613  002CDA  2A2A               	incf	_i^0,f,c
 11614  002CDC                     
 11615                           ;application.c: 446:                             }while(','!=(latitude[i-1]));
 11616  002CDC  0E43               	movlw	low (_latitude+65535)
 11617  002CDE  242A               	addwf	_i^0,w,c
 11618  002CE0  6ED9               	movwf	fsr2l,c
 11619  002CE2  6ADA               	clrf	fsr2h,c
 11620  002CE4  0E01               	movlw	high (_latitude+65535)
 11621  002CE6  22DA               	addwfc	fsr2h,f,c
 11622  002CE8  0E2C               	movlw	44
 11623  002CEA  18DE               	xorwf	postinc2,w,c
 11624  002CEC  A4D8               	btfss	status,2,c
 11625  002CEE  EF7B  F016         	goto	u12201
 11626  002CF2  EF7D  F016         	goto	u12200
 11627  002CF6                     u12201:
 11628  002CF6  EF60  F016         	goto	l11444
 11629  002CFA                     u12200:
 11630  002CFA                     
 11631                           ;application.c: 447:                             counter++;
 11632  002CFA  2A2B               	incf	_counter^0,f,c	;volatile
 11633                           
 11634                           ;application.c: 449:                         }
 11635  002CFC  EFAA  F016         	goto	l1977
 11636  002D00                     l11452:
 11637  002D00  0E05               	movlw	5
 11638  002D02  182B               	xorwf	_counter^0,w,c	;volatile
 11639  002D04  A4D8               	btfss	status,2,c
 11640  002D06  EF87  F016         	goto	u12211
 11641  002D0A  EF89  F016         	goto	u12210
 11642  002D0E                     u12211:
 11643  002D0E  EFAA  F016         	goto	l1977
 11644  002D12                     u12210:
 11645  002D12                     
 11646                           ;application.c: 451:                         {;application.c: 452:                      
      +                                 i=0;
 11647  002D12  0E00               	movlw	0
 11648  002D14  6E2A               	movwf	_i^0,c
 11649  002D16                     l11456:
 11650                           
 11651                           ;application.c: 455:                                 EUSART_Async_Read_Data_Blocking(&_u
      +                          art_obj,(longtude+i));
 11652  002D16  0E0A               	movlw	low __uart_obj
 11653  002D18  0100               	movlb	0	; () banked
 11654  002D1A  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11655  002D1C  0E01               	movlw	high __uart_obj
 11656  002D1E  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11657  002D20  0E37               	movlw	low _longtude
 11658  002D22  242A               	addwf	_i^0,w,c
 11659  002D24  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11660  002D26  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11661  002D28  0E01               	movlw	high _longtude
 11662  002D2A  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 11663  002D2C  EC89  F024         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11664  002D30                     
 11665                           ;application.c: 456:                                 i++;
 11666  002D30  2A2A               	incf	_i^0,f,c
 11667  002D32                     
 11668                           ;application.c: 457:                             }while(','!=(longtude[i-1]));
 11669  002D32  0E36               	movlw	low (_longtude+65535)
 11670  002D34  242A               	addwf	_i^0,w,c
 11671  002D36  6ED9               	movwf	fsr2l,c
 11672  002D38  6ADA               	clrf	fsr2h,c
 11673  002D3A  0E01               	movlw	high (_longtude+65535)
 11674  002D3C  22DA               	addwfc	fsr2h,f,c
 11675  002D3E  0E2C               	movlw	44
 11676  002D40  18DE               	xorwf	postinc2,w,c
 11677  002D42  A4D8               	btfss	status,2,c
 11678  002D44  EFA6  F016         	goto	u12221
 11679  002D48  EFA8  F016         	goto	u12220
 11680  002D4C                     u12221:
 11681  002D4C  EF8B  F016         	goto	l11456
 11682  002D50                     u12220:
 11683  002D50                     
 11684                           ;application.c: 458:                             key=0;
 11685  002D50  0E00               	movlw	0
 11686  002D52  6E25               	movwf	GPS_Service@key^0,c
 11687  002D54                     l1977:
 11688                           
 11689                           ;application.c: 432:             while (key)
 11690  002D54  5025               	movf	GPS_Service@key^0,w,c
 11691  002D56  A4D8               	btfss	status,2,c
 11692  002D58  EFB0  F016         	goto	u12231
 11693  002D5C  EFB2  F016         	goto	u12230
 11694  002D60                     u12231:
 11695  002D60  EF40  F016         	goto	l11434
 11696  002D64                     u12230:
 11697  002D64                     l11464:
 11698                           
 11699                           ;application.c: 427:     while (key)
 11700  002D64  5025               	movf	GPS_Service@key^0,w,c
 11701  002D66  A4D8               	btfss	status,2,c
 11702  002D68  EFB8  F016         	goto	u12241
 11703  002D6C  EFBA  F016         	goto	u12240
 11704  002D70                     u12241:
 11705  002D70  EF2A  F016         	goto	l11428
 11706  002D74                     u12240:
 11707  002D74                     
 11708                           ;application.c: 464:       _delay((unsigned long)((2000)*(8000000/4000.0)));
 11709  002D74  0E15               	movlw	21
 11710  002D76  0100               	movlb	0	; () banked
 11711  002D78  6F71               	movwf	(??_GPS_Service+1)& (0+255),b
 11712  002D7A  0E4B               	movlw	75
 11713  002D7C  6F70               	movwf	??_GPS_Service& (0+255),b
 11714  002D7E  0EBE               	movlw	190
 11715  002D80                     u12677:
 11716  002D80  2EE8               	decfsz	wreg,f,c
 11717  002D82  D7FE               	bra	u12677
 11718  002D84  2F70               	decfsz	??_GPS_Service& (0+255),f,b
 11719  002D86  D7FC               	bra	u12677
 11720  002D88  2F71               	decfsz	(??_GPS_Service+1)& (0+255),f,b
 11721  002D8A  D7FA               	bra	u12677
 11722  002D8C  F000               	nop	
 11723  002D8E                     
 11724                           ;application.c: 465:     GPIO_Pin_Write_Logic(&selector,GPIO_LOW);
 11725  002D8E  0E40               	movlw	low _selector
 11726  002D90  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 11727  002D92  0E00               	movlw	high _selector
 11728  002D94  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 11729  002D96  0E00               	movlw	0
 11730  002D98  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11731  002D9A  EC54  F019         	call	_GPIO_Pin_Write_Logic	;wreg free
 11732  002D9E                     
 11733                           ;application.c: 466:     (PIE1bits.RCIE = 1) ;
 11734  002D9E  8A9D               	bsf	157,5,c	;volatile
 11735  002DA0  0012               	return		;funcret
 11736  002DA2                     __end_of_GPS_Service:
 11737                           	callstack 0
 11738                           
 11739 ;; *************** function _GPIO_Pin_Write_Logic *****************
 11740 ;; Defined at:
 11741 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 11744 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
 11745 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
 11746 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
 11747 ;;  logic           1   31[COMRAM] enum E3185
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;  ERRORSTATUS     1   32[COMRAM] unsigned char 
 11750 ;; Return value:  Size  Location     Type
 11751 ;;                  1    wreg      unsigned char 
 11752 ;; Registers used:
 11753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11762 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11763 ;;Total ram usage:       10 bytes
 11764 ;; Hardware stack levels used: 1
 11765 ;; Hardware stack levels required when called: 8
 11766 ;; This function calls:
 11767 ;;		Nothing
 11768 ;; This function is called by:
 11769 ;;		_ECU_DC_Motor_Run_Left
 11770 ;;		_ECU_DC_Motor_Run_Right
 11771 ;;		_Ecu_Stepper_Init
 11772 ;;		_Ecu_Stepper_Step
 11773 ;;		_stepper_move_one_deg_cw
 11774 ;;		_stepper_move_one_deg_ccw
 11775 ;;		_GPIO_Pin_Initialize
 11776 ;;		_send_trig_pulse
 11777 ;;		_GPS_Service
 11778 ;;		_lcd_4bit_send_command
 11779 ;;		_lcd_4bit_send_char_data
 11780 ;;		_lcd_8bit_send_command
 11781 ;;		_lcd_8bit_send_char_data
 11782 ;;		_lcd_4bits_send_enable_signal
 11783 ;;		_lcd_send_4bits
 11784 ;;		_lcd_8bits_send_enable_signal
 11785 ;;		_Ecu_Stepper_Change_Direction
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text60
 11790  0032A8                     __ptext60:
 11791                           	callstack 0
 11792  0032A8                     _GPIO_Pin_Write_Logic:
 11793                           	callstack 21
 11794  0032A8                     
 11795                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 11796  0032A8  0E01               	movlw	1
 11797  0032AA  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 11798  0032AC                     
 11799                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 11800  0032AC  501E               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
 11801  0032AE  101F               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 11802  0032B0  B4D8               	btfsc	status,2,c
 11803  0032B2  EF5D  F019         	goto	u10611
 11804  0032B6  EF5F  F019         	goto	u10610
 11805  0032BA                     u10611:
 11806  0032BA  EF6F  F019         	goto	l10228
 11807  0032BE                     u10610:
 11808  0032BE  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11809  0032C2  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11810  0032C6  50DF               	movf	223,w,c
 11811  0032C8  0B07               	andlw	7
 11812  0032CA  0100               	movlb	0	; () banked
 11813  0032CC  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11814  0032CE  0E07               	movlw	7
 11815  0032D0  6560               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
 11816  0032D2  EF6D  F019         	goto	u10621
 11817  0032D6  EF6F  F019         	goto	u10620
 11818  0032DA                     u10621:
 11819  0032DA  EFD4  F019         	goto	l10236
 11820  0032DE                     u10620:
 11821  0032DE                     l10228:
 11822                           
 11823                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 11824  0032DE  0E00               	movlw	0
 11825  0032E0  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 11826                           
 11827                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 11828  0032E2  EFE9  F019         	goto	l10238
 11829  0032E6                     l10230:
 11830                           
 11831                           ; BSR set to: 0
 11832                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 11833  0032E6  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11834  0032EA  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11835  0032EE  50DF               	movf	223,w,c
 11836  0032F0  0B07               	andlw	7
 11837  0032F2  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11838  0032F4  0E01               	movlw	1
 11839  0032F6  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 11840  0032F8  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11841  0032FA  EF81  F019         	goto	u10634
 11842  0032FE                     u10635:
 11843  0032FE  90D8               	bcf	status,0,c
 11844  003300  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 11845  003302                     u10634:
 11846  003302  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11847  003304  EF7F  F019         	goto	u10635
 11848  003308  0100               	movlb	0	; () banked
 11849  00330A  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 11850  00330C  0AFF               	xorlw	255
 11851  00330E  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 11852  003310  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11853  003314  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11854  003318  30DF               	rrcf	223,w,c
 11855  00331A  32E8               	rrcf	wreg,f,c
 11856  00331C  32E8               	rrcf	wreg,f,c
 11857  00331E  0B07               	andlw	7
 11858  003320  6F63               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
 11859  003322  5163               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
 11860  003324  0D02               	mullw	2
 11861  003326  0EDD               	movlw	low _lat_registers
 11862  003328  24F3               	addwf	243,w,c
 11863  00332A  6ED9               	movwf	fsr2l,c
 11864  00332C  0E00               	movlw	high _lat_registers
 11865  00332E  20F4               	addwfc	prodh,w,c
 11866  003330  6EDA               	movwf	fsr2h,c
 11867  003332  CFDE F064          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
 11868  003336  CFDD F065          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
 11869  00333A  C064  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
 11870  00333E  C065  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
 11871  003342  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 11872  003344  16DF               	andwf	indf2,f,c
 11873                           
 11874                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 11875  003346  EFE9  F019         	goto	l10238
 11876  00334A                     l10232:
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 11880  00334A  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11881  00334E  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11882  003352  50DF               	movf	223,w,c
 11883  003354  0B07               	andlw	7
 11884  003356  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11885  003358  0E01               	movlw	1
 11886  00335A  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 11887  00335C  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11888  00335E  EFB3  F019         	goto	u10644
 11889  003362                     u10645:
 11890  003362  90D8               	bcf	status,0,c
 11891  003364  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 11892  003366                     u10644:
 11893  003366  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11894  003368  EFB1  F019         	goto	u10645
 11895  00336C  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11896  003370  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11897  003374  30DF               	rrcf	223,w,c
 11898  003376  32E8               	rrcf	wreg,f,c
 11899  003378  32E8               	rrcf	wreg,f,c
 11900  00337A  0B07               	andlw	7
 11901  00337C  0100               	movlb	0	; () banked
 11902  00337E  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 11903  003380  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 11904  003382  0D02               	mullw	2
 11905  003384  0EDD               	movlw	low _lat_registers
 11906  003386  24F3               	addwf	243,w,c
 11907  003388  6ED9               	movwf	fsr2l,c
 11908  00338A  0E00               	movlw	high _lat_registers
 11909  00338C  20F4               	addwfc	prodh,w,c
 11910  00338E  6EDA               	movwf	fsr2h,c
 11911  003390  CFDE F063          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
 11912  003394  CFDD F064          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
 11913  003398  C063  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
 11914  00339C  C064  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
 11915  0033A0  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 11916  0033A2  12DF               	iorwf	indf2,f,c
 11917                           
 11918                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 11919  0033A4  EFE9  F019         	goto	l10238
 11920  0033A8                     l10236:
 11921                           
 11922                           ; BSR set to: 0
 11923  0033A8  5020               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
 11924  0033AA  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11925  0033AC  6B61               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 11926                           
 11927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11928                           ; Switch size 1, requested type "simple"
 11929                           ; Number of cases is 1, Range of values is 0 to 0
 11930                           ; switch strategies available:
 11931                           ; Name         Instructions Cycles
 11932                           ; simple_byte            4     3 (average)
 11933                           ;	Chosen strategy is simple_byte
 11934  0033AE  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 11935  0033B0  0A00               	xorlw	0	; case 0
 11936  0033B2  B4D8               	btfsc	status,2,c
 11937  0033B4  EFDE  F019         	goto	l12096
 11938  0033B8  EF6F  F019         	goto	l10228
 11939  0033BC                     l12096:
 11940                           
 11941                           ; BSR set to: 0
 11942                           ; Switch size 1, requested type "simple"
 11943                           ; Number of cases is 2, Range of values is 0 to 1
 11944                           ; switch strategies available:
 11945                           ; Name         Instructions Cycles
 11946                           ; simple_byte            7     4 (average)
 11947                           ;	Chosen strategy is simple_byte
 11948  0033BC  5160               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
 11949  0033BE  0A00               	xorlw	0	; case 0
 11950  0033C0  B4D8               	btfsc	status,2,c
 11951  0033C2  EF73  F019         	goto	l10230
 11952  0033C6  0A01               	xorlw	1	; case 1
 11953  0033C8  B4D8               	btfsc	status,2,c
 11954  0033CA  EFA5  F019         	goto	l10232
 11955  0033CE  EF6F  F019         	goto	l10228
 11956  0033D2                     l10238:
 11957                           
 11958                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 11959  0033D2  5021               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
 11960  0033D4  0012               	return		;funcret
 11961  0033D6                     __end_of_GPIO_Pin_Write_Logic:
 11962                           	callstack 0
 11963                           
 11964 ;; *************** function _EUSART_Async_Read_Data_Blocking *****************
 11965 ;; Defined at:
 11966 ;;		line 337 in file "MCAL/EUSART/mcal_EUSART.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  _eusart_obj     2   12[BANK0 ] PTR const struct .
 11969 ;;		 -> _uart_obj(12), 
 11970 ;;  data            2   14[BANK0 ] PTR unsigned short 
 11971 ;;		 -> longtude(13), latitude(13), gpstemp(1), 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  ret_val         1    0        unsigned char 
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      unsigned char 
 11976 ;; Registers used:
 11977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:        4 bytes
 11988 ;; Hardware stack levels used: 1
 11989 ;; Hardware stack levels required when called: 10
 11990 ;; This function calls:
 11991 ;;		_EUSART_Async_Read_Data
 11992 ;; This function is called by:
 11993 ;;		_GPS_Service
 11994 ;;		_Bluetooth_Recieve_Data_Blocking
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text61
 11999  004912                     __ptext61:
 12000                           	callstack 0
 12001  004912                     _EUSART_Async_Read_Data_Blocking:
 12002                           	callstack 19
 12003  004912                     
 12004                           ;MCAL/EUSART/mcal_EUSART.c: 341:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 12005  004912  0100               	movlb	0	; () banked
 12006  004914  516C               	movf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),w,b
 12007  004916  116D               	iorwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),w,b
 12008  004918  B4D8               	btfsc	status,2,c
 12009  00491A  EF91  F024         	goto	u11691
 12010  00491E  EF93  F024         	goto	u11690
 12011  004922                     u11691:
 12012  004922  EF9C  F024         	goto	l10888
 12013  004926                     u11690:
 12014  004926                     
 12015                           ; BSR set to: 0
 12016  004926  516E               	movf	EUSART_Async_Read_Data_Blocking@data& (0+255),w,b
 12017  004928  116F               	iorwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),w,b
 12018  00492A  A4D8               	btfss	status,2,c
 12019  00492C  EF9A  F024         	goto	u11701
 12020  004930  EF9C  F024         	goto	u11700
 12021  004934                     u11701:
 12022  004934  EF9E  F024         	goto	l753
 12023  004938                     u11700:
 12024  004938                     l10888:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;MCAL/EUSART/mcal_EUSART.c: 344:     }
 12028  004938  EFAF  F024         	goto	l10892
 12029  00493C                     l753:
 12030  00493C  AA9E               	btfss	158,5,c	;volatile
 12031  00493E  EFA3  F024         	goto	u11711
 12032  004942  EFA5  F024         	goto	u11710
 12033  004946                     u11711:
 12034  004946  EF9E  F024         	goto	l753
 12035  00494A                     u11710:
 12036  00494A                     
 12037                           ;MCAL/EUSART/mcal_EUSART.c: 348:         EUSART_Async_Read_Data(_eusart_obj , data);
 12038  00494A  C06C  F060         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj,EUSART_Async_Read_Data@_eusart_obj
 12039  00494E  C06D  F061         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj+1,EUSART_Async_Read_Data@_eusart_obj+
      +                          1
 12040  004952  C06E  F062         	movff	EUSART_Async_Read_Data_Blocking@data,EUSART_Async_Read_Data@data
 12041  004956  C06F  F063         	movff	EUSART_Async_Read_Data_Blocking@data+1,EUSART_Async_Read_Data@data+1
 12042  00495A  ECBC  F011         	call	_EUSART_Async_Read_Data	;wreg free
 12043  00495E                     l10892:
 12044                           
 12045                           ;MCAL/EUSART/mcal_EUSART.c: 351:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 12046  00495E  B2AB               	btfsc	171,1,c	;volatile
 12047  004960  EFB4  F024         	goto	u11721
 12048  004964  EFB6  F024         	goto	u11720
 12049  004968                     u11721:
 12050  004968  EFBD  F024         	goto	l758
 12051  00496C                     u11720:
 12052  00496C  A4AB               	btfss	171,2,c	;volatile
 12053  00496E  EFBB  F024         	goto	u11731
 12054  004972  EFBD  F024         	goto	u11730
 12055  004976                     u11731:
 12056  004976  EFBF  F024         	goto	l759
 12057  00497A                     u11730:
 12058  00497A                     l758:
 12059                           
 12060                           ;MCAL/EUSART/mcal_EUSART.c: 352:     {;MCAL/EUSART/mcal_EUSART.c: 354:         RCSTA1bit
      +                          s.CREN=0;
 12061  00497A  98AB               	bcf	171,4,c	;volatile
 12062                           
 12063                           ;MCAL/EUSART/mcal_EUSART.c: 355:         RCSTA1bits.CREN=1;
 12064  00497C  88AB               	bsf	171,4,c	;volatile
 12065  00497E                     l759:
 12066  00497E  0012               	return		;funcret
 12067  004980                     __end_of_EUSART_Async_Read_Data_Blocking:
 12068                           	callstack 0
 12069                           
 12070 ;; *************** function _EUSART_Async_Read_Data *****************
 12071 ;; Defined at:
 12072 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;  _eusart_obj     2    0[BANK0 ] PTR const struct .
 12075 ;;		 -> _uart_obj(12), 
 12076 ;;  data            2    2[BANK0 ] PTR unsigned short 
 12077 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(2), 
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;  l_temp_data     2   10[BANK0 ] unsigned short 
 12080 ;;  ret_val         1    0        unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      unsigned char 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12090 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12091 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12093 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12094 ;;Total ram usage:       14 bytes
 12095 ;; Hardware stack levels used: 1
 12096 ;; Hardware stack levels required when called: 9
 12097 ;; This function calls:
 12098 ;;		_calc_parity_even
 12099 ;;		_calc_parity_odd
 12100 ;; This function is called by:
 12101 ;;		_EUSART_Async_Read_Data_Blocking
 12102 ;;		_Bluetooth_Recieve_Data_Non_Blocking
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           	psect	text62
 12107  002378                     __ptext62:
 12108                           	callstack 0
 12109  002378                     _EUSART_Async_Read_Data:
 12110                           	callstack 19
 12111  002378                     
 12112                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 12113  002378  0E00               	movlw	0
 12114  00237A  0100               	movlb	0	; () banked
 12115  00237C  6F6B               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 12116  00237E  0E00               	movlw	0
 12117  002380  6F6A               	movwf	EUSART_Async_Read_Data@l_temp_data& (0+255),b
 12118  002382                     
 12119                           ; BSR set to: 0
 12120                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 12121  002382  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12122  002384  1161               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12123  002386  B4D8               	btfsc	status,2,c
 12124  002388  EFC8  F011         	goto	u11231
 12125  00238C  EFCA  F011         	goto	u11230
 12126  002390                     u11231:
 12127  002390  EFD3  F011         	goto	l10606
 12128  002394                     u11230:
 12129  002394                     
 12130                           ; BSR set to: 0
 12131  002394  5162               	movf	EUSART_Async_Read_Data@data& (0+255),w,b
 12132  002396  1163               	iorwf	(EUSART_Async_Read_Data@data+1)& (0+255),w,b
 12133  002398  A4D8               	btfss	status,2,c
 12134  00239A  EFD1  F011         	goto	u11241
 12135  00239E  EFD3  F011         	goto	u11240
 12136  0023A2                     u11241:
 12137  0023A2  EFD5  F011         	goto	l693
 12138  0023A6                     u11240:
 12139  0023A6                     l10606:
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 12143  0023A6  EFB3  F012         	goto	l10656
 12144  0023AA                     l693:
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 12148  0023AA  AA9E               	btfss	158,5,c	;volatile
 12149  0023AC  EFDA  F011         	goto	u11251
 12150  0023B0  EFDC  F011         	goto	u11250
 12151  0023B4                     u11251:
 12152  0023B4  EFD3  F011         	goto	l10606
 12153  0023B8                     u11250:
 12154  0023B8                     
 12155                           ; BSR set to: 0
 12156                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 12157  0023B8  EE20 F009          	lfsr	2,9
 12158  0023BC  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12159  0023BE  26D9               	addwf	fsr2l,f,c
 12160  0023C0  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12161  0023C2  22DA               	addwfc	fsr2h,f,c
 12162  0023C4  B8DF               	btfsc	indf2,4,c
 12163  0023C6  EFE7  F011         	goto	u11261
 12164  0023CA  EFE9  F011         	goto	u11260
 12165  0023CE                     u11261:
 12166  0023CE  EFF6  F011         	goto	l10612
 12167  0023D2                     u11260:
 12168  0023D2                     
 12169                           ; BSR set to: 0
 12170                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 12171  0023D2  50AE               	movf	174,w,c	;volatile
 12172  0023D4  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12173  0023D6  6A24               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
 12174  0023D8  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 12175  0023DC  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 12176  0023E0  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 12177  0023E4  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 12178                           
 12179                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 12180  0023E8  EFB3  F012         	goto	l10656
 12181  0023EC                     l10612:
 12182                           
 12183                           ; BSR set to: 0
 12184  0023EC  EE20 F009          	lfsr	2,9
 12185  0023F0  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12186  0023F2  26D9               	addwf	fsr2l,f,c
 12187  0023F4  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12188  0023F6  22DA               	addwfc	fsr2h,f,c
 12189  0023F8  A8DF               	btfss	indf2,4,c
 12190  0023FA  EF01  F012         	goto	u11271
 12191  0023FE  EF03  F012         	goto	u11270
 12192  002402                     u11271:
 12193  002402  EFB3  F012         	goto	l706
 12194  002406                     u11270:
 12195  002406                     
 12196                           ; BSR set to: 0
 12197                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 12198  002406  EE20 F009          	lfsr	2,9
 12199  00240A  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12200  00240C  26D9               	addwf	fsr2l,f,c
 12201  00240E  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12202  002410  22DA               	addwfc	fsr2h,f,c
 12203  002412  30DF               	rrcf	223,w,c
 12204  002414  0B03               	andlw	3
 12205  002416  0900               	iorlw	0
 12206  002418  A4D8               	btfss	status,2,c
 12207  00241A  EF11  F012         	goto	u11281
 12208  00241E  EF13  F012         	goto	u11280
 12209  002422                     u11281:
 12210  002422  EF35  F012         	goto	l10626
 12211  002426                     u11280:
 12212  002426                     
 12213                           ; BSR set to: 0
 12214                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 12215  002426  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 12216  00242A  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 12217                           
 12218                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 12219  00242C  B0AB               	btfsc	4011,0,c	;volatile
 12220  00242E  EF1B  F012         	goto	u11291
 12221  002432  EF1D  F012         	goto	u11290
 12222  002436                     u11291:
 12223  002436  EF23  F012         	goto	l10620
 12224  00243A                     u11290:
 12225  00243A                     
 12226                           ; BSR set to: 0
 12227  00243A  0E00               	movlw	0
 12228  00243C  6F65               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 12229  00243E  0E00               	movlw	0
 12230  002440  6F64               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 12231  002442  EF27  F012         	goto	l10622
 12232  002446                     l10620:
 12233                           
 12234                           ; BSR set to: 0
 12235  002446  0E01               	movlw	1
 12236  002448  6F65               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 12237  00244A  0E00               	movlw	0
 12238  00244C  6F64               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 12239  00244E                     l10622:
 12240                           
 12241                           ; BSR set to: 0
 12242  00244E  5164               	movf	_EUSART_Async_Read_Data$2031& (0+255),w,b
 12243  002450  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 12244  002452  5165               	movf	(_EUSART_Async_Read_Data$2031+1)& (0+255),w,b
 12245  002454  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 12246  002456                     
 12247                           ; BSR set to: 0
 12248                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 12249  002456  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 12250  00245A  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 12251  00245E  C06A  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
 12252  002462  C06B  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
 12253                           
 12254                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 12255  002466  EFB3  F012         	goto	l10656
 12256  00246A                     l10626:
 12257                           
 12258                           ; BSR set to: 0
 12259  00246A  EE20 F009          	lfsr	2,9
 12260  00246E  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12261  002470  26D9               	addwf	fsr2l,f,c
 12262  002472  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12263  002474  22DA               	addwfc	fsr2h,f,c
 12264  002476  30DF               	rrcf	223,w,c
 12265  002478  0B03               	andlw	3
 12266  00247A  06E8               	decf	wreg,f,c
 12267  00247C  A4D8               	btfss	status,2,c
 12268  00247E  EF43  F012         	goto	u11301
 12269  002482  EF45  F012         	goto	u11300
 12270  002486                     u11301:
 12271  002486  EF7B  F012         	goto	l10640
 12272  00248A                     u11300:
 12273  00248A                     
 12274                           ; BSR set to: 0
 12275                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 12276  00248A  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 12277  00248E  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 12278                           
 12279                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 12280  002490  B0AB               	btfsc	171,0,c	;volatile
 12281  002492  EF4D  F012         	goto	u11311
 12282  002496  EF4F  F012         	goto	u11310
 12283  00249A                     u11311:
 12284  00249A  EF55  F012         	goto	l10632
 12285  00249E                     u11310:
 12286  00249E                     
 12287                           ; BSR set to: 0
 12288  00249E  0E00               	movlw	0
 12289  0024A0  6F67               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 12290  0024A2  0E00               	movlw	0
 12291  0024A4  6F66               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 12292  0024A6  EF59  F012         	goto	l10634
 12293  0024AA                     l10632:
 12294                           
 12295                           ; BSR set to: 0
 12296  0024AA  0E01               	movlw	1
 12297  0024AC  6F67               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 12298  0024AE  0E00               	movlw	0
 12299  0024B0  6F66               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 12300  0024B2                     l10634:
 12301                           
 12302                           ; BSR set to: 0
 12303  0024B2  5166               	movf	_EUSART_Async_Read_Data$2032& (0+255),w,b
 12304  0024B4  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 12305  0024B6  5167               	movf	(_EUSART_Async_Read_Data$2032+1)& (0+255),w,b
 12306  0024B8  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 12307  0024BA                     
 12308                           ; BSR set to: 0
 12309                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 12310  0024BA  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 12311  0024BC  EC28  F025         	call	_calc_parity_even
 12312  0024C0  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12313  0024C2  0100               	movlb	0	; () banked
 12314  0024C4  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 12315  0024C6  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 12316  0024C8  A4D8               	btfss	status,2,c
 12317  0024CA  EF69  F012         	goto	u11321
 12318  0024CE  EF6B  F012         	goto	u11320
 12319  0024D2                     u11321:
 12320  0024D2  EFB3  F012         	goto	l706
 12321  0024D6                     u11320:
 12322  0024D6                     l10638:
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 12326  0024D6  0EFF               	movlw	255
 12327  0024D8  156A               	andwf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 12328  0024DA  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12329  0024DC  0E00               	movlw	0
 12330  0024DE  156B               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 12331  0024E0  6E24               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
 12332  0024E2  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 12333  0024E6  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 12334  0024EA  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 12335  0024EE  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 12336                           
 12337                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 12338  0024F2  EFB3  F012         	goto	l10656
 12339  0024F6                     l10640:
 12340                           
 12341                           ; BSR set to: 0
 12342  0024F6  EE20 F009          	lfsr	2,9
 12343  0024FA  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12344  0024FC  26D9               	addwf	fsr2l,f,c
 12345  0024FE  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12346  002500  22DA               	addwfc	fsr2h,f,c
 12347  002502  30DF               	rrcf	223,w,c
 12348  002504  0B03               	andlw	3
 12349  002506  0A02               	xorlw	2
 12350  002508  A4D8               	btfss	status,2,c
 12351  00250A  EF89  F012         	goto	u11331
 12352  00250E  EF8B  F012         	goto	u11330
 12353  002512                     u11331:
 12354  002512  EFB3  F012         	goto	l706
 12355  002516                     u11330:
 12356  002516                     
 12357                           ; BSR set to: 0
 12358                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 12359  002516  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 12360  00251A  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 12361                           
 12362                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 12363  00251C  B0AB               	btfsc	171,0,c	;volatile
 12364  00251E  EF93  F012         	goto	u11341
 12365  002522  EF95  F012         	goto	u11340
 12366  002526                     u11341:
 12367  002526  EF9B  F012         	goto	l10646
 12368  00252A                     u11340:
 12369  00252A                     
 12370                           ; BSR set to: 0
 12371  00252A  0E00               	movlw	0
 12372  00252C  6F69               	movwf	(_EUSART_Async_Read_Data$2033+1)& (0+255),b
 12373  00252E  0E00               	movlw	0
 12374  002530  6F68               	movwf	_EUSART_Async_Read_Data$2033& (0+255),b
 12375  002532  EF9F  F012         	goto	l10648
 12376  002536                     l10646:
 12377                           
 12378                           ; BSR set to: 0
 12379  002536  0E01               	movlw	1
 12380  002538  6F69               	movwf	(_EUSART_Async_Read_Data$2033+1)& (0+255),b
 12381  00253A  0E00               	movlw	0
 12382  00253C  6F68               	movwf	_EUSART_Async_Read_Data$2033& (0+255),b
 12383  00253E                     l10648:
 12384                           
 12385                           ; BSR set to: 0
 12386  00253E  5168               	movf	_EUSART_Async_Read_Data$2033& (0+255),w,b
 12387  002540  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 12388  002542  5169               	movf	(_EUSART_Async_Read_Data$2033+1)& (0+255),w,b
 12389  002544  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 12390  002546                     
 12391                           ; BSR set to: 0
 12392                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 12393  002546  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 12394  002548  ECF4  F024         	call	_calc_parity_odd
 12395  00254C  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12396  00254E  0100               	movlb	0	; () banked
 12397  002550  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 12398  002552  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 12399  002554  A4D8               	btfss	status,2,c
 12400  002556  EFAF  F012         	goto	u11351
 12401  00255A  EFB1  F012         	goto	u11350
 12402  00255E                     u11351:
 12403  00255E  EFB3  F012         	goto	l706
 12404  002562                     u11350:
 12405  002562  EF6B  F012         	goto	l10638
 12406  002566                     l706:
 12407  002566                     l10656:
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 12411  002566  B2AB               	btfsc	171,1,c	;volatile
 12412  002568  EFB8  F012         	goto	u11361
 12413  00256C  EFBA  F012         	goto	u11360
 12414  002570                     u11361:
 12415  002570  EFC1  F012         	goto	l727
 12416  002574                     u11360:
 12417  002574                     
 12418                           ; BSR set to: 0
 12419  002574  A4AB               	btfss	171,2,c	;volatile
 12420  002576  EFBF  F012         	goto	u11371
 12421  00257A  EFC1  F012         	goto	u11370
 12422  00257E                     u11371:
 12423  00257E  EFC3  F012         	goto	l728
 12424  002582                     u11370:
 12425  002582                     l727:
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 12429  002582  98AB               	bcf	171,4,c	;volatile
 12430                           
 12431                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 12432  002584  88AB               	bsf	171,4,c	;volatile
 12433  002586                     l728:
 12434                           
 12435                           ; BSR set to: 0
 12436  002586  0012               	return		;funcret
 12437  002588                     __end_of_EUSART_Async_Read_Data:
 12438                           	callstack 0
 12439                           
 12440 ;; *************** function _calc_parity_odd *****************
 12441 ;; Defined at:
 12442 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  data            1    wreg     unsigned char 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  data            1   31[COMRAM] unsigned char 
 12447 ;;  l_counter       1   33[COMRAM] unsigned char 
 12448 ;;  number_of_on    1   32[COMRAM] unsigned char 
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  1    wreg      unsigned char 
 12451 ;; Registers used:
 12452 ;;		wreg, status,2, status,0
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/0
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;Total ram usage:        5 bytes
 12463 ;; Hardware stack levels used: 1
 12464 ;; Hardware stack levels required when called: 8
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_EUSART_Async_Read_Data
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text63
 12473  0049E8                     __ptext63:
 12474                           	callstack 0
 12475  0049E8                     _calc_parity_odd:
 12476                           	callstack 19
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;incstack = 0
 12480                           ;calc_parity_odd@data stored from wreg
 12481  0049E8  6E20               	movwf	calc_parity_odd@data^0,c
 12482  0049EA                     
 12483                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 12484  0049EA  0E00               	movlw	0
 12485  0049EC  6E21               	movwf	calc_parity_odd@number_of_ones^0,c
 12486                           
 12487                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 12488  0049EE  0E00               	movlw	0
 12489  0049F0  6E22               	movwf	calc_parity_odd@l_counter^0,c
 12490                           
 12491                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 12492  0049F2  0E00               	movlw	0
 12493  0049F4  6E22               	movwf	calc_parity_odd@l_counter^0,c
 12494  0049F6                     l10414:
 12495                           
 12496                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 12497  0049F6  C022  F01E         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
 12498  0049FA  0E01               	movlw	1
 12499  0049FC  6E1F               	movwf	(??_calc_parity_odd+1)^0,c
 12500  0049FE  2A1E               	incf	??_calc_parity_odd^0,f,c
 12501  004A00  EF04  F025         	goto	u10964
 12502  004A04                     u10965:
 12503  004A04  90D8               	bcf	status,0,c
 12504  004A06  361F               	rlcf	(??_calc_parity_odd+1)^0,f,c
 12505  004A08                     u10964:
 12506  004A08  2E1E               	decfsz	??_calc_parity_odd^0,f,c
 12507  004A0A  EF02  F025         	goto	u10965
 12508  004A0E  501F               	movf	(??_calc_parity_odd+1)^0,w,c
 12509  004A10  1420               	andwf	calc_parity_odd@data^0,w,c
 12510  004A12  0900               	iorlw	0
 12511  004A14  B4D8               	btfsc	status,2,c
 12512  004A16  EF0F  F025         	goto	u10971
 12513  004A1A  EF11  F025         	goto	u10970
 12514  004A1E                     u10971:
 12515  004A1E  EF12  F025         	goto	l826
 12516  004A22                     u10970:
 12517  004A22                     
 12518                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 12519  004A22  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 12520  004A24                     l826:
 12521                           
 12522                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 12523  004A24  2A22               	incf	calc_parity_odd@l_counter^0,f,c
 12524  004A26  0E07               	movlw	7
 12525  004A28  6422               	cpfsgt	calc_parity_odd@l_counter^0,c
 12526  004A2A  EF19  F025         	goto	u10981
 12527  004A2E  EF1B  F025         	goto	u10980
 12528  004A32                     u10981:
 12529  004A32  EFFB  F024         	goto	l10414
 12530  004A36                     u10980:
 12531  004A36                     
 12532                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 12533  004A36  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 12534  004A38                     
 12535                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 12536  004A38  B021               	btfsc	calc_parity_odd@number_of_ones^0,0,c
 12537  004A3A  EF21  F025         	goto	u10991
 12538  004A3E  EF23  F025         	goto	u10990
 12539  004A42                     u10991:
 12540  004A42  EF26  F025         	goto	l10428
 12541  004A46                     u10990:
 12542  004A46                     
 12543                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 12544  004A46  0E01               	movlw	1
 12545  004A48  EF27  F025         	goto	l828
 12546  004A4C                     l10428:
 12547                           
 12548                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 12549  004A4C  0E00               	movlw	0
 12550  004A4E                     l828:
 12551  004A4E  0012               	return		;funcret
 12552  004A50                     __end_of_calc_parity_odd:
 12553                           	callstack 0
 12554                           
 12555 ;; *************** function _calc_parity_even *****************
 12556 ;; Defined at:
 12557 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  data            1    wreg     unsigned char 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  data            1   31[COMRAM] unsigned char 
 12562 ;;  l_counter       1   33[COMRAM] unsigned char 
 12563 ;;  number_of_on    1   32[COMRAM] unsigned char 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      unsigned char 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;Total ram usage:        5 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; Hardware stack levels required when called: 8
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_EUSART_Async_Read_Data
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text64
 12588  004A50                     __ptext64:
 12589                           	callstack 0
 12590  004A50                     _calc_parity_even:
 12591                           	callstack 19
 12592                           
 12593                           ;incstack = 0
 12594                           ;calc_parity_even@data stored from wreg
 12595  004A50  6E20               	movwf	calc_parity_even@data^0,c
 12596  004A52                     
 12597                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 12598  004A52  0E00               	movlw	0
 12599  004A54  6E21               	movwf	calc_parity_even@number_of_ones^0,c
 12600                           
 12601                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 12602  004A56  0E00               	movlw	0
 12603  004A58  6E22               	movwf	calc_parity_even@l_counter^0,c
 12604                           
 12605                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 12606  004A5A  0E00               	movlw	0
 12607  004A5C  6E22               	movwf	calc_parity_even@l_counter^0,c
 12608  004A5E                     l10390:
 12609                           
 12610                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 12611  004A5E  C022  F01E         	movff	calc_parity_even@l_counter,??_calc_parity_even
 12612  004A62  0E01               	movlw	1
 12613  004A64  6E1F               	movwf	(??_calc_parity_even+1)^0,c
 12614  004A66  2A1E               	incf	??_calc_parity_even^0,f,c
 12615  004A68  EF38  F025         	goto	u10924
 12616  004A6C                     u10925:
 12617  004A6C  90D8               	bcf	status,0,c
 12618  004A6E  361F               	rlcf	(??_calc_parity_even+1)^0,f,c
 12619  004A70                     u10924:
 12620  004A70  2E1E               	decfsz	??_calc_parity_even^0,f,c
 12621  004A72  EF36  F025         	goto	u10925
 12622  004A76  501F               	movf	(??_calc_parity_even+1)^0,w,c
 12623  004A78  1420               	andwf	calc_parity_even@data^0,w,c
 12624  004A7A  0900               	iorlw	0
 12625  004A7C  B4D8               	btfsc	status,2,c
 12626  004A7E  EF43  F025         	goto	u10931
 12627  004A82  EF45  F025         	goto	u10930
 12628  004A86                     u10931:
 12629  004A86  EF46  F025         	goto	l833
 12630  004A8A                     u10930:
 12631  004A8A                     
 12632                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 12633  004A8A  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 12634  004A8C                     l833:
 12635                           
 12636                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 12637  004A8C  2A22               	incf	calc_parity_even@l_counter^0,f,c
 12638  004A8E  0E07               	movlw	7
 12639  004A90  6422               	cpfsgt	calc_parity_even@l_counter^0,c
 12640  004A92  EF4D  F025         	goto	u10941
 12641  004A96  EF4F  F025         	goto	u10940
 12642  004A9A                     u10941:
 12643  004A9A  EF2F  F025         	goto	l10390
 12644  004A9E                     u10940:
 12645  004A9E                     
 12646                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 12647  004A9E  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 12648  004AA0                     
 12649                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 12650  004AA0  A021               	btfss	calc_parity_even@number_of_ones^0,0,c
 12651  004AA2  EF55  F025         	goto	u10951
 12652  004AA6  EF57  F025         	goto	u10950
 12653  004AAA                     u10951:
 12654  004AAA  EF5A  F025         	goto	l10404
 12655  004AAE                     u10950:
 12656  004AAE                     
 12657                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 12658  004AAE  0E01               	movlw	1
 12659  004AB0  EF5B  F025         	goto	l835
 12660  004AB4                     l10404:
 12661                           
 12662                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 12663  004AB4  0E00               	movlw	0
 12664  004AB6                     l835:
 12665  004AB6  0012               	return		;funcret
 12666  004AB8                     __end_of_calc_parity_even:
 12667                           	callstack 0
 12668                           
 12669 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
 12670 ;; Defined at:
 12671 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 12674 ;;		 -> TEST_PIN(1), 
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;  ERRORSTATUS     1    0        unsigned char 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      unsigned char 
 12679 ;; Registers used:
 12680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;Total ram usage:        7 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 8
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_main
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text65
 12701  0047C4                     __ptext65:
 12702                           	callstack 0
 12703  0047C4                     _GPIO_Pin_Toggle_Logic:
 12704                           	callstack 22
 12705  0047C4                     
 12706                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 12707  0047C4  501E               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 12708  0047C6  101F               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 12709  0047C8  A4D8               	btfss	status,2,c
 12710  0047CA  EFE9  F023         	goto	u8231
 12711  0047CE  EFEB  F023         	goto	u8230
 12712  0047D2                     u8231:
 12713  0047D2  EFED  F023         	goto	l8350
 12714  0047D6                     u8230:
 12715  0047D6                     
 12716                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 12717  0047D6  EF19  F024         	goto	l921
 12718  0047DA                     l8350:
 12719                           
 12720                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 12721  0047DA  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 12722  0047DE  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 12723  0047E2  50DF               	movf	223,w,c
 12724  0047E4  0B07               	andlw	7
 12725  0047E6  6E20               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
 12726  0047E8  0E01               	movlw	1
 12727  0047EA  6E21               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
 12728  0047EC  2A20               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
 12729  0047EE  EFFB  F023         	goto	u8244
 12730  0047F2                     u8245:
 12731  0047F2  90D8               	bcf	status,0,c
 12732  0047F4  3621               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
 12733  0047F6                     u8244:
 12734  0047F6  2E20               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
 12735  0047F8  EFF9  F023         	goto	u8245
 12736  0047FC  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 12737  004800  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 12738  004804  30DF               	rrcf	223,w,c
 12739  004806  32E8               	rrcf	wreg,f,c
 12740  004808  32E8               	rrcf	wreg,f,c
 12741  00480A  0B07               	andlw	7
 12742  00480C  6E22               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
 12743  00480E  5022               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
 12744  004810  0D02               	mullw	2
 12745  004812  0EDD               	movlw	low _lat_registers
 12746  004814  24F3               	addwf	243,w,c
 12747  004816  6ED9               	movwf	fsr2l,c
 12748  004818  0E00               	movlw	high _lat_registers
 12749  00481A  20F4               	addwfc	prodh,w,c
 12750  00481C  6EDA               	movwf	fsr2h,c
 12751  00481E  CFDE F023          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
 12752  004822  CFDD F024          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
 12753  004826  C023  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
 12754  00482A  C024  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
 12755  00482E  5021               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
 12756  004830  1ADF               	xorwf	indf2,f,c
 12757  004832                     l921:
 12758  004832  0012               	return		;funcret
 12759  004834                     __end_of_GPIO_Pin_Toggle_Logic:
 12760                           	callstack 0
 12761                           
 12762 ;; *************** function _InterruptManagerLow *****************
 12763 ;; Defined at:
 12764 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12780 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12781 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12782 ;;Total ram usage:        3 bytes
 12783 ;; Hardware stack levels used: 1
 12784 ;; Hardware stack levels required when called: 7
 12785 ;; This function calls:
 12786 ;;		_ADC_ISR
 12787 ;;		_INT1_ISR
 12788 ;;		_RB4_ISR
 12789 ;;		_RB5_ISR
 12790 ;;		_RB6_ISR
 12791 ;;		_RB7_ISR
 12792 ;; This function is called by:
 12793 ;;		Interrupt level 1
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	intcodelo
 12798  000018                     __pintcodelo:
 12799                           	callstack 0
 12800  000018                     _InterruptManagerLow:
 12801                           	callstack 17
 12802                           
 12803                           ;incstack = 0
 12804  000018  8042               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12805  00001A  CFD8 F01B          	movff	status,??_InterruptManagerLow
 12806  00001E  CFE8 F01C          	movff	wreg,??_InterruptManagerLow+1
 12807  000022  CFE0 F01D          	movff	bsr,??_InterruptManagerLow+2
 12808  000026                     
 12809                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
 12810  000026  A6F0               	btfss	240,3,c	;volatile
 12811  000028  EF18  F000         	goto	i1u923_21
 12812  00002C  EF1A  F000         	goto	i1u923_20
 12813  000030                     i1u923_21:
 12814  000030  EF23  F000         	goto	i1l1164
 12815  000034                     i1u923_20:
 12816  000034  A0F0               	btfss	240,0,c	;volatile
 12817  000036  EF1F  F000         	goto	i1u924_21
 12818  00003A  EF21  F000         	goto	i1u924_20
 12819  00003E                     i1u924_21:
 12820  00003E  EF23  F000         	goto	i1l1164
 12821  000042                     i1u924_20:
 12822  000042                     
 12823                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
 12824  000042  ECD5  F028         	call	_INT1_ISR	;wreg free
 12825  000046                     i1l1164:
 12826                           
 12827                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12828  000046  A6F2               	btfss	242,3,c	;volatile
 12829  000048  EF28  F000         	goto	i1u925_21
 12830  00004C  EF2A  F000         	goto	i1u925_20
 12831  000050                     i1u925_21:
 12832  000050  EF43  F000         	goto	i1l1166
 12833  000054                     i1u925_20:
 12834  000054  A0F2               	btfss	242,0,c	;volatile
 12835  000056  EF2F  F000         	goto	i1u926_21
 12836  00005A  EF31  F000         	goto	i1u926_20
 12837  00005E                     i1u926_21:
 12838  00005E  EF43  F000         	goto	i1l1166
 12839  000062                     i1u926_20:
 12840  000062  A881               	btfss	129,4,c	;volatile
 12841  000064  EF36  F000         	goto	i1u927_21
 12842  000068  EF38  F000         	goto	i1u927_20
 12843  00006C                     i1u927_21:
 12844  00006C  EF43  F000         	goto	i1l1166
 12845  000070                     i1u927_20:
 12846  000070  A03D               	btfss	_flags^0,0,c	;volatile
 12847  000072  EF3D  F000         	goto	i1u928_21
 12848  000076  EF3F  F000         	goto	i1u928_20
 12849  00007A                     i1u928_21:
 12850  00007A  EF43  F000         	goto	i1l1166
 12851  00007E                     i1u928_20:
 12852  00007E                     
 12853                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
 12854  00007E  903D               	bcf	_flags^0,0,c	;volatile
 12855  000080                     
 12856                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
 12857  000080  0E01               	movlw	1
 12858  000082  ECC1  F028         	call	_RB4_ISR
 12859  000086                     i1l1166:
 12860                           
 12861                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12862  000086  A6F2               	btfss	242,3,c	;volatile
 12863  000088  EF48  F000         	goto	i1u929_21
 12864  00008C  EF4A  F000         	goto	i1u929_20
 12865  000090                     i1u929_21:
 12866  000090  EF63  F000         	goto	i1l1168
 12867  000094                     i1u929_20:
 12868  000094  A0F2               	btfss	242,0,c	;volatile
 12869  000096  EF4F  F000         	goto	i1u930_21
 12870  00009A  EF51  F000         	goto	i1u930_20
 12871  00009E                     i1u930_21:
 12872  00009E  EF63  F000         	goto	i1l1168
 12873  0000A2                     i1u930_20:
 12874  0000A2  B881               	btfsc	129,4,c	;volatile
 12875  0000A4  EF56  F000         	goto	i1u931_21
 12876  0000A8  EF58  F000         	goto	i1u931_20
 12877  0000AC                     i1u931_21:
 12878  0000AC  EF63  F000         	goto	i1l1168
 12879  0000B0                     i1u931_20:
 12880  0000B0  B03D               	btfsc	_flags^0,0,c	;volatile
 12881  0000B2  EF5D  F000         	goto	i1u932_21
 12882  0000B6  EF5F  F000         	goto	i1u932_20
 12883  0000BA                     i1u932_21:
 12884  0000BA  EF63  F000         	goto	i1l1168
 12885  0000BE                     i1u932_20:
 12886  0000BE                     
 12887                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
 12888  0000BE  803D               	bsf	_flags^0,0,c	;volatile
 12889  0000C0                     
 12890                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
 12891  0000C0  0E00               	movlw	0
 12892  0000C2  ECC1  F028         	call	_RB4_ISR
 12893  0000C6                     i1l1168:
 12894                           
 12895                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12896  0000C6  A6F2               	btfss	242,3,c	;volatile
 12897  0000C8  EF68  F000         	goto	i1u933_21
 12898  0000CC  EF6A  F000         	goto	i1u933_20
 12899  0000D0                     i1u933_21:
 12900  0000D0  EF83  F000         	goto	i1l1170
 12901  0000D4                     i1u933_20:
 12902  0000D4  A0F2               	btfss	242,0,c	;volatile
 12903  0000D6  EF6F  F000         	goto	i1u934_21
 12904  0000DA  EF71  F000         	goto	i1u934_20
 12905  0000DE                     i1u934_21:
 12906  0000DE  EF83  F000         	goto	i1l1170
 12907  0000E2                     i1u934_20:
 12908  0000E2  AA81               	btfss	129,5,c	;volatile
 12909  0000E4  EF76  F000         	goto	i1u935_21
 12910  0000E8  EF78  F000         	goto	i1u935_20
 12911  0000EC                     i1u935_21:
 12912  0000EC  EF83  F000         	goto	i1l1170
 12913  0000F0                     i1u935_20:
 12914  0000F0  A23D               	btfss	_flags^0,1,c	;volatile
 12915  0000F2  EF7D  F000         	goto	i1u936_21
 12916  0000F6  EF7F  F000         	goto	i1u936_20
 12917  0000FA                     i1u936_21:
 12918  0000FA  EF83  F000         	goto	i1l1170
 12919  0000FE                     i1u936_20:
 12920  0000FE                     
 12921                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
 12922  0000FE  923D               	bcf	_flags^0,1,c	;volatile
 12923  000100                     
 12924                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
 12925  000100  0E01               	movlw	1
 12926  000102  ECB4  F028         	call	_RB5_ISR
 12927  000106                     i1l1170:
 12928                           
 12929                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12930  000106  A6F2               	btfss	242,3,c	;volatile
 12931  000108  EF88  F000         	goto	i1u937_21
 12932  00010C  EF8A  F000         	goto	i1u937_20
 12933  000110                     i1u937_21:
 12934  000110  EFA3  F000         	goto	i1l1172
 12935  000114                     i1u937_20:
 12936  000114  A0F2               	btfss	242,0,c	;volatile
 12937  000116  EF8F  F000         	goto	i1u938_21
 12938  00011A  EF91  F000         	goto	i1u938_20
 12939  00011E                     i1u938_21:
 12940  00011E  EFA3  F000         	goto	i1l1172
 12941  000122                     i1u938_20:
 12942  000122  BA81               	btfsc	129,5,c	;volatile
 12943  000124  EF96  F000         	goto	i1u939_21
 12944  000128  EF98  F000         	goto	i1u939_20
 12945  00012C                     i1u939_21:
 12946  00012C  EFA3  F000         	goto	i1l1172
 12947  000130                     i1u939_20:
 12948  000130  B23D               	btfsc	_flags^0,1,c	;volatile
 12949  000132  EF9D  F000         	goto	i1u940_21
 12950  000136  EF9F  F000         	goto	i1u940_20
 12951  00013A                     i1u940_21:
 12952  00013A  EFA3  F000         	goto	i1l1172
 12953  00013E                     i1u940_20:
 12954  00013E                     
 12955                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
 12956  00013E  823D               	bsf	_flags^0,1,c	;volatile
 12957  000140                     
 12958                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
 12959  000140  0E00               	movlw	0
 12960  000142  ECB4  F028         	call	_RB5_ISR
 12961  000146                     i1l1172:
 12962                           
 12963                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12964  000146  A6F2               	btfss	242,3,c	;volatile
 12965  000148  EFA8  F000         	goto	i1u941_21
 12966  00014C  EFAA  F000         	goto	i1u941_20
 12967  000150                     i1u941_21:
 12968  000150  EFC3  F000         	goto	i1l1174
 12969  000154                     i1u941_20:
 12970  000154  A0F2               	btfss	242,0,c	;volatile
 12971  000156  EFAF  F000         	goto	i1u942_21
 12972  00015A  EFB1  F000         	goto	i1u942_20
 12973  00015E                     i1u942_21:
 12974  00015E  EFC3  F000         	goto	i1l1174
 12975  000162                     i1u942_20:
 12976  000162  AC81               	btfss	129,6,c	;volatile
 12977  000164  EFB6  F000         	goto	i1u943_21
 12978  000168  EFB8  F000         	goto	i1u943_20
 12979  00016C                     i1u943_21:
 12980  00016C  EFC3  F000         	goto	i1l1174
 12981  000170                     i1u943_20:
 12982  000170  A43D               	btfss	_flags^0,2,c	;volatile
 12983  000172  EFBD  F000         	goto	i1u944_21
 12984  000176  EFBF  F000         	goto	i1u944_20
 12985  00017A                     i1u944_21:
 12986  00017A  EFC3  F000         	goto	i1l1174
 12987  00017E                     i1u944_20:
 12988  00017E                     
 12989                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
 12990  00017E  943D               	bcf	_flags^0,2,c	;volatile
 12991  000180                     
 12992                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
 12993  000180  0E01               	movlw	1
 12994  000182  ECA7  F028         	call	_RB6_ISR
 12995  000186                     i1l1174:
 12996                           
 12997                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12998  000186  A6F2               	btfss	242,3,c	;volatile
 12999  000188  EFC8  F000         	goto	i1u945_21
 13000  00018C  EFCA  F000         	goto	i1u945_20
 13001  000190                     i1u945_21:
 13002  000190  EFE3  F000         	goto	i1l1176
 13003  000194                     i1u945_20:
 13004  000194  A0F2               	btfss	242,0,c	;volatile
 13005  000196  EFCF  F000         	goto	i1u946_21
 13006  00019A  EFD1  F000         	goto	i1u946_20
 13007  00019E                     i1u946_21:
 13008  00019E  EFE3  F000         	goto	i1l1176
 13009  0001A2                     i1u946_20:
 13010  0001A2  BC81               	btfsc	129,6,c	;volatile
 13011  0001A4  EFD6  F000         	goto	i1u947_21
 13012  0001A8  EFD8  F000         	goto	i1u947_20
 13013  0001AC                     i1u947_21:
 13014  0001AC  EFE3  F000         	goto	i1l1176
 13015  0001B0                     i1u947_20:
 13016  0001B0  B43D               	btfsc	_flags^0,2,c	;volatile
 13017  0001B2  EFDD  F000         	goto	i1u948_21
 13018  0001B6  EFDF  F000         	goto	i1u948_20
 13019  0001BA                     i1u948_21:
 13020  0001BA  EFE3  F000         	goto	i1l1176
 13021  0001BE                     i1u948_20:
 13022  0001BE                     
 13023                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
 13024  0001BE  843D               	bsf	_flags^0,2,c	;volatile
 13025  0001C0                     
 13026                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
 13027  0001C0  0E00               	movlw	0
 13028  0001C2  ECA7  F028         	call	_RB6_ISR
 13029  0001C6                     i1l1176:
 13030                           
 13031                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 13032  0001C6  A6F2               	btfss	242,3,c	;volatile
 13033  0001C8  EFE8  F000         	goto	i1u949_21
 13034  0001CC  EFEA  F000         	goto	i1u949_20
 13035  0001D0                     i1u949_21:
 13036  0001D0  EF03  F001         	goto	i1l1178
 13037  0001D4                     i1u949_20:
 13038  0001D4  A0F2               	btfss	242,0,c	;volatile
 13039  0001D6  EFEF  F000         	goto	i1u950_21
 13040  0001DA  EFF1  F000         	goto	i1u950_20
 13041  0001DE                     i1u950_21:
 13042  0001DE  EF03  F001         	goto	i1l1178
 13043  0001E2                     i1u950_20:
 13044  0001E2  AE81               	btfss	129,7,c	;volatile
 13045  0001E4  EFF6  F000         	goto	i1u951_21
 13046  0001E8  EFF8  F000         	goto	i1u951_20
 13047  0001EC                     i1u951_21:
 13048  0001EC  EF03  F001         	goto	i1l1178
 13049  0001F0                     i1u951_20:
 13050  0001F0  A63D               	btfss	_flags^0,3,c	;volatile
 13051  0001F2  EFFD  F000         	goto	i1u952_21
 13052  0001F6  EFFF  F000         	goto	i1u952_20
 13053  0001FA                     i1u952_21:
 13054  0001FA  EF03  F001         	goto	i1l1178
 13055  0001FE                     i1u952_20:
 13056  0001FE                     
 13057                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
 13058  0001FE  963D               	bcf	_flags^0,3,c	;volatile
 13059  000200                     
 13060                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
 13061  000200  0E01               	movlw	1
 13062  000202  EC9A  F028         	call	_RB7_ISR
 13063  000206                     i1l1178:
 13064                           
 13065                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 13066  000206  A6F2               	btfss	242,3,c	;volatile
 13067  000208  EF08  F001         	goto	i1u953_21
 13068  00020C  EF0A  F001         	goto	i1u953_20
 13069  000210                     i1u953_21:
 13070  000210  EF23  F001         	goto	i1l1180
 13071  000214                     i1u953_20:
 13072  000214  A0F2               	btfss	242,0,c	;volatile
 13073  000216  EF0F  F001         	goto	i1u954_21
 13074  00021A  EF11  F001         	goto	i1u954_20
 13075  00021E                     i1u954_21:
 13076  00021E  EF23  F001         	goto	i1l1180
 13077  000222                     i1u954_20:
 13078  000222  BE81               	btfsc	129,7,c	;volatile
 13079  000224  EF16  F001         	goto	i1u955_21
 13080  000228  EF18  F001         	goto	i1u955_20
 13081  00022C                     i1u955_21:
 13082  00022C  EF23  F001         	goto	i1l1180
 13083  000230                     i1u955_20:
 13084  000230  B63D               	btfsc	_flags^0,3,c	;volatile
 13085  000232  EF1D  F001         	goto	i1u956_21
 13086  000236  EF1F  F001         	goto	i1u956_20
 13087  00023A                     i1u956_21:
 13088  00023A  EF23  F001         	goto	i1l1180
 13089  00023E                     i1u956_20:
 13090  00023E                     
 13091                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
 13092  00023E  863D               	bsf	_flags^0,3,c	;volatile
 13093  000240                     
 13094                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
 13095  000240  0E00               	movlw	0
 13096  000242  EC9A  F028         	call	_RB7_ISR
 13097  000246                     i1l1180:
 13098                           
 13099                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
 13100  000246  AC9D               	btfss	157,6,c	;volatile
 13101  000248  EF28  F001         	goto	i1u957_21
 13102  00024C  EF2A  F001         	goto	i1u957_20
 13103  000250                     i1u957_21:
 13104  000250  EF33  F001         	goto	i1l1182
 13105  000254                     i1u957_20:
 13106  000254  AC9E               	btfss	158,6,c	;volatile
 13107  000256  EF2F  F001         	goto	i1u958_21
 13108  00025A  EF31  F001         	goto	i1u958_20
 13109  00025E                     i1u958_21:
 13110  00025E  EF33  F001         	goto	i1l1182
 13111  000262                     i1u958_20:
 13112  000262                     
 13113                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
 13114  000262  ECD8  F028         	call	_ADC_ISR	;wreg free
 13115  000266                     i1l1182:
 13116                           
 13117                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
 13118  000266  A09D               	btfss	157,0,c	;volatile
 13119  000268  EF38  F001         	goto	i1u959_21
 13120  00026C  EF3A  F001         	goto	i1u959_20
 13121  000270                     i1u959_21:
 13122  000270  EF3B  F001         	goto	i1l1185
 13123  000274                     i1u959_20:
 13124  000274  509E               	movf	158,w,c	;volatile
 13125  000276                     i1l1185:
 13126  000276  C01D  FFE0         	movff	??_InterruptManagerLow+2,bsr
 13127  00027A  C01C  FFE8         	movff	??_InterruptManagerLow+1,wreg
 13128  00027E  C01B  FFD8         	movff	??_InterruptManagerLow,status
 13129  000282  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13130  000284  0010               	retfie	
 13131  000286                     __end_of_InterruptManagerLow:
 13132                           	callstack 0
 13133                           
 13134 ;; *************** function _RB7_ISR *****************
 13135 ;; Defined at:
 13136 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;  Handler_Sele    1    wreg     unsigned char 
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 13141 ;; Return value:  Size  Location     Type
 13142 ;;                  1    wreg      void 
 13143 ;; Registers used:
 13144 ;;		wreg, status,2
 13145 ;; Tracked objects:
 13146 ;;		On entry : 0/0
 13147 ;;		On exit  : 0/0
 13148 ;;		Unchanged: 0/0
 13149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13154 ;;Total ram usage:        1 bytes
 13155 ;; Hardware stack levels used: 1
 13156 ;; Hardware stack levels required when called: 6
 13157 ;; This function calls:
 13158 ;;		Nothing
 13159 ;; This function is called by:
 13160 ;;		_InterruptManagerLow
 13161 ;; This function uses a non-reentrant model
 13162 ;;
 13163                           
 13164                           	psect	text67
 13165  005134                     __ptext67:
 13166                           	callstack 0
 13167  005134                     _RB7_ISR:
 13168                           	callstack 17
 13169                           
 13170                           ;incstack = 0
 13171                           ;RB7_ISR@Handler_Select stored from wreg
 13172  005134  6E1A               	movwf	RB7_ISR@Handler_Select^0,c
 13173  005136                     
 13174                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
 13175  005136  90F2               	bcf	242,0,c	;volatile
 13176  005138                     
 13177                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
 13178  005138  501A               	movf	RB7_ISR@Handler_Select^0,w,c
 13179  00513A  B4D8               	btfsc	status,2,c
 13180  00513C  EFA2  F028         	goto	i1u828_21
 13181  005140  EFA4  F028         	goto	i1u828_20
 13182  005144                     i1u828_21:
 13183  005144  EFA6  F028         	goto	i1l8394
 13184  005148                     i1u828_20:
 13185  005148  EFA6  F028         	goto	i1l1291
 13186  00514C                     i1l8394:
 13187  00514C                     i1l1291:
 13188  00514C  0012               	return		;funcret
 13189  00514E                     __end_of_RB7_ISR:
 13190                           	callstack 0
 13191                           
 13192 ;; *************** function _RB6_ISR *****************
 13193 ;; Defined at:
 13194 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 13195 ;; Parameters:    Size  Location     Type
 13196 ;;  Handler_Sele    1    wreg     unsigned char 
 13197 ;; Auto vars:     Size  Location     Type
 13198 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  1    wreg      void 
 13201 ;; Registers used:
 13202 ;;		wreg, status,2
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13212 ;;Total ram usage:        1 bytes
 13213 ;; Hardware stack levels used: 1
 13214 ;; Hardware stack levels required when called: 6
 13215 ;; This function calls:
 13216 ;;		Nothing
 13217 ;; This function is called by:
 13218 ;;		_InterruptManagerLow
 13219 ;; This function uses a non-reentrant model
 13220 ;;
 13221                           
 13222                           	psect	text68
 13223  00514E                     __ptext68:
 13224                           	callstack 0
 13225  00514E                     _RB6_ISR:
 13226                           	callstack 17
 13227                           
 13228                           ;incstack = 0
 13229                           ;RB6_ISR@Handler_Select stored from wreg
 13230  00514E  6E1A               	movwf	RB6_ISR@Handler_Select^0,c
 13231  005150                     
 13232                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
 13233  005150  90F2               	bcf	242,0,c	;volatile
 13234  005152                     
 13235                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
 13236  005152  501A               	movf	RB6_ISR@Handler_Select^0,w,c
 13237  005154  B4D8               	btfsc	status,2,c
 13238  005156  EFAF  F028         	goto	i1u827_21
 13239  00515A  EFB1  F028         	goto	i1u827_20
 13240  00515E                     i1u827_21:
 13241  00515E  EFB3  F028         	goto	i1l8384
 13242  005162                     i1u827_20:
 13243  005162  EFB3  F028         	goto	i1l1282
 13244  005166                     i1l8384:
 13245  005166                     i1l1282:
 13246  005166  0012               	return		;funcret
 13247  005168                     __end_of_RB6_ISR:
 13248                           	callstack 0
 13249                           
 13250 ;; *************** function _RB5_ISR *****************
 13251 ;; Defined at:
 13252 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  Handler_Sele    1    wreg     unsigned char 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      void 
 13259 ;; Registers used:
 13260 ;;		wreg, status,2
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13270 ;;Total ram usage:        1 bytes
 13271 ;; Hardware stack levels used: 1
 13272 ;; Hardware stack levels required when called: 6
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_InterruptManagerLow
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text69
 13281  005168                     __ptext69:
 13282                           	callstack 0
 13283  005168                     _RB5_ISR:
 13284                           	callstack 17
 13285                           
 13286                           ;incstack = 0
 13287                           ;RB5_ISR@Handler_Select stored from wreg
 13288  005168  6E1A               	movwf	RB5_ISR@Handler_Select^0,c
 13289  00516A                     
 13290                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
 13291  00516A  90F2               	bcf	242,0,c	;volatile
 13292  00516C                     
 13293                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
 13294  00516C  501A               	movf	RB5_ISR@Handler_Select^0,w,c
 13295  00516E  B4D8               	btfsc	status,2,c
 13296  005170  EFBC  F028         	goto	i1u826_21
 13297  005174  EFBE  F028         	goto	i1u826_20
 13298  005178                     i1u826_21:
 13299  005178  EFC0  F028         	goto	i1l8374
 13300  00517C                     i1u826_20:
 13301  00517C  EFC0  F028         	goto	i1l1273
 13302  005180                     i1l8374:
 13303  005180                     i1l1273:
 13304  005180  0012               	return		;funcret
 13305  005182                     __end_of_RB5_ISR:
 13306                           	callstack 0
 13307                           
 13308 ;; *************** function _RB4_ISR *****************
 13309 ;; Defined at:
 13310 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 13311 ;; Parameters:    Size  Location     Type
 13312 ;;  Handler_Sele    1    wreg     unsigned char 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  1    wreg      void 
 13317 ;; Registers used:
 13318 ;;		wreg, status,2
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/0
 13321 ;;		On exit  : 0/0
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13328 ;;Total ram usage:        1 bytes
 13329 ;; Hardware stack levels used: 1
 13330 ;; Hardware stack levels required when called: 6
 13331 ;; This function calls:
 13332 ;;		Nothing
 13333 ;; This function is called by:
 13334 ;;		_InterruptManagerLow
 13335 ;; This function uses a non-reentrant model
 13336 ;;
 13337                           
 13338                           	psect	text70
 13339  005182                     __ptext70:
 13340                           	callstack 0
 13341  005182                     _RB4_ISR:
 13342                           	callstack 17
 13343                           
 13344                           ;incstack = 0
 13345                           ;RB4_ISR@Handler_Select stored from wreg
 13346  005182  6E1A               	movwf	RB4_ISR@Handler_Select^0,c
 13347  005184                     
 13348                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
 13349  005184  90F2               	bcf	242,0,c	;volatile
 13350  005186                     
 13351                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
 13352  005186  501A               	movf	RB4_ISR@Handler_Select^0,w,c
 13353  005188  B4D8               	btfsc	status,2,c
 13354  00518A  EFC9  F028         	goto	i1u825_21
 13355  00518E  EFCB  F028         	goto	i1u825_20
 13356  005192                     i1u825_21:
 13357  005192  EFCD  F028         	goto	i1l8364
 13358  005196                     i1u825_20:
 13359  005196  EFCD  F028         	goto	i1l1264
 13360  00519A                     i1l8364:
 13361  00519A                     i1l1264:
 13362  00519A  0012               	return		;funcret
 13363  00519C                     __end_of_RB4_ISR:
 13364                           	callstack 0
 13365                           
 13366 ;; *************** function _INT1_ISR *****************
 13367 ;; Defined at:
 13368 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;		None
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;		None
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  1    wreg      void 
 13375 ;; Registers used:
 13376 ;;		None
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13386 ;;Total ram usage:        0 bytes
 13387 ;; Hardware stack levels used: 1
 13388 ;; Hardware stack levels required when called: 6
 13389 ;; This function calls:
 13390 ;;		Nothing
 13391 ;; This function is called by:
 13392 ;;		_InterruptManagerLow
 13393 ;; This function uses a non-reentrant model
 13394 ;;
 13395                           
 13396                           	psect	text71
 13397  0051AA                     __ptext71:
 13398                           	callstack 0
 13399  0051AA                     _INT1_ISR:
 13400                           	callstack 17
 13401  0051AA                     
 13402                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
 13403  0051AA  90F0               	bcf	240,0,c	;volatile
 13404  0051AC  0012               	return		;funcret
 13405  0051AE                     __end_of_INT1_ISR:
 13406                           	callstack 0
 13407                           
 13408 ;; *************** function _ADC_ISR *****************
 13409 ;; Defined at:
 13410 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;		None
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;		None
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  1    wreg      void 
 13417 ;; Registers used:
 13418 ;;		None
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13428 ;;Total ram usage:        0 bytes
 13429 ;; Hardware stack levels used: 1
 13430 ;; Hardware stack levels required when called: 6
 13431 ;; This function calls:
 13432 ;;		Nothing
 13433 ;; This function is called by:
 13434 ;;		_InterruptManagerLow
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           	psect	text72
 13439  0051B0                     __ptext72:
 13440                           	callstack 0
 13441  0051B0                     _ADC_ISR:
 13442                           	callstack 17
 13443  0051B0  0012               	return		;funcret
 13444  0051B2                     __end_of_ADC_ISR:
 13445                           	callstack 0
 13446                           
 13447 ;; *************** function _InterruptManagerHigh *****************
 13448 ;; Defined at:
 13449 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;		None
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;		None
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      void 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13465 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13467 ;;Total ram usage:        6 bytes
 13468 ;; Hardware stack levels used: 1
 13469 ;; Hardware stack levels required when called: 5
 13470 ;; This function calls:
 13471 ;;		_EUSART_Rx_ISR
 13472 ;;		_EUSART_Tx_ISR
 13473 ;;		_TMR0_ISR
 13474 ;; This function is called by:
 13475 ;;		Interrupt level 2
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	intcode
 13480  000008                     __pintcode:
 13481                           	callstack 0
 13482  000008                     _InterruptManagerHigh:
 13483                           	callstack 17
 13484                           
 13485                           ;incstack = 0
 13486  000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13487  00000A  EF72  F01C         	goto	int_func
 13488                           
 13489                           	psect	intcode_body
 13490  0038E4                     __pintcode_body:
 13491                           	callstack 17
 13492  0038E4                     int_func:
 13493                           	callstack 17
 13494  0038E4  CFFA F014          	movff	pclath,??_InterruptManagerHigh
 13495  0038E8  CFFB F015          	movff	pclatu,??_InterruptManagerHigh+1
 13496  0038EC  CFD9 F016          	movff	fsr2l,??_InterruptManagerHigh+2
 13497  0038F0  CFDA F017          	movff	fsr2h,??_InterruptManagerHigh+3
 13498  0038F4  CFF3 F018          	movff	prodl,??_InterruptManagerHigh+4
 13499  0038F8  CFF4 F019          	movff	prodh,??_InterruptManagerHigh+5
 13500  0038FC                     
 13501                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
 13502  0038FC  AAF2               	btfss	242,5,c	;volatile
 13503  0038FE  EF83  F01C         	goto	i2u912_41
 13504  003902  EF85  F01C         	goto	i2u912_40
 13505  003906                     i2u912_41:
 13506  003906  EF8E  F01C         	goto	i2l1143
 13507  00390A                     i2u912_40:
 13508  00390A  A4F2               	btfss	242,2,c	;volatile
 13509  00390C  EF8A  F01C         	goto	i2u913_41
 13510  003910  EF8C  F01C         	goto	i2u913_40
 13511  003914                     i2u913_41:
 13512  003914  EF8E  F01C         	goto	i2l1143
 13513  003918                     i2u913_40:
 13514  003918                     
 13515                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
 13516  003918  ECD9  F028         	call	_TMR0_ISR	;wreg free
 13517  00391C                     i2l1143:
 13518                           
 13519                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
 13520  00391C  A29D               	btfss	157,1,c	;volatile
 13521  00391E  EF93  F01C         	goto	i2u914_41
 13522  003922  EF95  F01C         	goto	i2u914_40
 13523  003926                     i2u914_41:
 13524  003926  EF96  F01C         	goto	i2l1145
 13525  00392A                     i2u914_40:
 13526  00392A  509E               	movf	158,w,c	;volatile
 13527  00392C                     i2l1145:
 13528                           
 13529                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
 13530  00392C  A2A0               	btfss	160,1,c	;volatile
 13531  00392E  EF9B  F01C         	goto	i2u915_41
 13532  003932  EF9D  F01C         	goto	i2u915_40
 13533  003936                     i2u915_41:
 13534  003936  EF9E  F01C         	goto	i2l1147
 13535  00393A                     i2u915_40:
 13536  00393A  50A1               	movf	161,w,c	;volatile
 13537  00393C                     i2l1147:
 13538                           
 13539                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
 13540  00393C  A0A0               	btfss	160,0,c	;volatile
 13541  00393E  EFA3  F01C         	goto	i2u916_41
 13542  003942  EFA5  F01C         	goto	i2u916_40
 13543  003946                     i2u916_41:
 13544  003946  EFA6  F01C         	goto	i2l1149
 13545  00394A                     i2u916_40:
 13546  00394A  50A1               	movf	161,w,c	;volatile
 13547  00394C                     i2l1149:
 13548                           
 13549                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
 13550  00394C  AA9D               	btfss	157,5,c	;volatile
 13551  00394E  EFAB  F01C         	goto	i2u917_41
 13552  003952  EFAD  F01C         	goto	i2u917_40
 13553  003956                     i2u917_41:
 13554  003956  EFB6  F01C         	goto	i2l1151
 13555  00395A                     i2u917_40:
 13556  00395A  AA9E               	btfss	158,5,c	;volatile
 13557  00395C  EFB2  F01C         	goto	i2u918_41
 13558  003960  EFB4  F01C         	goto	i2u918_40
 13559  003964                     i2u918_41:
 13560  003964  EFB6  F01C         	goto	i2l1151
 13561  003968                     i2u918_40:
 13562  003968                     
 13563                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
 13564  003968  ECEB  F027         	call	_EUSART_Rx_ISR	;wreg free
 13565  00396C                     i2l1151:
 13566                           
 13567                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
 13568  00396C  A89D               	btfss	157,4,c	;volatile
 13569  00396E  EFBB  F01C         	goto	i2u919_41
 13570  003972  EFBD  F01C         	goto	i2u919_40
 13571  003976                     i2u919_41:
 13572  003976  EFC6  F01C         	goto	i2l1153
 13573  00397A                     i2u919_40:
 13574  00397A  A89E               	btfss	158,4,c	;volatile
 13575  00397C  EFC2  F01C         	goto	i2u920_41
 13576  003980  EFC4  F01C         	goto	i2u920_40
 13577  003984                     i2u920_41:
 13578  003984  EFC6  F01C         	goto	i2l1153
 13579  003988                     i2u920_40:
 13580  003988                     
 13581                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
 13582  003988  ECDA  F028         	call	_EUSART_Tx_ISR	;wreg free
 13583  00398C                     i2l1153:
 13584                           
 13585                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
 13586  00398C  A6A0               	btfss	160,3,c	;volatile
 13587  00398E  EFCB  F01C         	goto	i2u921_41
 13588  003992  EFCD  F01C         	goto	i2u921_40
 13589  003996                     i2u921_41:
 13590  003996  EFCE  F01C         	goto	i2l1155
 13591  00399A                     i2u921_40:
 13592  00399A  50A1               	movf	161,w,c	;volatile
 13593  00399C                     i2l1155:
 13594                           
 13595                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
 13596  00399C  A69D               	btfss	157,3,c	;volatile
 13597  00399E  EFD3  F01C         	goto	i2u922_41
 13598  0039A2  EFD5  F01C         	goto	i2u922_40
 13599  0039A6                     i2u922_41:
 13600  0039A6  EFD6  F01C         	goto	i2l1158
 13601  0039AA                     i2u922_40:
 13602  0039AA  509E               	movf	158,w,c	;volatile
 13603  0039AC                     i2l1158:
 13604  0039AC  C019  FFF4         	movff	??_InterruptManagerHigh+5,prodh
 13605  0039B0  C018  FFF3         	movff	??_InterruptManagerHigh+4,prodl
 13606  0039B4  C017  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 13607  0039B8  C016  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 13608  0039BC  C015  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 13609  0039C0  C014  FFFA         	movff	??_InterruptManagerHigh,pclath
 13610  0039C4  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13611  0039C6  0011               	retfie		f
 13612  0039C8                     __end_of_InterruptManagerHigh:
 13613                           	callstack 0
 13614                           
 13615 ;; *************** function _TMR0_ISR *****************
 13616 ;; Defined at:
 13617 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;		None
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;		None
 13622 ;; Return value:  Size  Location     Type
 13623 ;;                  1    wreg      void 
 13624 ;; Registers used:
 13625 ;;		None
 13626 ;; Tracked objects:
 13627 ;;		On entry : 0/0
 13628 ;;		On exit  : 0/0
 13629 ;;		Unchanged: 0/0
 13630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;Total ram usage:        0 bytes
 13636 ;; Hardware stack levels used: 1
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_InterruptManagerHigh
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text74
 13645  0051B2                     __ptext74:
 13646                           	callstack 0
 13647  0051B2                     _TMR0_ISR:
 13648                           	callstack 21
 13649  0051B2  0012               	return		;funcret
 13650  0051B4                     __end_of_TMR0_ISR:
 13651                           	callstack 0
 13652                           
 13653 ;; *************** function _EUSART_Tx_ISR *****************
 13654 ;; Defined at:
 13655 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;		None
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;		None
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      void 
 13662 ;; Registers used:
 13663 ;;		None
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;Total ram usage:        0 bytes
 13674 ;; Hardware stack levels used: 1
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		_InterruptManagerHigh
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text75
 13683  0051B4                     __ptext75:
 13684                           	callstack 0
 13685  0051B4                     _EUSART_Tx_ISR:
 13686                           	callstack 21
 13687  0051B4  0012               	return		;funcret
 13688  0051B6                     __end_of_EUSART_Tx_ISR:
 13689                           	callstack 0
 13690                           
 13691 ;; *************** function _EUSART_Rx_ISR *****************
 13692 ;; Defined at:
 13693 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;		None
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;                  1    wreg      void 
 13700 ;; Registers used:
 13701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13711 ;;Total ram usage:        0 bytes
 13712 ;; Hardware stack levels used: 1
 13713 ;; Hardware stack levels required when called: 4
 13714 ;; This function calls:
 13715 ;;		Absolute function
 13716 ;;		_usart_isr
 13717 ;; This function is called by:
 13718 ;;		_InterruptManagerHigh
 13719 ;; This function uses a non-reentrant model
 13720 ;;
 13721                           
 13722                           	psect	text76
 13723  004FD6                     __ptext76:
 13724                           	callstack 0
 13725  004FD6                     _EUSART_Rx_ISR:
 13726                           	callstack 17
 13727  004FD6                     
 13728                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
 13729  004FD6  5028               	movf	_eusart_Rx_InterruptHandler^0,w,c
 13730  004FD8  1029               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 13731  004FDA  B4D8               	btfsc	status,2,c
 13732  004FDC  EFF2  F027         	goto	i2u821_41
 13733  004FE0  EFF4  F027         	goto	i2u821_40
 13734  004FE4                     i2u821_41:
 13735  004FE4  EF00  F028         	goto	i2l842
 13736  004FE8                     i2u821_40:
 13737  004FE8                     
 13738                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
 13739  004FE8  D802               	call	i2u822_48
 13740  004FEA  EF00  F028         	goto	i2u822_49
 13741  004FEE                     i2u822_48:
 13742  004FEE  0005               	push	
 13743  004FF0  6EFA               	movwf	pclath,c
 13744  004FF2  5028               	movf	_eusart_Rx_InterruptHandler^0,w,c
 13745  004FF4  6EFD               	movwf	tosl,c
 13746  004FF6  5029               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 13747  004FF8  6EFE               	movwf	tosh,c
 13748  004FFA  6AFF               	clrf	tosu,c
 13749  004FFC  50FA               	movf	pclath,w,c
 13750  004FFE  0012               	return		;indir
 13751  005000                     i2u822_49:
 13752  005000                     i2l842:
 13753  005000  0012               	return		;funcret
 13754  005002                     __end_of_EUSART_Rx_ISR:
 13755                           	callstack 0
 13756                           
 13757 ;; *************** function _usart_isr *****************
 13758 ;; Defined at:
 13759 ;;		line 415 in file "application.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;		None
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;		None
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  1    wreg      void 
 13766 ;; Registers used:
 13767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13777 ;;Total ram usage:        0 bytes
 13778 ;; Hardware stack levels used: 1
 13779 ;; Hardware stack levels required when called: 3
 13780 ;; This function calls:
 13781 ;;		_Bluetooth_Send_Data_Non_Blocking
 13782 ;;		i2_EUSART_Async_Read_Data
 13783 ;;		i2_GPIO_Pin_Toggle_Logic
 13784 ;; This function is called by:
 13785 ;;		_EUSART_Rx_ISR
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           	psect	text77
 13790  004F1E                     __ptext77:
 13791                           	callstack 0
 13792  004F1E                     _usart_isr:
 13793                           	callstack 17
 13794  004F1E                     
 13795                           ;application.c: 417:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
 13796  004F1E  0E0A               	movlw	low __uart_obj
 13797  004F20  6E06               	movwf	i2EUSART_Async_Read_Data@_eusart_obj^0,c
 13798  004F22  0E01               	movlw	high __uart_obj
 13799  004F24  6E07               	movwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,c
 13800  004F26  0E32               	movlw	low _datarecive
 13801  004F28  6E08               	movwf	i2EUSART_Async_Read_Data@data^0,c
 13802  004F2A  0E00               	movlw	high _datarecive
 13803  004F2C  6E09               	movwf	(i2EUSART_Async_Read_Data@data+1)^0,c
 13804  004F2E  ECC4  F012         	call	i2_EUSART_Async_Read_Data	;wreg free
 13805                           
 13806                           ;application.c: 418:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
 13807  004F32  0E0A               	movlw	low __uart_obj
 13808  004F34  6E0C               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
 13809  004F36  0E01               	movlw	high __uart_obj
 13810  004F38  6E0D               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
 13811  004F3A  C03A  F00E         	movff	_datasend,Bluetooth_Send_Data_Non_Blocking@data	;volatile
 13812  004F3E  EC16  F028         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
 13813  004F42                     
 13814                           ;application.c: 419:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
 13815  004F42  0E41               	movlw	low _TEST_PIN
 13816  004F44  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
 13817  004F46  0E00               	movlw	high _TEST_PIN
 13818  004F48  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
 13819  004F4A  EC1A  F024         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
 13820  004F4E  0012               	return		;funcret
 13821  004F50                     __end_of_usart_isr:
 13822                           	callstack 0
 13823                           
 13824 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
 13825 ;; Defined at:
 13826 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 13829 ;;		 -> TEST_PIN(1), 
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;  ERRORSTATUS     1    0        unsigned char 
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  1    wreg      unsigned char 
 13834 ;; Registers used:
 13835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13843 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13844 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13845 ;;Total ram usage:        7 bytes
 13846 ;; Hardware stack levels used: 1
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_usart_isr
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           	psect	text78
 13855  004834                     __ptext78:
 13856                           	callstack 0
 13857  004834                     i2_GPIO_Pin_Toggle_Logic:
 13858                           	callstack 19
 13859  004834                     
 13860                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 13861  004834  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 13862  004836  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 13863  004838  A4D8               	btfss	status,2,c
 13864  00483A  EF21  F024         	goto	i2u769_41
 13865  00483E  EF23  F024         	goto	i2u769_40
 13866  004842                     i2u769_41:
 13867  004842  EF25  F024         	goto	i2l7922
 13868  004846                     i2u769_40:
 13869  004846                     
 13870                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 13871  004846  EF51  F024         	goto	i2l921
 13872  00484A                     i2l7922:
 13873                           
 13874                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 13875  00484A  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 13876  00484E  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 13877  004852  50DF               	movf	223,w,c
 13878  004854  0B07               	andlw	7
 13879  004856  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
 13880  004858  0E01               	movlw	1
 13881  00485A  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
 13882  00485C  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 13883  00485E  EF33  F024         	goto	i2u770_44
 13884  004862                     i2u770_45:
 13885  004862  90D8               	bcf	status,0,c
 13886  004864  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
 13887  004866                     i2u770_44:
 13888  004866  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 13889  004868  EF31  F024         	goto	i2u770_45
 13890  00486C  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 13891  004870  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 13892  004874  30DF               	rrcf	223,w,c
 13893  004876  32E8               	rrcf	wreg,f,c
 13894  004878  32E8               	rrcf	wreg,f,c
 13895  00487A  0B07               	andlw	7
 13896  00487C  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
 13897  00487E  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
 13898  004880  0D02               	mullw	2
 13899  004882  0EDD               	movlw	low _lat_registers
 13900  004884  24F3               	addwf	243,w,c
 13901  004886  6ED9               	movwf	fsr2l,c
 13902  004888  0E00               	movlw	high _lat_registers
 13903  00488A  20F4               	addwfc	prodh,w,c
 13904  00488C  6EDA               	movwf	fsr2h,c
 13905  00488E  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
 13906  004892  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
 13907  004896  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
 13908  00489A  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
 13909  00489E  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
 13910  0048A0  1ADF               	xorwf	indf2,f,c
 13911  0048A2                     i2l921:
 13912  0048A2  0012               	return		;funcret
 13913  0048A4                     __end_ofi2_GPIO_Pin_Toggle_Logic:
 13914                           	callstack 0
 13915                           
 13916 ;; *************** function i2_EUSART_Async_Read_Data *****************
 13917 ;; Defined at:
 13918 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 13921 ;;		 -> _uart_obj(12), 
 13922 ;;  data            2    7[COMRAM] PTR unsigned short 
 13923 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(2), 
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;  l_temp_data     2   17[COMRAM] unsigned short 
 13926 ;;  ret_val         1    0        unsigned char 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      unsigned char 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;Total ram usage:       14 bytes
 13941 ;; Hardware stack levels used: 1
 13942 ;; Hardware stack levels required when called: 1
 13943 ;; This function calls:
 13944 ;;		i2_calc_parity_even
 13945 ;;		i2_calc_parity_odd
 13946 ;; This function is called by:
 13947 ;;		_usart_isr
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text79
 13952  002588                     __ptext79:
 13953                           	callstack 0
 13954  002588                     i2_EUSART_Async_Read_Data:
 13955                           	callstack 18
 13956  002588                     
 13957                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 13958  002588  0E00               	movlw	0
 13959  00258A  6E13               	movwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13960  00258C  0E00               	movlw	0
 13961  00258E  6E12               	movwf	i2EUSART_Async_Read_Data@l_temp_data^0,c
 13962  002590                     
 13963                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 13964  002590  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13965  002592  1007               	iorwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13966  002594  B4D8               	btfsc	status,2,c
 13967  002596  EFCF  F012         	goto	i2u754_41
 13968  00259A  EFD1  F012         	goto	i2u754_40
 13969  00259E                     i2u754_41:
 13970  00259E  EFDA  F012         	goto	i2l7862
 13971  0025A2                     i2u754_40:
 13972  0025A2  5008               	movf	i2EUSART_Async_Read_Data@data^0,w,c
 13973  0025A4  1009               	iorwf	(i2EUSART_Async_Read_Data@data+1)^0,w,c
 13974  0025A6  A4D8               	btfss	status,2,c
 13975  0025A8  EFD8  F012         	goto	i2u755_41
 13976  0025AC  EFDA  F012         	goto	i2u755_40
 13977  0025B0                     i2u755_41:
 13978  0025B0  EFDC  F012         	goto	i2l693
 13979  0025B4                     i2u755_40:
 13980  0025B4                     i2l7862:
 13981                           
 13982                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 13983  0025B4  EFB8  F013         	goto	i2l7912
 13984  0025B8                     i2l693:
 13985                           
 13986                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 13987  0025B8  AA9E               	btfss	158,5,c	;volatile
 13988  0025BA  EFE1  F012         	goto	i2u756_41
 13989  0025BE  EFE3  F012         	goto	i2u756_40
 13990  0025C2                     i2u756_41:
 13991  0025C2  EFDA  F012         	goto	i2l7862
 13992  0025C6                     i2u756_40:
 13993  0025C6                     
 13994                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 13995  0025C6  EE20 F009          	lfsr	2,9
 13996  0025CA  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13997  0025CC  26D9               	addwf	fsr2l,f,c
 13998  0025CE  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13999  0025D0  22DA               	addwfc	fsr2h,f,c
 14000  0025D2  B8DF               	btfsc	indf2,4,c
 14001  0025D4  EFEE  F012         	goto	i2u757_41
 14002  0025D8  EFF0  F012         	goto	i2u757_40
 14003  0025DC                     i2u757_41:
 14004  0025DC  EFFD  F012         	goto	i2l7868
 14005  0025E0                     i2u757_40:
 14006  0025E0                     
 14007                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 14008  0025E0  50AE               	movf	174,w,c	;volatile
 14009  0025E2  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 14010  0025E4  6A0B               	clrf	(??i2_EUSART_Async_Read_Data+1)^0,c
 14011  0025E6  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 14012  0025EA  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 14013  0025EE  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 14014  0025F2  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 14015                           
 14016                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 14017  0025F6  EFB8  F013         	goto	i2l7912
 14018  0025FA                     i2l7868:
 14019  0025FA  EE20 F009          	lfsr	2,9
 14020  0025FE  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 14021  002600  26D9               	addwf	fsr2l,f,c
 14022  002602  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 14023  002604  22DA               	addwfc	fsr2h,f,c
 14024  002606  A8DF               	btfss	indf2,4,c
 14025  002608  EF08  F013         	goto	i2u758_41
 14026  00260C  EF0A  F013         	goto	i2u758_40
 14027  002610                     i2u758_41:
 14028  002610  EFB8  F013         	goto	i2l706
 14029  002614                     i2u758_40:
 14030  002614                     
 14031                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 14032  002614  EE20 F009          	lfsr	2,9
 14033  002618  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 14034  00261A  26D9               	addwf	fsr2l,f,c
 14035  00261C  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 14036  00261E  22DA               	addwfc	fsr2h,f,c
 14037  002620  30DF               	rrcf	223,w,c
 14038  002622  0B03               	andlw	3
 14039  002624  0900               	iorlw	0
 14040  002626  A4D8               	btfss	status,2,c
 14041  002628  EF18  F013         	goto	i2u759_41
 14042  00262C  EF1A  F013         	goto	i2u759_40
 14043  002630                     i2u759_41:
 14044  002630  EF3C  F013         	goto	i2l7882
 14045  002634                     i2u759_40:
 14046  002634                     
 14047                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 14048  002634  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 14049  002638  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 14050                           
 14051                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 14052  00263A  B0AB               	btfsc	4011,0,c	;volatile
 14053  00263C  EF22  F013         	goto	i2u760_41
 14054  002640  EF24  F013         	goto	i2u760_40
 14055  002644                     i2u760_41:
 14056  002644  EF2A  F013         	goto	i2l7876
 14057  002648                     i2u760_40:
 14058  002648  0E00               	movlw	0
 14059  00264A  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 14060  00264C  0E00               	movlw	0
 14061  00264E  6E0C               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 14062  002650  EF2E  F013         	goto	i2l7878
 14063  002654                     i2l7876:
 14064  002654  0E01               	movlw	1
 14065  002656  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 14066  002658  0E00               	movlw	0
 14067  00265A  6E0C               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 14068  00265C                     i2l7878:
 14069  00265C  500C               	movf	i2_EUSART_Async_Read_Data$2031^0,w,c
 14070  00265E  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 14071  002660  500D               	movf	(i2_EUSART_Async_Read_Data$2031+1)^0,w,c
 14072  002662  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 14073  002664                     
 14074                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 14075  002664  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 14076  002668  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 14077  00266C  C012  FFDE         	movff	i2EUSART_Async_Read_Data@l_temp_data,postinc2
 14078  002670  C013  FFDD         	movff	i2EUSART_Async_Read_Data@l_temp_data+1,postdec2
 14079                           
 14080                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 14081  002674  EFB8  F013         	goto	i2l7912
 14082  002678                     i2l7882:
 14083  002678  EE20 F009          	lfsr	2,9
 14084  00267C  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 14085  00267E  26D9               	addwf	fsr2l,f,c
 14086  002680  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 14087  002682  22DA               	addwfc	fsr2h,f,c
 14088  002684  30DF               	rrcf	223,w,c
 14089  002686  0B03               	andlw	3
 14090  002688  06E8               	decf	wreg,f,c
 14091  00268A  A4D8               	btfss	status,2,c
 14092  00268C  EF4A  F013         	goto	i2u761_41
 14093  002690  EF4C  F013         	goto	i2u761_40
 14094  002694                     i2u761_41:
 14095  002694  EF81  F013         	goto	i2l7896
 14096  002698                     i2u761_40:
 14097  002698                     
 14098                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 14099  002698  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 14100  00269C  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 14101                           
 14102                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 14103  00269E  B0AB               	btfsc	171,0,c	;volatile
 14104  0026A0  EF54  F013         	goto	i2u762_41
 14105  0026A4  EF56  F013         	goto	i2u762_40
 14106  0026A8                     i2u762_41:
 14107  0026A8  EF5C  F013         	goto	i2l7888
 14108  0026AC                     i2u762_40:
 14109  0026AC  0E00               	movlw	0
 14110  0026AE  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 14111  0026B0  0E00               	movlw	0
 14112  0026B2  6E0E               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 14113  0026B4  EF60  F013         	goto	i2l7890
 14114  0026B8                     i2l7888:
 14115  0026B8  0E01               	movlw	1
 14116  0026BA  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 14117  0026BC  0E00               	movlw	0
 14118  0026BE  6E0E               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 14119  0026C0                     i2l7890:
 14120  0026C0  500E               	movf	i2_EUSART_Async_Read_Data$2032^0,w,c
 14121  0026C2  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 14122  0026C4  500F               	movf	(i2_EUSART_Async_Read_Data$2032+1)^0,w,c
 14123  0026C6  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 14124  0026C8                     
 14125                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 14126  0026C8  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 14127  0026CA  EC90  F025         	call	i2_calc_parity_even
 14128  0026CE  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 14129  0026D0  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 14130  0026D2  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 14131  0026D4  A4D8               	btfss	status,2,c
 14132  0026D6  EF6F  F013         	goto	i2u763_41
 14133  0026DA  EF71  F013         	goto	i2u763_40
 14134  0026DE                     i2u763_41:
 14135  0026DE  EFB8  F013         	goto	i2l706
 14136  0026E2                     i2u763_40:
 14137  0026E2                     i2l7894:
 14138                           
 14139                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 14140  0026E2  0EFF               	movlw	255
 14141  0026E4  1412               	andwf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 14142  0026E6  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 14143  0026E8  0E00               	movlw	0
 14144  0026EA  1413               	andwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 14145  0026EC  6E0B               	movwf	(??i2_EUSART_Async_Read_Data+1)^0,c
 14146  0026EE  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 14147  0026F2  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 14148  0026F6  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 14149  0026FA  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 14150                           
 14151                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 14152  0026FE  EFB8  F013         	goto	i2l7912
 14153  002702                     i2l7896:
 14154  002702  EE20 F009          	lfsr	2,9
 14155  002706  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 14156  002708  26D9               	addwf	fsr2l,f,c
 14157  00270A  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 14158  00270C  22DA               	addwfc	fsr2h,f,c
 14159  00270E  30DF               	rrcf	223,w,c
 14160  002710  0B03               	andlw	3
 14161  002712  0A02               	xorlw	2
 14162  002714  A4D8               	btfss	status,2,c
 14163  002716  EF8F  F013         	goto	i2u764_41
 14164  00271A  EF91  F013         	goto	i2u764_40
 14165  00271E                     i2u764_41:
 14166  00271E  EFB8  F013         	goto	i2l706
 14167  002722                     i2u764_40:
 14168  002722                     
 14169                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 14170  002722  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 14171  002726  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 14172                           
 14173                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 14174  002728  B0AB               	btfsc	171,0,c	;volatile
 14175  00272A  EF99  F013         	goto	i2u765_41
 14176  00272E  EF9B  F013         	goto	i2u765_40
 14177  002732                     i2u765_41:
 14178  002732  EFA1  F013         	goto	i2l7902
 14179  002736                     i2u765_40:
 14180  002736  0E00               	movlw	0
 14181  002738  6E11               	movwf	(i2_EUSART_Async_Read_Data$2033+1)^0,c
 14182  00273A  0E00               	movlw	0
 14183  00273C  6E10               	movwf	i2_EUSART_Async_Read_Data$2033^0,c
 14184  00273E  EFA5  F013         	goto	i2l7904
 14185  002742                     i2l7902:
 14186  002742  0E01               	movlw	1
 14187  002744  6E11               	movwf	(i2_EUSART_Async_Read_Data$2033+1)^0,c
 14188  002746  0E00               	movlw	0
 14189  002748  6E10               	movwf	i2_EUSART_Async_Read_Data$2033^0,c
 14190  00274A                     i2l7904:
 14191  00274A  5010               	movf	i2_EUSART_Async_Read_Data$2033^0,w,c
 14192  00274C  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 14193  00274E  5011               	movf	(i2_EUSART_Async_Read_Data$2033+1)^0,w,c
 14194  002750  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 14195  002752                     
 14196                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 14197  002752  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 14198  002754  EC5C  F025         	call	i2_calc_parity_odd
 14199  002758  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 14200  00275A  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 14201  00275C  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 14202  00275E  A4D8               	btfss	status,2,c
 14203  002760  EFB4  F013         	goto	i2u766_41
 14204  002764  EFB6  F013         	goto	i2u766_40
 14205  002768                     i2u766_41:
 14206  002768  EFB8  F013         	goto	i2l706
 14207  00276C                     i2u766_40:
 14208  00276C  EF71  F013         	goto	i2l7894
 14209  002770                     i2l706:
 14210  002770                     i2l7912:
 14211                           
 14212                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 14213  002770  B2AB               	btfsc	171,1,c	;volatile
 14214  002772  EFBD  F013         	goto	i2u767_41
 14215  002776  EFBF  F013         	goto	i2u767_40
 14216  00277A                     i2u767_41:
 14217  00277A  EFC6  F013         	goto	i2l727
 14218  00277E                     i2u767_40:
 14219  00277E  A4AB               	btfss	171,2,c	;volatile
 14220  002780  EFC4  F013         	goto	i2u768_41
 14221  002784  EFC6  F013         	goto	i2u768_40
 14222  002788                     i2u768_41:
 14223  002788  EFC8  F013         	goto	i2l728
 14224  00278C                     i2u768_40:
 14225  00278C                     i2l727:
 14226                           
 14227                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 14228  00278C  98AB               	bcf	171,4,c	;volatile
 14229                           
 14230                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 14231  00278E  88AB               	bsf	171,4,c	;volatile
 14232  002790                     i2l728:
 14233  002790  0012               	return		;funcret
 14234  002792                     __end_ofi2_EUSART_Async_Read_Data:
 14235                           	callstack 0
 14236                           
 14237 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
 14238 ;; Defined at:
 14239 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;  _uart_obj       2   11[COMRAM] PTR const struct .
 14242 ;;		 -> _uart_obj(12), 
 14243 ;;  data            1   13[COMRAM] unsigned char 
 14244 ;; Auto vars:     Size  Location     Type
 14245 ;;  ret_val         1    0        unsigned char 
 14246 ;; Return value:  Size  Location     Type
 14247 ;;                  1    wreg      unsigned char 
 14248 ;; Registers used:
 14249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14250 ;; Tracked objects:
 14251 ;;		On entry : 0/0
 14252 ;;		On exit  : 0/0
 14253 ;;		Unchanged: 0/0
 14254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14255 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14259 ;;Total ram usage:        3 bytes
 14260 ;; Hardware stack levels used: 1
 14261 ;; Hardware stack levels required when called: 2
 14262 ;; This function calls:
 14263 ;;		_EUSART_Async_Transmit_Data
 14264 ;; This function is called by:
 14265 ;;		_usart_isr
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text80
 14270  00502C                     __ptext80:
 14271                           	callstack 0
 14272  00502C                     _Bluetooth_Send_Data_Non_Blocking:
 14273                           	callstack 17
 14274  00502C                     
 14275                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 14276  00502C  500C               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
 14277  00502E  100D               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
 14278  005030  A4D8               	btfss	status,2,c
 14279  005032  EF1D  F028         	goto	i2u705_41
 14280  005036  EF1F  F028         	goto	i2u705_40
 14281  00503A                     i2u705_41:
 14282  00503A  EF21  F028         	goto	i2l7570
 14283  00503E                     i2u705_40:
 14284  00503E                     
 14285                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 14286  00503E  EF2A  F028         	goto	i2l32
 14287  005042                     i2l7570:
 14288                           
 14289                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 14290  005042  C00C  F006         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
 14291  005046  C00D  F007         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
 14292  00504A  C00E  F008         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
 14293  00504E  6A09               	clrf	(EUSART_Async_Transmit_Data@data+1)^0,c
 14294  005050  ECE4  F01C         	call	_EUSART_Async_Transmit_Data	;wreg free
 14295  005054                     i2l32:
 14296  005054  0012               	return		;funcret
 14297  005056                     __end_of_Bluetooth_Send_Data_Non_Blocking:
 14298                           	callstack 0
 14299                           
 14300 ;; *************** function _EUSART_Async_Transmit_Data *****************
 14301 ;; Defined at:
 14302 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 14305 ;;		 -> _uart_obj(12), 
 14306 ;;  data            2    7[COMRAM] unsigned short 
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;  ret_val         1    0        unsigned char 
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  1    wreg      unsigned char 
 14311 ;; Registers used:
 14312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14313 ;; Tracked objects:
 14314 ;;		On entry : 0/0
 14315 ;;		On exit  : 0/0
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14321 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14322 ;;Total ram usage:        6 bytes
 14323 ;; Hardware stack levels used: 1
 14324 ;; Hardware stack levels required when called: 1
 14325 ;; This function calls:
 14326 ;;		i2_calc_parity_even
 14327 ;;		i2_calc_parity_odd
 14328 ;; This function is called by:
 14329 ;;		_Bluetooth_Send_Data_Non_Blocking
 14330 ;;		_EUSART_Async_Transmit_Data_Blocking
 14331 ;; This function uses a non-reentrant model
 14332 ;;
 14333                           
 14334                           	psect	text81
 14335  0039C8                     __ptext81:
 14336                           	callstack 0
 14337  0039C8                     _EUSART_Async_Transmit_Data:
 14338                           	callstack 17
 14339  0039C8                     
 14340                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 14341  0039C8  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14342  0039CA  1007               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14343  0039CC  A4D8               	btfss	status,2,c
 14344  0039CE  EFEB  F01C         	goto	i2u648_41
 14345  0039D2  EFED  F01C         	goto	i2u648_40
 14346  0039D6                     i2u648_41:
 14347  0039D6  EFEF  F01C         	goto	i2l7148
 14348  0039DA                     i2u648_40:
 14349  0039DA                     
 14350                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 14351  0039DA  EF55  F01D         	goto	i2l690
 14352  0039DE                     i2l7148:
 14353                           
 14354                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 14355  0039DE  EE20 F002          	lfsr	2,2
 14356  0039E2  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14357  0039E4  26D9               	addwf	fsr2l,f,c
 14358  0039E6  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14359  0039E8  22DA               	addwfc	fsr2h,f,c
 14360  0039EA  A6DF               	btfss	indf2,3,c
 14361  0039EC  EFFA  F01C         	goto	i2u649_41
 14362  0039F0  EFFC  F01C         	goto	i2u649_40
 14363  0039F4                     i2u649_41:
 14364  0039F4  EF53  F01D         	goto	i2l7162
 14365  0039F8                     i2u649_40:
 14366  0039F8                     
 14367                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 14368  0039F8  EE20 F002          	lfsr	2,2
 14369  0039FC  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14370  0039FE  26D9               	addwf	fsr2l,f,c
 14371  003A00  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14372  003A02  22DA               	addwfc	fsr2h,f,c
 14373  003A04  50DF               	movf	223,w,c
 14374  003A06  0B03               	andlw	3
 14375  003A08  0900               	iorlw	0
 14376  003A0A  A4D8               	btfss	status,2,c
 14377  003A0C  EF0A  F01D         	goto	i2u650_41
 14378  003A10  EF0C  F01D         	goto	i2u650_40
 14379  003A14                     i2u650_41:
 14380  003A14  EF1B  F01D         	goto	i2l7154
 14381  003A18                     i2u650_40:
 14382  003A18                     
 14383                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 14384  003A18  C008  F00A         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
 14385  003A1C  C009  F00B         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
 14386  003A20  C00B  F00A         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
 14387  003A24  6A0B               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
 14388  003A26  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14389  003A28  A0D8               	btfss	status,0,c
 14390  003A2A  D002               	bra	i2u651_45
 14391  003A2C  80AC               	bsf	172,0,c	;volatile
 14392  003A2E  D001               	bra	i2u651_47
 14393  003A30                     i2u651_45:
 14394  003A30  90AC               	bcf	172,0,c	;volatile
 14395  003A32                     i2u651_47:
 14396                           
 14397                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 14398  003A32  EF53  F01D         	goto	i2l7162
 14399  003A36                     i2l7154:
 14400  003A36  EE20 F002          	lfsr	2,2
 14401  003A3A  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14402  003A3C  26D9               	addwf	fsr2l,f,c
 14403  003A3E  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14404  003A40  22DA               	addwfc	fsr2h,f,c
 14405  003A42  50DF               	movf	223,w,c
 14406  003A44  0B03               	andlw	3
 14407  003A46  06E8               	decf	wreg,f,c
 14408  003A48  A4D8               	btfss	status,2,c
 14409  003A4A  EF29  F01D         	goto	i2u652_41
 14410  003A4E  EF2B  F01D         	goto	i2u652_40
 14411  003A52                     i2u652_41:
 14412  003A52  EF37  F01D         	goto	i2l7158
 14413  003A56                     i2u652_40:
 14414  003A56                     
 14415                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 14416  003A56  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 14417  003A58  EC90  F025         	call	i2_calc_parity_even
 14418  003A5C  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 14419  003A5E  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14420  003A60  A0D8               	btfss	status,0,c
 14421  003A62  D002               	bra	i2u653_45
 14422  003A64  80AC               	bsf	172,0,c	;volatile
 14423  003A66  D001               	bra	i2u653_47
 14424  003A68                     i2u653_45:
 14425  003A68  90AC               	bcf	172,0,c	;volatile
 14426  003A6A                     i2u653_47:
 14427                           
 14428                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 14429  003A6A  EF53  F01D         	goto	i2l7162
 14430  003A6E                     i2l7158:
 14431  003A6E  EE20 F002          	lfsr	2,2
 14432  003A72  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14433  003A74  26D9               	addwf	fsr2l,f,c
 14434  003A76  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14435  003A78  22DA               	addwfc	fsr2h,f,c
 14436  003A7A  50DF               	movf	223,w,c
 14437  003A7C  0B03               	andlw	3
 14438  003A7E  0A02               	xorlw	2
 14439  003A80  A4D8               	btfss	status,2,c
 14440  003A82  EF45  F01D         	goto	i2u654_41
 14441  003A86  EF47  F01D         	goto	i2u654_40
 14442  003A8A                     i2u654_41:
 14443  003A8A  EF53  F01D         	goto	i2l686
 14444  003A8E                     i2u654_40:
 14445  003A8E                     
 14446                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 14447  003A8E  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 14448  003A90  EC5C  F025         	call	i2_calc_parity_odd
 14449  003A94  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 14450  003A96  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14451  003A98  A0D8               	btfss	status,0,c
 14452  003A9A  D002               	bra	i2u655_45
 14453  003A9C  80AC               	bsf	172,0,c	;volatile
 14454  003A9E  D001               	bra	i2u655_47
 14455  003AA0                     i2u655_45:
 14456  003AA0  90AC               	bcf	172,0,c	;volatile
 14457  003AA2                     i2u655_47:
 14458  003AA2  EF53  F01D         	goto	i2l7162
 14459  003AA6                     i2l686:
 14460  003AA6                     i2l7162:
 14461                           
 14462                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 14463  003AA6  C008  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
 14464  003AAA                     i2l690:
 14465  003AAA  0012               	return		;funcret
 14466  003AAC                     __end_of_EUSART_Async_Transmit_Data:
 14467                           	callstack 0
 14468                           
 14469 ;; *************** function i2_calc_parity_odd *****************
 14470 ;; Defined at:
 14471 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;  data            1    wreg     unsigned char 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  data            1    2[COMRAM] unsigned char 
 14476 ;;  l_counter       1    4[COMRAM] unsigned char 
 14477 ;;  number_of_on    1    3[COMRAM] unsigned char 
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  1    wreg      unsigned char 
 14480 ;; Registers used:
 14481 ;;		wreg, status,2, status,0
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;Total ram usage:        5 bytes
 14492 ;; Hardware stack levels used: 1
 14493 ;; This function calls:
 14494 ;;		Nothing
 14495 ;; This function is called by:
 14496 ;;		_EUSART_Async_Transmit_Data
 14497 ;;		i2_EUSART_Async_Read_Data
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501                           	psect	text82
 14502  004AB8                     __ptext82:
 14503                           	callstack 0
 14504  004AB8                     i2_calc_parity_odd:
 14505                           	callstack 18
 14506                           
 14507                           ;incstack = 0
 14508                           ;i2calc_parity_odd@data stored from wreg
 14509  004AB8  6E03               	movwf	i2calc_parity_odd@data^0,c
 14510  004ABA                     
 14511                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 14512  004ABA  0E00               	movlw	0
 14513  004ABC  6E04               	movwf	i2calc_parity_odd@number_of_ones^0,c
 14514                           
 14515                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 14516  004ABE  0E00               	movlw	0
 14517  004AC0  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 14518                           
 14519                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 14520  004AC2  0E00               	movlw	0
 14521  004AC4  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 14522  004AC6                     i2l7100:
 14523                           
 14524                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 14525  004AC6  C005  F001         	movff	i2calc_parity_odd@l_counter,??i2_calc_parity_odd
 14526  004ACA  0E01               	movlw	1
 14527  004ACC  6E02               	movwf	(??i2_calc_parity_odd+1)^0,c
 14528  004ACE  2A01               	incf	??i2_calc_parity_odd^0,f,c
 14529  004AD0  EF6C  F025         	goto	i2u640_44
 14530  004AD4                     i2u640_45:
 14531  004AD4  90D8               	bcf	status,0,c
 14532  004AD6  3602               	rlcf	(??i2_calc_parity_odd+1)^0,f,c
 14533  004AD8                     i2u640_44:
 14534  004AD8  2E01               	decfsz	??i2_calc_parity_odd^0,f,c
 14535  004ADA  EF6A  F025         	goto	i2u640_45
 14536  004ADE  5002               	movf	(??i2_calc_parity_odd+1)^0,w,c
 14537  004AE0  1403               	andwf	i2calc_parity_odd@data^0,w,c
 14538  004AE2  0900               	iorlw	0
 14539  004AE4  B4D8               	btfsc	status,2,c
 14540  004AE6  EF77  F025         	goto	i2u641_41
 14541  004AEA  EF79  F025         	goto	i2u641_40
 14542  004AEE                     i2u641_41:
 14543  004AEE  EF7A  F025         	goto	i2l826
 14544  004AF2                     i2u641_40:
 14545  004AF2                     
 14546                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 14547  004AF2  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 14548  004AF4                     i2l826:
 14549                           
 14550                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 14551  004AF4  2A05               	incf	i2calc_parity_odd@l_counter^0,f,c
 14552  004AF6  0E07               	movlw	7
 14553  004AF8  6405               	cpfsgt	i2calc_parity_odd@l_counter^0,c
 14554  004AFA  EF81  F025         	goto	i2u642_41
 14555  004AFE  EF83  F025         	goto	i2u642_40
 14556  004B02                     i2u642_41:
 14557  004B02  EF63  F025         	goto	i2l7100
 14558  004B06                     i2u642_40:
 14559  004B06                     
 14560                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 14561  004B06  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 14562  004B08                     
 14563                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 14564  004B08  B004               	btfsc	i2calc_parity_odd@number_of_ones^0,0,c
 14565  004B0A  EF89  F025         	goto	i2u643_41
 14566  004B0E  EF8B  F025         	goto	i2u643_40
 14567  004B12                     i2u643_41:
 14568  004B12  EF8E  F025         	goto	i2l7114
 14569  004B16                     i2u643_40:
 14570  004B16                     
 14571                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 14572  004B16  0E01               	movlw	1
 14573  004B18  EF8F  F025         	goto	i2l828
 14574  004B1C                     i2l7114:
 14575                           
 14576                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 14577  004B1C  0E00               	movlw	0
 14578  004B1E                     i2l828:
 14579  004B1E  0012               	return		;funcret
 14580  004B20                     __end_ofi2_calc_parity_odd:
 14581                           	callstack 0
 14582                           
 14583 ;; *************** function i2_calc_parity_even *****************
 14584 ;; Defined at:
 14585 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  data            1    wreg     unsigned char 
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;  data            1    2[COMRAM] unsigned char 
 14590 ;;  l_counter       1    4[COMRAM] unsigned char 
 14591 ;;  number_of_on    1    3[COMRAM] unsigned char 
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      unsigned char 
 14594 ;; Registers used:
 14595 ;;		wreg, status,2, status,0
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14604 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14605 ;;Total ram usage:        5 bytes
 14606 ;; Hardware stack levels used: 1
 14607 ;; This function calls:
 14608 ;;		Nothing
 14609 ;; This function is called by:
 14610 ;;		_EUSART_Async_Transmit_Data
 14611 ;;		i2_EUSART_Async_Read_Data
 14612 ;; This function uses a non-reentrant model
 14613 ;;
 14614                           
 14615                           	psect	text83
 14616  004B20                     __ptext83:
 14617                           	callstack 0
 14618  004B20                     i2_calc_parity_even:
 14619                           	callstack 18
 14620                           
 14621                           ;incstack = 0
 14622                           ;i2calc_parity_even@data stored from wreg
 14623  004B20  6E03               	movwf	i2calc_parity_even@data^0,c
 14624  004B22                     
 14625                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 14626  004B22  0E00               	movlw	0
 14627  004B24  6E04               	movwf	i2calc_parity_even@number_of_ones^0,c
 14628                           
 14629                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 14630  004B26  0E00               	movlw	0
 14631  004B28  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 14632                           
 14633                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 14634  004B2A  0E00               	movlw	0
 14635  004B2C  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 14636  004B2E                     i2l7124:
 14637                           
 14638                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 14639  004B2E  C005  F001         	movff	i2calc_parity_even@l_counter,??i2_calc_parity_even
 14640  004B32  0E01               	movlw	1
 14641  004B34  6E02               	movwf	(??i2_calc_parity_even+1)^0,c
 14642  004B36  2A01               	incf	??i2_calc_parity_even^0,f,c
 14643  004B38  EFA0  F025         	goto	i2u644_44
 14644  004B3C                     i2u644_45:
 14645  004B3C  90D8               	bcf	status,0,c
 14646  004B3E  3602               	rlcf	(??i2_calc_parity_even+1)^0,f,c
 14647  004B40                     i2u644_44:
 14648  004B40  2E01               	decfsz	??i2_calc_parity_even^0,f,c
 14649  004B42  EF9E  F025         	goto	i2u644_45
 14650  004B46  5002               	movf	(??i2_calc_parity_even+1)^0,w,c
 14651  004B48  1403               	andwf	i2calc_parity_even@data^0,w,c
 14652  004B4A  0900               	iorlw	0
 14653  004B4C  B4D8               	btfsc	status,2,c
 14654  004B4E  EFAB  F025         	goto	i2u645_41
 14655  004B52  EFAD  F025         	goto	i2u645_40
 14656  004B56                     i2u645_41:
 14657  004B56  EFAE  F025         	goto	i2l833
 14658  004B5A                     i2u645_40:
 14659  004B5A                     
 14660                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 14661  004B5A  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 14662  004B5C                     i2l833:
 14663                           
 14664                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 14665  004B5C  2A05               	incf	i2calc_parity_even@l_counter^0,f,c
 14666  004B5E  0E07               	movlw	7
 14667  004B60  6405               	cpfsgt	i2calc_parity_even@l_counter^0,c
 14668  004B62  EFB5  F025         	goto	i2u646_41
 14669  004B66  EFB7  F025         	goto	i2u646_40
 14670  004B6A                     i2u646_41:
 14671  004B6A  EF97  F025         	goto	i2l7124
 14672  004B6E                     i2u646_40:
 14673  004B6E                     
 14674                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 14675  004B6E  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 14676  004B70                     
 14677                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 14678  004B70  A004               	btfss	i2calc_parity_even@number_of_ones^0,0,c
 14679  004B72  EFBD  F025         	goto	i2u647_41
 14680  004B76  EFBF  F025         	goto	i2u647_40
 14681  004B7A                     i2u647_41:
 14682  004B7A  EFC2  F025         	goto	i2l7138
 14683  004B7E                     i2u647_40:
 14684  004B7E                     
 14685                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 14686  004B7E  0E01               	movlw	1
 14687  004B80  EFC3  F025         	goto	i2l835
 14688  004B84                     i2l7138:
 14689                           
 14690                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 14691  004B84  0E00               	movlw	0
 14692  004B86                     i2l835:
 14693  004B86  0012               	return		;funcret
 14694  004B88                     __end_ofi2_calc_parity_even:
 14695                           	callstack 0
 14696                           
 14697                           	psect	text84
 14698  000000                     __ptext84:
 14699                           	callstack 0
 14700  000000                     
 14701                           	psect	rparam
 14702  0000                     
 14703                           	psect	temp
 14704  000042                     btemp:
 14705                           	callstack 0
 14706  000042                     	ds	1
 14707  0000                     int$flags	set	btemp
 14708  0000                     wtemp8	set	btemp+1
 14709  0000                     ttemp5	set	btemp+1
 14710  0000                     ttemp6	set	btemp+4
 14711  0000                     ttemp7	set	btemp+8
 14712                           
 14713                           	psect	idloc
 14714                           
 14715                           ;Config register IDLOC0 @ 0x200000
 14716                           ;	unspecified, using default values
 14717  200000                     	org	2097152
 14718  200000  FF                 	db	255
 14719                           
 14720                           ;Config register IDLOC1 @ 0x200001
 14721                           ;	unspecified, using default values
 14722  200001                     	org	2097153
 14723  200001  FF                 	db	255
 14724                           
 14725                           ;Config register IDLOC2 @ 0x200002
 14726                           ;	unspecified, using default values
 14727  200002                     	org	2097154
 14728  200002  FF                 	db	255
 14729                           
 14730                           ;Config register IDLOC3 @ 0x200003
 14731                           ;	unspecified, using default values
 14732  200003                     	org	2097155
 14733  200003  FF                 	db	255
 14734                           
 14735                           ;Config register IDLOC4 @ 0x200004
 14736                           ;	unspecified, using default values
 14737  200004                     	org	2097156
 14738  200004  FF                 	db	255
 14739                           
 14740                           ;Config register IDLOC5 @ 0x200005
 14741                           ;	unspecified, using default values
 14742  200005                     	org	2097157
 14743  200005  FF                 	db	255
 14744                           
 14745                           ;Config register IDLOC6 @ 0x200006
 14746                           ;	unspecified, using default values
 14747  200006                     	org	2097158
 14748  200006  FF                 	db	255
 14749                           
 14750                           ;Config register IDLOC7 @ 0x200007
 14751                           ;	unspecified, using default values
 14752  200007                     	org	2097159
 14753  200007  FF                 	db	255
 14754                           
 14755                           	psect	config
 14756                           
 14757                           ; Padding undefined space
 14758  300000                     	org	3145728
 14759  300000  FF                 	db	255
 14760                           
 14761                           ;Config register CONFIG1H @ 0x300001
 14762                           ;	Oscillator Selection bits
 14763                           ;	FOSC = HS, HS oscillator
 14764                           ;	Fail-Safe Clock Monitor Enable bit
 14765                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14766                           ;	Internal/External Oscillator Switchover bit
 14767                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14768  300001                     	org	3145729
 14769  300001  02                 	db	2
 14770                           
 14771                           ;Config register CONFIG2L @ 0x300002
 14772                           ;	Power-up Timer Enable bit
 14773                           ;	PWRT = OFF, PWRT disabled
 14774                           ;	Brown-out Reset Enable bits
 14775                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 14776                           ;	Brown Out Reset Voltage bits
 14777                           ;	BORV = 18, VBOR set to 1.8 V nominal
 14778  300002                     	org	3145730
 14779  300002  19                 	db	25
 14780                           
 14781                           ;Config register CONFIG2H @ 0x300003
 14782                           ;	Watchdog Timer Enable bit
 14783                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 14784                           ;	Watchdog Timer Postscale Select bits
 14785                           ;	WDTPS = 32768, 1:32768
 14786  300003                     	org	3145731
 14787  300003  1E                 	db	30
 14788                           
 14789                           ; Padding undefined space
 14790  300004                     	org	3145732
 14791  300004  FF                 	db	255
 14792                           
 14793                           ;Config register CONFIG3H @ 0x300005
 14794                           ;	CCP2 MUX bit
 14795                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14796                           ;	PORTB A/D Enable bit
 14797                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14798                           ;	Low-Power Timer1 Oscillator Enable bit
 14799                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14800                           ;	HFINTOSC Fast Start-up
 14801                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
 14802                           ;	MCLR Pin Enable bit
 14803                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14804  300005                     	org	3145733
 14805  300005  81                 	db	129
 14806                           
 14807                           ;Config register CONFIG4L @ 0x300006
 14808                           ;	Stack Full/Underflow Reset Enable bit
 14809                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14810                           ;	Single-Supply ICSP Enable bit
 14811                           ;	LVP = OFF, Single-Supply ICSP disabled
 14812                           ;	Extended Instruction Set Enable bit
 14813                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14814                           ;	Background Debugger Enable bit
 14815                           ;	DEBUG = 0x1, unprogrammed default
 14816  300006                     	org	3145734
 14817  300006  81                 	db	129
 14818                           
 14819                           ; Padding undefined space
 14820  300007                     	org	3145735
 14821  300007  FF                 	db	255
 14822                           
 14823                           ;Config register CONFIG5L @ 0x300008
 14824                           ;	Code Protection Block 0
 14825                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14826                           ;	Code Protection Block 1
 14827                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14828                           ;	Code Protection Block 2
 14829                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14830                           ;	Code Protection Block 3
 14831                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14832  300008                     	org	3145736
 14833  300008  0F                 	db	15
 14834                           
 14835                           ;Config register CONFIG5H @ 0x300009
 14836                           ;	Boot Block Code Protection bit
 14837                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14838                           ;	Data EEPROM Code Protection bit
 14839                           ;	CPD = OFF, Data EEPROM not code-protected
 14840  300009                     	org	3145737
 14841  300009  C0                 	db	192
 14842                           
 14843                           ;Config register CONFIG6L @ 0x30000A
 14844                           ;	Write Protection Block 0
 14845                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14846                           ;	Write Protection Block 1
 14847                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14848                           ;	Write Protection Block 2
 14849                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14850                           ;	Write Protection Block 3
 14851                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 14852  30000A                     	org	3145738
 14853  30000A  0F                 	db	15
 14854                           
 14855                           ;Config register CONFIG6H @ 0x30000B
 14856                           ;	Configuration Register Write Protection bit
 14857                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14858                           ;	Boot Block Write Protection bit
 14859                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14860                           ;	Data EEPROM Write Protection bit
 14861                           ;	WRTD = OFF, Data EEPROM not write-protected
 14862  30000B                     	org	3145739
 14863  30000B  E0                 	db	224
 14864                           
 14865                           ;Config register CONFIG7L @ 0x30000C
 14866                           ;	Table Read Protection Block 0
 14867                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14868                           ;	Table Read Protection Block 1
 14869                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14870                           ;	Table Read Protection Block 2
 14871                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14872                           ;	Table Read Protection Block 3
 14873                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14874  30000C                     	org	3145740
 14875  30000C  0F                 	db	15
 14876                           
 14877                           ;Config register CONFIG7H @ 0x30000D
 14878                           ;	Boot Block Table Read Protection bit
 14879                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14880  30000D                     	org	3145741
 14881  30000D  40                 	db	64
 14882                           tosu	equ	0xFFF
 14883                           tosh	equ	0xFFE
 14884                           tosl	equ	0xFFD
 14885                           stkptr	equ	0xFFC
 14886                           pclatu	equ	0xFFB
 14887                           pclath	equ	0xFFA
 14888                           pcl	equ	0xFF9
 14889                           tblptru	equ	0xFF8
 14890                           tblptrh	equ	0xFF7
 14891                           tblptrl	equ	0xFF6
 14892                           tablat	equ	0xFF5
 14893                           prodh	equ	0xFF4
 14894                           prodl	equ	0xFF3
 14895                           indf0	equ	0xFEF
 14896                           postinc0	equ	0xFEE
 14897                           postdec0	equ	0xFED
 14898                           preinc0	equ	0xFEC
 14899                           plusw0	equ	0xFEB
 14900                           fsr0h	equ	0xFEA
 14901                           fsr0l	equ	0xFE9
 14902                           wreg	equ	0xFE8
 14903                           indf1	equ	0xFE7
 14904                           postinc1	equ	0xFE6
 14905                           postdec1	equ	0xFE5
 14906                           preinc1	equ	0xFE4
 14907                           plusw1	equ	0xFE3
 14908                           fsr1h	equ	0xFE2
 14909                           fsr1l	equ	0xFE1
 14910                           bsr	equ	0xFE0
 14911                           indf2	equ	0xFDF
 14912                           postinc2	equ	0xFDE
 14913                           postdec2	equ	0xFDD
 14914                           preinc2	equ	0xFDC
 14915                           plusw2	equ	0xFDB
 14916                           fsr2h	equ	0xFDA
 14917                           fsr2l	equ	0xFD9
 14918                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        89
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      65
    BANK0           160     74     160
    BANK1           256     26     107
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    _uart_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> usart_isr(), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    CCP_Interrupt_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S5260$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5260$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    send_trig_pulse@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Get_Distance@distance	PTR float  size(2) Largest target is 4
		 -> distance(BANK0[4]), 

    Ultra_Sonic_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Ultra_Sonic_Init@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    DHT11_Read_Data@data	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), T_Integral(COMRAM[1]), T_Decimal(COMRAM[1]), RH_Integral(COMRAM[1]), 
		 -> RH_Decimal(COMRAM[1]), 

    Get_Temp_HUM@Checksum	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), 

    Get_Temp_HUM@T_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> T_Integral(COMRAM[1]), 

    Get_Temp_HUM@T_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> T_Decimal(COMRAM[1]), 

    Get_Temp_HUM@RH_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Integral(COMRAM[1]), 

    Get_Temp_HUM@RH_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Decimal(COMRAM[1]), 

    Timer2_Init@_timer2	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    Timer1_Preload_Value@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_RW_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Prescaler_Config@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3609$Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    HAL_Timer0_Write_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Read_Val@result	PTR unsigned short  size(2) Largest target is 2
		 -> Get_Distance@timer_val(BANK0[2]), 

    HAL_Timer0_Read_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3104$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3104$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3057$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Slave_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Write_Blocking@_ack	PTR unsigned char  size(2) Largest target is 1
		 -> PCA_Write_Reg@ack(COMRAM[1]), 

    MSSP_I2C_Master_Write_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Stop@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Start@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> TEST_PIN(COMRAM[1]), 

    GPIO_Pin_Read_Logic@logic	PTR enum E3185 size(2) Largest target is 1
		 -> Get_Distance@logic(BANK0[1]), 

    GPIO_Pin_Read_Logic@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllh[1]), PORTD(BITBIGSFRllllh[1]), PORTC(BITBIGSFRllllh[1]), PORTB(BITBIGSFRllllh[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_config_baud_rate_gen@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    Rx_config_interrupt@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_Rx_config@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Tx_config@_tx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Read_Data_Blocking@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), 

    EUSART_Async_Read_Data_Blocking@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(COMRAM[2]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Init@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    CCP_Compare_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Capture_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Mode_Timer_Select@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Start@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    stepper_move_one_deg_ccw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    stepper_move_one_deg_cw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    Ecu_Stepper_Step@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    Ecu_Stepper_Init@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    PCA_Write_Reg@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    Servo_SetAngle@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    Servo_SetAngle@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    ServoDriver_Init@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    ServoDriver_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 0

    ECU_DC_Motor_Run_Right@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Run_Left@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Init@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _main->_GPS_Service
    _stepper_move_one_deg_cw->_Ecu_Stepper_Step
    _stepper_move_one_deg_ccw->_Ecu_Stepper_Step
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _Ultra_Sonic_Init->_HAL_Timer0_Init
    _HAL_Timer0_Init->_HAL_Timer0_Write_Val
    _I2C_Master_Mode_Clock_Configurations->___xxtofl
    _CCP_Init->_CCP_Capture_Mode_Config
    _CCP_Init->_CCP_Compare_Mode_Config
    _CCP_PWM_Mode_Config->_Timer2_Init
    _CCP_Compare_Mode_Config->_CCP_Mode_Timer_Select
    _CCP_Capture_Mode_Config->_CCP_Mode_Timer_Select
    _Ecu_Stepper_Init->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _async_config_baud_rate_gen->___xxtofl
    _async_Rx_config->_Rx_config_interrupt
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Servo_SetAngle->___xxtofl
    ___fladd->___xxtofl
    _PCA_Write_Reg->_MSSP_I2C_Master_Write_Blocking
    _CCP_PWM_Set_Duty->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Temp_HUM->_DHT11_Read_Data
    _Get_Distance->_HAL_Timer0_Read_Val
    _Get_Distance->___xxtofl
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _usart_isr->i2_EUSART_Async_Read_Data
    i2_EUSART_Async_Read_Data->i2_calc_parity_even
    i2_EUSART_Async_Read_Data->i2_calc_parity_odd
    _Bluetooth_Send_Data_Non_Blocking->_EUSART_Async_Transmit_Data
    _EUSART_Async_Transmit_Data->i2_calc_parity_even
    _EUSART_Async_Transmit_Data->i2_calc_parity_odd

Critical Paths under _main in BANK0

    _stepper_move_one_deg_cw->_GPIO_Pin_Write_Logic
    _stepper_move_one_deg_ccw->_GPIO_Pin_Write_Logic
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _Ultra_Sonic_Init->_GPIO_Pin_Initialize
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _ECU_DC_Motor_Init->_GPIO_Pin_Initialize
    _CCP_Init->_GPIO_Pin_Initialize
    _Ecu_Stepper_Init->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _async_config_baud_rate_gen->___fltol
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Servo_SetAngle->___fltol
    ___fladd->___flmul
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Distance->___fldiv
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _GPS_Service->_EUSART_Async_Read_Data_Blocking
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _application_intialize->_EUSART_Async_Init
    _Robot_Nav_Init->_CCP_PWM_Set_Duty
    _ServoDriver_Init->_MSSP_I2C_Init
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fltol
    _Robot_Steer_Right_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Backward->_CCP_PWM_Set_Duty
    _Robot_Move_Forward->_CCP_PWM_Set_Duty
    _Robot_Move_Backward->_CCP_PWM_Set_Duty
    _Servo_SetAngle->___fltol
    _Robot_Steer_Stop->_CCP_PWM_Set_Duty
    _CCP_PWM_Set_Duty->___fltol

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  527302
                                             24 BANK1      2     2      0
              _GPIO_Pin_Toggle_Logic
                        _GPS_Service
                       _Get_Distance
                       _Get_Temp_HUM
                _Robot_Move_Backward
                 _Robot_Move_Forward
          _Robot_Steer_Left_Backward
           _Robot_Steer_Left_Forward
         _Robot_Steer_Right_Backward
          _Robot_Steer_Right_Forward
                   _Robot_Steer_Stop
                     _Servo_SetAngle
              _application_intialize
           _stepper_move_one_deg_ccw
            _stepper_move_one_deg_cw
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_cw                              4     2      2   11478
                                              6 BANK0      4     2      2
                   _Ecu_Stepper_Step
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_ccw                             4     2      2   11478
                                              6 BANK0      4     2      2
                   _Ecu_Stepper_Step
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Step                                     4     2      2    5750
                                             33 COMRAM     4     2      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0  111210
                  _EUSART_Async_Init
                   _Ecu_Stepper_Init
                _GPIO_Pin_Initialize
                     _Robot_Nav_Init
                     _Servo_SetAngle
                   _Ultra_Sonic_Init
 ---------------------------------------------------------------------------------
 (2) _Ultra_Sonic_Init                                     5     1      4    8896
                                              9 BANK0      4     0      4
                _GPIO_Pin_Initialize
                    _HAL_Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _HAL_Timer0_Init                                      4     2      2     937
                                             34 COMRAM     3     1      2
               _HAL_Timer0_Write_Val
 ---------------------------------------------------------------------------------
 (2) _Robot_Nav_Init                                       1     1      0   42732
                           _CCP_Init
                   _CCP_PWM_Set_Duty
                      _CCP_PWM_Start
                  _ECU_DC_Motor_Init
                   _ServoDriver_Init
 ---------------------------------------------------------------------------------
 (3) _ServoDriver_Init                                     5     1      4   13923
                                             13 BANK1      4     0      4
                      _MSSP_I2C_Init
                      _PCA_Write_Reg
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Init                                        3     1      2    9944
                                             11 BANK1      2     0      2
_I2C_Master_Mode_Clock_Configuration
             _I2C_Pin_Configurations
_I2C_Slave_Mode_Clock_Configurations
 ---------------------------------------------------------------------------------
 (5) _I2C_Slave_Mode_Clock_Configurations                  4     2      2     122
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Pin_Configurations                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Mode_Clock_Configurations                 4     2      2    9347
                                              8 BANK1      3     1      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _ECU_DC_Motor_Init                                    3     1      2    7866
                                              9 BANK0      2     0      2
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Start                                        4     2      2     227
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Init                                             4     2      2    9493
                                              9 BANK0      3     1      2
            _CCP_Capture_Mode_Config
            _CCP_Compare_Mode_Config
               _CCP_Interrupt_Config
                _CCP_PWM_Mode_Config
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (4) _CCP_PWM_Mode_Config                                  3     1      2     402
                                             32 COMRAM     3     1      2
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (5) _Timer2_Init                                          4     2      2     194
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Interrupt_Config                                 2     0      2      76
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Compare_Mode_Config                              5     3      2     429
                                             32 COMRAM     5     3      2
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (4) _CCP_Capture_Mode_Config                              5     3      2     429
                                             32 COMRAM     5     3      2
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (5) _CCP_Mode_Timer_Select                                3     1      2     218
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Init                                     2     0      2   14012
                                              9 BANK0      2     0      2
      _GPIO_Pin_Direction_Initialize
                _GPIO_Pin_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    7611
                                              6 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     617
                                             29 COMRAM     8     6      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Init                                    3     1      2   11014
                                             21 BANK1      3     1      2
                    _async_Rx_config
                    _async_Tx_config
         _async_config_baud_rate_gen
 ---------------------------------------------------------------------------------
 (3) _async_config_baud_rate_gen                          13    11      2    9687
                                              8 BANK1     13    11      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _async_Tx_config                                      3     1      2     282
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _async_Rx_config                                      3     1      2     629
                                             32 COMRAM     3     1      2
                _Rx_config_interrupt
 ---------------------------------------------------------------------------------
 (4) _Rx_config_interrupt                                  3     1      2     313
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Forward                            1     1      0   55483
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Backward                           1     1      0   55483
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Forward                             1     1      0   55483
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Backward                            1     1      0   55483
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Forward                                   1     1      0   55483
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Right                               3     1      2    6092
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Backward                                  1     1      0   55483
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _Servo_SetAngle                                      10     4      6   26945
                                              8 BANK1      9     3      6
                      _PCA_Write_Reg
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    4002
                                             56 BANK0     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PCA_Write_Reg                                        6     1      5    3414
                                             34 COMRAM     1     1      0
                                              0 BANK0      5     0      5
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Write_Blocking                       6     1      5     978
                                             29 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Send_Stop                            3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Send_Start                           3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Stop                                     1     1      0   11223
                   _CCP_PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Set_Duty                                    12     9      3   11213
                                              8 BANK1     11     8      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     757
                                             72 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2873
                                             31 BANK0     25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Left                                3     1      2    6092
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Get_Temp_HUM                                        11     1     10    1309
                                              0 BANK0     10     0     10
               _DHT11_Check_Response
                    _DHT11_Read_Data
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Data                                      4     2      2     536
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Check_Response                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Distance                                        10     4      6   12457
                                             31 BANK0      9     3      6
                _GPIO_Pin_Read_Logic
                _HAL_Timer0_Read_Val
               _HAL_Timer0_Write_Val
                            ___fldiv
                           ___xxtofl
                    _send_trig_pulse
 ---------------------------------------------------------------------------------
 (2) _send_trig_pulse                                      2     0      2    5629
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1136
                                             29 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                              6 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _HAL_Timer0_Write_Val                                 5     1      4     490
                                             29 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _HAL_Timer0_Read_Val                                 11     7      4     490
                                             29 COMRAM     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Read_Logic                                 10     6      4     739
                                             29 COMRAM     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Service                                          3     3      0    8104
                                             36 COMRAM     1     1      0
                                             16 BANK0      2     2      0
    _EUSART_Async_Read_Data_Blocking
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Write_Logic                                10     7      3    5477
                                             29 COMRAM     4     1      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Read_Data_Blocking                      5     1      4    2559
                                             12 BANK0      4     0      4
             _EUSART_Async_Read_Data
 ---------------------------------------------------------------------------------
 (3) _EUSART_Async_Read_Data                              15    11      4    1522
                                             34 COMRAM     2     2      0
                                              0 BANK0     12     8      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (4) _calc_parity_odd                                      5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _calc_parity_even                                     5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     200
                                             29 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  3     3      0     176
                                             26 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 6     6      0    1836
                                             19 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Rx_ISR                                       0     0      0    1836
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (11) _usart_isr                                           0     0      0    1836
   _Bluetooth_Send_Data_Non_Blocking
           i2_EUSART_Async_Read_Data
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Async_Read_Data                           15    11      4     768
                                              5 COMRAM    14    10      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (12) _Bluetooth_Send_Data_Non_Blocking                    4     1      3     968
                                             11 COMRAM     3     0      3
         _EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (13) _EUSART_Async_Transmit_Data                          7     3      4     742
                                              5 COMRAM     6     2      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_odd                                   5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_even                                  5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPS_Service
     _EUSART_Async_Read_Data_Blocking
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
     _GPIO_Pin_Write_Logic
   _Get_Distance
     _GPIO_Pin_Read_Logic
     _HAL_Timer0_Read_Val
     _HAL_Timer0_Write_Val
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _send_trig_pulse
       _GPIO_Pin_Write_Logic
   _Get_Temp_HUM
     _DHT11_Check_Response
     _DHT11_Read_Data
     _DHT11_Start
   _Robot_Move_Backward
     _CCP_PWM_Set_Duty
       ___fldiv
       ___flmul
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _ECU_DC_Motor_Run_Left
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
       _CCP_PWM_Set_Duty
     _Servo_SetAngle
       _PCA_Write_Reg
         _MSSP_I2C_Master_Send_Start
         _MSSP_I2C_Master_Send_Stop
         _MSSP_I2C_Master_Write_Blocking
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
   _Robot_Move_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Backward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Left
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Backward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Left
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Stop
   _Servo_SetAngle
   _application_intialize
     _EUSART_Async_Init
       _async_Rx_config
         _Rx_config_interrupt
       _async_Tx_config
       _async_config_baud_rate_gen
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
     _Ecu_Stepper_Init
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Initialize
     _Robot_Nav_Init
       _CCP_Init
         _CCP_Capture_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Compare_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Interrupt_Config
         _CCP_PWM_Mode_Config
           _Timer2_Init
         _GPIO_Pin_Initialize
       _CCP_PWM_Set_Duty
       _CCP_PWM_Start
       _ECU_DC_Motor_Init
         _GPIO_Pin_Initialize
       _ServoDriver_Init
         _MSSP_I2C_Init
           _I2C_Master_Mode_Clock_Configurations
             ___fladd
             ___fldiv
             ___fltol
             ___xxtofl
           _I2C_Pin_Configurations
           _I2C_Slave_Mode_Clock_Configurations
         _PCA_Write_Reg
     _Servo_SetAngle
     _Ultra_Sonic_Init
       _GPIO_Pin_Initialize
       _HAL_Timer0_Init
         _HAL_Timer0_Write_Val
   _stepper_move_one_deg_ccw
     _Ecu_Stepper_Step
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Write_Logic
   _stepper_move_one_deg_cw
     _Ecu_Stepper_Step
     _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       _Bluetooth_Send_Data_Non_Blocking
         _EUSART_Async_Transmit_Data
           i2_calc_parity_even
           i2_calc_parity_odd
       i2_EUSART_Async_Read_Data
         i2_calc_parity_even
         i2_calc_parity_odd
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1A      6B       7       41.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      41       1       69.1%
BITBIGSFRlllll      20      0       0      48        0.0%
BITBIGSFRhhhhll     18      0       0      38        0.0%
BITBIGSFRhhhhh       D      0       0      37        0.0%
BITBIGSFRllhhll      9      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      43        0.0%
BITBIGSFRllhhll      6      0       0      45        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRlllh        4      0       0      46        0.0%
BITBIGSFRhhhhll      3      0       0      39        0.0%
BITBIGSFRllhhll      1      0       0      42        0.0%
BITBIGSFRllhhlh      1      0       0      41        0.0%
BITBIGSFRllhhh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      12        0.0%
DATA                 0      0     14C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jun 04 02:06:59 2023

                                 _RH_Integral 0037                     ?_stepper_move_one_deg_ccw 0066  
                                ___fldiv@aexp 007E                                  ___fldiv@bexp 007D  
                                           _i 002A                                  ___fldiv@sign 0076  
                                 _SSPSTATbits 000FC7                                            l60 50A4  
                                          l55 50CA                                            l65 507C  
                                          bsr 000FE0                         ??_InterruptManagerLow 001B  
              ECU_DC_Motor_Run_Right@dc_motor 0022            __end_of_async_config_baud_rate_gen 1CEE  
                  _async_config_baud_rate_gen 1936                                           l300 3B78  
                                         l310 38E2                                           l313 4CB8  
                                         l330 4D1C                                           l325 4752  
                                         l342 4BEC                                           l513 37DC  
                                         l516 37FA                                           l349 4C52  
                                         l534 2AD0                                           l543 4D78  
                                         l706 2566                                           l803 441A  
                                         l619 2C38                                           l563 43FA  
                                         l572 47C2                                           l821 1CEC  
                                         l806 4498                                           l566 51AE  
                                         l727 2582                                           l815 196A  
                                         l575 47C2                                           l728 2586  
                                         l672 4D92                                           l921 4832  
                                         l833 4A8C                                           l753 493C  
                                         l809 449C                                           l817 1A26  
                                         l826 4A24                                           l818 1AE2  
                                         l674 4DD4                                           l835 4AB6  
                                         l819 1B9E                                           l828 4A4E  
                                         l916 42B2                                           l596 3168  
                                         l693 23AA                                           l909 33D4  
                                         l758 497A                                           l782 452C  
                                         l926 4E7A                                           l759 497E  
                                         l792 4202                                           l776 4508  
                                         l890 3028                                           l795 4204  
                                         l779 452A                                           l789 41DC  
                                         l990 3204                                           l984 3182  
                                         l999 32A4                                           _PR2 000FCB  
                            _calc_parity_even 4A50                        ??_InterruptManagerHigh 0014  
                                         _gps 003C                     _RB5_InterruptHandler_HIGH 00BE  
                             __end_of_ADC_ISR 51B2      GPIO_Pin_Direction_Initialize@ERRORSTATUS 0060  
                                         prod 000FF3                                           tosl 000FFD  
                                         wreg 000FE8                                    _TXSTA1bits 000FAC  
                                ___flmul@aexp 008C                                  ___flmul@bexp 0091  
                                ___flmul@sign 008B                                  ___flmul@temp 0096  
                                ___flmul@prod 0092                        ??_GPIO_Pin_Write_Logic 0060  
                                 _stepper_pos 002C                        ??_HAL_Timer0_Write_Val 0022  
                             __end_of_RB4_ISR 519C                               __end_of_RB5_ISR 5182  
                             __end_of_RB6_ISR 5168                               __end_of_RB7_ISR 514E  
                                ___fltol@exp1 00A9                                          l1010 4ECA  
                                        l1002 32A6                                          l1012 4ECC  
                                        l1100 51A8                                          l1014 4EDA  
                                        l1030 4E94                                          l1032 4EA2  
                                        l1017 4EEA                                          l1042 49AC  
                                        l1035 4EB2                                          l1028 4E92  
                                        l1044 49BA                                          l1038 49A8  
                                        l1047 49E6                                          l1092 40A4  
                                        l1510 3618                                          l1097 4F1C  
                                        l1700 3DB8                                          l1533 4156  
                                        l1517 3700                                          l1703 3E78  
                                        l2520 1238                                          l1712 3F32  
                                        l1632 48BA                                          l1537 5028  
                                        l2521 1226                                          l1538 502A  
                                        l1802 3598                                          l2610 1934  
                                        l2522 11EC                                          l1706 3C38  
                                        l1634 4910                                          l1803 3600  
                                        l1715 3FEC                                          l2613 17C6  
                                        l1709 3CF8                                          l1806 4FD4  
                                        l1742 5132                                          l2606 15D0  
                                        l1718 50F0                                          l1751 4F9A  
                                        l2623 18F6                                          l2615 183E  
                                        l2616 182C                                          l1745 4F7E  
                                        l2289 34F2                                          l2537 1352  
                                        l2529 1508                                          l2650 2948  
                                        l1754 4FA8                                          l2546 1422  
                                        l1739 4358                                          l2547 1410  
                                        l1748 4F8C                                          l1764 459C  
                                        l2661 28E0                                          l2574 2088  
                                        l2654 2884                                          l2647 27EC  
                                        l1767 45BC                                          l1759 453E  
                                        l2576 1EE8                                          l1792 4E2A  
                                        l1928 2296                                          l2585 1F2E  
                                        l1697 46D6                                          l2587 1FA6  
                                        l2579 1EAC                                          l1795 3518  
                                        l2588 1F94                                          l1799 3568  
                                        l1968 2EE4                                          l1977 2D54  
                                        l7050 48B6                                          l7300 2B84  
                                        l7052 48BC                                          l1989 2DA0  
                                        l7070 479C                                          l7062 4754  
                                        l7310 2BC4                                          l7054 48F6  
                                        l7046 48A4                                          l7072 47BA  
                                        l7064 4770                                          l7240 3056  
                                        l7232 302A                                          l7320 2C36  
                                        l7312 2BD0                                          l7304 2BA0  
                                        l7056 4902                                          l7048 48A4  
                                        l7066 4778                                          l7242 3062  
                                        l7250 30C8                                          l7234 302E  
                                        l7306 2BAC                                          l7058 490E  
                                        l7090 4F02                                          l7068 4794  
                                        l7260 3108                                          l7244 306E  
                                        l7308 2BB8                                          l7316 2BDC  
                                        l7340 43B0                                          l7332 435A  
                                        l7092 51A4                                          l7084 4EEC  
                                        l7254 30E4                                          l7246 307A  
                                        l7238 304A                                          l7318 2C2A  
                                        l7342 43BC                                          l7334 436A  
                                        l7086 4EEC                                          l7256 30F0  
                                        l7264 3114                                          l7248 3082  
                                        l7280 2AD2                                          l7344 43D4  
                                        l7336 437A                                          l7088 4EFE  
                                        l8170 4F7E                                          l8162 5116  
                                        l7258 30FC                                          l7266 315A  
                                        l7290 2B0A                                          l7282 2AD6  
                                        l7346 43F2                                          l7338 4392  
                                        l8180 454C                                          l8172 452E  
                                        l8164 511A                                          l7268 3166  
                                        l7292 2B16                                          l8350 47DA  
                                        l8190 45AC                                          l8182 4556  
                                        l8174 453A                                          l8166 5128  
                                        l7294 2B22                                          l7286 2AF2  
                                        l7710 4D1E                                          l8344 47C4  
                                        l8184 4564                                          l8168 5130  
                                        l7296 2B2E                                          l7288 2AFE  
                                        l7720 4D58                                          l7712 4D1E  
                                        l8346 47C4                                          l8186 4582  
                                        l7298 2B36                                          l7722 4D70  
                                        l7714 4D30                                          l8348 47D6  
                                        l8188 45AA                                          l7724 4D78  
                                        l7716 4D34                                          l7718 4D4C  
                                        l9800 1076                                          l9810 10B0  
                                        l9802 1086                                          l9900 127A  
                                        l9820 10DE                                          l9812 10B6  
                                        l9804 1096                                          l9910 12B4  
                                        l9902 1288                                          l9830 1112  
                                        l9822 10E0                                          l9814 10C8  
                                        l9806 1098                                          l9920 1320  
                                        l9912 12B6                                          l9904 1296  
                                        l9840 114E                                          l9824 10F0  
                                        l9832 111A                                          l9816 10CA  
                                        l9808 10A0                                          l9930 1378  
                                        l9922 1322                                          l9914 12C0  
                                        l9906 12A2                                          l9850 1162  
                                        l9842 1152                                          l9834 112A  
                                        l9826 1100                                          l9818 10D0  
                                        l9940 13A6                                          l9924 1332  
                                        l9908 12A6                                          l9916 12C6  
                                        l9860 1176                                          l9852 1166  
                                        l9844 1156                                          l9836 113C  
                                        l9828 1110                                          l9942 13B4  
                                        l9934 138C                                          l9950 13D2  
                                        l9918 12EC                                          l9926 1342  
                                        l9862 117A                                          l9854 116A  
                                        l9846 115A                                          l9838 114A  
                                        l9870 118A                                          STR_1 1014  
                                        l9944 13BC                                          l9936 1396  
                                        l9928 1368                                          l9952 13E0  
                                        l9880 11FA                                          l9872 118E  
                                        l9864 117E                                          l9856 116E  
                                        l9848 115E                                          l9792 1048  
                                        STR_2 1034                                          STR_3 1025  
                                        l9962 1432                                          l9970 1488  
                                        l9954 13E4                                          l9946 13C0  
                                        l9938 13A4                                          l9890 1224  
                                        l9882 1206                                          l9874 11B8  
                                        l9866 1182                                          l9858 1172  
                                        l9794 1056                                          STR_4 1001  
                                        STR_5 1043                                          l9980 14DA  
                                        l9972 1498                                          l9964 143E  
                                        l9956 13F2                                          l9948 13D0  
                                        l9892 1246                                          l9884 120A  
                                        l9876 11D4                                          l9868 1186  
                                        l9796 1064                                          l9990 14F8  
                                        l9982 14E0                                          l9974 14A8  
                                        l9966 144C                                          l9958 1408  
                                        l9894 1256                                          l9886 1218  
                                        l9878 11E4                                          l9798 1066  
                                        STR_9 1040                                          l9984 14E2  
                                        l9976 14C8                                          l9968 1486  
                                        l9888 121A                                          l9994 1CEE  
                                        l9986 14E8                                          l9978 14CC  
                                        l9898 126A                                          l9996 1CFC  
                                        l9988 14F6                                          l9998 1D0A  
                                        _LATA 000F89                                          _LATB 000F8A  
                                        _LATC 000F8B                                          _LATD 000F8C  
                                        _LATE 000F8D                                          u8000 454C  
                                        u8001 4548                                          u8010 4564  
                                        u8011 4560                                          u8020 45AA  
                                        u6340 48B6                                          u8021 45A6  
                                        u6341 48B2                                          u8030 45BC  
                                        u6350 4770                                          u8031 45B8  
                                        u6351 476C                                          i2l32 5054  
                                        u6360 4794                                          u6361 4790  
                                        u6370 47BA                                          u7330 4D30  
                                        u6371 47B6                                          u7331 4D2C  
                                        u6700 4392                                          u7340 4D4C  
                                        u6701 438E                                          u7341 4D48  
                                        u8230 47D6                                          u6710 43B0  
                                        u7350 4D70                                          u6390 4EFE  
                                        u8231 47D2                                          u6711 43AC  
                                        u7351 4D6C                                          u6391 4EFA  
                                        u6720 43D4                                          u6721 43D0  
                                        u6730 43F2                                          u6731 43EE  
                                        u8244 47F6                                          u6660 3046  
                                        u8245 47F2                                          u6661 3042  
                                        u6670 30E0                                          u6671 30DC  
                                        u6680 2AEE                                          u6681 2AEA  
                                        u6690 2B9C                                          u6691 2B98  
                                        u7970 4F8C                                          u7971 4F88  
                                        u7980 4F9A                                          u9900 114A  
                                        u9820 1064                                          u7981 4F96  
                                        u9901 1146                                          u9821 1060  
                                        u7990 4FA8                                          u9910 11B8  
                                        u9830 1076                                          u7991 4FA4  
                                        u9911 11B4                                          u9831 1072  
                                        u9920 11D0                                          u9840 1086  
                                        u9921 11CA                                          u9841 1082  
                                        u9930 11D2                                          u9850 10C8  
                                        u9851 10C4                                          u9940 11FA  
                                        u9860 10DE                                          u9941 11F6  
                                        u9861 10DA                                          u9950 1218  
                                        u9870 10F0                                          _RX9D 007D58  
                                        u9951 1214                                          u9871 10EC  
                                        u9960 1238                                          u9880 1100  
                                        u9961 1234                                          u9881 10FC  
                                        u9970 1246                                          u9890 113C  
                                        _TMR2 000FCC                                          u9971 1242  
                                        u9891 1138                                          u9980 1256  
                                        u9981 1252                                          u9990 1288  
                                        u9991 1284                         ??_CCP_PWM_Mode_Config 0023  
                     ??_application_intialize 0026              __end_ofi2_EUSART_Async_Read_Data 2792  
                    _RB4_InterruptHandler_LOW 00C0                     ??_CCP_Capture_Mode_Config 0023  
                                        _blue 003B                                          _main 208A  
                    _RB7_InterruptHandler_LOW 00B4                                          fsr2h 000FDA  
                                        indf2 000FDF                                          fsr1l 000FE1  
                                        fsr2l 000FD9                                          btemp 0042  
                                        prodh 000FF4                                          prodl 000FF3  
                                        start 0286               __end_of_CCP_Compare_Mode_Config 2C3A  
            GPIO_Pin_Toggle_Logic@_pin_config 001E            i2GPIO_Pin_Toggle_Logic@_pin_config 0001  
                           ??_HAL_Timer0_Init 0025                               ___fldiv@new_exp 0077  
                       __end_of_CCP_PWM_Start 4D7A                       ?_EUSART_Async_Read_Data 0060  
        Bluetooth_Send_Data_Non_Blocking@data 000E                         _CCP_PWM_Set_Duty$5752 015E  
                            __end_of_CCP_Init 37FC                          __end_of_Get_Distance 3602  
                                ___param_bank 000000                                  fp__usart_isr 0000  
                                _stepper_base 003E                              __end_of_INT1_ISR 51AE  
                  __end_ofi2_calc_parity_even 4B88                                         l10000 1D0C  
                                       l10002 1D1C                                         l10010 1D46  
                                       l10100 1FB6                                         l10020 1D72  
                                       l10012 1D56                                         l10004 1D2C  
                                       l10110 2018                                         l10102 1FC2  
                                       l10022 1D82                                         l10030 1DAC  
                                       l10014 1D5C                                         l10006 1D3C  
                                       l10120 2076                                         l10112 202E  
                                       l10104 1FD0                                         l10040 1DEE  
                                       l10032 1DBC                                         l10024 1D92  
                                       l10016 1D62                                         l10008 1D3E  
                                       l10200 28B6                                         l10122 207C  
                                       l10114 2048                                         l10106 1FFA  
                                       l10034 1DD2                                         l10026 1DA2  
                                       l10018 1D70                                         l10210 28F4  
                                       l10202 28C2                                         l11010 3814  
                                       l10124 207E                                         l10116 2064  
                                       l10108 1FFE                                         l10060 1E70  
                                       l10052 1E26                                         l10036 1DE2  
                                       l10044 1E02                                         l10028 1DA4  
                                       l10212 2918                                         l10204 28D0  
                                       l10140 3434                                         l10132 33D6  
                                       l11012 381E                                         l11004 37FC  
                                       l10300 3024                                         l11100 4DD6  
                                       l10230 32E6                                         l10222 32A8  
                                       l10118 2068                                         l10070 1EB6  
                                       l10062 1E78                                         l10054 1E40  
                                       l10046 1E12                                         l10038 1DEA  
                                       l10214 2928                                         l10206 28EE  
                                       l10142 3438                                         l10134 33F0  
                                       l11014 3896                                         l11006 37FC  
                                       l11022 46D8                                         l10310 3FEE  
                                       l11110 4E1E                                         l11102 4DD6  
                                       l10400 4AAE                                         l10232 334A  
                                       l10224 32AC                                         l10080 1F0E  
                                       l10072 1ED4                                         l10064 1E88  
                                       l10056 1E50                                         l10048 1E12  
                                       l10216 2936                                         l10208 28F0  
                                       l10144 3448                                         l11016 38B8  
                                       l11008 3810                                         l10320 4E2C  
                                       l10312 4002                                         l11104 4DEA  
                                       l11040 4CE0                                         l11032 4CBA  
                                       l11200 4BA0                                         l10226 32BE  
                                       l11050 40C2                                         l10090 1F4C  
                                       l10082 1F14                                         l10074 1ED6  
                                       l10066 1E9C                                         l10058 1E60  
                                       l10218 2938                                         l11114 4FAA  
                                       l10170 34D0                                         l10154 3474  
                                       l10146 344E                                         l10138 3406  
                                       l10250 4EC6                                         l11018 38BC  
                                       l10322 4E40                                         l10314 4006  
                                       l10330 316A                                         l11106 4DFC  
                                       l11042 4CF6                                         l11210 4BCA  
                                       l11202 4BB4                                         l10404 4AB4  
                                       l10420 4A36                                         l10236 33A8  
                                       l10228 32DE                                         l11060 4122  
                                       l11052 40D4                                         l10092 1F50  
                                       l10084 1F1E                                         l10076 1EE6  
                                       l10068 1EAA                                         l10180 27B6  
                                       l11116 4FBA                                         l10500 15BA  
                                       l10172 34E2                                         l10164 34A0  
                                       l10156 3480                                         l10148 345C  
                                       l10252 4EEA                                         l10260 4980  
                                       l11300 3C3A                                         l10324 4E48  
                                       l11028 46F0                                         l10316 4020  
                                       l10308 3FEE                                         l10340 31AE  
                                       l10332 316A                                         l11108 4E00  
                                       l11220 4C06                                         l11212 4BD0  
                                       l10422 4A38                                         l10414 49F6  
                                       l10238 33D2                                         l11062 413C  
                                       l11054 40D8                                         l11046 40A6  
                                       l10094 1F5E                                         l10086 1F2C  
                                       l10078 1EF8                                         l10190 282E  
                                       l10182 27FC                                         l11118 4FC4  
                                       l10510 1604                                         l10502 15C0  
                                       l10166 34B0                                         l10158 348C  
                                       l10246 4EB4                                         l10262 4992  
                                       l11310 3C9E                                         l11302 3C40  
                                       l10326 4E78                                         l10318 4E2C  
                                       l10350 320A                                         l10342 31C8  
                                       l10334 317E                                         l11070 464C  
                                       l11038 4CD0                                         l11230 4C30  
                                       l11222 4C1A                                         l11214 4BEE  
                                       l10424 4A46                                         l10416 4A22  
                                       l10408 49EA                                         l10600 2378  
                                       l11064 4140                                         l11056 40F2  
                                       l11048 40B0                                         l10096 1F8C  
                                       l10088 1F3E                                         l10192 283A  
                                       l10184 2812                                         l10176 2796  
                                       l11400 3514                                         l10520 1654  
                                       l10512 1610                                         l10504 15E0  
                                       l10168 34C0                                         l10248 4EB4  
                                       l10272 4E7C                                         l10264 49A4  
                                       l11240 3D22                                         l11312 3CBC  
                                       l11304 3C44                                         l10440 442C  
                                       l10432 43FC                                         l10360 324C  
                                       l10352 321A                                         l10344 31E2  
                                       l10336 3184                                         l11080 4684  
                                       l11072 464C                                         l11232 4C36  
                                       l11208 4BBE                                         l10418 4A26  
                                       l10610 23D2                                         l10602 2382  
                                       l11058 40FA                                         l10194 286C  
                                       l10178 27A8                                         l11410 356E  
                                       l11402 351A                                         l10530 1696  
                                       l10522 1660                                         l10514 161A  
                                       l10506 15F0                                         l10274 4E7C  
                                       l10266 49CA                                         l10258 4980  
                                       l11250 3D94                                         l11242 3D40  
                                       l11234 3CFA                                         l11314 3CC8  
                                       l11306 3C62                                         l11330 3EBA  
                                       l11322 3E7A                                         l10450 4478  
                                       l10442 4440                                         l10434 4400  
                                       l10290 2F1C                                         l10370 32A2  
                                       l10362 3266                                         l10346 31E8  
                                       l10354 3226                                         l10338 319E  
                                       l11082 4696                                         l11074 465A  
                                       l10428 4A4C                                         l10620 2446  
                                       l10612 23EC                                         l10604 2394  
                                       l10460 5006                                         l10196 286E  
                                       l10188 2826                                         l11412 3586  
                                       l11404 352E                                         l10540 16F8  
                                       l10532 16A2                                         l10524 166C  
                                       l10516 1630                                         l11092 50CC  
                                       l10276 4E8E                                         l10268 49DA  
                                       l10380 4C94                                         l10372 4C54  
                                       l11260 3DC4                                         l11252 3DA6  
                                       l11244 3D5E                                         l11236 3D00  
                                       l11316 3CD4                                         l11308 3C80  
                                       l11340 3F20                                         l11332 3ED8  
                                       l11324 3E7A                                         l10452 4492  
                                       l10444 4454                                         l10436 4412  
                                       l10292 2F24                                         l10284 2EE6  
                                       l10700 3782                                         l10364 3268  
                                       l10356 322A                                         l10348 3202  
                                       l11084 46A8                                         l11076 4668  
                                       l11420 2ED6                                         l11228 4C24  
                                       l10390 4A5E                                         l10630 249E  
                                       l10622 244E                                         l10614 2406  
                                       l10606 23A6                                         l11430 2C6A  
                                       l11422 2C3A                                         l10462 5018  
                                       l10198 287A                                         l11414 359A  
                                       l11406 353E                                         l10550 178E  
                                       l10542 1704                                         l10534 16B2  
                                       l10526 167A                                         l10518 163C  
                                       l10470 150A                                         l11094 50CC  
                                       l10278 4EB2                                         l10382 4CAC  
                                       l10374 4C58                                         l11270 3E48  
                                       l11262 3DE2                                         l11246 3D7C  
                                       l11238 3D04                                         l11350 3F56  
                                       l11318 3CE6                                         l11334 3EF6  
                                       l11326 3E7E                                         l10446 4456  
                                       l10438 441C                                         l10454 449A  
                                       l10294 2F86                                         l10286 2EEC  
                                       l10710 37EE                                         l10702 379E  
                                       l10366 3282                                         l10358 3246  
                                       l11086 46B4                                         l11078 4676  
                                       l10392 4A8A                                         l10384 4A52  
                                       l10632 24AA                                         l10640 24F6  
                                       l10624 2456                                         l10616 2426  
                                       l10608 23B8                                         l11440 2CAA  
                                       l11424 2C3E                                         l10464 5020  
                                       l11408 3556                                         l10560 17E4  
                                       l10552 17AC                                         l10544 1720  
                                       l10536 16CC                                         l10528 1686  
                                       l10480 1548                                         l10472 1518  
                                       l10720 2966                                         l11096 50DE  
                                       l10376 4C64                                         l11272 3E54  
                                       l11264 3E00                                         l11256 3DBA  
                                       l11248 3D88                                         l11360 3FC8  
                                       l11352 3F74                                         l11344 3F34  
                                       l11336 3F02                                         l11328 3E9C  
                                       l11280 3B80                                         l10448 4470  
                                       l10800 452A                                         l10288 2EFE  
                                       l10712 37FA                                         l10704 37AE  
                                       l10368 3288                                         l11088 46C0  
                                       l10394 4A8E                                         l10650 2546  
                                       l10642 2516                                         l10634 24B2  
                                       l10618 243A                                         l10626 246A  
                                       l11450 2CFA                                         l11442 2CBC  
                                       l11434 2C80                                         l11426 2C40  
                                       l10466 5024                                         l10458 5002  
                                       l11370 42C8                                         l10570 184E  
                                       l10562 17E8                                         l10554 17B6  
                                       l10546 174A                                         l10538 16DC  
                                       l10490 157A                                         l10482 1558  
                                       l10474 1526                                         l10730 2AA2  
                                       l10722 296A                                         l10378 4C7C  
                                       l11274 3E66                                         l11266 3E1E  
                                       l11258 3DC0                                         l11362 3FDA  
                                       l11354 3F92                                         l11346 3F34  
                                       l11338 3F0E                                         l11290 3BFC  
                                       l11282 3B84                                         l10810 4176  
                                       l10298 2FE2                                         l12090 3134  
                                       l10706 37CC                                         l11418 2DA2  
                                       l11194 4B88                                         l12082 22AE  
                                       l10396 4A9E                                         l10644 252A  
                                       l10636 24BA                                         l10628 248A  
                                       l11460 2D32                                         l11444 2CC0  
                                       l11452 2D00                                         l11436 2C96  
                                       l11428 2C54                                         l11380 4314  
                                       l11372 42DA                                         l10900 5090  
                                       l10580 18B0                                         l10572 185A  
                                       l10564 17F6                                         l10556 17C4  
                                       l10548 1780                                         l10492 1588  
                                       l10484 155E                                         l10476 1528  
                                       l10732 2AD0                                         l10724 2A40  
                                       l10716 294A                                         l11268 3E3C  
                                       l11356 3FB0                                         l11348 3F38  
                                       l11292 3C08                                         l11284 3BA2  
                                       l10820 41C0                                         l10812 4190  
                                       l10804 4158                                         l10740 194E  
                                       l12092 300E                                         l12084 2B56  
                                       l10708 37DC                                         l10660 50A6  
                                       l10398 4AA0                                         l10646 2536  
                                       l10638 24D6                                         l11470 2D9E  
                                       l11462 2D50                                         l11454 2D12  
                                       l11446 2CDA                                         l11438 2CA8  
                                       l11390 4340                                         l11382 4318  
                                       l11374 42EC                                         l11366 42B4  
                                       l10902 5094                                         l10590 1918  
                                       l10582 18C4                                         l10574 1868  
                                       l10566 1824                                         l10558 17D6  
                                       l10494 158A                                         l10486 156E  
                                       l10478 1538                                         l10726 2A58  
                                       l10718 2954                                         l10910 5068  
                                       l11358 3FBC                                         l11294 3C14  
                                       l11286 3BC0                                         l11278 3B7A  
                                       l10822 41DA                                         l10814 4192  
                                       l10806 415C                                         l12094 1C82  
                                       l10750 1A82                                         l10742 1956  
                                       l12086 2BFC                                         l10662 50A6  
                                       l10670 3AAC                                         l10648 253E  
                                       l10656 2566                                         l12096 33BC  
                                       l11456 2D16                                         l11448 2CDC  
                                       l11464 2D64                                         l10920 4218  
                                       l11392 434C                                         l11384 431C  
                                       l11376 42FE                                         l11368 42B4  
                                       l10592 191A                                         l10584 18DE  
                                       l10576 1892                                         l10496 159A  
                                       l10488 1574                                         l10728 2A8A  
                                       l10912 506C                                         l11296 3C26  
                                       l11288 3BDE                                         l10816 41A0  
                                       l10824 41E2                                         l10808 416E  
                                       l10760 1C5A                                         l10752 1AE6  
                                       l10744 196E                                         l10736 1936  
                                       l12088 30A2                                         l10664 50BA  
                                       l10672 3AAC                                         l10840 364A  
                                       l10832 3602                                         l10658 2574  
                                       l11466 2D74                                         l11458 2D30  
                                       l10922 422A                                         l11386 4328  
                                       l11378 4310                                         l10586 18FA  
                                       l10594 1920                                         l10578 1896  
                                       l10498 15AA                                         l10906 5056  
                                       l10826 41FC                                         l10818 41BA  
                                       l10754 1B3E                                         l10746 19C6  
                                       l10738 193C                                         l10690 3732  
                                       l10682 3702                                         l10666 50BE  
                                       l10674 3AC0                                         l10850 369C  
                                       l10842 3660                                         l10834 3602  
                                       l11810 20B6                                         l11802 208A  
                                       l11468 2D8E                                         l10924 424A  
                                       l10916 4206                                         l11396 34F4  
                                       l11388 4334                                         l10596 1924  
                                       l10588 190A                                         l10908 5056  
                                       l10828 4202                                         l10780 44A2  
                                       l10756 1BA2                                         l10748 1A2A  
                                       l10764 1C62                                         l10692 373A  
                                       l10684 3702                                         l10676 3AD2  
                                       l10860 36FE                                         l10852 36B2  
                                       l10844 3666                                         l10836 3614  
                                       l11820 20E8                                         l11812 20BE  
                                       l11804 209E                                         l10926 424E  
                                       l10918 4206                                         l11398 3502  
                                       l10790 44EA                                         l10782 44B4  
                                       l10758 1BFA                                         l10766 1CA8  
                                       l10870 4D94                                         l10694 3752  
                                       l10686 3716                                         l10678 3AD6  
                                       l10854 36B4                                         l10846 3680  
                                       l10838 361A                                         l11830 2130  
                                       l11822 20FA                                         l11814 20C6  
                                       l11806 20A6                                         l10792 44F0  
                                       l10784 44BC                                         l10768 1CEA  
                                       l10872 4DA4                                         l10864 4D7A  
                                       l10696 3756                                         l10688 371A  
                                       l10856 36CA                                         l10848 3682  
                                       l11840 214C                                         l11832 2132  
                                       l11824 20FC                                         l11816 20CE  
                                       l11808 20AE                                         l10890 494A  
                                       l10882 4912                                         l10794 4506  
                                       l10786 44D2                                         l10778 449E  
                                       l10874 4DA6                                         l10866 4D7A  
                                       l10698 3772                                         l10858 36EA  
                                       l11850 2192                                         l11842 215C  
                                       l11834 2142                                         l11826 210C  
                                       l11818 20D6                                         l10892 495E  
                                       l10884 4912                                         l10788 44D4  
                                       l10796 450E                                         l10876 4DBC  
                                       l10868 4D8E                                         l11860 21B0  
                                       l11844 2160                                         l11828 2110  
                                       l10894 496C                                         l10886 4926  
                                       l10798 4524                                         l10878 4DD2  
                                       l11870 21EA                                         l11862 21D0  
                                       l11854 219A                                         l11846 2180  
                                       l11838 214A                                         l10888 4938  
                                       l10896 507E                                         l11880 2222  
                                       l11872 21EC                                         l11864 21D2  
                                       l11856 219C                                         l11848 2182  
                                       l10898 507E                                         l11890 228E  
                                       l11882 2232                                         l11874 21FC  
                                       l11866 21E2                                         l11858 21AC  
                                       l11876 2200                                         l11886 223A  
                                       l11878 2220                                         l11894 2296  
                                       l11888 226C                                 ___fltol@sign1 00A8  
                             __end_of___fladd 150A                                         ?_main 0001  
                      Servo_SetAngle@servo_no 015D                               __end_of___fldiv 208A  
                             __end_of___flmul 1936                               __end_of___fltol 34F4  
                                       u10000 1296                                         u10001 1292  
                                       u10010 12B4                                         u10011 12B0  
                                       u10100 13F2                                         u10020 12EC  
                                       u10101 13EE                                         u10021 12E8  
                                       u10110 1408                                         u10030 1332  
                                       u10111 1404                                         u10031 132E  
                                       u10200 14F6                                         u10120 141E  
                                       u10040 1368                                         u11000 4412  
                                       u10201 14F2                                         u10121 141A  
                                       u10041 1364                                         u11001 440E  
                                       u10210 1D0A                                         u10130 1432  
                                       u10050 1378                                         u11010 4470  
                                       u10211 1D06                                         u10131 142E  
                                       u10051 1374                                         u11011 446C  
                                       u10300 1EAA                                         u10220 1D1C  
                                       u11100 15E0                                         u10140 144C  
                                       u10060 13A4                                         u11020 4492  
                                       u10301 1EA6                                         u10221 1D18  
                                       u11101 15DC                                         u10141 1448  
                                       u10061 13A0                                         u11021 448E  
                                       u11030 5018                                         u10310 1ED4  
                                       u10230 1D2C                                         u11110 15F0  
                                       u10150 1486                                         u10070 13B4  
                                       u11031 5014                                         u10311 1ED0  
                                       u10231 1D28                                         u11111 15EC  
                                       u10151 1482                                         u10071 13B0  
                                       u10400 1FD0                                         u10320 1EF8  
                                       u10240 1D70                                         u11200 18B0  
                                       u11120 176A                                         u11040 1526  
                                       u10160 1498                                         u10080 13D0  
                                       u10401 1FCC                                         u10321 1EF4  
                                       u10241 1D6C                                         u11201 18AC  
                                       u11041 1522                                         u10161 1494  
                                       u10081 13CC                                         u10410 2018  
                                       u10330 1F0E                                         u10250 1D82  
                                       u11210 18DE                                         u11130 17C4  
                                       u11050 1538                                         u10170 14A8  
                                       u10090 13E0                                         u10411 2014  
                                       u10331 1F0A                                         u10251 1D7E  
                                       u11211 18DA                                         u11131 17C0  
                                       u11051 1534                                         u10171 14A4  
                                       u10091 13DC                                         u11300 248A  
                                       u10420 2048                                         u10340 1F2C  
                                       u10260 1D92                                         u12100 42DA  
                                       u11220 1918                                         u11140 17E4  
                                       u11060 1548                                         u10500 34D0  
                                       u10180 14C8                                         u11301 2486  
                                       u10421 2044                                         u10341 1F28  
                                       u10261 1D8E                                         u12101 42D6  
                                       u11221 1914                                         u11141 17E0  
                                       u11125 1760                                         u11061 1544  
                                       u10501 34CC                                         u10181 14C4  
                                       u11310 249E                                         u11230 2394  
                                       u10430 2076                                         u10350 1F4C  
                                       u10270 1DD2                                         u10510 27A8  
                                       u12110 42EC                                         u11150 17F6  
                                       u11070 1588                                         u10190 14DA  
                                       u11311 249A                                         u11231 2390  
                                       u10431 2072                                         u10351 1F48  
                                       u10271 1DCE                                         u10511 27A4  
                                       u12111 42E8                                         u11151 17F2  
                                       u11071 1584                                         u10191 14D6  
                 ??_MSSP_I2C_Master_Send_Stop 0020                                         u11320 24D6  
                                       u11240 23A6                                         u12200 2CFA  
                                       u10360 1F5E                                         u10280 1E12  
                                       u10600 2936                                         u10520 27B6  
                                       u12120 42FE                                         u11160 1824  
                                       u11080 159A                                         u10440 33F0  
                                       u11400 3AD2                                         u11321 24D2  
                                       u11241 23A2                                         u12201 2CF6  
                                       u10361 1F5A                                         u10281 1E0E  
                                       u10601 2932                                         u10521 27B2  
                                       u12121 42FA                                         u11161 1820  
                                       u11081 1596                                         u10441 33EC  
                                       u11401 3ACE                                         u11330 2516  
                                       u11250 23B8                                         u10610 32BE  
                                       u12210 2D12                                         u10370 1F8C  
                                       u10290 1E88                                         u10530 2812  
                                       u12130 4310                                         u11170 183A  
                                       u11090 15AA                                         u10450 3428  
                                       u11410 3716                                         u12050 4B9C  
                                       u11331 2512                                         u11251 23B4  
                                       u10611 32BA                                         u12211 2D0E  
                                       u10371 1F88                                         u10291 1E84  
                                       u10531 280E                                         u12131 430C  
                                       u11171 1836                                         u11091 15A6  
                                       u11411 3712                                         u12051 4B98  
                                       u11340 252A                                         u11260 23D2  
                                       u10620 32DE                                         u12220 2D50  
                                       u10380 1FA2                                         u10540 2868  
                                       u12140 3514                                         u11180 184E  
                                       u10460 345C                                         u10700 49BA  
                                       u11500 194E                                         u11420 3732  
                                       u12060 4BEC                                         u11341 2526  
                                       u11261 23CE                                         u10621 32DA  
                                       u12221 2D4C                                         u10381 1F9E  
                                       u10541 2864                                         u12141 3510  
                                       u11181 184A                                         u10461 3458  
                                       u10701 49B6                                         u11501 194A  
                                       u11421 372E                                         u12061 4BE8  
                                       u11350 2562                                         u11270 2406  
                                       u12230 2D64                                         u10390 1FB6  
                                       u10550 28B2                                         u12150 3568  
                                       u11190 1868                                         u10470 3470  
                                       u10710 49CA                                         u11510 44B4  
                                       u11430 3752                                         u12070 4C02  
                                       u11351 255E                                         u11271 2402  
                                       u12231 2D60                                         u10391 1FB2  
                                       u10551 28AE                                         u12151 3564  
                                       u11191 1864                                         u10471 346C  
                                       u10455 341C                                         u10711 49C6  
                                       u11511 44B0                                         u11431 374E  
                                       u12071 4BFE                                         u11360 2574  
                                       u11280 2426                                         u12240 2D74  
                                       u10560 28D0                                         u12160 3598  
                                       u10480 349C                                         u10720 4E8E  
                                       u11600 41FC                                         u11520 44D2  
                                       u10800 2FFC                                         u11440 3772  
                                       u12080 4C52                                         u11361 2570  
                                       u11281 2422                                         u12241 2D70  
                                       u10561 28CC                                         u12161 3594  
                                       u10481 3498                                         u10721 4E8A  
                                       u11601 41F8                                         u11521 44CE  
                                       u11441 376E                                         u12081 4C4E  
                                       u11370 2582                                         u11290 243A  
                                       u10634 3302                                         u12170 2C7C  
                                       u10570 28E0                                         u12090 42C8  
                                       u10490 34C0                                         u10650 4EC6  
                                       u10730 4EA2                                         u11530 44EA  
                                       u11450 379E                                         u10810 4002  
                                       u11610 3614                                         u11371 257E  
                                       u11291 2436                                         u10635 32FE  
                                       u12171 2C78                                         u10571 28DC  
                                       u12091 42C4                                         u10491 34BC  
                                       u10651 4EC2                                         u10731 4E9E  
                                       u11531 44E6                                         u11451 379A  
                                       u10811 3FFE                                         u11611 3610  
                                       u11700 4938                                         u10644 3366  
                                       u12180 2CA8                                         u10580 28EE  
                                       u10660 4EDA                                         u10740 4EB2  
                                       u11540 4506                                         u10820 4E40  
                                       u11460 37CC                                         u11380 50BA  
                                       u10900 3282                                         u11701 4934  
                                       u10645 3362                                         u12181 2CA4  
                                       u10581 28EA                                         u10661 4ED6  
                                       u10741 4EAE                                         u11541 4502  
                                       u10821 4E3C                                         u11461 37C8  
                                       u11381 50B6                                         u10901 327E  
                                       u11710 494A                                         u12190 2CBC  
                                       u10590 2928                                         u11470 2966  
                                       u10670 4EEA                                         u11550 4524  
                                       u10750 2EFE                                         u10910 32A2  
                                       u10830 317E                                         u11390 3AC0  
                                       u11630 364A                                         u11711 4946  
                                       u12191 2CB8                                         u10591 2924  
                                       u11471 2962                                         u10671 4EE6  
                                       u11551 4520                                         u10751 2EFA  
                                       u10911 329E                                         u10831 317A  
                                       u11391 3ABC                                         u11631 3646  
                                       u11720 496C                                         u11480 2A58  
                                       u10680 4992                                         u11560 416E  
                                       u10760 2F1C                                         u10840 319E  
                                       u11640 3680                                         u12600 2232  
                                       u11721 4968                                         u11481 2A54  
                                       u10681 498E                                         u11561 416A  
                                       u10761 2F18                                         u10841 319A  
                                       u11641 367C                                         u11625 362E  
                                       u12601 222E                                         u10930 4A8A  
                                       u11730 497A                                         u11490 2AA2  
                                       u10690 49A4                                         u11570 4190  
                                       u10850 31C8                                         u11650 369C  
                                       u12530 210C                                         u10931 4A86  
                                       u11731 4976                                         u11491 2A9E  
                                       u10691 49A0                                         u11571 418C  
                                       u10851 31C4                                         u11651 3698  
                                       u11627 3630                                         u12531 2108  
                                       u10940 4A9E                                         u10924 4A70  
                                       u11900 40C2                                         u11740 5090  
                                       u11580 41BA                                         u10860 31E2  
                                       u12540 2142                                         u10941 4A9A  
                                       u10925 4A6C                                         u11901 40BE  
                                       u11741 508C                                         u11581 41B6  
                                       u10861 31DE                                         u12541 213E  
                                       u10950 4AAE                                         u11910 40D4  
                                       u11750 5068                                         u11590 41DA  
                                       u10790 2FFA                                         u10774 2F40  
                                       u10870 3202                                         u12550 215C  
                                       u10951 4AAA                                         u11911 40D0  
                                       u11751 5064                                         u11591 41D6  
                                       u10791 2FF4                                         u10775 2F3C  
                                       u10871 31FE                                         u12551 2158  
                                       u11760 4218                                         u11920 40F2  
                                       u11680 4D8E                                         u10784 2FA2  
                                       u10880 3246                                         u12560 2192  
                                       u11761 4214                                         u11921 40EE  
                                       u11681 4D8A                                         u10785 2F9E  
                                       u10881 3242                                         u11665 36B0  
                                       u12617 4CEA                                         u12561 218E  
                                       u10970 4A22                                         u11690 4926  
                                       u11770 422A                                         u11930 413C  
                                       u10890 3266                                         u12570 21AC  
                                       u10971 4A1E                                         u11691 4922  
                                       u11771 4226                                         u11931 4138  
                                       u10891 3262                                         u11675 36C8  
                                       u11667 36B2                                         u12627 4D10  
                                       u12571 21A8                                         u10980 4A36  
                                       u10964 4A08                                         u11780 424A  
                                       u11940 4DEA                                         u12580 21E2  
                                       u10981 4A32                                         u10965 4A04  
                                       u11781 4246                                         u12637 5120  
                        __end_of_Get_Temp_HUM 435A                                         u11677 36CA  
                                       u11941 4DE6                                         u12581 21DE  
                                       u10990 4A46                                         u11870 3810  
                                       u11950 4DFC                                         u12590 21FC  
                                       u10991 4A42                                         u12647 512C  
                                       u11871 380C                                         u11951 4DF8  
                                       u12591 21F8                                         u11880 46EC  
                                       u12657 454E                                         u11881 46E8  
                                       u11794 429C                                         u11890 4CCC  
                                       u11795 4298                                         u12667 4FBC  
                                       u11891 4CC8                                         u12677 2D80  
                      _ECU_DC_Motor_Run_Right 5056                                         i1l477 51B0  
                                       i2l706 2770                                         i2l727 278C  
                                       i2l728 2790                                         i2l833 4B5C  
                                       i2l921 48A2                                         i2l826 4AF4  
                                       i2l690 3AAA                                         i2l842 5000  
                                       i2l835 4B86                                         i2l828 4B1E  
                                       i2l693 25B8                                         i2l686 3AA6  
                                       i2l838 51B4                                         _RCREG 000FAE  
                                       _TMR0H 000FD7                                         _TMR1H 000FCF  
                                       _TMR0L 000FD6                                         _TMR1L 000FCE  
                       Get_Distance@timer_val 0085                                         _SPBRG 000FAF  
                                       _PORTA 000F80                                         _PORTB 000F81  
                                       _PORTC 000F82                                         _PORTD 000F83  
                                       _PORTE 000F84                                 _EUSART_Rx_ISR 4FD6  
                                       _TRISA 000F92                                         _TRISB 000F93  
                                       _TRISC 000F94                                         _TRISD 000F95  
                                       _TRISE 000F96                                 _EUSART_Tx_ISR 51B4  
                                       _TXREG 000FAD                              __end_of_TMR0_ISR 51B4  
     async_config_baud_rate_gen@Baudrate_temp 015E                                GPS_Service@key 0025  
                                       _flags 003D                                    _T_Integral 0035  
                  ?_Robot_Steer_Right_Forward 0001                                         pclath 000FFA  
                                       pclatu 000FFB                                  ?_GPS_Service 0001  
                                       tablat 000FF5               CCP_Capture_Mode_Config@_ccp_obj 0021  
                 HAL_Timer0_Init@_tmr0_config 0023                          PCA_Write_Reg@i2c_obj 0060  
                                       ttemp5 0043                                         ttemp6 0046  
                                       ttemp7 004A                                         status 000FD8  
                                       wtemp8 0043                __end_of_EUSART_Async_Read_Data 2588  
                    Get_Distance@_tmr0_config 0081                       HAL_Timer0_Write_Val@val 0020  
            ServoDriver_Init@servo_driver_obj 0160                             ??_DHT11_Read_Data 0020  
       async_config_baud_rate_gen@_eusart_obj 0159                   _I2C_DefaultInterruptHandler 00CE  
                             __initialization 45BE        MSSP_I2C_Master_Write_Blocking@i2c_data 0020  
                         _Rx_config_interrupt 43FC                                  __end_of_main 2378  
                  _eusart_Rx_InterruptHandler 0028                         CCP_PWM_Start@_ccp_obj 001E  
               __end_of_GPIO_Pin_Toggle_Logic 4834                                     ??_ADC_ISR 001A  
                            _servo_driver_obj 00F8                         _CCP_Mode_Timer_Select 4754  
                               _lat_registers 00DD                              _Ultra_Sonic_Init 4DD6  
                                      ??_main 0169                     Servo_SetAngle@reg_addrees 0161  
                               __activetblptr 000003                                ?_EUSART_Rx_ISR 0001  
                         DHT11_Read_Data@data 001E                                ?_EUSART_Tx_ISR 0001  
                                   ??_RB4_ISR 001A                       ?_I2C_Pin_Configurations 0001  
                                   ??_RB5_ISR 001A                                     ??_RB6_ISR 001A  
                                   ??_RB7_ISR 001A                         Get_Temp_HUM@T_Decimal 0064  
              GPIO_Pin_Read_Logic@_pin_config 001E                         RB5_ISR@Handler_Select 001A  
                        ?_Rx_config_interrupt 001E                  Ultra_Sonic_Init@_tmr0_config 006B  
                                      _ADRESH 000FC4                                        _ADRESL 000FC3  
                                      _CCPR1L 000FBE                                        _CCPR2L 000FBB  
                    __end_of_Ecu_Stepper_Init 4754                  ??_MSSP_I2C_Master_Send_Start 0020  
                    __end_of_Ecu_Stepper_Step 4D1E                                        i1l1170 0106  
                                      i1l1251 51AC                                        i1l1180 0246  
                                      i1l1172 0146                                        i1l1164 0046  
                                      i1l1182 0266                                        i1l1174 0186  
                                      i1l1166 0086                                        i1l1264 519A  
                                      i1l1176 01C6                                        i1l1168 00C6  
                                      i1l1273 5180                                        i1l1185 0276  
                                      i1l1282 5166                                        i1l1178 0206  
                                      i1l1291 514C                                        i2l1151 396C  
                                      i2l1143 391C                                        i2l1153 398C  
                                      i2l1145 392C                                        i2l1155 399C  
                                      i2l1147 393C                                        i2l1149 394C  
                                      i2l1158 39AC                                        i2l1541 51B2  
                                      i1l9300 0100                                        i1l9310 0140  
                                      i1l9302 0114                                        i1l8360 5186  
                                      i1l9320 0180                                        i1l9312 0154  
                                      i1l9304 0122                                        i1l8354 51AA  
                                      i1l8370 516C                                        i1l9330 01C0  
                                      i1l9322 0194                                        i1l9314 0162  
                                      i1l9306 0130                                        i2l1971 4F4E  
                                      i2l7100 4AC6                                        i1l8364 519A  
                                      i1l8380 5152                                        i1l9340 0200  
                                      i1l9332 01D4                                        i1l9324 01A2  
                                      i1l9316 0170                                        i1l9308 013E  
                                      i2l7110 4B16                                        i2l7102 4AF2  
                                      i1l8358 5184                                        i1l8374 5180  
                                      i1l8390 5138                                        i1l9350 0240  
                                      i1l9342 0214                                        i1l9334 01E2  
                                      i1l9326 01B0                                        i1l9318 017E  
                                      i1l9270 0042                                        i2l7104 4AF6  
                                      i1l8368 516A                                        i1l8384 5166  
                                      i1l9352 0254                                        i1l9344 0222  
                                      i1l9336 01F0                                        i1l9328 01BE  
                                      i1l9280 0080                                        i1l9272 0054  
                                      i2l7130 4B6E                                        i2l7114 4B1C  
                                      i2l7106 4B06                                        i1l8378 5150  
                                      i1l8394 514C                                        i1l9354 0262  
                                      i1l9346 0230                                        i1l9338 01FE  
                                      i1l9290 00C0                                        i1l9282 0094  
                                      i1l9274 0062                                        i1l9266 0026  
                                      i2l7132 4B70                                        i2l7124 4B2E  
                                      i2l7108 4B08                                        i1l8388 5136  
                                      i1l9356 0274                                        i1l9348 023E  
                                      i1l9292 00D4                                        i1l9284 00A2  
                                      i1l9276 0070                                        i1l9268 0034  
                                      i2l7134 4B7E                                        i2l7126 4B5A  
                                      i2l7118 4B22                                        i2l7150 39F8  
                                      i2l7142 39C8                                        i1l9294 00E2  
                                      i1l9286 00B0                                        i1l9278 007E  
                                      i2l7128 4B5E                                        i2l7160 3A8E  
                                      i2l7152 3A18                                        i2l7144 39C8  
                                      i1l9296 00F0                                        i1l9288 00BE  
                                      i2l7138 4B84                                        i2l7154 3A36  
                                      i2l7162 3AA6                                        i2l7146 39DA  
                                      i1l9298 00FE                                        i2l7156 3A56  
                                      i2l7148 39DE                                        i2l8212 4F1E  
                                      i2l7094 4ABA                                        i2l7158 3A6E  
                                      i2l8214 4F42                                        i2l8340 4FD6  
                                      i2l8342 4FE8                                        i2l9232 38FC  
                                      i2l7570 5042                                        i2l9250 395A  
                                      i2l9242 393A                                        i2l9234 390A  
                                      i2l7564 502C                                        i2l7900 2736  
                                      i2l9252 3968                                        i2l9236 3918  
                                      i2l7566 502C                                        i2l7902 2742  
                                      i2l9262 39AA                                        i2l9254 397A  
                                      i2l9246 394A                                        i2l9238 392A  
                                      i2l7568 503E                                        i2l7904 274A  
                                      i2l7912 2770                                        i2l7920 4846  
                                      i2l9256 3988                                        i2l7914 277E  
                                      i2l7906 2752                                        i2l7922 484A  
                                      i2l9258 399A                                        i2l7860 25A2  
                                      i2l7916 4834                                        i2l7870 2614  
                                      i2l7862 25B4                                        i2l7918 4834  
                                      i2l7880 2664                                        i2l7872 2634  
                                      i2l7864 25C6                                        i2l7856 2588  
                                      i2l7890 26C0                                        i2l7874 2648  
                                      i2l7882 2678                                        i2l7866 25E0  
                                      i2l7858 2590                                        i2l7892 26C8  
                                      i2l7884 2698                                        i2l7876 2654  
                                      i2l7868 25FA                                        i2l7894 26E2  
                                      i2l7886 26AC                                        i2l7878 265C  
                                      i2l7888 26B8                                        i2l7896 2702  
                                      i2l7898 2722             __end_of_Robot_Steer_Right_Forward 3C3A  
                __end_of_DHT11_Check_Response 4FAA                                _Movement_State 00D4  
                                      _SPBRGH 000FB0                     _MSSP_I2C_Master_Send_Stop 4E7C  
                                      _SSPADD 000FC8                                        _SSPBUF 000FC9  
                           i2_calc_parity_odd 4AB8                      calc_parity_odd@l_counter 0022  
                            __end_of___xxtofl 294A                        _W1_W3_W5_Motor_Control 00FF  
                    ?i2_GPIO_Pin_Toggle_Logic 0001                   ?_Robot_Steer_Right_Backward 0001  
                       __end_of_MSSP_I2C_Init 32A8                            ?i2_calc_parity_odd 0001  
                               ??_Timer2_Init 0020                      i2_EUSART_Async_Read_Data 2588  
__end_of_I2C_Master_Mode_Clock_Configurations 40A6        ??_I2C_Master_Mode_Clock_Configurations 015B  
       ?_I2C_Master_Mode_Clock_Configurations 0159          _I2C_Master_Mode_Clock_Configurations 3FEE  
                          _Robot_Move_Forward 3CFA                   __end_of_GPIO_Pin_Read_Logic 42B4  
             ??_GPIO_Pin_Direction_Initialize 0020                 __end_of_ECU_DC_Motor_Run_Left 50A6  
                                   ??___fladd 00A0                                     ??___fldiv 006E  
                    ?_stepper_move_one_deg_cw 0066                                     ??___flmul 0087  
                                   ??___fltol 0155                   __end_of_GPIO_Pin_Initialize 4E7C  
                         ??i2_calc_parity_odd 0001                                        clear_0 4624  
                                      clear_1 4630                                        clear_2 463C  
                         ?_Robot_Move_Forward 0001                   ?_EUSART_Async_Transmit_Data 0006  
                                      _timer0 00D5                                        isa$std 000001  
              __end_of_I2C_Pin_Configurations 51AA                stepper_move_one_deg_cw@stepper 0066  
                                __pdataCOMRAM 003A                                  __mediumconst 0000  
       EUSART_Async_Transmit_Data@_eusart_obj 0006                                        tblptrh 000FF7  
                       ??_Rx_config_interrupt 0020                                        tblptrl 000FF6  
                                      tblptru 000FF8                                     ?_CCP_Init 0069  
                      Get_Temp_HUM@RH_Decimal 0060                   CCP_PWM_Mode_Config@_ccp_obj 0021  
                   __end_ofi2_calc_parity_odd 4B20                          ??_Robot_Move_Forward 0026  
                                ___xxtofl@arg 0062                                  ___xxtofl@exp 0061  
                                ___xxtofl@val 001E                                    __accesstop 0060  
                     __end_of__initialization 4642      __end_of_Bluetooth_Send_Data_Non_Blocking 5056  
          ??_Bluetooth_Send_Data_Non_Blocking 000F             ?_Bluetooth_Send_Data_Non_Blocking 000C  
            _Bluetooth_Send_Data_Non_Blocking 502C                                     ?_INT1_ISR 0001  
                            _CCP_PWM_Set_Duty 294A                                 ___rparam_used 000001  
                    __end_of_calc_parity_even 4AB8                                    ___fltol@f1 0151  
            ??_MSSP_I2C_Master_Write_Blocking 0023               ?_MSSP_I2C_Master_Write_Blocking 001E  
                CCP_Interrupt_Config@_ccp_obj 001E                    _I2C_Report_Write_Collision 00CA  
                           ??_calc_parity_odd 001E                                __pcstackCOMRAM 0001  
                           ??_async_Rx_config 0023            MSSP_I2C_Master_Write_Blocking@_ack 0021  
                                __pidataBANK0 50F2                                  __pidataBANK1 4F50  
                                   ?_TMR0_ISR 0001         MSSP_I2C_Master_Write_Blocking@i2c_obj 001E  
                      ?_CCP_Mode_Timer_Select 001E                             ??_async_Tx_config 0020  
                   ?_Robot_Steer_Left_Forward 0001                           __end_of_Timer2_Init 4912  
                             ??_EUSART_Rx_ISR 0014    EUSART_Async_Read_Data_Blocking@_eusart_obj 006C  
                             ??_EUSART_Tx_ISR 0001                   ?_async_config_baud_rate_gen 0159  
                               _PCA_Write_Reg 4C54                                  _Get_Distance 34F4  
                   calc_parity_even@l_counter 0022                   __end_of_HAL_Timer0_Read_Val 4158  
                             _HAL_Timer0_Init 3602                                    ??_CCP_Init 006B  
                              _Robot_Nav_Init 464C                         CCP_PWM_Set_Duty@_duty 015B  
             __end_ofi2_GPIO_Pin_Toggle_Logic 48A4                                    __pbssBANK0 00AA  
                                  __pbssBANK1 012E                         _INT0_InterruptHandler 00C8  
                                  ??_INT1_ISR 001A                 __end_of_application_intialize 2EE6  
                                _Get_Temp_HUM 42B4                      _eusart_frameerr_CallBack 00D0  
                                  _datarecive 0032                   __end_of_InterruptManagerLow 0286  
                        calc_parity_even@data 0020                                    ??_TMR0_ISR 0001  
                 CCP_PWM_Set_Duty@l_duty_temp 0162                       ?_ECU_DC_Motor_Run_Right 0022  
                                     _ADC_ISR 51B0                              _Robot_Steer_Stop 50CC  
       __end_of_GPIO_Pin_Direction_Initialize 302A                 _GPIO_Pin_Direction_Initialize 2EE6  
           Ultra_Sonic_Init@ultrasonic_object 0069                                ?_PCA_Write_Reg 0060  
               HAL_Timer0_Read_Val@l_low_byte 0061                          _DHT11_Check_Response 4F7E  
                                     _RB4_ISR 5182                                       _RB5_ISR 5168  
                                     _RB6_ISR 514E                        Get_Temp_HUM@T_Integral 0066  
                                     _RB7_ISR 5134                                     ?___xxtofl 001E  
                   _RB6_InterruptHandler_HIGH 00BA                           _Robot_Move_Backward 3DBA  
                 __end_of_CCP_PWM_Mode_Config 43FC                    PCA_Write_Reg@slave_address 0062  
                      __end_of_Robot_Nav_Init 46D8                               _DHT11_Read_Data 452E  
          __end_of_MSSP_I2C_Master_Send_Start 4EEC                    _MSSP_I2C_Master_Send_Start 4EB4  
                          i2_calc_parity_even 4B20                EUSART_Async_Transmit_Data@data 0008  
                 ??_Robot_Steer_Right_Forward 0026                                _tris_registers 00E7  
                    __end_of_Ultra_Sonic_Init 4E2C                                 ??_DHT11_Start 001E  
                           ??_send_trig_pulse 0024                      _RB6_InterruptHandler_LOW 00B8  
                         ?i2_calc_parity_even 0001                                       _i2c_obj 00F1  
                    _stepper_move_one_deg_ccw 4BEE                                       __Hparam 0000  
                              _Servo_SetAngle 37FC                          ?_Robot_Move_Backward 0001  
                  _eusart_overrunerr_CallBack 00D2                                   _Timer2_Init 48A4  
                                     __Lparam 0000                  __end_of_CCP_Interrupt_Config 51B0  
             stepper_move_one_deg_ccw@stepper 0066                __end_of_ECU_DC_Motor_Run_Right 507E  
                                     ___fladd 1048                                       ___fldiv 1CEE  
                   stepper_move_one_deg_ccw@i 0068                                       ___flmul 150A  
             CCP_Compare_Mode_Config@_ccp_obj 0021                                       ___fltol 33D6  
                                __psmallconst 1000                  _Timer1_PreLoaded_Value_Store 0026  
                                     __pcinit 45BE                                       __ramtop 1000  
                       ?_DHT11_Check_Response 0001                                       __ptext0 208A  
                                     __ptext1 4B88                                       __ptext2 4BEE  
                                     __ptext3 4CBA                                       __ptext4 2DA2  
                                     __ptext5 4DD6                                       __ptext6 3602  
                                     __ptext7 464C                                       __ptext8 3AAC  
                                     __ptext9 316A                                     _T0CONbits 000FD5  
                        ??i2_calc_parity_even 0001                       __end_of_HAL_Timer0_Init 3702  
                                   _T1CONbits 000FCD                                       _counter 002B  
                                   _T2CONbits 000FCA                     ECU_DC_Motor_Init@dc_motor 0069  
                                  ??___xxtofl 0022                                     _T3CONbits 000FB1  
                                     _gpstemp 0039                       _CCP_Compare_Mode_Config 2AD2  
                           _EUSART_Async_Init 4D7A                               ?_Robot_Nav_Init 0001  
                    ?_CCP_Capture_Mode_Config 0021              MSSP_I2C_Master_Send_Stop@i2c_obj 001E  
                          ?_EUSART_Async_Init 0166                    ??i2_EUSART_Async_Read_Data 000A  
                              __pintcode_body 38E4                          end_of_initialization 4642  
                           ?_Ecu_Stepper_Init 0069                      GPIO_Pin_Read_Logic@logic 0020  
                            _ServoDriver_Init 3AAC                             ?_Ecu_Stepper_Step 0022  
                    PCA_Write_Reg@reg_address 0063                calc_parity_even@number_of_ones 0021  
            i2calc_parity_even@number_of_ones 0004                                       int_func 38E4  
                          ??_Ecu_Stepper_Init 0026                        __end_of_Servo_SetAngle 38E4  
                          ??_Ecu_Stepper_Step 0024                           ??_EUSART_Async_Init 0026  
           async_config_baud_rate_gen@ret_val 015D                            Timer2_Init@_timer2 001E  
                       i2calc_parity_odd@data 0003                  i2EUSART_Async_Read_Data@data 0008  
                       ??_Robot_Move_Backward 0026                      CCP_PWM_Set_Duty@_ccp_obj 0159  
                                   _RCSTAbits 000FAB                           __end_of_DHT11_Start 5134  
                                     postdec1 000FE5                                       postdec2 000FDD  
                                     postinc0 000FEE                                       postinc2 000FDE  
                             ??_PCA_Write_Reg 0023                     _Robot_Steer_Right_Forward 3B7A  
                           __end_of_usart_isr 4F50                         _INT1_InterruptHandler 00C6  
                                   _PORTBbits 000F81                         _GPIO_Pin_Toggle_Logic 47C4  
                                   _PORTDbits 000F83                      __end_of_CCP_PWM_Set_Duty 2AD2  
                     __end_of_DHT11_Read_Data 45BE                     __end_of_EUSART_Async_Init 4DD6  
                                 ___fladd@grs 00A7                ?_GPIO_Pin_Direction_Initialize 001E  
                               ___xxtofl@sign 0060                         Servo_SetAngle@i2c_obj 0159  
                                   _TRISBbits 000F93                                     _TRISCbits 000F94  
                                   _TRISDbits 000F95                         RB4_ISR@Handler_Select 001A  
                       RB7_ISR@Handler_Select 001A                                   ___fldiv@grs 0079  
                                 ___fldiv@rem 0072                       Get_Temp_HUM@RH_Integral 0062  
                     Ecu_Stepper_Init@stepper 0069           EUSART_Async_Read_Data_Blocking@data 006E  
                             _calc_parity_odd 49E8                               _async_Rx_config 4158  
                                 ___flmul@grs 008D                             PCA_Write_Reg@data 0064  
                        Get_Distance@distance 0083              __end_of_Robot_Steer_Left_Forward 3CFA  
                                 _CCP1CONbits 000FBD                               _async_Tx_config 449E  
                            CCP_Init@_ccp_obj 0069                               ?_Servo_SetAngle 0159  
                                 _CCP2CONbits 000FBA                                     _TXSTAbits 000FAC  
                  ?_Robot_Steer_Left_Backward 0001                             ?_calc_parity_even 0001  
                     ??_CCP_Mode_Timer_Select 0020                                    _ultrasonic 00FC  
                  CCP_Capture_Mode_Config@ret 0025                                 _CCP_PWM_Start 4D1E  
                  EUSART_Async_Read_Data@data 0062                            ??_calc_parity_even 001E  
                                   _T_Decimal 0036                        async_Rx_config@_rx_obj 0021  
                  CCP_Compare_Mode_Config@ret 0025                 convert_uint16_to_string@F3421 00AA  
                       _ECU_DC_Motor_Run_Left 507E                        ??_DHT11_Check_Response 001E  
                                 _BAUDCONbits 000FB8                                 __pidataCOMRAM 519C  
                 __end_of_Rx_config_interrupt 449E              send_trig_pulse@ultrasonic_object 0022  
                   ??_CCP_Compare_Mode_Config 0023                        async_Rx_config@ret_val 0023  
                            ?_HAL_Timer0_Init 0023               __end_of_CCP_Capture_Mode_Config 316A  
                    EUSART_Async_Init@ret_val 0168                           start_initialization 45BE  
         i2EUSART_Async_Read_Data@_eusart_obj 0006             EUSART_Async_Read_Data@_eusart_obj 0060  
             GPIO_Pin_Write_Logic@_pin_config 001E                          _CCP_Interrupt_Config 51AE  
                    ??_EUSART_Async_Read_Data 0023                          Get_Temp_HUM@Checksum 0068  
                    __end_of_Robot_Steer_Stop 50F2                                   _DHT11_Start 5116  
           __end_of_Robot_Steer_Left_Backward 3FEE                                ?_CCP_PWM_Start 001E  
              GPIO_Pin_Initialize@_pin_config 0066                                   __pdataBANK0 00DD  
                                 __pdataBANK1 0100                                      ?_ADC_ISR 0001  
                      ?_GPIO_Pin_Toggle_Logic 001E                         __end_of_EUSART_Rx_ISR 5002  
                                   ___fladd@a 009C                                     ___fladd@b 0098  
                            ?_DHT11_Read_Data 001E                         __end_of_EUSART_Tx_ISR 51B6  
                        MSSP_I2C_Init@i2c_obj 015C                                     ___fldiv@a 006A  
                                   ___fldiv@b 0066                                      ?_RB4_ISR 0001  
                                    ?_RB5_ISR 0001                                      ?_RB6_ISR 0001  
                                    ?_RB7_ISR 0001                                     ___flmul@a 0083  
                                   ___flmul@b 007F                                   __pbssCOMRAM 0026  
                     __end_of_calc_parity_odd 4A50                       __end_of_async_Rx_config 4206  
                             _send_trig_pulse 4FAA                           Servo_SetAngle@angle 015E  
                               __pcstackBANK0 0060                                 __pcstackBANK1 0151  
               i2_EUSART_Async_Read_Data$2031 000C                 i2_EUSART_Async_Read_Data$2032 000E  
               i2_EUSART_Async_Read_Data$2033 0010                         ?_CCP_Interrupt_Config 001E  
                  ??_stepper_move_one_deg_ccw 0026                       __end_of_async_Tx_config 452E  
                 ?_MSSP_I2C_Master_Send_Start 001E                              DHT11_Read_Data@i 0021  
                               ??_GPS_Service 0070                         _INT2_InterruptHandler 00C4  
                           ?_Ultra_Sonic_Init 0069                           calc_parity_odd@data 0020  
              HAL_Timer0_Read_Val@l_high_byte 0060                            ??_Ultra_Sonic_Init 0026  
                __end_of_InterruptManagerHigh 39C8                                  ?_Timer2_Init 001E  
                               _MSSP_I2C_Init 316A                         _application_intialize 2DA2  
                    _Robot_Steer_Left_Forward 3C3A                                     __pintcode 0008  
                    ??_I2C_Pin_Configurations 001E                        ?_ECU_DC_Motor_Run_Left 0022  
                __end_of_GPIO_Pin_Write_Logic 33D6                                      ?___fladd 0098  
                                    ?___fldiv 0066                                     __uart_obj 010A  
                                    ?___flmul 007F               GPIO_Pin_Write_Logic@ERRORSTATUS 0021  
                                    ?___fltol 0151                  __end_of_HAL_Timer0_Write_Val 502C  
                  Rx_config_interrupt@_rx_obj 001E                       i2_GPIO_Pin_Toggle_Logic 4834  
                    __end_of_ServoDriver_Init 3B7A                                   __pintcodelo 0018  
               HAL_Timer0_Write_Val@ret_value 0022                              ??_Robot_Nav_Init 0026  
                                 __smallconst 1000                     _RB4_InterruptHandler_HIGH 00C2  
                           Get_Distance@logic 0087                    Rx_config_interrupt@ret_val 0020  
                                    _CCP1_Obj 0122                                      _CCP2_Obj 0116  
                     _stepper_move_one_deg_cw 4B88                       ServoDriver_Init@i2c_obj 015E  
                   _RB7_InterruptHandler_HIGH 00B6                 CCP_Mode_Timer_Select@_ccp_obj 001E  
                                    _CCP_Init 3702           i2EUSART_Async_Read_Data@l_temp_data 0012  
           EUSART_Async_Read_Data@l_temp_data 006A                        async_Tx_config@_tx_obj 001E  
              GPIO_Pin_Initialize@ERRORSTATUS 0068   __end_of_I2C_Slave_Mode_Clock_Configurations 4F1E  
       ??_I2C_Slave_Mode_Clock_Configurations 0020          ?_I2C_Slave_Mode_Clock_Configurations 001E  
         _I2C_Slave_Mode_Clock_Configurations 4EEC                convert_float32_to_string@F3432 012E  
                    _RB5_InterruptHandler_LOW 00BC                                      _INT1_ISR 51AA  
                      async_Tx_config@ret_val 0020                                      _LATDbits 000F8C  
            HAL_Timer0_Write_Val@_tmr0_config 001E                               ??_CCP_PWM_Start 0020  
                                    _IPR1bits 000F9F                                      _PIE1bits 000F9D  
                                    _PIE2bits 000FA0                                ?_MSSP_I2C_Init 015C  
                ??_Robot_Steer_Right_Backward 0026                           __end_of_GPS_Service 2DA2  
                                    i1u825_20 5196                                      i1u825_21 5192  
                                    _PIR1bits 000F9E                                      i1u826_20 517C  
                                    i1u930_20 00A2                                      i1u826_21 5178  
                                    i1u930_21 009E                                      i1u827_20 5162  
                                    i1u931_20 00B0                                      i1u923_20 0034  
                                    i1u827_21 515E                                      i1u931_21 00AC  
                                    i1u923_21 0030                                      _PIR2bits 000FA1  
                                    i1u828_20 5148                                      i1u940_20 013E  
                                    i1u932_20 00BE                                      i1u924_20 0042  
                                    i1u828_21 5144                                      i1u940_21 013A  
                                    i1u932_21 00BA                                      i1u924_21 003E  
                                    i1u941_20 0154                                      i1u933_20 00D4  
                                    i1u925_20 0054                                      i1u941_21 0150  
                                    i1u933_21 00D0                                      i1u925_21 0050  
                                    i1u950_20 01E2                                      i1u942_20 0162  
                                    i1u934_20 00E2                                      i1u926_20 0062  
                                    i1u950_21 01DE                                      i1u942_21 015E  
                                    i1u934_21 00DE                                      i1u926_21 005E  
                                    i1u951_20 01F0                                      i1u943_20 0170  
                                    i1u935_20 00F0                                      i1u927_20 0070  
                                    i1u951_21 01EC                                      i1u943_21 016C  
                                    i1u935_21 00EC                                      i1u927_21 006C  
                                    i1u952_20 01FE                                      i1u944_20 017E  
                                    i1u936_20 00FE                                      i1u928_20 007E  
                                    i1u952_21 01FA                                      i1u944_21 017A  
                                    i1u936_21 00FA                                      i1u928_21 007A  
                                    i2u640_44 4AD8                                      i1u953_20 0214  
                                    i1u945_20 0194                                      i1u937_20 0114  
                                    i1u929_20 0094                                      i2u640_45 4AD4  
                                    i1u953_21 0210                                      i1u945_21 0190  
                                    i1u937_21 0110                                      i1u929_21 0090  
                                    i2u641_40 4AF2                                      i2u705_40 503E  
                                    i2u641_41 4AEE                                      i2u705_41 503A  
                                    i1u954_20 0222                                      i1u946_20 01A2  
                                    i1u938_20 0122                                      i1u954_21 021E  
                                    i1u946_21 019E                                      i1u938_21 011E  
                                    i2u642_40 4B06                                      i2u650_40 3A18  
                                    i2u642_41 4B02                                      i2u650_41 3A14  
                                    i1u955_20 0230                                      i1u947_20 01B0  
                                    i1u939_20 0130                                      i1u955_21 022C  
                                    i1u947_21 01AC                                      i1u939_21 012C  
                                    i2u643_40 4B16                                      i2u643_41 4B12  
                                    i1u956_20 023E                                      i1u948_20 01BE  
                                    i2u651_45 3A30                                      i1u956_21 023A  
                                    i1u948_21 01BA                                      i2u651_47 3A32  
                                    i2u652_40 3A56                                      i2u652_41 3A52  
                                    i2u644_44 4B40                                      i1u957_20 0254  
                                    i1u949_20 01D4                                      i2u644_45 4B3C  
                                    i1u957_21 0250                                      i1u949_21 01D0  
                                    i2u645_40 4B5A                                      i2u821_40 4FE8  
                                    i2u645_41 4B56                                      i2u821_41 4FE4  
                                    i1u958_20 0262                                      i2u653_45 3A68  
                                    i1u958_21 025E                                      i2u653_47 3A6A  
                                    i2u646_40 4B6E                                      i2u654_40 3A8E  
                                    i2u646_41 4B6A                                      i2u654_41 3A8A  
                                    i1u959_20 0274                                      i1u959_21 0270  
                                    i2u647_40 4B7E                                      i2u822_48 4FEE  
                                    i2u647_41 4B7A                                      i2u822_49 5000  
                                    i2u655_45 3AA0                                      i2u655_47 3AA2  
                                    i2u648_40 39DA                                      i2u760_40 2648  
                                    i2u920_40 3988                                      i2u912_40 390A  
                                    i2u648_41 39D6                                      i2u760_41 2644  
                                    i2u920_41 3984                                      i2u912_41 3906  
                                    i2u649_40 39F8                                      i2u761_40 2698  
                                    i2u921_40 399A                                      i2u913_40 3918  
                                    i2u649_41 39F4                                      i2u761_41 2694  
                                    i2u921_41 3996                                      i2u913_41 3914  
                                    i2u762_40 26AC                                      i2u754_40 25A2  
                                    i2u922_40 39AA                                      i2u914_40 392A  
                                    i2u762_41 26A8                                      i2u754_41 259E  
                                    i2u922_41 39A6                                      i2u914_41 3926  
                                    i2u770_44 4866                                      i2u770_45 4862  
                                    i2u763_40 26E2                                      i2u755_40 25B4  
                                    i2u915_40 393A                                      i2u763_41 26DE  
                                    i2u755_41 25B0                                      i2u915_41 3936  
                                    i2u764_40 2722                                      i2u756_40 25C6  
                                    i2u916_40 394A                                      i2u764_41 271E  
                                    i2u756_41 25C2                                      i2u916_41 3946  
                                    i2u765_40 2736                                      i2u757_40 25E0  
                                    i2u917_40 395A                                      i2u765_41 2732  
                                    i2u757_41 25DC                                      i2u917_41 3956  
                                    i2u766_40 276C                                      i2u758_40 2614  
                                    i2u918_40 3968                                      i2u766_41 2768  
                                    i2u758_41 2610                                      i2u918_41 3964  
                                    i2u767_40 277E                                      i2u759_40 2634  
                                    i2u919_40 397A                                      i2u767_41 277A  
                                    i2u759_41 2630                                      i2u919_41 3976  
                                    i2u768_40 278C                                      i2u768_41 2788  
                                    i2u769_40 4846                                      i2u769_41 4842  
                                   _servo1Pos 0030                                     _servo2Pos 002F  
                                   _servo3Pos 002E                                      _RCONbits 000FD0  
                                   _servo4Pos 002D                                      _TMR0_ISR 51B2  
                                    _TEST_PIN 0041                       __end_of_send_trig_pulse 4FD6  
                _Timer2_PreLoaded_Value_Store 0031                   _I2C_Report_Receive_Overflow 00CC  
                ??_EUSART_Async_Transmit_Data 000A                                    _ADCON0bits 000FC2  
                                  _ADCON1bits 000FC1                                    _ADCON2bits 000FC0  
                           ?_CCP_PWM_Set_Duty 0159                              PCA_Write_Reg@ack 0023  
                                    _Checksum 0034                                     _usart_isr 4F1E  
                            ?_calc_parity_odd 0001                            ??_CCP_PWM_Set_Duty 015C  
                            ?_async_Rx_config 0021                        ??_CCP_Interrupt_Config 0020  
                 i2calc_parity_even@l_counter 0005                     HAL_Timer0_Read_Val@result 0020  
                            ?_async_Tx_config 001E                              ??_Servo_SetAngle 0026  
                                 _INTCON2bits 000FF1                                   _INTCON3bits 000FF0  
                                   copy_data0 45D2                                     copy_data1 45F2  
                                   copy_data2 4612                   __end_of_Robot_Move_Backward 3E7A  
                 _EUSART_Async_Read_Data$2031 0064                   _EUSART_Async_Read_Data$2032 0066  
                 _EUSART_Async_Read_Data$2033 0068                           _GPIO_Pin_Read_Logic 4206  
             HAL_Timer0_Read_Val@_tmr0_config 001E                        ?_application_intialize 0001  
                 ??_Robot_Steer_Left_Backward 0026                           _GPIO_Pin_Initialize 4E2C  
                                    __Hrparam 0000                                      __Lrparam 0000  
                   ??i2_GPIO_Pin_Toggle_Logic 0003                 __end_of_CCP_Mode_Timer_Select 47C4  
                   ?i2_EUSART_Async_Read_Data 0006                        _EUSART_Async_Read_Data 2378  
                   GPIO_Pin_Write_Logic@logic 0020                         __end_of_PCA_Write_Reg 4CBA  
                        ?_GPIO_Pin_Read_Logic 001E                     ??_stepper_move_one_deg_cw 0026  
                               _preloaded_val 00B2                    ?_MSSP_I2C_Master_Send_Stop 001E  
                ??_async_config_baud_rate_gen 015B             MSSP_I2C_Master_Send_Start@i2c_obj 001E  
                        ?_GPIO_Pin_Initialize 0066                                      ___xxtofl 2792  
                                  ?_usart_isr 0001                                      _datasend 003A  
            __end_of_stepper_move_one_deg_ccw 4C54                                 ?_Get_Distance 007F  
                       RB6_ISR@Handler_Select 001A                          _InterruptManagerHigh 0008  
             _async_config_baud_rate_gen$5753 0162                                      __ptext10 4EEC  
                                    __ptext11 51A4                                      __ptext20 302A  
                                    __ptext12 3FEE                                      __ptext21 4754  
                                    __ptext13 50A6                                      __ptext30 3B7A  
                                    __ptext22 46D8                                      __ptext14 4D1E  
                                    __ptext31 3E7A                                      __ptext23 4E2C  
                                    __ptext15 3702                                      __ptext40 4980  
                                    __ptext32 3C3A                                      __ptext24 2EE6  
                                    __ptext16 435A                                      __ptext41 4E7C  
                                    __ptext33 3F34                                      __ptext25 4D7A  
                                    __ptext17 48A4                                      __ptext50 452E  
                                    __ptext42 4EB4                                      __ptext34 3CFA  
                                    __ptext26 1936                                      __ptext18 51AE  
                                    __ptext51 4F7E                                      __ptext43 50CC  
                                    __ptext35 5056                                      __ptext27 449E  
                                    __ptext19 2AD2                                      __ptext60 32A8  
                                    __ptext52 34F4                                      __ptext44 294A  
                                    __ptext36 3DBA                                      __ptext28 4158  
                                    __ptext61 4912                                      __ptext53 4FAA  
                                    __ptext45 33D6                                      __ptext37 37FC  
                                    __ptext29 43FC                                      __ptext70 5182  
                                    __ptext62 2378                                      __ptext54 2792  
                                    __ptext46 150A                                      __ptext38 1048  
                                    __ptext71 51AA                                      __ptext63 49E8  
                                    __ptext55 1CEE                                      __ptext47 507E  
                                    __ptext39 4C54                                      __ptext80 502C  
                                    __ptext72 51B0                                      __ptext64 4A50  
                                    __ptext56 5002                                      __ptext48 42B4  
                                    __ptext81 39C8                                      __ptext65 47C4  
                                    __ptext57 40A6                                      __ptext49 5116  
                                    __ptext82 4AB8                                      __ptext74 51B2  
                                    __ptext58 4206                                      __ptext83 4B20  
                                    __ptext75 51B4                                      __ptext67 5134  
                                    __ptext59 2C3A                                      __ptext84 0000  
                                    __ptext76 4FD6                                      __ptext68 514E  
                                    __ptext77 4F1E                                      __ptext69 5168  
                                    __ptext78 4834                                      __ptext79 2588  
   Bluetooth_Send_Data_Non_Blocking@_uart_obj 000C    I2C_Slave_Mode_Clock_Configurations@i2c_obj 001E  
 I2C_Master_Mode_Clock_Configurations@i2c_obj 0159                      _Timer1_Interrupt_Handler 00B0  
                                    _distance 00D9                          _GPIO_Pin_Write_Logic 32A8  
                           _ECU_DC_Motor_Init 50A6                          _HAL_Timer0_Write_Val 5002  
                                 _GPS_Service 2C3A                Servo_SetAngle@servo_driver_obj 015B  
                                    _latitude 0144                             ?_Robot_Steer_Stop 0001  
                          ?_ECU_DC_Motor_Init 0069                               ??_MSSP_I2C_Init 0026  
                                ?_DHT11_Start 0001                      ??_ECU_DC_Motor_Run_Right 0024  
                               ?_Get_Temp_HUM 0060                            ??_Robot_Steer_Stop 0026  
                                    _longtude 0137                                      _selector 0040  
     __end_of_EUSART_Async_Read_Data_Blocking 4980             ??_EUSART_Async_Read_Data_Blocking 0025  
            ?_EUSART_Async_Read_Data_Blocking 006C               _EUSART_Async_Read_Data_Blocking 4912  
                         ??_ECU_DC_Motor_Init 0026                       ??_GPIO_Pin_Toggle_Logic 0020  
                                    isa$xinst 000000                                      int$flags 0042  
                       ??_GPIO_Pin_Read_Logic 0060                              ?_send_trig_pulse 0022  
                       ??_GPIO_Pin_Initialize 0026                           _HAL_Timer0_Read_Val 40A6  
                   _Robot_Steer_Left_Backward 3F34             __end_of_MSSP_I2C_Master_Send_Stop 4EB4  
                                  _INTCONbits 000FF2                 calc_parity_odd@number_of_ones 0021  
             i2calc_parity_odd@number_of_ones 0004                       Ecu_Stepper_Step@stepper 0022  
                              ??_Get_Distance 0026                         ?_InterruptManagerHigh 0001  
                   __end_of_ECU_DC_Motor_Init 50CC                        _I2C_Pin_Configurations 51A4  
                  __end_of_Robot_Move_Forward 3DBA                 ECU_DC_Motor_Run_Left@dc_motor 0022  
                       ?_GPIO_Pin_Write_Logic 001E                      stepper_move_one_deg_cw@i 0068  
                       ?_HAL_Timer0_Write_Val 001E                                      intlevel1 0000  
                                    intlevel2 0000                    ??_Robot_Steer_Left_Forward 0026  
             __end_of_stepper_move_one_deg_cw 4BEE                           _InterruptManagerLow 0018  
                              ??_Get_Temp_HUM 0022                    i2calc_parity_odd@l_counter 0005  
                        ?_HAL_Timer0_Read_Val 001E            __end_of_Robot_Steer_Right_Backward 3F34  
                  _Robot_Steer_Right_Backward 3E7A      GPIO_Pin_Direction_Initialize@_pin_config 001E  
                                  _RCSTA1bits 000FAB                       ??_ECU_DC_Motor_Run_Left 0024  
                     _CCP_Capture_Mode_Config 302A                        i2calc_parity_even@data 0003  
                    ?_CCP_Compare_Mode_Config 0021                              _Ecu_Stepper_Init 46D8  
                            _Ecu_Stepper_Step 4CBA            __end_of_EUSART_Async_Transmit_Data 3AAC  
                  _EUSART_Async_Transmit_Data 39C8                    Servo_SetAngle@angle_in_reg 015F  
                        ?_InterruptManagerLow 0001                             ?_ServoDriver_Init 015E  
                         _CCP_PWM_Mode_Config 435A                            ??_ServoDriver_Init 0026  
                              _port_registers 0100                        _W2_W4_W6_Motor_Control 00FE  
                                 ??_usart_isr 0014        __end_of_MSSP_I2C_Master_Write_Blocking 49E8  
              _MSSP_I2C_Master_Write_Blocking 4980                                   _SSPCON1bits 000FC6  
                                 _SSPCON2bits 000FC5                                    _WDTCONbits 000FD1  
                               ___fladd@signs 00A4                 Get_Distance@ultrasonic_object 007F  
                        ?_CCP_PWM_Mode_Config 0021                                  ___fladd@aexp 00A5  
                                ___fladd@bexp 00A6                         ??_HAL_Timer0_Read_Val 0022  
                EUSART_Async_Init@_eusart_obj 0166                                    _RH_Decimal 0038  
