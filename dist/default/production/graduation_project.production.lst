

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 02 12:24:15 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4620 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  001500                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _port_registers
    77  001500  80                 	db	128
    78  001501  0F                 	db	15
    79  001502  81                 	db	129
    80  001503  0F                 	db	15
    81  001504  82                 	db	130
    82  001505  0F                 	db	15
    83  001506  83                 	db	131
    84  001507  0F                 	db	15
    85  001508  84                 	db	132
    86  001509  0F                 	db	15
    87                           
    88                           ;initializer for _lat_registers
    89  00150A  89                 	db	137
    90  00150B  0F                 	db	15
    91  00150C  8A                 	db	138
    92  00150D  0F                 	db	15
    93  00150E  8B                 	db	139
    94  00150F  0F                 	db	15
    95  001510  8C                 	db	140
    96  001511  0F                 	db	15
    97  001512  8D                 	db	141
    98  001513  0F                 	db	15
    99                           
   100                           ;initializer for _tris_registers
   101  001514  92                 	db	146
   102  001515  0F                 	db	15
   103  001516  93                 	db	147
   104  001517  0F                 	db	15
   105  001518  94                 	db	148
   106  001519  0F                 	db	15
   107  00151A  95                 	db	149
   108  00151B  0F                 	db	15
   109  00151C  96                 	db	150
   110  00151D  0F                 	db	15
   111                           
   112                           ;initializer for _dir_pin1
   113  00151E  12                 	db	18
   114                           
   115                           ;initializer for _step_pin1
   116  00151F  11                 	db	17
   117                           
   118                           ;initializer for _flags
   119  001520  0F                 	db	15
   120                           
   121                           ;initializer for _CCP2_Obj
   122  001521  01                 	db	1
   123  001522  02                 	db	2
   124  001523  00                 	db	0
   125  001524  11                 	db	17
   126  001525  00                 	db	0
   127  001526  01F4               	dw	500
   128  001528  0000               	dw	0
   129  00152A  F9                 	db	249
   130  00152B  00                 	db	0
   131  00152C  0F                 	db	15
   132                           
   133                           ;initializer for _CCP1_Obj
   134  00152D  00                 	db	0
   135  00152E  02                 	db	2
   136  00152F  00                 	db	0
   137  001530  12                 	db	18
   138  001531  00                 	db	0
   139  001532  01F4               	dw	500
   140  001534  0000               	dw	0
   141  001536  F9                 	db	249
   142  001537  00                 	db	0
   143  001538  0F                 	db	15
   144                           
   145                           ;initializer for _W2_W4_W6_Motor_Control
   146  001539  1A                 	db	26
   147  00153A  1B                 	db	27
   148                           
   149                           ;initializer for _W1_W3_W5_Motor_Control
   150  00153B  18                 	db	24
   151  00153C  19                 	db	25
   152  0000                     _INTCON2bits	set	4081
   153  0000                     _SSPSTATbits	set	4039
   154  0000                     _SSPADD	set	4040
   155  0000                     _SSPCON2bits	set	4037
   156  0000                     _SSPCON1bits	set	4038
   157  0000                     _SPBRGH	set	4016
   158  0000                     _SPBRG	set	4015
   159  0000                     _RCREG	set	4014
   160  0000                     _TXREG	set	4013
   161  0000                     _TRISCbits	set	3988
   162  0000                     _TXSTA1bits	set	4012
   163  0000                     _PR2	set	4043
   164  0000                     _ADCON1bits	set	4033
   165  0000                     _ADRESL	set	4035
   166  0000                     _ADRESH	set	4036
   167  0000                     _TRISD	set	3989
   168  0000                     _TRISB	set	3987
   169  0000                     _TRISE	set	3990
   170  0000                     _PORTDbits	set	3971
   171  0000                     _LATDbits	set	3980
   172  0000                     _TRISDbits	set	3989
   173  0000                     _TRISBbits	set	3987
   174  0000                     _PORTBbits	set	3969
   175  0000                     _RCSTA1bits	set	4011
   176  0000                     _TXSTAbits	set	4012
   177  0000                     _TRISC	set	3988
   178  0000                     _RX9D	set	32088
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _PORTE	set	3972
   182  0000                     _PORTD	set	3971
   183  0000                     _PORTC	set	3970
   184  0000                     _PORTB	set	3969
   185  0000                     _PORTA	set	3968
   186  0000                     _LATA	set	3977
   187  0000                     _TRISA	set	3986
   188  0000                     _PIE1bits	set	3997
   189  0000                     _RCSTAbits	set	4011
   190  0000                     _T3CONbits	set	4017
   191  0000                     _CCP2CONbits	set	4026
   192  0000                     _CCP1CONbits	set	4029
   193  0000                     _CCPR1L	set	4030
   194  0000                     _CCPR2L	set	4027
   195  0000                     _RCONbits	set	4048
   196  0000                     _BAUDCONbits	set	4024
   197  0000                     _IPR2bits	set	4002
   198  0000                     _PIR2bits	set	4001
   199  0000                     _PIE2bits	set	4000
   200  0000                     _IPR1bits	set	3999
   201  0000                     _PIR1bits	set	3998
   202  0000                     _WDTCONbits	set	4049
   203  0000                     _T0CONbits	set	4053
   204  0000                     _INTCON3bits	set	4080
   205  0000                     _INTCONbits	set	4082
   206  0000                     _LATE	set	3981
   207  0000                     _LATD	set	3980
   208  0000                     _LATC	set	3979
   209  0000                     _LATB	set	3978
   210  0000                     _SSPBUF	set	4041
   211  0000                     _TMR0H	set	4055
   212  0000                     _TMR0L	set	4054
   213                           
   214                           	psect	smallconst
   215  001000                     __psmallconst:
   216                           	callstack 0
   217  001000  00                 	db	0
   218  001001  41                 	db	65	;'A'
   219  001002  54                 	db	84	;'T'
   220  001003  2B                 	db	43
   221  001004  55                 	db	85	;'U'
   222  001005  41                 	db	65	;'A'
   223  001006  52                 	db	82	;'R'
   224  001007  54                 	db	84	;'T'
   225  001008  3A                 	db	58	;':'
   226  001009  39                 	db	57	;'9'
   227  00100A  36                 	db	54	;'6'
   228  00100B  30                 	db	48	;'0'
   229  00100C  30                 	db	48	;'0'
   230  00100D  2C                 	db	44
   231  00100E  30                 	db	48	;'0'
   232  00100F  2C                 	db	44
   233  001010  30                 	db	48	;'0'
   234  001011  0D                 	db	13
   235  001012  0A                 	db	10
   236  001013  00                 	db	0
   237  001014  41                 	db	65	;'A'
   238  001015  54                 	db	84	;'T'
   239  001016  2B                 	db	43
   240  001017  52                 	db	82	;'R'
   241  001018  4E                 	db	78	;'N'
   242  001019  41                 	db	65	;'A'
   243  00101A  4D                 	db	77	;'M'
   244  00101B  45                 	db	69	;'E'
   245  00101C  3A                 	db	58	;':'
   246  00101D  52                 	db	82	;'R'
   247  00101E  6F                 	db	111	;'o'
   248  00101F  62                 	db	98	;'b'
   249  001020  6F                 	db	111	;'o'
   250  001021  74                 	db	116	;'t'
   251  001022  0D                 	db	13
   252  001023  0A                 	db	10
   253  001024  00                 	db	0
   254  001025  41                 	db	65	;'A'
   255  001026  54                 	db	84	;'T'
   256  001027  2B                 	db	43
   257  001028  50                 	db	80	;'P'
   258  001029  53                 	db	83	;'S'
   259  00102A  57                 	db	87	;'W'
   260  00102B  44                 	db	68	;'D'
   261  00102C  3A                 	db	58	;':'
   262  00102D  31                 	db	49	;'1'
   263  00102E  32                 	db	50	;'2'
   264  00102F  33                 	db	51	;'3'
   265  001030  34                 	db	52	;'4'
   266  001031  0D                 	db	13
   267  001032  0A                 	db	10
   268  001033  00                 	db	0
   269  001034  41                 	db	65	;'A'
   270  001035  54                 	db	84	;'T'
   271  001036  2B                 	db	43
   272  001037  52                 	db	82	;'R'
   273  001038  4F                 	db	79	;'O'
   274  001039  4C                 	db	76	;'L'
   275  00103A  45                 	db	69	;'E'
   276  00103B  3A                 	db	58	;':'
   277  00103C  30                 	db	48	;'0'
   278  00103D  0D                 	db	13
   279  00103E  0A                 	db	10
   280  00103F  00                 	db	0
   281  001040                     STR_9:
   282  001040  25                 	db	37
   283  001041  66                 	db	102	;'f'
   284  001042  00                 	db	0
   285  001043                     STR_5:
   286  001043  25                 	db	37
   287  001044  69                 	db	105	;'i'
   288  001045  00                 	db	0
   289  001046  00                 	db	0	; dummy byte at the end
   290  0000                     
   291                           ; #config settings
   292                           
   293                           	psect	cinit
   294  0014BE                     __pcinit:
   295                           	callstack 0
   296  0014BE                     start_initialization:
   297                           	callstack 0
   298  0014BE                     __initialization:
   299                           	callstack 0
   300                           
   301                           ; Initialize objects allocated to COMRAM (61 bytes)
   302                           ; load TBLPTR registers with __pidataCOMRAM
   303  0014BE  0E00               	movlw	low __pidataCOMRAM
   304  0014C0  6EF6               	movwf	tblptrl,c
   305  0014C2  0E15               	movlw	high __pidataCOMRAM
   306  0014C4  6EF7               	movwf	tblptrh,c
   307  0014C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   308  0014C8  6EF8               	movwf	tblptru,c
   309  0014CA  EE00  F001         	lfsr	0,__pdataCOMRAM
   310  0014CE  EE10 F03D          	lfsr	1,61
   311  0014D2                     copy_data0:
   312  0014D2  0009               	tblrd		*+
   313  0014D4  CFF5 FFEE          	movff	tablat,postinc0
   314  0014D8  50E5               	movf	postdec1,w,c
   315  0014DA  50E1               	movf	fsr1l,w,c
   316  0014DC  E1FA               	bnz	copy_data0
   317                           
   318                           ; Clear objects allocated to BANK0 (15 bytes)
   319  0014DE  EE00  F080         	lfsr	0,__pbssBANK0
   320  0014E2  0E0F               	movlw	15
   321  0014E4                     clear_0:
   322  0014E4  6AEE               	clrf	postinc0,c
   323  0014E6  06E8               	decf	wreg,f,c
   324  0014E8  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to COMRAM (41 bytes)
   327  0014EA  EE00  F03E         	lfsr	0,__pbssCOMRAM
   328  0014EE  0E29               	movlw	41
   329  0014F0                     clear_1:
   330  0014F0  6AEE               	clrf	postinc0,c
   331  0014F2  06E8               	decf	wreg,f,c
   332  0014F4  E1FD               	bnz	clear_1
   333  0014F6                     end_of_initialization:
   334                           	callstack 0
   335  0014F6                     __end_of__initialization:
   336                           	callstack 0
   337  0014F6  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   338  0014F8  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   339  0014FA  0100               	movlb	0
   340  0014FC  EF3C  F00A         	goto	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMRAM
   343  00003E                     __pbssCOMRAM:
   344                           	callstack 0
   345  00003E                     _counter:
   346                           	callstack 0
   347  00003E                     	ds	2
   348  000040                     _preloaded_val:
   349                           	callstack 0
   350  000040                     	ds	2
   351  000042                     _RB7_InterruptHandler_LOW:
   352                           	callstack 0
   353  000042                     	ds	2
   354  000044                     _RB7_InterruptHandler_HIGH:
   355                           	callstack 0
   356  000044                     	ds	2
   357  000046                     _RB6_InterruptHandler_LOW:
   358                           	callstack 0
   359  000046                     	ds	2
   360  000048                     _RB6_InterruptHandler_HIGH:
   361                           	callstack 0
   362  000048                     	ds	2
   363  00004A                     _RB5_InterruptHandler_LOW:
   364                           	callstack 0
   365  00004A                     	ds	2
   366  00004C                     _RB5_InterruptHandler_HIGH:
   367                           	callstack 0
   368  00004C                     	ds	2
   369  00004E                     _RB4_InterruptHandler_LOW:
   370                           	callstack 0
   371  00004E                     	ds	2
   372  000050                     _RB4_InterruptHandler_HIGH:
   373                           	callstack 0
   374  000050                     	ds	2
   375  000052                     _INT2_InterruptHandler:
   376                           	callstack 0
   377  000052                     	ds	2
   378  000054                     _INT1_InterruptHandler:
   379                           	callstack 0
   380  000054                     	ds	2
   381  000056                     _INT0_InterruptHandler:
   382                           	callstack 0
   383  000056                     	ds	2
   384  000058                     _I2C_Report_Write_Collision:
   385                           	callstack 0
   386  000058                     	ds	2
   387  00005A                     _I2C_Report_Receive_Overflow:
   388                           	callstack 0
   389  00005A                     	ds	2
   390  00005C                     _I2C_DefaultInterruptHandler:
   391                           	callstack 0
   392  00005C                     	ds	2
   393  00005E                     _eusart_frameerr_CallBack:
   394                           	callstack 0
   395  00005E                     	ds	2
   396  000060                     _eusart_overrunerr_CallBack:
   397                           	callstack 0
   398  000060                     	ds	2
   399  000062                     _eusart_Rx_InterruptHandler:
   400                           	callstack 0
   401  000062                     	ds	2
   402  000064                     _Movement_State:
   403                           	callstack 0
   404  000064                     	ds	1
   405  000065                     _stepper1:
   406                           	callstack 0
   407  000065                     	ds	2
   408                           
   409                           	psect	dataCOMRAM
   410  000001                     __pdataCOMRAM:
   411                           	callstack 0
   412  000001                     _port_registers:
   413                           	callstack 0
   414  000001                     	ds	10
   415  00000B                     _lat_registers:
   416                           	callstack 0
   417  00000B                     	ds	10
   418  000015                     _tris_registers:
   419                           	callstack 0
   420  000015                     	ds	10
   421  00001F                     _dir_pin1:
   422                           	callstack 0
   423  00001F                     	ds	1
   424  000020                     _step_pin1:
   425                           	callstack 0
   426  000020                     	ds	1
   427  000021                     _flags:
   428                           	callstack 0
   429  000021                     	ds	1
   430  000022                     _CCP2_Obj:
   431                           	callstack 0
   432  000022                     	ds	12
   433  00002E                     _CCP1_Obj:
   434                           	callstack 0
   435  00002E                     	ds	12
   436  00003A                     _W2_W4_W6_Motor_Control:
   437                           	callstack 0
   438  00003A                     	ds	2
   439  00003C                     _W1_W3_W5_Motor_Control:
   440                           	callstack 0
   441  00003C                     	ds	2
   442                           
   443                           	psect	bssBANK0
   444  000080                     __pbssBANK0:
   445                           	callstack 0
   446  000080                     	ds	9
   447  000089                     	ds	6
   448                           
   449                           	psect	cstackCOMRAM
   450  000067                     __pcstackCOMRAM:
   451                           	callstack 0
   452  000067                     RB4_ISR@Handler_Select:
   453                           	callstack 0
   454  000067                     RB5_ISR@Handler_Select:
   455                           	callstack 0
   456  000067                     RB6_ISR@Handler_Select:
   457                           	callstack 0
   458  000067                     RB7_ISR@Handler_Select:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x0
   462  000067                     	ds	1
   463  000068                     ??_InterruptManagerLow:
   464                           
   465                           ; 1 bytes @ 0x1
   466  000068                     	ds	3
   467  00006B                     GPIO_Pin_Direction_Initialize@_pin_config:
   468                           	callstack 0
   469  00006B                     GPIO_Pin_Write_Logic@_pin_config:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x4
   473  00006B                     	ds	2
   474  00006D                     ??_GPIO_Pin_Direction_Initialize:
   475  00006D                     GPIO_Pin_Write_Logic@logic:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x6
   479  00006D                     	ds	1
   480  00006E                     ??_GPIO_Pin_Write_Logic:
   481                           
   482                           ; 1 bytes @ 0x7
   483  00006E                     	ds	5
   484  000073                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xC
   488  000073                     	ds	1
   489  000074                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xD
   493  000074                     	ds	1
   494  000075                     GPIO_Pin_Initialize@_pin_config:
   495                           	callstack 0
   496  000075                     Ecu_Stepper_Step@stepper:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xE
   500  000075                     	ds	2
   501  000077                     ??_Ecu_Stepper_Step:
   502  000077                     GPIO_Pin_Initialize@ERRORSTATUS:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x10
   506  000077                     	ds	1
   507  000078                     Ecu_Stepper_Init@stepper:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x11
   511  000078                     	ds	2
   512  00007A                     
   513                           ; 1 bytes @ 0x13
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 101 in file "application.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  2  1685[None  ] int 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels required when called: 7
   539 ;; This function calls:
   540 ;;		_Ecu_Stepper_Init
   541 ;;		_Ecu_Stepper_Step
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548  001478                     __ptext0:
   549                           	callstack 0
   550  001478                     _main:
   551                           	callstack 24
   552  001478                     
   553                           ;application.c: 103:     stepper1.step_pin = step_pin1 ;
   554  001478  C020  F065         	movff	_step_pin1,_stepper1
   555                           
   556                           ;application.c: 104:     stepper1.dir_pin = dir_pin1 ;
   557  00147C  C01F  F066         	movff	_dir_pin1,_stepper1+1
   558  001480                     
   559                           ;application.c: 105:     Ecu_Stepper_Init(&stepper1);
   560  001480  0E65               	movlw	low _stepper1
   561  001482  6E78               	movwf	Ecu_Stepper_Init@stepper^0,c
   562  001484  0E00               	movlw	high _stepper1
   563  001486  6E79               	movwf	(Ecu_Stepper_Init@stepper+1)^0,c
   564  001488  ECB3  F009         	call	_Ecu_Stepper_Init	;wreg free
   565  00148C                     
   566                           ;application.c: 107:     for (counter = 0 ; counter < 200 ; counter++)
   567  00148C  0E00               	movlw	0
   568  00148E  6E3F               	movwf	(_counter+1)^0,c
   569  001490  0E00               	movlw	0
   570  001492  6E3E               	movwf	_counter^0,c
   571  001494                     l5802:
   572                           
   573                           ;application.c: 108:     {;application.c: 109:         Ecu_Stepper_Step(&stepper1);
   574  001494  0E65               	movlw	low _stepper1
   575  001496  6E75               	movwf	Ecu_Stepper_Step@stepper^0,c
   576  001498  0E00               	movlw	high _stepper1
   577  00149A  6E76               	movwf	(Ecu_Stepper_Step@stepper+1)^0,c
   578  00149C  ECED  F009         	call	_Ecu_Stepper_Step	;wreg free
   579  0014A0                     
   580                           ;application.c: 110:     }
   581  0014A0  4A3E               	infsnz	_counter^0,f,c
   582  0014A2  2A3F               	incf	(_counter+1)^0,f,c
   583  0014A4  503F               	movf	(_counter+1)^0,w,c
   584  0014A6  E109               	bnz	u4520
   585  0014A8  0EC8               	movlw	200
   586  0014AA  5C3E               	subwf	_counter^0,w,c
   587  0014AC  A0D8               	btfss	status,0,c
   588  0014AE  EF5B  F00A         	goto	u4521
   589  0014B2  EF5D  F00A         	goto	u4520
   590  0014B6                     u4521:
   591  0014B6  EF4A  F00A         	goto	l5802
   592  0014BA                     u4520:
   593  0014BA  EF43  F001         	goto	start
   594  0014BE                     __end_of_main:
   595                           	callstack 0
   596                           
   597 ;; *************** function _Ecu_Stepper_Step *****************
   598 ;; Defined at:
   599 ;;		line 19 in file "ECU/Stepper/ecu_stepper.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  stepper         2   14[COMRAM] PTR struct .
   602 ;;		 -> stepper1(2), 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      unsigned char 
   607 ;; Registers used:
   608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;Total ram usage:        3 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 5
   621 ;; This function calls:
   622 ;;		_GPIO_Pin_Write_Logic
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text1
   629  0013DA                     __ptext1:
   630                           	callstack 0
   631  0013DA                     _Ecu_Stepper_Step:
   632                           	callstack 25
   633  0013DA                     
   634                           ;ECU/Stepper/ecu_stepper.c: 19: Std_ReturnType Ecu_Stepper_Step(stepper_config_st *stepp
      +                          er);ECU/Stepper/ecu_stepper.c: 20: {;ECU/Stepper/ecu_stepper.c: 21:     if(((void*)0) ==
      +                           stepper)
   635  0013DA  5075               	movf	Ecu_Stepper_Step@stepper^0,w,c
   636  0013DC  1076               	iorwf	(Ecu_Stepper_Step@stepper+1)^0,w,c
   637  0013DE  A4D8               	btfss	status,2,c
   638  0013E0  EFF4  F009         	goto	u4121
   639  0013E4  EFF6  F009         	goto	u4120
   640  0013E8                     u4121:
   641  0013E8  EFF8  F009         	goto	l5300
   642  0013EC                     u4120:
   643  0013EC  EF16  F00A         	goto	l1705
   644  0013F0                     l5300:
   645                           
   646                           ;ECU/Stepper/ecu_stepper.c: 26:     {;ECU/Stepper/ecu_stepper.c: 27:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->step_pin) , 1);
   647  0013F0  C075  F06B         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
   648  0013F4  C076  F06C         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
   649  0013F8  0E01               	movlw	1
   650  0013FA  6E6D               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   651  0013FC  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   652  001400                     
   653                           ;ECU/Stepper/ecu_stepper.c: 28:         _delay((unsigned long)((1)*(8000000/4000.0)));
   654  001400  0E03               	movlw	3
   655  001402  6E77               	movwf	??_Ecu_Stepper_Step^0,c
   656  001404  0E98               	movlw	152
   657  001406                     u4557:
   658  001406  2EE8               	decfsz	wreg,f,c
   659  001408  D7FE               	bra	u4557
   660  00140A  2E77               	decfsz	??_Ecu_Stepper_Step^0,f,c
   661  00140C  D7FC               	bra	u4557
   662  00140E                     
   663                           ;ECU/Stepper/ecu_stepper.c: 29:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , 0);
   664  00140E  C075  F06B         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
   665  001412  C076  F06C         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
   666  001416  0E00               	movlw	0
   667  001418  6E6D               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   668  00141A  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   669                           
   670                           ;ECU/Stepper/ecu_stepper.c: 30:         _delay((unsigned long)((1)*(8000000/4000.0)));
   671  00141E  0E03               	movlw	3
   672  001420  6E77               	movwf	??_Ecu_Stepper_Step^0,c
   673  001422  0E98               	movlw	152
   674  001424                     u4567:
   675  001424  2EE8               	decfsz	wreg,f,c
   676  001426  D7FE               	bra	u4567
   677  001428  2E77               	decfsz	??_Ecu_Stepper_Step^0,f,c
   678  00142A  D7FC               	bra	u4567
   679  00142C                     l1705:
   680  00142C  0012               	return		;funcret
   681  00142E                     __end_of_Ecu_Stepper_Step:
   682                           	callstack 0
   683                           
   684 ;; *************** function _Ecu_Stepper_Init *****************
   685 ;; Defined at:
   686 ;;		line 3 in file "ECU/Stepper/ecu_stepper.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  stepper         2   17[COMRAM] PTR struct .
   689 ;;		 -> stepper1(2), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      unsigned char 
   694 ;; Registers used:
   695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 6
   708 ;; This function calls:
   709 ;;		_GPIO_Pin_Direction_Initialize
   710 ;;		_GPIO_Pin_Initialize
   711 ;;		_GPIO_Pin_Write_Logic
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  001366                     __ptext2:
   719                           	callstack 0
   720  001366                     _Ecu_Stepper_Init:
   721                           	callstack 24
   722  001366                     
   723                           ;ECU/Stepper/ecu_stepper.c: 3: Std_ReturnType Ecu_Stepper_Init(stepper_config_st *steppe
      +                          r);ECU/Stepper/ecu_stepper.c: 4: {;ECU/Stepper/ecu_stepper.c: 5:     if(((void*)0) == st
      +                          epper)
   724  001366  5078               	movf	Ecu_Stepper_Init@stepper^0,w,c
   725  001368  1079               	iorwf	(Ecu_Stepper_Init@stepper+1)^0,w,c
   726  00136A  A4D8               	btfss	status,2,c
   727  00136C  EFBA  F009         	goto	u4111
   728  001370  EFBC  F009         	goto	u4110
   729  001374                     u4111:
   730  001374  EFBE  F009         	goto	l5292
   731  001378                     u4110:
   732  001378  EFEC  F009         	goto	l1700
   733  00137C                     l5292:
   734                           
   735                           ;ECU/Stepper/ecu_stepper.c: 10:     {;ECU/Stepper/ecu_stepper.c: 11:         GPIO_Pin_In
      +                          itialize(&(stepper->step_pin));
   736  00137C  C078  F075         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Initialize@_pin_config
   737  001380  C079  F076         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Initialize@_pin_config+1
   738  001384  EC17  F00A         	call	_GPIO_Pin_Initialize	;wreg free
   739                           
   740                           ;ECU/Stepper/ecu_stepper.c: 12:         GPIO_Pin_Initialize(&(stepper->dir_pin));
   741  001388  0E01               	movlw	1
   742  00138A  2478               	addwf	Ecu_Stepper_Init@stepper^0,w,c
   743  00138C  6E75               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
   744  00138E  0E00               	movlw	0
   745  001390  2079               	addwfc	(Ecu_Stepper_Init@stepper+1)^0,w,c
   746  001392  6E76               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
   747  001394  EC17  F00A         	call	_GPIO_Pin_Initialize	;wreg free
   748                           
   749                           ;ECU/Stepper/ecu_stepper.c: 13:         GPIO_Pin_Direction_Initialize(&(stepper->dir_pin
      +                          ));
   750  001398  0E01               	movlw	1
   751  00139A  2478               	addwf	Ecu_Stepper_Init@stepper^0,w,c
   752  00139C  6E6B               	movwf	GPIO_Pin_Direction_Initialize@_pin_config^0,c
   753  00139E  0E00               	movlw	0
   754  0013A0  2079               	addwfc	(Ecu_Stepper_Init@stepper+1)^0,w,c
   755  0013A2  6E6C               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,c
   756  0013A4  EC24  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   757                           
   758                           ;ECU/Stepper/ecu_stepper.c: 14:         GPIO_Pin_Direction_Initialize(&(stepper->step_pi
      +                          n));
   759  0013A8  C078  F06B         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Direction_Initialize@_pin_config
   760  0013AC  C079  F06C         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Direction_Initialize@_pin_config+1
   761  0013B0  EC24  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   762                           
   763                           ;ECU/Stepper/ecu_stepper.c: 15:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , GPIO
      +                          _LOW);
   764  0013B4  C078  F06B         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Write_Logic@_pin_config
   765  0013B8  C079  F06C         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
   766  0013BC  0E00               	movlw	0
   767  0013BE  6E6D               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   768  0013C0  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   769                           
   770                           ;ECU/Stepper/ecu_stepper.c: 16:         GPIO_Pin_Write_Logic(&(stepper->dir_pin) , GPIO_
      +                          LOW);
   771  0013C4  0E01               	movlw	1
   772  0013C6  2478               	addwf	Ecu_Stepper_Init@stepper^0,w,c
   773  0013C8  6E6B               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
   774  0013CA  0E00               	movlw	0
   775  0013CC  2079               	addwfc	(Ecu_Stepper_Init@stepper+1)^0,w,c
   776  0013CE  6E6C               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
   777  0013D0  0E00               	movlw	0
   778  0013D2  6E6D               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   779  0013D4  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   780  0013D8                     l1700:
   781  0013D8  0012               	return		;funcret
   782  0013DA                     __end_of_Ecu_Stepper_Init:
   783                           	callstack 0
   784                           
   785 ;; *************** function _GPIO_Pin_Initialize *****************
   786 ;; Defined at:
   787 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  _pin_config     2   14[COMRAM] PTR const struct .
   790 ;;		 -> stepper1.dir_pin(1), stepper1.step_pin(1), stepper1(2), CCP2_Obj(12), 
   791 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
   792 ;;		 -> W1_W3_W5_Motor_Control(2), 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  ERRORSTATUS     1   16[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      unsigned char 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 5
   811 ;; This function calls:
   812 ;;		_GPIO_Pin_Direction_Initialize
   813 ;;		_GPIO_Pin_Write_Logic
   814 ;; This function is called by:
   815 ;;		_Ecu_Stepper_Init
   816 ;;		_ECU_DC_Motor_Init
   817 ;;		_IR_Sensor_Init
   818 ;;		_lcd_4bit_initialize
   819 ;;		_lcd_8bit_initialize
   820 ;;		_CCP_Init
   821 ;;		_Ultra_Sonic_Init
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text3
   826  00142E                     __ptext3:
   827                           	callstack 0
   828  00142E                     _GPIO_Pin_Initialize:
   829                           	callstack 24
   830  00142E                     
   831                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
   832  00142E  5075               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
   833  001430  1076               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
   834  001432  A4D8               	btfss	status,2,c
   835  001434  EF1E  F00A         	goto	u3841
   836  001438  EF20  F00A         	goto	u3840
   837  00143C                     u3841:
   838  00143C  EF24  F00A         	goto	l5058
   839  001440                     u3840:
   840  001440                     
   841                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
   842  001440  0E00               	movlw	0
   843  001442  6E77               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   844                           
   845                           ;MCAL/GPIO/hal_gpio.c: 164:     }
   846  001444  EF3A  F00A         	goto	l5060
   847  001448                     l5058:
   848                           
   849                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
   850  001448  C075  F06B         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
   851  00144C  C076  F06C         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
   852  001450  EC24  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
   853  001454  6E77               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   854                           
   855                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
   856  001456  C075  F06B         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
   857  00145A  C076  F06C         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
   858  00145E  C075  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
   859  001462  C076  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
   860  001466  0E00               	movlw	0
   861  001468  BEDF               	btfsc	indf2,7,c
   862  00146A  0E01               	movlw	1
   863  00146C  6E6D               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   864  00146E  ECC4  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   865  001472  6E77               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
   866  001474                     l5060:
   867                           
   868                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
   869  001474  5077               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
   870  001476  0012               	return		;funcret
   871  001478                     __end_of_GPIO_Pin_Initialize:
   872                           	callstack 0
   873                           
   874 ;; *************** function _GPIO_Pin_Write_Logic *****************
   875 ;; Defined at:
   876 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  _pin_config     2    4[COMRAM] PTR const struct .
   879 ;;		 -> stepper1.dir_pin(1), stepper1.step_pin(1), stepper1(2), CCP2_Obj(12), 
   880 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
   881 ;;		 -> W1_W3_W5_Motor_Control(2), 
   882 ;;  logic           1    6[COMRAM] enum E2967
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  ERRORSTATUS     1   13[COMRAM] unsigned char 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      unsigned char 
   887 ;; Registers used:
   888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   894 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;Total ram usage:       10 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; Hardware stack levels required when called: 4
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_GPIO_Pin_Initialize
   905 ;;		_Ecu_Stepper_Init
   906 ;;		_Ecu_Stepper_Step
   907 ;;		_ECU_DC_Motor_Run_Left
   908 ;;		_ECU_DC_Motor_Run_Right
   909 ;;		_ECU_DC_Motor_Stop
   910 ;;		_lcd_4bit_send_command
   911 ;;		_lcd_4bit_send_char_data
   912 ;;		_lcd_8bit_send_command
   913 ;;		_lcd_8bit_send_char_data
   914 ;;		_lcd_4bits_send_enable_signal
   915 ;;		_lcd_send_4bits
   916 ;;		_lcd_8bits_send_enable_signal
   917 ;;		_send_trig_pulse
   918 ;;		_Ecu_Stepper_Change_Direction
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text4
   923  001188                     __ptext4:
   924                           	callstack 0
   925  001188                     _GPIO_Pin_Write_Logic:
   926                           	callstack 25
   927  001188                     
   928                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
   929  001188  0E01               	movlw	1
   930  00118A  6E74               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
   931  00118C                     
   932                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
   933  00118C  506B               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
   934  00118E  106C               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
   935  001190  B4D8               	btfsc	status,2,c
   936  001192  EFCD  F008         	goto	u3741
   937  001196  EFCF  F008         	goto	u3740
   938  00119A                     u3741:
   939  00119A  EFDE  F008         	goto	l5010
   940  00119E                     u3740:
   941  00119E  C06B  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   942  0011A2  C06C  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   943  0011A6  50DF               	movf	223,w,c
   944  0011A8  0B07               	andlw	7
   945  0011AA  6E6E               	movwf	??_GPIO_Pin_Write_Logic^0,c
   946  0011AC  0E07               	movlw	7
   947  0011AE  646E               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
   948  0011B0  EFDC  F008         	goto	u3751
   949  0011B4  EFDE  F008         	goto	u3750
   950  0011B8                     u3751:
   951  0011B8  EF41  F009         	goto	l5018
   952  0011BC                     u3750:
   953  0011BC                     l5010:
   954                           
   955                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
   956  0011BC  0E00               	movlw	0
   957  0011BE  6E74               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
   958                           
   959                           ;MCAL/GPIO/hal_gpio.c: 88:     }
   960  0011C0  EF56  F009         	goto	l5020
   961  0011C4                     l5012:
   962                           
   963                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
   964  0011C4  C06B  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   965  0011C8  C06C  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   966  0011CC  50DF               	movf	223,w,c
   967  0011CE  0B07               	andlw	7
   968  0011D0  6E6E               	movwf	??_GPIO_Pin_Write_Logic^0,c
   969  0011D2  0E01               	movlw	1
   970  0011D4  6E6F               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
   971  0011D6  2A6E               	incf	??_GPIO_Pin_Write_Logic^0,f,c
   972  0011D8  EFF0  F008         	goto	u3764
   973  0011DC                     u3765:
   974  0011DC  90D8               	bcf	status,0,c
   975  0011DE  366F               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
   976  0011E0                     u3764:
   977  0011E0  2E6E               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
   978  0011E2  EFEE  F008         	goto	u3765
   979  0011E6  506F               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
   980  0011E8  0AFF               	xorlw	255
   981  0011EA  6E70               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
   982  0011EC  C06B  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
   983  0011F0  C06C  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
   984  0011F4  30DF               	rrcf	223,w,c
   985  0011F6  32E8               	rrcf	wreg,f,c
   986  0011F8  32E8               	rrcf	wreg,f,c
   987  0011FA  0B07               	andlw	7
   988  0011FC  6E71               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
   989  0011FE  5071               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
   990  001200  0D02               	mullw	2
   991  001202  0E0B               	movlw	low _lat_registers
   992  001204  24F3               	addwf	243,w,c
   993  001206  6ED9               	movwf	fsr2l,c
   994  001208  0E00               	movlw	high _lat_registers
   995  00120A  20F4               	addwfc	prodh,w,c
   996  00120C  6EDA               	movwf	fsr2h,c
   997  00120E  CFDE F072          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
   998  001212  CFDD F073          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
   999  001216  C072  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  1000  00121A  C073  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  1001  00121E  5070               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1002  001220  16DF               	andwf	indf2,f,c
  1003                           
  1004                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  1005  001222  EF56  F009         	goto	l5020
  1006  001226                     l5014:
  1007                           
  1008                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  1009  001226  C06B  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1010  00122A  C06C  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1011  00122E  50DF               	movf	223,w,c
  1012  001230  0B07               	andlw	7
  1013  001232  6E6E               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1014  001234  0E01               	movlw	1
  1015  001236  6E6F               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1016  001238  2A6E               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1017  00123A  EF21  F009         	goto	u3774
  1018  00123E                     u3775:
  1019  00123E  90D8               	bcf	status,0,c
  1020  001240  366F               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1021  001242                     u3774:
  1022  001242  2E6E               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1023  001244  EF1F  F009         	goto	u3775
  1024  001248  C06B  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1025  00124C  C06C  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1026  001250  30DF               	rrcf	223,w,c
  1027  001252  32E8               	rrcf	wreg,f,c
  1028  001254  32E8               	rrcf	wreg,f,c
  1029  001256  0B07               	andlw	7
  1030  001258  6E70               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1031  00125A  5070               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1032  00125C  0D02               	mullw	2
  1033  00125E  0E0B               	movlw	low _lat_registers
  1034  001260  24F3               	addwf	243,w,c
  1035  001262  6ED9               	movwf	fsr2l,c
  1036  001264  0E00               	movlw	high _lat_registers
  1037  001266  20F4               	addwfc	prodh,w,c
  1038  001268  6EDA               	movwf	fsr2h,c
  1039  00126A  CFDE F071          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  1040  00126E  CFDD F072          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  1041  001272  C071  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  1042  001276  C072  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  1043  00127A  506F               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1044  00127C  12DF               	iorwf	indf2,f,c
  1045                           
  1046                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  1047  00127E  EF56  F009         	goto	l5020
  1048  001282                     l5018:
  1049  001282  506D               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  1050  001284  6E6E               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1051  001286  6A6F               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1052                           
  1053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1054                           ; Switch size 1, requested type "simple"
  1055                           ; Number of cases is 1, Range of values is 0 to 0
  1056                           ; switch strategies available:
  1057                           ; Name         Instructions Cycles
  1058                           ; simple_byte            4     3 (average)
  1059                           ;	Chosen strategy is simple_byte
  1060  001288  506F               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1061  00128A  0A00               	xorlw	0	; case 0
  1062  00128C  B4D8               	btfsc	status,2,c
  1063  00128E  EF4B  F009         	goto	l5828
  1064  001292  EFDE  F008         	goto	l5010
  1065  001296                     l5828:
  1066                           
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 2, Range of values is 0 to 1
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte            7     4 (average)
  1072                           ;	Chosen strategy is simple_byte
  1073  001296  506E               	movf	??_GPIO_Pin_Write_Logic^0,w,c
  1074  001298  0A00               	xorlw	0	; case 0
  1075  00129A  B4D8               	btfsc	status,2,c
  1076  00129C  EFE2  F008         	goto	l5012
  1077  0012A0  0A01               	xorlw	1	; case 1
  1078  0012A2  B4D8               	btfsc	status,2,c
  1079  0012A4  EF13  F009         	goto	l5014
  1080  0012A8  EFDE  F008         	goto	l5010
  1081  0012AC                     l5020:
  1082                           
  1083                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  1084  0012AC  5074               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  1085  0012AE  0012               	return		;funcret
  1086  0012B0                     __end_of_GPIO_Pin_Write_Logic:
  1087                           	callstack 0
  1088                           
  1089 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  1090 ;; Defined at:
  1091 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1094 ;;		 -> stepper1.dir_pin(1), stepper1.step_pin(1), stepper1(2), CCP2_Obj(12), 
  1095 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1096 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  ERRORSTATUS     1   12[COMRAM] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      unsigned char 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;Total ram usage:        9 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 4
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_GPIO_Pin_Initialize
  1119 ;;		_Ecu_Stepper_Init
  1120 ;;		_interrupt_RBx_pin_init
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text5
  1125  001048                     __ptext5:
  1126                           	callstack 0
  1127  001048                     _GPIO_Pin_Direction_Initialize:
  1128                           	callstack 24
  1129  001048                     
  1130                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  1131  001048  0E01               	movlw	1
  1132  00104A  6E73               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  1133  00104C                     
  1134                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  1135  00104C  506B               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  1136  00104E  106C               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  1137  001050  B4D8               	btfsc	status,2,c
  1138  001052  EF2D  F008         	goto	u3781
  1139  001056  EF2F  F008         	goto	u3780
  1140  00105A                     u3781:
  1141  00105A  EF3E  F008         	goto	l5034
  1142  00105E                     u3780:
  1143  00105E  C06B  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1144  001062  C06C  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1145  001066  50DF               	movf	223,w,c
  1146  001068  0B07               	andlw	7
  1147  00106A  6E6D               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1148  00106C  0E07               	movlw	7
  1149  00106E  646D               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
  1150  001070  EF3C  F008         	goto	u3791
  1151  001074  EF3E  F008         	goto	u3790
  1152  001078                     u3791:
  1153  001078  EFA1  F008         	goto	l5042
  1154  00107C                     u3790:
  1155  00107C                     l5034:
  1156                           
  1157                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  1158  00107C  0E00               	movlw	0
  1159  00107E  6E73               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  1160                           
  1161                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  1162  001080  EFC2  F008         	goto	l5044
  1163  001084                     l5036:
  1164                           
  1165                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  1166  001084  C06B  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1167  001088  C06C  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1168  00108C  50DF               	movf	223,w,c
  1169  00108E  0B07               	andlw	7
  1170  001090  6E6D               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1171  001092  0E01               	movlw	1
  1172  001094  6E6E               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  1173  001096  2A6D               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  1174  001098  EF50  F008         	goto	u3804
  1175  00109C                     u3805:
  1176  00109C  90D8               	bcf	status,0,c
  1177  00109E  366E               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  1178  0010A0                     u3804:
  1179  0010A0  2E6D               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  1180  0010A2  EF4E  F008         	goto	u3805
  1181  0010A6  506E               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  1182  0010A8  0AFF               	xorlw	255
  1183  0010AA  6E6F               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  1184  0010AC  C06B  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1185  0010B0  C06C  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1186  0010B4  30DF               	rrcf	223,w,c
  1187  0010B6  32E8               	rrcf	wreg,f,c
  1188  0010B8  32E8               	rrcf	wreg,f,c
  1189  0010BA  0B07               	andlw	7
  1190  0010BC  6E70               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  1191  0010BE  5070               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  1192  0010C0  0D02               	mullw	2
  1193  0010C2  0E15               	movlw	low _tris_registers
  1194  0010C4  24F3               	addwf	243,w,c
  1195  0010C6  6ED9               	movwf	fsr2l,c
  1196  0010C8  0E00               	movlw	high _tris_registers
  1197  0010CA  20F4               	addwfc	prodh,w,c
  1198  0010CC  6EDA               	movwf	fsr2h,c
  1199  0010CE  CFDE F071          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  1200  0010D2  CFDD F072          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  1201  0010D6  C071  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  1202  0010DA  C072  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  1203  0010DE  506F               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  1204  0010E0  16DF               	andwf	indf2,f,c
  1205                           
  1206                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  1207  0010E2  EFC2  F008         	goto	l5044
  1208  0010E6                     l5038:
  1209                           
  1210                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  1211  0010E6  C06B  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1212  0010EA  C06C  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1213  0010EE  50DF               	movf	223,w,c
  1214  0010F0  0B07               	andlw	7
  1215  0010F2  6E6D               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1216  0010F4  0E01               	movlw	1
  1217  0010F6  6E6E               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  1218  0010F8  2A6D               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  1219  0010FA  EF81  F008         	goto	u3814
  1220  0010FE                     u3815:
  1221  0010FE  90D8               	bcf	status,0,c
  1222  001100  366E               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  1223  001102                     u3814:
  1224  001102  2E6D               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  1225  001104  EF7F  F008         	goto	u3815
  1226  001108  C06B  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1227  00110C  C06C  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1228  001110  30DF               	rrcf	223,w,c
  1229  001112  32E8               	rrcf	wreg,f,c
  1230  001114  32E8               	rrcf	wreg,f,c
  1231  001116  0B07               	andlw	7
  1232  001118  6E6F               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  1233  00111A  506F               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  1234  00111C  0D02               	mullw	2
  1235  00111E  0E15               	movlw	low _tris_registers
  1236  001120  24F3               	addwf	243,w,c
  1237  001122  6ED9               	movwf	fsr2l,c
  1238  001124  0E00               	movlw	high _tris_registers
  1239  001126  20F4               	addwfc	prodh,w,c
  1240  001128  6EDA               	movwf	fsr2h,c
  1241  00112A  CFDE F070          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  1242  00112E  CFDD F071          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  1243  001132  C070  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  1244  001136  C071  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  1245  00113A  506E               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  1246  00113C  12DF               	iorwf	indf2,f,c
  1247                           
  1248                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  1249  00113E  EFC2  F008         	goto	l5044
  1250  001142                     l5042:
  1251  001142  C06B  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  1252  001146  C06C  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  1253  00114A  BCDF               	btfsc	indf2,6,c
  1254  00114C  EFAA  F008         	goto	u3821
  1255  001150  EFAD  F008         	goto	u3820
  1256  001154                     u3821:
  1257  001154  0E01               	movlw	1
  1258  001156  EFAE  F008         	goto	u3830
  1259  00115A                     u3820:
  1260  00115A  0E00               	movlw	0
  1261  00115C                     u3830:
  1262  00115C  6E6D               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  1263  00115E  6A6E               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  1264                           
  1265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 1, Range of values is 0 to 0
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte            4     3 (average)
  1271                           ;	Chosen strategy is simple_byte
  1272  001160  506E               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  1273  001162  0A00               	xorlw	0	; case 0
  1274  001164  B4D8               	btfsc	status,2,c
  1275  001166  EFB7  F008         	goto	l5830
  1276  00116A  EF3E  F008         	goto	l5034
  1277  00116E                     l5830:
  1278                           
  1279                           ; Switch size 1, requested type "simple"
  1280                           ; Number of cases is 2, Range of values is 0 to 1
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte            7     4 (average)
  1284                           ;	Chosen strategy is simple_byte
  1285  00116E  506D               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  1286  001170  0A00               	xorlw	0	; case 0
  1287  001172  B4D8               	btfsc	status,2,c
  1288  001174  EF42  F008         	goto	l5036
  1289  001178  0A01               	xorlw	1	; case 1
  1290  00117A  B4D8               	btfsc	status,2,c
  1291  00117C  EF73  F008         	goto	l5038
  1292  001180  EF3E  F008         	goto	l5034
  1293  001184                     l5044:
  1294                           
  1295                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  1296  001184  5073               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  1297  001186  0012               	return		;funcret
  1298  001188                     __end_of_GPIO_Pin_Direction_Initialize:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _InterruptManagerLow *****************
  1302 ;; Defined at:
  1303 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:        3 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 3
  1324 ;; This function calls:
  1325 ;;		_ADC_ISR
  1326 ;;		_INT1_ISR
  1327 ;;		_RB4_ISR
  1328 ;;		_RB5_ISR
  1329 ;;		_RB6_ISR
  1330 ;;		_RB7_ISR
  1331 ;; This function is called by:
  1332 ;;		Interrupt level 1
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	intcodelo
  1337  000018                     __pintcodelo:
  1338                           	callstack 0
  1339  000018                     _InterruptManagerLow:
  1340                           	callstack 24
  1341                           
  1342                           ;incstack = 0
  1343  000018  807A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1344  00001A  CFD8 F068          	movff	status,??_InterruptManagerLow
  1345  00001E  CFE8 F069          	movff	wreg,??_InterruptManagerLow+1
  1346  000022  CFE0 F06A          	movff	bsr,??_InterruptManagerLow+2
  1347  000026                     
  1348                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  1349  000026  A6F0               	btfss	240,3,c	;volatile
  1350  000028  EF18  F000         	goto	i1u281_21
  1351  00002C  EF1A  F000         	goto	i1u281_20
  1352  000030                     i1u281_21:
  1353  000030  EF23  F000         	goto	i1l1151
  1354  000034                     i1u281_20:
  1355  000034  A0F0               	btfss	240,0,c	;volatile
  1356  000036  EF1F  F000         	goto	i1u282_21
  1357  00003A  EF21  F000         	goto	i1u282_20
  1358  00003E                     i1u282_21:
  1359  00003E  EF23  F000         	goto	i1l1151
  1360  000042                     i1u282_20:
  1361  000042                     
  1362                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  1363  000042  ECD3  F00A         	call	_INT1_ISR	;wreg free
  1364  000046                     i1l1151:
  1365                           
  1366                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1367  000046  A6F2               	btfss	242,3,c	;volatile
  1368  000048  EF28  F000         	goto	i1u283_21
  1369  00004C  EF2A  F000         	goto	i1u283_20
  1370  000050                     i1u283_21:
  1371  000050  EF43  F000         	goto	i1l1153
  1372  000054                     i1u283_20:
  1373  000054  A0F2               	btfss	242,0,c	;volatile
  1374  000056  EF2F  F000         	goto	i1u284_21
  1375  00005A  EF31  F000         	goto	i1u284_20
  1376  00005E                     i1u284_21:
  1377  00005E  EF43  F000         	goto	i1l1153
  1378  000062                     i1u284_20:
  1379  000062  A881               	btfss	129,4,c	;volatile
  1380  000064  EF36  F000         	goto	i1u285_21
  1381  000068  EF38  F000         	goto	i1u285_20
  1382  00006C                     i1u285_21:
  1383  00006C  EF43  F000         	goto	i1l1153
  1384  000070                     i1u285_20:
  1385  000070  A021               	btfss	_flags^0,0,c	;volatile
  1386  000072  EF3D  F000         	goto	i1u286_21
  1387  000076  EF3F  F000         	goto	i1u286_20
  1388  00007A                     i1u286_21:
  1389  00007A  EF43  F000         	goto	i1l1153
  1390  00007E                     i1u286_20:
  1391  00007E                     
  1392                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  1393  00007E  9021               	bcf	_flags^0,0,c	;volatile
  1394  000080                     
  1395                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  1396  000080  0E01               	movlw	1
  1397  000082  ECC6  F00A         	call	_RB4_ISR
  1398  000086                     i1l1153:
  1399                           
  1400                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1401  000086  A6F2               	btfss	242,3,c	;volatile
  1402  000088  EF48  F000         	goto	i1u287_21
  1403  00008C  EF4A  F000         	goto	i1u287_20
  1404  000090                     i1u287_21:
  1405  000090  EF63  F000         	goto	i1l1155
  1406  000094                     i1u287_20:
  1407  000094  A0F2               	btfss	242,0,c	;volatile
  1408  000096  EF4F  F000         	goto	i1u288_21
  1409  00009A  EF51  F000         	goto	i1u288_20
  1410  00009E                     i1u288_21:
  1411  00009E  EF63  F000         	goto	i1l1155
  1412  0000A2                     i1u288_20:
  1413  0000A2  B881               	btfsc	129,4,c	;volatile
  1414  0000A4  EF56  F000         	goto	i1u289_21
  1415  0000A8  EF58  F000         	goto	i1u289_20
  1416  0000AC                     i1u289_21:
  1417  0000AC  EF63  F000         	goto	i1l1155
  1418  0000B0                     i1u289_20:
  1419  0000B0  B021               	btfsc	_flags^0,0,c	;volatile
  1420  0000B2  EF5D  F000         	goto	i1u290_21
  1421  0000B6  EF5F  F000         	goto	i1u290_20
  1422  0000BA                     i1u290_21:
  1423  0000BA  EF63  F000         	goto	i1l1155
  1424  0000BE                     i1u290_20:
  1425  0000BE                     
  1426                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  1427  0000BE  8021               	bsf	_flags^0,0,c	;volatile
  1428  0000C0                     
  1429                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  1430  0000C0  0E00               	movlw	0
  1431  0000C2  ECC6  F00A         	call	_RB4_ISR
  1432  0000C6                     i1l1155:
  1433                           
  1434                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1435  0000C6  A6F2               	btfss	242,3,c	;volatile
  1436  0000C8  EF68  F000         	goto	i1u291_21
  1437  0000CC  EF6A  F000         	goto	i1u291_20
  1438  0000D0                     i1u291_21:
  1439  0000D0  EF83  F000         	goto	i1l1157
  1440  0000D4                     i1u291_20:
  1441  0000D4  A0F2               	btfss	242,0,c	;volatile
  1442  0000D6  EF6F  F000         	goto	i1u292_21
  1443  0000DA  EF71  F000         	goto	i1u292_20
  1444  0000DE                     i1u292_21:
  1445  0000DE  EF83  F000         	goto	i1l1157
  1446  0000E2                     i1u292_20:
  1447  0000E2  AA81               	btfss	129,5,c	;volatile
  1448  0000E4  EF76  F000         	goto	i1u293_21
  1449  0000E8  EF78  F000         	goto	i1u293_20
  1450  0000EC                     i1u293_21:
  1451  0000EC  EF83  F000         	goto	i1l1157
  1452  0000F0                     i1u293_20:
  1453  0000F0  A221               	btfss	_flags^0,1,c	;volatile
  1454  0000F2  EF7D  F000         	goto	i1u294_21
  1455  0000F6  EF7F  F000         	goto	i1u294_20
  1456  0000FA                     i1u294_21:
  1457  0000FA  EF83  F000         	goto	i1l1157
  1458  0000FE                     i1u294_20:
  1459  0000FE                     
  1460                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  1461  0000FE  9221               	bcf	_flags^0,1,c	;volatile
  1462  000100                     
  1463                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  1464  000100  0E01               	movlw	1
  1465  000102  ECB9  F00A         	call	_RB5_ISR
  1466  000106                     i1l1157:
  1467                           
  1468                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1469  000106  A6F2               	btfss	242,3,c	;volatile
  1470  000108  EF88  F000         	goto	i1u295_21
  1471  00010C  EF8A  F000         	goto	i1u295_20
  1472  000110                     i1u295_21:
  1473  000110  EFA3  F000         	goto	i1l1159
  1474  000114                     i1u295_20:
  1475  000114  A0F2               	btfss	242,0,c	;volatile
  1476  000116  EF8F  F000         	goto	i1u296_21
  1477  00011A  EF91  F000         	goto	i1u296_20
  1478  00011E                     i1u296_21:
  1479  00011E  EFA3  F000         	goto	i1l1159
  1480  000122                     i1u296_20:
  1481  000122  BA81               	btfsc	129,5,c	;volatile
  1482  000124  EF96  F000         	goto	i1u297_21
  1483  000128  EF98  F000         	goto	i1u297_20
  1484  00012C                     i1u297_21:
  1485  00012C  EFA3  F000         	goto	i1l1159
  1486  000130                     i1u297_20:
  1487  000130  B221               	btfsc	_flags^0,1,c	;volatile
  1488  000132  EF9D  F000         	goto	i1u298_21
  1489  000136  EF9F  F000         	goto	i1u298_20
  1490  00013A                     i1u298_21:
  1491  00013A  EFA3  F000         	goto	i1l1159
  1492  00013E                     i1u298_20:
  1493  00013E                     
  1494                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  1495  00013E  8221               	bsf	_flags^0,1,c	;volatile
  1496  000140                     
  1497                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  1498  000140  0E00               	movlw	0
  1499  000142  ECB9  F00A         	call	_RB5_ISR
  1500  000146                     i1l1159:
  1501                           
  1502                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1503  000146  A6F2               	btfss	242,3,c	;volatile
  1504  000148  EFA8  F000         	goto	i1u299_21
  1505  00014C  EFAA  F000         	goto	i1u299_20
  1506  000150                     i1u299_21:
  1507  000150  EFC3  F000         	goto	i1l1161
  1508  000154                     i1u299_20:
  1509  000154  A0F2               	btfss	242,0,c	;volatile
  1510  000156  EFAF  F000         	goto	i1u300_21
  1511  00015A  EFB1  F000         	goto	i1u300_20
  1512  00015E                     i1u300_21:
  1513  00015E  EFC3  F000         	goto	i1l1161
  1514  000162                     i1u300_20:
  1515  000162  AC81               	btfss	129,6,c	;volatile
  1516  000164  EFB6  F000         	goto	i1u301_21
  1517  000168  EFB8  F000         	goto	i1u301_20
  1518  00016C                     i1u301_21:
  1519  00016C  EFC3  F000         	goto	i1l1161
  1520  000170                     i1u301_20:
  1521  000170  A421               	btfss	_flags^0,2,c	;volatile
  1522  000172  EFBD  F000         	goto	i1u302_21
  1523  000176  EFBF  F000         	goto	i1u302_20
  1524  00017A                     i1u302_21:
  1525  00017A  EFC3  F000         	goto	i1l1161
  1526  00017E                     i1u302_20:
  1527  00017E                     
  1528                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  1529  00017E  9421               	bcf	_flags^0,2,c	;volatile
  1530  000180                     
  1531                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  1532  000180  0E01               	movlw	1
  1533  000182  ECAC  F00A         	call	_RB6_ISR
  1534  000186                     i1l1161:
  1535                           
  1536                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1537  000186  A6F2               	btfss	242,3,c	;volatile
  1538  000188  EFC8  F000         	goto	i1u303_21
  1539  00018C  EFCA  F000         	goto	i1u303_20
  1540  000190                     i1u303_21:
  1541  000190  EFE3  F000         	goto	i1l1163
  1542  000194                     i1u303_20:
  1543  000194  A0F2               	btfss	242,0,c	;volatile
  1544  000196  EFCF  F000         	goto	i1u304_21
  1545  00019A  EFD1  F000         	goto	i1u304_20
  1546  00019E                     i1u304_21:
  1547  00019E  EFE3  F000         	goto	i1l1163
  1548  0001A2                     i1u304_20:
  1549  0001A2  BC81               	btfsc	129,6,c	;volatile
  1550  0001A4  EFD6  F000         	goto	i1u305_21
  1551  0001A8  EFD8  F000         	goto	i1u305_20
  1552  0001AC                     i1u305_21:
  1553  0001AC  EFE3  F000         	goto	i1l1163
  1554  0001B0                     i1u305_20:
  1555  0001B0  B421               	btfsc	_flags^0,2,c	;volatile
  1556  0001B2  EFDD  F000         	goto	i1u306_21
  1557  0001B6  EFDF  F000         	goto	i1u306_20
  1558  0001BA                     i1u306_21:
  1559  0001BA  EFE3  F000         	goto	i1l1163
  1560  0001BE                     i1u306_20:
  1561  0001BE                     
  1562                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  1563  0001BE  8421               	bsf	_flags^0,2,c	;volatile
  1564  0001C0                     
  1565                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  1566  0001C0  0E00               	movlw	0
  1567  0001C2  ECAC  F00A         	call	_RB6_ISR
  1568  0001C6                     i1l1163:
  1569                           
  1570                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1571  0001C6  A6F2               	btfss	242,3,c	;volatile
  1572  0001C8  EFE8  F000         	goto	i1u307_21
  1573  0001CC  EFEA  F000         	goto	i1u307_20
  1574  0001D0                     i1u307_21:
  1575  0001D0  EF03  F001         	goto	i1l1165
  1576  0001D4                     i1u307_20:
  1577  0001D4  A0F2               	btfss	242,0,c	;volatile
  1578  0001D6  EFEF  F000         	goto	i1u308_21
  1579  0001DA  EFF1  F000         	goto	i1u308_20
  1580  0001DE                     i1u308_21:
  1581  0001DE  EF03  F001         	goto	i1l1165
  1582  0001E2                     i1u308_20:
  1583  0001E2  AE81               	btfss	129,7,c	;volatile
  1584  0001E4  EFF6  F000         	goto	i1u309_21
  1585  0001E8  EFF8  F000         	goto	i1u309_20
  1586  0001EC                     i1u309_21:
  1587  0001EC  EF03  F001         	goto	i1l1165
  1588  0001F0                     i1u309_20:
  1589  0001F0  A621               	btfss	_flags^0,3,c	;volatile
  1590  0001F2  EFFD  F000         	goto	i1u310_21
  1591  0001F6  EFFF  F000         	goto	i1u310_20
  1592  0001FA                     i1u310_21:
  1593  0001FA  EF03  F001         	goto	i1l1165
  1594  0001FE                     i1u310_20:
  1595  0001FE                     
  1596                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  1597  0001FE  9621               	bcf	_flags^0,3,c	;volatile
  1598  000200                     
  1599                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  1600  000200  0E01               	movlw	1
  1601  000202  EC9F  F00A         	call	_RB7_ISR
  1602  000206                     i1l1165:
  1603                           
  1604                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  1605  000206  A6F2               	btfss	242,3,c	;volatile
  1606  000208  EF08  F001         	goto	i1u311_21
  1607  00020C  EF0A  F001         	goto	i1u311_20
  1608  000210                     i1u311_21:
  1609  000210  EF23  F001         	goto	i1l1167
  1610  000214                     i1u311_20:
  1611  000214  A0F2               	btfss	242,0,c	;volatile
  1612  000216  EF0F  F001         	goto	i1u312_21
  1613  00021A  EF11  F001         	goto	i1u312_20
  1614  00021E                     i1u312_21:
  1615  00021E  EF23  F001         	goto	i1l1167
  1616  000222                     i1u312_20:
  1617  000222  BE81               	btfsc	129,7,c	;volatile
  1618  000224  EF16  F001         	goto	i1u313_21
  1619  000228  EF18  F001         	goto	i1u313_20
  1620  00022C                     i1u313_21:
  1621  00022C  EF23  F001         	goto	i1l1167
  1622  000230                     i1u313_20:
  1623  000230  B621               	btfsc	_flags^0,3,c	;volatile
  1624  000232  EF1D  F001         	goto	i1u314_21
  1625  000236  EF1F  F001         	goto	i1u314_20
  1626  00023A                     i1u314_21:
  1627  00023A  EF23  F001         	goto	i1l1167
  1628  00023E                     i1u314_20:
  1629  00023E                     
  1630                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  1631  00023E  8621               	bsf	_flags^0,3,c	;volatile
  1632  000240                     
  1633                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  1634  000240  0E00               	movlw	0
  1635  000242  EC9F  F00A         	call	_RB7_ISR
  1636  000246                     i1l1167:
  1637                           
  1638                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  1639  000246  AC9D               	btfss	157,6,c	;volatile
  1640  000248  EF28  F001         	goto	i1u315_21
  1641  00024C  EF2A  F001         	goto	i1u315_20
  1642  000250                     i1u315_21:
  1643  000250  EF33  F001         	goto	i1l1169
  1644  000254                     i1u315_20:
  1645  000254  AC9E               	btfss	158,6,c	;volatile
  1646  000256  EF2F  F001         	goto	i1u316_21
  1647  00025A  EF31  F001         	goto	i1u316_20
  1648  00025E                     i1u316_21:
  1649  00025E  EF33  F001         	goto	i1l1169
  1650  000262                     i1u316_20:
  1651  000262                     
  1652                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
  1653  000262  ECD5  F00A         	call	_ADC_ISR	;wreg free
  1654  000266                     i1l1169:
  1655                           
  1656                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  1657  000266  A09D               	btfss	157,0,c	;volatile
  1658  000268  EF38  F001         	goto	i1u317_21
  1659  00026C  EF3A  F001         	goto	i1u317_20
  1660  000270                     i1u317_21:
  1661  000270  EF3B  F001         	goto	i1l1172
  1662  000274                     i1u317_20:
  1663  000274  509E               	movf	158,w,c	;volatile
  1664  000276                     i1l1172:
  1665  000276  C06A  FFE0         	movff	??_InterruptManagerLow+2,bsr
  1666  00027A  C069  FFE8         	movff	??_InterruptManagerLow+1,wreg
  1667  00027E  C068  FFD8         	movff	??_InterruptManagerLow,status
  1668  000282  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1669  000284  0010               	retfie	
  1670  000286                     __end_of_InterruptManagerLow:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _RB7_ISR *****************
  1674 ;; Defined at:
  1675 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  Handler_Sele    1    wreg     unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 2
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_InterruptManagerLow
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text7
  1704  00153E                     __ptext7:
  1705                           	callstack 0
  1706  00153E                     _RB7_ISR:
  1707                           	callstack 24
  1708                           
  1709                           ;incstack = 0
  1710                           ;RB7_ISR@Handler_Select stored from wreg
  1711  00153E  6E67               	movwf	RB7_ISR@Handler_Select^0,c
  1712  001540                     
  1713                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  1714  001540  90F2               	bcf	242,0,c	;volatile
  1715  001542                     
  1716                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  1717  001542  5067               	movf	RB7_ISR@Handler_Select^0,w,c
  1718  001544  B4D8               	btfsc	status,2,c
  1719  001546  EFA7  F00A         	goto	i1u93_21
  1720  00154A  EFA9  F00A         	goto	i1u93_20
  1721  00154E                     i1u93_21:
  1722  00154E  EFAB  F00A         	goto	i1l3046
  1723  001552                     i1u93_20:
  1724  001552  EFAB  F00A         	goto	i1l1278
  1725  001556                     i1l3046:
  1726  001556                     i1l1278:
  1727  001556  0012               	return		;funcret
  1728  001558                     __end_of_RB7_ISR:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _RB6_ISR *****************
  1732 ;; Defined at:
  1733 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  Handler_Sele    1    wreg     unsigned char 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;Total ram usage:        1 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 2
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_InterruptManagerLow
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text8
  1762  001558                     __ptext8:
  1763                           	callstack 0
  1764  001558                     _RB6_ISR:
  1765                           	callstack 24
  1766                           
  1767                           ;incstack = 0
  1768                           ;RB6_ISR@Handler_Select stored from wreg
  1769  001558  6E67               	movwf	RB6_ISR@Handler_Select^0,c
  1770  00155A                     
  1771                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  1772  00155A  90F2               	bcf	242,0,c	;volatile
  1773  00155C                     
  1774                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  1775  00155C  5067               	movf	RB6_ISR@Handler_Select^0,w,c
  1776  00155E  B4D8               	btfsc	status,2,c
  1777  001560  EFB4  F00A         	goto	i1u92_21
  1778  001564  EFB6  F00A         	goto	i1u92_20
  1779  001568                     i1u92_21:
  1780  001568  EFB8  F00A         	goto	i1l3036
  1781  00156C                     i1u92_20:
  1782  00156C  EFB8  F00A         	goto	i1l1269
  1783  001570                     i1l3036:
  1784  001570                     i1l1269:
  1785  001570  0012               	return		;funcret
  1786  001572                     __end_of_RB6_ISR:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function _RB5_ISR *****************
  1790 ;; Defined at:
  1791 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  Handler_Sele    1    wreg     unsigned char 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;Total ram usage:        1 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: 2
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_InterruptManagerLow
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text9
  1820  001572                     __ptext9:
  1821                           	callstack 0
  1822  001572                     _RB5_ISR:
  1823                           	callstack 24
  1824                           
  1825                           ;incstack = 0
  1826                           ;RB5_ISR@Handler_Select stored from wreg
  1827  001572  6E67               	movwf	RB5_ISR@Handler_Select^0,c
  1828  001574                     
  1829                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  1830  001574  90F2               	bcf	242,0,c	;volatile
  1831  001576                     
  1832                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  1833  001576  5067               	movf	RB5_ISR@Handler_Select^0,w,c
  1834  001578  B4D8               	btfsc	status,2,c
  1835  00157A  EFC1  F00A         	goto	i1u91_21
  1836  00157E  EFC3  F00A         	goto	i1u91_20
  1837  001582                     i1u91_21:
  1838  001582  EFC5  F00A         	goto	i1l3026
  1839  001586                     i1u91_20:
  1840  001586  EFC5  F00A         	goto	i1l1260
  1841  00158A                     i1l3026:
  1842  00158A                     i1l1260:
  1843  00158A  0012               	return		;funcret
  1844  00158C                     __end_of_RB5_ISR:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _RB4_ISR *****************
  1848 ;; Defined at:
  1849 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  Handler_Sele    1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;Total ram usage:        1 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 2
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_InterruptManagerLow
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text10
  1878  00158C                     __ptext10:
  1879                           	callstack 0
  1880  00158C                     _RB4_ISR:
  1881                           	callstack 24
  1882                           
  1883                           ;incstack = 0
  1884                           ;RB4_ISR@Handler_Select stored from wreg
  1885  00158C  6E67               	movwf	RB4_ISR@Handler_Select^0,c
  1886  00158E                     
  1887                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  1888  00158E  90F2               	bcf	242,0,c	;volatile
  1889  001590                     
  1890                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  1891  001590  5067               	movf	RB4_ISR@Handler_Select^0,w,c
  1892  001592  B4D8               	btfsc	status,2,c
  1893  001594  EFCE  F00A         	goto	i1u90_21
  1894  001598  EFD0  F00A         	goto	i1u90_20
  1895  00159C                     i1u90_21:
  1896  00159C  EFD2  F00A         	goto	i1l3016
  1897  0015A0                     i1u90_20:
  1898  0015A0  EFD2  F00A         	goto	i1l1251
  1899  0015A4                     i1l3016:
  1900  0015A4                     i1l1251:
  1901  0015A4  0012               	return		;funcret
  1902  0015A6                     __end_of_RB4_ISR:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _INT1_ISR *****************
  1906 ;; Defined at:
  1907 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		None
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 2
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_InterruptManagerLow
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text11
  1936  0015A6                     __ptext11:
  1937                           	callstack 0
  1938  0015A6                     _INT1_ISR:
  1939                           	callstack 24
  1940  0015A6                     
  1941                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  1942  0015A6  90F0               	bcf	240,0,c	;volatile
  1943  0015A8  0012               	return		;funcret
  1944  0015AA                     __end_of_INT1_ISR:
  1945                           	callstack 0
  1946                           
  1947 ;; *************** function _ADC_ISR *****************
  1948 ;; Defined at:
  1949 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		None
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        0 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 2
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_InterruptManagerLow
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text12
  1978  0015AA                     __ptext12:
  1979                           	callstack 0
  1980  0015AA                     _ADC_ISR:
  1981                           	callstack 24
  1982  0015AA  0012               	return		;funcret
  1983  0015AC                     __end_of_ADC_ISR:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _InterruptManagerHigh *****************
  1987 ;; Defined at:
  1988 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 1
  2009 ;; This function calls:
  2010 ;;		_EUSART_Rx_ISR
  2011 ;;		_EUSART_Tx_ISR
  2012 ;;		_TMR0_ISR
  2013 ;; This function is called by:
  2014 ;;		Interrupt level 2
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	intcode
  2019  000008                     __pintcode:
  2020                           	callstack 0
  2021  000008                     _InterruptManagerHigh:
  2022                           	callstack 24
  2023                           
  2024                           ;incstack = 0
  2025  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2026  00000A  ED58  F009         	call	int_func,f	;refresh shadow registers
  2027                           
  2028                           	psect	intcode_body
  2029  0012B0                     __pintcode_body:
  2030                           	callstack 24
  2031  0012B0                     int_func:
  2032                           	callstack 24
  2033  0012B0  0006               	pop		; remove dummy address from shadow register refresh
  2034  0012B2                     
  2035                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  2036  0012B2  AAF2               	btfss	242,5,c	;volatile
  2037  0012B4  EF5E  F009         	goto	i2u270_41
  2038  0012B8  EF60  F009         	goto	i2u270_40
  2039  0012BC                     i2u270_41:
  2040  0012BC  EF69  F009         	goto	i2l1130
  2041  0012C0                     i2u270_40:
  2042  0012C0  A4F2               	btfss	242,2,c	;volatile
  2043  0012C2  EF65  F009         	goto	i2u271_41
  2044  0012C6  EF67  F009         	goto	i2u271_40
  2045  0012CA                     i2u271_41:
  2046  0012CA  EF69  F009         	goto	i2l1130
  2047  0012CE                     i2u271_40:
  2048  0012CE                     
  2049                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  2050  0012CE  ECD6  F00A         	call	_TMR0_ISR	;wreg free
  2051  0012D2                     i2l1130:
  2052                           
  2053                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  2054  0012D2  A29D               	btfss	157,1,c	;volatile
  2055  0012D4  EF6E  F009         	goto	i2u272_41
  2056  0012D8  EF70  F009         	goto	i2u272_40
  2057  0012DC                     i2u272_41:
  2058  0012DC  EF71  F009         	goto	i2l1132
  2059  0012E0                     i2u272_40:
  2060  0012E0  509E               	movf	158,w,c	;volatile
  2061  0012E2                     i2l1132:
  2062                           
  2063                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  2064  0012E2  A2A0               	btfss	160,1,c	;volatile
  2065  0012E4  EF76  F009         	goto	i2u273_41
  2066  0012E8  EF78  F009         	goto	i2u273_40
  2067  0012EC                     i2u273_41:
  2068  0012EC  EF79  F009         	goto	i2l1134
  2069  0012F0                     i2u273_40:
  2070  0012F0  50A1               	movf	161,w,c	;volatile
  2071  0012F2                     i2l1134:
  2072                           
  2073                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  2074  0012F2  A0A0               	btfss	160,0,c	;volatile
  2075  0012F4  EF7E  F009         	goto	i2u274_41
  2076  0012F8  EF80  F009         	goto	i2u274_40
  2077  0012FC                     i2u274_41:
  2078  0012FC  EF81  F009         	goto	i2l1136
  2079  001300                     i2u274_40:
  2080  001300  50A1               	movf	161,w,c	;volatile
  2081  001302                     i2l1136:
  2082                           
  2083                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  2084  001302  AA9D               	btfss	157,5,c	;volatile
  2085  001304  EF86  F009         	goto	i2u275_41
  2086  001308  EF88  F009         	goto	i2u275_40
  2087  00130C                     i2u275_41:
  2088  00130C  EF91  F009         	goto	i2l1138
  2089  001310                     i2u275_40:
  2090  001310  AA9E               	btfss	158,5,c	;volatile
  2091  001312  EF8D  F009         	goto	i2u276_41
  2092  001316  EF8F  F009         	goto	i2u276_40
  2093  00131A                     i2u276_41:
  2094  00131A  EF91  F009         	goto	i2l1138
  2095  00131E                     i2u276_40:
  2096  00131E                     
  2097                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  2098  00131E  ECD8  F00A         	call	_EUSART_Rx_ISR	;wreg free
  2099  001322                     i2l1138:
  2100                           
  2101                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  2102  001322  A89D               	btfss	157,4,c	;volatile
  2103  001324  EF96  F009         	goto	i2u277_41
  2104  001328  EF98  F009         	goto	i2u277_40
  2105  00132C                     i2u277_41:
  2106  00132C  EFA1  F009         	goto	i2l1140
  2107  001330                     i2u277_40:
  2108  001330  A89E               	btfss	158,4,c	;volatile
  2109  001332  EF9D  F009         	goto	i2u278_41
  2110  001336  EF9F  F009         	goto	i2u278_40
  2111  00133A                     i2u278_41:
  2112  00133A  EFA1  F009         	goto	i2l1140
  2113  00133E                     i2u278_40:
  2114  00133E                     
  2115                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  2116  00133E  ECD7  F00A         	call	_EUSART_Tx_ISR	;wreg free
  2117  001342                     i2l1140:
  2118                           
  2119                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  2120  001342  A6A0               	btfss	160,3,c	;volatile
  2121  001344  EFA6  F009         	goto	i2u279_41
  2122  001348  EFA8  F009         	goto	i2u279_40
  2123  00134C                     i2u279_41:
  2124  00134C  EFA9  F009         	goto	i2l1142
  2125  001350                     i2u279_40:
  2126  001350  50A1               	movf	161,w,c	;volatile
  2127  001352                     i2l1142:
  2128                           
  2129                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  2130  001352  A69D               	btfss	157,3,c	;volatile
  2131  001354  EFAE  F009         	goto	i2u280_41
  2132  001358  EFB0  F009         	goto	i2u280_40
  2133  00135C                     i2u280_41:
  2134  00135C  EFB1  F009         	goto	i2l1145
  2135  001360                     i2u280_40:
  2136  001360  509E               	movf	158,w,c	;volatile
  2137  001362                     i2l1145:
  2138  001362  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2139  001364  0011               	retfie		f
  2140  001366                     __end_of_InterruptManagerHigh:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _TMR0_ISR *****************
  2144 ;; Defined at:
  2145 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		None
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_InterruptManagerHigh
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text14
  2173  0015AC                     __ptext14:
  2174                           	callstack 0
  2175  0015AC                     _TMR0_ISR:
  2176                           	callstack 24
  2177  0015AC  0012               	return		;funcret
  2178  0015AE                     __end_of_TMR0_ISR:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _EUSART_Tx_ISR *****************
  2182 ;; Defined at:
  2183 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		None
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_InterruptManagerHigh
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text15
  2211  0015AE                     __ptext15:
  2212                           	callstack 0
  2213  0015AE                     _EUSART_Tx_ISR:
  2214                           	callstack 24
  2215  0015AE  0012               	return		;funcret
  2216  0015B0                     __end_of_EUSART_Tx_ISR:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _EUSART_Rx_ISR *****************
  2220 ;; Defined at:
  2221 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_InterruptManagerHigh
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text16
  2249  0015B0                     __ptext16:
  2250                           	callstack 0
  2251  0015B0                     _EUSART_Rx_ISR:
  2252                           	callstack 24
  2253  0015B0  0012               	return		;funcret
  2254  0015B2                     __end_of_EUSART_Rx_ISR:
  2255                           	callstack 0
  2256                           
  2257                           	psect	rparam
  2258  0000                     
  2259                           	psect	temp
  2260  00007A                     btemp:
  2261                           	callstack 0
  2262  00007A                     	ds	1
  2263  0000                     int$flags	set	btemp
  2264  0000                     wtemp8	set	btemp+1
  2265  0000                     ttemp5	set	btemp+1
  2266  0000                     ttemp6	set	btemp+4
  2267  0000                     ttemp7	set	btemp+8
  2268                           
  2269                           	psect	idloc
  2270                           
  2271                           ;Config register IDLOC0 @ 0x200000
  2272                           ;	unspecified, using default values
  2273  200000                     	org	2097152
  2274  200000  FF                 	db	255
  2275                           
  2276                           ;Config register IDLOC1 @ 0x200001
  2277                           ;	unspecified, using default values
  2278  200001                     	org	2097153
  2279  200001  FF                 	db	255
  2280                           
  2281                           ;Config register IDLOC2 @ 0x200002
  2282                           ;	unspecified, using default values
  2283  200002                     	org	2097154
  2284  200002  FF                 	db	255
  2285                           
  2286                           ;Config register IDLOC3 @ 0x200003
  2287                           ;	unspecified, using default values
  2288  200003                     	org	2097155
  2289  200003  FF                 	db	255
  2290                           
  2291                           ;Config register IDLOC4 @ 0x200004
  2292                           ;	unspecified, using default values
  2293  200004                     	org	2097156
  2294  200004  FF                 	db	255
  2295                           
  2296                           ;Config register IDLOC5 @ 0x200005
  2297                           ;	unspecified, using default values
  2298  200005                     	org	2097157
  2299  200005  FF                 	db	255
  2300                           
  2301                           ;Config register IDLOC6 @ 0x200006
  2302                           ;	unspecified, using default values
  2303  200006                     	org	2097158
  2304  200006  FF                 	db	255
  2305                           
  2306                           ;Config register IDLOC7 @ 0x200007
  2307                           ;	unspecified, using default values
  2308  200007                     	org	2097159
  2309  200007  FF                 	db	255
  2310                           
  2311                           	psect	config
  2312                           
  2313                           ; Padding undefined space
  2314  300000                     	org	3145728
  2315  300000  FF                 	db	255
  2316                           
  2317                           ;Config register CONFIG1H @ 0x300001
  2318                           ;	Oscillator Selection bits
  2319                           ;	OSC = HS, HS oscillator
  2320                           ;	Fail-Safe Clock Monitor Enable bit
  2321                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2322                           ;	Internal/External Oscillator Switchover bit
  2323                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2324  300001                     	org	3145729
  2325  300001  02                 	db	2
  2326                           
  2327                           ;Config register CONFIG2L @ 0x300002
  2328                           ;	Power-up Timer Enable bit
  2329                           ;	PWRT = OFF, PWRT disabled
  2330                           ;	Brown-out Reset Enable bits
  2331                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2332                           ;	Brown Out Reset Voltage bits
  2333                           ;	BORV = 1, 
  2334  300002                     	org	3145730
  2335  300002  09                 	db	9
  2336                           
  2337                           ;Config register CONFIG2H @ 0x300003
  2338                           ;	Watchdog Timer Enable bit
  2339                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2340                           ;	Watchdog Timer Postscale Select bits
  2341                           ;	WDTPS = 512, 1:512
  2342  300003                     	org	3145731
  2343  300003  12                 	db	18
  2344                           
  2345                           ; Padding undefined space
  2346  300004                     	org	3145732
  2347  300004  FF                 	db	255
  2348                           
  2349                           ;Config register CONFIG3H @ 0x300005
  2350                           ;	CCP2 MUX bit
  2351                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2352                           ;	PORTB A/D Enable bit
  2353                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2354                           ;	Low-Power Timer1 Oscillator Enable bit
  2355                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2356                           ;	MCLR Pin Enable bit
  2357                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2358  300005                     	org	3145733
  2359  300005  81                 	db	129
  2360                           
  2361                           ;Config register CONFIG4L @ 0x300006
  2362                           ;	Stack Full/Underflow Reset Enable bit
  2363                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2364                           ;	Single-Supply ICSP Enable bit
  2365                           ;	LVP = OFF, Single-Supply ICSP disabled
  2366                           ;	Extended Instruction Set Enable bit
  2367                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2368                           ;	Background Debugger Enable bit
  2369                           ;	DEBUG = 0x1, unprogrammed default
  2370  300006                     	org	3145734
  2371  300006  81                 	db	129
  2372                           
  2373                           ; Padding undefined space
  2374  300007                     	org	3145735
  2375  300007  FF                 	db	255
  2376                           
  2377                           ;Config register CONFIG5L @ 0x300008
  2378                           ;	Code Protection bit
  2379                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2380                           ;	Code Protection bit
  2381                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2382                           ;	Code Protection bit
  2383                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2384                           ;	Code Protection bit
  2385                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2386  300008                     	org	3145736
  2387  300008  0F                 	db	15
  2388                           
  2389                           ;Config register CONFIG5H @ 0x300009
  2390                           ;	Boot Block Code Protection bit
  2391                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2392                           ;	Data EEPROM Code Protection bit
  2393                           ;	CPD = OFF, Data EEPROM not code-protected
  2394  300009                     	org	3145737
  2395  300009  C0                 	db	192
  2396                           
  2397                           ;Config register CONFIG6L @ 0x30000A
  2398                           ;	Write Protection bit
  2399                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2400                           ;	Write Protection bit
  2401                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2402                           ;	Write Protection bit
  2403                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2404                           ;	Write Protection bit
  2405                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2406  30000A                     	org	3145738
  2407  30000A  0F                 	db	15
  2408                           
  2409                           ;Config register CONFIG6H @ 0x30000B
  2410                           ;	Configuration Register Write Protection bit
  2411                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2412                           ;	Boot Block Write Protection bit
  2413                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2414                           ;	Data EEPROM Write Protection bit
  2415                           ;	WRTD = OFF, Data EEPROM not write-protected
  2416  30000B                     	org	3145739
  2417  30000B  E0                 	db	224
  2418                           
  2419                           ;Config register CONFIG7L @ 0x30000C
  2420                           ;	Table Read Protection bit
  2421                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2422                           ;	Table Read Protection bit
  2423                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2424                           ;	Table Read Protection bit
  2425                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2426                           ;	Table Read Protection bit
  2427                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2428  30000C                     	org	3145740
  2429  30000C  0F                 	db	15
  2430                           
  2431                           ;Config register CONFIG7H @ 0x30000D
  2432                           ;	Boot Block Table Read Protection bit
  2433                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2434  30000D                     	org	3145741
  2435  30000D  40                 	db	64
  2436                           tosu	equ	0xFFF
  2437                           tosh	equ	0xFFE
  2438                           tosl	equ	0xFFD
  2439                           stkptr	equ	0xFFC
  2440                           pclatu	equ	0xFFB
  2441                           pclath	equ	0xFFA
  2442                           pcl	equ	0xFF9
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           prodh	equ	0xFF4
  2448                           prodl	equ	0xFF3
  2449                           indf0	equ	0xFEF
  2450                           postinc0	equ	0xFEE
  2451                           postdec0	equ	0xFED
  2452                           preinc0	equ	0xFEC
  2453                           plusw0	equ	0xFEB
  2454                           fsr0h	equ	0xFEA
  2455                           fsr0l	equ	0xFE9
  2456                           wreg	equ	0xFE8
  2457                           indf1	equ	0xFE7
  2458                           postinc1	equ	0xFE6
  2459                           postdec1	equ	0xFE5
  2460                           preinc1	equ	0xFE4
  2461                           plusw1	equ	0xFE3
  2462                           fsr1h	equ	0xFE2
  2463                           fsr1l	equ	0xFE1
  2464                           bsr	equ	0xFE0
  2465                           indf2	equ	0xFDF
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           preinc2	equ	0xFDC
  2469                           plusw2	equ	0xFDB
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        61
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19     121
    BANK0           128      0      15
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    Timer2_Init$0	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(COMRAM[12]), CCP1_Obj(COMRAM[12]), 

    S4726$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4726$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Ecu_Stepper_Step@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper1(COMRAM[2]), 

    Ecu_Stepper_Init@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper1(COMRAM[2]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3218$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3218$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3171$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S527$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> stepper1.dir_pin(COMRAM[1]), stepper1.step_pin(COMRAM[1]), stepper1(COMRAM[2]), CCP2_Obj(COMRAM[12]), 
		 -> CCP1_Obj(COMRAM[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> stepper1.dir_pin(COMRAM[1]), stepper1.step_pin(COMRAM[1]), stepper1(COMRAM[2]), CCP2_Obj(COMRAM[12]), 
		 -> CCP1_Obj(COMRAM[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> stepper1.dir_pin(COMRAM[1]), stepper1.step_pin(COMRAM[1]), stepper1(COMRAM[2]), CCP2_Obj(COMRAM[12]), 
		 -> CCP1_Obj(COMRAM[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_Ecu_Stepper_Init
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _Ecu_Stepper_Init->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16277
                   _Ecu_Stepper_Init
                   _Ecu_Stepper_Step
 ---------------------------------------------------------------------------------
 (1) _Ecu_Stepper_Step                                     3     1      2    4729
                                             14 COMRAM     3     1      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Ecu_Stepper_Init                                     2     0      2   11548
                                             17 COMRAM     2     0      2
      _GPIO_Pin_Direction_Initialize
                _GPIO_Pin_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Initialize                                  3     1      2    6248
                                             14 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Write_Logic                                10     7      3    4587
                                              4 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Direction_Initialize                        9     7      2     483
                                              4 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManagerLow                                  3     3      0     120
                                              1 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManagerHigh                                 0     0      0       0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Tx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Rx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ecu_Stepper_Init
     _GPIO_Pin_Direction_Initialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Write_Logic
   _Ecu_Stepper_Step
     _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       F       5       11.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     13      79       1       96.0%
BITBIGSFRhhhhll     18      0       0      37        0.0%
BITBIGSFRhhhhh       D      0       0      36        0.0%
BITBIGSFRllhhll      8      0       0      45        0.0%
BITBIGSFRllhhll      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRhhhl        4      0       0      39        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRhhhhll      3      0       0      38        0.0%
BITBIGSFRhhlhh       1      0       0      40        0.0%
BITBIGSFRllhhll      1      0       0      43        0.0%
BITBIGSFRllhhlh      1      0       0      42        0.0%
BITBIGSFRllhhh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      49        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 02 12:24:15 2023

                             _SSPSTATbits 000FC7                                        bsr 000FE0  
                   ??_InterruptManagerLow 0068                                       l851 1186  
                                     l870 12AE                                       l887 1476  
                                     _PR2 000FCB                    ??_InterruptManagerHigh 0067  
               _RB5_InterruptHandler_HIGH 004C                           __end_of_ADC_ISR 15AC  
GPIO_Pin_Direction_Initialize@ERRORSTATUS 0073                                       prod 000FF3  
                                     wreg 000FE8                                _TXSTA1bits 000FAC  
                  ??_GPIO_Pin_Write_Logic 006E                           __end_of_RB4_ISR 15A6  
                         __end_of_RB5_ISR 158C                           __end_of_RB6_ISR 1572  
                         __end_of_RB7_ISR 1558                                      l1700 13D8  
                                    l1705 142C                                      l5010 11BC  
                                    l5012 11C4                                      l5020 12AC  
                                    l5004 1188                                      l5030 104C  
                                    l5014 1226                                      l5006 118C  
                                    l5032 105E                                      l5008 119E  
                                    l5042 1142                                      l5034 107C  
                                    l5018 1282                                      l5036 1084  
                                    l5044 1184                                      l5028 1048  
                                    l5060 1474                                      l5052 142E  
                                    l5300 13F0                                      l5038 10E6  
                                    l5054 142E                                      l5302 1400  
                                    l5056 1440                                      l5304 140E  
                                    l1688 14BA                                      l5058 1448  
                                    l5292 137C                                      l5286 1366  
                                    l5294 13DA                                      l5802 1494  
                                    l5804 14A0                                      l5830 116E  
                                    l5806 14A4                                      l5828 1296  
                                    l5792 1478                                      l5794 1480  
                                    l5796 148C                                      STR_1 1014  
                                    STR_2 1034                                      STR_3 1025  
                                    STR_4 1001                                      STR_5 1043  
                                    STR_9 1040                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u4110 1378                                      u4111 1374  
                                    u4120 13EC                                      u4121 13E8  
                                    u4520 14BA                                      u4521 14B6  
                                    u3820 115A                                      u3804 10A0  
                                    u3740 119E                                      u3821 1154  
                                    u3805 109C                                      u3741 119A  
                                    u3830 115C                                      u3814 1102  
                                    u3750 11BC                                      u3815 10FE  
                                    u3751 11B8                                      u3840 1440  
                                    u3841 143C                                      u3780 105E  
                                    u3764 11E0                                      u3781 105A  
                                    u3765 11DC                                      u4557 1406  
                                    u3790 107C                                      u3774 1242  
                                    u3791 1078                                      u3775 123E  
                                    u4567 1424                                      _RX9D 007D58  
                _RB4_InterruptHandler_LOW 004E                                      _main 1478  
                _RB7_InterruptHandler_LOW 0042                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 007A  
                                    prodl 000FF3                                      start 0286  
                            ___param_bank 000000                          __end_of_INT1_ISR 15AA  
                                   ?_main 0067                                     i1l438 15AA  
                                   i2l803 15B0                                     i2l799 15AE  
                                   _RCREG 000FAE                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _SPBRG 000FAF  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                             _EUSART_Rx_ISR 15B0  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             _EUSART_Tx_ISR 15AE  
                                   _TXREG 000FAD                          __end_of_TMR0_ISR 15AE  
                                   _flags 0021                                     tablat 000FF5  
                                   ttemp5 007B                                     ttemp6 007E  
                                   ttemp7 0082                                     status 000FD8  
                                   wtemp8 007B               _I2C_DefaultInterruptHandler 005C  
                         __initialization 14BE                              __end_of_main 14BE  
              _eusart_Rx_InterruptHandler 0062                                 ??_ADC_ISR 0067  
                           _lat_registers 000B                                    ??_main 007A  
                           __activetblptr 000003                            ?_EUSART_Rx_ISR 0067  
                          ?_EUSART_Tx_ISR 0067                                 ??_RB4_ISR 0067  
                               ??_RB5_ISR 0067                                 ??_RB6_ISR 0067  
                               ??_RB7_ISR 0067                     RB5_ISR@Handler_Select 0067  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1L 000FBE                                    _CCPR2L 000FBB  
                __end_of_Ecu_Stepper_Init 13DA                  __end_of_Ecu_Stepper_Step 142E  
                                  i1l1151 0046                                    i1l1161 0186  
                                  i1l1153 0086                                    i1l3010 158E  
                                  i1l1251 15A4                                    i1l1163 01C6  
                                  i1l1155 00C6                                    i1l3012 1590  
                                  i1l1260 158A                                    i1l3020 1574  
                                  i1l1172 0276                                    i1l1165 0206  
                                  i1l1157 0106                                    i1l1238 15A8  
                                  i1l3006 15A6                                    i1l3022 1576  
                                  i1l3030 155A                                    i1l1167 0246  
                                  i1l1159 0146                                    i1l3016 15A4  
                                  i1l3032 155C                                    i1l3040 1540  
                                  i1l1169 0266                                    i1l3026 158A  
                                  i1l3042 1542                                    i1l3036 1570  
                                  i1l1269 1570                                    i1l1278 1556  
                                  i1l3046 1556                                    i1l4400 0170  
                                  i2l1130 12D2                                    i1l4410 01B0  
                                  i1l4402 017E                                    i2l1140 1342  
                                  i2l1132 12E2                                    i1l4420 01F0  
                                  i1l4412 01BE                                    i1l4404 0180  
                                  i2l1142 1352                                    i2l1134 12F2  
                                  i1l4430 0230                                    i1l4422 01FE  
                                  i1l4414 01C0                                    i1l4406 0194  
                                  i1l4350 0026                                    i2l1136 1302  
                                  i1l4440 0274                                    i1l4432 023E  
                                  i1l4424 0200                                    i1l4416 01D4  
                                  i1l4408 01A2                                    i1l4360 0070  
                                  i1l4352 0034                                    i2l1145 1362  
                                  i2l1138 1322                                    i1l4434 0240  
                                  i1l4426 0214                                    i1l4418 01E2  
                                  i1l4370 00B0                                    i1l4362 007E  
                                  i1l4354 0042                                    i2l3004 15B0  
                                  i1l4436 0254                                    i1l4428 0222  
                                  i1l4380 00F0                                    i1l4372 00BE  
                                  i1l4364 0080                                    i1l4356 0054  
                                  i1l4438 0262                                    i1l4390 0130  
                                  i1l4382 00FE                                    i1l4374 00C0  
                                  i1l4366 0094                                    i1l4358 0062  
                                  i1l4392 013E                                    i1l4384 0100  
                                  i1l4376 00D4                                    i1l4368 00A2  
                                  i1l4394 0140                                    i1l4386 0114  
                                  i1l4378 00E2                                    i1l4396 0154  
                                  i1l4388 0122                                    i1l4398 0162  
                                  i2l1528 15AC                                    i2l4320 12CE  
                                  i2l4330 1300                                    i2l4322 12E0  
                                  i2l4340 133E                                    i2l4316 12B2  
                                  i2l4342 1350                                    i2l4334 1310  
                                  i2l4326 12F0                                    i2l4318 12C0  
                                  i2l4336 131E                                    i2l4346 1360  
                                  i2l4338 1330                            _Movement_State 0064  
                                  _SPBRGH 000FB0                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                    _W1_W3_W5_Motor_Control 003C  
         ??_GPIO_Pin_Direction_Initialize 006D               __end_of_GPIO_Pin_Initialize 1478  
                                  clear_0 14E4                                    clear_1 14F0  
                                  isa$std 000001                              __pdataCOMRAM 0001  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                              __accesstop 0080                   __end_of__initialization 14F6  
                               ?_INT1_ISR 0067                             ___rparam_used 000001  
              _I2C_Report_Write_Collision 0058                            __pcstackCOMRAM 0067  
                               ?_TMR0_ISR 0067                           ??_EUSART_Rx_ISR 0067  
                         ??_EUSART_Tx_ISR 0067                                __pbssBANK0 0080  
                   _INT0_InterruptHandler 0056                                ??_INT1_ISR 0067  
                _eusart_frameerr_CallBack 005E               __end_of_InterruptManagerLow 0286  
                              ??_TMR0_ISR 0067                                   _ADC_ISR 15AA  
   __end_of_GPIO_Pin_Direction_Initialize 1188             _GPIO_Pin_Direction_Initialize 1048  
                                 _RB4_ISR 158C                                   _RB5_ISR 1572  
                                 _RB6_ISR 1558                                   _RB7_ISR 153E  
               _RB6_InterruptHandler_HIGH 0048                                   i1u90_20 15A0  
                                 i1u90_21 159C                                   i1u91_20 1586  
                                 i1u91_21 1582                                   i1u92_20 156C  
                                 i1u92_21 1568                                   i1u93_20 1552  
                                 i1u93_21 154E                            _tris_registers 0015  
                _RB6_InterruptHandler_LOW 0046                                   __Hparam 0000  
              _eusart_overrunerr_CallBack 0060                                   __Lparam 0000  
                            __psmallconst 1000                                   __pcinit 14BE  
                                 __ramtop 1000                                   __ptext0 1478  
                                 __ptext1 13DA                                   __ptext2 1366  
                                 __ptext3 142E                                   __ptext4 1188  
                                 __ptext5 1048                                   __ptext7 153E  
                                 __ptext8 1558                                   __ptext9 1572  
                               _T0CONbits 000FD5                                   _counter 003E  
                               _T3CONbits 000FB1                            __pintcode_body 12B0  
                    end_of_initialization 14F6                         ?_Ecu_Stepper_Init 0078  
                       ?_Ecu_Stepper_Step 0075                                   int_func 12B0  
                      ??_Ecu_Stepper_Init 007A                        ??_Ecu_Stepper_Step 0077  
                               _RCSTAbits 000FAB                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                     _INT1_InterruptHandler 0054  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
          ?_GPIO_Pin_Direction_Initialize 006B                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                   RB4_ISR@Handler_Select 0067                     RB7_ISR@Handler_Select 0067  
                 Ecu_Stepper_Init@stepper 0078                               _CCP1CONbits 000FBD  
                             _CCP2CONbits 000FBA                                 _TXSTAbits 000FAC  
           convert_uint16_to_string@F3203 0089                               _BAUDCONbits 000FB8  
                           __pidataCOMRAM 1500                       start_initialization 14BE  
         GPIO_Pin_Write_Logic@_pin_config 006B            GPIO_Pin_Initialize@_pin_config 0075  
                                ?_ADC_ISR 0067                     __end_of_EUSART_Rx_ISR 15B2  
                   __end_of_EUSART_Tx_ISR 15B0                                  ?_RB4_ISR 0067  
                                ?_RB5_ISR 0067                                  ?_RB6_ISR 0067  
                                ?_RB7_ISR 0067                               __pbssCOMRAM 003E  
                   _INT2_InterruptHandler 0052              __end_of_InterruptManagerHigh 1366  
                               __pintcode 0008              __end_of_GPIO_Pin_Write_Logic 12B0  
         GPIO_Pin_Write_Logic@ERRORSTATUS 0074                               __pintcodelo 0018  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 0050  
                                _CCP1_Obj 002E                                  _CCP2_Obj 0022  
               _RB7_InterruptHandler_HIGH 0044            GPIO_Pin_Initialize@ERRORSTATUS 0077  
          convert_float32_to_string@F3214 0080                  _RB5_InterruptHandler_LOW 004A  
                                _INT1_ISR 15A6                                  _LATDbits 000F8C  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                i1u300_20 0162                                  i1u300_21 015E  
                                i1u301_20 0170                                  i1u301_21 016C  
                                i1u310_20 01FE                                  i1u302_20 017E  
                                i1u310_21 01FA                                  i1u302_21 017A  
                                i1u311_20 0214                                  i1u303_20 0194  
                                i1u311_21 0210                                  i1u303_21 0190  
                                i1u312_20 0222                                  i1u304_20 01A2  
                                i1u312_21 021E                                  i1u304_21 019E  
                                i1u313_20 0230                                  i1u305_20 01B0  
                                i1u313_21 022C                                  i1u305_21 01AC  
                                i1u314_20 023E                                  i1u306_20 01BE  
                                i1u314_21 023A                                  i1u306_21 01BA  
                                i1u315_20 0254                                  i1u307_20 01D4  
                                i1u315_21 0250                                  i1u307_21 01D0  
                                i1u316_20 0262                                  i1u308_20 01E2  
                                i1u316_21 025E                                  i1u308_21 01DE  
                                i1u317_20 0274                                  i1u309_20 01F0  
                                i1u317_21 0270                                  i1u309_21 01EC  
                                i1u281_20 0034                                  i1u281_21 0030  
                                i1u290_20 00BE                                  i1u282_20 0042  
                                i1u290_21 00BA                                  i1u282_21 003E  
                                i1u291_20 00D4                                  i1u283_20 0054  
                                i1u291_21 00D0                                  i1u283_21 0050  
                                i1u292_20 00E2                                  i1u284_20 0062  
                                i1u292_21 00DE                                  i1u284_21 005E  
                                i1u293_20 00F0                                  i1u285_20 0070  
                                i1u293_21 00EC                                  i1u285_21 006C  
                                i1u294_20 00FE                                  i1u286_20 007E  
                                i1u294_21 00FA                                  i1u286_21 007A  
                                i1u295_20 0114                                  i1u287_20 0094  
                                i1u295_21 0110                                  i1u287_21 0090  
                                i1u296_20 0122                                  i1u288_20 00A2  
                                i1u296_21 011E                                  i1u288_21 009E  
                                i1u297_20 0130                                  i1u289_20 00B0  
                                i1u297_21 012C                                  i1u289_21 00AC  
                                i1u298_20 013E                                  i1u298_21 013A  
                                i1u299_20 0154                                  i1u299_21 0150  
                                i2u270_40 12C0                                  i2u270_41 12BC  
                                i2u271_40 12CE                                  i2u271_41 12CA  
                                i2u280_40 1360                                  i2u272_40 12E0  
                                i2u280_41 135C                                  i2u272_41 12DC  
                                i2u273_40 12F0                                  i2u273_41 12EC  
                                _PIR1bits 000F9E                                  i2u274_40 1300  
                                i2u274_41 12FC                                  i2u275_40 1310  
                                i2u275_41 130C                                  _PIR2bits 000FA1  
                                i2u276_40 131E                                  i2u276_41 131A  
                                i2u277_40 1330                                  i2u277_41 132C  
                                i2u278_40 133E                                  i2u278_41 133A  
                                i2u279_40 1350                                  i2u279_41 134C  
                                _RCONbits 000FD0                                  _TMR0_ISR 15AC  
             _I2C_Report_Receive_Overflow 005A                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
                               _step_pin1 0020                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 14D2  
                     _GPIO_Pin_Initialize 142E                                  __Hrparam 0000  
                                __Lrparam 0000                 GPIO_Pin_Write_Logic@logic 006D  
                           _preloaded_val 0040                      ?_GPIO_Pin_Initialize 0075  
                   RB6_ISR@Handler_Select 0067                      _InterruptManagerHigh 0008  
                                __ptext10 158C                                  __ptext11 15A6  
                                __ptext12 15AA                                  __ptext14 15AC  
                                __ptext15 15AE                                  __ptext16 15B0  
                                _dir_pin1 001F                      _GPIO_Pin_Write_Logic 1188  
                                isa$xinst 000000                                  int$flags 007A  
                                _stepper1 0065                     ??_GPIO_Pin_Initialize 0077  
                              _INTCONbits 000FF2                   Ecu_Stepper_Step@stepper 0075  
                   ?_InterruptManagerHigh 0067                     ?_GPIO_Pin_Write_Logic 006B  
                                intlevel1 0000                                  intlevel2 0000  
                     _InterruptManagerLow 0018  GPIO_Pin_Direction_Initialize@_pin_config 006B  
                              _RCSTA1bits 000FAB                          _Ecu_Stepper_Init 1366  
                        _Ecu_Stepper_Step 13DA                      ?_InterruptManagerLow 0067  
                          _port_registers 0001                    _W2_W4_W6_Motor_Control 003A  
                             _SSPCON1bits 000FC6                               _SSPCON2bits 000FC5  
                              _WDTCONbits 000FD1  
