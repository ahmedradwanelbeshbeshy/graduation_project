

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Sep 24 01:58:00 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4620 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  00135A                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _port_registers
   100  00135A  80                 	db	128
   101  00135B  0F                 	db	15
   102  00135C  81                 	db	129
   103  00135D  0F                 	db	15
   104  00135E  82                 	db	130
   105  00135F  0F                 	db	15
   106  001360  83                 	db	131
   107  001361  0F                 	db	15
   108  001362  84                 	db	132
   109  001363  0F                 	db	15
   110                           
   111                           ;initializer for _lat_registers
   112  001364  89                 	db	137
   113  001365  0F                 	db	15
   114  001366  8A                 	db	138
   115  001367  0F                 	db	15
   116  001368  8B                 	db	139
   117  001369  0F                 	db	15
   118  00136A  8C                 	db	140
   119  00136B  0F                 	db	15
   120  00136C  8D                 	db	141
   121  00136D  0F                 	db	15
   122                           
   123                           ;initializer for _tris_registers
   124  00136E  92                 	db	146
   125  00136F  0F                 	db	15
   126  001370  93                 	db	147
   127  001371  0F                 	db	15
   128  001372  94                 	db	148
   129  001373  0F                 	db	15
   130  001374  95                 	db	149
   131  001375  0F                 	db	15
   132  001376  96                 	db	150
   133  001377  0F                 	db	15
   134                           
   135                           ;initializer for _flags
   136  001378  0F                 	db	15
   137                           
   138                           ;initializer for _INTERUPT_oncahnge
   139  001379  00                 	db	0
   140  00137A  00                 	db	0
   141  00137B  22                 	db	low _OnChanggeINT_Handler
   142  00137C  14                 	db	high _OnChanggeINT_Handler
   143  00137D  00                 	db	0
   144  00137E  4C                 	db	76
   145                           
   146                           ;initializer for _INTERUPT1
   147  00137F  0A                 	db	low _INT1_Handler
   148  001380  14                 	db	high _INT1_Handler
   149  001381  00                 	db	0
   150  001382  01                 	db	1
   151  001383  00                 	db	0
   152                           
   153                           ;initializer for _PIN2
   154  001384  12                 	db	18
   155                           
   156                           ;initializer for _PIN1
   157  001385  10                 	db	16
   158  0000                     _RCONbits	set	4048
   159  0000                     _INTCON2bits	set	4081
   160  0000                     _TRISBbits	set	3987
   161  0000                     _PORTBbits	set	3969
   162  0000                     _PIR2bits	set	4001
   163  0000                     _PIE2bits	set	4000
   164  0000                     _PIR1bits	set	3998
   165  0000                     _PIE1bits	set	3997
   166  0000                     _INTCON3bits	set	4080
   167  0000                     _INTCONbits	set	4082
   168  0000                     _PORTE	set	3972
   169  0000                     _PORTD	set	3971
   170  0000                     _PORTC	set	3970
   171  0000                     _PORTB	set	3969
   172  0000                     _PORTA	set	3968
   173  0000                     _LATE	set	3981
   174  0000                     _LATD	set	3980
   175  0000                     _LATC	set	3979
   176  0000                     _LATB	set	3978
   177  0000                     _LATA	set	3977
   178  0000                     _TRISE	set	3990
   179  0000                     _TRISD	set	3989
   180  0000                     _TRISC	set	3988
   181  0000                     _TRISB	set	3987
   182  0000                     _TRISA	set	3986
   183                           
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187  001220                     __pcinit:
   188                           	callstack 0
   189  001220                     start_initialization:
   190                           	callstack 0
   191  001220                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (44 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196  001220  0E5A               	movlw	low __pidataCOMRAM
   197  001222  6EF6               	movwf	tblptrl,c
   198  001224  0E13               	movlw	high __pidataCOMRAM
   199  001226  6EF7               	movwf	tblptrh,c
   200  001228  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201  00122A  6EF8               	movwf	tblptru,c
   202  00122C  EE00  F001         	lfsr	0,__pdataCOMRAM
   203  001230  EE10 F02C          	lfsr	1,44
   204  001234                     copy_data0:
   205  001234  0009               	tblrd		*+
   206  001236  CFF5 FFEE          	movff	tablat,postinc0
   207  00123A  50E5               	movf	postdec1,w,c
   208  00123C  50E1               	movf	fsr1l,w,c
   209  00123E  E1FA               	bnz	copy_data0
   210                           
   211                           ; Clear objects allocated to COMRAM (22 bytes)
   212  001240  EE00  F04D         	lfsr	0,__pbssCOMRAM
   213  001244  0E16               	movlw	22
   214  001246                     clear_0:
   215  001246  6AEE               	clrf	postinc0,c
   216  001248  06E8               	decf	wreg,f,c
   217  00124A  E1FD               	bnz	clear_0
   218  00124C                     end_of_initialization:
   219                           	callstack 0
   220  00124C                     __end_of__initialization:
   221                           	callstack 0
   222  00124C  9063               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   223  00124E  9263               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   224  001250  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225  001252  6EF8               	movwf	tblptru,c
   226  001254  0100               	movlb	0
   227  001256  EF1F  F00A         	goto	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMRAM
   230  00004D                     __pbssCOMRAM:
   231                           	callstack 0
   232  00004D                     _RB7_InterruptHandler_LOW:
   233                           	callstack 0
   234  00004D                     	ds	2
   235  00004F                     _RB7_InterruptHandler_HIGH:
   236                           	callstack 0
   237  00004F                     	ds	2
   238  000051                     _RB6_InterruptHandler_LOW:
   239                           	callstack 0
   240  000051                     	ds	2
   241  000053                     _RB6_InterruptHandler_HIGH:
   242                           	callstack 0
   243  000053                     	ds	2
   244  000055                     _RB5_InterruptHandler_LOW:
   245                           	callstack 0
   246  000055                     	ds	2
   247  000057                     _RB5_InterruptHandler_HIGH:
   248                           	callstack 0
   249  000057                     	ds	2
   250  000059                     _RB4_InterruptHandler_LOW:
   251                           	callstack 0
   252  000059                     	ds	2
   253  00005B                     _RB4_InterruptHandler_HIGH:
   254                           	callstack 0
   255  00005B                     	ds	2
   256  00005D                     _INT2_InterruptHandler:
   257                           	callstack 0
   258  00005D                     	ds	2
   259  00005F                     _INT1_InterruptHandler:
   260                           	callstack 0
   261  00005F                     	ds	2
   262  000061                     _INT0_InterruptHandler:
   263                           	callstack 0
   264  000061                     	ds	2
   265                           
   266                           	psect	dataCOMRAM
   267  000001                     __pdataCOMRAM:
   268                           	callstack 0
   269  000001                     _port_registers:
   270                           	callstack 0
   271  000001                     	ds	10
   272  00000B                     _lat_registers:
   273                           	callstack 0
   274  00000B                     	ds	10
   275  000015                     _tris_registers:
   276                           	callstack 0
   277  000015                     	ds	10
   278  00001F                     _flags:
   279                           	callstack 0
   280  00001F                     	ds	1
   281  000020                     _INTERUPT_oncahnge:
   282                           	callstack 0
   283  000020                     	ds	6
   284  000026                     _INTERUPT1:
   285                           	callstack 0
   286  000026                     	ds	5
   287  00002B                     _PIN2:
   288                           	callstack 0
   289  00002B                     	ds	1
   290  00002C                     _PIN1:
   291                           	callstack 0
   292  00002C                     	ds	1
   293                           
   294                           	psect	cstackBANK0
   295  000080                     __pcstackBANK0:
   296                           	callstack 0
   297  000080                     GPIO_Pin_Direction_Initialize@_pin_config:
   298                           	callstack 0
   299  000080                     GPIO_Pin_Write_Logic@_pin_config:
   300                           	callstack 0
   301  000080                     interrupt_INTx_pin_init@int_obj:
   302                           	callstack 0
   303  000080                     interrupt_INTx_set_edge@int_obj:
   304                           	callstack 0
   305  000080                     interrupt_INTx_set_priority@int_obj:
   306                           	callstack 0
   307  000080                     interrupt_INTx_disable@int_obj:
   308                           	callstack 0
   309  000080                     interrupt_INTx_enable@int_obj:
   310                           	callstack 0
   311  000080                     interrupt_INTx_clear_flag@int_obj:
   312                           	callstack 0
   313  000080                     INT0_set_callback@InterruptHandler:
   314                           	callstack 0
   315  000080                     INT1_set_callback@InterruptHandler:
   316                           	callstack 0
   317  000080                     INT2_set_callback@InterruptHandler:
   318                           	callstack 0
   319  000080                     interrupt_RBx_enable@int_obj:
   320                           	callstack 0
   321  000080                     interrupt_RBx_disable@int_obj:
   322                           	callstack 0
   323  000080                     interrupt_RBx_set_priority@int_obj:
   324                           	callstack 0
   325  000080                     RB4_set_callback@InterruptHandler_HIGH:
   326                           	callstack 0
   327  000080                     RB5_set_callback@InterruptHandler_HIGH:
   328                           	callstack 0
   329  000080                     RB6_set_callback@InterruptHandler_HIGH:
   330                           	callstack 0
   331  000080                     RB7_set_callback@InterruptHandler_HIGH:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x0
   335  000080                     	ds	2
   336  000082                     ??_interrupt_INTx_disable:
   337  000082                     ??_interrupt_INTx_clear_flag:
   338  000082                     ??_interrupt_INTx_set_priority:
   339  000082                     ??_interrupt_INTx_pin_init:
   340  000082                     ??_interrupt_INTx_set_edge:
   341  000082                     ??_interrupt_INTx_enable:
   342  000082                     ??_GPIO_Pin_Direction_Initialize:
   343  000082                     GPIO_Pin_Write_Logic@logic:
   344                           	callstack 0
   345  000082                     INT0_set_callback@ret_value:
   346                           	callstack 0
   347  000082                     INT1_set_callback@ret_value:
   348                           	callstack 0
   349  000082                     INT2_set_callback@ret_value:
   350                           	callstack 0
   351  000082                     RB4_set_callback@InterruptHandler_LOW:
   352                           	callstack 0
   353  000082                     RB5_set_callback@InterruptHandler_LOW:
   354                           	callstack 0
   355  000082                     RB6_set_callback@InterruptHandler_LOW:
   356                           	callstack 0
   357  000082                     RB7_set_callback@InterruptHandler_LOW:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  000082                     	ds	1
   362  000083                     ??_GPIO_Pin_Write_Logic:
   363  000083                     interrupt_RBx_enable@ret_value:
   364                           	callstack 0
   365  000083                     interrupt_RBx_disable@ret_value:
   366                           	callstack 0
   367  000083                     interrupt_RBx_set_priority@ret_value:
   368                           	callstack 0
   369  000083                     interrupt_INTx_set_callback@int_obj:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x3
   373  000083                     	ds	1
   374  000084                     interrupt_INTx_pin_init@ret_value:
   375                           	callstack 0
   376  000084                     interrupt_INTx_set_edge@ret_value:
   377                           	callstack 0
   378  000084                     interrupt_INTx_set_priority@ret_value:
   379                           	callstack 0
   380  000084                     interrupt_INTx_disable@ret_value:
   381                           	callstack 0
   382  000084                     interrupt_INTx_enable@ret_value:
   383                           	callstack 0
   384  000084                     interrupt_INTx_clear_flag@ret_value:
   385                           	callstack 0
   386  000084                     RB4_set_callback@ret_value:
   387                           	callstack 0
   388  000084                     RB5_set_callback@ret_value:
   389                           	callstack 0
   390  000084                     RB6_set_callback@ret_value:
   391                           	callstack 0
   392  000084                     RB7_set_callback@ret_value:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x4
   396  000084                     	ds	1
   397  000085                     ??_interrupt_INTx_set_callback:
   398  000085                     interrupt_RBx_set_callback@int_obj:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x5
   402  000085                     	ds	2
   403  000087                     ??_interrupt_RBx_set_callback:
   404                           
   405                           ; 1 bytes @ 0x7
   406  000087                     	ds	1
   407  000088                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   408                           	callstack 0
   409  000088                     Interrupt_INTx_INIT@int_obj:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x8
   413  000088                     	ds	1
   414  000089                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   415                           	callstack 0
   416  000089                     interrupt_RBx_set_callback@ret_value:
   417                           	callstack 0
   418  000089                     interrupt_RBx_pin_init@int_obj:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x9
   422  000089                     	ds	1
   423  00008A                     Interrupt_INTx_INIT@ret_value:
   424                           	callstack 0
   425  00008A                     GPIO_Pin_Initialize@_pin_config:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xA
   429  00008A                     	ds	1
   430  00008B                     interrupt_RBx_pin_init@ret_value:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0xB
   434  00008B                     	ds	1
   435  00008C                     GPIO_Pin_Initialize@ERRORSTATUS:
   436                           	callstack 0
   437  00008C                     Interrupt_RBx_INIT@int_obj:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xC
   441  00008C                     	ds	2
   442  00008E                     Interrupt_RBx_INIT@ret_value:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0xE
   446  00008E                     	ds	1
   447  00008F                     
   448                           ; 1 bytes @ 0xF
   449                           
   450                           	psect	cstackCOMRAM
   451  00002D                     __pcstackCOMRAM:
   452                           	callstack 0
   453  00002D                     i2GPIO_Pin_Toggle_Logic@_pin_config:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x0
   457  00002D                     	ds	2
   458  00002F                     ??i2_GPIO_Pin_Toggle_Logic:
   459                           
   460                           ; 1 bytes @ 0x2
   461  00002F                     	ds	6
   462  000035                     ??_InterruptManagerHigh:
   463  000035                     
   464                           ; 1 bytes @ 0x8
   465  000035                     	ds	6
   466  00003B                     GPIO_Pin_Toggle_Logic@_pin_config:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xE
   470  00003B                     	ds	2
   471  00003D                     ??_GPIO_Pin_Toggle_Logic:
   472                           
   473                           ; 1 bytes @ 0x10
   474  00003D                     	ds	6
   475  000043                     RB4_ISR@Handler_Select:
   476                           	callstack 0
   477  000043                     RB5_ISR@Handler_Select:
   478                           	callstack 0
   479  000043                     RB6_ISR@Handler_Select:
   480                           	callstack 0
   481  000043                     RB7_ISR@Handler_Select:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x16
   485  000043                     	ds	1
   486  000044                     ??_InterruptManagerLow:
   487                           
   488                           ; 1 bytes @ 0x17
   489  000044                     	ds	9
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 40 in file "application.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels required when called:   12
   516 ;; This function calls:
   517 ;;		_application_intialize
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text0
   524  00143E                     __ptext0:
   525                           	callstack 0
   526  00143E                     _main:
   527                           	callstack 19
   528  00143E                     
   529                           ;application.c: 42:     application_intialize();
   530  00143E  EC2D  F009         	call	_application_intialize	;wreg free
   531  001442                     l140:
   532  001442  EF21  F00A         	goto	l140
   533  001446  EF53  F001         	goto	start
   534  00144A                     __end_of_main:
   535                           	callstack 0
   536                           
   537 ;; *************** function _application_intialize *****************
   538 ;; Defined at:
   539 ;;		line 49 in file "application.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:   11
   560 ;; This function calls:
   561 ;;		_GPIO_Pin_Initialize
   562 ;;		_Interrupt_INTx_INIT
   563 ;;		_Interrupt_RBx_INIT
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text1
   570  00125A                     __ptext1:
   571                           	callstack 0
   572  00125A                     _application_intialize:
   573                           	callstack 19
   574  00125A                     
   575                           ;application.c: 51: GPIO_Pin_Initialize(&PIN1);
   576  00125A  0E2C               	movlw	low _PIN1
   577  00125C  0100               	movlb	0	; () banked
   578  00125E  6F8A               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
   579  001260  0E00               	movlw	high _PIN1
   580  001262  6F8B               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
   581  001264  EC5F  F008         	call	_GPIO_Pin_Initialize	;wreg free
   582                           
   583                           ;application.c: 52: GPIO_Pin_Initialize(&PIN2);
   584  001268  0E2B               	movlw	low _PIN2
   585  00126A  0100               	movlb	0	; () banked
   586  00126C  6F8A               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
   587  00126E  0E00               	movlw	high _PIN2
   588  001270  6F8B               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
   589  001272  EC5F  F008         	call	_GPIO_Pin_Initialize	;wreg free
   590  001276                     
   591                           ;application.c: 53: Interrupt_INTx_INIT(&INTERUPT1);
   592  001276  0E26               	movlw	low _INTERUPT1
   593  001278  0100               	movlb	0	; () banked
   594  00127A  6F88               	movwf	Interrupt_INTx_INIT@int_obj& (0+255),b
   595  00127C  0E00               	movlw	high _INTERUPT1
   596  00127E  6F89               	movwf	(Interrupt_INTx_INIT@int_obj+1)& (0+255),b
   597  001280  ECBA  F005         	call	_Interrupt_INTx_INIT	;wreg free
   598  001284                     
   599                           ;application.c: 54: Interrupt_RBx_INIT(&INTERUPT_oncahnge);
   600  001284  0E20               	movlw	low _INTERUPT_oncahnge
   601  001286  0100               	movlb	0	; () banked
   602  001288  6F8C               	movwf	Interrupt_RBx_INIT@int_obj& (0+255),b
   603  00128A  0E00               	movlw	high _INTERUPT_oncahnge
   604  00128C  6F8D               	movwf	(Interrupt_RBx_INIT@int_obj+1)& (0+255),b
   605  00128E  ECE1  F006         	call	_Interrupt_RBx_INIT	;wreg free
   606  001292  0012               	return		;funcret
   607  001294                     __end_of_application_intialize:
   608                           	callstack 0
   609                           
   610 ;; *************** function _Interrupt_RBx_INIT *****************
   611 ;; Defined at:
   612 ;;		line 259 in file "MCAL/Interrupts/mcal_external_interrupt.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  int_obj         2   12[BANK0 ] PTR const struct .
   615 ;;		 -> INTERUPT_oncahnge(6), 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  ret_value       1   14[BANK0 ] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      unsigned char 
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;Total ram usage:        3 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:   10
   634 ;; This function calls:
   635 ;;		_interrupt_RBx_disable
   636 ;;		_interrupt_RBx_enable
   637 ;;		_interrupt_RBx_pin_init
   638 ;;		_interrupt_RBx_set_callback
   639 ;;		_interrupt_RBx_set_priority
   640 ;; This function is called by:
   641 ;;		_application_intialize
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text2
   646  000DC2                     __ptext2:
   647                           	callstack 0
   648  000DC2                     _Interrupt_RBx_INIT:
   649                           	callstack 19
   650  000DC2                     
   651                           ;MCAL/Interrupts/mcal_external_interrupt.c: 263:     if(((void*)0) == int_obj)
   652  000DC2  0100               	movlb	0	; () banked
   653  000DC4  518C               	movf	Interrupt_RBx_INIT@int_obj& (0+255),w,b
   654  000DC6  118D               	iorwf	(Interrupt_RBx_INIT@int_obj+1)& (0+255),w,b
   655  000DC8  A4D8               	btfss	status,2,c
   656  000DCA  EFE9  F006         	goto	u3351
   657  000DCE  EFEB  F006         	goto	u3350
   658  000DD2                     u3351:
   659  000DD2  EFED  F006         	goto	l3336
   660  000DD6                     u3350:
   661  000DD6                     
   662                           ; BSR set to: 0
   663                           ;MCAL/Interrupts/mcal_external_interrupt.c: 266:     }
   664  000DD6  EF16  F007         	goto	l355
   665  000DDA                     l3336:
   666                           
   667                           ; BSR set to: 0
   668                           ;MCAL/Interrupts/mcal_external_interrupt.c: 268:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 270:         ret_value = interrupt_RBx_disable(int_obj);
   669  000DDA  C08C  F080         	movff	Interrupt_RBx_INIT@int_obj,interrupt_RBx_disable@int_obj
   670  000DDE  C08D  F081         	movff	Interrupt_RBx_INIT@int_obj+1,interrupt_RBx_disable@int_obj+1
   671  000DE2  EC80  F007         	call	_interrupt_RBx_disable	;wreg free
   672  000DE6  0100               	movlb	0	; () banked
   673  000DE8  6F8E               	movwf	Interrupt_RBx_INIT@ret_value& (0+255),b
   674  000DEA                     
   675                           ; BSR set to: 0
   676                           ;MCAL/Interrupts/mcal_external_interrupt.c: 272:         (INTCONbits.RBIF = 0 );
   677  000DEA  90F2               	bcf	242,0,c	;volatile
   678  000DEC                     
   679                           ; BSR set to: 0
   680                           ;MCAL/Interrupts/mcal_external_interrupt.c: 274:         ret_value &= interrupt_RBx_pin_
      +                          init(int_obj);
   681  000DEC  C08C  F089         	movff	Interrupt_RBx_INIT@int_obj,interrupt_RBx_pin_init@int_obj
   682  000DF0  C08D  F08A         	movff	Interrupt_RBx_INIT@int_obj+1,interrupt_RBx_pin_init@int_obj+1
   683  000DF4  EC4A  F009         	call	_interrupt_RBx_pin_init	;wreg free
   684  000DF8  0100               	movlb	0	; () banked
   685  000DFA  178E               	andwf	Interrupt_RBx_INIT@ret_value& (0+255),f,b
   686  000DFC                     
   687                           ; BSR set to: 0
   688                           ;MCAL/Interrupts/mcal_external_interrupt.c: 277:         ret_value &= interrupt_RBx_set_
      +                          priority(int_obj);
   689  000DFC  C08C  F080         	movff	Interrupt_RBx_INIT@int_obj,interrupt_RBx_set_priority@int_obj
   690  000E00  C08D  F081         	movff	Interrupt_RBx_INIT@int_obj+1,interrupt_RBx_set_priority@int_obj+1
   691  000E04  EC17  F007         	call	_interrupt_RBx_set_priority	;wreg free
   692  000E08  0100               	movlb	0	; () banked
   693  000E0A  178E               	andwf	Interrupt_RBx_INIT@ret_value& (0+255),f,b
   694  000E0C                     
   695                           ; BSR set to: 0
   696                           ;MCAL/Interrupts/mcal_external_interrupt.c: 283:         ret_value &= interrupt_RBx_set_
      +                          callback(int_obj);
   697  000E0C  C08C  F085         	movff	Interrupt_RBx_INIT@int_obj,interrupt_RBx_set_callback@int_obj
   698  000E10  C08D  F086         	movff	Interrupt_RBx_INIT@int_obj+1,interrupt_RBx_set_callback@int_obj+1
   699  000E14  EC26  F003         	call	_interrupt_RBx_set_callback	;wreg free
   700  000E18  0100               	movlb	0	; () banked
   701  000E1A  178E               	andwf	Interrupt_RBx_INIT@ret_value& (0+255),f,b
   702  000E1C                     
   703                           ; BSR set to: 0
   704                           ;MCAL/Interrupts/mcal_external_interrupt.c: 285:         ret_value &= interrupt_RBx_enab
      +                          le(int_obj);
   705  000E1C  C08C  F080         	movff	Interrupt_RBx_INIT@int_obj,interrupt_RBx_enable@int_obj
   706  000E20  C08D  F081         	movff	Interrupt_RBx_INIT@int_obj+1,interrupt_RBx_enable@int_obj+1
   707  000E24  EC4C  F007         	call	_interrupt_RBx_enable	;wreg free
   708  000E28  0100               	movlb	0	; () banked
   709  000E2A  178E               	andwf	Interrupt_RBx_INIT@ret_value& (0+255),f,b
   710  000E2C                     l355:
   711                           
   712                           ; BSR set to: 0
   713  000E2C  0012               	return		;funcret
   714  000E2E                     __end_of_Interrupt_RBx_INIT:
   715                           	callstack 0
   716                           
   717 ;; *************** function _interrupt_RBx_set_priority *****************
   718 ;; Defined at:
   719 ;;		line 764 in file "MCAL/Interrupts/mcal_external_interrupt.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  int_obj         2    0[BANK0 ] PTR const struct .
   722 ;;		 -> INTERUPT_oncahnge(6), 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  ret_value       1    3[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      unsigned char 
   727 ;; Registers used:
   728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;Total ram usage:        4 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    8
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_Interrupt_RBx_INIT
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text3
   749  000E2E                     __ptext3:
   750                           	callstack 0
   751  000E2E                     _interrupt_RBx_set_priority:
   752                           	callstack 20
   753  000E2E                     
   754                           ;MCAL/Interrupts/mcal_external_interrupt.c: 764: static Std_ReturnType interrupt_RBx_set
      +                          _priority(const Interrupt_RBx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 76
      +                          5: {;MCAL/Interrupts/mcal_external_interrupt.c: 766:     Std_ReturnType ret_value = (Std
      +                          _returnType) 0x01 ;
   755  000E2E  0E01               	movlw	1
   756  000E30  0100               	movlb	0	; () banked
   757  000E32  6F83               	movwf	interrupt_RBx_set_priority@ret_value& (0+255),b
   758  000E34                     
   759                           ; BSR set to: 0
   760                           ;MCAL/Interrupts/mcal_external_interrupt.c: 768:     if(((void*)0) == int_obj)
   761  000E34  5180               	movf	interrupt_RBx_set_priority@int_obj& (0+255),w,b
   762  000E36  1181               	iorwf	(interrupt_RBx_set_priority@int_obj+1)& (0+255),w,b
   763  000E38  A4D8               	btfss	status,2,c
   764  000E3A  EF21  F007         	goto	u3261
   765  000E3E  EF23  F007         	goto	u3260
   766  000E42                     u3261:
   767  000E42  EF27  F007         	goto	l506
   768  000E46                     u3260:
   769  000E46                     
   770                           ; BSR set to: 0
   771                           ;MCAL/Interrupts/mcal_external_interrupt.c: 769:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 770:         ret_value = (Std_returnType) 0x00 ;
   772  000E46  0E00               	movlw	0
   773  000E48  6F83               	movwf	interrupt_RBx_set_priority@ret_value& (0+255),b
   774                           
   775                           ;MCAL/Interrupts/mcal_external_interrupt.c: 771:     }
   776  000E4A  EF4A  F007         	goto	l3260
   777  000E4E                     l506:
   778                           
   779                           ; BSR set to: 0
   780                           ;MCAL/Interrupts/mcal_external_interrupt.c: 773:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 774:         (RCONbits.IPEN = 1 );
   781  000E4E  8ED0               	bsf	208,7,c	;volatile
   782  000E50                     
   783                           ; BSR set to: 0
   784                           ;MCAL/Interrupts/mcal_external_interrupt.c: 775:         if(INT_HIGH_PRI == int_obj->pri
      +                          ority)
   785  000E50  EE20 F004          	lfsr	2,4
   786  000E54  5180               	movf	interrupt_RBx_set_priority@int_obj& (0+255),w,b
   787  000E56  26D9               	addwf	fsr2l,f,c
   788  000E58  5181               	movf	(interrupt_RBx_set_priority@int_obj+1)& (0+255),w,b
   789  000E5A  22DA               	addwfc	fsr2h,f,c
   790  000E5C  04DE               	decf	postinc2,w,c
   791  000E5E  A4D8               	btfss	status,2,c
   792  000E60  EF34  F007         	goto	u3271
   793  000E64  EF36  F007         	goto	u3270
   794  000E68                     u3271:
   795  000E68  EF39  F007         	goto	l3256
   796  000E6C                     u3270:
   797  000E6C                     
   798                           ; BSR set to: 0
   799                           ;MCAL/Interrupts/mcal_external_interrupt.c: 776:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 777:             (INTCON2bits.RBIP = 1);
   800  000E6C  80F1               	bsf	241,0,c	;volatile
   801                           
   802                           ;MCAL/Interrupts/mcal_external_interrupt.c: 778:         }
   803  000E6E  EF4A  F007         	goto	l3260
   804  000E72                     l3256:
   805                           
   806                           ; BSR set to: 0
   807  000E72  EE20 F004          	lfsr	2,4
   808  000E76  5180               	movf	interrupt_RBx_set_priority@int_obj& (0+255),w,b
   809  000E78  26D9               	addwf	fsr2l,f,c
   810  000E7A  5181               	movf	(interrupt_RBx_set_priority@int_obj+1)& (0+255),w,b
   811  000E7C  22DA               	addwfc	fsr2h,f,c
   812  000E7E  50DF               	movf	indf2,w,c
   813  000E80  A4D8               	btfss	status,2,c
   814  000E82  EF45  F007         	goto	u3281
   815  000E86  EF47  F007         	goto	u3280
   816  000E8A                     u3281:
   817  000E8A  EF4A  F007         	goto	l509
   818  000E8E                     u3280:
   819  000E8E                     
   820                           ; BSR set to: 0
   821                           ;MCAL/Interrupts/mcal_external_interrupt.c: 780:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 781:             (INTCON2bits.RBIP = 0);
   822  000E8E  90F1               	bcf	241,0,c	;volatile
   823                           
   824                           ;MCAL/Interrupts/mcal_external_interrupt.c: 782:         }
   825  000E90  EF4A  F007         	goto	l3260
   826  000E94                     l509:
   827  000E94                     l3260:
   828                           
   829                           ; BSR set to: 0
   830                           ;MCAL/Interrupts/mcal_external_interrupt.c: 786:     return ret_value ;
   831  000E94  5183               	movf	interrupt_RBx_set_priority@ret_value& (0+255),w,b
   832  000E96                     
   833                           ; BSR set to: 0
   834  000E96  0012               	return		;funcret
   835  000E98                     __end_of_interrupt_RBx_set_priority:
   836                           	callstack 0
   837                           
   838 ;; *************** function _interrupt_RBx_set_callback *****************
   839 ;; Defined at:
   840 ;;		line 857 in file "MCAL/Interrupts/mcal_external_interrupt.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  int_obj         2    5[BANK0 ] PTR const struct .
   843 ;;		 -> INTERUPT_oncahnge(6), 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  ret_value       1    9[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      unsigned char 
   848 ;; Registers used:
   849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;Total ram usage:        5 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    9
   862 ;; This function calls:
   863 ;;		_RB4_set_callback
   864 ;;		_RB5_set_callback
   865 ;;		_RB6_set_callback
   866 ;;		_RB7_set_callback
   867 ;; This function is called by:
   868 ;;		_Interrupt_RBx_INIT
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text4
   873  00064C                     __ptext4:
   874                           	callstack 0
   875  00064C                     _interrupt_RBx_set_callback:
   876                           	callstack 19
   877  00064C                     
   878                           ;MCAL/Interrupts/mcal_external_interrupt.c: 861:     if(((void*)0) == int_obj)
   879  00064C  0100               	movlb	0	; () banked
   880  00064E  5185               	movf	interrupt_RBx_set_callback@int_obj& (0+255),w,b
   881  000650  1186               	iorwf	(interrupt_RBx_set_callback@int_obj+1)& (0+255),w,b
   882  000652  A4D8               	btfss	status,2,c
   883  000654  EF2E  F003         	goto	u3291
   884  000658  EF30  F003         	goto	u3290
   885  00065C                     u3291:
   886  00065C  EF94  F003         	goto	l3282
   887  000660                     u3290:
   888  000660                     l3268:
   889                           
   890                           ; BSR set to: 0
   891                           ;MCAL/Interrupts/mcal_external_interrupt.c: 862:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 863:         ret_value = (Std_returnType) 0x00 ;
   892  000660  0E00               	movlw	0
   893  000662  6F89               	movwf	interrupt_RBx_set_callback@ret_value& (0+255),b
   894                           
   895                           ;MCAL/Interrupts/mcal_external_interrupt.c: 864:     }
   896  000664  EFB8  F003         	goto	l3284
   897  000668                     l3270:
   898                           
   899                           ; BSR set to: 0
   900                           ;MCAL/Interrupts/mcal_external_interrupt.c: 870:                 ret_value = RB4_set_cal
      +                          lback(int_obj->Ext_Interrupt_Handler_High ,int_obj->Ext_Interrupt_Handler_Low );
   901  000668  C085  FFD9         	movff	interrupt_RBx_set_callback@int_obj,fsr2l
   902  00066C  C086  FFDA         	movff	interrupt_RBx_set_callback@int_obj+1,fsr2h
   903  000670  CFDE F080          	movff	postinc2,RB4_set_callback@InterruptHandler_HIGH
   904  000674  CFDD F081          	movff	postdec2,RB4_set_callback@InterruptHandler_HIGH+1
   905  000678  EE20 F002          	lfsr	2,2
   906  00067C  5185               	movf	interrupt_RBx_set_callback@int_obj& (0+255),w,b
   907  00067E  26D9               	addwf	fsr2l,f,c
   908  000680  5186               	movf	(interrupt_RBx_set_callback@int_obj+1)& (0+255),w,b
   909  000682  22DA               	addwfc	fsr2h,f,c
   910  000684  CFDE F082          	movff	postinc2,RB4_set_callback@InterruptHandler_LOW
   911  000688  CFDD F083          	movff	postdec2,RB4_set_callback@InterruptHandler_LOW+1
   912  00068C  ECED  F008         	call	_RB4_set_callback	;wreg free
   913  000690  0100               	movlb	0	; () banked
   914  000692  6F89               	movwf	interrupt_RBx_set_callback@ret_value& (0+255),b
   915                           
   916                           ;MCAL/Interrupts/mcal_external_interrupt.c: 871:                 break;
   917  000694  EFB8  F003         	goto	l3284
   918  000698                     l3272:
   919                           
   920                           ; BSR set to: 0
   921                           ;MCAL/Interrupts/mcal_external_interrupt.c: 874:                 ret_value = RB5_set_cal
      +                          lback(int_obj->Ext_Interrupt_Handler_High ,int_obj->Ext_Interrupt_Handler_Low );
   922  000698  C085  FFD9         	movff	interrupt_RBx_set_callback@int_obj,fsr2l
   923  00069C  C086  FFDA         	movff	interrupt_RBx_set_callback@int_obj+1,fsr2h
   924  0006A0  CFDE F080          	movff	postinc2,RB5_set_callback@InterruptHandler_HIGH
   925  0006A4  CFDD F081          	movff	postdec2,RB5_set_callback@InterruptHandler_HIGH+1
   926  0006A8  EE20 F002          	lfsr	2,2
   927  0006AC  5185               	movf	interrupt_RBx_set_callback@int_obj& (0+255),w,b
   928  0006AE  26D9               	addwf	fsr2l,f,c
   929  0006B0  5186               	movf	(interrupt_RBx_set_callback@int_obj+1)& (0+255),w,b
   930  0006B2  22DA               	addwfc	fsr2h,f,c
   931  0006B4  CFDE F082          	movff	postinc2,RB5_set_callback@InterruptHandler_LOW
   932  0006B8  CFDD F083          	movff	postdec2,RB5_set_callback@InterruptHandler_LOW+1
   933  0006BC  ECCA  F008         	call	_RB5_set_callback	;wreg free
   934  0006C0  0100               	movlb	0	; () banked
   935  0006C2  6F89               	movwf	interrupt_RBx_set_callback@ret_value& (0+255),b
   936                           
   937                           ;MCAL/Interrupts/mcal_external_interrupt.c: 876:                 break;
   938  0006C4  EFB8  F003         	goto	l3284
   939  0006C8                     l3274:
   940                           
   941                           ; BSR set to: 0
   942                           ;MCAL/Interrupts/mcal_external_interrupt.c: 879:                 ret_value = RB6_set_cal
      +                          lback(int_obj->Ext_Interrupt_Handler_High ,int_obj->Ext_Interrupt_Handler_Low );
   943  0006C8  C085  FFD9         	movff	interrupt_RBx_set_callback@int_obj,fsr2l
   944  0006CC  C086  FFDA         	movff	interrupt_RBx_set_callback@int_obj+1,fsr2h
   945  0006D0  CFDE F080          	movff	postinc2,RB6_set_callback@InterruptHandler_HIGH
   946  0006D4  CFDD F081          	movff	postdec2,RB6_set_callback@InterruptHandler_HIGH+1
   947  0006D8  EE20 F002          	lfsr	2,2
   948  0006DC  5185               	movf	interrupt_RBx_set_callback@int_obj& (0+255),w,b
   949  0006DE  26D9               	addwf	fsr2l,f,c
   950  0006E0  5186               	movf	(interrupt_RBx_set_callback@int_obj+1)& (0+255),w,b
   951  0006E2  22DA               	addwfc	fsr2h,f,c
   952  0006E4  CFDE F082          	movff	postinc2,RB6_set_callback@InterruptHandler_LOW
   953  0006E8  CFDD F083          	movff	postdec2,RB6_set_callback@InterruptHandler_LOW+1
   954  0006EC  ECA7  F008         	call	_RB6_set_callback	;wreg free
   955  0006F0  0100               	movlb	0	; () banked
   956  0006F2  6F89               	movwf	interrupt_RBx_set_callback@ret_value& (0+255),b
   957                           
   958                           ;MCAL/Interrupts/mcal_external_interrupt.c: 881:                 break;
   959  0006F4  EFB8  F003         	goto	l3284
   960  0006F8                     l3276:
   961                           
   962                           ; BSR set to: 0
   963                           ;MCAL/Interrupts/mcal_external_interrupt.c: 884:                 ret_value = RB7_set_cal
      +                          lback(int_obj->Ext_Interrupt_Handler_High ,int_obj->Ext_Interrupt_Handler_Low );
   964  0006F8  C085  FFD9         	movff	interrupt_RBx_set_callback@int_obj,fsr2l
   965  0006FC  C086  FFDA         	movff	interrupt_RBx_set_callback@int_obj+1,fsr2h
   966  000700  CFDE F080          	movff	postinc2,RB7_set_callback@InterruptHandler_HIGH
   967  000704  CFDD F081          	movff	postdec2,RB7_set_callback@InterruptHandler_HIGH+1
   968  000708  EE20 F002          	lfsr	2,2
   969  00070C  5185               	movf	interrupt_RBx_set_callback@int_obj& (0+255),w,b
   970  00070E  26D9               	addwf	fsr2l,f,c
   971  000710  5186               	movf	(interrupt_RBx_set_callback@int_obj+1)& (0+255),w,b
   972  000712  22DA               	addwfc	fsr2h,f,c
   973  000714  CFDE F082          	movff	postinc2,RB7_set_callback@InterruptHandler_LOW
   974  000718  CFDD F083          	movff	postdec2,RB7_set_callback@InterruptHandler_LOW+1
   975  00071C  EC84  F008         	call	_RB7_set_callback	;wreg free
   976  000720  0100               	movlb	0	; () banked
   977  000722  6F89               	movwf	interrupt_RBx_set_callback@ret_value& (0+255),b
   978                           
   979                           ;MCAL/Interrupts/mcal_external_interrupt.c: 885:                 break;
   980  000724  EFB8  F003         	goto	l3284
   981  000728                     l3282:
   982                           
   983                           ; BSR set to: 0
   984  000728  EE20 F005          	lfsr	2,5
   985  00072C  5185               	movf	interrupt_RBx_set_callback@int_obj& (0+255),w,b
   986  00072E  26D9               	addwf	fsr2l,f,c
   987  000730  5186               	movf	(interrupt_RBx_set_callback@int_obj+1)& (0+255),w,b
   988  000732  22DA               	addwfc	fsr2h,f,c
   989  000734  50DF               	movf	223,w,c
   990  000736  0B07               	andlw	7
   991  000738  6F87               	movwf	??_interrupt_RBx_set_callback& (0+255),b
   992  00073A  6B88               	clrf	(??_interrupt_RBx_set_callback+1)& (0+255),b
   993                           
   994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 1, Range of values is 0 to 0
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            4     3 (average)
  1000                           ;	Chosen strategy is simple_byte
  1001  00073C  5188               	movf	(??_interrupt_RBx_set_callback+1)& (0+255),w,b
  1002  00073E  0A00               	xorlw	0	; case 0
  1003  000740  B4D8               	btfsc	status,2,c
  1004  000742  EFA5  F003         	goto	l3628
  1005  000746  EF30  F003         	goto	l3268
  1006  00074A                     l3628:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ; Switch size 1, requested type "simple"
  1010                           ; Number of cases is 4, Range of values is 4 to 7
  1011                           ; switch strategies available:
  1012                           ; Name         Instructions Cycles
  1013                           ; simple_byte           13     7 (average)
  1014                           ;	Chosen strategy is simple_byte
  1015  00074A  5187               	movf	??_interrupt_RBx_set_callback& (0+255),w,b
  1016  00074C  0A04               	xorlw	4	; case 4
  1017  00074E  B4D8               	btfsc	status,2,c
  1018  000750  EF34  F003         	goto	l3270
  1019  000754  0A01               	xorlw	1	; case 5
  1020  000756  B4D8               	btfsc	status,2,c
  1021  000758  EF4C  F003         	goto	l3272
  1022  00075C  0A03               	xorlw	3	; case 6
  1023  00075E  B4D8               	btfsc	status,2,c
  1024  000760  EF64  F003         	goto	l3274
  1025  000764  0A01               	xorlw	1	; case 7
  1026  000766  B4D8               	btfsc	status,2,c
  1027  000768  EF7C  F003         	goto	l3276
  1028  00076C  EF30  F003         	goto	l3268
  1029  000770                     l3284:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;MCAL/Interrupts/mcal_external_interrupt.c: 894:     return ret_value ;
  1033  000770  5189               	movf	interrupt_RBx_set_callback@ret_value& (0+255),w,b
  1034  000772                     
  1035                           ; BSR set to: 0
  1036  000772  0012               	return		;funcret
  1037  000774                     __end_of_interrupt_RBx_set_callback:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _RB7_set_callback *****************
  1041 ;; Defined at:
  1042 ;;		line 840 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1045 ;;		 -> Absolute function(1), 
  1046 ;;  InterruptHan    2    2[BANK0 ] PTR FTN()void 
  1047 ;;		 -> OnChanggeINT_Handler(1), 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  ret_value       1    4[BANK0 ] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      unsigned char 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;Total ram usage:        5 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    8
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_interrupt_RBx_set_callback
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text5
  1074  001108                     __ptext5:
  1075                           	callstack 0
  1076  001108                     _RB7_set_callback:
  1077                           	callstack 19
  1078  001108                     
  1079                           ;MCAL/Interrupts/mcal_external_interrupt.c: 840: static Std_ReturnType RB7_set_callback(
      +                          void ( *InterruptHandler_HIGH) (void),;MCAL/Interrupts/mcal_external_interrupt.c: 841:  
      +                                                          void ( *InterruptHandler_LOW) (void) );MCAL/Interrupts/m
      +                          cal_external_interrupt.c: 842: {;MCAL/Interrupts/mcal_external_interrupt.c: 844:     Std
      +                          _ReturnType ret_value = (Std_returnType) 0x01 ;
  1080  001108  0E01               	movlw	1
  1081  00110A  0100               	movlb	0	; () banked
  1082  00110C  6F84               	movwf	RB7_set_callback@ret_value& (0+255),b
  1083  00110E                     
  1084                           ; BSR set to: 0
  1085                           ;MCAL/Interrupts/mcal_external_interrupt.c: 845:     if((((void*)0) == InterruptHandler_
      +                          HIGH) && (((void*)0) == InterruptHandler_LOW))
  1086  00110E  5180               	movf	RB7_set_callback@InterruptHandler_HIGH& (0+255),w,b
  1087  001110  1181               	iorwf	(RB7_set_callback@InterruptHandler_HIGH+1)& (0+255),w,b
  1088  001112  A4D8               	btfss	status,2,c
  1089  001114  EF8E  F008         	goto	u2951
  1090  001118  EF90  F008         	goto	u2950
  1091  00111C                     u2951:
  1092  00111C  EF9D  F008         	goto	l2968
  1093  001120                     u2950:
  1094  001120                     
  1095                           ; BSR set to: 0
  1096  001120  5182               	movf	RB7_set_callback@InterruptHandler_LOW& (0+255),w,b
  1097  001122  1183               	iorwf	(RB7_set_callback@InterruptHandler_LOW+1)& (0+255),w,b
  1098  001124  A4D8               	btfss	status,2,c
  1099  001126  EF97  F008         	goto	u2961
  1100  00112A  EF99  F008         	goto	u2960
  1101  00112E                     u2961:
  1102  00112E  EF9D  F008         	goto	l2968
  1103  001132                     u2960:
  1104  001132                     
  1105                           ; BSR set to: 0
  1106                           ;MCAL/Interrupts/mcal_external_interrupt.c: 846:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 847:         ret_value = (Std_returnType) 0x00 ;
  1107  001132  0E00               	movlw	0
  1108  001134  6F84               	movwf	RB7_set_callback@ret_value& (0+255),b
  1109                           
  1110                           ;MCAL/Interrupts/mcal_external_interrupt.c: 848:     }
  1111  001136  EFA5  F008         	goto	l2970
  1112  00113A                     l2968:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;MCAL/Interrupts/mcal_external_interrupt.c: 850:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 851:         RB7_InterruptHandler_HIGH = InterruptHandler_HIGH ;
  1116  00113A  C080  F04F         	movff	RB7_set_callback@InterruptHandler_HIGH,_RB7_InterruptHandler_HIGH
  1117  00113E  C081  F050         	movff	RB7_set_callback@InterruptHandler_HIGH+1,_RB7_InterruptHandler_HIGH+1
  1118                           
  1119                           ;MCAL/Interrupts/mcal_external_interrupt.c: 852:         RB7_InterruptHandler_LOW = Inte
      +                          rruptHandler_LOW ;
  1120  001142  C082  F04D         	movff	RB7_set_callback@InterruptHandler_LOW,_RB7_InterruptHandler_LOW
  1121  001146  C083  F04E         	movff	RB7_set_callback@InterruptHandler_LOW+1,_RB7_InterruptHandler_LOW+1
  1122  00114A                     l2970:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;MCAL/Interrupts/mcal_external_interrupt.c: 854:     return ret_value ;
  1126  00114A  5184               	movf	RB7_set_callback@ret_value& (0+255),w,b
  1127  00114C                     
  1128                           ; BSR set to: 0
  1129  00114C  0012               	return		;funcret
  1130  00114E                     __end_of_RB7_set_callback:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _RB6_set_callback *****************
  1134 ;; Defined at:
  1135 ;;		line 824 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1138 ;;		 -> Absolute function(1), 
  1139 ;;  InterruptHan    2    2[BANK0 ] PTR FTN()void 
  1140 ;;		 -> OnChanggeINT_Handler(1), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  ret_value       1    4[BANK0 ] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      unsigned char 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        5 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    8
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_interrupt_RBx_set_callback
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167  00114E                     __ptext6:
  1168                           	callstack 0
  1169  00114E                     _RB6_set_callback:
  1170                           	callstack 19
  1171  00114E                     
  1172                           ;MCAL/Interrupts/mcal_external_interrupt.c: 824: static Std_ReturnType RB6_set_callback(
      +                          void ( *InterruptHandler_HIGH) (void),;MCAL/Interrupts/mcal_external_interrupt.c: 825:  
      +                                                          void ( *InterruptHandler_LOW) (void) );MCAL/Interrupts/m
      +                          cal_external_interrupt.c: 826: {;MCAL/Interrupts/mcal_external_interrupt.c: 828:     Std
      +                          _ReturnType ret_value = (Std_returnType) 0x01 ;
  1173  00114E  0E01               	movlw	1
  1174  001150  0100               	movlb	0	; () banked
  1175  001152  6F84               	movwf	RB6_set_callback@ret_value& (0+255),b
  1176  001154                     
  1177                           ; BSR set to: 0
  1178                           ;MCAL/Interrupts/mcal_external_interrupt.c: 829:     if((((void*)0) == InterruptHandler_
      +                          HIGH) && (((void*)0) == InterruptHandler_LOW))
  1179  001154  5180               	movf	RB6_set_callback@InterruptHandler_HIGH& (0+255),w,b
  1180  001156  1181               	iorwf	(RB6_set_callback@InterruptHandler_HIGH+1)& (0+255),w,b
  1181  001158  A4D8               	btfss	status,2,c
  1182  00115A  EFB1  F008         	goto	u2931
  1183  00115E  EFB3  F008         	goto	u2930
  1184  001162                     u2931:
  1185  001162  EFC0  F008         	goto	l2954
  1186  001166                     u2930:
  1187  001166                     
  1188                           ; BSR set to: 0
  1189  001166  5182               	movf	RB6_set_callback@InterruptHandler_LOW& (0+255),w,b
  1190  001168  1183               	iorwf	(RB6_set_callback@InterruptHandler_LOW+1)& (0+255),w,b
  1191  00116A  A4D8               	btfss	status,2,c
  1192  00116C  EFBA  F008         	goto	u2941
  1193  001170  EFBC  F008         	goto	u2940
  1194  001174                     u2941:
  1195  001174  EFC0  F008         	goto	l2954
  1196  001178                     u2940:
  1197  001178                     
  1198                           ; BSR set to: 0
  1199                           ;MCAL/Interrupts/mcal_external_interrupt.c: 830:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 831:         ret_value = (Std_returnType) 0x00 ;
  1200  001178  0E00               	movlw	0
  1201  00117A  6F84               	movwf	RB6_set_callback@ret_value& (0+255),b
  1202                           
  1203                           ;MCAL/Interrupts/mcal_external_interrupt.c: 832:     }
  1204  00117C  EFC8  F008         	goto	l2956
  1205  001180                     l2954:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;MCAL/Interrupts/mcal_external_interrupt.c: 834:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 835:         RB6_InterruptHandler_HIGH = InterruptHandler_HIGH ;
  1209  001180  C080  F053         	movff	RB6_set_callback@InterruptHandler_HIGH,_RB6_InterruptHandler_HIGH
  1210  001184  C081  F054         	movff	RB6_set_callback@InterruptHandler_HIGH+1,_RB6_InterruptHandler_HIGH+1
  1211                           
  1212                           ;MCAL/Interrupts/mcal_external_interrupt.c: 836:         RB6_InterruptHandler_LOW = Inte
      +                          rruptHandler_LOW ;
  1213  001188  C082  F051         	movff	RB6_set_callback@InterruptHandler_LOW,_RB6_InterruptHandler_LOW
  1214  00118C  C083  F052         	movff	RB6_set_callback@InterruptHandler_LOW+1,_RB6_InterruptHandler_LOW+1
  1215  001190                     l2956:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;MCAL/Interrupts/mcal_external_interrupt.c: 838:     return ret_value ;
  1219  001190  5184               	movf	RB6_set_callback@ret_value& (0+255),w,b
  1220  001192                     
  1221                           ; BSR set to: 0
  1222  001192  0012               	return		;funcret
  1223  001194                     __end_of_RB6_set_callback:
  1224                           	callstack 0
  1225                           
  1226 ;; *************** function _RB5_set_callback *****************
  1227 ;; Defined at:
  1228 ;;		line 808 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1231 ;;		 -> Absolute function(1), 
  1232 ;;  InterruptHan    2    2[BANK0 ] PTR FTN()void 
  1233 ;;		 -> OnChanggeINT_Handler(1), 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  ret_value       1    4[BANK0 ] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      unsigned char 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;Total ram usage:        5 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    8
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_interrupt_RBx_set_callback
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text7
  1260  001194                     __ptext7:
  1261                           	callstack 0
  1262  001194                     _RB5_set_callback:
  1263                           	callstack 19
  1264  001194                     
  1265                           ;MCAL/Interrupts/mcal_external_interrupt.c: 808: static Std_ReturnType RB5_set_callback(
      +                          void ( *InterruptHandler_HIGH) (void),;MCAL/Interrupts/mcal_external_interrupt.c: 809:  
      +                                                          void ( *InterruptHandler_LOW) (void) );MCAL/Interrupts/m
      +                          cal_external_interrupt.c: 810: {;MCAL/Interrupts/mcal_external_interrupt.c: 812:     Std
      +                          _ReturnType ret_value = (Std_returnType) 0x01 ;
  1266  001194  0E01               	movlw	1
  1267  001196  0100               	movlb	0	; () banked
  1268  001198  6F84               	movwf	RB5_set_callback@ret_value& (0+255),b
  1269  00119A                     
  1270                           ; BSR set to: 0
  1271                           ;MCAL/Interrupts/mcal_external_interrupt.c: 813:     if((((void*)0) == InterruptHandler_
      +                          HIGH) && (((void*)0) == InterruptHandler_LOW))
  1272  00119A  5180               	movf	RB5_set_callback@InterruptHandler_HIGH& (0+255),w,b
  1273  00119C  1181               	iorwf	(RB5_set_callback@InterruptHandler_HIGH+1)& (0+255),w,b
  1274  00119E  A4D8               	btfss	status,2,c
  1275  0011A0  EFD4  F008         	goto	u2911
  1276  0011A4  EFD6  F008         	goto	u2910
  1277  0011A8                     u2911:
  1278  0011A8  EFE3  F008         	goto	l2940
  1279  0011AC                     u2910:
  1280  0011AC                     
  1281                           ; BSR set to: 0
  1282  0011AC  5182               	movf	RB5_set_callback@InterruptHandler_LOW& (0+255),w,b
  1283  0011AE  1183               	iorwf	(RB5_set_callback@InterruptHandler_LOW+1)& (0+255),w,b
  1284  0011B0  A4D8               	btfss	status,2,c
  1285  0011B2  EFDD  F008         	goto	u2921
  1286  0011B6  EFDF  F008         	goto	u2920
  1287  0011BA                     u2921:
  1288  0011BA  EFE3  F008         	goto	l2940
  1289  0011BE                     u2920:
  1290  0011BE                     
  1291                           ; BSR set to: 0
  1292                           ;MCAL/Interrupts/mcal_external_interrupt.c: 814:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 815:         ret_value = (Std_returnType) 0x00 ;
  1293  0011BE  0E00               	movlw	0
  1294  0011C0  6F84               	movwf	RB5_set_callback@ret_value& (0+255),b
  1295                           
  1296                           ;MCAL/Interrupts/mcal_external_interrupt.c: 816:     }
  1297  0011C2  EFEB  F008         	goto	l2942
  1298  0011C6                     l2940:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;MCAL/Interrupts/mcal_external_interrupt.c: 818:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 819:         RB5_InterruptHandler_HIGH = InterruptHandler_HIGH ;
  1302  0011C6  C080  F057         	movff	RB5_set_callback@InterruptHandler_HIGH,_RB5_InterruptHandler_HIGH
  1303  0011CA  C081  F058         	movff	RB5_set_callback@InterruptHandler_HIGH+1,_RB5_InterruptHandler_HIGH+1
  1304                           
  1305                           ;MCAL/Interrupts/mcal_external_interrupt.c: 820:         RB5_InterruptHandler_LOW = Inte
      +                          rruptHandler_LOW ;
  1306  0011CE  C082  F055         	movff	RB5_set_callback@InterruptHandler_LOW,_RB5_InterruptHandler_LOW
  1307  0011D2  C083  F056         	movff	RB5_set_callback@InterruptHandler_LOW+1,_RB5_InterruptHandler_LOW+1
  1308  0011D6                     l2942:
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;MCAL/Interrupts/mcal_external_interrupt.c: 822:     return ret_value ;
  1312  0011D6  5184               	movf	RB5_set_callback@ret_value& (0+255),w,b
  1313  0011D8                     
  1314                           ; BSR set to: 0
  1315  0011D8  0012               	return		;funcret
  1316  0011DA                     __end_of_RB5_set_callback:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _RB4_set_callback *****************
  1320 ;; Defined at:
  1321 ;;		line 792 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1324 ;;		 -> Absolute function(1), 
  1325 ;;  InterruptHan    2    2[BANK0 ] PTR FTN()void 
  1326 ;;		 -> OnChanggeINT_Handler(1), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  ret_value       1    4[BANK0 ] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      unsigned char 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;Total ram usage:        5 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    8
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_interrupt_RBx_set_callback
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text8
  1353  0011DA                     __ptext8:
  1354                           	callstack 0
  1355  0011DA                     _RB4_set_callback:
  1356                           	callstack 19
  1357  0011DA                     
  1358                           ;MCAL/Interrupts/mcal_external_interrupt.c: 792: static Std_ReturnType RB4_set_callback(
      +                          void ( *InterruptHandler_HIGH) (void),;MCAL/Interrupts/mcal_external_interrupt.c: 793:  
      +                                                          void ( *InterruptHandler_LOW) (void) );MCAL/Interrupts/m
      +                          cal_external_interrupt.c: 794: {;MCAL/Interrupts/mcal_external_interrupt.c: 796:     Std
      +                          _ReturnType ret_value = (Std_returnType) 0x01 ;
  1359  0011DA  0E01               	movlw	1
  1360  0011DC  0100               	movlb	0	; () banked
  1361  0011DE  6F84               	movwf	RB4_set_callback@ret_value& (0+255),b
  1362  0011E0                     
  1363                           ; BSR set to: 0
  1364                           ;MCAL/Interrupts/mcal_external_interrupt.c: 797:     if((((void*)0) == InterruptHandler_
      +                          HIGH) && (((void*)0) == InterruptHandler_LOW))
  1365  0011E0  5180               	movf	RB4_set_callback@InterruptHandler_HIGH& (0+255),w,b
  1366  0011E2  1181               	iorwf	(RB4_set_callback@InterruptHandler_HIGH+1)& (0+255),w,b
  1367  0011E4  A4D8               	btfss	status,2,c
  1368  0011E6  EFF7  F008         	goto	u2891
  1369  0011EA  EFF9  F008         	goto	u2890
  1370  0011EE                     u2891:
  1371  0011EE  EF06  F009         	goto	l2926
  1372  0011F2                     u2890:
  1373  0011F2                     
  1374                           ; BSR set to: 0
  1375  0011F2  5182               	movf	RB4_set_callback@InterruptHandler_LOW& (0+255),w,b
  1376  0011F4  1183               	iorwf	(RB4_set_callback@InterruptHandler_LOW+1)& (0+255),w,b
  1377  0011F6  A4D8               	btfss	status,2,c
  1378  0011F8  EF00  F009         	goto	u2901
  1379  0011FC  EF02  F009         	goto	u2900
  1380  001200                     u2901:
  1381  001200  EF06  F009         	goto	l2926
  1382  001204                     u2900:
  1383  001204                     
  1384                           ; BSR set to: 0
  1385                           ;MCAL/Interrupts/mcal_external_interrupt.c: 798:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 799:         ret_value = (Std_returnType) 0x00 ;
  1386  001204  0E00               	movlw	0
  1387  001206  6F84               	movwf	RB4_set_callback@ret_value& (0+255),b
  1388                           
  1389                           ;MCAL/Interrupts/mcal_external_interrupt.c: 800:     }
  1390  001208  EF0E  F009         	goto	l2928
  1391  00120C                     l2926:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;MCAL/Interrupts/mcal_external_interrupt.c: 802:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 803:         RB4_InterruptHandler_HIGH = InterruptHandler_HIGH ;
  1395  00120C  C080  F05B         	movff	RB4_set_callback@InterruptHandler_HIGH,_RB4_InterruptHandler_HIGH
  1396  001210  C081  F05C         	movff	RB4_set_callback@InterruptHandler_HIGH+1,_RB4_InterruptHandler_HIGH+1
  1397                           
  1398                           ;MCAL/Interrupts/mcal_external_interrupt.c: 804:         RB4_InterruptHandler_LOW = Inte
      +                          rruptHandler_LOW ;
  1399  001214  C082  F059         	movff	RB4_set_callback@InterruptHandler_LOW,_RB4_InterruptHandler_LOW
  1400  001218  C083  F05A         	movff	RB4_set_callback@InterruptHandler_LOW+1,_RB4_InterruptHandler_LOW+1
  1401  00121C                     l2928:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;MCAL/Interrupts/mcal_external_interrupt.c: 806:     return ret_value ;
  1405  00121C  5184               	movf	RB4_set_callback@ret_value& (0+255),w,b
  1406  00121E                     
  1407                           ; BSR set to: 0
  1408  00121E  0012               	return		;funcret
  1409  001220                     __end_of_RB4_set_callback:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _interrupt_RBx_pin_init *****************
  1413 ;; Defined at:
  1414 ;;		line 746 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  int_obj         2    9[BANK0 ] PTR const struct .
  1417 ;;		 -> INTERUPT_oncahnge(6), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  ret_value       1   11[BANK0 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        3 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    9
  1436 ;; This function calls:
  1437 ;;		_GPIO_Pin_Direction_Initialize
  1438 ;; This function is called by:
  1439 ;;		_Interrupt_RBx_INIT
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text9
  1444  001294                     __ptext9:
  1445                           	callstack 0
  1446  001294                     _interrupt_RBx_pin_init:
  1447                           	callstack 19
  1448  001294                     
  1449                           ;MCAL/Interrupts/mcal_external_interrupt.c: 746: static Std_ReturnType interrupt_RBx_pin
      +                          _init(const Interrupt_RBx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 747: {
      +                          ;MCAL/Interrupts/mcal_external_interrupt.c: 748:     Std_ReturnType ret_value = (Std_ret
      +                          urnType) 0x01 ;
  1450  001294  0E01               	movlw	1
  1451  001296  0100               	movlb	0	; () banked
  1452  001298  6F8B               	movwf	interrupt_RBx_pin_init@ret_value& (0+255),b
  1453  00129A                     
  1454                           ; BSR set to: 0
  1455                           ;MCAL/Interrupts/mcal_external_interrupt.c: 750:     if(((void*)0) == int_obj)
  1456  00129A  5189               	movf	interrupt_RBx_pin_init@int_obj& (0+255),w,b
  1457  00129C  118A               	iorwf	(interrupt_RBx_pin_init@int_obj+1)& (0+255),w,b
  1458  00129E  A4D8               	btfss	status,2,c
  1459  0012A0  EF54  F009         	goto	u3251
  1460  0012A4  EF56  F009         	goto	u3250
  1461  0012A8                     u3251:
  1462  0012A8  EF5A  F009         	goto	l3240
  1463  0012AC                     u3250:
  1464  0012AC                     
  1465                           ; BSR set to: 0
  1466                           ;MCAL/Interrupts/mcal_external_interrupt.c: 751:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 752:         ret_value = (Std_returnType) 0x00 ;
  1467  0012AC  0E00               	movlw	0
  1468  0012AE  6F8B               	movwf	interrupt_RBx_pin_init@ret_value& (0+255),b
  1469                           
  1470                           ;MCAL/Interrupts/mcal_external_interrupt.c: 753:     }
  1471  0012B0  EF62  F009         	goto	l3242
  1472  0012B4                     l3240:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;MCAL/Interrupts/mcal_external_interrupt.c: 755:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 756:         GPIO_Pin_Direction_Initialize(&(int_obj->pin));
  1476  0012B4  0E05               	movlw	5
  1477  0012B6  2589               	addwf	interrupt_RBx_pin_init@int_obj& (0+255),w,b
  1478  0012B8  6F80               	movwf	GPIO_Pin_Direction_Initialize@_pin_config& (0+255),b
  1479  0012BA  0E00               	movlw	0
  1480  0012BC  218A               	addwfc	(interrupt_RBx_pin_init@int_obj+1)& (0+255),w,b
  1481  0012BE  6F81               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)& (0+255),b
  1482  0012C0  EC55  F001         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  1483  0012C4                     l3242:
  1484                           
  1485                           ;MCAL/Interrupts/mcal_external_interrupt.c: 759:     return ret_value ;
  1486  0012C4  0100               	movlb	0	; () banked
  1487  0012C6  518B               	movf	interrupt_RBx_pin_init@ret_value& (0+255),w,b
  1488  0012C8                     
  1489                           ; BSR set to: 0
  1490  0012C8  0012               	return		;funcret
  1491  0012CA                     __end_of_interrupt_RBx_pin_init:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function _interrupt_RBx_enable *****************
  1495 ;; Defined at:
  1496 ;;		line 678 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  1499 ;;		 -> INTERUPT_oncahnge(6), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  ret_value       1    3[BANK0 ] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;Total ram usage:        4 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    8
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_Interrupt_RBx_INIT
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text10
  1526  000E98                     __ptext10:
  1527                           	callstack 0
  1528  000E98                     _interrupt_RBx_enable:
  1529                           	callstack 20
  1530  000E98                     
  1531                           ;MCAL/Interrupts/mcal_external_interrupt.c: 678: static Std_ReturnType interrupt_RBx_ena
      +                          ble(const Interrupt_RBx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 679: {;M
      +                          CAL/Interrupts/mcal_external_interrupt.c: 680:     Std_ReturnType ret_value = (Std_retur
      +                          nType) 0x01 ;
  1532  000E98  0E01               	movlw	1
  1533  000E9A  0100               	movlb	0	; () banked
  1534  000E9C  6F83               	movwf	interrupt_RBx_enable@ret_value& (0+255),b
  1535  000E9E                     
  1536                           ; BSR set to: 0
  1537                           ;MCAL/Interrupts/mcal_external_interrupt.c: 682:     if(((void*)0) == int_obj)
  1538  000E9E  5180               	movf	interrupt_RBx_enable@int_obj& (0+255),w,b
  1539  000EA0  1181               	iorwf	(interrupt_RBx_enable@int_obj+1)& (0+255),w,b
  1540  000EA2  A4D8               	btfss	status,2,c
  1541  000EA4  EF56  F007         	goto	u3301
  1542  000EA8  EF58  F007         	goto	u3300
  1543  000EAC                     u3301:
  1544  000EAC  EF5C  F007         	goto	l3298
  1545  000EB0                     u3300:
  1546  000EB0                     
  1547                           ; BSR set to: 0
  1548                           ;MCAL/Interrupts/mcal_external_interrupt.c: 683:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 684:         ret_value = (Std_returnType) 0x00 ;
  1549  000EB0  0E00               	movlw	0
  1550  000EB2  6F83               	movwf	interrupt_RBx_enable@ret_value& (0+255),b
  1551                           
  1552                           ;MCAL/Interrupts/mcal_external_interrupt.c: 685:     }
  1553  000EB4  EF7E  F007         	goto	l3306
  1554  000EB8                     l3298:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;MCAL/Interrupts/mcal_external_interrupt.c: 687:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 689:         if( INT_HIGH_PRI == int_obj->priority)
  1558  000EB8  EE20 F004          	lfsr	2,4
  1559  000EBC  5180               	movf	interrupt_RBx_enable@int_obj& (0+255),w,b
  1560  000EBE  26D9               	addwf	fsr2l,f,c
  1561  000EC0  5181               	movf	(interrupt_RBx_enable@int_obj+1)& (0+255),w,b
  1562  000EC2  22DA               	addwfc	fsr2h,f,c
  1563  000EC4  04DE               	decf	postinc2,w,c
  1564  000EC6  A4D8               	btfss	status,2,c
  1565  000EC8  EF68  F007         	goto	u3311
  1566  000ECC  EF6A  F007         	goto	u3310
  1567  000ED0                     u3311:
  1568  000ED0  EF6D  F007         	goto	l3302
  1569  000ED4                     u3310:
  1570  000ED4                     
  1571                           ; BSR set to: 0
  1572                           ;MCAL/Interrupts/mcal_external_interrupt.c: 690:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 691:             (INTCONbits.GIEH = 1);
  1573  000ED4  8EF2               	bsf	242,7,c	;volatile
  1574                           
  1575                           ;MCAL/Interrupts/mcal_external_interrupt.c: 692:         }
  1576  000ED6  EF7D  F007         	goto	l486
  1577  000EDA                     l3302:
  1578                           
  1579                           ; BSR set to: 0
  1580  000EDA  EE20 F004          	lfsr	2,4
  1581  000EDE  5180               	movf	interrupt_RBx_enable@int_obj& (0+255),w,b
  1582  000EE0  26D9               	addwf	fsr2l,f,c
  1583  000EE2  5181               	movf	(interrupt_RBx_enable@int_obj+1)& (0+255),w,b
  1584  000EE4  22DA               	addwfc	fsr2h,f,c
  1585  000EE6  50DF               	movf	indf2,w,c
  1586  000EE8  A4D8               	btfss	status,2,c
  1587  000EEA  EF79  F007         	goto	u3321
  1588  000EEE  EF7B  F007         	goto	u3320
  1589  000EF2                     u3321:
  1590  000EF2  EF7D  F007         	goto	l486
  1591  000EF6                     u3320:
  1592  000EF6                     
  1593                           ; BSR set to: 0
  1594                           ;MCAL/Interrupts/mcal_external_interrupt.c: 694:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 695:             (INTCONbits.GIEL = 1);
  1595  000EF6  8CF2               	bsf	242,6,c	;volatile
  1596                           
  1597                           ;MCAL/Interrupts/mcal_external_interrupt.c: 696:             (INTCONbits.GIEH = 1);
  1598  000EF8  8EF2               	bsf	242,7,c	;volatile
  1599  000EFA                     l486:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;MCAL/Interrupts/mcal_external_interrupt.c: 706:         (INTCONbits.RBIE = 1 );
  1603  000EFA  86F2               	bsf	242,3,c	;volatile
  1604  000EFC                     l3306:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;MCAL/Interrupts/mcal_external_interrupt.c: 710:     return ret_value ;
  1608  000EFC  5183               	movf	interrupt_RBx_enable@ret_value& (0+255),w,b
  1609  000EFE                     
  1610                           ; BSR set to: 0
  1611  000EFE  0012               	return		;funcret
  1612  000F00                     __end_of_interrupt_RBx_enable:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _interrupt_RBx_disable *****************
  1616 ;; Defined at:
  1617 ;;		line 712 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  1620 ;;		 -> INTERUPT_oncahnge(6), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  ret_value       1    3[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        4 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    8
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_Interrupt_RBx_INIT
  1643 ;;		_Interrupt_RBx_DeINIT
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text11
  1648  000F00                     __ptext11:
  1649                           	callstack 0
  1650  000F00                     _interrupt_RBx_disable:
  1651                           	callstack 20
  1652  000F00                     
  1653                           ;MCAL/Interrupts/mcal_external_interrupt.c: 712: static Std_ReturnType interrupt_RBx_dis
      +                          able(const Interrupt_RBx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 713: {;
      +                          MCAL/Interrupts/mcal_external_interrupt.c: 714:     Std_ReturnType ret_value = (Std_retu
      +                          rnType) 0x01 ;
  1654  000F00  0E01               	movlw	1
  1655  000F02  0100               	movlb	0	; () banked
  1656  000F04  6F83               	movwf	interrupt_RBx_disable@ret_value& (0+255),b
  1657  000F06                     
  1658                           ; BSR set to: 0
  1659                           ;MCAL/Interrupts/mcal_external_interrupt.c: 716:     if(((void*)0) == int_obj)
  1660  000F06  5180               	movf	interrupt_RBx_disable@int_obj& (0+255),w,b
  1661  000F08  1181               	iorwf	(interrupt_RBx_disable@int_obj+1)& (0+255),w,b
  1662  000F0A  A4D8               	btfss	status,2,c
  1663  000F0C  EF8A  F007         	goto	u3221
  1664  000F10  EF8C  F007         	goto	u3220
  1665  000F14                     u3221:
  1666  000F14  EF90  F007         	goto	l3222
  1667  000F18                     u3220:
  1668  000F18                     
  1669                           ; BSR set to: 0
  1670                           ;MCAL/Interrupts/mcal_external_interrupt.c: 717:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 718:         ret_value = (Std_returnType) 0x00 ;
  1671  000F18  0E00               	movlw	0
  1672  000F1A  6F83               	movwf	interrupt_RBx_disable@ret_value& (0+255),b
  1673                           
  1674                           ;MCAL/Interrupts/mcal_external_interrupt.c: 719:     }
  1675  000F1C  EFB1  F007         	goto	l3230
  1676  000F20                     l3222:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;MCAL/Interrupts/mcal_external_interrupt.c: 721:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 723:         if( INT_HIGH_PRI == int_obj->priority)
  1680  000F20  EE20 F004          	lfsr	2,4
  1681  000F24  5180               	movf	interrupt_RBx_disable@int_obj& (0+255),w,b
  1682  000F26  26D9               	addwf	fsr2l,f,c
  1683  000F28  5181               	movf	(interrupt_RBx_disable@int_obj+1)& (0+255),w,b
  1684  000F2A  22DA               	addwfc	fsr2h,f,c
  1685  000F2C  04DE               	decf	postinc2,w,c
  1686  000F2E  A4D8               	btfss	status,2,c
  1687  000F30  EF9C  F007         	goto	u3231
  1688  000F34  EF9E  F007         	goto	u3230
  1689  000F38                     u3231:
  1690  000F38  EFA1  F007         	goto	l3226
  1691  000F3C                     u3230:
  1692  000F3C                     
  1693                           ; BSR set to: 0
  1694                           ;MCAL/Interrupts/mcal_external_interrupt.c: 724:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 725:             (INTCONbits.GIEH = 0);
  1695  000F3C  9EF2               	bcf	242,7,c	;volatile
  1696                           
  1697                           ;MCAL/Interrupts/mcal_external_interrupt.c: 726:         }
  1698  000F3E  EFB0  F007         	goto	l495
  1699  000F42                     l3226:
  1700                           
  1701                           ; BSR set to: 0
  1702  000F42  EE20 F004          	lfsr	2,4
  1703  000F46  5180               	movf	interrupt_RBx_disable@int_obj& (0+255),w,b
  1704  000F48  26D9               	addwf	fsr2l,f,c
  1705  000F4A  5181               	movf	(interrupt_RBx_disable@int_obj+1)& (0+255),w,b
  1706  000F4C  22DA               	addwfc	fsr2h,f,c
  1707  000F4E  50DF               	movf	indf2,w,c
  1708  000F50  A4D8               	btfss	status,2,c
  1709  000F52  EFAD  F007         	goto	u3241
  1710  000F56  EFAF  F007         	goto	u3240
  1711  000F5A                     u3241:
  1712  000F5A  EFB0  F007         	goto	l495
  1713  000F5E                     u3240:
  1714  000F5E                     
  1715                           ; BSR set to: 0
  1716                           ;MCAL/Interrupts/mcal_external_interrupt.c: 728:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 729:             (INTCONbits.GIEL = 0);
  1717  000F5E  9CF2               	bcf	242,6,c	;volatile
  1718  000F60                     l495:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;MCAL/Interrupts/mcal_external_interrupt.c: 739:         (INTCONbits.RBIE = 0 );
  1722  000F60  96F2               	bcf	242,3,c	;volatile
  1723  000F62                     l3230:
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;MCAL/Interrupts/mcal_external_interrupt.c: 742:     return ret_value ;
  1727  000F62  5183               	movf	interrupt_RBx_disable@ret_value& (0+255),w,b
  1728  000F64                     
  1729                           ; BSR set to: 0
  1730  000F64  0012               	return		;funcret
  1731  000F66                     __end_of_interrupt_RBx_disable:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _Interrupt_INTx_INIT *****************
  1735 ;; Defined at:
  1736 ;;		line 204 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  int_obj         2    8[BANK0 ] PTR const struct .
  1739 ;;		 -> INTERUPT1(5), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  ret_value       1   10[BANK0 ] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      unsigned char 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        3 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:   10
  1758 ;; This function calls:
  1759 ;;		_interrupt_INTx_clear_flag
  1760 ;;		_interrupt_INTx_disable
  1761 ;;		_interrupt_INTx_enable
  1762 ;;		_interrupt_INTx_pin_init
  1763 ;;		_interrupt_INTx_set_callback
  1764 ;;		_interrupt_INTx_set_edge
  1765 ;;		_interrupt_INTx_set_priority
  1766 ;; This function is called by:
  1767 ;;		_application_intialize
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text12
  1772  000B74                     __ptext12:
  1773                           	callstack 0
  1774  000B74                     _Interrupt_INTx_INIT:
  1775                           	callstack 19
  1776  000B74                     
  1777                           ;MCAL/Interrupts/mcal_external_interrupt.c: 207:     if(((void*)0) == int_obj)
  1778  000B74  0100               	movlb	0	; () banked
  1779  000B76  5188               	movf	Interrupt_INTx_INIT@int_obj& (0+255),w,b
  1780  000B78  1189               	iorwf	(Interrupt_INTx_INIT@int_obj+1)& (0+255),w,b
  1781  000B7A  A4D8               	btfss	status,2,c
  1782  000B7C  EFC2  F005         	goto	u3341
  1783  000B80  EFC4  F005         	goto	u3340
  1784  000B84                     u3341:
  1785  000B84  EFC6  F005         	goto	l3326
  1786  000B88                     u3340:
  1787  000B88                     
  1788                           ; BSR set to: 0
  1789                           ;MCAL/Interrupts/mcal_external_interrupt.c: 210:     }
  1790  000B88  EFFC  F005         	goto	l345
  1791  000B8C                     l3326:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;MCAL/Interrupts/mcal_external_interrupt.c: 212:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 214:         ret_value = interrupt_INTx_disable(int_obj);
  1795  000B8C  C088  F080         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_disable@int_obj
  1796  000B90  C089  F081         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_disable@int_obj+1
  1797  000B94  EC0C  F005         	call	_interrupt_INTx_disable	;wreg free
  1798  000B98  0100               	movlb	0	; () banked
  1799  000B9A  6F8A               	movwf	Interrupt_INTx_INIT@ret_value& (0+255),b
  1800                           
  1801                           ;MCAL/Interrupts/mcal_external_interrupt.c: 216:         ret_value &= interrupt_INTx_cle
      +                          ar_flag(int_obj);
  1802  000B9C  C088  F080         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_clear_flag@int_obj
  1803  000BA0  C089  F081         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_clear_flag@int_obj+1
  1804  000BA4  EC37  F006         	call	_interrupt_INTx_clear_flag	;wreg free
  1805  000BA8  0100               	movlb	0	; () banked
  1806  000BAA  178A               	andwf	Interrupt_INTx_INIT@ret_value& (0+255),f,b
  1807                           
  1808                           ;MCAL/Interrupts/mcal_external_interrupt.c: 220:         ret_value &= interrupt_INTx_set
      +                          _priority(int_obj);
  1809  000BAC  C088  F080         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_set_priority@int_obj
  1810  000BB0  C089  F081         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_set_priority@int_obj+1
  1811  000BB4  EC35  F004         	call	_interrupt_INTx_set_priority	;wreg free
  1812  000BB8  0100               	movlb	0	; () banked
  1813  000BBA  178A               	andwf	Interrupt_INTx_INIT@ret_value& (0+255),f,b
  1814                           
  1815                           ;MCAL/Interrupts/mcal_external_interrupt.c: 225:         ret_value &= interrupt_INTx_pin
      +                          _init(int_obj);
  1816  000BBC  C088  F080         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_pin_init@int_obj
  1817  000BC0  C089  F081         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_pin_init@int_obj+1
  1818  000BC4  ECFD  F005         	call	_interrupt_INTx_pin_init	;wreg free
  1819  000BC8  0100               	movlb	0	; () banked
  1820  000BCA  178A               	andwf	Interrupt_INTx_INIT@ret_value& (0+255),f,b
  1821                           
  1822                           ;MCAL/Interrupts/mcal_external_interrupt.c: 228:         ret_value &= interrupt_INTx_set
      +                          _edge(int_obj);
  1823  000BCC  C088  F080         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_set_edge@int_obj
  1824  000BD0  C089  F081         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_set_edge@int_obj+1
  1825  000BD4  ECF8  F001         	call	_interrupt_INTx_set_edge	;wreg free
  1826  000BD8  0100               	movlb	0	; () banked
  1827  000BDA  178A               	andwf	Interrupt_INTx_INIT@ret_value& (0+255),f,b
  1828                           
  1829                           ;MCAL/Interrupts/mcal_external_interrupt.c: 230:         interrupt_INTx_set_callback(int
      +                          _obj);
  1830  000BDC  C088  F083         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_set_callback@int_obj
  1831  000BE0  C089  F084         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_set_callback@int_obj+1
  1832  000BE4  EC6A  F005         	call	_interrupt_INTx_set_callback	;wreg free
  1833                           
  1834                           ;MCAL/Interrupts/mcal_external_interrupt.c: 232:         ret_value &= interrupt_INTx_ena
      +                          ble(int_obj);
  1835  000BE8  C088  F080         	movff	Interrupt_INTx_INIT@int_obj,interrupt_INTx_enable@int_obj
  1836  000BEC  C089  F081         	movff	Interrupt_INTx_INIT@int_obj+1,interrupt_INTx_enable@int_obj+1
  1837  000BF0  ECAD  F004         	call	_interrupt_INTx_enable	;wreg free
  1838  000BF4  0100               	movlb	0	; () banked
  1839  000BF6  178A               	andwf	Interrupt_INTx_INIT@ret_value& (0+255),f,b
  1840  000BF8                     l345:
  1841                           
  1842                           ; BSR set to: 0
  1843  000BF8  0012               	return		;funcret
  1844  000BFA                     __end_of_Interrupt_INTx_INIT:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _interrupt_INTx_set_priority *****************
  1848 ;; Defined at:
  1849 ;;		line 413 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  1852 ;;		 -> INTERUPT1(5), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  ret_value       1    4[BANK0 ] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      unsigned char 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        5 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    8
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_Interrupt_INTx_INIT
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text13
  1879  00086A                     __ptext13:
  1880                           	callstack 0
  1881  00086A                     _interrupt_INTx_set_priority:
  1882                           	callstack 20
  1883  00086A                     
  1884                           ;MCAL/Interrupts/mcal_external_interrupt.c: 413: static Std_ReturnType interrupt_INTx_se
      +                          t_priority(const Interrupt_INTx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 
      +                          414: {;MCAL/Interrupts/mcal_external_interrupt.c: 416:     Std_ReturnType ret_value = (S
      +                          td_returnType) 0x01 ;
  1885  00086A  0E01               	movlw	1
  1886  00086C  0100               	movlb	0	; () banked
  1887  00086E  6F84               	movwf	interrupt_INTx_set_priority@ret_value& (0+255),b
  1888  000870                     
  1889                           ; BSR set to: 0
  1890                           ;MCAL/Interrupts/mcal_external_interrupt.c: 417:     if(((void*)0) == int_obj)
  1891  000870  5180               	movf	interrupt_INTx_set_priority@int_obj& (0+255),w,b
  1892  000872  1181               	iorwf	(interrupt_INTx_set_priority@int_obj+1)& (0+255),w,b
  1893  000874  A4D8               	btfss	status,2,c
  1894  000876  EF3F  F004         	goto	u3051
  1895  00087A  EF41  F004         	goto	u3050
  1896  00087E                     u3051:
  1897  00087E  EF45  F004         	goto	l397
  1898  000882                     u3050:
  1899  000882                     l3054:
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;MCAL/Interrupts/mcal_external_interrupt.c: 418:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 419:         ret_value = (Std_returnType) 0x00 ;
  1903  000882  0E00               	movlw	0
  1904  000884  6F84               	movwf	interrupt_INTx_set_priority@ret_value& (0+255),b
  1905                           
  1906                           ;MCAL/Interrupts/mcal_external_interrupt.c: 420:     }
  1907  000886  EFAB  F004         	goto	l3082
  1908  00088A                     l397:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;MCAL/Interrupts/mcal_external_interrupt.c: 422:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 423:         (RCONbits.IPEN = 1 );
  1912  00088A  8ED0               	bsf	208,7,c	;volatile
  1913                           
  1914                           ;MCAL/Interrupts/mcal_external_interrupt.c: 425:         switch(int_obj->src)
  1915  00088C  EF8C  F004         	goto	l3080
  1916  000890                     l3056:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;MCAL/Interrupts/mcal_external_interrupt.c: 432:                 if(INT_HIGH_PRI == int_
      +                          obj->priority)
  1920  000890  EE20 F004          	lfsr	2,4
  1921  000894  5180               	movf	interrupt_INTx_set_priority@int_obj& (0+255),w,b
  1922  000896  26D9               	addwf	fsr2l,f,c
  1923  000898  5181               	movf	(interrupt_INTx_set_priority@int_obj+1)& (0+255),w,b
  1924  00089A  22DA               	addwfc	fsr2h,f,c
  1925  00089C  04DE               	decf	postinc2,w,c
  1926  00089E  A4D8               	btfss	status,2,c
  1927  0008A0  EF54  F004         	goto	u3061
  1928  0008A4  EF56  F004         	goto	u3060
  1929  0008A8                     u3061:
  1930  0008A8  EF59  F004         	goto	l3060
  1931  0008AC                     u3060:
  1932  0008AC                     
  1933                           ; BSR set to: 0
  1934                           ;MCAL/Interrupts/mcal_external_interrupt.c: 433:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 434:                     (INTCON3bits.INT1IP = 1 );
  1935  0008AC  8CF0               	bsf	240,6,c	;volatile
  1936                           
  1937                           ;MCAL/Interrupts/mcal_external_interrupt.c: 435:                 }
  1938  0008AE  EFAB  F004         	goto	l3082
  1939  0008B2                     l3060:
  1940                           
  1941                           ; BSR set to: 0
  1942  0008B2  EE20 F004          	lfsr	2,4
  1943  0008B6  5180               	movf	interrupt_INTx_set_priority@int_obj& (0+255),w,b
  1944  0008B8  26D9               	addwf	fsr2l,f,c
  1945  0008BA  5181               	movf	(interrupt_INTx_set_priority@int_obj+1)& (0+255),w,b
  1946  0008BC  22DA               	addwfc	fsr2h,f,c
  1947  0008BE  50DF               	movf	indf2,w,c
  1948  0008C0  A4D8               	btfss	status,2,c
  1949  0008C2  EF65  F004         	goto	u3071
  1950  0008C6  EF67  F004         	goto	u3070
  1951  0008CA                     u3071:
  1952  0008CA  EF41  F004         	goto	l3054
  1953  0008CE                     u3070:
  1954  0008CE                     
  1955                           ; BSR set to: 0
  1956                           ;MCAL/Interrupts/mcal_external_interrupt.c: 437:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 438:                     (INTCON3bits.INT1IP = 0 );
  1957  0008CE  9CF0               	bcf	240,6,c	;volatile
  1958                           
  1959                           ;MCAL/Interrupts/mcal_external_interrupt.c: 439:                 }
  1960  0008D0  EFAB  F004         	goto	l3082
  1961  0008D4                     l3066:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;MCAL/Interrupts/mcal_external_interrupt.c: 444:                 if(INT_HIGH_PRI == int_
      +                          obj->priority)
  1965  0008D4  EE20 F004          	lfsr	2,4
  1966  0008D8  5180               	movf	interrupt_INTx_set_priority@int_obj& (0+255),w,b
  1967  0008DA  26D9               	addwf	fsr2l,f,c
  1968  0008DC  5181               	movf	(interrupt_INTx_set_priority@int_obj+1)& (0+255),w,b
  1969  0008DE  22DA               	addwfc	fsr2h,f,c
  1970  0008E0  04DE               	decf	postinc2,w,c
  1971  0008E2  A4D8               	btfss	status,2,c
  1972  0008E4  EF76  F004         	goto	u3081
  1973  0008E8  EF78  F004         	goto	u3080
  1974  0008EC                     u3081:
  1975  0008EC  EF7B  F004         	goto	l3070
  1976  0008F0                     u3080:
  1977  0008F0                     
  1978                           ; BSR set to: 0
  1979                           ;MCAL/Interrupts/mcal_external_interrupt.c: 445:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 446:                     (INTCON3bits.INT2IP = 1);
  1980  0008F0  8EF0               	bsf	240,7,c	;volatile
  1981                           
  1982                           ;MCAL/Interrupts/mcal_external_interrupt.c: 447:                 }
  1983  0008F2  EFAB  F004         	goto	l3082
  1984  0008F6                     l3070:
  1985                           
  1986                           ; BSR set to: 0
  1987  0008F6  EE20 F004          	lfsr	2,4
  1988  0008FA  5180               	movf	interrupt_INTx_set_priority@int_obj& (0+255),w,b
  1989  0008FC  26D9               	addwf	fsr2l,f,c
  1990  0008FE  5181               	movf	(interrupt_INTx_set_priority@int_obj+1)& (0+255),w,b
  1991  000900  22DA               	addwfc	fsr2h,f,c
  1992  000902  50DF               	movf	indf2,w,c
  1993  000904  A4D8               	btfss	status,2,c
  1994  000906  EF87  F004         	goto	u3091
  1995  00090A  EF89  F004         	goto	u3090
  1996  00090E                     u3091:
  1997  00090E  EF41  F004         	goto	l3054
  1998  000912                     u3090:
  1999  000912                     
  2000                           ; BSR set to: 0
  2001                           ;MCAL/Interrupts/mcal_external_interrupt.c: 449:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 450:                     (INTCON3bits.INT2IP = 0);
  2002  000912  9EF0               	bcf	240,7,c	;volatile
  2003                           
  2004                           ;MCAL/Interrupts/mcal_external_interrupt.c: 451:                 }
  2005  000914  EFAB  F004         	goto	l3082
  2006  000918                     l3080:
  2007                           
  2008                           ; BSR set to: 0
  2009  000918  EE20 F003          	lfsr	2,3
  2010  00091C  5180               	movf	interrupt_INTx_set_priority@int_obj& (0+255),w,b
  2011  00091E  26D9               	addwf	fsr2l,f,c
  2012  000920  5181               	movf	(interrupt_INTx_set_priority@int_obj+1)& (0+255),w,b
  2013  000922  22DA               	addwfc	fsr2h,f,c
  2014  000924  50DF               	movf	indf2,w,c
  2015  000926  6F82               	movwf	??_interrupt_INTx_set_priority& (0+255),b
  2016  000928  6B83               	clrf	(??_interrupt_INTx_set_priority+1)& (0+255),b
  2017                           
  2018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2019                           ; Switch size 1, requested type "simple"
  2020                           ; Number of cases is 1, Range of values is 0 to 0
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte            4     3 (average)
  2024                           ;	Chosen strategy is simple_byte
  2025  00092A  5183               	movf	(??_interrupt_INTx_set_priority+1)& (0+255),w,b
  2026  00092C  0A00               	xorlw	0	; case 0
  2027  00092E  B4D8               	btfsc	status,2,c
  2028  000930  EF9C  F004         	goto	l3630
  2029  000934  EF41  F004         	goto	l3054
  2030  000938                     l3630:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ; Switch size 1, requested type "simple"
  2034                           ; Number of cases is 3, Range of values is 0 to 2
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte           10     6 (average)
  2038                           ;	Chosen strategy is simple_byte
  2039  000938  5182               	movf	??_interrupt_INTx_set_priority& (0+255),w,b
  2040  00093A  0A00               	xorlw	0	; case 0
  2041  00093C  B4D8               	btfsc	status,2,c
  2042  00093E  EFAB  F004         	goto	l3082
  2043  000942  0A01               	xorlw	1	; case 1
  2044  000944  B4D8               	btfsc	status,2,c
  2045  000946  EF48  F004         	goto	l3056
  2046  00094A  0A03               	xorlw	3	; case 2
  2047  00094C  B4D8               	btfsc	status,2,c
  2048  00094E  EF6A  F004         	goto	l3066
  2049  000952  EF41  F004         	goto	l3054
  2050  000956                     l3082:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;MCAL/Interrupts/mcal_external_interrupt.c: 460:     return ret_value ;
  2054  000956  5184               	movf	interrupt_INTx_set_priority@ret_value& (0+255),w,b
  2055  000958                     
  2056                           ; BSR set to: 0
  2057  000958  0012               	return		;funcret
  2058  00095A                     __end_of_interrupt_INTx_set_priority:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _interrupt_INTx_set_edge *****************
  2062 ;; Defined at:
  2063 ;;		line 343 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  2066 ;;		 -> INTERUPT1(5), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  ret_value       1    4[BANK0 ] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;Total ram usage:        5 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    8
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_Interrupt_INTx_INIT
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text14
  2093  0003F0                     __ptext14:
  2094                           	callstack 0
  2095  0003F0                     _interrupt_INTx_set_edge:
  2096                           	callstack 20
  2097  0003F0                     
  2098                           ;MCAL/Interrupts/mcal_external_interrupt.c: 343: static Std_ReturnType interrupt_INTx_se
      +                          t_edge(const Interrupt_INTx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 344:
      +                           {;MCAL/Interrupts/mcal_external_interrupt.c: 346:     Std_ReturnType ret_value = (Std_r
      +                          eturnType) 0x01 ;
  2099  0003F0  0E01               	movlw	1
  2100  0003F2  0100               	movlb	0	; () banked
  2101  0003F4  6F84               	movwf	interrupt_INTx_set_edge@ret_value& (0+255),b
  2102  0003F6                     
  2103                           ; BSR set to: 0
  2104                           ;MCAL/Interrupts/mcal_external_interrupt.c: 347:     if(((void*)0) == int_obj)
  2105  0003F6  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2106  0003F8  1181               	iorwf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2107  0003FA  A4D8               	btfss	status,2,c
  2108  0003FC  EF02  F002         	goto	u3111
  2109  000400  EF04  F002         	goto	u3110
  2110  000404                     u3111:
  2111  000404  EF6E  F002         	goto	l3152
  2112  000408                     u3110:
  2113  000408                     l3116:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;MCAL/Interrupts/mcal_external_interrupt.c: 348:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 349:         ret_value = (Std_returnType) 0x00 ;
  2117  000408  0E00               	movlw	0
  2118  00040A  6F84               	movwf	interrupt_INTx_set_edge@ret_value& (0+255),b
  2119                           
  2120                           ;MCAL/Interrupts/mcal_external_interrupt.c: 350:     }
  2121  00040C  EF8D  F002         	goto	l3154
  2122  000410                     l3118:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;MCAL/Interrupts/mcal_external_interrupt.c: 357:                 if(INT_RISING_EDGE == i
      +                          nt_obj->edge)
  2126  000410  EE20 F002          	lfsr	2,2
  2127  000414  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2128  000416  26D9               	addwf	fsr2l,f,c
  2129  000418  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2130  00041A  22DA               	addwfc	fsr2h,f,c
  2131  00041C  04DE               	decf	postinc2,w,c
  2132  00041E  A4D8               	btfss	status,2,c
  2133  000420  EF14  F002         	goto	u3121
  2134  000424  EF16  F002         	goto	u3120
  2135  000428                     u3121:
  2136  000428  EF19  F002         	goto	l3122
  2137  00042C                     u3120:
  2138  00042C                     
  2139                           ; BSR set to: 0
  2140                           ;MCAL/Interrupts/mcal_external_interrupt.c: 358:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 359:                     (INTCON2bits.INTEDG0 = 1);
  2141  00042C  8CF1               	bsf	241,6,c	;volatile
  2142                           
  2143                           ;MCAL/Interrupts/mcal_external_interrupt.c: 360:                 }
  2144  00042E  EF8D  F002         	goto	l3154
  2145  000432                     l3122:
  2146                           
  2147                           ; BSR set to: 0
  2148  000432  EE20 F002          	lfsr	2,2
  2149  000436  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2150  000438  26D9               	addwf	fsr2l,f,c
  2151  00043A  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2152  00043C  22DA               	addwfc	fsr2h,f,c
  2153  00043E  50DF               	movf	indf2,w,c
  2154  000440  A4D8               	btfss	status,2,c
  2155  000442  EF25  F002         	goto	u3131
  2156  000446  EF27  F002         	goto	u3130
  2157  00044A                     u3131:
  2158  00044A  EF04  F002         	goto	l3116
  2159  00044E                     u3130:
  2160  00044E                     
  2161                           ; BSR set to: 0
  2162                           ;MCAL/Interrupts/mcal_external_interrupt.c: 362:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 363:                     (INTCON2bits.INTEDG0 = 0);
  2163  00044E  9CF1               	bcf	241,6,c	;volatile
  2164                           
  2165                           ;MCAL/Interrupts/mcal_external_interrupt.c: 364:                 }
  2166  000450  EF8D  F002         	goto	l3154
  2167  000454                     l3128:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;MCAL/Interrupts/mcal_external_interrupt.c: 372:                 if(INT_RISING_EDGE == i
      +                          nt_obj->edge)
  2171  000454  EE20 F002          	lfsr	2,2
  2172  000458  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2173  00045A  26D9               	addwf	fsr2l,f,c
  2174  00045C  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2175  00045E  22DA               	addwfc	fsr2h,f,c
  2176  000460  04DE               	decf	postinc2,w,c
  2177  000462  A4D8               	btfss	status,2,c
  2178  000464  EF36  F002         	goto	u3141
  2179  000468  EF38  F002         	goto	u3140
  2180  00046C                     u3141:
  2181  00046C  EF3B  F002         	goto	l3132
  2182  000470                     u3140:
  2183  000470                     
  2184                           ; BSR set to: 0
  2185                           ;MCAL/Interrupts/mcal_external_interrupt.c: 373:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 374:                     (INTCON2bits.INTEDG1 = 1);
  2186  000470  8AF1               	bsf	241,5,c	;volatile
  2187                           
  2188                           ;MCAL/Interrupts/mcal_external_interrupt.c: 375:                 }
  2189  000472  EF8D  F002         	goto	l3154
  2190  000476                     l3132:
  2191                           
  2192                           ; BSR set to: 0
  2193  000476  EE20 F002          	lfsr	2,2
  2194  00047A  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2195  00047C  26D9               	addwf	fsr2l,f,c
  2196  00047E  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2197  000480  22DA               	addwfc	fsr2h,f,c
  2198  000482  50DF               	movf	indf2,w,c
  2199  000484  A4D8               	btfss	status,2,c
  2200  000486  EF47  F002         	goto	u3151
  2201  00048A  EF49  F002         	goto	u3150
  2202  00048E                     u3151:
  2203  00048E  EF04  F002         	goto	l3116
  2204  000492                     u3150:
  2205  000492                     
  2206                           ; BSR set to: 0
  2207                           ;MCAL/Interrupts/mcal_external_interrupt.c: 377:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 378:                     (INTCON2bits.INTEDG1 = 0);
  2208  000492  9AF1               	bcf	241,5,c	;volatile
  2209                           
  2210                           ;MCAL/Interrupts/mcal_external_interrupt.c: 379:                 }
  2211  000494  EF8D  F002         	goto	l3154
  2212  000498                     l3138:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;MCAL/Interrupts/mcal_external_interrupt.c: 387:                 if(INT_RISING_EDGE == i
      +                          nt_obj->edge)
  2216  000498  EE20 F002          	lfsr	2,2
  2217  00049C  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2218  00049E  26D9               	addwf	fsr2l,f,c
  2219  0004A0  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2220  0004A2  22DA               	addwfc	fsr2h,f,c
  2221  0004A4  04DE               	decf	postinc2,w,c
  2222  0004A6  A4D8               	btfss	status,2,c
  2223  0004A8  EF58  F002         	goto	u3161
  2224  0004AC  EF5A  F002         	goto	u3160
  2225  0004B0                     u3161:
  2226  0004B0  EF5D  F002         	goto	l3142
  2227  0004B4                     u3160:
  2228  0004B4                     
  2229                           ; BSR set to: 0
  2230                           ;MCAL/Interrupts/mcal_external_interrupt.c: 388:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 389:                     (INTCON2bits.INTEDG2 = 1);
  2231  0004B4  88F1               	bsf	241,4,c	;volatile
  2232                           
  2233                           ;MCAL/Interrupts/mcal_external_interrupt.c: 390:                 }
  2234  0004B6  EF8D  F002         	goto	l3154
  2235  0004BA                     l3142:
  2236                           
  2237                           ; BSR set to: 0
  2238  0004BA  EE20 F002          	lfsr	2,2
  2239  0004BE  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2240  0004C0  26D9               	addwf	fsr2l,f,c
  2241  0004C2  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2242  0004C4  22DA               	addwfc	fsr2h,f,c
  2243  0004C6  50DF               	movf	indf2,w,c
  2244  0004C8  A4D8               	btfss	status,2,c
  2245  0004CA  EF69  F002         	goto	u3171
  2246  0004CE  EF6B  F002         	goto	u3170
  2247  0004D2                     u3171:
  2248  0004D2  EF04  F002         	goto	l3116
  2249  0004D6                     u3170:
  2250  0004D6                     
  2251                           ; BSR set to: 0
  2252                           ;MCAL/Interrupts/mcal_external_interrupt.c: 392:                 {;MCAL/Interrupts/mcal_
      +                          external_interrupt.c: 393:                     (INTCON2bits.INTEDG2 = 0);
  2253  0004D6  98F1               	bcf	241,4,c	;volatile
  2254                           
  2255                           ;MCAL/Interrupts/mcal_external_interrupt.c: 394:                 }
  2256  0004D8  EF8D  F002         	goto	l3154
  2257  0004DC                     l3152:
  2258                           
  2259                           ; BSR set to: 0
  2260  0004DC  EE20 F003          	lfsr	2,3
  2261  0004E0  5180               	movf	interrupt_INTx_set_edge@int_obj& (0+255),w,b
  2262  0004E2  26D9               	addwf	fsr2l,f,c
  2263  0004E4  5181               	movf	(interrupt_INTx_set_edge@int_obj+1)& (0+255),w,b
  2264  0004E6  22DA               	addwfc	fsr2h,f,c
  2265  0004E8  50DF               	movf	indf2,w,c
  2266  0004EA  6F82               	movwf	??_interrupt_INTx_set_edge& (0+255),b
  2267  0004EC  6B83               	clrf	(??_interrupt_INTx_set_edge+1)& (0+255),b
  2268                           
  2269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 1, Range of values is 0 to 0
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte            4     3 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276  0004EE  5183               	movf	(??_interrupt_INTx_set_edge+1)& (0+255),w,b
  2277  0004F0  0A00               	xorlw	0	; case 0
  2278  0004F2  B4D8               	btfsc	status,2,c
  2279  0004F4  EF7E  F002         	goto	l3632
  2280  0004F8  EF04  F002         	goto	l3116
  2281  0004FC                     l3632:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ; Switch size 1, requested type "simple"
  2285                           ; Number of cases is 3, Range of values is 0 to 2
  2286                           ; switch strategies available:
  2287                           ; Name         Instructions Cycles
  2288                           ; simple_byte           10     6 (average)
  2289                           ;	Chosen strategy is simple_byte
  2290  0004FC  5182               	movf	??_interrupt_INTx_set_edge& (0+255),w,b
  2291  0004FE  0A00               	xorlw	0	; case 0
  2292  000500  B4D8               	btfsc	status,2,c
  2293  000502  EF08  F002         	goto	l3118
  2294  000506  0A01               	xorlw	1	; case 1
  2295  000508  B4D8               	btfsc	status,2,c
  2296  00050A  EF2A  F002         	goto	l3128
  2297  00050E  0A03               	xorlw	3	; case 2
  2298  000510  B4D8               	btfsc	status,2,c
  2299  000512  EF4C  F002         	goto	l3138
  2300  000516  EF04  F002         	goto	l3116
  2301  00051A                     l3154:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;MCAL/Interrupts/mcal_external_interrupt.c: 408:     return ret_value ;
  2305  00051A  5184               	movf	interrupt_INTx_set_edge@ret_value& (0+255),w,b
  2306  00051C                     
  2307                           ; BSR set to: 0
  2308  00051C  0012               	return		;funcret
  2309  00051E                     __end_of_interrupt_INTx_set_edge:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _interrupt_INTx_set_callback *****************
  2313 ;; Defined at:
  2314 ;;		line 642 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  int_obj         2    3[BANK0 ] PTR const struct .
  2317 ;;		 -> INTERUPT1(5), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  ret_value       1    0        unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      unsigned char 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;Total ram usage:        5 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    9
  2336 ;; This function calls:
  2337 ;;		_INT0_set_callback
  2338 ;;		_INT1_set_callback
  2339 ;;		_INT2_set_callback
  2340 ;; This function is called by:
  2341 ;;		_Interrupt_INTx_INIT
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text15
  2346  000AD4                     __ptext15:
  2347                           	callstack 0
  2348  000AD4                     _interrupt_INTx_set_callback:
  2349                           	callstack 19
  2350  000AD4                     
  2351                           ;MCAL/Interrupts/mcal_external_interrupt.c: 646:     if(((void*)0) == int_obj)
  2352  000AD4  0100               	movlb	0	; () banked
  2353  000AD6  5183               	movf	interrupt_INTx_set_callback@int_obj& (0+255),w,b
  2354  000AD8  1184               	iorwf	(interrupt_INTx_set_callback@int_obj+1)& (0+255),w,b
  2355  000ADA  A4D8               	btfss	status,2,c
  2356  000ADC  EF72  F005         	goto	u3181
  2357  000AE0  EF74  F005         	goto	u3180
  2358  000AE4                     u3181:
  2359  000AE4  EF9A  F005         	goto	l3178
  2360  000AE8                     u3180:
  2361  000AE8                     l3166:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;MCAL/Interrupts/mcal_external_interrupt.c: 649:     }
  2365  000AE8  EFB9  F005         	goto	l480
  2366  000AEC                     l3168:
  2367                           
  2368                           ; BSR set to: 0
  2369  000AEC  C083  FFD9         	movff	interrupt_INTx_set_callback@int_obj,fsr2l
  2370  000AF0  C084  FFDA         	movff	interrupt_INTx_set_callback@int_obj+1,fsr2h
  2371  000AF4  CFDE F080          	movff	postinc2,INT0_set_callback@InterruptHandler
  2372  000AF8  CFDD F081          	movff	postdec2,INT0_set_callback@InterruptHandler+1
  2373  000AFC  ECEF  F009         	call	_INT0_set_callback	;wreg free
  2374                           
  2375                           ;MCAL/Interrupts/mcal_external_interrupt.c: 656:                 break;
  2376  000B00  EFB9  F005         	goto	l480
  2377  000B04                     l3170:
  2378                           
  2379                           ; BSR set to: 0
  2380  000B04  C083  FFD9         	movff	interrupt_INTx_set_callback@int_obj,fsr2l
  2381  000B08  C084  FFDA         	movff	interrupt_INTx_set_callback@int_obj+1,fsr2h
  2382  000B0C  CFDE F080          	movff	postinc2,INT1_set_callback@InterruptHandler
  2383  000B10  CFDD F081          	movff	postdec2,INT1_set_callback@InterruptHandler+1
  2384  000B14  ECD9  F009         	call	_INT1_set_callback	;wreg free
  2385                           
  2386                           ;MCAL/Interrupts/mcal_external_interrupt.c: 660:                 break;
  2387  000B18  EFB9  F005         	goto	l480
  2388  000B1C                     l3172:
  2389                           
  2390                           ; BSR set to: 0
  2391  000B1C  C083  FFD9         	movff	interrupt_INTx_set_callback@int_obj,fsr2l
  2392  000B20  C084  FFDA         	movff	interrupt_INTx_set_callback@int_obj+1,fsr2h
  2393  000B24  CFDE F080          	movff	postinc2,INT2_set_callback@InterruptHandler
  2394  000B28  CFDD F081          	movff	postdec2,INT2_set_callback@InterruptHandler+1
  2395  000B2C  ECC3  F009         	call	_INT2_set_callback	;wreg free
  2396                           
  2397                           ;MCAL/Interrupts/mcal_external_interrupt.c: 664:                 break;
  2398  000B30  EFB9  F005         	goto	l480
  2399  000B34                     l3178:
  2400                           
  2401                           ; BSR set to: 0
  2402  000B34  EE20 F003          	lfsr	2,3
  2403  000B38  5183               	movf	interrupt_INTx_set_callback@int_obj& (0+255),w,b
  2404  000B3A  26D9               	addwf	fsr2l,f,c
  2405  000B3C  5184               	movf	(interrupt_INTx_set_callback@int_obj+1)& (0+255),w,b
  2406  000B3E  22DA               	addwfc	fsr2h,f,c
  2407  000B40  50DF               	movf	indf2,w,c
  2408  000B42  6F85               	movwf	??_interrupt_INTx_set_callback& (0+255),b
  2409  000B44  6B86               	clrf	(??_interrupt_INTx_set_callback+1)& (0+255),b
  2410                           
  2411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2412                           ; Switch size 1, requested type "simple"
  2413                           ; Number of cases is 1, Range of values is 0 to 0
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte            4     3 (average)
  2417                           ;	Chosen strategy is simple_byte
  2418  000B46  5186               	movf	(??_interrupt_INTx_set_callback+1)& (0+255),w,b
  2419  000B48  0A00               	xorlw	0	; case 0
  2420  000B4A  B4D8               	btfsc	status,2,c
  2421  000B4C  EFAA  F005         	goto	l3634
  2422  000B50  EF74  F005         	goto	l3166
  2423  000B54                     l3634:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ; Switch size 1, requested type "simple"
  2427                           ; Number of cases is 3, Range of values is 0 to 2
  2428                           ; switch strategies available:
  2429                           ; Name         Instructions Cycles
  2430                           ; simple_byte           10     6 (average)
  2431                           ;	Chosen strategy is simple_byte
  2432  000B54  5185               	movf	??_interrupt_INTx_set_callback& (0+255),w,b
  2433  000B56  0A00               	xorlw	0	; case 0
  2434  000B58  B4D8               	btfsc	status,2,c
  2435  000B5A  EF76  F005         	goto	l3168
  2436  000B5E  0A01               	xorlw	1	; case 1
  2437  000B60  B4D8               	btfsc	status,2,c
  2438  000B62  EF82  F005         	goto	l3170
  2439  000B66  0A03               	xorlw	3	; case 2
  2440  000B68  B4D8               	btfsc	status,2,c
  2441  000B6A  EF8E  F005         	goto	l3172
  2442  000B6E  EF74  F005         	goto	l3166
  2443  000B72                     l480:
  2444  000B72  0012               	return		;funcret
  2445  000B74                     __end_of_interrupt_INTx_set_callback:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function _INT2_set_callback *****************
  2449 ;; Defined at:
  2450 ;;		line 628 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2453 ;;		 -> i2_INT1_Handler(1), INT1_Handler(1), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  ret_value       1    2[BANK0 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      unsigned char 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        3 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    8
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_interrupt_INTx_set_callback
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text16
  2480  001386                     __ptext16:
  2481                           	callstack 0
  2482  001386                     _INT2_set_callback:
  2483                           	callstack 19
  2484  001386                     
  2485                           ;MCAL/Interrupts/mcal_external_interrupt.c: 628: static Std_ReturnType INT2_set_callback
      +                          (void ( *InterruptHandler) (void) );MCAL/Interrupts/mcal_external_interrupt.c: 629: {;MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 630:     Std_ReturnType ret_value = (Std_return
      +                          Type) 0x01 ;
  2486  001386  0E01               	movlw	1
  2487  001388  0100               	movlb	0	; () banked
  2488  00138A  6F82               	movwf	INT2_set_callback@ret_value& (0+255),b
  2489  00138C                     
  2490                           ; BSR set to: 0
  2491                           ;MCAL/Interrupts/mcal_external_interrupt.c: 631:     if(((void*)0) == InterruptHandler)
  2492  00138C  5180               	movf	INT2_set_callback@InterruptHandler& (0+255),w,b
  2493  00138E  1181               	iorwf	(INT2_set_callback@InterruptHandler+1)& (0+255),w,b
  2494  001390  A4D8               	btfss	status,2,c
  2495  001392  EFCD  F009         	goto	u2881
  2496  001396  EFCF  F009         	goto	u2880
  2497  00139A                     u2881:
  2498  00139A  EFD3  F009         	goto	l2912
  2499  00139E                     u2880:
  2500  00139E                     
  2501                           ; BSR set to: 0
  2502                           ;MCAL/Interrupts/mcal_external_interrupt.c: 632:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 633:         ret_value = (Std_returnType) 0x00 ;
  2503  00139E  0E00               	movlw	0
  2504  0013A0  6F82               	movwf	INT2_set_callback@ret_value& (0+255),b
  2505                           
  2506                           ;MCAL/Interrupts/mcal_external_interrupt.c: 634:     }
  2507  0013A2  EFD7  F009         	goto	l2914
  2508  0013A6                     l2912:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;MCAL/Interrupts/mcal_external_interrupt.c: 636:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 637:         INT2_InterruptHandler = InterruptHandler ;
  2512  0013A6  C080  F05D         	movff	INT2_set_callback@InterruptHandler,_INT2_InterruptHandler
  2513  0013AA  C081  F05E         	movff	INT2_set_callback@InterruptHandler+1,_INT2_InterruptHandler+1
  2514  0013AE                     l2914:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;MCAL/Interrupts/mcal_external_interrupt.c: 640:     return ret_value ;
  2518  0013AE  5182               	movf	INT2_set_callback@ret_value& (0+255),w,b
  2519  0013B0                     
  2520                           ; BSR set to: 0
  2521  0013B0  0012               	return		;funcret
  2522  0013B2                     __end_of_INT2_set_callback:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _INT1_set_callback *****************
  2526 ;; Defined at:
  2527 ;;		line 613 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2530 ;;		 -> i2_INT1_Handler(1), INT1_Handler(1), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  ret_value       1    2[BANK0 ] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      unsigned char 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        3 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    8
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_interrupt_INTx_set_callback
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text17
  2557  0013B2                     __ptext17:
  2558                           	callstack 0
  2559  0013B2                     _INT1_set_callback:
  2560                           	callstack 19
  2561  0013B2                     
  2562                           ;MCAL/Interrupts/mcal_external_interrupt.c: 613: static Std_ReturnType INT1_set_callback
      +                          (void ( *InterruptHandler) (void) );MCAL/Interrupts/mcal_external_interrupt.c: 614: {;MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 615:     Std_ReturnType ret_value = (Std_return
      +                          Type) 0x01 ;
  2563  0013B2  0E01               	movlw	1
  2564  0013B4  0100               	movlb	0	; () banked
  2565  0013B6  6F82               	movwf	INT1_set_callback@ret_value& (0+255),b
  2566  0013B8                     
  2567                           ; BSR set to: 0
  2568                           ;MCAL/Interrupts/mcal_external_interrupt.c: 616:     if(((void*)0) == InterruptHandler)
  2569  0013B8  5180               	movf	INT1_set_callback@InterruptHandler& (0+255),w,b
  2570  0013BA  1181               	iorwf	(INT1_set_callback@InterruptHandler+1)& (0+255),w,b
  2571  0013BC  A4D8               	btfss	status,2,c
  2572  0013BE  EFE3  F009         	goto	u2871
  2573  0013C2  EFE5  F009         	goto	u2870
  2574  0013C6                     u2871:
  2575  0013C6  EFE9  F009         	goto	l2900
  2576  0013CA                     u2870:
  2577  0013CA                     
  2578                           ; BSR set to: 0
  2579                           ;MCAL/Interrupts/mcal_external_interrupt.c: 617:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 618:         ret_value = (Std_returnType) 0x00 ;
  2580  0013CA  0E00               	movlw	0
  2581  0013CC  6F82               	movwf	INT1_set_callback@ret_value& (0+255),b
  2582                           
  2583                           ;MCAL/Interrupts/mcal_external_interrupt.c: 619:     }
  2584  0013CE  EFED  F009         	goto	l2902
  2585  0013D2                     l2900:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;MCAL/Interrupts/mcal_external_interrupt.c: 621:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 622:         INT1_InterruptHandler = InterruptHandler ;
  2589  0013D2  C080  F05F         	movff	INT1_set_callback@InterruptHandler,_INT1_InterruptHandler
  2590  0013D6  C081  F060         	movff	INT1_set_callback@InterruptHandler+1,_INT1_InterruptHandler+1
  2591  0013DA                     l2902:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;MCAL/Interrupts/mcal_external_interrupt.c: 626:     return ret_value ;
  2595  0013DA  5182               	movf	INT1_set_callback@ret_value& (0+255),w,b
  2596  0013DC                     
  2597                           ; BSR set to: 0
  2598  0013DC  0012               	return		;funcret
  2599  0013DE                     __end_of_INT1_set_callback:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _INT0_set_callback *****************
  2603 ;; Defined at:
  2604 ;;		line 598 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2607 ;;		 -> i2_INT1_Handler(1), INT1_Handler(1), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  ret_value       1    2[BANK0 ] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      unsigned char 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        3 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    8
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_interrupt_INTx_set_callback
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text18
  2634  0013DE                     __ptext18:
  2635                           	callstack 0
  2636  0013DE                     _INT0_set_callback:
  2637                           	callstack 19
  2638  0013DE                     
  2639                           ;MCAL/Interrupts/mcal_external_interrupt.c: 598: static Std_ReturnType INT0_set_callback
      +                          (void ( *InterruptHandler) (void) );MCAL/Interrupts/mcal_external_interrupt.c: 599: {;MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 600:     Std_ReturnType ret_value = (Std_return
      +                          Type) 0x01 ;
  2640  0013DE  0E01               	movlw	1
  2641  0013E0  0100               	movlb	0	; () banked
  2642  0013E2  6F82               	movwf	INT0_set_callback@ret_value& (0+255),b
  2643  0013E4                     
  2644                           ; BSR set to: 0
  2645                           ;MCAL/Interrupts/mcal_external_interrupt.c: 601:     if(((void*)0) == InterruptHandler)
  2646  0013E4  5180               	movf	INT0_set_callback@InterruptHandler& (0+255),w,b
  2647  0013E6  1181               	iorwf	(INT0_set_callback@InterruptHandler+1)& (0+255),w,b
  2648  0013E8  A4D8               	btfss	status,2,c
  2649  0013EA  EFF9  F009         	goto	u2861
  2650  0013EE  EFFB  F009         	goto	u2860
  2651  0013F2                     u2861:
  2652  0013F2  EFFF  F009         	goto	l2888
  2653  0013F6                     u2860:
  2654  0013F6                     
  2655                           ; BSR set to: 0
  2656                           ;MCAL/Interrupts/mcal_external_interrupt.c: 602:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 603:         ret_value = (Std_returnType) 0x00 ;
  2657  0013F6  0E00               	movlw	0
  2658  0013F8  6F82               	movwf	INT0_set_callback@ret_value& (0+255),b
  2659                           
  2660                           ;MCAL/Interrupts/mcal_external_interrupt.c: 604:     }
  2661  0013FA  EF03  F00A         	goto	l2890
  2662  0013FE                     l2888:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;MCAL/Interrupts/mcal_external_interrupt.c: 606:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 607:         INT0_InterruptHandler = InterruptHandler ;
  2666  0013FE  C080  F061         	movff	INT0_set_callback@InterruptHandler,_INT0_InterruptHandler
  2667  001402  C081  F062         	movff	INT0_set_callback@InterruptHandler+1,_INT0_InterruptHandler+1
  2668  001406                     l2890:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;MCAL/Interrupts/mcal_external_interrupt.c: 611:     return ret_value ;
  2672  001406  5182               	movf	INT0_set_callback@ret_value& (0+255),w,b
  2673  001408                     
  2674                           ; BSR set to: 0
  2675  001408  0012               	return		;funcret
  2676  00140A                     __end_of_INT0_set_callback:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _interrupt_INTx_pin_init *****************
  2680 ;; Defined at:
  2681 ;;		line 310 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  2684 ;;		 -> INTERUPT1(5), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  ret_value       1    4[BANK0 ] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      unsigned char 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        5 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    8
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_Interrupt_INTx_INIT
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text19
  2711  000BFA                     __ptext19:
  2712                           	callstack 0
  2713  000BFA                     _interrupt_INTx_pin_init:
  2714                           	callstack 20
  2715  000BFA                     
  2716                           ;MCAL/Interrupts/mcal_external_interrupt.c: 310: static Std_ReturnType interrupt_INTx_pi
      +                          n_init(const Interrupt_INTx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 311:
      +                           {;MCAL/Interrupts/mcal_external_interrupt.c: 312:     Std_ReturnType ret_value = (Std_r
      +                          eturnType) 0x01 ;
  2717  000BFA  0E01               	movlw	1
  2718  000BFC  0100               	movlb	0	; () banked
  2719  000BFE  6F84               	movwf	interrupt_INTx_pin_init@ret_value& (0+255),b
  2720  000C00                     
  2721                           ; BSR set to: 0
  2722                           ;MCAL/Interrupts/mcal_external_interrupt.c: 313:     if(((void*)0) == int_obj)
  2723  000C00  5180               	movf	interrupt_INTx_pin_init@int_obj& (0+255),w,b
  2724  000C02  1181               	iorwf	(interrupt_INTx_pin_init@int_obj+1)& (0+255),w,b
  2725  000C04  A4D8               	btfss	status,2,c
  2726  000C06  EF07  F006         	goto	u3101
  2727  000C0A  EF09  F006         	goto	u3100
  2728  000C0E                     u3101:
  2729  000C0E  EF16  F006         	goto	l3100
  2730  000C12                     u3100:
  2731  000C12                     l3094:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;MCAL/Interrupts/mcal_external_interrupt.c: 314:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 315:         ret_value = (Std_returnType) 0x00 ;
  2735  000C12  0E00               	movlw	0
  2736  000C14  6F84               	movwf	interrupt_INTx_pin_init@ret_value& (0+255),b
  2737                           
  2738                           ;MCAL/Interrupts/mcal_external_interrupt.c: 316:     }
  2739  000C16  EF35  F006         	goto	l3102
  2740  000C1A                     l366:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;MCAL/Interrupts/mcal_external_interrupt.c: 322:                 (TRISBbits.RB0 = 1);
  2744  000C1A  8093               	bsf	147,0,c	;volatile
  2745                           
  2746                           ;MCAL/Interrupts/mcal_external_interrupt.c: 323:                 break;
  2747  000C1C  EF35  F006         	goto	l3102
  2748  000C20                     l368:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;MCAL/Interrupts/mcal_external_interrupt.c: 326:                 (TRISBbits.RB1 = 1);
  2752  000C20  8293               	bsf	147,1,c	;volatile
  2753                           
  2754                           ;MCAL/Interrupts/mcal_external_interrupt.c: 327:                 break;
  2755  000C22  EF35  F006         	goto	l3102
  2756  000C26                     l369:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;MCAL/Interrupts/mcal_external_interrupt.c: 330:                 (TRISBbits.RB2 = 1);
  2760  000C26  8493               	bsf	147,2,c	;volatile
  2761                           
  2762                           ;MCAL/Interrupts/mcal_external_interrupt.c: 331:                 break;
  2763  000C28  EF35  F006         	goto	l3102
  2764  000C2C                     l3100:
  2765                           
  2766                           ; BSR set to: 0
  2767  000C2C  EE20 F003          	lfsr	2,3
  2768  000C30  5180               	movf	interrupt_INTx_pin_init@int_obj& (0+255),w,b
  2769  000C32  26D9               	addwf	fsr2l,f,c
  2770  000C34  5181               	movf	(interrupt_INTx_pin_init@int_obj+1)& (0+255),w,b
  2771  000C36  22DA               	addwfc	fsr2h,f,c
  2772  000C38  50DF               	movf	indf2,w,c
  2773  000C3A  6F82               	movwf	??_interrupt_INTx_pin_init& (0+255),b
  2774  000C3C  6B83               	clrf	(??_interrupt_INTx_pin_init+1)& (0+255),b
  2775                           
  2776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2777                           ; Switch size 1, requested type "simple"
  2778                           ; Number of cases is 1, Range of values is 0 to 0
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte            4     3 (average)
  2782                           ;	Chosen strategy is simple_byte
  2783  000C3E  5183               	movf	(??_interrupt_INTx_pin_init+1)& (0+255),w,b
  2784  000C40  0A00               	xorlw	0	; case 0
  2785  000C42  B4D8               	btfsc	status,2,c
  2786  000C44  EF26  F006         	goto	l3636
  2787  000C48  EF09  F006         	goto	l3094
  2788  000C4C                     l3636:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ; Switch size 1, requested type "simple"
  2792                           ; Number of cases is 3, Range of values is 0 to 2
  2793                           ; switch strategies available:
  2794                           ; Name         Instructions Cycles
  2795                           ; simple_byte           10     6 (average)
  2796                           ;	Chosen strategy is simple_byte
  2797  000C4C  5182               	movf	??_interrupt_INTx_pin_init& (0+255),w,b
  2798  000C4E  0A00               	xorlw	0	; case 0
  2799  000C50  B4D8               	btfsc	status,2,c
  2800  000C52  EF0D  F006         	goto	l366
  2801  000C56  0A01               	xorlw	1	; case 1
  2802  000C58  B4D8               	btfsc	status,2,c
  2803  000C5A  EF10  F006         	goto	l368
  2804  000C5E  0A03               	xorlw	3	; case 2
  2805  000C60  B4D8               	btfsc	status,2,c
  2806  000C62  EF13  F006         	goto	l369
  2807  000C66  EF09  F006         	goto	l3094
  2808  000C6A                     l3102:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;MCAL/Interrupts/mcal_external_interrupt.c: 340:     return ret_value ;
  2812  000C6A  5184               	movf	interrupt_INTx_pin_init@ret_value& (0+255),w,b
  2813  000C6C                     
  2814                           ; BSR set to: 0
  2815  000C6C  0012               	return		;funcret
  2816  000C6E                     __end_of_interrupt_INTx_pin_init:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _interrupt_INTx_enable *****************
  2820 ;; Defined at:
  2821 ;;		line 514 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  2824 ;;		 -> INTERUPT1(5), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  ret_value       1    4[BANK0 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;Total ram usage:        5 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    8
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_Interrupt_INTx_INIT
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text20
  2851  00095A                     __ptext20:
  2852                           	callstack 0
  2853  00095A                     _interrupt_INTx_enable:
  2854                           	callstack 20
  2855  00095A                     
  2856                           ;MCAL/Interrupts/mcal_external_interrupt.c: 514: static Std_ReturnType interrupt_INTx_en
      +                          able(const Interrupt_INTx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 515: {
      +                          ;MCAL/Interrupts/mcal_external_interrupt.c: 516:     Std_ReturnType ret_value = (Std_ret
      +                          urnType) 0x01 ;
  2857  00095A  0E01               	movlw	1
  2858  00095C  0100               	movlb	0	; () banked
  2859  00095E  6F84               	movwf	interrupt_INTx_enable@ret_value& (0+255),b
  2860  000960                     
  2861                           ; BSR set to: 0
  2862                           ;MCAL/Interrupts/mcal_external_interrupt.c: 518:     if(((void*)0) == int_obj)
  2863  000960  5180               	movf	interrupt_INTx_enable@int_obj& (0+255),w,b
  2864  000962  1181               	iorwf	(interrupt_INTx_enable@int_obj+1)& (0+255),w,b
  2865  000964  A4D8               	btfss	status,2,c
  2866  000966  EFB7  F004         	goto	u3191
  2867  00096A  EFB9  F004         	goto	u3190
  2868  00096E                     u3191:
  2869  00096E  EFBD  F004         	goto	l3192
  2870  000972                     u3190:
  2871  000972                     l3190:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;MCAL/Interrupts/mcal_external_interrupt.c: 519:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 520:         ret_value = (Std_returnType) 0x00 ;
  2875  000972  0E00               	movlw	0
  2876  000974  6F84               	movwf	interrupt_INTx_enable@ret_value& (0+255),b
  2877                           
  2878                           ;MCAL/Interrupts/mcal_external_interrupt.c: 521:     }
  2879  000976  EF0A  F005         	goto	l3206
  2880  00097A                     l3192:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;MCAL/Interrupts/mcal_external_interrupt.c: 523:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 526:         if( INT_HIGH_PRI == int_obj->priority)
  2884  00097A  EE20 F004          	lfsr	2,4
  2885  00097E  5180               	movf	interrupt_INTx_enable@int_obj& (0+255),w,b
  2886  000980  26D9               	addwf	fsr2l,f,c
  2887  000982  5181               	movf	(interrupt_INTx_enable@int_obj+1)& (0+255),w,b
  2888  000984  22DA               	addwfc	fsr2h,f,c
  2889  000986  04DE               	decf	postinc2,w,c
  2890  000988  A4D8               	btfss	status,2,c
  2891  00098A  EFC9  F004         	goto	u3201
  2892  00098E  EFCB  F004         	goto	u3200
  2893  000992                     u3201:
  2894  000992  EFCE  F004         	goto	l3196
  2895  000996                     u3200:
  2896  000996                     
  2897                           ; BSR set to: 0
  2898                           ;MCAL/Interrupts/mcal_external_interrupt.c: 527:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 528:             (INTCONbits.GIEH = 1);
  2899  000996  8EF2               	bsf	242,7,c	;volatile
  2900                           
  2901                           ;MCAL/Interrupts/mcal_external_interrupt.c: 529:         }
  2902  000998  EFEB  F004         	goto	l3204
  2903  00099C                     l3196:
  2904                           
  2905                           ; BSR set to: 0
  2906  00099C  EE20 F004          	lfsr	2,4
  2907  0009A0  5180               	movf	interrupt_INTx_enable@int_obj& (0+255),w,b
  2908  0009A2  26D9               	addwf	fsr2l,f,c
  2909  0009A4  5181               	movf	(interrupt_INTx_enable@int_obj+1)& (0+255),w,b
  2910  0009A6  22DA               	addwfc	fsr2h,f,c
  2911  0009A8  50DF               	movf	indf2,w,c
  2912  0009AA  A4D8               	btfss	status,2,c
  2913  0009AC  EFDA  F004         	goto	u3211
  2914  0009B0  EFDC  F004         	goto	u3210
  2915  0009B4                     u3211:
  2916  0009B4  EFE0  F004         	goto	l434
  2917  0009B8                     u3210:
  2918  0009B8                     
  2919                           ; BSR set to: 0
  2920                           ;MCAL/Interrupts/mcal_external_interrupt.c: 531:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 532:             (INTCONbits.GIEL = 1);
  2921  0009B8  8CF2               	bsf	242,6,c	;volatile
  2922                           
  2923                           ;MCAL/Interrupts/mcal_external_interrupt.c: 533:             (INTCONbits.GIEH = 1);
  2924  0009BA  8EF2               	bsf	242,7,c	;volatile
  2925                           
  2926                           ;MCAL/Interrupts/mcal_external_interrupt.c: 535:         }
  2927  0009BC  EFEB  F004         	goto	l3204
  2928  0009C0                     l434:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;MCAL/Interrupts/mcal_external_interrupt.c: 544:         switch(int_obj->src)
  2932  0009C0  EFEB  F004         	goto	l3204
  2933  0009C4                     l438:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;MCAL/Interrupts/mcal_external_interrupt.c: 547:                 (INTCONbits.INT0IE = 1 
      +                          );
  2937  0009C4  88F2               	bsf	242,4,c	;volatile
  2938                           
  2939                           ;MCAL/Interrupts/mcal_external_interrupt.c: 548:                 break;
  2940  0009C6  EF0A  F005         	goto	l3206
  2941  0009CA                     l440:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;MCAL/Interrupts/mcal_external_interrupt.c: 551:                 (INTCON3bits.INT1IE = 1
      +                           );
  2945  0009CA  86F0               	bsf	240,3,c	;volatile
  2946                           
  2947                           ;MCAL/Interrupts/mcal_external_interrupt.c: 552:                 break;
  2948  0009CC  EF0A  F005         	goto	l3206
  2949  0009D0                     l441:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;MCAL/Interrupts/mcal_external_interrupt.c: 555:                 (INTCON3bits.INT2IE = 1
      +                          );
  2953  0009D0  88F0               	bsf	240,4,c	;volatile
  2954                           
  2955                           ;MCAL/Interrupts/mcal_external_interrupt.c: 556:                 break;
  2956  0009D2  EF0A  F005         	goto	l3206
  2957  0009D6                     l3204:
  2958                           
  2959                           ; BSR set to: 0
  2960  0009D6  EE20 F003          	lfsr	2,3
  2961  0009DA  5180               	movf	interrupt_INTx_enable@int_obj& (0+255),w,b
  2962  0009DC  26D9               	addwf	fsr2l,f,c
  2963  0009DE  5181               	movf	(interrupt_INTx_enable@int_obj+1)& (0+255),w,b
  2964  0009E0  22DA               	addwfc	fsr2h,f,c
  2965  0009E2  50DF               	movf	indf2,w,c
  2966  0009E4  6F82               	movwf	??_interrupt_INTx_enable& (0+255),b
  2967  0009E6  6B83               	clrf	(??_interrupt_INTx_enable+1)& (0+255),b
  2968                           
  2969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2970                           ; Switch size 1, requested type "simple"
  2971                           ; Number of cases is 1, Range of values is 0 to 0
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte            4     3 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976  0009E8  5183               	movf	(??_interrupt_INTx_enable+1)& (0+255),w,b
  2977  0009EA  0A00               	xorlw	0	; case 0
  2978  0009EC  B4D8               	btfsc	status,2,c
  2979  0009EE  EFFB  F004         	goto	l3638
  2980  0009F2  EFB9  F004         	goto	l3190
  2981  0009F6                     l3638:
  2982                           
  2983                           ; BSR set to: 0
  2984                           ; Switch size 1, requested type "simple"
  2985                           ; Number of cases is 3, Range of values is 0 to 2
  2986                           ; switch strategies available:
  2987                           ; Name         Instructions Cycles
  2988                           ; simple_byte           10     6 (average)
  2989                           ;	Chosen strategy is simple_byte
  2990  0009F6  5182               	movf	??_interrupt_INTx_enable& (0+255),w,b
  2991  0009F8  0A00               	xorlw	0	; case 0
  2992  0009FA  B4D8               	btfsc	status,2,c
  2993  0009FC  EFE2  F004         	goto	l438
  2994  000A00  0A01               	xorlw	1	; case 1
  2995  000A02  B4D8               	btfsc	status,2,c
  2996  000A04  EFE5  F004         	goto	l440
  2997  000A08  0A03               	xorlw	3	; case 2
  2998  000A0A  B4D8               	btfsc	status,2,c
  2999  000A0C  EFE8  F004         	goto	l441
  3000  000A10  EFB9  F004         	goto	l3190
  3001  000A14                     l3206:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;MCAL/Interrupts/mcal_external_interrupt.c: 563:     return ret_value ;
  3005  000A14  5184               	movf	interrupt_INTx_enable@ret_value& (0+255),w,b
  3006  000A16                     
  3007                           ; BSR set to: 0
  3008  000A16  0012               	return		;funcret
  3009  000A18                     __end_of_interrupt_INTx_enable:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _interrupt_INTx_disable *****************
  3013 ;; Defined at:
  3014 ;;		line 464 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  3017 ;;		 -> INTERUPT1(5), 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  ret_value       1    4[BANK0 ] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        5 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    8
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_Interrupt_INTx_INIT
  3040 ;;		_Interrupt_INTx_DeINIT
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text21
  3045  000A18                     __ptext21:
  3046                           	callstack 0
  3047  000A18                     _interrupt_INTx_disable:
  3048                           	callstack 20
  3049  000A18                     
  3050                           ;MCAL/Interrupts/mcal_external_interrupt.c: 464: static Std_ReturnType interrupt_INTx_di
      +                          sable(const Interrupt_INTx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 465: 
      +                          {;MCAL/Interrupts/mcal_external_interrupt.c: 466:     Std_ReturnType ret_value = (Std_re
      +                          turnType) 0x01 ;
  3051  000A18  0E01               	movlw	1
  3052  000A1A  0100               	movlb	0	; () banked
  3053  000A1C  6F84               	movwf	interrupt_INTx_disable@ret_value& (0+255),b
  3054  000A1E                     
  3055                           ; BSR set to: 0
  3056                           ;MCAL/Interrupts/mcal_external_interrupt.c: 467:     if(((void*)0) == int_obj)
  3057  000A1E  5180               	movf	interrupt_INTx_disable@int_obj& (0+255),w,b
  3058  000A20  1181               	iorwf	(interrupt_INTx_disable@int_obj+1)& (0+255),w,b
  3059  000A22  A4D8               	btfss	status,2,c
  3060  000A24  EF16  F005         	goto	u3011
  3061  000A28  EF18  F005         	goto	u3010
  3062  000A2C                     u3011:
  3063  000A2C  EF1C  F005         	goto	l3004
  3064  000A30                     u3010:
  3065  000A30                     l3002:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;MCAL/Interrupts/mcal_external_interrupt.c: 468:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 469:         ret_value = (Std_returnType) 0x00 ;
  3069  000A30  0E00               	movlw	0
  3070  000A32  6F84               	movwf	interrupt_INTx_disable@ret_value& (0+255),b
  3071                           
  3072                           ;MCAL/Interrupts/mcal_external_interrupt.c: 470:     }
  3073  000A34  EF68  F005         	goto	l3018
  3074  000A38                     l3004:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;MCAL/Interrupts/mcal_external_interrupt.c: 472:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 474:         if( INT_HIGH_PRI == int_obj->priority)
  3078  000A38  EE20 F004          	lfsr	2,4
  3079  000A3C  5180               	movf	interrupt_INTx_disable@int_obj& (0+255),w,b
  3080  000A3E  26D9               	addwf	fsr2l,f,c
  3081  000A40  5181               	movf	(interrupt_INTx_disable@int_obj+1)& (0+255),w,b
  3082  000A42  22DA               	addwfc	fsr2h,f,c
  3083  000A44  04DE               	decf	postinc2,w,c
  3084  000A46  A4D8               	btfss	status,2,c
  3085  000A48  EF28  F005         	goto	u3021
  3086  000A4C  EF2A  F005         	goto	u3020
  3087  000A50                     u3021:
  3088  000A50  EF2D  F005         	goto	l3008
  3089  000A54                     u3020:
  3090  000A54                     
  3091                           ; BSR set to: 0
  3092                           ;MCAL/Interrupts/mcal_external_interrupt.c: 475:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 476:             (INTCONbits.GIEH = 0);
  3093  000A54  9EF2               	bcf	242,7,c	;volatile
  3094                           
  3095                           ;MCAL/Interrupts/mcal_external_interrupt.c: 477:         }
  3096  000A56  EF49  F005         	goto	l3016
  3097  000A5A                     l3008:
  3098                           
  3099                           ; BSR set to: 0
  3100  000A5A  EE20 F004          	lfsr	2,4
  3101  000A5E  5180               	movf	interrupt_INTx_disable@int_obj& (0+255),w,b
  3102  000A60  26D9               	addwf	fsr2l,f,c
  3103  000A62  5181               	movf	(interrupt_INTx_disable@int_obj+1)& (0+255),w,b
  3104  000A64  22DA               	addwfc	fsr2h,f,c
  3105  000A66  50DF               	movf	indf2,w,c
  3106  000A68  A4D8               	btfss	status,2,c
  3107  000A6A  EF39  F005         	goto	u3031
  3108  000A6E  EF3B  F005         	goto	u3030
  3109  000A72                     u3031:
  3110  000A72  EF3E  F005         	goto	l419
  3111  000A76                     u3030:
  3112  000A76                     
  3113                           ; BSR set to: 0
  3114                           ;MCAL/Interrupts/mcal_external_interrupt.c: 479:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 480:             (INTCONbits.GIEL = 0);
  3115  000A76  9CF2               	bcf	242,6,c	;volatile
  3116                           
  3117                           ;MCAL/Interrupts/mcal_external_interrupt.c: 481:         }
  3118  000A78  EF49  F005         	goto	l3016
  3119  000A7C                     l419:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;MCAL/Interrupts/mcal_external_interrupt.c: 489:         switch(int_obj->src)
  3123  000A7C  EF49  F005         	goto	l3016
  3124  000A80                     l423:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;MCAL/Interrupts/mcal_external_interrupt.c: 492:                 (INTCONbits.INT0IE = 0 
      +                          );
  3128  000A80  98F2               	bcf	242,4,c	;volatile
  3129                           
  3130                           ;MCAL/Interrupts/mcal_external_interrupt.c: 493:                 break;
  3131  000A82  EF68  F005         	goto	l3018
  3132  000A86                     l425:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;MCAL/Interrupts/mcal_external_interrupt.c: 496:                 (INTCON3bits.INT1IE = 0
      +                           );
  3136  000A86  96F0               	bcf	240,3,c	;volatile
  3137                           
  3138                           ;MCAL/Interrupts/mcal_external_interrupt.c: 497:                 break;
  3139  000A88  EF68  F005         	goto	l3018
  3140  000A8C                     l426:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;MCAL/Interrupts/mcal_external_interrupt.c: 500:                 (INTCON3bits.INT2IE = 0
      +                          );
  3144  000A8C  98F0               	bcf	240,4,c	;volatile
  3145                           
  3146                           ;MCAL/Interrupts/mcal_external_interrupt.c: 501:                 break;
  3147  000A8E  EF68  F005         	goto	l3018
  3148  000A92                     l3016:
  3149                           
  3150                           ; BSR set to: 0
  3151  000A92  EE20 F003          	lfsr	2,3
  3152  000A96  5180               	movf	interrupt_INTx_disable@int_obj& (0+255),w,b
  3153  000A98  26D9               	addwf	fsr2l,f,c
  3154  000A9A  5181               	movf	(interrupt_INTx_disable@int_obj+1)& (0+255),w,b
  3155  000A9C  22DA               	addwfc	fsr2h,f,c
  3156  000A9E  50DF               	movf	indf2,w,c
  3157  000AA0  6F82               	movwf	??_interrupt_INTx_disable& (0+255),b
  3158  000AA2  6B83               	clrf	(??_interrupt_INTx_disable+1)& (0+255),b
  3159                           
  3160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3161                           ; Switch size 1, requested type "simple"
  3162                           ; Number of cases is 1, Range of values is 0 to 0
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte            4     3 (average)
  3166                           ;	Chosen strategy is simple_byte
  3167  000AA4  5183               	movf	(??_interrupt_INTx_disable+1)& (0+255),w,b
  3168  000AA6  0A00               	xorlw	0	; case 0
  3169  000AA8  B4D8               	btfsc	status,2,c
  3170  000AAA  EF59  F005         	goto	l3640
  3171  000AAE  EF18  F005         	goto	l3002
  3172  000AB2                     l3640:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ; Switch size 1, requested type "simple"
  3176                           ; Number of cases is 3, Range of values is 0 to 2
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte           10     6 (average)
  3180                           ;	Chosen strategy is simple_byte
  3181  000AB2  5182               	movf	??_interrupt_INTx_disable& (0+255),w,b
  3182  000AB4  0A00               	xorlw	0	; case 0
  3183  000AB6  B4D8               	btfsc	status,2,c
  3184  000AB8  EF40  F005         	goto	l423
  3185  000ABC  0A01               	xorlw	1	; case 1
  3186  000ABE  B4D8               	btfsc	status,2,c
  3187  000AC0  EF43  F005         	goto	l425
  3188  000AC4  0A03               	xorlw	3	; case 2
  3189  000AC6  B4D8               	btfsc	status,2,c
  3190  000AC8  EF46  F005         	goto	l426
  3191  000ACC  EF18  F005         	goto	l3002
  3192  000AD0                     l3018:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;MCAL/Interrupts/mcal_external_interrupt.c: 510:     return ret_value ;
  3196  000AD0  5184               	movf	interrupt_INTx_disable@ret_value& (0+255),w,b
  3197  000AD2                     
  3198                           ; BSR set to: 0
  3199  000AD2  0012               	return		;funcret
  3200  000AD4                     __end_of_interrupt_INTx_disable:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _interrupt_INTx_clear_flag *****************
  3204 ;; Defined at:
  3205 ;;		line 566 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  int_obj         2    0[BANK0 ] PTR const struct .
  3208 ;;		 -> INTERUPT1(5), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  ret_value       1    4[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        5 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    8
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_Interrupt_INTx_INIT
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text22
  3235  000C6E                     __ptext22:
  3236                           	callstack 0
  3237  000C6E                     _interrupt_INTx_clear_flag:
  3238                           	callstack 20
  3239  000C6E                     
  3240                           ;MCAL/Interrupts/mcal_external_interrupt.c: 566: static Std_ReturnType interrupt_INTx_cl
      +                          ear_flag(const Interrupt_INTx_st *int_obj);MCAL/Interrupts/mcal_external_interrupt.c: 56
      +                          7: {;MCAL/Interrupts/mcal_external_interrupt.c: 568:     Std_ReturnType ret_value = (Std
      +                          _returnType) 0x01 ;
  3241  000C6E  0E01               	movlw	1
  3242  000C70  0100               	movlb	0	; () banked
  3243  000C72  6F84               	movwf	interrupt_INTx_clear_flag@ret_value& (0+255),b
  3244  000C74                     
  3245                           ; BSR set to: 0
  3246                           ;MCAL/Interrupts/mcal_external_interrupt.c: 569:     if(((void*)0) == int_obj)
  3247  000C74  5180               	movf	interrupt_INTx_clear_flag@int_obj& (0+255),w,b
  3248  000C76  1181               	iorwf	(interrupt_INTx_clear_flag@int_obj+1)& (0+255),w,b
  3249  000C78  A4D8               	btfss	status,2,c
  3250  000C7A  EF41  F006         	goto	u3041
  3251  000C7E  EF43  F006         	goto	u3040
  3252  000C82                     u3041:
  3253  000C82  EF50  F006         	goto	l3038
  3254  000C86                     u3040:
  3255  000C86                     l3032:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;MCAL/Interrupts/mcal_external_interrupt.c: 570:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 571:         ret_value = (Std_returnType) 0x00 ;
  3259  000C86  0E00               	movlw	0
  3260  000C88  6F84               	movwf	interrupt_INTx_clear_flag@ret_value& (0+255),b
  3261                           
  3262                           ;MCAL/Interrupts/mcal_external_interrupt.c: 572:     }
  3263  000C8A  EF6F  F006         	goto	l3040
  3264  000C8E                     l449:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;MCAL/Interrupts/mcal_external_interrupt.c: 578:                 (INTCONbits.INT0IF = 0 
      +                          );
  3268  000C8E  92F2               	bcf	242,1,c	;volatile
  3269                           
  3270                           ;MCAL/Interrupts/mcal_external_interrupt.c: 579:                 break;
  3271  000C90  EF6F  F006         	goto	l3040
  3272  000C94                     l451:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;MCAL/Interrupts/mcal_external_interrupt.c: 582:                 (INTCON3bits.INT1IF = 0
      +                           );
  3276  000C94  90F0               	bcf	240,0,c	;volatile
  3277                           
  3278                           ;MCAL/Interrupts/mcal_external_interrupt.c: 583:                 break;
  3279  000C96  EF6F  F006         	goto	l3040
  3280  000C9A                     l452:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;MCAL/Interrupts/mcal_external_interrupt.c: 586:                 (INTCON3bits.INT2IF = 0
      +                          );
  3284  000C9A  92F0               	bcf	240,1,c	;volatile
  3285                           
  3286                           ;MCAL/Interrupts/mcal_external_interrupt.c: 587:                 break;
  3287  000C9C  EF6F  F006         	goto	l3040
  3288  000CA0                     l3038:
  3289                           
  3290                           ; BSR set to: 0
  3291  000CA0  EE20 F003          	lfsr	2,3
  3292  000CA4  5180               	movf	interrupt_INTx_clear_flag@int_obj& (0+255),w,b
  3293  000CA6  26D9               	addwf	fsr2l,f,c
  3294  000CA8  5181               	movf	(interrupt_INTx_clear_flag@int_obj+1)& (0+255),w,b
  3295  000CAA  22DA               	addwfc	fsr2h,f,c
  3296  000CAC  50DF               	movf	indf2,w,c
  3297  000CAE  6F82               	movwf	??_interrupt_INTx_clear_flag& (0+255),b
  3298  000CB0  6B83               	clrf	(??_interrupt_INTx_clear_flag+1)& (0+255),b
  3299                           
  3300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3301                           ; Switch size 1, requested type "simple"
  3302                           ; Number of cases is 1, Range of values is 0 to 0
  3303                           ; switch strategies available:
  3304                           ; Name         Instructions Cycles
  3305                           ; simple_byte            4     3 (average)
  3306                           ;	Chosen strategy is simple_byte
  3307  000CB2  5183               	movf	(??_interrupt_INTx_clear_flag+1)& (0+255),w,b
  3308  000CB4  0A00               	xorlw	0	; case 0
  3309  000CB6  B4D8               	btfsc	status,2,c
  3310  000CB8  EF60  F006         	goto	l3642
  3311  000CBC  EF43  F006         	goto	l3032
  3312  000CC0                     l3642:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ; Switch size 1, requested type "simple"
  3316                           ; Number of cases is 3, Range of values is 0 to 2
  3317                           ; switch strategies available:
  3318                           ; Name         Instructions Cycles
  3319                           ; simple_byte           10     6 (average)
  3320                           ;	Chosen strategy is simple_byte
  3321  000CC0  5182               	movf	??_interrupt_INTx_clear_flag& (0+255),w,b
  3322  000CC2  0A00               	xorlw	0	; case 0
  3323  000CC4  B4D8               	btfsc	status,2,c
  3324  000CC6  EF47  F006         	goto	l449
  3325  000CCA  0A01               	xorlw	1	; case 1
  3326  000CCC  B4D8               	btfsc	status,2,c
  3327  000CCE  EF4A  F006         	goto	l451
  3328  000CD2  0A03               	xorlw	3	; case 2
  3329  000CD4  B4D8               	btfsc	status,2,c
  3330  000CD6  EF4D  F006         	goto	l452
  3331  000CDA  EF43  F006         	goto	l3032
  3332  000CDE                     l3040:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;MCAL/Interrupts/mcal_external_interrupt.c: 595:     return ret_value ;
  3336  000CDE  5184               	movf	interrupt_INTx_clear_flag@ret_value& (0+255),w,b
  3337  000CE0                     
  3338                           ; BSR set to: 0
  3339  000CE0  0012               	return		;funcret
  3340  000CE2                     __end_of_interrupt_INTx_clear_flag:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _GPIO_Pin_Initialize *****************
  3344 ;; Defined at:
  3345 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  _pin_config     2   10[BANK0 ] PTR const struct .
  3348 ;;		 -> PIN2(1), PIN1(1), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  ERRORSTATUS     1   12[BANK0 ] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      unsigned char 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        3 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    9
  3367 ;; This function calls:
  3368 ;;		_GPIO_Pin_Direction_Initialize
  3369 ;;		_GPIO_Pin_Write_Logic
  3370 ;; This function is called by:
  3371 ;;		_application_intialize
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text23
  3376  0010BE                     __ptext23:
  3377                           	callstack 0
  3378  0010BE                     _GPIO_Pin_Initialize:
  3379                           	callstack 20
  3380  0010BE                     
  3381                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  3382  0010BE  0100               	movlb	0	; () banked
  3383  0010C0  518A               	movf	GPIO_Pin_Initialize@_pin_config& (0+255),w,b
  3384  0010C2  118B               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),w,b
  3385  0010C4  A4D8               	btfss	status,2,c
  3386  0010C6  EF67  F008         	goto	u3331
  3387  0010CA  EF69  F008         	goto	u3330
  3388  0010CE                     u3331:
  3389  0010CE  EF6B  F008         	goto	l3316
  3390  0010D2                     u3330:
  3391  0010D2                     
  3392                           ; BSR set to: 0
  3393                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  3394  0010D2  EF83  F008         	goto	l84
  3395  0010D6                     l3316:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  3399  0010D6  C08A  F080         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  3400  0010DA  C08B  F081         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  3401  0010DE  EC55  F001         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  3402  0010E2  0100               	movlb	0	; () banked
  3403  0010E4  6F8C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  3404                           
  3405                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  3406  0010E6  C08A  F080         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  3407  0010EA  C08B  F081         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  3408  0010EE  C08A  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  3409  0010F2  C08B  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  3410  0010F6  0E00               	movlw	0
  3411  0010F8  BEDF               	btfsc	indf2,7,c
  3412  0010FA  0E01               	movlw	1
  3413  0010FC  6F82               	movwf	GPIO_Pin_Write_Logic@logic& (0+255),b
  3414  0010FE  EC8F  F002         	call	_GPIO_Pin_Write_Logic	;wreg free
  3415  001102  0100               	movlb	0	; () banked
  3416  001104  6F8C               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  3417  001106                     l84:
  3418                           
  3419                           ; BSR set to: 0
  3420  001106  0012               	return		;funcret
  3421  001108                     __end_of_GPIO_Pin_Initialize:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _GPIO_Pin_Write_Logic *****************
  3425 ;; Defined at:
  3426 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  _pin_config     2    0[BANK0 ] PTR const struct .
  3429 ;;		 -> PIN2(1), PIN1(1), 
  3430 ;;  logic           1    2[BANK0 ] enum E2959
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  ERRORSTATUS     1    9[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      unsigned char 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:       10 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    8
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_GPIO_Pin_Initialize
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text24
  3457  00051E                     __ptext24:
  3458                           	callstack 0
  3459  00051E                     _GPIO_Pin_Write_Logic:
  3460                           	callstack 20
  3461  00051E                     
  3462                           ;MCAL/GPIO/hal_gpio.c: 82: Std_returnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config,logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       St
      +                          d_returnType ERRORSTATUS =(Std_returnType) 0x01;
  3463  00051E  0E01               	movlw	1
  3464  000520  0100               	movlb	0	; () banked
  3465  000522  6F89               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS& (0+255),b
  3466  000524                     
  3467                           ; BSR set to: 0
  3468                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  3469  000524  5180               	movf	GPIO_Pin_Write_Logic@_pin_config& (0+255),w,b
  3470  000526  1181               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)& (0+255),w,b
  3471  000528  B4D8               	btfsc	status,2,c
  3472  00052A  EF99  F002         	goto	u2971
  3473  00052E  EF9B  F002         	goto	u2970
  3474  000532                     u2971:
  3475  000532  EFAA  F002         	goto	l2980
  3476  000536                     u2970:
  3477  000536                     
  3478                           ; BSR set to: 0
  3479  000536  C080  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  3480  00053A  C081  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  3481  00053E  50DF               	movf	223,w,c
  3482  000540  0B07               	andlw	7
  3483  000542  6F83               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  3484  000544  0E07               	movlw	7
  3485  000546  6583               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
  3486  000548  EFA8  F002         	goto	u2981
  3487  00054C  EFAA  F002         	goto	u2980
  3488  000550                     u2981:
  3489  000550  EF0F  F003         	goto	l2988
  3490  000554                     u2980:
  3491  000554                     l2980:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS=(Std_retu
      +                          rnType) 0x00;
  3495  000554  0E00               	movlw	0
  3496  000556  6F89               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS& (0+255),b
  3497                           
  3498                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  3499  000558  EF24  F003         	goto	l2990
  3500  00055C                     l2982:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  3504  00055C  C080  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  3505  000560  C081  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  3506  000564  50DF               	movf	223,w,c
  3507  000566  0B07               	andlw	7
  3508  000568  6F83               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  3509  00056A  0E01               	movlw	1
  3510  00056C  6F84               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  3511  00056E  2B83               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
  3512  000570  EFBC  F002         	goto	u2994
  3513  000574                     u2995:
  3514  000574  90D8               	bcf	status,0,c
  3515  000576  3784               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
  3516  000578                     u2994:
  3517  000578  2F83               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
  3518  00057A  EFBA  F002         	goto	u2995
  3519  00057E  0100               	movlb	0	; () banked
  3520  000580  5184               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  3521  000582  0AFF               	xorlw	255
  3522  000584  6F85               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
  3523  000586  C080  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  3524  00058A  C081  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  3525  00058E  30DF               	rrcf	223,w,c
  3526  000590  32E8               	rrcf	wreg,f,c
  3527  000592  32E8               	rrcf	wreg,f,c
  3528  000594  0B07               	andlw	7
  3529  000596  6F86               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
  3530  000598  5186               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
  3531  00059A  0D02               	mullw	2
  3532  00059C  0E0B               	movlw	low _lat_registers
  3533  00059E  24F3               	addwf	243,w,c
  3534  0005A0  6ED9               	movwf	fsr2l,c
  3535  0005A2  0E00               	movlw	high _lat_registers
  3536  0005A4  20F4               	addwfc	prodh,w,c
  3537  0005A6  6EDA               	movwf	fsr2h,c
  3538  0005A8  CFDE F087          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  3539  0005AC  CFDD F088          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  3540  0005B0  C087  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  3541  0005B4  C088  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  3542  0005B8  5185               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
  3543  0005BA  16DF               	andwf	indf2,f,c
  3544                           
  3545                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  3546  0005BC  EF24  F003         	goto	l2990
  3547  0005C0                     l2984:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  3551  0005C0  C080  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  3552  0005C4  C081  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  3553  0005C8  50DF               	movf	223,w,c
  3554  0005CA  0B07               	andlw	7
  3555  0005CC  6F83               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  3556  0005CE  0E01               	movlw	1
  3557  0005D0  6F84               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  3558  0005D2  2B83               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
  3559  0005D4  EFEE  F002         	goto	u3004
  3560  0005D8                     u3005:
  3561  0005D8  90D8               	bcf	status,0,c
  3562  0005DA  3784               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
  3563  0005DC                     u3004:
  3564  0005DC  2F83               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
  3565  0005DE  EFEC  F002         	goto	u3005
  3566  0005E2  C080  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  3567  0005E6  C081  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  3568  0005EA  0100               	movlb	0	; () banked
  3569  0005EC  30DF               	rrcf	223,w,c
  3570  0005EE  32E8               	rrcf	wreg,f,c
  3571  0005F0  32E8               	rrcf	wreg,f,c
  3572  0005F2  0B07               	andlw	7
  3573  0005F4  6F85               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
  3574  0005F6  5185               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
  3575  0005F8  0D02               	mullw	2
  3576  0005FA  0E0B               	movlw	low _lat_registers
  3577  0005FC  24F3               	addwf	243,w,c
  3578  0005FE  6ED9               	movwf	fsr2l,c
  3579  000600  0E00               	movlw	high _lat_registers
  3580  000602  20F4               	addwfc	prodh,w,c
  3581  000604  6EDA               	movwf	fsr2h,c
  3582  000606  CFDE F086          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  3583  00060A  CFDD F087          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  3584  00060E  C086  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  3585  000612  C087  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  3586  000616  5184               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  3587  000618  12DF               	iorwf	indf2,f,c
  3588                           
  3589                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  3590  00061A  EF24  F003         	goto	l2990
  3591  00061E                     l2988:
  3592                           
  3593                           ; BSR set to: 0
  3594  00061E  5182               	movf	GPIO_Pin_Write_Logic@logic& (0+255),w,b
  3595  000620  6F83               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  3596  000622  6B84               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  3597                           
  3598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3599                           ; Switch size 1, requested type "simple"
  3600                           ; Number of cases is 1, Range of values is 0 to 0
  3601                           ; switch strategies available:
  3602                           ; Name         Instructions Cycles
  3603                           ; simple_byte            4     3 (average)
  3604                           ;	Chosen strategy is simple_byte
  3605  000624  5184               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  3606  000626  0A00               	xorlw	0	; case 0
  3607  000628  B4D8               	btfsc	status,2,c
  3608  00062A  EF19  F003         	goto	l3644
  3609  00062E  EFAA  F002         	goto	l2980
  3610  000632                     l3644:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ; Switch size 1, requested type "simple"
  3614                           ; Number of cases is 2, Range of values is 0 to 1
  3615                           ; switch strategies available:
  3616                           ; Name         Instructions Cycles
  3617                           ; simple_byte            7     4 (average)
  3618                           ;	Chosen strategy is simple_byte
  3619  000632  5183               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
  3620  000634  0A00               	xorlw	0	; case 0
  3621  000636  B4D8               	btfsc	status,2,c
  3622  000638  EFAE  F002         	goto	l2982
  3623  00063C  0A01               	xorlw	1	; case 1
  3624  00063E  B4D8               	btfsc	status,2,c
  3625  000640  EFE0  F002         	goto	l2984
  3626  000644  EFAA  F002         	goto	l2980
  3627  000648                     l2990:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  3631  000648  5189               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS& (0+255),w,b
  3632  00064A                     
  3633                           ; BSR set to: 0
  3634  00064A  0012               	return		;funcret
  3635  00064C                     __end_of_GPIO_Pin_Write_Logic:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  3639 ;; Defined at:
  3640 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  _pin_config     2    0[BANK0 ] PTR const struct .
  3643 ;;		 -> PIN2(1), PIN1(1), INTERUPT_oncahnge(6), 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  ERRORSTATUS     1    8[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      unsigned char 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;Total ram usage:        9 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    8
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_GPIO_Pin_Initialize
  3666 ;;		_interrupt_RBx_pin_init
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text25
  3671  0002AA                     __ptext25:
  3672                           	callstack 0
  3673  0002AA                     _GPIO_Pin_Direction_Initialize:
  3674                           	callstack 19
  3675  0002AA                     
  3676                           ;MCAL/GPIO/hal_gpio.c: 25: Std_returnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_return
      +                          Type ERRORSTATUS =(Std_returnType) 0x01;
  3677  0002AA  0E01               	movlw	1
  3678  0002AC  0100               	movlb	0	; () banked
  3679  0002AE  6F88               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),b
  3680  0002B0                     
  3681                           ; BSR set to: 0
  3682                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  3683  0002B0  5180               	movf	GPIO_Pin_Direction_Initialize@_pin_config& (0+255),w,b
  3684  0002B2  1181               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)& (0+255),w,b
  3685  0002B4  B4D8               	btfsc	status,2,c
  3686  0002B6  EF5F  F001         	goto	u2801
  3687  0002BA  EF61  F001         	goto	u2800
  3688  0002BE                     u2801:
  3689  0002BE  EF70  F001         	goto	l2864
  3690  0002C2                     u2800:
  3691  0002C2                     
  3692                           ; BSR set to: 0
  3693  0002C2  C080  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  3694  0002C6  C081  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  3695  0002CA  50DF               	movf	223,w,c
  3696  0002CC  0B07               	andlw	7
  3697  0002CE  6F82               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  3698  0002D0  0E07               	movlw	7
  3699  0002D2  6582               	cpfsgt	??_GPIO_Pin_Direction_Initialize& (0+255),b
  3700  0002D4  EF6E  F001         	goto	u2811
  3701  0002D8  EF70  F001         	goto	u2810
  3702  0002DC                     u2811:
  3703  0002DC  EFD5  F001         	goto	l2872
  3704  0002E0                     u2810:
  3705  0002E0                     l2864:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS=(Std_retu
      +                          rnType) 0x00;
  3709  0002E0  0E00               	movlw	0
  3710  0002E2  6F88               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),b
  3711                           
  3712                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  3713  0002E4  EFF6  F001         	goto	l2874
  3714  0002E8                     l2866:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  3718  0002E8  C080  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  3719  0002EC  C081  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  3720  0002F0  50DF               	movf	223,w,c
  3721  0002F2  0B07               	andlw	7
  3722  0002F4  6F82               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  3723  0002F6  0E01               	movlw	1
  3724  0002F8  6F83               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  3725  0002FA  2B82               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  3726  0002FC  EF82  F001         	goto	u2824
  3727  000300                     u2825:
  3728  000300  90D8               	bcf	status,0,c
  3729  000302  3783               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  3730  000304                     u2824:
  3731  000304  2F82               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  3732  000306  EF80  F001         	goto	u2825
  3733  00030A  0100               	movlb	0	; () banked
  3734  00030C  5183               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  3735  00030E  0AFF               	xorlw	255
  3736  000310  6F84               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  3737  000312  C080  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  3738  000316  C081  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  3739  00031A  30DF               	rrcf	223,w,c
  3740  00031C  32E8               	rrcf	wreg,f,c
  3741  00031E  32E8               	rrcf	wreg,f,c
  3742  000320  0B07               	andlw	7
  3743  000322  6F85               	movwf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),b
  3744  000324  5185               	movf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),w,b
  3745  000326  0D02               	mullw	2
  3746  000328  0E15               	movlw	low _tris_registers
  3747  00032A  24F3               	addwf	243,w,c
  3748  00032C  6ED9               	movwf	fsr2l,c
  3749  00032E  0E00               	movlw	high _tris_registers
  3750  000330  20F4               	addwfc	prodh,w,c
  3751  000332  6EDA               	movwf	fsr2h,c
  3752  000334  CFDE F086          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  3753  000338  CFDD F087          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  3754  00033C  C086  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  3755  000340  C087  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  3756  000344  5184               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  3757  000346  16DF               	andwf	indf2,f,c
  3758                           
  3759                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  3760  000348  EFF6  F001         	goto	l2874
  3761  00034C                     l2868:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  3765  00034C  C080  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  3766  000350  C081  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  3767  000354  50DF               	movf	223,w,c
  3768  000356  0B07               	andlw	7
  3769  000358  6F82               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  3770  00035A  0E01               	movlw	1
  3771  00035C  6F83               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  3772  00035E  2B82               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  3773  000360  EFB4  F001         	goto	u2834
  3774  000364                     u2835:
  3775  000364  90D8               	bcf	status,0,c
  3776  000366  3783               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  3777  000368                     u2834:
  3778  000368  2F82               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  3779  00036A  EFB2  F001         	goto	u2835
  3780  00036E  C080  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  3781  000372  C081  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  3782  000376  0100               	movlb	0	; () banked
  3783  000378  30DF               	rrcf	223,w,c
  3784  00037A  32E8               	rrcf	wreg,f,c
  3785  00037C  32E8               	rrcf	wreg,f,c
  3786  00037E  0B07               	andlw	7
  3787  000380  6F84               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  3788  000382  5184               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  3789  000384  0D02               	mullw	2
  3790  000386  0E15               	movlw	low _tris_registers
  3791  000388  24F3               	addwf	243,w,c
  3792  00038A  6ED9               	movwf	fsr2l,c
  3793  00038C  0E00               	movlw	high _tris_registers
  3794  00038E  20F4               	addwfc	prodh,w,c
  3795  000390  6EDA               	movwf	fsr2h,c
  3796  000392  CFDE F085          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  3797  000396  CFDD F086          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  3798  00039A  C085  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  3799  00039E  C086  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  3800  0003A2  5183               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  3801  0003A4  12DF               	iorwf	indf2,f,c
  3802                           
  3803                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  3804  0003A6  EFF6  F001         	goto	l2874
  3805  0003AA                     l2872:
  3806                           
  3807                           ; BSR set to: 0
  3808  0003AA  C080  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  3809  0003AE  C081  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  3810  0003B2  BCDF               	btfsc	indf2,6,c
  3811  0003B4  EFDE  F001         	goto	u2841
  3812  0003B8  EFE1  F001         	goto	u2840
  3813  0003BC                     u2841:
  3814  0003BC  0E01               	movlw	1
  3815  0003BE  EFE2  F001         	goto	u2850
  3816  0003C2                     u2840:
  3817  0003C2  0E00               	movlw	0
  3818  0003C4                     u2850:
  3819  0003C4  6F82               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  3820  0003C6  6B83               	clrf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  3821                           
  3822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3823                           ; Switch size 1, requested type "simple"
  3824                           ; Number of cases is 1, Range of values is 0 to 0
  3825                           ; switch strategies available:
  3826                           ; Name         Instructions Cycles
  3827                           ; simple_byte            4     3 (average)
  3828                           ;	Chosen strategy is simple_byte
  3829  0003C8  5183               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  3830  0003CA  0A00               	xorlw	0	; case 0
  3831  0003CC  B4D8               	btfsc	status,2,c
  3832  0003CE  EFEB  F001         	goto	l3646
  3833  0003D2  EF70  F001         	goto	l2864
  3834  0003D6                     l3646:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ; Switch size 1, requested type "simple"
  3838                           ; Number of cases is 2, Range of values is 0 to 1
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            7     4 (average)
  3842                           ;	Chosen strategy is simple_byte
  3843  0003D6  5182               	movf	??_GPIO_Pin_Direction_Initialize& (0+255),w,b
  3844  0003D8  0A00               	xorlw	0	; case 0
  3845  0003DA  B4D8               	btfsc	status,2,c
  3846  0003DC  EF74  F001         	goto	l2866
  3847  0003E0  0A01               	xorlw	1	; case 1
  3848  0003E2  B4D8               	btfsc	status,2,c
  3849  0003E4  EFA6  F001         	goto	l2868
  3850  0003E8  EF70  F001         	goto	l2864
  3851  0003EC                     l2874:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  3855  0003EC  5188               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS& (0+255),w,b
  3856  0003EE                     
  3857                           ; BSR set to: 0
  3858  0003EE  0012               	return		;funcret
  3859  0003F0                     __end_of_GPIO_Pin_Direction_Initialize:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _InterruptManagerLow *****************
  3863 ;; Defined at:
  3864 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        9 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    7
  3885 ;; This function calls:
  3886 ;;		_INT1_ISR
  3887 ;;		_RB4_ISR
  3888 ;;		_RB5_ISR
  3889 ;;		_RB6_ISR
  3890 ;;		_RB7_ISR
  3891 ;; This function is called by:
  3892 ;;		Interrupt level 1
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	intcodelo
  3897  000018                     __pintcodelo:
  3898                           	callstack 0
  3899  000018                     _InterruptManagerLow:
  3900                           	callstack 19
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;incstack = 0
  3904  000018  8063               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3905  00001A  CFD8 F044          	movff	status,??_InterruptManagerLow
  3906  00001E  CFE8 F045          	movff	wreg,??_InterruptManagerLow+1
  3907  000022  CFE0 F046          	movff	bsr,??_InterruptManagerLow+2
  3908  000026  CFFA F047          	movff	pclath,??_InterruptManagerLow+3
  3909  00002A  CFFB F048          	movff	pclatu,??_InterruptManagerLow+4
  3910  00002E  CFD9 F049          	movff	fsr2l,??_InterruptManagerLow+5
  3911  000032  CFDA F04A          	movff	fsr2h,??_InterruptManagerLow+6
  3912  000036  CFF3 F04B          	movff	prodl,??_InterruptManagerLow+7
  3913  00003A  CFF4 F04C          	movff	prodh,??_InterruptManagerLow+8
  3914  00003E                     
  3915                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  3916  00003E  A6F0               	btfss	240,3,c	;volatile
  3917  000040  EF24  F000         	goto	i1u242_21
  3918  000044  EF26  F000         	goto	i1u242_20
  3919  000048                     i1u242_21:
  3920  000048  EF2F  F000         	goto	i1l213
  3921  00004C                     i1u242_20:
  3922  00004C  A0F0               	btfss	240,0,c	;volatile
  3923  00004E  EF2B  F000         	goto	i1u243_21
  3924  000052  EF2D  F000         	goto	i1u243_20
  3925  000056                     i1u243_21:
  3926  000056  EF2F  F000         	goto	i1l213
  3927  00005A                     i1u243_20:
  3928  00005A                     
  3929                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  3930  00005A  EC65  F009         	call	_INT1_ISR	;wreg free
  3931  00005E                     i1l213:
  3932                           
  3933                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3934  00005E  A6F2               	btfss	242,3,c	;volatile
  3935  000060  EF34  F000         	goto	i1u244_21
  3936  000064  EF36  F000         	goto	i1u244_20
  3937  000068                     i1u244_21:
  3938  000068  EF4F  F000         	goto	i1l215
  3939  00006C                     i1u244_20:
  3940  00006C  A0F2               	btfss	242,0,c	;volatile
  3941  00006E  EF3B  F000         	goto	i1u245_21
  3942  000072  EF3D  F000         	goto	i1u245_20
  3943  000076                     i1u245_21:
  3944  000076  EF4F  F000         	goto	i1l215
  3945  00007A                     i1u245_20:
  3946  00007A  A881               	btfss	129,4,c	;volatile
  3947  00007C  EF42  F000         	goto	i1u246_21
  3948  000080  EF44  F000         	goto	i1u246_20
  3949  000084                     i1u246_21:
  3950  000084  EF4F  F000         	goto	i1l215
  3951  000088                     i1u246_20:
  3952  000088  A01F               	btfss	_flags^0,0,c	;volatile
  3953  00008A  EF49  F000         	goto	i1u247_21
  3954  00008E  EF4B  F000         	goto	i1u247_20
  3955  000092                     i1u247_21:
  3956  000092  EF4F  F000         	goto	i1l215
  3957  000096                     i1u247_20:
  3958  000096                     
  3959                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  3960  000096  901F               	bcf	_flags^0,0,c	;volatile
  3961  000098                     
  3962                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  3963  000098  0E01               	movlw	1
  3964  00009A  EC34  F008         	call	_RB4_ISR
  3965  00009E                     i1l215:
  3966                           
  3967                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  3968  00009E  A6F2               	btfss	242,3,c	;volatile
  3969  0000A0  EF54  F000         	goto	i1u248_21
  3970  0000A4  EF56  F000         	goto	i1u248_20
  3971  0000A8                     i1u248_21:
  3972  0000A8  EF6F  F000         	goto	i1l217
  3973  0000AC                     i1u248_20:
  3974  0000AC  A0F2               	btfss	242,0,c	;volatile
  3975  0000AE  EF5B  F000         	goto	i1u249_21
  3976  0000B2  EF5D  F000         	goto	i1u249_20
  3977  0000B6                     i1u249_21:
  3978  0000B6  EF6F  F000         	goto	i1l217
  3979  0000BA                     i1u249_20:
  3980  0000BA  B881               	btfsc	129,4,c	;volatile
  3981  0000BC  EF62  F000         	goto	i1u250_21
  3982  0000C0  EF64  F000         	goto	i1u250_20
  3983  0000C4                     i1u250_21:
  3984  0000C4  EF6F  F000         	goto	i1l217
  3985  0000C8                     i1u250_20:
  3986  0000C8  B01F               	btfsc	_flags^0,0,c	;volatile
  3987  0000CA  EF69  F000         	goto	i1u251_21
  3988  0000CE  EF6B  F000         	goto	i1u251_20
  3989  0000D2                     i1u251_21:
  3990  0000D2  EF6F  F000         	goto	i1l217
  3991  0000D6                     i1u251_20:
  3992  0000D6                     
  3993                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  3994  0000D6  801F               	bsf	_flags^0,0,c	;volatile
  3995  0000D8                     
  3996                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  3997  0000D8  0E00               	movlw	0
  3998  0000DA  EC34  F008         	call	_RB4_ISR
  3999  0000DE                     i1l217:
  4000                           
  4001                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  4002  0000DE  A6F2               	btfss	242,3,c	;volatile
  4003  0000E0  EF74  F000         	goto	i1u252_21
  4004  0000E4  EF76  F000         	goto	i1u252_20
  4005  0000E8                     i1u252_21:
  4006  0000E8  EF8F  F000         	goto	i1l219
  4007  0000EC                     i1u252_20:
  4008  0000EC  A0F2               	btfss	242,0,c	;volatile
  4009  0000EE  EF7B  F000         	goto	i1u253_21
  4010  0000F2  EF7D  F000         	goto	i1u253_20
  4011  0000F6                     i1u253_21:
  4012  0000F6  EF8F  F000         	goto	i1l219
  4013  0000FA                     i1u253_20:
  4014  0000FA  AA81               	btfss	129,5,c	;volatile
  4015  0000FC  EF82  F000         	goto	i1u254_21
  4016  000100  EF84  F000         	goto	i1u254_20
  4017  000104                     i1u254_21:
  4018  000104  EF8F  F000         	goto	i1l219
  4019  000108                     i1u254_20:
  4020  000108  A21F               	btfss	_flags^0,1,c	;volatile
  4021  00010A  EF89  F000         	goto	i1u255_21
  4022  00010E  EF8B  F000         	goto	i1u255_20
  4023  000112                     i1u255_21:
  4024  000112  EF8F  F000         	goto	i1l219
  4025  000116                     i1u255_20:
  4026  000116                     
  4027                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  4028  000116  921F               	bcf	_flags^0,1,c	;volatile
  4029  000118                     
  4030                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  4031  000118  0E01               	movlw	1
  4032  00011A  EC09  F008         	call	_RB5_ISR
  4033  00011E                     i1l219:
  4034                           
  4035                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  4036  00011E  A6F2               	btfss	242,3,c	;volatile
  4037  000120  EF94  F000         	goto	i1u256_21
  4038  000124  EF96  F000         	goto	i1u256_20
  4039  000128                     i1u256_21:
  4040  000128  EFAF  F000         	goto	i1l221
  4041  00012C                     i1u256_20:
  4042  00012C  A0F2               	btfss	242,0,c	;volatile
  4043  00012E  EF9B  F000         	goto	i1u257_21
  4044  000132  EF9D  F000         	goto	i1u257_20
  4045  000136                     i1u257_21:
  4046  000136  EFAF  F000         	goto	i1l221
  4047  00013A                     i1u257_20:
  4048  00013A  BA81               	btfsc	129,5,c	;volatile
  4049  00013C  EFA2  F000         	goto	i1u258_21
  4050  000140  EFA4  F000         	goto	i1u258_20
  4051  000144                     i1u258_21:
  4052  000144  EFAF  F000         	goto	i1l221
  4053  000148                     i1u258_20:
  4054  000148  B21F               	btfsc	_flags^0,1,c	;volatile
  4055  00014A  EFA9  F000         	goto	i1u259_21
  4056  00014E  EFAB  F000         	goto	i1u259_20
  4057  000152                     i1u259_21:
  4058  000152  EFAF  F000         	goto	i1l221
  4059  000156                     i1u259_20:
  4060  000156                     
  4061                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  4062  000156  821F               	bsf	_flags^0,1,c	;volatile
  4063  000158                     
  4064                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  4065  000158  0E00               	movlw	0
  4066  00015A  EC09  F008         	call	_RB5_ISR
  4067  00015E                     i1l221:
  4068                           
  4069                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  4070  00015E  A6F2               	btfss	242,3,c	;volatile
  4071  000160  EFB4  F000         	goto	i1u260_21
  4072  000164  EFB6  F000         	goto	i1u260_20
  4073  000168                     i1u260_21:
  4074  000168  EFCF  F000         	goto	i1l223
  4075  00016C                     i1u260_20:
  4076  00016C  A0F2               	btfss	242,0,c	;volatile
  4077  00016E  EFBB  F000         	goto	i1u261_21
  4078  000172  EFBD  F000         	goto	i1u261_20
  4079  000176                     i1u261_21:
  4080  000176  EFCF  F000         	goto	i1l223
  4081  00017A                     i1u261_20:
  4082  00017A  AC81               	btfss	129,6,c	;volatile
  4083  00017C  EFC2  F000         	goto	i1u262_21
  4084  000180  EFC4  F000         	goto	i1u262_20
  4085  000184                     i1u262_21:
  4086  000184  EFCF  F000         	goto	i1l223
  4087  000188                     i1u262_20:
  4088  000188  A41F               	btfss	_flags^0,2,c	;volatile
  4089  00018A  EFC9  F000         	goto	i1u263_21
  4090  00018E  EFCB  F000         	goto	i1u263_20
  4091  000192                     i1u263_21:
  4092  000192  EFCF  F000         	goto	i1l223
  4093  000196                     i1u263_20:
  4094  000196                     
  4095                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  4096  000196  941F               	bcf	_flags^0,2,c	;volatile
  4097  000198                     
  4098                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  4099  000198  0E01               	movlw	1
  4100  00019A  ECDE  F007         	call	_RB6_ISR
  4101  00019E                     i1l223:
  4102                           
  4103                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  4104  00019E  A6F2               	btfss	242,3,c	;volatile
  4105  0001A0  EFD4  F000         	goto	i1u264_21
  4106  0001A4  EFD6  F000         	goto	i1u264_20
  4107  0001A8                     i1u264_21:
  4108  0001A8  EFEF  F000         	goto	i1l225
  4109  0001AC                     i1u264_20:
  4110  0001AC  A0F2               	btfss	242,0,c	;volatile
  4111  0001AE  EFDB  F000         	goto	i1u265_21
  4112  0001B2  EFDD  F000         	goto	i1u265_20
  4113  0001B6                     i1u265_21:
  4114  0001B6  EFEF  F000         	goto	i1l225
  4115  0001BA                     i1u265_20:
  4116  0001BA  BC81               	btfsc	129,6,c	;volatile
  4117  0001BC  EFE2  F000         	goto	i1u266_21
  4118  0001C0  EFE4  F000         	goto	i1u266_20
  4119  0001C4                     i1u266_21:
  4120  0001C4  EFEF  F000         	goto	i1l225
  4121  0001C8                     i1u266_20:
  4122  0001C8  B41F               	btfsc	_flags^0,2,c	;volatile
  4123  0001CA  EFE9  F000         	goto	i1u267_21
  4124  0001CE  EFEB  F000         	goto	i1u267_20
  4125  0001D2                     i1u267_21:
  4126  0001D2  EFEF  F000         	goto	i1l225
  4127  0001D6                     i1u267_20:
  4128  0001D6                     
  4129                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  4130  0001D6  841F               	bsf	_flags^0,2,c	;volatile
  4131  0001D8                     
  4132                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  4133  0001D8  0E00               	movlw	0
  4134  0001DA  ECDE  F007         	call	_RB6_ISR
  4135  0001DE                     i1l225:
  4136                           
  4137                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  4138  0001DE  A6F2               	btfss	242,3,c	;volatile
  4139  0001E0  EFF4  F000         	goto	i1u268_21
  4140  0001E4  EFF6  F000         	goto	i1u268_20
  4141  0001E8                     i1u268_21:
  4142  0001E8  EF0F  F001         	goto	i1l227
  4143  0001EC                     i1u268_20:
  4144  0001EC  A0F2               	btfss	242,0,c	;volatile
  4145  0001EE  EFFB  F000         	goto	i1u269_21
  4146  0001F2  EFFD  F000         	goto	i1u269_20
  4147  0001F6                     i1u269_21:
  4148  0001F6  EF0F  F001         	goto	i1l227
  4149  0001FA                     i1u269_20:
  4150  0001FA  AE81               	btfss	129,7,c	;volatile
  4151  0001FC  EF02  F001         	goto	i1u270_21
  4152  000200  EF04  F001         	goto	i1u270_20
  4153  000204                     i1u270_21:
  4154  000204  EF0F  F001         	goto	i1l227
  4155  000208                     i1u270_20:
  4156  000208  A61F               	btfss	_flags^0,3,c	;volatile
  4157  00020A  EF09  F001         	goto	i1u271_21
  4158  00020E  EF0B  F001         	goto	i1u271_20
  4159  000212                     i1u271_21:
  4160  000212  EF0F  F001         	goto	i1l227
  4161  000216                     i1u271_20:
  4162  000216                     
  4163                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  4164  000216  961F               	bcf	_flags^0,3,c	;volatile
  4165  000218                     
  4166                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  4167  000218  0E01               	movlw	1
  4168  00021A  ECB3  F007         	call	_RB7_ISR
  4169  00021E                     i1l227:
  4170                           
  4171                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  4172  00021E  A6F2               	btfss	242,3,c	;volatile
  4173  000220  EF14  F001         	goto	i1u272_21
  4174  000224  EF16  F001         	goto	i1u272_20
  4175  000228                     i1u272_21:
  4176  000228  EF2F  F001         	goto	i1l229
  4177  00022C                     i1u272_20:
  4178  00022C  A0F2               	btfss	242,0,c	;volatile
  4179  00022E  EF1B  F001         	goto	i1u273_21
  4180  000232  EF1D  F001         	goto	i1u273_20
  4181  000236                     i1u273_21:
  4182  000236  EF2F  F001         	goto	i1l229
  4183  00023A                     i1u273_20:
  4184  00023A  BE81               	btfsc	129,7,c	;volatile
  4185  00023C  EF22  F001         	goto	i1u274_21
  4186  000240  EF24  F001         	goto	i1u274_20
  4187  000244                     i1u274_21:
  4188  000244  EF2F  F001         	goto	i1l229
  4189  000248                     i1u274_20:
  4190  000248  B61F               	btfsc	_flags^0,3,c	;volatile
  4191  00024A  EF29  F001         	goto	i1u275_21
  4192  00024E  EF2B  F001         	goto	i1u275_20
  4193  000252                     i1u275_21:
  4194  000252  EF2F  F001         	goto	i1l229
  4195  000256                     i1u275_20:
  4196  000256                     
  4197                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  4198  000256  861F               	bsf	_flags^0,3,c	;volatile
  4199  000258                     
  4200                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  4201  000258  0E00               	movlw	0
  4202  00025A  ECB3  F007         	call	_RB7_ISR
  4203  00025E                     i1l229:
  4204                           
  4205                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  4206  00025E  AC9D               	btfss	157,6,c	;volatile
  4207  000260  EF34  F001         	goto	i1u276_21
  4208  000264  EF36  F001         	goto	i1u276_20
  4209  000268                     i1u276_21:
  4210  000268  EF37  F001         	goto	i1l231
  4211  00026C                     i1u276_20:
  4212  00026C  509E               	movf	158,w,c	;volatile
  4213  00026E                     i1l231:
  4214                           
  4215                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  4216  00026E  A09D               	btfss	157,0,c	;volatile
  4217  000270  EF3C  F001         	goto	i1u277_21
  4218  000274  EF3E  F001         	goto	i1u277_20
  4219  000278                     i1u277_21:
  4220  000278  EF3F  F001         	goto	i1l234
  4221  00027C                     i1u277_20:
  4222  00027C  509E               	movf	158,w,c	;volatile
  4223  00027E                     i1l234:
  4224  00027E  C04C  FFF4         	movff	??_InterruptManagerLow+8,prodh
  4225  000282  C04B  FFF3         	movff	??_InterruptManagerLow+7,prodl
  4226  000286  C04A  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  4227  00028A  C049  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  4228  00028E  C048  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  4229  000292  C047  FFFA         	movff	??_InterruptManagerLow+3,pclath
  4230  000296  C046  FFE0         	movff	??_InterruptManagerLow+2,bsr
  4231  00029A  C045  FFE8         	movff	??_InterruptManagerLow+1,wreg
  4232  00029E  C044  FFD8         	movff	??_InterruptManagerLow,status
  4233  0002A2  9063               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4234  0002A4  0010               	retfie	
  4235  0002A6                     __end_of_InterruptManagerLow:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _RB7_ISR *****************
  4239 ;; Defined at:
  4240 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  Handler_Sele    1    wreg     unsigned char 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  Handler_Sele    1   22[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;Total ram usage:        1 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    6
  4261 ;; This function calls:
  4262 ;;		Absolute function
  4263 ;;		_OnChanggeINT_Handler
  4264 ;; This function is called by:
  4265 ;;		_InterruptManagerLow
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text27
  4270  000F66                     __ptext27:
  4271                           	callstack 0
  4272  000F66                     _RB7_ISR:
  4273                           	callstack 19
  4274                           
  4275                           ;incstack = 0
  4276                           ;RB7_ISR@Handler_Select stored from wreg
  4277  000F66  6E43               	movwf	RB7_ISR@Handler_Select^0,c
  4278  000F68                     
  4279                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  4280  000F68  90F2               	bcf	242,0,c	;volatile
  4281  000F6A                     
  4282                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  4283  000F6A  5043               	movf	RB7_ISR@Handler_Select^0,w,c
  4284  000F6C  B4D8               	btfsc	status,2,c
  4285  000F6E  EFBB  F007         	goto	i1u226_21
  4286  000F72  EFBD  F007         	goto	i1u226_20
  4287  000F76                     i1u226_21:
  4288  000F76  EFBF  F007         	goto	i1l2654
  4289  000F7A                     i1u226_20:
  4290  000F7A  EFDD  F007         	goto	i1l340
  4291  000F7E                     i1l2654:
  4292  000F7E  5043               	movf	RB7_ISR@Handler_Select^0,w,c
  4293  000F80  A4D8               	btfss	status,2,c
  4294  000F82  EFC5  F007         	goto	i1u227_21
  4295  000F86  EFC7  F007         	goto	i1u227_20
  4296  000F8A                     i1u227_21:
  4297  000F8A  EFDD  F007         	goto	i1l340
  4298  000F8E                     i1u227_20:
  4299  000F8E                     
  4300                           ;MCAL/Interrupts/mcal_external_interrupt.c: 190:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 191:         if(RB7_InterruptHandler_LOW)
  4301  000F8E  504D               	movf	_RB7_InterruptHandler_LOW^0,w,c
  4302  000F90  104E               	iorwf	(_RB7_InterruptHandler_LOW+1)^0,w,c
  4303  000F92  B4D8               	btfsc	status,2,c
  4304  000F94  EFCE  F007         	goto	i1u228_21
  4305  000F98  EFD0  F007         	goto	i1u228_20
  4306  000F9C                     i1u228_21:
  4307  000F9C  EFDD  F007         	goto	i1l340
  4308  000FA0                     i1u228_20:
  4309  000FA0                     
  4310                           ;MCAL/Interrupts/mcal_external_interrupt.c: 192:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 193:             RB7_InterruptHandler_LOW();
  4311  000FA0  D802               	call	i1u229_28
  4312  000FA2  EFDD  F007         	goto	i1u229_29
  4313  000FA6                     i1u229_28:
  4314  000FA6  0005               	push	
  4315  000FA8  6EFA               	movwf	pclath,c
  4316  000FAA  504D               	movf	_RB7_InterruptHandler_LOW^0,w,c
  4317  000FAC  6EFD               	movwf	tosl,c
  4318  000FAE  504E               	movf	(_RB7_InterruptHandler_LOW+1)^0,w,c
  4319  000FB0  6EFE               	movwf	tosh,c
  4320  000FB2  50F8               	movf	tblptru,w,c
  4321  000FB4  6EFF               	movwf	tosu,c
  4322  000FB6  50FA               	movf	pclath,w,c
  4323  000FB8  0012               	return		;indir
  4324  000FBA                     i1u229_29:
  4325  000FBA                     i1l340:
  4326  000FBA  0012               	return		;funcret
  4327  000FBC                     __end_of_RB7_ISR:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _RB6_ISR *****************
  4331 ;; Defined at:
  4332 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  Handler_Sele    1    wreg     unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  Handler_Sele    1   22[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;Total ram usage:        1 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    6
  4353 ;; This function calls:
  4354 ;;		Absolute function
  4355 ;;		_OnChanggeINT_Handler
  4356 ;; This function is called by:
  4357 ;;		_InterruptManagerLow
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text28
  4362  000FBC                     __ptext28:
  4363                           	callstack 0
  4364  000FBC                     _RB6_ISR:
  4365                           	callstack 19
  4366                           
  4367                           ;incstack = 0
  4368                           ;RB6_ISR@Handler_Select stored from wreg
  4369  000FBC  6E43               	movwf	RB6_ISR@Handler_Select^0,c
  4370  000FBE                     
  4371                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  4372  000FBE  90F2               	bcf	242,0,c	;volatile
  4373  000FC0                     
  4374                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  4375  000FC0  5043               	movf	RB6_ISR@Handler_Select^0,w,c
  4376  000FC2  B4D8               	btfsc	status,2,c
  4377  000FC4  EFE6  F007         	goto	i1u222_21
  4378  000FC8  EFE8  F007         	goto	i1u222_20
  4379  000FCC                     i1u222_21:
  4380  000FCC  EFEA  F007         	goto	i1l2642
  4381  000FD0                     i1u222_20:
  4382  000FD0  EF08  F008         	goto	i1l331
  4383  000FD4                     i1l2642:
  4384  000FD4  5043               	movf	RB6_ISR@Handler_Select^0,w,c
  4385  000FD6  A4D8               	btfss	status,2,c
  4386  000FD8  EFF0  F007         	goto	i1u223_21
  4387  000FDC  EFF2  F007         	goto	i1u223_20
  4388  000FE0                     i1u223_21:
  4389  000FE0  EF08  F008         	goto	i1l331
  4390  000FE4                     i1u223_20:
  4391  000FE4                     
  4392                           ;MCAL/Interrupts/mcal_external_interrupt.c: 165:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 166:         if(RB6_InterruptHandler_LOW)
  4393  000FE4  5051               	movf	_RB6_InterruptHandler_LOW^0,w,c
  4394  000FE6  1052               	iorwf	(_RB6_InterruptHandler_LOW+1)^0,w,c
  4395  000FE8  B4D8               	btfsc	status,2,c
  4396  000FEA  EFF9  F007         	goto	i1u224_21
  4397  000FEE  EFFB  F007         	goto	i1u224_20
  4398  000FF2                     i1u224_21:
  4399  000FF2  EF08  F008         	goto	i1l331
  4400  000FF6                     i1u224_20:
  4401  000FF6                     
  4402                           ;MCAL/Interrupts/mcal_external_interrupt.c: 167:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 168:             RB6_InterruptHandler_LOW();
  4403  000FF6  D802               	call	i1u225_28
  4404  000FF8  EF08  F008         	goto	i1u225_29
  4405  000FFC                     i1u225_28:
  4406  000FFC  0005               	push	
  4407  000FFE  6EFA               	movwf	pclath,c
  4408  001000  5051               	movf	_RB6_InterruptHandler_LOW^0,w,c
  4409  001002  6EFD               	movwf	tosl,c
  4410  001004  5052               	movf	(_RB6_InterruptHandler_LOW+1)^0,w,c
  4411  001006  6EFE               	movwf	tosh,c
  4412  001008  50F8               	movf	tblptru,w,c
  4413  00100A  6EFF               	movwf	tosu,c
  4414  00100C  50FA               	movf	pclath,w,c
  4415  00100E  0012               	return		;indir
  4416  001010                     i1u225_29:
  4417  001010                     i1l331:
  4418  001010  0012               	return		;funcret
  4419  001012                     __end_of_RB6_ISR:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _RB5_ISR *****************
  4423 ;; Defined at:
  4424 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  Handler_Sele    1    wreg     unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  Handler_Sele    1   22[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:        1 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    6
  4445 ;; This function calls:
  4446 ;;		Absolute function
  4447 ;;		_OnChanggeINT_Handler
  4448 ;; This function is called by:
  4449 ;;		_InterruptManagerLow
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text29
  4454  001012                     __ptext29:
  4455                           	callstack 0
  4456  001012                     _RB5_ISR:
  4457                           	callstack 19
  4458                           
  4459                           ;incstack = 0
  4460                           ;RB5_ISR@Handler_Select stored from wreg
  4461  001012  6E43               	movwf	RB5_ISR@Handler_Select^0,c
  4462  001014                     
  4463                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  4464  001014  90F2               	bcf	242,0,c	;volatile
  4465  001016                     
  4466                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  4467  001016  5043               	movf	RB5_ISR@Handler_Select^0,w,c
  4468  001018  B4D8               	btfsc	status,2,c
  4469  00101A  EF11  F008         	goto	i1u218_21
  4470  00101E  EF13  F008         	goto	i1u218_20
  4471  001022                     i1u218_21:
  4472  001022  EF15  F008         	goto	i1l2630
  4473  001026                     i1u218_20:
  4474  001026  EF33  F008         	goto	i1l322
  4475  00102A                     i1l2630:
  4476  00102A  5043               	movf	RB5_ISR@Handler_Select^0,w,c
  4477  00102C  A4D8               	btfss	status,2,c
  4478  00102E  EF1B  F008         	goto	i1u219_21
  4479  001032  EF1D  F008         	goto	i1u219_20
  4480  001036                     i1u219_21:
  4481  001036  EF33  F008         	goto	i1l322
  4482  00103A                     i1u219_20:
  4483  00103A                     
  4484                           ;MCAL/Interrupts/mcal_external_interrupt.c: 140:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 141:         if(RB5_InterruptHandler_LOW)
  4485  00103A  5055               	movf	_RB5_InterruptHandler_LOW^0,w,c
  4486  00103C  1056               	iorwf	(_RB5_InterruptHandler_LOW+1)^0,w,c
  4487  00103E  B4D8               	btfsc	status,2,c
  4488  001040  EF24  F008         	goto	i1u220_21
  4489  001044  EF26  F008         	goto	i1u220_20
  4490  001048                     i1u220_21:
  4491  001048  EF33  F008         	goto	i1l322
  4492  00104C                     i1u220_20:
  4493  00104C                     
  4494                           ;MCAL/Interrupts/mcal_external_interrupt.c: 142:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 143:             RB5_InterruptHandler_LOW();
  4495  00104C  D802               	call	i1u221_28
  4496  00104E  EF33  F008         	goto	i1u221_29
  4497  001052                     i1u221_28:
  4498  001052  0005               	push	
  4499  001054  6EFA               	movwf	pclath,c
  4500  001056  5055               	movf	_RB5_InterruptHandler_LOW^0,w,c
  4501  001058  6EFD               	movwf	tosl,c
  4502  00105A  5056               	movf	(_RB5_InterruptHandler_LOW+1)^0,w,c
  4503  00105C  6EFE               	movwf	tosh,c
  4504  00105E  50F8               	movf	tblptru,w,c
  4505  001060  6EFF               	movwf	tosu,c
  4506  001062  50FA               	movf	pclath,w,c
  4507  001064  0012               	return		;indir
  4508  001066                     i1u221_29:
  4509  001066                     i1l322:
  4510  001066  0012               	return		;funcret
  4511  001068                     __end_of_RB5_ISR:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _RB4_ISR *****************
  4515 ;; Defined at:
  4516 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  Handler_Sele    1    wreg     unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  Handler_Sele    1   22[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        1 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    6
  4537 ;; This function calls:
  4538 ;;		Absolute function
  4539 ;;		_OnChanggeINT_Handler
  4540 ;; This function is called by:
  4541 ;;		_InterruptManagerLow
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text30
  4546  001068                     __ptext30:
  4547                           	callstack 0
  4548  001068                     _RB4_ISR:
  4549                           	callstack 19
  4550                           
  4551                           ;incstack = 0
  4552                           ;RB4_ISR@Handler_Select stored from wreg
  4553  001068  6E43               	movwf	RB4_ISR@Handler_Select^0,c
  4554  00106A                     
  4555                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  4556  00106A  90F2               	bcf	242,0,c	;volatile
  4557  00106C                     
  4558                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  4559  00106C  5043               	movf	RB4_ISR@Handler_Select^0,w,c
  4560  00106E  B4D8               	btfsc	status,2,c
  4561  001070  EF3C  F008         	goto	i1u214_21
  4562  001074  EF3E  F008         	goto	i1u214_20
  4563  001078                     i1u214_21:
  4564  001078  EF40  F008         	goto	i1l2618
  4565  00107C                     i1u214_20:
  4566  00107C  EF5E  F008         	goto	i1l313
  4567  001080                     i1l2618:
  4568  001080  5043               	movf	RB4_ISR@Handler_Select^0,w,c
  4569  001082  A4D8               	btfss	status,2,c
  4570  001084  EF46  F008         	goto	i1u215_21
  4571  001088  EF48  F008         	goto	i1u215_20
  4572  00108C                     i1u215_21:
  4573  00108C  EF5E  F008         	goto	i1l313
  4574  001090                     i1u215_20:
  4575  001090                     
  4576                           ;MCAL/Interrupts/mcal_external_interrupt.c: 116:     {;MCAL/Interrupts/mcal_external_int
      +                          errupt.c: 117:         if(RB4_InterruptHandler_LOW)
  4577  001090  5059               	movf	_RB4_InterruptHandler_LOW^0,w,c
  4578  001092  105A               	iorwf	(_RB4_InterruptHandler_LOW+1)^0,w,c
  4579  001094  B4D8               	btfsc	status,2,c
  4580  001096  EF4F  F008         	goto	i1u216_21
  4581  00109A  EF51  F008         	goto	i1u216_20
  4582  00109E                     i1u216_21:
  4583  00109E  EF5E  F008         	goto	i1l313
  4584  0010A2                     i1u216_20:
  4585  0010A2                     
  4586                           ;MCAL/Interrupts/mcal_external_interrupt.c: 118:         {;MCAL/Interrupts/mcal_external
      +                          _interrupt.c: 119:             RB4_InterruptHandler_LOW();
  4587  0010A2  D802               	call	i1u217_28
  4588  0010A4  EF5E  F008         	goto	i1u217_29
  4589  0010A8                     i1u217_28:
  4590  0010A8  0005               	push	
  4591  0010AA  6EFA               	movwf	pclath,c
  4592  0010AC  5059               	movf	_RB4_InterruptHandler_LOW^0,w,c
  4593  0010AE  6EFD               	movwf	tosl,c
  4594  0010B0  505A               	movf	(_RB4_InterruptHandler_LOW+1)^0,w,c
  4595  0010B2  6EFE               	movwf	tosh,c
  4596  0010B4  50F8               	movf	tblptru,w,c
  4597  0010B6  6EFF               	movwf	tosu,c
  4598  0010B8  50FA               	movf	pclath,w,c
  4599  0010BA  0012               	return		;indir
  4600  0010BC                     i1u217_29:
  4601  0010BC                     i1l313:
  4602  0010BC  0012               	return		;funcret
  4603  0010BE                     __end_of_RB4_ISR:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _OnChanggeINT_Handler *****************
  4607 ;; Defined at:
  4608 ;;		line 61 in file "application.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;Total ram usage:        0 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    5
  4629 ;; This function calls:
  4630 ;;		_GPIO_Pin_Toggle_Logic
  4631 ;; This function is called by:
  4632 ;;		_RB4_ISR
  4633 ;;		_RB5_ISR
  4634 ;;		_RB6_ISR
  4635 ;;		_RB7_ISR
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text31
  4640  001422                     __ptext31:
  4641                           	callstack 0
  4642  001422                     _OnChanggeINT_Handler:
  4643                           	callstack 19
  4644  001422                     
  4645                           ;application.c: 63:    GPIO_Pin_Toggle_Logic(&PIN2);
  4646  001422  0E2B               	movlw	low _PIN2
  4647  001424  6E3B               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  4648  001426  0E00               	movlw	high _PIN2
  4649  001428  6E3C               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  4650  00142A  EC71  F006         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  4651  00142E  0012               	return		;funcret
  4652  001430                     __end_of_OnChanggeINT_Handler:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function _INT1_ISR *****************
  4656 ;; Defined at:
  4657 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    6
  4678 ;; This function calls:
  4679 ;;		Absolute function
  4680 ;;		_INT1_Handler
  4681 ;; This function is called by:
  4682 ;;		_InterruptManagerLow
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text32
  4687  0012CA                     __ptext32:
  4688                           	callstack 0
  4689  0012CA                     _INT1_ISR:
  4690                           	callstack 19
  4691  0012CA                     
  4692                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  4693  0012CA  90F0               	bcf	240,0,c	;volatile
  4694  0012CC                     
  4695                           ;MCAL/Interrupts/mcal_external_interrupt.c: 80:     if(INT1_InterruptHandler)
  4696  0012CC  505F               	movf	_INT1_InterruptHandler^0,w,c
  4697  0012CE  1060               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  4698  0012D0  B4D8               	btfsc	status,2,c
  4699  0012D2  EF6D  F009         	goto	i1u212_21
  4700  0012D6  EF6F  F009         	goto	i1u212_20
  4701  0012DA                     i1u212_21:
  4702  0012DA  EF7C  F009         	goto	i1l300
  4703  0012DE                     i1u212_20:
  4704  0012DE                     
  4705                           ;MCAL/Interrupts/mcal_external_interrupt.c: 81:     {;MCAL/Interrupts/mcal_external_inte
      +                          rrupt.c: 82:         INT1_InterruptHandler();
  4706  0012DE  D802               	call	i1u213_28
  4707  0012E0  EF7C  F009         	goto	i1u213_29
  4708  0012E4                     i1u213_28:
  4709  0012E4  0005               	push	
  4710  0012E6  6EFA               	movwf	pclath,c
  4711  0012E8  505F               	movf	_INT1_InterruptHandler^0,w,c
  4712  0012EA  6EFD               	movwf	tosl,c
  4713  0012EC  5060               	movf	(_INT1_InterruptHandler+1)^0,w,c
  4714  0012EE  6EFE               	movwf	tosh,c
  4715  0012F0  50F8               	movf	tblptru,w,c
  4716  0012F2  6EFF               	movwf	tosu,c
  4717  0012F4  50FA               	movf	pclath,w,c
  4718  0012F6  0012               	return		;indir
  4719  0012F8                     i1u213_29:
  4720  0012F8                     i1l300:
  4721  0012F8  0012               	return		;funcret
  4722  0012FA                     __end_of_INT1_ISR:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _INT1_Handler *****************
  4726 ;; Defined at:
  4727 ;;		line 57 in file "application.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    5
  4748 ;; This function calls:
  4749 ;;		_GPIO_Pin_Toggle_Logic
  4750 ;; This function is called by:
  4751 ;;		_INT0_ISR
  4752 ;;		_INT2_ISR
  4753 ;;		_INT1_ISR
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text33
  4758  00140A                     __ptext33:
  4759                           	callstack 0
  4760  00140A                     _INT1_Handler:
  4761                           	callstack 0
  4762                           
  4763                           ;Skip over the trampoline to the duplicate function for level 2
  4764  00140A  A263               	btfss	int$flags,1,c
  4765  00140C  EF0A  F00A         	goto	_INT1_Handler$intlevel1
  4766  001410  EF18  F00A         	goto	i2_INT1_Handler
  4767  001414                     _INT1_Handler$intlevel1:
  4768                           	callstack 19
  4769  001414                     
  4770                           ;application.c: 59:     GPIO_Pin_Toggle_Logic(&PIN1);
  4771  001414  0E2C               	movlw	low _PIN1
  4772  001416  6E3B               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  4773  001418  0E00               	movlw	high _PIN1
  4774  00141A  6E3C               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  4775  00141C  EC71  F006         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  4776  001420  0012               	return		;funcret
  4777  001422                     __end_of_INT1_Handler:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  4781 ;; Defined at:
  4782 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  _pin_config     2   14[COMRAM] PTR const struct .
  4785 ;;		 -> PIN2(1), PIN1(1), 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  ERRORSTATUS     1    0        unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      unsigned char 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        8 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    4
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_INT1_Handler
  4808 ;;		_OnChanggeINT_Handler
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text34
  4813  000CE2                     __ptext34:
  4814                           	callstack 0
  4815  000CE2                     _GPIO_Pin_Toggle_Logic:
  4816                           	callstack 19
  4817  000CE2                     
  4818                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  4819  000CE2  503B               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  4820  000CE4  103C               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  4821  000CE6  A4D8               	btfss	status,2,c
  4822  000CE8  EF78  F006         	goto	i1u169_21
  4823  000CEC  EF7A  F006         	goto	i1u169_20
  4824  000CF0                     i1u169_21:
  4825  000CF0  EF7C  F006         	goto	i1l2226
  4826  000CF4                     i1u169_20:
  4827  000CF4                     
  4828                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  4829  000CF4  EFA8  F006         	goto	i1l79
  4830  000CF8                     i1l2226:
  4831                           
  4832                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  4833  000CF8  C03B  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  4834  000CFC  C03C  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  4835  000D00  50DF               	movf	indf2,w,c
  4836  000D02  0B07               	andlw	7
  4837  000D04  6E3D               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
  4838  000D06  0E01               	movlw	1
  4839  000D08  6E3E               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
  4840  000D0A  2A3D               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
  4841  000D0C  EF8A  F006         	goto	i1u170_24
  4842  000D10                     i1u170_25:
  4843  000D10  90D8               	bcf	status,0,c
  4844  000D12  363E               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
  4845  000D14                     i1u170_24:
  4846  000D14  2E3D               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
  4847  000D16  EF88  F006         	goto	i1u170_25
  4848  000D1A  C03B  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  4849  000D1E  C03C  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  4850  000D22  30DF               	rrcf	indf2,w,c
  4851  000D24  32E8               	rrcf	wreg,f,c
  4852  000D26  32E8               	rrcf	wreg,f,c
  4853  000D28  0B07               	andlw	7
  4854  000D2A  6E3F               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
  4855  000D2C  503F               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
  4856  000D2E  0D02               	mullw	2
  4857  000D30  0E0B               	movlw	low _lat_registers
  4858  000D32  24F3               	addwf	243,w,c
  4859  000D34  6ED9               	movwf	fsr2l,c
  4860  000D36  0E00               	movlw	high _lat_registers
  4861  000D38  20F4               	addwfc	prodh,w,c
  4862  000D3A  6EDA               	movwf	fsr2h,c
  4863  000D3C  CFDE F040          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  4864  000D40  CFDD F041          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  4865  000D44  C040  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  4866  000D48  C041  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  4867  000D4C  503E               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
  4868  000D4E  1ADF               	xorwf	indf2,f,c
  4869  000D50                     i1l79:
  4870  000D50  0012               	return		;funcret
  4871  000D52                     __end_of_GPIO_Pin_Toggle_Logic:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _InterruptManagerHigh *****************
  4875 ;; Defined at:
  4876 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;Total ram usage:        6 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    3
  4897 ;; This function calls:
  4898 ;;		_INT0_ISR
  4899 ;;		_INT2_ISR
  4900 ;; This function is called by:
  4901 ;;		Interrupt level 2
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	intcode
  4906  000008                     __pintcode:
  4907                           	callstack 0
  4908  000008                     _InterruptManagerHigh:
  4909                           	callstack 19
  4910                           
  4911                           ;incstack = 0
  4912  000008  8263               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4913  00000A  EDBA  F003         	call	int_func,f	;refresh shadow registers
  4914                           
  4915                           	psect	intcode_body
  4916  000774                     __pintcode_body:
  4917                           	callstack 19
  4918  000774                     int_func:
  4919                           	callstack 19
  4920  000774  0006               	pop		; remove dummy address from shadow register refresh
  4921  000776  CFFA F035          	movff	pclath,??_InterruptManagerHigh
  4922  00077A  CFFB F036          	movff	pclatu,??_InterruptManagerHigh+1
  4923  00077E  CFD9 F037          	movff	fsr2l,??_InterruptManagerHigh+2
  4924  000782  CFDA F038          	movff	fsr2h,??_InterruptManagerHigh+3
  4925  000786  CFF3 F039          	movff	prodl,??_InterruptManagerHigh+4
  4926  00078A  CFF4 F03A          	movff	prodh,??_InterruptManagerHigh+5
  4927  00078E                     
  4928                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 36:     if( (1 == INTCONbits.INT0IE) && (1 ==
      +                           INTCONbits.INT0IF) )
  4929  00078E  A8F2               	btfss	242,4,c	;volatile
  4930  000790  EFCC  F003         	goto	i2u230_41
  4931  000794  EFCE  F003         	goto	i2u230_40
  4932  000798                     i2u230_41:
  4933  000798  EFD7  F003         	goto	i2l188
  4934  00079C                     i2u230_40:
  4935  00079C  A2F2               	btfss	242,1,c	;volatile
  4936  00079E  EFD3  F003         	goto	i2u231_41
  4937  0007A2  EFD5  F003         	goto	i2u231_40
  4938  0007A6                     i2u231_41:
  4939  0007A6  EFD7  F003         	goto	i2l188
  4940  0007AA                     i2u231_40:
  4941  0007AA                     
  4942                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 37:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 38:         INT0_ISR();
  4943  0007AA  EC95  F009         	call	_INT0_ISR	;wreg free
  4944  0007AE                     i2l188:
  4945                           
  4946                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 42:     if( (1 == INTCON3bits.INT2IE) && (1 =
      +                          = INTCON3bits.INT2IF) )
  4947  0007AE  A8F0               	btfss	240,4,c	;volatile
  4948  0007B0  EFDC  F003         	goto	i2u232_41
  4949  0007B4  EFDE  F003         	goto	i2u232_40
  4950  0007B8                     i2u232_41:
  4951  0007B8  EFE7  F003         	goto	i2l190
  4952  0007BC                     i2u232_40:
  4953  0007BC  A2F0               	btfss	240,1,c	;volatile
  4954  0007BE  EFE3  F003         	goto	i2u233_41
  4955  0007C2  EFE5  F003         	goto	i2u233_40
  4956  0007C6                     i2u233_41:
  4957  0007C6  EFE7  F003         	goto	i2l190
  4958  0007CA                     i2u233_40:
  4959  0007CA                     
  4960                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 43:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 44:         INT2_ISR();
  4961  0007CA  EC7D  F009         	call	_INT2_ISR	;wreg free
  4962  0007CE                     i2l190:
  4963                           
  4964                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  4965  0007CE  AAF2               	btfss	242,5,c	;volatile
  4966  0007D0  EFEC  F003         	goto	i2u234_41
  4967  0007D4  EFEE  F003         	goto	i2u234_40
  4968  0007D8                     i2u234_41:
  4969  0007D8  EFEF  F003         	goto	i2l192
  4970  0007DC                     i2u234_40:
  4971  0007DC  50F2               	movf	242,w,c	;volatile
  4972  0007DE                     i2l192:
  4973                           
  4974                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  4975  0007DE  A29D               	btfss	157,1,c	;volatile
  4976  0007E0  EFF4  F003         	goto	i2u235_41
  4977  0007E4  EFF6  F003         	goto	i2u235_40
  4978  0007E8                     i2u235_41:
  4979  0007E8  EFF7  F003         	goto	i2l194
  4980  0007EC                     i2u235_40:
  4981  0007EC  509E               	movf	158,w,c	;volatile
  4982  0007EE                     i2l194:
  4983                           
  4984                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  4985  0007EE  A2A0               	btfss	160,1,c	;volatile
  4986  0007F0  EFFC  F003         	goto	i2u236_41
  4987  0007F4  EFFE  F003         	goto	i2u236_40
  4988  0007F8                     i2u236_41:
  4989  0007F8  EFFF  F003         	goto	i2l196
  4990  0007FC                     i2u236_40:
  4991  0007FC  50A1               	movf	161,w,c	;volatile
  4992  0007FE                     i2l196:
  4993                           
  4994                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  4995  0007FE  A0A0               	btfss	160,0,c	;volatile
  4996  000800  EF04  F004         	goto	i2u237_41
  4997  000804  EF06  F004         	goto	i2u237_40
  4998  000808                     i2u237_41:
  4999  000808  EF07  F004         	goto	i2l198
  5000  00080C                     i2u237_40:
  5001  00080C  50A1               	movf	161,w,c	;volatile
  5002  00080E                     i2l198:
  5003                           
  5004                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  5005  00080E  AA9D               	btfss	157,5,c	;volatile
  5006  000810  EF0C  F004         	goto	i2u238_41
  5007  000814  EF0E  F004         	goto	i2u238_40
  5008  000818                     i2u238_41:
  5009  000818  EF0F  F004         	goto	i2l200
  5010  00081C                     i2u238_40:
  5011  00081C  509E               	movf	158,w,c	;volatile
  5012  00081E                     i2l200:
  5013                           
  5014                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  5015  00081E  A89D               	btfss	157,4,c	;volatile
  5016  000820  EF14  F004         	goto	i2u239_41
  5017  000824  EF16  F004         	goto	i2u239_40
  5018  000828                     i2u239_41:
  5019  000828  EF17  F004         	goto	i2l202
  5020  00082C                     i2u239_40:
  5021  00082C  509E               	movf	158,w,c	;volatile
  5022  00082E                     i2l202:
  5023                           
  5024                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  5025  00082E  A6A0               	btfss	160,3,c	;volatile
  5026  000830  EF1C  F004         	goto	i2u240_41
  5027  000834  EF1E  F004         	goto	i2u240_40
  5028  000838                     i2u240_41:
  5029  000838  EF1F  F004         	goto	i2l204
  5030  00083C                     i2u240_40:
  5031  00083C  50A1               	movf	161,w,c	;volatile
  5032  00083E                     i2l204:
  5033                           
  5034                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  5035  00083E  A69D               	btfss	157,3,c	;volatile
  5036  000840  EF24  F004         	goto	i2u241_41
  5037  000844  EF26  F004         	goto	i2u241_40
  5038  000848                     i2u241_41:
  5039  000848  EF27  F004         	goto	i2l207
  5040  00084C                     i2u241_40:
  5041  00084C  509E               	movf	158,w,c	;volatile
  5042  00084E                     i2l207:
  5043  00084E  C03A  FFF4         	movff	??_InterruptManagerHigh+5,prodh
  5044  000852  C039  FFF3         	movff	??_InterruptManagerHigh+4,prodl
  5045  000856  C038  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  5046  00085A  C037  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  5047  00085E  C036  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  5048  000862  C035  FFFA         	movff	??_InterruptManagerHigh,pclath
  5049  000866  9263               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5050  000868  0011               	retfie		f
  5051  00086A                     __end_of_InterruptManagerHigh:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function _INT2_ISR *****************
  5055 ;; Defined at:
  5056 ;;		line 86 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;Total ram usage:        0 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    2
  5077 ;; This function calls:
  5078 ;;		Absolute function
  5079 ;;		i2_INT1_Handler
  5080 ;; This function is called by:
  5081 ;;		_InterruptManagerHigh
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text36
  5086  0012FA                     __ptext36:
  5087                           	callstack 0
  5088  0012FA                     _INT2_ISR:
  5089                           	callstack 19
  5090  0012FA                     
  5091                           ;MCAL/Interrupts/mcal_external_interrupt.c: 89:     (INTCON3bits.INT2IF = 0);
  5092  0012FA  92F0               	bcf	240,1,c	;volatile
  5093  0012FC                     
  5094                           ;MCAL/Interrupts/mcal_external_interrupt.c: 93:     if(INT2_InterruptHandler)
  5095  0012FC  505D               	movf	_INT2_InterruptHandler^0,w,c
  5096  0012FE  105E               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  5097  001300  B4D8               	btfsc	status,2,c
  5098  001302  EF85  F009         	goto	i2u210_41
  5099  001306  EF87  F009         	goto	i2u210_40
  5100  00130A                     i2u210_41:
  5101  00130A  EF94  F009         	goto	i2l304
  5102  00130E                     i2u210_40:
  5103  00130E                     
  5104                           ;MCAL/Interrupts/mcal_external_interrupt.c: 94:     {;MCAL/Interrupts/mcal_external_inte
      +                          rrupt.c: 95:         INT2_InterruptHandler();
  5105  00130E  D802               	call	i2u211_48
  5106  001310  EF94  F009         	goto	i2u211_49
  5107  001314                     i2u211_48:
  5108  001314  0005               	push	
  5109  001316  6EFA               	movwf	pclath,c
  5110  001318  505D               	movf	_INT2_InterruptHandler^0,w,c
  5111  00131A  6EFD               	movwf	tosl,c
  5112  00131C  505E               	movf	(_INT2_InterruptHandler+1)^0,w,c
  5113  00131E  6EFE               	movwf	tosh,c
  5114  001320  50F8               	movf	tblptru,w,c
  5115  001322  6EFF               	movwf	tosu,c
  5116  001324  50FA               	movf	pclath,w,c
  5117  001326  0012               	return		;indir
  5118  001328                     i2u211_49:
  5119  001328                     i2l304:
  5120  001328  0012               	return		;funcret
  5121  00132A                     __end_of_INT2_ISR:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _INT0_ISR *****************
  5125 ;; Defined at:
  5126 ;;		line 60 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        0 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    2
  5147 ;; This function calls:
  5148 ;;		Absolute function
  5149 ;;		i2_INT1_Handler
  5150 ;; This function is called by:
  5151 ;;		_InterruptManagerHigh
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text37
  5156  00132A                     __ptext37:
  5157                           	callstack 0
  5158  00132A                     _INT0_ISR:
  5159                           	callstack 19
  5160  00132A                     
  5161                           ;MCAL/Interrupts/mcal_external_interrupt.c: 63:     (INTCONbits.INT0IF = 0 );
  5162  00132A  92F2               	bcf	242,1,c	;volatile
  5163  00132C                     
  5164                           ;MCAL/Interrupts/mcal_external_interrupt.c: 67:     if(INT0_InterruptHandler)
  5165  00132C  5061               	movf	_INT0_InterruptHandler^0,w,c
  5166  00132E  1062               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  5167  001330  B4D8               	btfsc	status,2,c
  5168  001332  EF9D  F009         	goto	i2u208_41
  5169  001336  EF9F  F009         	goto	i2u208_40
  5170  00133A                     i2u208_41:
  5171  00133A  EFAC  F009         	goto	i2l296
  5172  00133E                     i2u208_40:
  5173  00133E                     
  5174                           ;MCAL/Interrupts/mcal_external_interrupt.c: 68:     {;MCAL/Interrupts/mcal_external_inte
      +                          rrupt.c: 69:         INT0_InterruptHandler();
  5175  00133E  D802               	call	i2u209_48
  5176  001340  EFAC  F009         	goto	i2u209_49
  5177  001344                     i2u209_48:
  5178  001344  0005               	push	
  5179  001346  6EFA               	movwf	pclath,c
  5180  001348  5061               	movf	_INT0_InterruptHandler^0,w,c
  5181  00134A  6EFD               	movwf	tosl,c
  5182  00134C  5062               	movf	(_INT0_InterruptHandler+1)^0,w,c
  5183  00134E  6EFE               	movwf	tosh,c
  5184  001350  50F8               	movf	tblptru,w,c
  5185  001352  6EFF               	movwf	tosu,c
  5186  001354  50FA               	movf	pclath,w,c
  5187  001356  0012               	return		;indir
  5188  001358                     i2u209_49:
  5189  001358                     i2l296:
  5190  001358  0012               	return		;funcret
  5191  00135A                     __end_of_INT0_ISR:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function i2_INT1_Handler *****************
  5195 ;; Defined at:
  5196 ;;		line 57 in file "application.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    1
  5217 ;; This function calls:
  5218 ;;		i2_GPIO_Pin_Toggle_Logic
  5219 ;; This function is called by:
  5220 ;;		_INT0_ISR
  5221 ;;		_INT2_ISR
  5222 ;;		_INT1_ISR
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text38
  5227  001430                     __ptext38:
  5228                           	callstack 0
  5229  001430                     i2_INT1_Handler:
  5230                           	callstack 19
  5231  001430                     
  5232                           ;application.c: 59:     GPIO_Pin_Toggle_Logic(&PIN1);
  5233  001430  0E2C               	movlw	low _PIN1
  5234  001432  6E2D               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
  5235  001434  0E00               	movlw	high _PIN1
  5236  001436  6E2E               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  5237  001438  ECA9  F006         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
  5238  00143C  0012               	return		;funcret
  5239  00143E                     __end_ofi2_INT1_Handler:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
  5243 ;; Defined at:
  5244 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  5247 ;;		 -> PIN2(1), PIN1(1), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  ERRORSTATUS     1    0        unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      unsigned char 
  5252 ;; Registers used:
  5253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;Total ram usage:        8 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		i2_INT1_Handler
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text39
  5273  000D52                     __ptext39:
  5274                           	callstack 0
  5275  000D52                     i2_GPIO_Pin_Toggle_Logic:
  5276                           	callstack 19
  5277  000D52                     
  5278                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  5279  000D52  502D               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  5280  000D54  102E               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  5281  000D56  A4D8               	btfss	status,2,c
  5282  000D58  EFB0  F006         	goto	i2u203_41
  5283  000D5C  EFB2  F006         	goto	i2u203_40
  5284  000D60                     i2u203_41:
  5285  000D60  EFB4  F006         	goto	i2l2538
  5286  000D64                     i2u203_40:
  5287  000D64                     
  5288                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  5289  000D64  EFE0  F006         	goto	i2l79
  5290  000D68                     i2l2538:
  5291                           
  5292                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  5293  000D68  C02D  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  5294  000D6C  C02E  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  5295  000D70  50DF               	movf	indf2,w,c
  5296  000D72  0B07               	andlw	7
  5297  000D74  6E2F               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
  5298  000D76  0E01               	movlw	1
  5299  000D78  6E30               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
  5300  000D7A  2A2F               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
  5301  000D7C  EFC2  F006         	goto	i2u204_44
  5302  000D80                     i2u204_45:
  5303  000D80  90D8               	bcf	status,0,c
  5304  000D82  3630               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
  5305  000D84                     i2u204_44:
  5306  000D84  2E2F               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
  5307  000D86  EFC0  F006         	goto	i2u204_45
  5308  000D8A  C02D  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  5309  000D8E  C02E  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  5310  000D92  30DF               	rrcf	indf2,w,c
  5311  000D94  32E8               	rrcf	wreg,f,c
  5312  000D96  32E8               	rrcf	wreg,f,c
  5313  000D98  0B07               	andlw	7
  5314  000D9A  6E31               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
  5315  000D9C  5031               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
  5316  000D9E  0D02               	mullw	2
  5317  000DA0  0E0B               	movlw	low _lat_registers
  5318  000DA2  24F3               	addwf	243,w,c
  5319  000DA4  6ED9               	movwf	fsr2l,c
  5320  000DA6  0E00               	movlw	high _lat_registers
  5321  000DA8  20F4               	addwfc	prodh,w,c
  5322  000DAA  6EDA               	movwf	fsr2h,c
  5323  000DAC  CFDE F032          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
  5324  000DB0  CFDD F033          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
  5325  000DB4  C032  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
  5326  000DB8  C033  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
  5327  000DBC  5030               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
  5328  000DBE  1ADF               	xorwf	indf2,f,c
  5329  000DC0                     i2l79:
  5330  000DC0  0012               	return		;funcret
  5331  000DC2                     __end_ofi2_GPIO_Pin_Toggle_Logic:
  5332                           	callstack 0
  5333  0000                     
  5334                           	psect	text40
  5335  000000                     __ptext40:
  5336                           	callstack 0
  5337  000000                     
  5338                           	psect	rparam
  5339  0000                     
  5340                           	psect	temp
  5341  000063                     btemp:
  5342                           	callstack 0
  5343  000063                     	ds	1
  5344  0000                     int$flags	set	btemp
  5345  0000                     wtemp8	set	btemp+1
  5346  0000                     ttemp5	set	btemp+1
  5347  0000                     ttemp6	set	btemp+4
  5348  0000                     ttemp7	set	btemp+8
  5349                           
  5350                           	psect	idloc
  5351                           
  5352                           ;Config register IDLOC0 @ 0x200000
  5353                           ;	unspecified, using default values
  5354  200000                     	org	2097152
  5355  200000  FF                 	db	255
  5356                           
  5357                           ;Config register IDLOC1 @ 0x200001
  5358                           ;	unspecified, using default values
  5359  200001                     	org	2097153
  5360  200001  FF                 	db	255
  5361                           
  5362                           ;Config register IDLOC2 @ 0x200002
  5363                           ;	unspecified, using default values
  5364  200002                     	org	2097154
  5365  200002  FF                 	db	255
  5366                           
  5367                           ;Config register IDLOC3 @ 0x200003
  5368                           ;	unspecified, using default values
  5369  200003                     	org	2097155
  5370  200003  FF                 	db	255
  5371                           
  5372                           ;Config register IDLOC4 @ 0x200004
  5373                           ;	unspecified, using default values
  5374  200004                     	org	2097156
  5375  200004  FF                 	db	255
  5376                           
  5377                           ;Config register IDLOC5 @ 0x200005
  5378                           ;	unspecified, using default values
  5379  200005                     	org	2097157
  5380  200005  FF                 	db	255
  5381                           
  5382                           ;Config register IDLOC6 @ 0x200006
  5383                           ;	unspecified, using default values
  5384  200006                     	org	2097158
  5385  200006  FF                 	db	255
  5386                           
  5387                           ;Config register IDLOC7 @ 0x200007
  5388                           ;	unspecified, using default values
  5389  200007                     	org	2097159
  5390  200007  FF                 	db	255
  5391                           
  5392                           	psect	config
  5393                           
  5394                           ; Padding undefined space
  5395  300000                     	org	3145728
  5396  300000  FF                 	db	255
  5397                           
  5398                           ;Config register CONFIG1H @ 0x300001
  5399                           ;	Oscillator Selection bits
  5400                           ;	OSC = HS, HS oscillator
  5401                           ;	Fail-Safe Clock Monitor Enable bit
  5402                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5403                           ;	Internal/External Oscillator Switchover bit
  5404                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5405  300001                     	org	3145729
  5406  300001  02                 	db	2
  5407                           
  5408                           ;Config register CONFIG2L @ 0x300002
  5409                           ;	Power-up Timer Enable bit
  5410                           ;	PWRT = OFF, PWRT disabled
  5411                           ;	Brown-out Reset Enable bits
  5412                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5413                           ;	Brown Out Reset Voltage bits
  5414                           ;	BORV = 1, 
  5415  300002                     	org	3145730
  5416  300002  09                 	db	9
  5417                           
  5418                           ;Config register CONFIG2H @ 0x300003
  5419                           ;	Watchdog Timer Enable bit
  5420                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5421                           ;	Watchdog Timer Postscale Select bits
  5422                           ;	WDTPS = 32768, 1:32768
  5423  300003                     	org	3145731
  5424  300003  1E                 	db	30
  5425                           
  5426                           ; Padding undefined space
  5427  300004                     	org	3145732
  5428  300004  FF                 	db	255
  5429                           
  5430                           ;Config register CONFIG3H @ 0x300005
  5431                           ;	CCP2 MUX bit
  5432                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5433                           ;	PORTB A/D Enable bit
  5434                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5435                           ;	Low-Power Timer1 Oscillator Enable bit
  5436                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5437                           ;	MCLR Pin Enable bit
  5438                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5439  300005                     	org	3145733
  5440  300005  81                 	db	129
  5441                           
  5442                           ;Config register CONFIG4L @ 0x300006
  5443                           ;	Stack Full/Underflow Reset Enable bit
  5444                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5445                           ;	Single-Supply ICSP Enable bit
  5446                           ;	LVP = OFF, Single-Supply ICSP disabled
  5447                           ;	Extended Instruction Set Enable bit
  5448                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5449                           ;	Background Debugger Enable bit
  5450                           ;	DEBUG = 0x1, unprogrammed default
  5451  300006                     	org	3145734
  5452  300006  81                 	db	129
  5453                           
  5454                           ; Padding undefined space
  5455  300007                     	org	3145735
  5456  300007  FF                 	db	255
  5457                           
  5458                           ;Config register CONFIG5L @ 0x300008
  5459                           ;	Code Protection bit
  5460                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5461                           ;	Code Protection bit
  5462                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5463                           ;	Code Protection bit
  5464                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5465                           ;	Code Protection bit
  5466                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5467  300008                     	org	3145736
  5468  300008  0F                 	db	15
  5469                           
  5470                           ;Config register CONFIG5H @ 0x300009
  5471                           ;	Boot Block Code Protection bit
  5472                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5473                           ;	Data EEPROM Code Protection bit
  5474                           ;	CPD = OFF, Data EEPROM not code-protected
  5475  300009                     	org	3145737
  5476  300009  C0                 	db	192
  5477                           
  5478                           ;Config register CONFIG6L @ 0x30000A
  5479                           ;	Write Protection bit
  5480                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5481                           ;	Write Protection bit
  5482                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5483                           ;	Write Protection bit
  5484                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5485                           ;	Write Protection bit
  5486                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5487  30000A                     	org	3145738
  5488  30000A  0F                 	db	15
  5489                           
  5490                           ;Config register CONFIG6H @ 0x30000B
  5491                           ;	Configuration Register Write Protection bit
  5492                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5493                           ;	Boot Block Write Protection bit
  5494                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5495                           ;	Data EEPROM Write Protection bit
  5496                           ;	WRTD = OFF, Data EEPROM not write-protected
  5497  30000B                     	org	3145739
  5498  30000B  E0                 	db	224
  5499                           
  5500                           ;Config register CONFIG7L @ 0x30000C
  5501                           ;	Table Read Protection bit
  5502                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5503                           ;	Table Read Protection bit
  5504                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5505                           ;	Table Read Protection bit
  5506                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5507                           ;	Table Read Protection bit
  5508                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5509  30000C                     	org	3145740
  5510  30000C  0F                 	db	15
  5511                           
  5512                           ;Config register CONFIG7H @ 0x30000D
  5513                           ;	Boot Block Table Read Protection bit
  5514                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5515  30000D                     	org	3145741
  5516  30000D  40                 	db	64
  5517                           tosu	equ	0xFFF
  5518                           tosh	equ	0xFFE
  5519                           tosl	equ	0xFFD
  5520                           stkptr	equ	0xFFC
  5521                           pclatu	equ	0xFFB
  5522                           pclath	equ	0xFFA
  5523                           pcl	equ	0xFF9
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodh	equ	0xFF4
  5529                           prodl	equ	0xFF3
  5530                           indf0	equ	0xFEF
  5531                           postinc0	equ	0xFEE
  5532                           postdec0	equ	0xFED
  5533                           preinc0	equ	0xFEC
  5534                           plusw0	equ	0xFEB
  5535                           fsr0h	equ	0xFEA
  5536                           fsr0l	equ	0xFE9
  5537                           wreg	equ	0xFE8
  5538                           indf1	equ	0xFE7
  5539                           postinc1	equ	0xFE6
  5540                           postdec1	equ	0xFE5
  5541                           preinc1	equ	0xFE4
  5542                           plusw1	equ	0xFE3
  5543                           fsr1h	equ	0xFE2
  5544                           fsr1l	equ	0xFE1
  5545                           bsr	equ	0xFE0
  5546                           indf2	equ	0xFDF
  5547                           postinc2	equ	0xFDE
  5548                           postdec2	equ	0xFDD
  5549                           preinc2	equ	0xFDC
  5550                           plusw2	equ	0xFDB
  5551                           fsr2h	equ	0xFDA
  5552                           fsr2l	equ	0xFD9
  5553                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        44
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32      98
    BANK0           128     15      15
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    interrupt_RBx_set_callback@int_obj	PTR const struct . size(2) Largest target is 6
		 -> INTERUPT_oncahnge(COMRAM[6]), 

    RB7_set_callback@InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    RB7_set_callback@InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_set_callback@InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    RB6_set_callback@InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_set_callback@InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    RB5_set_callback@InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_set_callback@InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    RB4_set_callback@InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    interrupt_RBx_set_priority@int_obj	PTR const struct . size(2) Largest target is 6
		 -> INTERUPT_oncahnge(COMRAM[6]), 

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    interrupt_RBx_pin_init@int_obj	PTR const struct . size(2) Largest target is 6
		 -> INTERUPT_oncahnge(COMRAM[6]), 

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    interrupt_RBx_disable@int_obj	PTR const struct . size(2) Largest target is 6
		 -> INTERUPT_oncahnge(COMRAM[6]), 

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    interrupt_RBx_enable@int_obj	PTR const struct . size(2) Largest target is 6
		 -> INTERUPT_oncahnge(COMRAM[6]), 

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_set_callback@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    INT2_set_callback@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), INT1_Handler(), 

    INT1_set_callback@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), INT1_Handler(), 

    INT0_set_callback@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), INT1_Handler(), 

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_clear_flag@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_enable@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_disable@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_set_priority@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_set_edge@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    interrupt_INTx_pin_init@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    Interrupt_RBx_INIT@int_obj	PTR const struct . size(2) Largest target is 6
		 -> INTERUPT_oncahnge(COMRAM[6]), 

    Interrupt_INTx_INIT@int_obj	PTR const struct . size(2) Largest target is 5
		 -> INTERUPT1(COMRAM[5]), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), Absolute function(), INT1_Handler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), Absolute function(), INT1_Handler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), Absolute function(), INT1_Handler(), 

    S174$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    INTERUPT_oncahnge.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> OnChanggeINT_Handler(), 

    S174$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INTERUPT_oncahnge.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S163$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_Handler(), 

    INTERUPT1.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_Handler(), INT1_Handler(), 

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> PIN2(COMRAM[1]), PIN1(COMRAM[1]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> PIN2(COMRAM[1]), PIN1(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> PIN2(COMRAM[1]), PIN1(COMRAM[1]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> PIN2(COMRAM[1]), PIN1(COMRAM[1]), INTERUPT_oncahnge(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR
    _OnChanggeINT_Handler->_GPIO_Pin_Toggle_Logic
    _INT1_Handler->_GPIO_Pin_Toggle_Logic

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_INT1_Handler->i2_GPIO_Pin_Toggle_Logic

Critical Paths under _main in BANK0

    _application_intialize->_Interrupt_RBx_INIT
    _Interrupt_RBx_INIT->_interrupt_RBx_pin_init
    _interrupt_RBx_set_callback->_RB4_set_callback
    _interrupt_RBx_set_callback->_RB5_set_callback
    _interrupt_RBx_set_callback->_RB6_set_callback
    _interrupt_RBx_set_callback->_RB7_set_callback
    _interrupt_RBx_pin_init->_GPIO_Pin_Direction_Initialize
    _Interrupt_INTx_INIT->_interrupt_INTx_set_callback
    _interrupt_INTx_set_callback->_INT0_set_callback
    _interrupt_INTx_set_callback->_INT1_set_callback
    _interrupt_INTx_set_callback->_INT2_set_callback
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7590
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0    7590
                _GPIO_Pin_Initialize
                _Interrupt_INTx_INIT
                 _Interrupt_RBx_INIT
 ---------------------------------------------------------------------------------
 (2) _Interrupt_RBx_INIT                                   3     1      2    3496
                                             12 BANK0      3     1      2
              _interrupt_RBx_disable
               _interrupt_RBx_enable
             _interrupt_RBx_pin_init
         _interrupt_RBx_set_callback
         _interrupt_RBx_set_priority
 ---------------------------------------------------------------------------------
 (3) _interrupt_RBx_set_priority                           4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_RBx_set_callback                           5     3      2    1816
                                              5 BANK0      5     3      2
                   _RB4_set_callback
                   _RB5_set_callback
                   _RB6_set_callback
                   _RB7_set_callback
 ---------------------------------------------------------------------------------
 (4) _RB7_set_callback                                     5     1      4     341
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _RB6_set_callback                                     5     1      4     341
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _RB5_set_callback                                     5     1      4     341
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _RB4_set_callback                                     5     1      4     341
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _interrupt_RBx_pin_init                               3     1      2     626
                                              9 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
 ---------------------------------------------------------------------------------
 (3) _interrupt_RBx_enable                                 4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_RBx_disable                                4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_INIT                                  3     1      2    2897
                                              8 BANK0      3     1      2
          _interrupt_INTx_clear_flag
             _interrupt_INTx_disable
              _interrupt_INTx_enable
            _interrupt_INTx_pin_init
        _interrupt_INTx_set_callback
            _interrupt_INTx_set_edge
        _interrupt_INTx_set_priority
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_set_priority                          5     3      2     322
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_set_edge                              5     3      2     387
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_set_callback                          5     3      2     837
                                              3 BANK0      5     3      2
                  _INT0_set_callback
                  _INT1_set_callback
                  _INT2_set_callback
 ---------------------------------------------------------------------------------
 (4) _INT2_set_callback                                    3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT1_set_callback                                    3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT0_set_callback                                    3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_pin_init                              5     3      2     192
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_enable                                5     3      2     254
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_disable                               5     3      2     344
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_clear_flag                            5     3      2     192
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Initialize                                  3     1      2    1197
                                             10 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Write_Logic                                10     7      3     437
                                              0 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     437
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptManagerLow                                  9     9      0    1306
                                             23 COMRAM     9     9      0
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (6) _RB7_ISR                                              1     1      0     270
                                             22 COMRAM     1     1      0
                   Absolute function *
               _OnChanggeINT_Handler *
 ---------------------------------------------------------------------------------
 (6) _RB6_ISR                                              1     1      0     270
                                             22 COMRAM     1     1      0
                   Absolute function *
               _OnChanggeINT_Handler *
 ---------------------------------------------------------------------------------
 (6) _RB5_ISR                                              1     1      0     270
                                             22 COMRAM     1     1      0
                   Absolute function *
               _OnChanggeINT_Handler *
 ---------------------------------------------------------------------------------
 (6) _RB4_ISR                                              1     1      0     270
                                             22 COMRAM     1     1      0
                   Absolute function *
               _OnChanggeINT_Handler *
 ---------------------------------------------------------------------------------
 (7) _OnChanggeINT_Handler                                 0     0      0     226
              _GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0     226
                   Absolute function *
                       _INT1_Handler *
 ---------------------------------------------------------------------------------
 (7) _INT1_Handler                                         0     0      0     226
              _GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (8) _GPIO_Pin_Toggle_Logic                                8     6      2     226
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 6     6      0     200
                                              8 COMRAM     6     6      0
                           _INT0_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            0     0      0     100
                   Absolute function *
                     i2_INT1_Handler *
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            0     0      0     100
                   Absolute function *
                     i2_INT1_Handler *
 ---------------------------------------------------------------------------------
 (11) i2_INT1_Handler                                      0     0      0     100
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _Interrupt_INTx_INIT
       _interrupt_INTx_clear_flag
       _interrupt_INTx_disable
       _interrupt_INTx_enable
       _interrupt_INTx_pin_init
       _interrupt_INTx_set_callback
         _INT0_set_callback
         _INT1_set_callback
         _INT2_set_callback
       _interrupt_INTx_set_edge
       _interrupt_INTx_set_priority
     _Interrupt_RBx_INIT
       _interrupt_RBx_disable
       _interrupt_RBx_enable
       _interrupt_RBx_pin_init
         _GPIO_Pin_Direction_Initialize
       _interrupt_RBx_set_callback
         _RB4_set_callback
         _RB5_set_callback
         _RB6_set_callback
         _RB7_set_callback
       _interrupt_RBx_set_priority

 _InterruptManagerLow (ROOT)
   _INT1_ISR
     Absolute function(Fake) *
     _INT1_Handler *
       _GPIO_Pin_Toggle_Logic
   _RB4_ISR
     Absolute function(Fake) *
     _OnChanggeINT_Handler *
       _GPIO_Pin_Toggle_Logic
   _RB5_ISR
     Absolute function(Fake) *
     _OnChanggeINT_Handler *
       _GPIO_Pin_Toggle_Logic
   _RB6_ISR
     Absolute function(Fake) *
     _OnChanggeINT_Handler *
       _GPIO_Pin_Toggle_Logic
   _RB7_ISR
     Absolute function(Fake) *
     _OnChanggeINT_Handler *
       _GPIO_Pin_Toggle_Logic

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
     Absolute function(Fake) *
     i2_INT1_Handler *
       i2_GPIO_Pin_Toggle_Logic
   _INT2_ISR
     Absolute function(Fake) *
     i2_INT1_Handler *
       i2_GPIO_Pin_Toggle_Logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      F       F       5       11.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      62       1       77.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      71      34        0.0%
DATA                 0      0      71       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Sep 24 01:58:00 2022

                    ??_Interrupt_RBx_INIT 008E                         ?_RB7_set_callback 0080  
                                      l48 03EE                                        l67 064A  
                                      l84 1106                                        bsr 000FE0  
                   ??_InterruptManagerLow 0044                        ??_RB7_set_callback 0084  
                                     l140 1442                                       l141 1442  
                                     l146 1292                                       l413 0958  
                                     l423 0A80                                       l503 12C8  
                                     l440 09CA                                       l512 0E96  
                                     l425 0A86                                       l441 09D0  
                                     l345 0BF8                                       l426 0A8C  
                                     l434 09C0                                       l522 11D8  
                                     l506 0E4E                                       l451 0C94  
                                     l419 0A7C                                       l443 0A16  
                                     l371 0C6C                                       l355 0E2C  
                                     l452 0C9A                                       l428 0AD2  
                                     l532 114C                                       l517 121E  
                                     l509 0E94                                       l454 0CE0  
                                     l438 09C4                                       l366 0C1A  
                                     l527 1192                                       l368 0C20  
                                     l464 13DC                                       l480 0B72  
                                     l544 0772                                       l449 0C8E  
                                     l369 0C26                                       l394 051C  
                                     l459 1408                                       l469 13B0  
                                     l397 088A                                       l486 0EFA  
                                     l495 0F60                                       l489 0EFE  
                                     l498 0F64                    ??_InterruptManagerHigh 0035  
               _RB5_InterruptHandler_HIGH 0057         interrupt_RBx_set_callback@int_obj 0085  
GPIO_Pin_Direction_Initialize@ERRORSTATUS 0088                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
               __size_of_RB5_set_callback 0046                    ??_GPIO_Pin_Write_Logic 0083  
            __end_of_interrupt_RBx_enable 0F00                           __end_of_RB4_ISR 10BE  
                         __end_of_RB5_ISR 1068                           __end_of_RB6_ISR 1012  
                         __end_of_RB7_ISR 0FBC                                      l3000 0A1E  
                                    l3010 0A76                                      l3002 0A30  
                                    l3004 0A38                                      l3100 0C2C  
                                    l3030 0C74                                      l3006 0A54  
                                    l3102 0C6A                                      l3040 0CDE  
                                    l3032 0C86                                      l3016 0A92  
                                    l3008 0A5A                                      l3120 042C  
                                    l3112 03F0                                      l3018 0AD0  
                                    l3130 0470                                      l3122 0432  
                                    l3114 03F6                                      l3050 086A  
                                    l3028 0C6E                                      l3204 09D6  
                                    l3140 04B4                                      l3132 0476  
                                    l3124 044E                                      l3116 0408  
                                    l3060 08B2                                      l3052 0870  
                                    l3220 0F18                                      l3300 0ED4  
                                    l3310 10BE                                      l3038 0CA0  
                                    l3206 0A14                                      l3142 04BA  
                                    l3134 0492                                      l3118 0410  
                                    l3070 08F6                                      l3062 08CE  
                                    l3054 0882                                      l3230 0F62  
                                    l3222 0F20                                      l3302 0EDA  
                                    l3312 10BE                                      l3144 04D6  
                                    l3128 0454                                      l3152 04DC  
                                    l3072 0912                                      l3056 0890  
                                    l3080 0918                                      l3320 0B74  
                                    l3224 0F3C                                      l3216 0F00  
                                    l3304 0EF6                                      l3240 12B4  
                                    l3314 10D2                                      l3090 0BFA  
                                    l3170 0B04                                      l3162 0AD4  
                                    l3138 0498                                      l3154 051A  
                                    l3066 08D4                                      l3058 08AC  
                                    l3082 0956                                      l3322 0B74  
                                    l3226 0F42                                      l3218 0F06  
                                    l3306 0EFC                                      l3242 12C4  
                                    l3234 1294                                      l3250 0E46  
                                    l3330 0DC2                                      l3316 10D6  
                                    l3092 0C00                                      l3172 0B1C  
                                    l3164 0AD4                                      l3068 08F0  
                                    l3324 0B88                                      l3228 0F5E  
                                    l3236 129A                                      l3252 0E50  
                                    l3260 0E94                                      l3340 0DEC  
                                    l3332 0DC2                                      l3190 0972  
                                    l3094 0C12                                      l3166 0AE8  
                                    l3326 0B8C                                      l3238 12AC  
                                    l3270 0668                                      l3254 0E6C  
                                    l3246 0E2E                                      l3342 0DFC  
                                    l3334 0DD6                                      l3350 125A  
                                    l3192 097A                                      l3168 0AEC  
                                    l3272 0698                                      l3264 064C  
                                    l3256 0E72                                      l3248 0E34  
                                    l3344 0E0C                                      l3336 0DDA  
                                    l3352 1276                                      l3194 0996  
                                    l3186 095A                                      l3178 0B34  
                                    l3274 06C8                                      l3282 0728  
                                    l3266 064C                                      l3258 0E8E  
                                    l3346 0E1C                                      l3338 0DEA  
                                    l3354 1284                                      l3196 099C  
                                    l3188 0960                                      l2900 13D2  
                                    l3292 0E98                                      l3276 06F8  
                                    l3284 0770                                      l3268 0660  
                                    l3356 143E                                      l3198 09B8  
                                    l2902 13DA                                      l2910 139E  
                                    l3630 0938                                      l3294 0E9E  
                                    l3640 0AB2                                      l2912 13A6  
                                    l3632 04FC                                      l3296 0EB0  
                                    l2920 11E0                                      l3642 0CC0  
                                    l2914 13AE                                      l2906 1386  
                                    l3634 0B54                                      l3298 0EB8  
                                    l2922 11F2                                      l2860 02B0  
                                    l3644 0632                                      l3636 0C4C  
                                    l2908 138C                                      l2924 1204  
                                    l2940 11C6                                      l2932 1194  
                                    l3628 074A                                      l3646 03D6  
                                    l2862 02C2                                      l3638 09F6  
                                    l2926 120C                                      l2918 11DA  
                                    l2942 11D6                                      l2934 119A  
                                    l2950 1166                                      l2872 03AA  
                                    l2864 02E0                                      l2928 121C  
                                    l2936 11AC                                      l2952 1178  
                                    l2960 1108                                      l2866 02E8  
                                    l2874 03EC                                      l2858 02AA  
                                    l2890 1406                                      l2882 13DE  
                                    l2938 11BE                                      l2954 1180  
                                    l2946 114E                                      l2970 114A  
                                    l2962 110E                                      l2868 034C  
                                    l2980 0554                                      l2884 13E4  
                                    l2956 1190                                      l2948 1154  
                                    l2964 1120                                      l2982 055C  
                                    l2990 0648                                      l2974 051E  
                                    l2886 13F6                                      l2894 13B2  
                                    l2966 1132                                      l2984 05C0  
                                    l2976 0524                                      l2888 13FE  
                                    l2896 13B8                                      l2968 113A  
                                    l2978 0536                                      l2898 13CA  
                                    l2988 061E                                      l2998 0A18  
                                    u3010 0A30                                      u3011 0A2C  
                                    u3004 05DC                                      u3020 0A54  
                                    u3100 0C12                                      u3005 05D8  
                                    u3021 0A50                                      u3101 0C0E  
                                    _LATA 000F89                                      u3030 0A76  
                                    u3110 0408                                      _LATB 000F8A  
                                    u3031 0A72                                      u3111 0404  
                                    _LATC 000F8B                                      u3040 0C86  
                                    u3200 0996                                      u3120 042C  
                                    _LATD 000F8C                                      u3041 0C82  
                                    u3201 0992                                      u3121 0428  
                                    _LATE 000F8D                                      u3210 09B8  
                                    u3130 044E                                      u3050 0882  
                                    u3211 09B4                                      u3131 044A  
                                    u3051 087E                                      u3140 0470  
                                    u3060 08AC                                      u3220 0F18  
                                    u3300 0EB0                                      u3141 046C  
                                    u3061 08A8                                      u3221 0F14  
                                    u3301 0EAC                                      u3150 0492  
                                    u3070 08CE                                      u3230 0F3C  
                                    u3310 0ED4                                      u3151 048E  
                                    u3071 08CA                                      u3231 0F38  
                                    u3311 0ED0                                      u3160 04B4  
                                    u3080 08F0                                      u3240 0F5E  
                                    u3320 0EF6                                      u3161 04B0  
                                    u3081 08EC                                      u3241 0F5A  
                                    u3321 0EF2                                      u3330 10D2  
                                    u3170 04D6                                      u3090 0912  
                                    u3250 12AC                                      u3331 10CE  
                                    u3171 04D2                                      u3091 090E  
                                    u3251 12A8                                      u3180 0AE8  
                                    u3340 0B88                                      u3260 0E46  
                                    u3181 0AE4                                      u3341 0B84  
                                    u3261 0E42                                      u3190 0972  
                                    u3270 0E6C                                      u3350 0DD6  
                                    u3191 096E                                      u3271 0E68  
                                    u3351 0DD2                                      u2800 02C2  
                                    u3280 0E8E                                      u2801 02BE  
                                    u3281 0E8A                                      u2810 02E0  
                                    u3290 0660                                      u2811 02DC  
                                    u3291 065C                                      u2900 1204  
                                    u2901 1200                                      u2910 11AC  
                                    u2911 11A8                                      u2840 03C2  
                                    u2824 0304                                      u2920 11BE  
                                    u2841 03BC                                      u2825 0300  
                                    u2921 11BA                                      u2850 03C4  
                                    u2834 0368                                      u2930 1166  
                                    u2835 0364                                      u2931 1162  
                                    u2860 13F6                                      u2940 1178  
                                    u2861 13F2                                      u2941 1174  
                                    u2870 13CA                                      u2950 1120  
                                    u2871 13C6                                      u2951 111C  
                                    u2880 139E                                      u2960 1132  
                                    u2881 139A                                      u2961 112E  
                                    _PIN1 002C                                      u2970 0536  
                                    u2890 11F2                                      _PIN2 002B  
                                    u2971 0532                                      u2891 11EE  
                                    u2980 0554                                      u2981 0550  
                                    u2994 0578                                      u2995 0574  
                                    i1l79 0D50                                      i2l79 0DC0  
                 ??_application_intialize 008F         __end_of_interrupt_INTx_clear_flag 0CE2  
                _RB4_InterruptHandler_LOW 0059             interrupt_RBx_enable@ret_value 0083  
                                    _main 143E                  _RB7_InterruptHandler_LOW 004D  
                                    fsr2h 000FDA                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0063                                      prodh 000FF4  
                                    prodl 000FF3                             ?_INT1_Handler 002D  
                                    start 02A6          GPIO_Pin_Toggle_Logic@_pin_config 003B  
      i2GPIO_Pin_Toggle_Logic@_pin_config 002D              __end_of_OnChanggeINT_Handler 1430  
                            ___param_bank 000000                   _interrupt_INTx_pin_init 0BFA  
                 _interrupt_INTx_set_edge 03F0            __size_of_interrupt_RBx_disable 0066  
           __end_of_interrupt_RBx_disable 0F66                          __end_of_INT0_ISR 135A  
                        __end_of_INT1_ISR 12FA                          __end_of_INT2_ISR 132A  
                                   ?_main 002D                                     i1l300 12F8  
                                   i1l221 015E                                     i1l213 005E  
                                   i1l231 026E                                     i1l223 019E  
                                   i1l215 009E                                     i1l152 142E  
                                   i1l313 10BC                                     i1l225 01DE  
                                   i1l217 00DE                                     i1l322 1066  
                                   i1l234 027E                                     i1l331 1010  
                                   i1l227 021E                                     i1l219 011E  
                                   i1l340 0FBA                                     i1l149 1420  
                                   i1l229 025E                                     i2l200 081E  
                                   i2l202 082E                                     i2l204 083E  
                                   i2l207 084E                                     i2l304 1328  
                                   i2l149 143C                                     i2l190 07CE  
                                   i2l192 07DE                                     i2l194 07EE  
                                   i2l196 07FE                                     i2l188 07AE  
                                   i2l198 080E                                     i2l296 1358  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                        _RB4_set_callback 11DA                                     _flags 001F  
                                   pclath 000FFA                                     tablat 000FF5  
                        ??i2_INT1_Handler 0035                                     ttemp5 0064  
                                   ttemp6 0067                                     ttemp7 006B  
                                   status 000FD8                   ?_interrupt_RBx_pin_init 0089  
                                   wtemp8 0064            interrupt_INTx_set_edge@int_obj 0080  
                          ??_INT1_Handler 0043                           __initialization 1220  
                            __end_of_main 144A            __size_of_GPIO_Pin_Toggle_Logic 0070  
           __end_of_GPIO_Pin_Toggle_Logic 0D52                             _lat_registers 000B  
          interrupt_INTx_pin_init@int_obj 0080                                    ??_main 008F  
                           __activetblptr 000002                                 ??_RB4_ISR 0043  
                               ??_RB5_ISR 0043                                 ??_RB6_ISR 0043  
                               ??_RB7_ISR 0043                     RB5_ISR@Handler_Select 0043  
               __size_of_RB6_set_callback 0046                                    i1l2220 0CE2  
                                  i1l2222 0CE2                                    i1l2224 0CF4  
                                  i1l2226 0CF8            __end_of_interrupt_RBx_pin_init 12CA  
                                  i1l2610 12DE                                    i1l2620 1090  
                                  i1l2612 106A                                    i1l2606 12CA  
                                  i1l2622 10A2                                    i1l2614 106C  
                                  i1l2630 102A                                    i1l2710 006C  
                                  i1l2608 12CC                                    i1l2632 103A  
                                  i1l2624 1014                                    i1l2720 00AC  
                                  i1l2712 007A                                    i1l2704 003E  
                                  i1l2618 1080                                    i1l2634 104C  
                                  i1l2626 1016                                    i1l2642 0FD4  
                                  i1l2650 0F6A                                    i1l2730 00EC  
                                  i1l2722 00BA                                    i1l2714 0088  
                                  i1l2706 004C                                    i1l2644 0FE4  
                                  i1l2636 0FBE                                    i1l2740 012C  
                                  i1l2732 00FA                                    i1l2724 00C8  
                                  i1l2716 0096                                    i1l2708 005A  
                                  i1l2582 1414                                    i1l2646 0FF6  
                                  i1l2638 0FC0                                    i1l2654 0F7E  
                                  i1l2750 016C                                    i1l2742 013A  
                                  i1l2734 0108                                    i1l2726 00D6  
                                  i1l2718 0098                                    i1l2584 1422  
                                  i1l2656 0F8E                                    i1l2648 0F68  
                                  i1l2760 01AC                                    i1l2752 017A  
                                  i1l2744 0148                                    i1l2736 0116  
                                  i1l2728 00D8                                    i1l2658 0FA0  
                                  i1l2770 01EC                                    i1l2762 01BA  
                                  i1l2754 0188                                    i1l2746 0156  
                                  i1l2738 0118                                    i1l2780 022C  
                                  i1l2772 01FA                                    i1l2764 01C8  
                                  i1l2756 0196                                    i1l2748 0158  
                                  i1l2790 026C                                    i1l2782 023A  
                                  i1l2774 0208                                    i1l2766 01D6  
                                  i1l2758 0198                                    i1l2784 0248  
                                  i1l2776 0216                                    i1l2768 01D8  
                                  i1l2794 027C                                    i1l2786 0256  
                                  i1l2778 0218                                    i1l2788 0258  
                                  i2l2600 12FA                                    i2l2602 12FC  
                                  i2l2532 0D52                                    i2l2604 130E  
                                  i2l2700 084C                                    i2l2534 0D52  
                                  i2l2536 0D64                                    i2l2538 0D68  
                                  i2l2670 07CA                                    i2l2662 078E  
                                  i2l2680 07FC                                    i2l2672 07DC  
                                  i2l2664 079C                                    i2l2586 1430  
                                  i2l2594 132A                                    i2l2666 07AA  
                                  i2l2596 132C                                    i2l2692 082C  
                                  i2l2684 080C                                    i2l2676 07EC  
                                  i2l2668 07BC                                    i2l2598 133E  
                                  i2l2696 083C                                    i2l2688 081C  
                ?i2_GPIO_Pin_Toggle_Logic 002D                 ??_interrupt_INTx_pin_init 0082  
      interrupt_INTx_set_priority@int_obj 0080                 ??_interrupt_INTx_set_edge 0082  
         ??_GPIO_Pin_Direction_Initialize 0082              interrupt_RBx_disable@int_obj 0080  
             __end_of_GPIO_Pin_Initialize 1108                      _interrupt_RBx_enable 0E98  
             interrupt_RBx_enable@int_obj 0080                                    clear_0 1246  
               RB4_set_callback@ret_value 0084             interrupt_INTx_disable@int_obj 0080  
                            __pdataCOMRAM 0001                 RB7_set_callback@ret_value 0084  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                          _RB5_set_callback 1194  
                    _OnChanggeINT_Handler 1422                INT0_set_callback@ret_value 0082  
                              __accesstop 0080                   __end_of__initialization 124C  
                               ?_INT0_ISR 002D                                 ?_INT1_ISR 002D  
                               ?_INT2_ISR 002D              ?_interrupt_INTx_set_callback 0083  
                           ___rparam_used 000001                     _interrupt_INTx_enable 095A  
        interrupt_INTx_clear_flag@int_obj 0080                            __pcstackCOMRAM 002D  
                       _INT0_set_callback 13DE              Interrupt_INTx_INIT@ret_value 008A  
                   ?_interrupt_RBx_enable 0080          interrupt_INTx_set_edge@ret_value 0084  
                      ?_INT0_set_callback 0080                  ??_interrupt_INTx_disable 0082  
         __end_of_interrupt_INTx_pin_init 0C6E                      __end_of_INT1_Handler 1422  
                     ??_INT0_set_callback 0082           __end_of_interrupt_INTx_set_edge 051E  
                   ?_OnChanggeINT_Handler 002D               __end_of_Interrupt_INTx_INIT 0BFA  
            ?_interrupt_INTx_set_priority 0080                 __size_of_RB7_set_callback 0046  
         __end_ofi2_GPIO_Pin_Toggle_Logic 0DC2       interrupt_RBx_set_callback@ret_value 0089  
                   _INT0_InterruptHandler 0061                                ??_INT0_ISR 0035  
                              ??_INT1_ISR 0043                                ??_INT2_ISR 0035  
          __size_of_application_intialize 003A             __end_of_application_intialize 1294  
           ??_interrupt_INTx_set_callback 0085                 __end_of_INT0_set_callback 140A  
                __end_of_RB4_set_callback 1220               __end_of_InterruptManagerLow 02A6  
             __size_of_Interrupt_RBx_INIT 006C     __end_of_GPIO_Pin_Direction_Initialize 03F0  
  __size_of_GPIO_Pin_Direction_Initialize 0146             _GPIO_Pin_Direction_Initialize 02AA  
       interrupt_RBx_set_priority@int_obj 0080                                   _RB4_ISR 1068  
                                 _RB5_ISR 1012                                   _RB6_ISR 0FBC  
                                 _RB7_ISR 0F66                 _RB6_InterruptHandler_HIGH 0053  
           __size_of_InterruptManagerHigh 0862                          _RB6_set_callback 114E  
           ??_interrupt_INTx_set_priority 0082             __size_of_GPIO_Pin_Write_Logic 012E  
                          _tris_registers 0015                  _RB6_InterruptHandler_LOW 0051  
                  ?_interrupt_INTx_enable 0080                ?_interrupt_INTx_clear_flag 0080  
                                 __Hparam 0000                                   __Lparam 0000  
        interrupt_INTx_pin_init@ret_value 0084         INT1_set_callback@InterruptHandler 0080  
                  ??_interrupt_RBx_enable 0082                         _INT1_set_callback 13B2  
                      ?_INT1_set_callback 0080                                   __pcinit 1220  
                                 __ramtop 1000                                   __ptext0 143E  
                                 __ptext1 125A                                   __ptext2 0DC2  
                                 __ptext3 0E2E                                   __ptext4 064C  
                                 __ptext5 1108                                   __ptext6 114E  
                                 __ptext7 1194                                   __ptext8 11DA  
                                 __ptext9 1294                     _interrupt_RBx_disable 0F00  
    __size_of_interrupt_INTx_set_callback 00A0           __size_of_interrupt_INTx_disable 00BC  
                  ??_OnChanggeINT_Handler 0043                       ??_INT1_set_callback 0082  
                          __pintcode_body 0774            interrupt_RBx_disable@ret_value 0083  
                    end_of_initialization 124C                                 _INTERUPT1 0026  
                           __Lmediumconst 0000                                   int_func 0774  
            ??_interrupt_RBx_set_callback 0087                __size_of_INT0_set_callback 002C  
               __end_of_INT1_set_callback 13DE                  __end_of_RB5_set_callback 11DA  
    __size_of_interrupt_INTx_set_priority 00F0                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                     __size_of_INT1_Handler 0018  
        __size_ofi2_GPIO_Pin_Toggle_Logic 0070                     _INT1_InterruptHandler 005F  
                               _PORTBbits 000F81                     _GPIO_Pin_Toggle_Logic 0CE2  
          ?_GPIO_Pin_Direction_Initialize 0080                                 _TRISBbits 000F93  
                   RB4_ISR@Handler_Select 0043                     RB7_ISR@Handler_Select 0043  
    RB7_set_callback@InterruptHandler_LOW 0082      RB6_set_callback@InterruptHandler_LOW 0082  
    RB5_set_callback@InterruptHandler_LOW 0082      RB4_set_callback@InterruptHandler_LOW 0082  
                        _RB7_set_callback 1108       __size_of_interrupt_RBx_set_callback 0128  
            ??_interrupt_RBx_set_priority 0082              interrupt_INTx_enable@int_obj 0080  
                  _interrupt_INTx_disable 0A18                              _INT1_Handler 140A  
                       __size_of_INT0_ISR 0030                         __size_of_INT1_ISR 0030  
                       __size_of_INT2_ISR 0030             interrupt_RBx_pin_init@int_obj 0089  
                 __size_ofi2_INT1_Handler 000E                         fp_i2_INT1_Handler 0000  
                       _INT2_set_callback 1386                    ?_interrupt_RBx_disable 0080  
                           __pidataCOMRAM 135A         INT0_set_callback@InterruptHandler 0080  
                      ?_INT2_set_callback 0080       __size_of_interrupt_RBx_set_priority 006A  
               RB6_set_callback@ret_value 0084              __size_of_GPIO_Pin_Initialize 004A  
                     start_initialization 1220                       ??_INT2_set_callback 0082  
         GPIO_Pin_Write_Logic@_pin_config 0080                  ?_interrupt_INTx_pin_init 0080  
              INT2_set_callback@ret_value 0082                  ?_interrupt_INTx_set_edge 0080  
               Interrupt_RBx_INIT@int_obj 008C     RB7_set_callback@InterruptHandler_HIGH 0080  
   RB6_set_callback@InterruptHandler_HIGH 0080     RB5_set_callback@InterruptHandler_HIGH 0080  
   RB4_set_callback@InterruptHandler_HIGH 0080                __size_of_INT1_set_callback 002C  
                  _INT1_Handler$intlevel1 1414                 __end_of_INT2_set_callback 13B2  
                       ?_RB4_set_callback 0080                  __end_of_RB6_set_callback 1194  
          GPIO_Pin_Initialize@_pin_config 008A       interrupt_RBx_set_priority@ret_value 0083  
                      ??_RB4_set_callback 0084                    ?_GPIO_Pin_Toggle_Logic 003B  
                       _INTERUPT_oncahnge 0020                                  ?_RB4_ISR 002D  
                                ?_RB5_ISR 002D                                  ?_RB6_ISR 002D  
                                ?_RB7_ISR 002D                               __pbssCOMRAM 004D  
                ??_interrupt_RBx_pin_init 008B                             __pcstackBANK0 0080  
                 fp__OnChanggeINT_Handler 0000                   ??_interrupt_INTx_enable 0082  
                   _INT2_InterruptHandler 005D              __size_of_Interrupt_INTx_INIT 0086  
      __end_of_interrupt_RBx_set_callback 0774                _interrupt_RBx_set_callback 064C  
             ??_interrupt_INTx_clear_flag 0082              __end_of_InterruptManagerHigh 086A  
                   _application_intialize 125A                __end_of_Interrupt_RBx_INIT 0E2E  
          interrupt_INTx_enable@ret_value 0084                                 __pintcode 0008  
            __end_of_GPIO_Pin_Write_Logic 064C           interrupt_INTx_disable@ret_value 0084  
         GPIO_Pin_Write_Logic@ERRORSTATUS 0089                   i2_GPIO_Pin_Toggle_Logic 0D52  
                             __pintcodelo 0018              __size_of_InterruptManagerLow 028E  
               _RB4_InterruptHandler_HIGH 005B                 _RB7_InterruptHandler_HIGH 004F  
      __end_of_interrupt_RBx_set_priority 0E98                _interrupt_RBx_set_priority 0E2E  
          GPIO_Pin_Initialize@ERRORSTATUS 008C       __end_of_interrupt_INTx_set_callback 0B74  
             _interrupt_INTx_set_callback 0AD4                  _RB5_InterruptHandler_LOW 0055  
                                _INT0_ISR 132A                                  _INT1_ISR 12CA  
                                _INT2_ISR 12FA                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  i1u212_20 12DE  
                                i1u220_20 104C                                  i1u212_21 12DA  
                                i1u220_21 1048                                  i1u213_28 12E4  
                                i1u214_20 107C                                  i1u221_28 1052  
                                i1u222_20 0FD0                                  i1u213_29 12F8  
                                i1u214_21 1078                                  i1u221_29 1066  
                                i1u222_21 0FCC                                  i1u215_20 1090  
                                i1u223_20 0FE4                                  i1u215_21 108C  
                                i1u223_21 0FE0                                  i1u216_20 10A2  
                                i1u224_20 0FF6                                  i1u216_21 109E  
                                i1u224_21 0FF2                                  i1u217_28 10A8  
                                i1u218_20 1026                                  i1u225_28 0FFC  
                                i1u226_20 0F7A                                  i1u250_20 00C8  
                                i1u242_20 004C                                  i1u217_29 10BC  
                                i1u218_21 1022                                  i1u225_29 1010  
                                i1u226_21 0F76                                  i1u250_21 00C4  
                                i1u242_21 0048                                  i1u170_24 0D14  
                                i1u170_25 0D10                                  i1u219_20 103A  
                                i1u227_20 0F8E                                  i1u251_20 00D6  
                                i1u243_20 005A                                  i1u219_21 1036  
                                i1u227_21 0F8A                                  i1u251_21 00D2  
                                i1u243_21 0056                                  i1u228_20 0FA0  
                                i1u260_20 016C                                  i1u252_20 00EC  
                                i1u244_20 006C                                  i1u228_21 0F9C  
                                i1u260_21 0168                                  i1u252_21 00E8  
                                i1u244_21 0068                                  i1u261_20 017A  
                                i1u253_20 00FA                                  i1u245_20 007A  
                                i1u261_21 0176                                  i1u253_21 00F6  
                                i1u245_21 0076                                  i1u229_28 0FA6  
                                i1u270_20 0208                                  i1u262_20 0188  
                                i1u254_20 0108                                  i1u246_20 0088  
                                i1u229_29 0FBA                                  i1u270_21 0204  
                                i1u262_21 0184                                  i1u254_21 0104  
                                i1u246_21 0084                                  i1u271_20 0216  
                                i1u263_20 0196                                  i1u255_20 0116  
                                i1u247_20 0096                                  i1u271_21 0212  
                                i1u263_21 0192                                  i1u255_21 0112  
                                i1u247_21 0092                                  i1u272_20 022C  
                                i1u264_20 01AC                                  i1u256_20 012C  
                                i1u248_20 00AC                                  i1u272_21 0228  
                                i1u264_21 01A8                                  i1u256_21 0128  
                                i1u248_21 00A8                                  i1u169_20 0CF4  
                                i1u273_20 023A                                  i1u265_20 01BA  
                                i1u257_20 013A                                  i1u249_20 00BA  
                                i1u169_21 0CF0                                  i1u273_21 0236  
                                i1u265_21 01B6                                  i1u257_21 0136  
                                i1u249_21 00B6                                  i1u274_20 0248  
                                i1u266_20 01C8                                  i1u258_20 0148  
                                i1u274_21 0244                                  i1u266_21 01C4  
                                i1u258_21 0144                                  i2u210_40 130E  
                                i2u210_41 130A                                  i1u275_20 0256  
                                i1u267_20 01D6                                  i1u259_20 0156  
                                i1u275_21 0252                                  i1u267_21 01D2  
                                i1u259_21 0152                                  i2u203_40 0D64  
                                i2u203_41 0D60                                  i1u276_20 026C  
                                i1u268_20 01EC                                  i1u276_21 0268  
                                i1u268_21 01E8                                  i2u211_48 1314  
                                i2u211_49 1328                                  i2u204_44 0D84  
                                i1u277_20 027C                                  i1u269_20 01FA  
                                i2u204_45 0D80                                  i1u277_21 0278  
                                i1u269_21 01F6                                  i2u230_40 079C  
                                i2u230_41 0798                                  i2u231_40 07AA  
                                i2u231_41 07A6                                  i2u208_40 133E  
                                i2u240_40 083C                                  i2u232_40 07BC  
                                i2u208_41 133A                                  i2u240_41 0838  
                                i2u232_41 07B8                                  i2u241_40 084C  
                                i2u233_40 07CA                                  i2u241_41 0848  
                                i2u233_41 07C6                                  i2u209_48 1344  
                                i2u234_40 07DC                                  i2u209_49 1358  
                                i2u234_41 07D8                                  i2u235_40 07EC  
                                i2u235_41 07E8                                  i2u236_40 07FC  
                                i2u236_41 07F8                                  i2u237_40 080C  
                                i2u237_41 0808                                  i2u238_40 081C  
                                i2u238_41 0818                                  i2u239_40 082C  
                                i2u239_41 0828                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                __size_of_INT2_set_callback 002C  
                                _RCONbits 000FD0                            i2_INT1_Handler 1430  
                       ?_RB5_set_callback 0080                  __end_of_RB7_set_callback 114E  
           __size_of_interrupt_RBx_enable 0068                        ??_RB5_set_callback 0084  
               _interrupt_INTx_clear_flag 0C6E                          __size_of_RB4_ISR 0056  
                        __size_of_RB5_ISR 0056                          __size_of_RB6_ISR 0056  
                        __size_of_RB7_ISR 0056       __end_of_interrupt_INTx_set_priority 095A  
             _interrupt_INTx_set_priority 086A           __size_of_interrupt_RBx_pin_init 0036  
           __size_of_OnChanggeINT_Handler 000E                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 1234  
                 ?_interrupt_INTx_disable 0080                    ?_application_intialize 002D  
                     _GPIO_Pin_Initialize 10BE                    __end_ofi2_INT1_Handler 143E  
                                __Hrparam 0000      interrupt_INTx_set_priority@ret_value 0084  
                                __Lrparam 0000                 ??i2_GPIO_Pin_Toggle_Logic 002F  
                 ??_interrupt_RBx_disable 0082                 GPIO_Pin_Write_Logic@logic 0082  
                    ?_GPIO_Pin_Initialize 008A                     RB6_ISR@Handler_Select 0043  
                    _InterruptManagerHigh 0008                                  __ptext10 0E98  
                                __ptext11 0F00                                  __ptext20 095A  
                                __ptext12 0B74                                  __ptext21 0A18  
                                __ptext13 086A                                  __ptext30 1068  
                                __ptext22 0C6E                                  __ptext14 03F0  
                                __ptext31 1422                                  __ptext23 10BE  
                                __ptext15 0AD4                                  __ptext40 0000  
                                __ptext32 12CA                                  __ptext24 051E  
                                __ptext16 1386                                  __ptext33 140A  
                                __ptext25 02AA                                  __ptext17 13B2  
                                __ptext34 0CE2                                  __ptext18 13DE  
                                __ptext27 0F66                                  __ptext19 0BFA  
                                __ptext36 12FA                                  __ptext28 0FBC  
                                __ptext37 132A                                  __ptext29 1012  
                                __ptext38 1430                                  __ptext39 0D52  
          __end_of_interrupt_INTx_disable 0AD4                      _GPIO_Pin_Write_Logic 051E  
       INT2_set_callback@InterruptHandler 0080                             __size_of_main 000C  
      interrupt_INTx_clear_flag@ret_value 0084                           ?i2_INT1_Handler 002D  
                  _interrupt_RBx_pin_init 1294                   ??_GPIO_Pin_Toggle_Logic 003D  
              Interrupt_INTx_INIT@int_obj 0088        interrupt_INTx_set_callback@int_obj 0083  
                       ?_RB6_set_callback 0080                                  int$flags 0063  
        __size_of_interrupt_INTx_pin_init 0074          __size_of_interrupt_INTx_set_edge 012E  
                      ??_RB6_set_callback 0084                       _Interrupt_INTx_INIT 0B74  
               RB5_set_callback@ret_value 0084                     ??_GPIO_Pin_Initialize 008C  
                              _INTCONbits 000FF2                     ?_InterruptManagerHigh 002D  
               __size_of_RB4_set_callback 0046                     ?_GPIO_Pin_Write_Logic 0080  
                                intlevel1 0000                                  intlevel2 0000  
              INT1_set_callback@ret_value 0082            __size_of_interrupt_INTx_enable 00BE  
                     _InterruptManagerLow 0018             __end_of_interrupt_INTx_enable 0A18  
                    ?_Interrupt_INTx_INIT 0088  GPIO_Pin_Direction_Initialize@_pin_config 0080  
             ?_interrupt_RBx_set_callback 0085           interrupt_RBx_pin_init@ret_value 008B  
                    ?_InterruptManagerLow 002D                        _Interrupt_RBx_INIT 0DC2  
                          _port_registers 0001               Interrupt_RBx_INIT@ret_value 008E  
             ?_interrupt_RBx_set_priority 0080                       ?_Interrupt_RBx_INIT 008C  
      __size_of_interrupt_INTx_clear_flag 0074                           fp__INT1_Handler 0000  
                   ??_Interrupt_INTx_INIT 008A  
