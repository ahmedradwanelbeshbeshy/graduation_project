

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 03 10:09:34 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   104                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   105  0000                     
   106                           ; Version 2.20
   107                           ; Generated 05/05/2020 GMT
   108                           ; 
   109                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F46K20 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	idataCOMRAM
   142  004C4C                     __pidataCOMRAM:
   143                           	callstack 0
   144                           
   145                           ;initializer for _datasend
   146  004C4C  77                 	db	119
   147                           
   148                           ;initializer for _blue
   149  004C4D  01                 	db	1
   150                           
   151                           ;initializer for _gps
   152  004C4E  01                 	db	1
   153                           
   154                           ;initializer for _flags
   155  004C4F  0F                 	db	15
   156                           
   157                           ;initializer for _stepper_base
   158  004C50  1B                 	db	27
   159  004C51  1A                 	db	26
   160                           
   161                           ;initializer for _selector
   162  004C52  9C                 	db	156
   163                           
   164                           ;initializer for _TEST_PIN
   165  004C53  10                 	db	16
   166                           
   167                           	psect	idataBANK0
   168  004A00                     __pidataBANK0:
   169                           	callstack 0
   170                           
   171                           ;initializer for _lat_registers
   172  004A00  89                 	db	137
   173  004A01  0F                 	db	15
   174  004A02  8A                 	db	138
   175  004A03  0F                 	db	15
   176  004A04  8B                 	db	139
   177  004A05  0F                 	db	15
   178  004A06  8C                 	db	140
   179  004A07  0F                 	db	15
   180  004A08  8D                 	db	141
   181  004A09  0F                 	db	15
   182                           
   183                           ;initializer for _tris_registers
   184  004A0A  92                 	db	146
   185  004A0B  0F                 	db	15
   186  004A0C  93                 	db	147
   187  004A0D  0F                 	db	15
   188  004A0E  94                 	db	148
   189  004A0F  0F                 	db	15
   190  004A10  95                 	db	149
   191  004A11  0F                 	db	15
   192  004A12  96                 	db	150
   193  004A13  0F                 	db	15
   194                           
   195                           ;initializer for _CCP1_Obj
   196  004A14  00                 	db	0
   197  004A15  02                 	db	2
   198  004A16  00                 	db	0
   199  004A17  12                 	db	18
   200  004A18  00                 	db	0
   201  004A19  01F4               	dw	500
   202  004A1B  0000               	dw	0
   203  004A1D  F9                 	db	249
   204  004A1E  00                 	db	0
   205  004A1F  0F                 	db	15
   206                           
   207                           ;initializer for _i2c_obj
   208  004A20  86A0               	dw	34464
   209  004A22  0001               	dw	1
   210  004A24  08                 	db	8
   211  004A25  00                 	db	0
   212  004A26  03                 	db	3
   213                           
   214                           ;initializer for _servo_driver_obj
   215  004A27  80                 	db	128
   216  004A28  79                 	db	121
   217  004A29  21                 	db	33
   218  004A2A  04                 	db	4
   219                           
   220                           ;initializer for _ultrasonic
   221  004A2B  0B                 	db	11
   222  004A2C  4A                 	db	74
   223                           
   224                           ;initializer for _W2_W4_W6_Motor_Control
   225  004A2D  19                 	db	25
   226                           
   227                           ;initializer for _W1_W3_W5_Motor_Control
   228  004A2E  18                 	db	24
   229                           
   230                           	psect	idataBANK1
   231  004BA4                     __pidataBANK1:
   232                           	callstack 0
   233                           
   234                           ;initializer for _port_registers
   235  004BA4  80                 	db	128
   236  004BA5  0F                 	db	15
   237  004BA6  81                 	db	129
   238  004BA7  0F                 	db	15
   239  004BA8  82                 	db	130
   240  004BA9  0F                 	db	15
   241  004BAA  83                 	db	131
   242  004BAB  0F                 	db	15
   243  004BAC  84                 	db	132
   244  004BAD  0F                 	db	15
   245                           
   246                           ;initializer for __uart_obj
   247  004BAE  2580               	dw	9600
   248  004BB0  04                 	db	4
   249  004BB1  CE                 	db	low _usart_isr
   250  004BB2  49                 	db	high _usart_isr
   251  004BB3  00                 	db	0
   252  004BB4  00                 	db	0
   253  004BB5  00                 	db	0
   254  004BB6  00                 	db	0
   255  004BB7  09                 	db	9
   256  004BB8  00                 	db	0
   257  004BB9  00                 	db	0
   258                           
   259                           ;initializer for _CCP2_Obj
   260  004BBA  01                 	db	1
   261  004BBB  02                 	db	2
   262  004BBC  00                 	db	0
   263  004BBD  11                 	db	17
   264  004BBE  00                 	db	0
   265  004BBF  01F4               	dw	500
   266  004BC1  0000               	dw	0
   267  004BC3  F9                 	db	249
   268  004BC4  00                 	db	0
   269  004BC5  0F                 	db	15
   270  0000                     _TMR2	set	4044
   271  0000                     _T2CONbits	set	4042
   272  0000                     _TMR1L	set	4046
   273  0000                     _TMR1H	set	4047
   274  0000                     _T1CONbits	set	4045
   275  0000                     _INTCON2bits	set	4081
   276  0000                     _SSPBUF	set	4041
   277  0000                     _SSPSTATbits	set	4039
   278  0000                     _SSPADD	set	4040
   279  0000                     _SSPCON2bits	set	4037
   280  0000                     _SSPCON1bits	set	4038
   281  0000                     _SPBRGH	set	4016
   282  0000                     _SPBRG	set	4015
   283  0000                     _RCONbits	set	4048
   284  0000                     _RCREG	set	4014
   285  0000                     _TXREG	set	4013
   286  0000                     _TRISCbits	set	3988
   287  0000                     _TXSTA1bits	set	4012
   288  0000                     _PR2	set	4043
   289  0000                     _ADCON1bits	set	4033
   290  0000                     _ADRESL	set	4035
   291  0000                     _ADRESH	set	4036
   292  0000                     _TRISD	set	3989
   293  0000                     _TRISB	set	3987
   294  0000                     _TRISE	set	3990
   295  0000                     _PORTDbits	set	3971
   296  0000                     _LATDbits	set	3980
   297  0000                     _TRISDbits	set	3989
   298  0000                     _TRISBbits	set	3987
   299  0000                     _PORTBbits	set	3969
   300  0000                     _RCSTA1bits	set	4011
   301  0000                     _TXSTAbits	set	4012
   302  0000                     _TRISC	set	3988
   303  0000                     _RX9D	set	32088
   304  0000                     _ADCON2bits	set	4032
   305  0000                     _ADCON0bits	set	4034
   306  0000                     _PORTA	set	3968
   307  0000                     _LATA	set	3977
   308  0000                     _TRISA	set	3986
   309  0000                     _PIE1bits	set	3997
   310  0000                     _RCSTAbits	set	4011
   311  0000                     _T3CONbits	set	4017
   312  0000                     _CCP2CONbits	set	4026
   313  0000                     _CCP1CONbits	set	4029
   314  0000                     _CCPR1L	set	4030
   315  0000                     _CCPR2L	set	4027
   316  0000                     _BAUDCONbits	set	4024
   317  0000                     _PIR2bits	set	4001
   318  0000                     _PIE2bits	set	4000
   319  0000                     _IPR1bits	set	3999
   320  0000                     _PIR1bits	set	3998
   321  0000                     _WDTCONbits	set	4049
   322  0000                     _T0CONbits	set	4053
   323  0000                     _INTCON3bits	set	4080
   324  0000                     _INTCONbits	set	4082
   325  0000                     _LATE	set	3981
   326  0000                     _LATD	set	3980
   327  0000                     _LATC	set	3979
   328  0000                     _LATB	set	3978
   329  0000                     _PORTE	set	3972
   330  0000                     _PORTD	set	3971
   331  0000                     _PORTC	set	3970
   332  0000                     _PORTB	set	3969
   333  0000                     _TMR0H	set	4055
   334  0000                     _TMR0L	set	4054
   335                           
   336                           	psect	smallconst
   337  001000                     __psmallconst:
   338                           	callstack 0
   339  001000  00                 	db	0
   340  001001  41                 	db	65	;'A'
   341  001002  54                 	db	84	;'T'
   342  001003  2B                 	db	43
   343  001004  55                 	db	85	;'U'
   344  001005  41                 	db	65	;'A'
   345  001006  52                 	db	82	;'R'
   346  001007  54                 	db	84	;'T'
   347  001008  3A                 	db	58	;':'
   348  001009  39                 	db	57	;'9'
   349  00100A  36                 	db	54	;'6'
   350  00100B  30                 	db	48	;'0'
   351  00100C  30                 	db	48	;'0'
   352  00100D  2C                 	db	44
   353  00100E  30                 	db	48	;'0'
   354  00100F  2C                 	db	44
   355  001010  30                 	db	48	;'0'
   356  001011  0D                 	db	13
   357  001012  0A                 	db	10
   358  001013  00                 	db	0
   359  001014  41                 	db	65	;'A'
   360  001015  54                 	db	84	;'T'
   361  001016  2B                 	db	43
   362  001017  52                 	db	82	;'R'
   363  001018  4E                 	db	78	;'N'
   364  001019  41                 	db	65	;'A'
   365  00101A  4D                 	db	77	;'M'
   366  00101B  45                 	db	69	;'E'
   367  00101C  3A                 	db	58	;':'
   368  00101D  52                 	db	82	;'R'
   369  00101E  6F                 	db	111	;'o'
   370  00101F  62                 	db	98	;'b'
   371  001020  6F                 	db	111	;'o'
   372  001021  74                 	db	116	;'t'
   373  001022  0D                 	db	13
   374  001023  0A                 	db	10
   375  001024  00                 	db	0
   376  001025  41                 	db	65	;'A'
   377  001026  54                 	db	84	;'T'
   378  001027  2B                 	db	43
   379  001028  50                 	db	80	;'P'
   380  001029  53                 	db	83	;'S'
   381  00102A  57                 	db	87	;'W'
   382  00102B  44                 	db	68	;'D'
   383  00102C  3A                 	db	58	;':'
   384  00102D  31                 	db	49	;'1'
   385  00102E  32                 	db	50	;'2'
   386  00102F  33                 	db	51	;'3'
   387  001030  34                 	db	52	;'4'
   388  001031  0D                 	db	13
   389  001032  0A                 	db	10
   390  001033  00                 	db	0
   391  001034  41                 	db	65	;'A'
   392  001035  54                 	db	84	;'T'
   393  001036  2B                 	db	43
   394  001037  52                 	db	82	;'R'
   395  001038  4F                 	db	79	;'O'
   396  001039  4C                 	db	76	;'L'
   397  00103A  45                 	db	69	;'E'
   398  00103B  3A                 	db	58	;':'
   399  00103C  30                 	db	48	;'0'
   400  00103D  0D                 	db	13
   401  00103E  0A                 	db	10
   402  00103F  00                 	db	0
   403  001040                     STR_9:
   404  001040  25                 	db	37
   405  001041  66                 	db	102	;'f'
   406  001042  00                 	db	0
   407  001043                     STR_5:
   408  001043  25                 	db	37
   409  001044  69                 	db	105	;'i'
   410  001045  00                 	db	0
   411  001046  00                 	db	0	; dummy byte at the end
   412  0000                     
   413                           ; #config settings
   414                           
   415                           	psect	cinit
   416  0040C4                     __pcinit:
   417                           	callstack 0
   418  0040C4                     start_initialization:
   419                           	callstack 0
   420  0040C4                     __initialization:
   421                           	callstack 0
   422                           
   423                           ; Initialize objects allocated to BANK1 (34 bytes)
   424                           ; load TBLPTR registers with __pidataBANK1
   425  0040C4  0EA4               	movlw	low __pidataBANK1
   426  0040C6  6EF6               	movwf	tblptrl,c
   427  0040C8  0E4B               	movlw	high __pidataBANK1
   428  0040CA  6EF7               	movwf	tblptrh,c
   429  0040CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   430  0040CE  6EF8               	movwf	tblptru,c
   431  0040D0  EE01  F029         	lfsr	0,__pdataBANK1
   432  0040D4  EE10 F022          	lfsr	1,34
   433  0040D8                     copy_data0:
   434  0040D8  0009               	tblrd		*+
   435  0040DA  CFF5 FFEE          	movff	tablat,postinc0
   436  0040DE  50E5               	movf	postdec1,w,c
   437  0040E0  50E1               	movf	fsr1l,w,c
   438  0040E2  E1FA               	bnz	copy_data0
   439                           
   440                           ; Initialize objects allocated to BANK0 (47 bytes)
   441                           ; load TBLPTR registers with __pidataBANK0
   442  0040E4  0E00               	movlw	low __pidataBANK0
   443  0040E6  6EF6               	movwf	tblptrl,c
   444  0040E8  0E4A               	movlw	high __pidataBANK0
   445  0040EA  6EF7               	movwf	tblptrh,c
   446  0040EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   447  0040EE  6EF8               	movwf	tblptru,c
   448  0040F0  EE00  F0A6         	lfsr	0,__pdataBANK0
   449  0040F4  EE10 F02F          	lfsr	1,47
   450  0040F8                     copy_data1:
   451  0040F8  0009               	tblrd		*+
   452  0040FA  CFF5 FFEE          	movff	tablat,postinc0
   453  0040FE  50E5               	movf	postdec1,w,c
   454  004100  50E1               	movf	fsr1l,w,c
   455  004102  E1FA               	bnz	copy_data1
   456                           
   457                           ; Initialize objects allocated to COMRAM (8 bytes)
   458                           ; load TBLPTR registers with __pidataCOMRAM
   459  004104  0E4C               	movlw	low __pidataCOMRAM
   460  004106  6EF6               	movwf	tblptrl,c
   461  004108  0E4C               	movlw	high __pidataCOMRAM
   462  00410A  6EF7               	movwf	tblptrh,c
   463  00410C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   464  00410E  6EF8               	movwf	tblptru,c
   465  004110  EE00  F03A         	lfsr	0,__pdataCOMRAM
   466  004114  EE10 F008          	lfsr	1,8
   467  004118                     copy_data2:
   468  004118  0009               	tblrd		*+
   469  00411A  CFF5 FFEE          	movff	tablat,postinc0
   470  00411E  50E5               	movf	postdec1,w,c
   471  004120  50E1               	movf	fsr1l,w,c
   472  004122  E1FA               	bnz	copy_data2
   473                           
   474                           ; Clear objects allocated to BANK1 (41 bytes)
   475  004124  EE01  F000         	lfsr	0,__pbssBANK1
   476  004128  0E29               	movlw	41
   477  00412A                     clear_0:
   478  00412A  6AEE               	clrf	postinc0,c
   479  00412C  06E8               	decf	wreg,f,c
   480  00412E  E1FD               	bnz	clear_0
   481                           
   482                           ; Clear objects allocated to BANK0 (43 bytes)
   483  004130  EE00  F0D5         	lfsr	0,__pbssBANK0
   484  004134  0E2B               	movlw	43
   485  004136                     clear_1:
   486  004136  6AEE               	clrf	postinc0,c
   487  004138  06E8               	decf	wreg,f,c
   488  00413A  E1FD               	bnz	clear_1
   489                           
   490                           ; Clear objects allocated to COMRAM (21 bytes)
   491  00413C  EE00  F025         	lfsr	0,__pbssCOMRAM
   492  004140  0E15               	movlw	21
   493  004142                     clear_2:
   494  004142  6AEE               	clrf	postinc0,c
   495  004144  06E8               	decf	wreg,f,c
   496  004146  E1FD               	bnz	clear_2
   497  004148                     end_of_initialization:
   498                           	callstack 0
   499  004148                     __end_of__initialization:
   500                           	callstack 0
   501  004148  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   502  00414A  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   503  00414C  0100               	movlb	0
   504  00414E  EFB7  F00E         	goto	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMRAM
   507  000025                     __pbssCOMRAM:
   508                           	callstack 0
   509  000025                     _Timer1_PreLoaded_Value_Store:
   510                           	callstack 0
   511  000025                     	ds	2
   512  000027                     _INT1_InterruptHandler:
   513                           	callstack 0
   514  000027                     	ds	2
   515  000029                     _eusart_Rx_InterruptHandler:
   516                           	callstack 0
   517  000029                     	ds	2
   518  00002B                     _i:
   519                           	callstack 0
   520  00002B                     	ds	1
   521  00002C                     _counter:
   522                           	callstack 0
   523  00002C                     	ds	1
   524  00002D                     _stepper_pos:
   525                           	callstack 0
   526  00002D                     	ds	1
   527  00002E                     _servo4Pos:
   528                           	callstack 0
   529  00002E                     	ds	1
   530  00002F                     _servo3Pos:
   531                           	callstack 0
   532  00002F                     	ds	1
   533  000030                     _servo2Pos:
   534                           	callstack 0
   535  000030                     	ds	1
   536  000031                     _servo1Pos:
   537                           	callstack 0
   538  000031                     	ds	1
   539  000032                     _Timer2_PreLoaded_Value_Store:
   540                           	callstack 0
   541  000032                     	ds	1
   542  000033                     _Checksum:
   543                           	callstack 0
   544  000033                     	ds	1
   545  000034                     _T_Integral:
   546                           	callstack 0
   547  000034                     	ds	1
   548  000035                     _T_Decimal:
   549                           	callstack 0
   550  000035                     	ds	1
   551  000036                     _RH_Integral:
   552                           	callstack 0
   553  000036                     	ds	1
   554  000037                     _RH_Decimal:
   555                           	callstack 0
   556  000037                     	ds	1
   557  000038                     _datarecive:
   558                           	callstack 0
   559  000038                     	ds	1
   560  000039                     _gpstemp:
   561                           	callstack 0
   562  000039                     	ds	1
   563                           
   564                           	psect	dataCOMRAM
   565  00003A                     __pdataCOMRAM:
   566                           	callstack 0
   567  00003A                     _datasend:
   568                           	callstack 0
   569  00003A                     	ds	1
   570  00003B                     _blue:
   571                           	callstack 0
   572  00003B                     	ds	1
   573  00003C                     _gps:
   574                           	callstack 0
   575  00003C                     	ds	1
   576  00003D                     _flags:
   577                           	callstack 0
   578  00003D                     	ds	1
   579  00003E                     _stepper_base:
   580                           	callstack 0
   581  00003E                     	ds	2
   582  000040                     _selector:
   583                           	callstack 0
   584  000040                     	ds	1
   585  000041                     _TEST_PIN:
   586                           	callstack 0
   587  000041                     	ds	1
   588                           
   589                           	psect	bssBANK0
   590  0000D5                     __pbssBANK0:
   591                           	callstack 0
   592  0000D5                     _Timer1_Interrupt_Handler:
   593                           	callstack 0
   594  0000D5                     	ds	2
   595  0000D7                     _preloaded_val:
   596                           	callstack 0
   597  0000D7                     	ds	2
   598  0000D9                     _RB7_InterruptHandler_LOW:
   599                           	callstack 0
   600  0000D9                     	ds	2
   601  0000DB                     _RB7_InterruptHandler_HIGH:
   602                           	callstack 0
   603  0000DB                     	ds	2
   604  0000DD                     _RB6_InterruptHandler_LOW:
   605                           	callstack 0
   606  0000DD                     	ds	2
   607  0000DF                     _RB6_InterruptHandler_HIGH:
   608                           	callstack 0
   609  0000DF                     	ds	2
   610  0000E1                     _RB5_InterruptHandler_LOW:
   611                           	callstack 0
   612  0000E1                     	ds	2
   613  0000E3                     _RB5_InterruptHandler_HIGH:
   614                           	callstack 0
   615  0000E3                     	ds	2
   616  0000E5                     _RB4_InterruptHandler_LOW:
   617                           	callstack 0
   618  0000E5                     	ds	2
   619  0000E7                     _RB4_InterruptHandler_HIGH:
   620                           	callstack 0
   621  0000E7                     	ds	2
   622  0000E9                     _INT2_InterruptHandler:
   623                           	callstack 0
   624  0000E9                     	ds	2
   625  0000EB                     _INT0_InterruptHandler:
   626                           	callstack 0
   627  0000EB                     	ds	2
   628  0000ED                     	ds	2
   629  0000EF                     	ds	2
   630  0000F1                     	ds	2
   631  0000F3                     _eusart_frameerr_CallBack:
   632                           	callstack 0
   633  0000F3                     	ds	2
   634  0000F5                     _eusart_overrunerr_CallBack:
   635                           	callstack 0
   636  0000F5                     	ds	2
   637  0000F7                     _Movement_State:
   638                           	callstack 0
   639  0000F7                     	ds	1
   640  0000F8                     _timer0:
   641                           	callstack 0
   642  0000F8                     	ds	4
   643  0000FC                     _distance:
   644                           	callstack 0
   645  0000FC                     	ds	4
   646                           
   647                           	psect	dataBANK0
   648  0000A6                     __pdataBANK0:
   649                           	callstack 0
   650  0000A6                     _lat_registers:
   651                           	callstack 0
   652  0000A6                     	ds	10
   653  0000B0                     _tris_registers:
   654                           	callstack 0
   655  0000B0                     	ds	10
   656  0000BA                     _CCP1_Obj:
   657                           	callstack 0
   658  0000BA                     	ds	12
   659  0000C6                     _i2c_obj:
   660                           	callstack 0
   661  0000C6                     	ds	7
   662  0000CD                     _servo_driver_obj:
   663                           	callstack 0
   664  0000CD                     	ds	4
   665  0000D1                     _ultrasonic:
   666                           	callstack 0
   667  0000D1                     	ds	2
   668  0000D3                     _W2_W4_W6_Motor_Control:
   669                           	callstack 0
   670  0000D3                     	ds	1
   671  0000D4                     _W1_W3_W5_Motor_Control:
   672                           	callstack 0
   673  0000D4                     	ds	1
   674                           
   675                           	psect	bssBANK1
   676  000100                     __pbssBANK1:
   677                           	callstack 0
   678  000100                     	ds	9
   679  000109                     	ds	6
   680  00010F                     _longtude:
   681                           	callstack 0
   682  00010F                     	ds	13
   683  00011C                     _latitude:
   684                           	callstack 0
   685  00011C                     	ds	13
   686                           
   687                           	psect	dataBANK1
   688  000129                     __pdataBANK1:
   689                           	callstack 0
   690  000129                     _port_registers:
   691                           	callstack 0
   692  000129                     	ds	10
   693  000133                     __uart_obj:
   694                           	callstack 0
   695  000133                     	ds	12
   696  00013F                     _CCP2_Obj:
   697                           	callstack 0
   698  00013F                     	ds	12
   699                           
   700                           	psect	cstackBANK1
   701  00014B                     __pcstackBANK1:
   702                           	callstack 0
   703  00014B                     ??___fladd:
   704                           
   705                           ; 1 bytes @ 0x0
   706  00014B                     	ds	4
   707  00014F                     ___fladd@signs:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x4
   711  00014F                     	ds	1
   712  000150                     ___fladd@aexp:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x5
   716  000150                     	ds	1
   717  000151                     ___fladd@bexp:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x6
   721  000151                     	ds	1
   722  000152                     ___fladd@grs:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x7
   726  000152                     	ds	1
   727  000153                     ?___fltol:
   728                           	callstack 0
   729  000153                     ___fltol@f1:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x8
   733  000153                     	ds	4
   734  000157                     ??___fltol:
   735                           
   736                           ; 1 bytes @ 0xC
   737  000157                     	ds	4
   738  00015B                     Servo_SetAngle@i2c_obj:
   739                           	callstack 0
   740  00015B                     CCP_PWM_Set_Duty@_ccp_obj:
   741                           	callstack 0
   742  00015B                     MSSP_I2C_Init@i2c_obj:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x10
   746  00015B                     	ds	2
   747  00015D                     CCP_PWM_Set_Duty@_duty:
   748                           	callstack 0
   749  00015D                     ServoDriver_Init@i2c_obj:
   750                           	callstack 0
   751  00015D                     Servo_SetAngle@servo_driver_obj:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x12
   755  00015D                     	ds	1
   756  00015E                     _CCP_PWM_Set_Duty$5751:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x13
   760  00015E                     	ds	1
   761  00015F                     Servo_SetAngle@servo_no:
   762                           	callstack 0
   763  00015F                     ServoDriver_Init@servo_driver_obj:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x14
   767  00015F                     	ds	1
   768  000160                     Servo_SetAngle@angle:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x15
   772  000160                     	ds	1
   773  000161                     Servo_SetAngle@angle_in_reg:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x16
   777  000161                     	ds	1
   778  000162                     CCP_PWM_Set_Duty@l_duty_temp:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x17
   782  000162                     	ds	1
   783  000163                     Servo_SetAngle@reg_addrees:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x18
   787  000163                     	ds	1
   788  000164                     ??_main:
   789                           
   790                           ; 1 bytes @ 0x19
   791  000164                     	ds	2
   792                           
   793                           	psect	cstackBANK0
   794  000060                     __pcstackBANK0:
   795                           	callstack 0
   796  000060                     ??_GPIO_Pin_Write_Logic:
   797  000060                     ??_GPIO_Pin_Read_Logic:
   798  000060                     ??_GPIO_Pin_Direction_Initialize:
   799  000060                     ??_HAL_Timer0_Init:
   800  000060                     ??_HAL_Timer0_Read_Val:
   801  000060                     ??___xxtofl:
   802  000060                     CCP_Capture_Mode_Config@ret:
   803                           	callstack 0
   804  000060                     CCP_Compare_Mode_Config@ret:
   805                           	callstack 0
   806  000060                     PCA_Write_Reg@i2c_obj:
   807                           	callstack 0
   808  000060                     EUSART_Async_Read_Data@_eusart_obj:
   809                           	callstack 0
   810  000060                     Get_Temp_HUM@RH_Decimal:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x0
   814  000060                     	ds	2
   815  000062                     PCA_Write_Reg@slave_address:
   816                           	callstack 0
   817  000062                     EUSART_Async_Read_Data@data:
   818                           	callstack 0
   819  000062                     Get_Temp_HUM@RH_Integral:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x2
   823  000062                     	ds	1
   824  000063                     PCA_Write_Reg@reg_address:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x3
   828  000063                     	ds	1
   829  000064                     PCA_Write_Reg@data:
   830                           	callstack 0
   831  000064                     ___xxtofl@sign:
   832                           	callstack 0
   833  000064                     _EUSART_Async_Read_Data$2031:
   834                           	callstack 0
   835  000064                     Get_Temp_HUM@T_Decimal:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x4
   839  000064                     	ds	1
   840  000065                     ___xxtofl@exp:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x5
   844  000065                     	ds	1
   845  000066                     ??_Ecu_Stepper_Step:
   846  000066                     ECU_DC_Motor_Init@dc_motor:
   847                           	callstack 0
   848  000066                     Ecu_Stepper_Init@stepper:
   849                           	callstack 0
   850  000066                     CCP_Init@_ccp_obj:
   851                           	callstack 0
   852  000066                     _EUSART_Async_Read_Data$2032:
   853                           	callstack 0
   854  000066                     Get_Temp_HUM@T_Integral:
   855                           	callstack 0
   856  000066                     Ultra_Sonic_Init@ultrasonic_object:
   857                           	callstack 0
   858  000066                     ___xxtofl@arg:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x6
   862  000066                     	ds	2
   863  000068                     stepper_move_one_deg_cw@stepper:
   864                           	callstack 0
   865  000068                     stepper_move_one_deg_ccw@stepper:
   866                           	callstack 0
   867  000068                     _EUSART_Async_Read_Data$2033:
   868                           	callstack 0
   869  000068                     Get_Temp_HUM@Checksum:
   870                           	callstack 0
   871  000068                     Ultra_Sonic_Init@_tmr0_config:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x8
   875  000068                     	ds	2
   876  00006A                     ?___fldiv:
   877                           	callstack 0
   878  00006A                     stepper_move_one_deg_cw@i:
   879                           	callstack 0
   880  00006A                     stepper_move_one_deg_ccw@i:
   881                           	callstack 0
   882  00006A                     EUSART_Async_Read_Data@l_temp_data:
   883                           	callstack 0
   884  00006A                     ___fldiv@b:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0xA
   888  00006A                     	ds	2
   889  00006C                     EUSART_Async_Read_Data_Blocking@_eusart_obj:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0xC
   893  00006C                     	ds	2
   894  00006E                     EUSART_Async_Read_Data_Blocking@data:
   895                           	callstack 0
   896  00006E                     ___fldiv@a:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0xE
   900  00006E                     	ds	2
   901  000070                     ??_GPS_Service:
   902                           
   903                           ; 1 bytes @ 0x10
   904  000070                     	ds	2
   905  000072                     ??___fldiv:
   906  000072                     GPS_Service@key:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x12
   910  000072                     	ds	4
   911  000076                     ___fldiv@rem:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x16
   915  000076                     	ds	4
   916  00007A                     ___fldiv@sign:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x1A
   920  00007A                     	ds	1
   921  00007B                     ___fldiv@new_exp:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x1B
   925  00007B                     	ds	2
   926  00007D                     ___fldiv@grs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x1D
   930  00007D                     	ds	4
   931  000081                     ___fldiv@bexp:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x21
   935  000081                     	ds	1
   936  000082                     ___fldiv@aexp:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x22
   940  000082                     	ds	1
   941  000083                     ?___flmul:
   942                           	callstack 0
   943  000083                     Get_Distance@ultrasonic_object:
   944                           	callstack 0
   945  000083                     ___flmul@b:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x23
   949  000083                     	ds	2
   950  000085                     Get_Distance@_tmr0_config:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x25
   954  000085                     	ds	2
   955  000087                     Get_Distance@distance:
   956                           	callstack 0
   957  000087                     ___flmul@a:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x27
   961  000087                     	ds	2
   962  000089                     Get_Distance@timer_val:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x29
   966  000089                     	ds	2
   967  00008B                     ??___flmul:
   968  00008B                     Get_Distance@logic:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x2B
   972  00008B                     	ds	4
   973  00008F                     ___flmul@sign:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x2F
   977  00008F                     	ds	1
   978  000090                     ___flmul@aexp:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x30
   982  000090                     	ds	1
   983  000091                     ___flmul@grs:
   984                           	callstack 0
   985                           
   986                           ; 4 bytes @ 0x31
   987  000091                     	ds	4
   988  000095                     ___flmul@bexp:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x35
   992  000095                     	ds	1
   993  000096                     ___flmul@prod:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x36
   997  000096                     	ds	4
   998  00009A                     ___flmul@temp:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x3A
  1002  00009A                     	ds	2
  1003  00009C                     ?___fladd:
  1004                           	callstack 0
  1005  00009C                     ___fladd@b:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x3C
  1009  00009C                     	ds	4
  1010  0000A0                     ___fladd@a:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x40
  1014  0000A0                     	ds	4
  1015  0000A4                     ??_CCP_PWM_Set_Duty:
  1016  0000A4                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x44
  1020  0000A4                     	ds	2
  1021                           
  1022                           	psect	cstackCOMRAM
  1023  000001                     __pcstackCOMRAM:
  1024                           	callstack 0
  1025  000001                     ??i2_calc_parity_odd:
  1026  000001                     ??i2_calc_parity_even:
  1027  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x0
  1031  000001                     	ds	2
  1032  000003                     ??i2_GPIO_Pin_Toggle_Logic:
  1033  000003                     i2calc_parity_odd@data:
  1034                           	callstack 0
  1035  000003                     i2calc_parity_even@data:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x2
  1039  000003                     	ds	1
  1040  000004                     i2calc_parity_odd@number_of_ones:
  1041                           	callstack 0
  1042  000004                     i2calc_parity_even@number_of_ones:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x3
  1046  000004                     	ds	1
  1047  000005                     i2calc_parity_odd@l_counter:
  1048                           	callstack 0
  1049  000005                     i2calc_parity_even@l_counter:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x4
  1053  000005                     	ds	1
  1054  000006                     EUSART_Async_Transmit_Data@_eusart_obj:
  1055                           	callstack 0
  1056  000006                     i2EUSART_Async_Read_Data@_eusart_obj:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x5
  1060  000006                     	ds	2
  1061  000008                     EUSART_Async_Transmit_Data@data:
  1062                           	callstack 0
  1063  000008                     i2EUSART_Async_Read_Data@data:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x7
  1067  000008                     	ds	2
  1068  00000A                     ??_EUSART_Async_Transmit_Data:
  1069  00000A                     ??i2_EUSART_Async_Read_Data:
  1070                           
  1071                           ; 1 bytes @ 0x9
  1072  00000A                     	ds	2
  1073  00000C                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
  1074                           	callstack 0
  1075  00000C                     i2_EUSART_Async_Read_Data$2031:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xB
  1079  00000C                     	ds	2
  1080  00000E                     Bluetooth_Send_Data_Non_Blocking@data:
  1081                           	callstack 0
  1082  00000E                     i2_EUSART_Async_Read_Data$2032:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0xD
  1086  00000E                     	ds	1
  1087  00000F                     
  1088                           ; 1 bytes @ 0xE
  1089  00000F                     	ds	1
  1090  000010                     i2_EUSART_Async_Read_Data$2033:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0xF
  1094  000010                     	ds	2
  1095  000012                     i2EUSART_Async_Read_Data@l_temp_data:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  000012                     	ds	2
  1100  000014                     ??_InterruptManagerHigh:
  1101                           
  1102                           ; 1 bytes @ 0x13
  1103  000014                     	ds	6
  1104  00001A                     RB4_ISR@Handler_Select:
  1105                           	callstack 0
  1106  00001A                     RB5_ISR@Handler_Select:
  1107                           	callstack 0
  1108  00001A                     RB6_ISR@Handler_Select:
  1109                           	callstack 0
  1110  00001A                     RB7_ISR@Handler_Select:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x19
  1114  00001A                     	ds	1
  1115  00001B                     ??_InterruptManagerLow:
  1116                           
  1117                           ; 1 bytes @ 0x1A
  1118  00001B                     	ds	3
  1119  00001E                     ??_calc_parity_even:
  1120  00001E                     ??_calc_parity_odd:
  1121  00001E                     ??_DHT11_Start:
  1122  00001E                     ?___xxtofl:
  1123                           	callstack 0
  1124  00001E                     CCP_PWM_Start@_ccp_obj:
  1125                           	callstack 0
  1126  00001E                     CCP_Interrupt_Config@_ccp_obj:
  1127                           	callstack 0
  1128  00001E                     CCP_Mode_Timer_Select@_ccp_obj:
  1129                           	callstack 0
  1130  00001E                     GPIO_Pin_Direction_Initialize@_pin_config:
  1131                           	callstack 0
  1132  00001E                     GPIO_Pin_Write_Logic@_pin_config:
  1133                           	callstack 0
  1134  00001E                     GPIO_Pin_Read_Logic@_pin_config:
  1135                           	callstack 0
  1136  00001E                     GPIO_Pin_Toggle_Logic@_pin_config:
  1137                           	callstack 0
  1138  00001E                     MSSP_I2C_Master_Send_Start@i2c_obj:
  1139                           	callstack 0
  1140  00001E                     MSSP_I2C_Master_Send_Stop@i2c_obj:
  1141                           	callstack 0
  1142  00001E                     MSSP_I2C_Master_Write_Blocking@i2c_obj:
  1143                           	callstack 0
  1144  00001E                     I2C_Slave_Mode_Clock_Configurations@i2c_obj:
  1145                           	callstack 0
  1146  00001E                     HAL_Timer0_Read_Val@_tmr0_config:
  1147                           	callstack 0
  1148  00001E                     HAL_Timer0_Write_Val@_tmr0_config:
  1149                           	callstack 0
  1150  00001E                     Timer2_Init@_timer2:
  1151                           	callstack 0
  1152  00001E                     DHT11_Read_Data@data:
  1153                           	callstack 0
  1154  00001E                     ___xxtofl@val:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x1D
  1158  00001E                     	ds	2
  1159  000020                     ??_Timer2_Init:
  1160  000020                     ??_I2C_Slave_Mode_Clock_Configurations:
  1161  000020                     ??_DHT11_Read_Data:
  1162  000020                     ??_GPIO_Pin_Toggle_Logic:
  1163  000020                     calc_parity_odd@data:
  1164                           	callstack 0
  1165  000020                     calc_parity_even@data:
  1166                           	callstack 0
  1167  000020                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
  1168                           	callstack 0
  1169  000020                     GPIO_Pin_Write_Logic@logic:
  1170                           	callstack 0
  1171  000020                     MSSP_I2C_Master_Write_Blocking@i2c_data:
  1172                           	callstack 0
  1173  000020                     GPIO_Pin_Read_Logic@logic:
  1174                           	callstack 0
  1175  000020                     HAL_Timer0_Read_Val@result:
  1176                           	callstack 0
  1177  000020                     HAL_Timer0_Write_Val@val:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x1F
  1181  000020                     	ds	1
  1182  000021                     calc_parity_odd@number_of_ones:
  1183                           	callstack 0
  1184  000021                     calc_parity_even@number_of_ones:
  1185                           	callstack 0
  1186  000021                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1187                           	callstack 0
  1188  000021                     DHT11_Read_Data@i:
  1189                           	callstack 0
  1190  000021                     CCP_PWM_Mode_Config@_ccp_obj:
  1191                           	callstack 0
  1192  000021                     CCP_Capture_Mode_Config@_ccp_obj:
  1193                           	callstack 0
  1194  000021                     CCP_Compare_Mode_Config@_ccp_obj:
  1195                           	callstack 0
  1196  000021                     MSSP_I2C_Master_Write_Blocking@_ack:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x20
  1200  000021                     	ds	1
  1201  000022                     calc_parity_odd@l_counter:
  1202                           	callstack 0
  1203  000022                     calc_parity_even@l_counter:
  1204                           	callstack 0
  1205  000022                     HAL_Timer0_Read_Val@l_high_byte:
  1206                           	callstack 0
  1207  000022                     HAL_Timer0_Write_Val@ret_value:
  1208                           	callstack 0
  1209  000022                     ___fltol@sign1:
  1210                           	callstack 0
  1211  000022                     ECU_DC_Motor_Run_Left@dc_motor:
  1212                           	callstack 0
  1213  000022                     ECU_DC_Motor_Run_Right@dc_motor:
  1214                           	callstack 0
  1215  000022                     Ecu_Stepper_Step@stepper:
  1216                           	callstack 0
  1217  000022                     GPIO_Pin_Initialize@_pin_config:
  1218                           	callstack 0
  1219  000022                     send_trig_pulse@ultrasonic_object:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x21
  1223  000022                     	ds	1
  1224  000023                     ??_EUSART_Async_Read_Data:
  1225  000023                     ??_CCP_Capture_Mode_Config:
  1226  000023                     ??_CCP_Compare_Mode_Config:
  1227  000023                     PCA_Write_Reg@ack:
  1228                           	callstack 0
  1229  000023                     HAL_Timer0_Read_Val@l_low_byte:
  1230                           	callstack 0
  1231  000023                     ___fltol@exp1:
  1232                           	callstack 0
  1233  000023                     HAL_Timer0_Init@_tmr0_config:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x22
  1237  000023                     	ds	1
  1238  000024                     ??_I2C_Master_Mode_Clock_Configurations:
  1239  000024                     GPIO_Pin_Initialize@ERRORSTATUS:
  1240                           	callstack 0
  1241                           
  1242                           ; 1 bytes @ 0x23
  1243  000024                     	ds	1
  1244  000025                     
  1245                           ; 1 bytes @ 0x24
  1246 ;;
  1247 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1248 ;;
  1249 ;; *************** function _main *****************
  1250 ;; Defined at:
  1251 ;;		line 212 in file "application.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2  1924[None  ] int 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels required when called: 14
  1271 ;; This function calls:
  1272 ;;		_GPIO_Pin_Toggle_Logic
  1273 ;;		_GPS_Service
  1274 ;;		_Get_Distance
  1275 ;;		_Get_Temp_HUM
  1276 ;;		_Robot_Move_Backward
  1277 ;;		_Robot_Move_Forward
  1278 ;;		_Robot_Steer_Left_Backward
  1279 ;;		_Robot_Steer_Left_Forward
  1280 ;;		_Robot_Steer_Right_Backward
  1281 ;;		_Robot_Steer_Right_Forward
  1282 ;;		_Robot_Steer_Stop
  1283 ;;		_Servo_SetAngle
  1284 ;;		_application_intialize
  1285 ;;		_stepper_move_one_deg_ccw
  1286 ;;		_stepper_move_one_deg_cw
  1287 ;; This function is called by:
  1288 ;;		Startup code after reset
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text0
  1293  001D6E                     __ptext0:
  1294                           	callstack 0
  1295  001D6E                     _main:
  1296                           	callstack 17
  1297  001D6E                     
  1298                           ;application.c: 214:     application_intialize();
  1299  001D6E  EC38  F017         	call	_application_intialize	;wreg free
  1300                           
  1301                           ;application.c: 215:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
  1302  001D72  0E41               	movlw	low _TEST_PIN
  1303  001D74  6E1E               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1304  001D76  0E00               	movlw	high _TEST_PIN
  1305  001D78  6E1F               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1306  001D7A  EC9D  F021         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1307  001D7E                     l1925:
  1308                           
  1309                           ;application.c: 217:     {;application.c: 219:      GPIO_Pin_Toggle_Logic(&TEST_PIN);
  1310  001D7E  0E41               	movlw	low _TEST_PIN
  1311  001D80  6E1E               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1312  001D82  0E00               	movlw	high _TEST_PIN
  1313  001D84  6E1F               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1314  001D86  EC9D  F021         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1315  001D8A                     
  1316                           ;application.c: 220:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1317  001D8A  0E4E               	movlw	78
  1318  001D8C  0101               	movlb	1	; () banked
  1319  001D8E  6F64               	movwf	??_main& (0+255),b
  1320  001D90  0EEB               	movlw	235
  1321  001D92                     u12497:
  1322  001D92  2EE8               	decfsz	wreg,f,c
  1323  001D94  D7FE               	bra	u12497
  1324  001D96  2F64               	decfsz	??_main& (0+255),f,b
  1325  001D98  D7FC               	bra	u12497
  1326                           
  1327                           ;application.c: 221: switch(datarecive)
  1328  001D9A  EFCB  F00F         	goto	l11818
  1329  001D9E                     l11728:
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;application.c: 226:                 Robot_Steer_Stop();
  1333  001D9E  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  1334                           
  1335                           ;application.c: 227:                 break;
  1336  001DA2  EFBF  F00E         	goto	l1925
  1337  001DA6                     l11730:
  1338                           
  1339                           ; BSR set to: 1
  1340                           ;application.c: 230:                 Robot_Steer_Left_Forward();
  1341  001DA6  EC90  F01C         	call	_Robot_Steer_Left_Forward	;wreg free
  1342                           
  1343                           ;application.c: 231:                 break;
  1344  001DAA  EFBF  F00E         	goto	l1925
  1345  001DAE                     l11732:
  1346                           
  1347                           ; BSR set to: 1
  1348                           ;application.c: 234:                 Robot_Move_Forward();
  1349  001DAE  ECF0  F01C         	call	_Robot_Move_Forward	;wreg free
  1350                           
  1351                           ;application.c: 235:                 break;
  1352  001DB2  EFBF  F00E         	goto	l1925
  1353  001DB6                     l11734:
  1354                           
  1355                           ; BSR set to: 1
  1356                           ;application.c: 238:                 Robot_Steer_Right_Forward();
  1357  001DB6  EC30  F01C         	call	_Robot_Steer_Right_Forward	;wreg free
  1358                           
  1359                           ;application.c: 239:                 break;
  1360  001DBA  EFBF  F00E         	goto	l1925
  1361  001DBE                     l11736:
  1362                           
  1363                           ; BSR set to: 1
  1364                           ;application.c: 248:                 Robot_Steer_Left_Backward();
  1365  001DBE  EC0D  F01E         	call	_Robot_Steer_Left_Backward	;wreg free
  1366                           
  1367                           ;application.c: 249:                 break;
  1368  001DC2  EFBF  F00E         	goto	l1925
  1369  001DC6                     l11738:
  1370                           
  1371                           ; BSR set to: 1
  1372                           ;application.c: 252:                 Robot_Move_Backward();
  1373  001DC6  EC50  F01D         	call	_Robot_Move_Backward	;wreg free
  1374                           
  1375                           ;application.c: 253:                 break;
  1376  001DCA  EFBF  F00E         	goto	l1925
  1377  001DCE                     l11740:
  1378                           
  1379                           ; BSR set to: 1
  1380                           ;application.c: 256:                 Robot_Steer_Right_Backward();
  1381  001DCE  ECB0  F01D         	call	_Robot_Steer_Right_Backward	;wreg free
  1382                           
  1383                           ;application.c: 257:                 break;
  1384  001DD2  EFBF  F00E         	goto	l1925
  1385  001DD6                     l11742:
  1386                           
  1387                           ; BSR set to: 1
  1388                           ;application.c: 267:                  stepper_move_one_deg_cw(&stepper_base);
  1389  001DD6  0E3E               	movlw	low _stepper_base
  1390  001DD8  0100               	movlb	0	; () banked
  1391  001DDA  6F68               	movwf	stepper_move_one_deg_cw@stepper& (0+255),b
  1392  001DDC  0E00               	movlw	high _stepper_base
  1393  001DDE  6F69               	movwf	(stepper_move_one_deg_cw@stepper+1)& (0+255),b
  1394  001DE0  EC7F  F023         	call	_stepper_move_one_deg_cw	;wreg free
  1395                           
  1396                           ;application.c: 268:                  break;
  1397  001DE4  EFBF  F00E         	goto	l1925
  1398  001DE8                     l11744:
  1399                           
  1400                           ; BSR set to: 1
  1401                           ;application.c: 272:                 stepper_move_one_deg_ccw(&stepper_base);
  1402  001DE8  0E3E               	movlw	low _stepper_base
  1403  001DEA  0100               	movlb	0	; () banked
  1404  001DEC  6F68               	movwf	stepper_move_one_deg_ccw@stepper& (0+255),b
  1405  001DEE  0E00               	movlw	high _stepper_base
  1406  001DF0  6F69               	movwf	(stepper_move_one_deg_ccw@stepper+1)& (0+255),b
  1407  001DF2  ECB2  F023         	call	_stepper_move_one_deg_ccw	;wreg free
  1408                           
  1409                           ;application.c: 273:                 break;
  1410  001DF6  EFBF  F00E         	goto	l1925
  1411  001DFA                     l11746:
  1412                           
  1413                           ; BSR set to: 1
  1414                           ;application.c: 277:                   servo1Pos--;
  1415  001DFA  0631               	decf	_servo1Pos^0,f,c
  1416  001DFC                     
  1417                           ; BSR set to: 1
  1418                           ;application.c: 278:                   if(servo1Pos<1)
  1419  001DFC  5031               	movf	_servo1Pos^0,w,c
  1420  001DFE  A4D8               	btfss	status,2,c
  1421  001E00  EF04  F00F         	goto	u12411
  1422  001E04  EF06  F00F         	goto	u12410
  1423  001E08                     u12411:
  1424  001E08  EF08  F00F         	goto	l11752
  1425  001E0C                     u12410:
  1426  001E0C                     
  1427                           ; BSR set to: 1
  1428                           ;application.c: 279:                   {;application.c: 280:                     servo1P
      +                          os=1;
  1429  001E0C  0E01               	movlw	1
  1430  001E0E  6E31               	movwf	_servo1Pos^0,c
  1431  001E10                     l11752:
  1432                           
  1433                           ; BSR set to: 1
  1434                           ;application.c: 282:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_9 , servo1Pos );
  1435  001E10  0EC6               	movlw	low _i2c_obj
  1436  001E12  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1437  001E14  0E00               	movlw	high _i2c_obj
  1438  001E16  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1439  001E18  0ECD               	movlw	low _servo_driver_obj
  1440  001E1A  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1441  001E1C  0E00               	movlw	high _servo_driver_obj
  1442  001E1E  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1443  001E20  0E08               	movlw	8
  1444  001E22  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1445  001E24  C031  F160         	movff	_servo1Pos,Servo_SetAngle@angle
  1446  001E28  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  1447                           
  1448                           ;application.c: 284:                   break;
  1449  001E2C  EFBF  F00E         	goto	l1925
  1450  001E30                     l11754:
  1451                           
  1452                           ; BSR set to: 1
  1453                           ;application.c: 288:                  servo1Pos++;
  1454  001E30  2A31               	incf	_servo1Pos^0,f,c
  1455  001E32                     
  1456                           ; BSR set to: 1
  1457                           ;application.c: 289:                  if(servo1Pos>180)
  1458  001E32  0EB4               	movlw	180
  1459  001E34  6431               	cpfsgt	_servo1Pos^0,c
  1460  001E36  EF1F  F00F         	goto	u12421
  1461  001E3A  EF21  F00F         	goto	u12420
  1462  001E3E                     u12421:
  1463  001E3E  EF08  F00F         	goto	l11752
  1464  001E42                     u12420:
  1465  001E42                     
  1466                           ; BSR set to: 1
  1467                           ;application.c: 290:                  {;application.c: 291:                    servo1Pos
      +                          =180;
  1468  001E42  0EB4               	movlw	180
  1469  001E44  6E31               	movwf	_servo1Pos^0,c
  1470  001E46  EF08  F00F         	goto	l11752
  1471  001E4A                     l11762:
  1472                           
  1473                           ; BSR set to: 1
  1474                           ;application.c: 298:                   servo2Pos--;
  1475  001E4A  0630               	decf	_servo2Pos^0,f,c
  1476  001E4C                     
  1477                           ; BSR set to: 1
  1478                           ;application.c: 299:                   if(servo2Pos<1)
  1479  001E4C  5030               	movf	_servo2Pos^0,w,c
  1480  001E4E  A4D8               	btfss	status,2,c
  1481  001E50  EF2C  F00F         	goto	u12431
  1482  001E54  EF2E  F00F         	goto	u12430
  1483  001E58                     u12431:
  1484  001E58  EF30  F00F         	goto	l11768
  1485  001E5C                     u12430:
  1486  001E5C                     
  1487                           ; BSR set to: 1
  1488                           ;application.c: 300:                   {;application.c: 301:                     servo2P
      +                          os=1;
  1489  001E5C  0E01               	movlw	1
  1490  001E5E  6E30               	movwf	_servo2Pos^0,c
  1491  001E60                     l11768:
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;application.c: 303:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_10 , servo2Pos );
  1495  001E60  0EC6               	movlw	low _i2c_obj
  1496  001E62  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1497  001E64  0E00               	movlw	high _i2c_obj
  1498  001E66  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1499  001E68  0ECD               	movlw	low _servo_driver_obj
  1500  001E6A  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1501  001E6C  0E00               	movlw	high _servo_driver_obj
  1502  001E6E  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1503  001E70  0E09               	movlw	9
  1504  001E72  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1505  001E74  C030  F160         	movff	_servo2Pos,Servo_SetAngle@angle
  1506  001E78  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  1507                           
  1508                           ;application.c: 304:                   break;
  1509  001E7C  EFBF  F00E         	goto	l1925
  1510  001E80                     l11770:
  1511                           
  1512                           ; BSR set to: 1
  1513                           ;application.c: 308:                   servo2Pos++;
  1514  001E80  2A30               	incf	_servo2Pos^0,f,c
  1515  001E82                     
  1516                           ; BSR set to: 1
  1517                           ;application.c: 309:                   if(servo2Pos>180)
  1518  001E82  0EB4               	movlw	180
  1519  001E84  6430               	cpfsgt	_servo2Pos^0,c
  1520  001E86  EF47  F00F         	goto	u12441
  1521  001E8A  EF49  F00F         	goto	u12440
  1522  001E8E                     u12441:
  1523  001E8E  EF30  F00F         	goto	l11768
  1524  001E92                     u12440:
  1525  001E92                     
  1526                           ; BSR set to: 1
  1527                           ;application.c: 310:                   {;application.c: 311:                     servo2P
      +                          os=180;
  1528  001E92  0EB4               	movlw	180
  1529  001E94  6E30               	movwf	_servo2Pos^0,c
  1530  001E96  EF30  F00F         	goto	l11768
  1531  001E9A                     l11778:
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;application.c: 318:                   servo3Pos--;
  1535  001E9A  062F               	decf	_servo3Pos^0,f,c
  1536  001E9C                     
  1537                           ; BSR set to: 1
  1538                           ;application.c: 319:                   if(servo3Pos<1)
  1539  001E9C  502F               	movf	_servo3Pos^0,w,c
  1540  001E9E  A4D8               	btfss	status,2,c
  1541  001EA0  EF54  F00F         	goto	u12451
  1542  001EA4  EF56  F00F         	goto	u12450
  1543  001EA8                     u12451:
  1544  001EA8  EF58  F00F         	goto	l11784
  1545  001EAC                     u12450:
  1546  001EAC                     
  1547                           ; BSR set to: 1
  1548                           ;application.c: 320:                   {;application.c: 321:                     servo3P
      +                          os=1;
  1549  001EAC  0E01               	movlw	1
  1550  001EAE  6E2F               	movwf	_servo3Pos^0,c
  1551  001EB0                     l11784:
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;application.c: 323:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_11 , servo3Pos );
  1555  001EB0  0EC6               	movlw	low _i2c_obj
  1556  001EB2  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1557  001EB4  0E00               	movlw	high _i2c_obj
  1558  001EB6  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1559  001EB8  0ECD               	movlw	low _servo_driver_obj
  1560  001EBA  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1561  001EBC  0E00               	movlw	high _servo_driver_obj
  1562  001EBE  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1563  001EC0  0E0A               	movlw	10
  1564  001EC2  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1565  001EC4  C02F  F160         	movff	_servo3Pos,Servo_SetAngle@angle
  1566  001EC8  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  1567                           
  1568                           ;application.c: 324:                   break;
  1569  001ECC  EFBF  F00E         	goto	l1925
  1570  001ED0                     l11786:
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;application.c: 328:                   servo3Pos++;
  1574  001ED0  2A2F               	incf	_servo3Pos^0,f,c
  1575  001ED2                     
  1576                           ; BSR set to: 1
  1577                           ;application.c: 329:                   if(servo3Pos>180)
  1578  001ED2  0EB4               	movlw	180
  1579  001ED4  642F               	cpfsgt	_servo3Pos^0,c
  1580  001ED6  EF6F  F00F         	goto	u12461
  1581  001EDA  EF71  F00F         	goto	u12460
  1582  001EDE                     u12461:
  1583  001EDE  EF58  F00F         	goto	l11784
  1584  001EE2                     u12460:
  1585  001EE2                     
  1586                           ; BSR set to: 1
  1587                           ;application.c: 330:                   {;application.c: 331:                     servo3P
      +                          os=180;
  1588  001EE2  0EB4               	movlw	180
  1589  001EE4  6E2F               	movwf	_servo3Pos^0,c
  1590  001EE6  EF58  F00F         	goto	l11784
  1591  001EEA                     l11794:
  1592                           
  1593                           ; BSR set to: 1
  1594                           ;application.c: 338:                   servo4Pos--;
  1595  001EEA  062E               	decf	_servo4Pos^0,f,c
  1596  001EEC                     
  1597                           ; BSR set to: 1
  1598                           ;application.c: 339:                   if(servo4Pos<1)
  1599  001EEC  502E               	movf	_servo4Pos^0,w,c
  1600  001EEE  A4D8               	btfss	status,2,c
  1601  001EF0  EF7C  F00F         	goto	u12471
  1602  001EF4  EF7E  F00F         	goto	u12470
  1603  001EF8                     u12471:
  1604  001EF8  EF80  F00F         	goto	l11800
  1605  001EFC                     u12470:
  1606  001EFC                     
  1607                           ; BSR set to: 1
  1608                           ;application.c: 340:                   {;application.c: 341:                     servo4P
      +                          os=1;
  1609  001EFC  0E01               	movlw	1
  1610  001EFE  6E2E               	movwf	_servo4Pos^0,c
  1611  001F00                     l11800:
  1612                           
  1613                           ; BSR set to: 1
  1614                           ;application.c: 343:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_12 , servo4Pos );
  1615  001F00  0EC6               	movlw	low _i2c_obj
  1616  001F02  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1617  001F04  0E00               	movlw	high _i2c_obj
  1618  001F06  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1619  001F08  0ECD               	movlw	low _servo_driver_obj
  1620  001F0A  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1621  001F0C  0E00               	movlw	high _servo_driver_obj
  1622  001F0E  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1623  001F10  0E0B               	movlw	11
  1624  001F12  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1625  001F14  C02E  F160         	movff	_servo4Pos,Servo_SetAngle@angle
  1626  001F18  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  1627                           
  1628                           ;application.c: 344:                   break;
  1629  001F1C  EFBF  F00E         	goto	l1925
  1630  001F20                     l11802:
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;application.c: 348:                   servo4Pos++;
  1634  001F20  2A2E               	incf	_servo4Pos^0,f,c
  1635  001F22                     
  1636                           ; BSR set to: 1
  1637                           ;application.c: 349:                   if(servo4Pos>180)
  1638  001F22  0EB4               	movlw	180
  1639  001F24  642E               	cpfsgt	_servo4Pos^0,c
  1640  001F26  EF97  F00F         	goto	u12481
  1641  001F2A  EF99  F00F         	goto	u12480
  1642  001F2E                     u12481:
  1643  001F2E  EF80  F00F         	goto	l11800
  1644  001F32                     u12480:
  1645  001F32                     
  1646                           ; BSR set to: 1
  1647                           ;application.c: 350:                   {;application.c: 351:                     servo4P
      +                          os=180;
  1648  001F32  0EB4               	movlw	180
  1649  001F34  6E2E               	movwf	_servo4Pos^0,c
  1650  001F36  EF80  F00F         	goto	l11800
  1651  001F3A                     l11810:
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;application.c: 358:                  Get_Temp_HUM(&RH_Decimal, &RH_Integral, &T_Decimal
      +                          , &T_Integral, &Checksum);
  1655  001F3A  0E37               	movlw	low _RH_Decimal
  1656  001F3C  0100               	movlb	0	; () banked
  1657  001F3E  6F60               	movwf	Get_Temp_HUM@RH_Decimal& (0+255),b
  1658  001F40  0E00               	movlw	high _RH_Decimal
  1659  001F42  6F61               	movwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),b
  1660  001F44  0E36               	movlw	low _RH_Integral
  1661  001F46  6F62               	movwf	Get_Temp_HUM@RH_Integral& (0+255),b
  1662  001F48  0E00               	movlw	high _RH_Integral
  1663  001F4A  6F63               	movwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),b
  1664  001F4C  0E35               	movlw	low _T_Decimal
  1665  001F4E  6F64               	movwf	Get_Temp_HUM@T_Decimal& (0+255),b
  1666  001F50  0E00               	movlw	high _T_Decimal
  1667  001F52  6F65               	movwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),b
  1668  001F54  0E34               	movlw	low _T_Integral
  1669  001F56  6F66               	movwf	Get_Temp_HUM@T_Integral& (0+255),b
  1670  001F58  0E00               	movlw	high _T_Integral
  1671  001F5A  6F67               	movwf	(Get_Temp_HUM@T_Integral+1)& (0+255),b
  1672  001F5C  0E33               	movlw	low _Checksum
  1673  001F5E  6F68               	movwf	Get_Temp_HUM@Checksum& (0+255),b
  1674  001F60  0E00               	movlw	high _Checksum
  1675  001F62  6F69               	movwf	(Get_Temp_HUM@Checksum+1)& (0+255),b
  1676  001F64  EC76  F01F         	call	_Get_Temp_HUM	;wreg free
  1677                           
  1678                           ;application.c: 359:                  break;
  1679  001F68  EFBF  F00E         	goto	l1925
  1680  001F6C                     l11812:
  1681                           
  1682                           ; BSR set to: 1
  1683                           ;application.c: 362:                  Get_Distance(&ultrasonic,&timer0,&distance);
  1684  001F6C  0ED1               	movlw	low _ultrasonic
  1685  001F6E  0100               	movlb	0	; () banked
  1686  001F70  6F83               	movwf	Get_Distance@ultrasonic_object& (0+255),b
  1687  001F72  0E00               	movlw	high _ultrasonic
  1688  001F74  6F84               	movwf	(Get_Distance@ultrasonic_object+1)& (0+255),b
  1689  001F76  0EF8               	movlw	low _timer0
  1690  001F78  6F85               	movwf	Get_Distance@_tmr0_config& (0+255),b
  1691  001F7A  0E00               	movlw	high _timer0
  1692  001F7C  6F86               	movwf	(Get_Distance@_tmr0_config+1)& (0+255),b
  1693  001F7E  0EFC               	movlw	low _distance
  1694  001F80  6F87               	movwf	Get_Distance@distance& (0+255),b
  1695  001F82  0E00               	movlw	high _distance
  1696  001F84  6F88               	movwf	(Get_Distance@distance+1)& (0+255),b
  1697  001F86  EC68  F018         	call	_Get_Distance	;wreg free
  1698                           
  1699                           ;application.c: 363:                  break;
  1700  001F8A  EFBF  F00E         	goto	l1925
  1701  001F8E                     l11814:
  1702                           
  1703                           ; BSR set to: 1
  1704                           ;application.c: 366:                  GPS_Service();
  1705  001F8E  EC9E  F014         	call	_GPS_Service	;wreg free
  1706                           
  1707                           ;application.c: 367:                  break;
  1708  001F92  EFBF  F00E         	goto	l1925
  1709  001F96                     l11818:
  1710  001F96  5038               	movf	_datarecive^0,w,c
  1711  001F98  0101               	movlb	1	; () banked
  1712  001F9A  6F64               	movwf	??_main& (0+255),b
  1713  001F9C  6B65               	clrf	(??_main+1)& (0+255),b
  1714                           
  1715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 1, Range of values is 0 to 0
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte            4     3 (average)
  1721                           ;	Chosen strategy is simple_byte
  1722  001F9E  5165               	movf	(??_main+1)& (0+255),w,b
  1723  001FA0  0A00               	xorlw	0	; case 0
  1724  001FA2  B4D8               	btfsc	status,2,c
  1725  001FA4  EFD6  F00F         	goto	l12016
  1726  001FA8  EFBF  F00E         	goto	l1925
  1727  001FAC                     l12016:
  1728                           
  1729                           ; BSR set to: 1
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 24, Range of values is 0 to 79
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte           73    37 (average)
  1735                           ;	Chosen strategy is simple_byte
  1736  001FAC  5164               	movf	??_main& (0+255),w,b
  1737  001FAE  0A00               	xorlw	0	; case 0
  1738  001FB0  B4D8               	btfsc	status,2,c
  1739  001FB2  EFCF  F00E         	goto	l11728
  1740  001FB6  0A01               	xorlw	1	; case 1
  1741  001FB8  B4D8               	btfsc	status,2,c
  1742  001FBA  EFD3  F00E         	goto	l11730
  1743  001FBE  0A03               	xorlw	3	; case 2
  1744  001FC0  B4D8               	btfsc	status,2,c
  1745  001FC2  EFD7  F00E         	goto	l11732
  1746  001FC6  0A01               	xorlw	1	; case 3
  1747  001FC8  B4D8               	btfsc	status,2,c
  1748  001FCA  EFDB  F00E         	goto	l11734
  1749  001FCE  0A07               	xorlw	7	; case 4
  1750  001FD0  B4D8               	btfsc	status,2,c
  1751  001FD2  EFBF  F00E         	goto	l1925
  1752  001FD6  0A01               	xorlw	1	; case 5
  1753  001FD8  B4D8               	btfsc	status,2,c
  1754  001FDA  EFBF  F00E         	goto	l1925
  1755  001FDE  0A03               	xorlw	3	; case 6
  1756  001FE0  B4D8               	btfsc	status,2,c
  1757  001FE2  EFDF  F00E         	goto	l11736
  1758  001FE6  0A01               	xorlw	1	; case 7
  1759  001FE8  B4D8               	btfsc	status,2,c
  1760  001FEA  EFE3  F00E         	goto	l11738
  1761  001FEE  0A0F               	xorlw	15	; case 8
  1762  001FF0  B4D8               	btfsc	status,2,c
  1763  001FF2  EFE7  F00E         	goto	l11740
  1764  001FF6  0A01               	xorlw	1	; case 9
  1765  001FF8  B4D8               	btfsc	status,2,c
  1766  001FFA  EFBF  F00E         	goto	l1925
  1767  001FFE  0A03               	xorlw	3	; case 10
  1768  002000  B4D8               	btfsc	status,2,c
  1769  002002  EFBF  F00E         	goto	l1925
  1770  002006  0A1A               	xorlw	26	; case 16
  1771  002008  B4D8               	btfsc	status,2,c
  1772  00200A  EFEB  F00E         	goto	l11742
  1773  00200E  0A01               	xorlw	1	; case 17
  1774  002010  B4D8               	btfsc	status,2,c
  1775  002012  EFF4  F00E         	goto	l11744
  1776  002016  0A03               	xorlw	3	; case 18
  1777  002018  B4D8               	btfsc	status,2,c
  1778  00201A  EFFD  F00E         	goto	l11746
  1779  00201E  0A01               	xorlw	1	; case 19
  1780  002020  B4D8               	btfsc	status,2,c
  1781  002022  EF18  F00F         	goto	l11754
  1782  002026  0A07               	xorlw	7	; case 20
  1783  002028  B4D8               	btfsc	status,2,c
  1784  00202A  EF25  F00F         	goto	l11762
  1785  00202E  0A01               	xorlw	1	; case 21
  1786  002030  B4D8               	btfsc	status,2,c
  1787  002032  EF40  F00F         	goto	l11770
  1788  002036  0A03               	xorlw	3	; case 22
  1789  002038  B4D8               	btfsc	status,2,c
  1790  00203A  EF4D  F00F         	goto	l11778
  1791  00203E  0A01               	xorlw	1	; case 23
  1792  002040  B4D8               	btfsc	status,2,c
  1793  002042  EF68  F00F         	goto	l11786
  1794  002046  0A0F               	xorlw	15	; case 24
  1795  002048  B4D8               	btfsc	status,2,c
  1796  00204A  EF75  F00F         	goto	l11794
  1797  00204E  0A01               	xorlw	1	; case 25
  1798  002050  B4D8               	btfsc	status,2,c
  1799  002052  EF90  F00F         	goto	l11802
  1800  002056  0A54               	xorlw	84	; case 77
  1801  002058  B4D8               	btfsc	status,2,c
  1802  00205A  EF9D  F00F         	goto	l11810
  1803  00205E  0A03               	xorlw	3	; case 78
  1804  002060  B4D8               	btfsc	status,2,c
  1805  002062  EFB6  F00F         	goto	l11812
  1806  002066  0A01               	xorlw	1	; case 79
  1807  002068  B4D8               	btfsc	status,2,c
  1808  00206A  EFC7  F00F         	goto	l11814
  1809  00206E  EFBF  F00E         	goto	l1925
  1810  002072  EF43  F001         	goto	start
  1811  002076                     __end_of_main:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _stepper_move_one_deg_cw *****************
  1815 ;; Defined at:
  1816 ;;		line 61 in file "ECU/stepper/ecu_stepper.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  stepper         2    8[BANK0 ] PTR struct .
  1819 ;;		 -> stepper_base(2), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  i               2   10[BANK0 ] int 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;Total ram usage:        4 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 10
  1838 ;; This function calls:
  1839 ;;		_Ecu_Stepper_Step
  1840 ;;		_GPIO_Pin_Write_Logic
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text1
  1847  0046FE                     __ptext1:
  1848                           	callstack 0
  1849  0046FE                     _stepper_move_one_deg_cw:
  1850                           	callstack 20
  1851  0046FE                     
  1852                           ;ECU/stepper/ecu_stepper.c: 61: Std_ReturnType stepper_move_one_deg_cw(stepper_config_st
      +                           *stepper);ECU/stepper/ecu_stepper.c: 62: {;ECU/stepper/ecu_stepper.c: 63:     if(((void
      +                          *)0) == stepper)
  1853  0046FE  0100               	movlb	0	; () banked
  1854  004700  5168               	movf	stepper_move_one_deg_cw@stepper& (0+255),w,b
  1855  004702  1169               	iorwf	(stepper_move_one_deg_cw@stepper+1)& (0+255),w,b
  1856  004704  A4D8               	btfss	status,2,c
  1857  004706  EF87  F023         	goto	u11911
  1858  00470A  EF89  F023         	goto	u11910
  1859  00470E                     u11911:
  1860  00470E  EF8B  F023         	goto	l11066
  1861  004712                     u11910:
  1862  004712  EFB1  F023         	goto	l342
  1863  004716                     l11066:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;ECU/stepper/ecu_stepper.c: 68:     {;ECU/stepper/ecu_stepper.c: 69:        GPIO_Pin_Wri
      +                          te_Logic(&(stepper->dir_pin) , GPIO_HIGH);
  1867  004716  0E01               	movlw	1
  1868  004718  2568               	addwf	stepper_move_one_deg_cw@stepper& (0+255),w,b
  1869  00471A  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1870  00471C  0E00               	movlw	0
  1871  00471E  2169               	addwfc	(stepper_move_one_deg_cw@stepper+1)& (0+255),w,b
  1872  004720  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1873  004722  0E01               	movlw	1
  1874  004724  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1875  004726  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  1876  00472A                     
  1877                           ;ECU/stepper/ecu_stepper.c: 70:         for(int i=0; i<= 9; i++)
  1878  00472A  0E00               	movlw	0
  1879  00472C  0100               	movlb	0	; () banked
  1880  00472E  6F6B               	movwf	(stepper_move_one_deg_cw@i+1)& (0+255),b
  1881  004730  0E00               	movlw	0
  1882  004732  6F6A               	movwf	stepper_move_one_deg_cw@i& (0+255),b
  1883  004734                     l11074:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;ECU/stepper/ecu_stepper.c: 71:         {;ECU/stepper/ecu_stepper.c: 72:             Ecu
      +                          _Stepper_Step(stepper);
  1887  004734  C068  F022         	movff	stepper_move_one_deg_cw@stepper,Ecu_Stepper_Step@stepper
  1888  004738  C069  F023         	movff	stepper_move_one_deg_cw@stepper+1,Ecu_Stepper_Step@stepper+1
  1889  00473C  EC2D  F021         	call	_Ecu_Stepper_Step	;wreg free
  1890  004740                     
  1891                           ;ECU/stepper/ecu_stepper.c: 73:         }
  1892  004740  0100               	movlb	0	; () banked
  1893  004742  4B6A               	infsnz	stepper_move_one_deg_cw@i& (0+255),f,b
  1894  004744  2B6B               	incf	(stepper_move_one_deg_cw@i+1)& (0+255),f,b
  1895  004746                     
  1896                           ; BSR set to: 0
  1897  004746  BF6B               	btfsc	(stepper_move_one_deg_cw@i+1)& (0+255),7,b
  1898  004748  EFAF  F023         	goto	u11921
  1899  00474C  516B               	movf	(stepper_move_one_deg_cw@i+1)& (0+255),w,b
  1900  00474E  E109               	bnz	u11920
  1901  004750  0E0A               	movlw	10
  1902  004752  5D6A               	subwf	stepper_move_one_deg_cw@i& (0+255),w,b
  1903  004754  A0D8               	btfss	status,0,c
  1904  004756  EFAF  F023         	goto	u11921
  1905  00475A  EFB1  F023         	goto	u11920
  1906  00475E                     u11921:
  1907  00475E  EF9A  F023         	goto	l11074
  1908  004762                     u11920:
  1909  004762                     l342:
  1910                           
  1911                           ; BSR set to: 0
  1912  004762  0012               	return		;funcret
  1913  004764                     __end_of_stepper_move_one_deg_cw:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _stepper_move_one_deg_ccw *****************
  1917 ;; Defined at:
  1918 ;;		line 77 in file "ECU/stepper/ecu_stepper.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  stepper         2    8[BANK0 ] PTR struct .
  1921 ;;		 -> stepper_base(2), 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  i               2   10[BANK0 ] int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      unsigned char 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;Total ram usage:        4 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 10
  1940 ;; This function calls:
  1941 ;;		_Ecu_Stepper_Step
  1942 ;;		_GPIO_Pin_Write_Logic
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text2
  1949  004764                     __ptext2:
  1950                           	callstack 0
  1951  004764                     _stepper_move_one_deg_ccw:
  1952                           	callstack 20
  1953  004764                     
  1954                           ;ECU/stepper/ecu_stepper.c: 77: Std_ReturnType stepper_move_one_deg_ccw(stepper_config_s
      +                          t *stepper);ECU/stepper/ecu_stepper.c: 78: {;ECU/stepper/ecu_stepper.c: 79:     if(((voi
      +                          d*)0) == stepper)
  1955  004764  0100               	movlb	0	; () banked
  1956  004766  5168               	movf	stepper_move_one_deg_ccw@stepper& (0+255),w,b
  1957  004768  1169               	iorwf	(stepper_move_one_deg_ccw@stepper+1)& (0+255),w,b
  1958  00476A  A4D8               	btfss	status,2,c
  1959  00476C  EFBA  F023         	goto	u11931
  1960  004770  EFBC  F023         	goto	u11930
  1961  004774                     u11931:
  1962  004774  EFBE  F023         	goto	l11086
  1963  004778                     u11930:
  1964  004778  EFE4  F023         	goto	l349
  1965  00477C                     l11086:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;ECU/stepper/ecu_stepper.c: 84:     {;ECU/stepper/ecu_stepper.c: 85:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->dir_pin) , GPIO_LOW);
  1969  00477C  0E01               	movlw	1
  1970  00477E  2568               	addwf	stepper_move_one_deg_ccw@stepper& (0+255),w,b
  1971  004780  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1972  004782  0E00               	movlw	0
  1973  004784  2169               	addwfc	(stepper_move_one_deg_ccw@stepper+1)& (0+255),w,b
  1974  004786  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1975  004788  0E00               	movlw	0
  1976  00478A  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1977  00478C  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  1978  004790                     
  1979                           ;ECU/stepper/ecu_stepper.c: 86:         for(int i=0; i<= 9; i++)
  1980  004790  0E00               	movlw	0
  1981  004792  0100               	movlb	0	; () banked
  1982  004794  6F6B               	movwf	(stepper_move_one_deg_ccw@i+1)& (0+255),b
  1983  004796  0E00               	movlw	0
  1984  004798  6F6A               	movwf	stepper_move_one_deg_ccw@i& (0+255),b
  1985  00479A                     l11094:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;ECU/stepper/ecu_stepper.c: 87:         {;ECU/stepper/ecu_stepper.c: 88:             Ecu
      +                          _Stepper_Step(stepper);
  1989  00479A  C068  F022         	movff	stepper_move_one_deg_ccw@stepper,Ecu_Stepper_Step@stepper
  1990  00479E  C069  F023         	movff	stepper_move_one_deg_ccw@stepper+1,Ecu_Stepper_Step@stepper+1
  1991  0047A2  EC2D  F021         	call	_Ecu_Stepper_Step	;wreg free
  1992  0047A6                     
  1993                           ;ECU/stepper/ecu_stepper.c: 89:         }
  1994  0047A6  0100               	movlb	0	; () banked
  1995  0047A8  4B6A               	infsnz	stepper_move_one_deg_ccw@i& (0+255),f,b
  1996  0047AA  2B6B               	incf	(stepper_move_one_deg_ccw@i+1)& (0+255),f,b
  1997  0047AC                     
  1998                           ; BSR set to: 0
  1999  0047AC  BF6B               	btfsc	(stepper_move_one_deg_ccw@i+1)& (0+255),7,b
  2000  0047AE  EFE2  F023         	goto	u11941
  2001  0047B2  516B               	movf	(stepper_move_one_deg_ccw@i+1)& (0+255),w,b
  2002  0047B4  E109               	bnz	u11940
  2003  0047B6  0E0A               	movlw	10
  2004  0047B8  5D6A               	subwf	stepper_move_one_deg_ccw@i& (0+255),w,b
  2005  0047BA  A0D8               	btfss	status,0,c
  2006  0047BC  EFE2  F023         	goto	u11941
  2007  0047C0  EFE4  F023         	goto	u11940
  2008  0047C4                     u11941:
  2009  0047C4  EFCD  F023         	goto	l11094
  2010  0047C8                     u11940:
  2011  0047C8                     l349:
  2012                           
  2013                           ; BSR set to: 0
  2014  0047C8  0012               	return		;funcret
  2015  0047CA                     __end_of_stepper_move_one_deg_ccw:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _Ecu_Stepper_Step *****************
  2019 ;; Defined at:
  2020 ;;		line 26 in file "ECU/stepper/ecu_stepper.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  stepper         2   33[COMRAM] PTR struct .
  2023 ;;		 -> stepper_base(2), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      unsigned char 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;Total ram usage:        4 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; Hardware stack levels required when called: 9
  2042 ;; This function calls:
  2043 ;;		_GPIO_Pin_Write_Logic
  2044 ;; This function is called by:
  2045 ;;		_stepper_move_one_deg_cw
  2046 ;;		_stepper_move_one_deg_ccw
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text3
  2051  00425A                     __ptext3:
  2052                           	callstack 0
  2053  00425A                     _Ecu_Stepper_Step:
  2054                           	callstack 20
  2055  00425A                     
  2056                           ;ECU/stepper/ecu_stepper.c: 26: Std_ReturnType Ecu_Stepper_Step(stepper_config_st *stepp
      +                          er);ECU/stepper/ecu_stepper.c: 27: {;ECU/stepper/ecu_stepper.c: 28:     if(((void*)0) ==
      +                           stepper)
  2057  00425A  5022               	movf	Ecu_Stepper_Step@stepper^0,w,c
  2058  00425C  1023               	iorwf	(Ecu_Stepper_Step@stepper+1)^0,w,c
  2059  00425E  A4D8               	btfss	status,2,c
  2060  004260  EF34  F021         	goto	u11751
  2061  004264  EF36  F021         	goto	u11750
  2062  004268                     u11751:
  2063  004268  EF38  F021         	goto	l10904
  2064  00426C                     u11750:
  2065  00426C  EF64  F021         	goto	l330
  2066  004270                     l10904:
  2067                           
  2068                           ;ECU/stepper/ecu_stepper.c: 33:     {;ECU/stepper/ecu_stepper.c: 34:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->step_pin) , 1);
  2069  004270  C022  F01E         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  2070  004274  C023  F01F         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2071  004278  0E01               	movlw	1
  2072  00427A  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2073  00427C  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  2074  004280                     
  2075                           ;ECU/stepper/ecu_stepper.c: 35:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2076  004280  0E06               	movlw	6
  2077  004282  0100               	movlb	0	; () banked
  2078  004284  6F67               	movwf	(??_Ecu_Stepper_Step+1)& (0+255),b
  2079  004286  0E13               	movlw	19
  2080  004288  6F66               	movwf	??_Ecu_Stepper_Step& (0+255),b
  2081  00428A  0EAD               	movlw	173
  2082  00428C                     u12507:
  2083  00428C  2EE8               	decfsz	wreg,f,c
  2084  00428E  D7FE               	bra	u12507
  2085  004290  2F66               	decfsz	??_Ecu_Stepper_Step& (0+255),f,b
  2086  004292  D7FC               	bra	u12507
  2087  004294  2F67               	decfsz	(??_Ecu_Stepper_Step+1)& (0+255),f,b
  2088  004296  D7FA               	bra	u12507
  2089  004298  F000 F000          	nop2	
  2090  00429C                     
  2091                           ;ECU/stepper/ecu_stepper.c: 36:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , 0);
  2092  00429C  C022  F01E         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  2093  0042A0  C023  F01F         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2094  0042A4  0E00               	movlw	0
  2095  0042A6  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2096  0042A8  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  2097                           
  2098                           ;ECU/stepper/ecu_stepper.c: 37:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2099  0042AC  0E06               	movlw	6
  2100  0042AE  0100               	movlb	0	; () banked
  2101  0042B0  6F67               	movwf	(??_Ecu_Stepper_Step+1)& (0+255),b
  2102  0042B2  0E13               	movlw	19
  2103  0042B4  6F66               	movwf	??_Ecu_Stepper_Step& (0+255),b
  2104  0042B6  0EAD               	movlw	173
  2105  0042B8                     u12517:
  2106  0042B8  2EE8               	decfsz	wreg,f,c
  2107  0042BA  D7FE               	bra	u12517
  2108  0042BC  2F66               	decfsz	??_Ecu_Stepper_Step& (0+255),f,b
  2109  0042BE  D7FC               	bra	u12517
  2110  0042C0  2F67               	decfsz	(??_Ecu_Stepper_Step+1)& (0+255),f,b
  2111  0042C2  D7FA               	bra	u12517
  2112  0042C4  F000 F000          	nop2	
  2113  0042C8                     l330:
  2114  0042C8  0012               	return		;funcret
  2115  0042CA                     __end_of_Ecu_Stepper_Step:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _application_intialize *****************
  2119 ;; Defined at:
  2120 ;;		line 375 in file "application.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 13
  2141 ;; This function calls:
  2142 ;;		_Ecu_Stepper_Init
  2143 ;;		_GPIO_Pin_Initialize
  2144 ;;		_Robot_Nav_Init
  2145 ;;		_Servo_SetAngle
  2146 ;;		_Ultra_Sonic_Init
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text4
  2153  002E70                     __ptext4:
  2154                           	callstack 0
  2155  002E70                     _application_intialize:
  2156                           	callstack 17
  2157  002E70                     
  2158                           ;application.c: 379:     GPIO_Pin_Initialize(&TEST_PIN);
  2159  002E70  0E41               	movlw	low _TEST_PIN
  2160  002E72  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  2161  002E74  0E00               	movlw	high _TEST_PIN
  2162  002E76  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  2163  002E78  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  2164                           
  2165                           ;application.c: 380:     GPIO_Pin_Initialize(&selector);
  2166  002E7C  0E40               	movlw	low _selector
  2167  002E7E  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  2168  002E80  0E00               	movlw	high _selector
  2169  002E82  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  2170  002E84  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  2171                           
  2172                           ;application.c: 384:     Ecu_Stepper_Init(&stepper_base);
  2173  002E88  0E3E               	movlw	low _stepper_base
  2174  002E8A  0100               	movlb	0	; () banked
  2175  002E8C  6F66               	movwf	Ecu_Stepper_Init@stepper& (0+255),b
  2176  002E8E  0E00               	movlw	high _stepper_base
  2177  002E90  6F67               	movwf	(Ecu_Stepper_Init@stepper+1)& (0+255),b
  2178  002E92  ECEF  F020         	call	_Ecu_Stepper_Init	;wreg free
  2179                           
  2180                           ;application.c: 388:     Robot_Nav_Init();
  2181  002E96  ECA9  F020         	call	_Robot_Nav_Init	;wreg free
  2182                           
  2183                           ;application.c: 392:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 0 , 90 );
  2184  002E9A  0EC6               	movlw	low _i2c_obj
  2185  002E9C  0101               	movlb	1	; () banked
  2186  002E9E  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2187  002EA0  0E00               	movlw	high _i2c_obj
  2188  002EA2  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2189  002EA4  0ECD               	movlw	low _servo_driver_obj
  2190  002EA6  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2191  002EA8  0E00               	movlw	high _servo_driver_obj
  2192  002EAA  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2193  002EAC  0E00               	movlw	0
  2194  002EAE  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2195  002EB0  0E5A               	movlw	90
  2196  002EB2  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2197  002EB4  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2198                           
  2199                           ;application.c: 393:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 1 , 90 );
  2200  002EB8  0EC6               	movlw	low _i2c_obj
  2201  002EBA  0101               	movlb	1	; () banked
  2202  002EBC  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2203  002EBE  0E00               	movlw	high _i2c_obj
  2204  002EC0  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2205  002EC2  0ECD               	movlw	low _servo_driver_obj
  2206  002EC4  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2207  002EC6  0E00               	movlw	high _servo_driver_obj
  2208  002EC8  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2209  002ECA  0E01               	movlw	1
  2210  002ECC  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2211  002ECE  0E5A               	movlw	90
  2212  002ED0  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2213  002ED2  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2214                           
  2215                           ;application.c: 394:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 2 , 90 );
  2216  002ED6  0EC6               	movlw	low _i2c_obj
  2217  002ED8  0101               	movlb	1	; () banked
  2218  002EDA  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2219  002EDC  0E00               	movlw	high _i2c_obj
  2220  002EDE  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2221  002EE0  0ECD               	movlw	low _servo_driver_obj
  2222  002EE2  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2223  002EE4  0E00               	movlw	high _servo_driver_obj
  2224  002EE6  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2225  002EE8  0E02               	movlw	2
  2226  002EEA  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2227  002EEC  0E5A               	movlw	90
  2228  002EEE  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2229  002EF0  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2230                           
  2231                           ;application.c: 395:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 3 , 90 );
  2232  002EF4  0EC6               	movlw	low _i2c_obj
  2233  002EF6  0101               	movlb	1	; () banked
  2234  002EF8  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2235  002EFA  0E00               	movlw	high _i2c_obj
  2236  002EFC  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2237  002EFE  0ECD               	movlw	low _servo_driver_obj
  2238  002F00  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2239  002F02  0E00               	movlw	high _servo_driver_obj
  2240  002F04  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2241  002F06  0E03               	movlw	3
  2242  002F08  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2243  002F0A  0E5A               	movlw	90
  2244  002F0C  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2245  002F0E  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2246                           
  2247                           ;application.c: 399:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 4 , 0);
  2248  002F12  0EC6               	movlw	low _i2c_obj
  2249  002F14  0101               	movlb	1	; () banked
  2250  002F16  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2251  002F18  0E00               	movlw	high _i2c_obj
  2252  002F1A  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2253  002F1C  0ECD               	movlw	low _servo_driver_obj
  2254  002F1E  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2255  002F20  0E00               	movlw	high _servo_driver_obj
  2256  002F22  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2257  002F24  0E04               	movlw	4
  2258  002F26  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2259  002F28  0E00               	movlw	0
  2260  002F2A  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2261  002F2C  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2262                           
  2263                           ;application.c: 400:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 5 , 0);
  2264  002F30  0EC6               	movlw	low _i2c_obj
  2265  002F32  0101               	movlb	1	; () banked
  2266  002F34  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2267  002F36  0E00               	movlw	high _i2c_obj
  2268  002F38  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2269  002F3A  0ECD               	movlw	low _servo_driver_obj
  2270  002F3C  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2271  002F3E  0E00               	movlw	high _servo_driver_obj
  2272  002F40  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2273  002F42  0E05               	movlw	5
  2274  002F44  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2275  002F46  0E00               	movlw	0
  2276  002F48  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2277  002F4A  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2278                           
  2279                           ;application.c: 401:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 6 , 0);
  2280  002F4E  0EC6               	movlw	low _i2c_obj
  2281  002F50  0101               	movlb	1	; () banked
  2282  002F52  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2283  002F54  0E00               	movlw	high _i2c_obj
  2284  002F56  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2285  002F58  0ECD               	movlw	low _servo_driver_obj
  2286  002F5A  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2287  002F5C  0E00               	movlw	high _servo_driver_obj
  2288  002F5E  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2289  002F60  0E06               	movlw	6
  2290  002F62  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2291  002F64  0E00               	movlw	0
  2292  002F66  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2293  002F68  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2294                           
  2295                           ;application.c: 402:     Servo_SetAngle(&i2c_obj , &servo_driver_obj , 7 , 0);
  2296  002F6C  0EC6               	movlw	low _i2c_obj
  2297  002F6E  0101               	movlb	1	; () banked
  2298  002F70  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  2299  002F72  0E00               	movlw	high _i2c_obj
  2300  002F74  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  2301  002F76  0ECD               	movlw	low _servo_driver_obj
  2302  002F78  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  2303  002F7A  0E00               	movlw	high _servo_driver_obj
  2304  002F7C  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  2305  002F7E  0E07               	movlw	7
  2306  002F80  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  2307  002F82  0E00               	movlw	0
  2308  002F84  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  2309  002F86  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  2310                           
  2311                           ;application.c: 405:     Ultra_Sonic_Init(&ultrasonic,&timer0);
  2312  002F8A  0ED1               	movlw	low _ultrasonic
  2313  002F8C  0100               	movlb	0	; () banked
  2314  002F8E  6F66               	movwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),b
  2315  002F90  0E00               	movlw	high _ultrasonic
  2316  002F92  6F67               	movwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),b
  2317  002F94  0EF8               	movlw	low _timer0
  2318  002F96  6F68               	movwf	Ultra_Sonic_Init@_tmr0_config& (0+255),b
  2319  002F98  0E00               	movlw	high _timer0
  2320  002F9A  6F69               	movwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),b
  2321  002F9C  EC46  F024         	call	_Ultra_Sonic_Init	;wreg free
  2322  002FA0  0012               	return		;funcret
  2323  002FA2                     __end_of_application_intialize:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _Ultra_Sonic_Init *****************
  2327 ;; Defined at:
  2328 ;;		line 9 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  ultrasonic_o    2    6[BANK0 ] PTR const struct .
  2331 ;;		 -> ultrasonic(2), 
  2332 ;;  _tmr0_config    2    8[BANK0 ] PTR const struct .
  2333 ;;		 -> timer0(4), 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  ERRORSTATUS     1    0        unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 10
  2352 ;; This function calls:
  2353 ;;		_GPIO_Pin_Initialize
  2354 ;;		_HAL_Timer0_Init
  2355 ;; This function is called by:
  2356 ;;		_application_intialize
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text5
  2361  00488C                     __ptext5:
  2362                           	callstack 0
  2363  00488C                     _Ultra_Sonic_Init:
  2364                           	callstack 19
  2365  00488C                     
  2366                           ;Robot/sensors/ultrasonic/ultrasonic.c: 12:     if ( ((void*)0)==ultrasonic_object||((vo
      +                          id*)0)==_tmr0_config)
  2367  00488C  0100               	movlb	0	; () banked
  2368  00488E  5166               	movf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  2369  004890  1167               	iorwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  2370  004892  B4D8               	btfsc	status,2,c
  2371  004894  EF4E  F024         	goto	u11801
  2372  004898  EF50  F024         	goto	u11800
  2373  00489C                     u11801:
  2374  00489C  EF59  F024         	goto	l10972
  2375  0048A0                     u11800:
  2376  0048A0                     
  2377                           ; BSR set to: 0
  2378  0048A0  5168               	movf	Ultra_Sonic_Init@_tmr0_config& (0+255),w,b
  2379  0048A2  1169               	iorwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),w,b
  2380  0048A4  A4D8               	btfss	status,2,c
  2381  0048A6  EF57  F024         	goto	u11811
  2382  0048AA  EF59  F024         	goto	u11810
  2383  0048AE                     u11811:
  2384  0048AE  EF5B  F024         	goto	l10974
  2385  0048B2                     u11810:
  2386  0048B2                     l10972:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;Robot/sensors/ultrasonic/ultrasonic.c: 15:     }
  2390  0048B2  EF70  F024         	goto	l1792
  2391  0048B6                     l10974:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;Robot/sensors/ultrasonic/ultrasonic.c: 17:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           18:         GPIO_Pin_Initialize(&(ultrasonic_object->trig_pin));
  2395  0048B6  C066  F022         	movff	Ultra_Sonic_Init@ultrasonic_object,GPIO_Pin_Initialize@_pin_config
  2396  0048BA  C067  F023         	movff	Ultra_Sonic_Init@ultrasonic_object+1,GPIO_Pin_Initialize@_pin_config+1
  2397  0048BE  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  2398                           
  2399                           ;Robot/sensors/ultrasonic/ultrasonic.c: 19:         GPIO_Pin_Initialize(&(ultrasonic_obj
      +                          ect->echo_pin));
  2400  0048C2  0E01               	movlw	1
  2401  0048C4  0100               	movlb	0	; () banked
  2402  0048C6  2566               	addwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  2403  0048C8  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  2404  0048CA  0E00               	movlw	0
  2405  0048CC  2167               	addwfc	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  2406  0048CE  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  2407  0048D0  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  2408  0048D4                     
  2409                           ;Robot/sensors/ultrasonic/ultrasonic.c: 20:         HAL_Timer0_Init(_tmr0_config);
  2410  0048D4  C068  F023         	movff	Ultra_Sonic_Init@_tmr0_config,HAL_Timer0_Init@_tmr0_config
  2411  0048D8  C069  F024         	movff	Ultra_Sonic_Init@_tmr0_config+1,HAL_Timer0_Init@_tmr0_config+1
  2412  0048DC  EC73  F019         	call	_HAL_Timer0_Init	;wreg free
  2413  0048E0                     l1792:
  2414  0048E0  0012               	return		;funcret
  2415  0048E2                     __end_of_Ultra_Sonic_Init:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _HAL_Timer0_Init *****************
  2419 ;; Defined at:
  2420 ;;		line 25 in file "MCAL/Timer0/hal_timer0.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  _tmr0_config    2   34[COMRAM] PTR const struct .
  2423 ;;		 -> timer0(4), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  ret_value       1    0        unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      unsigned char 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        3 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 9
  2442 ;; This function calls:
  2443 ;;		_HAL_Timer0_Write_Val
  2444 ;; This function is called by:
  2445 ;;		_Ultra_Sonic_Init
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text6
  2450  0032E6                     __ptext6:
  2451                           	callstack 0
  2452  0032E6                     _HAL_Timer0_Init:
  2453                           	callstack 19
  2454  0032E6                     
  2455                           ;MCAL/Timer0/hal_timer0.c: 29:     if(((void*)0) == _tmr0_config)
  2456  0032E6  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2457  0032E8  1024               	iorwf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2458  0032EA  A4D8               	btfss	status,2,c
  2459  0032EC  EF7A  F019         	goto	u11481
  2460  0032F0  EF7C  F019         	goto	u11480
  2461  0032F4                     u11481:
  2462  0032F4  EF7E  F019         	goto	l1510
  2463  0032F8                     u11480:
  2464  0032F8                     
  2465                           ;MCAL/Timer0/hal_timer0.c: 32:     }
  2466  0032F8  EFF3  F019         	goto	l1517
  2467  0032FC                     l1510:
  2468                           
  2469                           ;MCAL/Timer0/hal_timer0.c: 34:     {;MCAL/Timer0/hal_timer0.c: 36:         (T0CONbits.TM
      +                          R0ON = 0 );
  2470  0032FC  9ED5               	bcf	213,7,c	;volatile
  2471  0032FE                     
  2472                           ;MCAL/Timer0/hal_timer0.c: 38:         (T0CONbits.T08BIT = _tmr0_config->reg_bit_size);
  2473  0032FE  EE20 F003          	lfsr	2,3
  2474  003302  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2475  003304  26D9               	addwf	fsr2l,f,c
  2476  003306  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2477  003308  22DA               	addwfc	fsr2h,f,c
  2478  00330A  A2DF               	btfss	indf2,1,c
  2479  00330C  D002               	bra	u11495
  2480  00330E  8CD5               	bsf	213,6,c	;volatile
  2481  003310  D001               	bra	u11497
  2482  003312                     u11495:
  2483  003312  9CD5               	bcf	213,6,c	;volatile
  2484  003314                     u11497:
  2485                           
  2486                           ;MCAL/Timer0/hal_timer0.c: 40:         if(0x00U == _tmr0_config->prescaler_enable )
  2487  003314  EE20 F003          	lfsr	2,3
  2488  003318  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2489  00331A  26D9               	addwf	fsr2l,f,c
  2490  00331C  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2491  00331E  22DA               	addwfc	fsr2h,f,c
  2492  003320  B4DF               	btfsc	indf2,2,c
  2493  003322  EF95  F019         	goto	u11501
  2494  003326  EF97  F019         	goto	u11500
  2495  00332A                     u11501:
  2496  00332A  EFA6  F019         	goto	l10728
  2497  00332E                     u11500:
  2498  00332E                     
  2499                           ;MCAL/Timer0/hal_timer0.c: 41:         {;MCAL/Timer0/hal_timer0.c: 42:             (T0CO
      +                          Nbits.T0PS = _tmr0_config->prescalar_value );
  2500  00332E  C023  FFD9         	movff	HAL_Timer0_Init@_tmr0_config,fsr2l
  2501  003332  C024  FFDA         	movff	HAL_Timer0_Init@_tmr0_config+1,fsr2h
  2502  003336  50DF               	movf	indf2,w,c
  2503  003338  0100               	movlb	0	; () banked
  2504  00333A  6F60               	movwf	??_HAL_Timer0_Init& (0+255),b
  2505  00333C  50D5               	movf	213,w,c	;volatile
  2506  00333E  1960               	xorwf	??_HAL_Timer0_Init& (0+255),w,b
  2507  003340  0BF8               	andlw	-8
  2508  003342  1960               	xorwf	??_HAL_Timer0_Init& (0+255),w,b
  2509  003344  6ED5               	movwf	213,c	;volatile
  2510  003346                     
  2511                           ; BSR set to: 0
  2512                           ;MCAL/Timer0/hal_timer0.c: 43:             (T0CONbits.PSA = 0 );
  2513  003346  96D5               	bcf	213,3,c	;volatile
  2514                           
  2515                           ;MCAL/Timer0/hal_timer0.c: 44:         }
  2516  003348  EFB4  F019         	goto	l10732
  2517  00334C                     l10728:
  2518  00334C  EE20 F003          	lfsr	2,3
  2519  003350  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2520  003352  26D9               	addwf	fsr2l,f,c
  2521  003354  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2522  003356  22DA               	addwfc	fsr2h,f,c
  2523  003358  A4DF               	btfss	indf2,2,c
  2524  00335A  EFB1  F019         	goto	u11511
  2525  00335E  EFB3  F019         	goto	u11510
  2526  003362                     u11511:
  2527  003362  EFB4  F019         	goto	l10732
  2528  003366                     u11510:
  2529  003366                     
  2530                           ;MCAL/Timer0/hal_timer0.c: 46:         {;MCAL/Timer0/hal_timer0.c: 47:             (T0CO
      +                          Nbits.PSA = 1 );
  2531  003366  86D5               	bsf	213,3,c	;volatile
  2532  003368                     l10732:
  2533                           
  2534                           ;MCAL/Timer0/hal_timer0.c: 52:         if( 0x01U == _tmr0_config->timer_mode)
  2535  003368  EE20 F003          	lfsr	2,3
  2536  00336C  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2537  00336E  26D9               	addwf	fsr2l,f,c
  2538  003370  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2539  003372  22DA               	addwfc	fsr2h,f,c
  2540  003374  A0DF               	btfss	indf2,0,c
  2541  003376  EFBF  F019         	goto	u11521
  2542  00337A  EFC1  F019         	goto	u11520
  2543  00337E                     u11521:
  2544  00337E  EFCD  F019         	goto	l10738
  2545  003382                     u11520:
  2546  003382                     
  2547                           ;MCAL/Timer0/hal_timer0.c: 53:         {;MCAL/Timer0/hal_timer0.c: 55:              (T0C
      +                          ONbits.T0SE = _tmr0_config->edge);
  2548  003382  EE20 F003          	lfsr	2,3
  2549  003386  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2550  003388  26D9               	addwf	fsr2l,f,c
  2551  00338A  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2552  00338C  22DA               	addwfc	fsr2h,f,c
  2553  00338E  A6DF               	btfss	indf2,3,c
  2554  003390  D002               	bra	u11535
  2555  003392  88D5               	bsf	213,4,c	;volatile
  2556  003394  D001               	bra	u11537
  2557  003396                     u11535:
  2558  003396  98D5               	bcf	213,4,c	;volatile
  2559  003398                     u11537:
  2560  003398                     
  2561                           ;MCAL/Timer0/hal_timer0.c: 58:             (TRISA|=( (uint8)1<<GPIO_PIN4 ));
  2562  003398  8892               	bsf	146,4,c	;volatile
  2563  00339A                     l10738:
  2564                           
  2565                           ;MCAL/Timer0/hal_timer0.c: 60:         (T0CONbits.T0CS = _tmr0_config->timer_mode);
  2566  00339A  EE20 F003          	lfsr	2,3
  2567  00339E  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2568  0033A0  26D9               	addwf	fsr2l,f,c
  2569  0033A2  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2570  0033A4  22DA               	addwfc	fsr2h,f,c
  2571  0033A6  A0DF               	btfss	indf2,0,c
  2572  0033A8  D002               	bra	u11545
  2573  0033AA  8AD5               	bsf	213,5,c	;volatile
  2574  0033AC  D001               	bra	u11547
  2575  0033AE                     u11545:
  2576  0033AE  9AD5               	bcf	213,5,c	;volatile
  2577  0033B0                     u11547:
  2578  0033B0  C023  F01E         	movff	HAL_Timer0_Init@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
  2579  0033B4  C024  F01F         	movff	HAL_Timer0_Init@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
  2580  0033B8  EE20 F001          	lfsr	2,1
  2581  0033BC  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2582  0033BE  26D9               	addwf	fsr2l,f,c
  2583  0033C0  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2584  0033C2  22DA               	addwfc	fsr2h,f,c
  2585  0033C4  CFDE F020          	movff	postinc2,HAL_Timer0_Write_Val@val
  2586  0033C8  CFDD F021          	movff	postdec2,HAL_Timer0_Write_Val@val+1
  2587  0033CC  EC5A  F025         	call	_HAL_Timer0_Write_Val	;wreg free
  2588  0033D0                     
  2589                           ;MCAL/Timer0/hal_timer0.c: 64:         preloaded_val = _tmr0_config->preloaded_value ;
  2590  0033D0  EE20 F001          	lfsr	2,1
  2591  0033D4  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2592  0033D6  26D9               	addwf	fsr2l,f,c
  2593  0033D8  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2594  0033DA  22DA               	addwfc	fsr2h,f,c
  2595  0033DC  CFDE F0D7          	movff	postinc2,_preloaded_val
  2596  0033E0  CFDD F0D8          	movff	postdec2,_preloaded_val+1
  2597  0033E4                     
  2598                           ;MCAL/Timer0/hal_timer0.c: 97:         (T0CONbits.TMR0ON = 1 );
  2599  0033E4  8ED5               	bsf	213,7,c	;volatile
  2600  0033E6                     l1517:
  2601  0033E6  0012               	return		;funcret
  2602  0033E8                     __end_of_HAL_Timer0_Init:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _Robot_Nav_Init *****************
  2606 ;; Defined at:
  2607 ;;		line 38 in file "Robot/Navigation/robot_navigation.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  ret_val         1    0        unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      unsigned char 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 12
  2628 ;; This function calls:
  2629 ;;		_CCP_Init
  2630 ;;		_CCP_PWM_Set_Duty
  2631 ;;		_CCP_PWM_Start
  2632 ;;		_ECU_DC_Motor_Init
  2633 ;;		_ServoDriver_Init
  2634 ;; This function is called by:
  2635 ;;		_application_intialize
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text7
  2640  004152                     __ptext7:
  2641                           	callstack 0
  2642  004152                     _Robot_Nav_Init:
  2643                           	callstack 17
  2644  004152                     
  2645                           ;Robot/Navigation/robot_navigation.c: 44:         ECU_DC_Motor_Init(&W1_W3_W5_Motor_Cont
      +                          rol);
  2646  004152  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  2647  004154  0100               	movlb	0	; () banked
  2648  004156  6F66               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  2649  004158  0E00               	movlw	high _W1_W3_W5_Motor_Control
  2650  00415A  6F67               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  2651  00415C  ECAC  F025         	call	_ECU_DC_Motor_Init	;wreg free
  2652  004160                     
  2653                           ;Robot/Navigation/robot_navigation.c: 45:         ECU_DC_Motor_Init(&W2_W4_W6_Motor_Cont
      +                          rol);
  2654  004160  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  2655  004162  0100               	movlb	0	; () banked
  2656  004164  6F66               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  2657  004166  0E00               	movlw	high _W2_W4_W6_Motor_Control
  2658  004168  6F67               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  2659  00416A  ECAC  F025         	call	_ECU_DC_Motor_Init	;wreg free
  2660  00416E                     
  2661                           ;Robot/Navigation/robot_navigation.c: 48:         CCP_Init(&CCP1_Obj);
  2662  00416E  0EBA               	movlw	low _CCP1_Obj
  2663  004170  0100               	movlb	0	; () banked
  2664  004172  6F66               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2665  004174  0E00               	movlw	high _CCP1_Obj
  2666  004176  6F67               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2667  004178  ECF4  F019         	call	_CCP_Init	;wreg free
  2668  00417C                     
  2669                           ;Robot/Navigation/robot_navigation.c: 49:         CCP_Init(&CCP2_Obj);
  2670  00417C  0E3F               	movlw	low _CCP2_Obj
  2671  00417E  0100               	movlb	0	; () banked
  2672  004180  6F66               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2673  004182  0E01               	movlw	high _CCP2_Obj
  2674  004184  6F67               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2675  004186  ECF4  F019         	call	_CCP_Init	;wreg free
  2676  00418A                     
  2677                           ;Robot/Navigation/robot_navigation.c: 50:         CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  2678  00418A  0EBA               	movlw	low _CCP1_Obj
  2679  00418C  0101               	movlb	1	; () banked
  2680  00418E  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  2681  004190  0E00               	movlw	high _CCP1_Obj
  2682  004192  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  2683  004194  0E00               	movlw	0
  2684  004196  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  2685  004198  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  2686  00419C                     
  2687                           ;Robot/Navigation/robot_navigation.c: 51:         CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  2688  00419C  0E3F               	movlw	low _CCP2_Obj
  2689  00419E  0101               	movlb	1	; () banked
  2690  0041A0  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  2691  0041A2  0E01               	movlw	high _CCP2_Obj
  2692  0041A4  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  2693  0041A6  0E00               	movlw	0
  2694  0041A8  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  2695  0041AA  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  2696  0041AE                     
  2697                           ;Robot/Navigation/robot_navigation.c: 52:         CCP_PWM_Start(&CCP1_Obj);
  2698  0041AE  0EBA               	movlw	low _CCP1_Obj
  2699  0041B0  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  2700  0041B2  0E00               	movlw	high _CCP1_Obj
  2701  0041B4  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  2702  0041B6  EC18  F024         	call	_CCP_PWM_Start	;wreg free
  2703  0041BA                     
  2704                           ;Robot/Navigation/robot_navigation.c: 53:         CCP_PWM_Start(&CCP2_Obj);
  2705  0041BA  0E3F               	movlw	low _CCP2_Obj
  2706  0041BC  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  2707  0041BE  0E01               	movlw	high _CCP2_Obj
  2708  0041C0  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  2709  0041C2  EC18  F024         	call	_CCP_PWM_Start	;wreg free
  2710  0041C6                     
  2711                           ;Robot/Navigation/robot_navigation.c: 57:         ServoDriver_Init(&i2c_obj,&servo_drive
      +                          r_obj);
  2712  0041C6  0EC6               	movlw	low _i2c_obj
  2713  0041C8  0101               	movlb	1	; () banked
  2714  0041CA  6F5D               	movwf	ServoDriver_Init@i2c_obj& (0+255),b
  2715  0041CC  0E00               	movlw	high _i2c_obj
  2716  0041CE  6F5E               	movwf	(ServoDriver_Init@i2c_obj+1)& (0+255),b
  2717  0041D0  0ECD               	movlw	low _servo_driver_obj
  2718  0041D2  6F5F               	movwf	ServoDriver_Init@servo_driver_obj& (0+255),b
  2719  0041D4  0E00               	movlw	high _servo_driver_obj
  2720  0041D6  6F60               	movwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),b
  2721  0041D8  ECC9  F01B         	call	_ServoDriver_Init	;wreg free
  2722  0041DC  0012               	return		;funcret
  2723  0041DE                     __end_of_Robot_Nav_Init:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _ServoDriver_Init *****************
  2727 ;; Defined at:
  2728 ;;		line 13 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  i2c_obj         2   18[BANK1 ] PTR const struct .
  2731 ;;		 -> i2c_obj(7), 
  2732 ;;  servo_driver    2   20[BANK1 ] PTR const struct .
  2733 ;;		 -> servo_driver_obj(4), 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  ERRORSTATUS     1    0        unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      unsigned char 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2745 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;Total ram usage:        4 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 11
  2752 ;; This function calls:
  2753 ;;		_MSSP_I2C_Init
  2754 ;;		_PCA_Write_Reg
  2755 ;; This function is called by:
  2756 ;;		_Robot_Nav_Init
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text8
  2761  003792                     __ptext8:
  2762                           	callstack 0
  2763  003792                     _ServoDriver_Init:
  2764                           	callstack 17
  2765  003792                     
  2766                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 16:     if ((((void*)0)==i2c_obj)
      +                          ||(((void*)0)==servo_driver_obj))
  2767  003792  0101               	movlb	1	; () banked
  2768  003794  515D               	movf	ServoDriver_Init@i2c_obj& (0+255),w,b
  2769  003796  115E               	iorwf	(ServoDriver_Init@i2c_obj+1)& (0+255),w,b
  2770  003798  B4D8               	btfsc	status,2,c
  2771  00379A  EFD1  F01B         	goto	u11371
  2772  00379E  EFD3  F01B         	goto	u11370
  2773  0037A2                     u11371:
  2774  0037A2  EFDC  F01B         	goto	l10656
  2775  0037A6                     u11370:
  2776  0037A6                     
  2777                           ; BSR set to: 1
  2778  0037A6  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2779  0037A8  1160               	iorwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2780  0037AA  A4D8               	btfss	status,2,c
  2781  0037AC  EFDA  F01B         	goto	u11381
  2782  0037B0  EFDC  F01B         	goto	u11380
  2783  0037B4                     u11381:
  2784  0037B4  EFDE  F01B         	goto	l10658
  2785  0037B8                     u11380:
  2786  0037B8                     l10656:
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 19:     }
  2790  0037B8  EF2F  F01C         	goto	l300
  2791  0037BC                     l10658:
  2792                           
  2793                           ; BSR set to: 1
  2794                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 21:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 22:      MSSP_I2C_Init(i2c_obj);
  2795  0037BC  C15D  F15B         	movff	ServoDriver_Init@i2c_obj,MSSP_I2C_Init@i2c_obj
  2796  0037C0  C15E  F15C         	movff	ServoDriver_Init@i2c_obj+1,MSSP_I2C_Init@i2c_obj+1
  2797  0037C4  EC99  F016         	call	_MSSP_I2C_Init	;wreg free
  2798                           
  2799                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 23:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0xFE,servo_driver_obj->frequancy);
  2800  0037C8  C15D  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2801  0037CC  C15E  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2802  0037D0  C15F  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2803  0037D4  C160  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2804  0037D8  50DF               	movf	indf2,w,c
  2805  0037DA  0100               	movlb	0	; () banked
  2806  0037DC  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2807  0037DE  0EFE               	movlw	254
  2808  0037E0  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2809  0037E2  0101               	movlb	1	; () banked
  2810  0037E4  EE20 F001          	lfsr	2,1
  2811  0037E8  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2812  0037EA  26D9               	addwf	fsr2l,f,c
  2813  0037EC  5160               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2814  0037EE  22DA               	addwfc	fsr2h,f,c
  2815  0037F0  50DF               	movf	indf2,w,c
  2816  0037F2  0100               	movlb	0	; () banked
  2817  0037F4  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2818  0037F6  ECE5  F023         	call	_PCA_Write_Reg	;wreg free
  2819                           
  2820                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 24:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x00,servo_driver_obj->mode_1_cfg);
  2821  0037FA  C15D  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2822  0037FE  C15E  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2823  003802  C15F  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2824  003806  C160  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2825  00380A  50DF               	movf	indf2,w,c
  2826  00380C  0100               	movlb	0	; () banked
  2827  00380E  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2828  003810  0E00               	movlw	0
  2829  003812  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2830  003814  0101               	movlb	1	; () banked
  2831  003816  EE20 F002          	lfsr	2,2
  2832  00381A  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2833  00381C  26D9               	addwf	fsr2l,f,c
  2834  00381E  5160               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2835  003820  22DA               	addwfc	fsr2h,f,c
  2836  003822  50DF               	movf	indf2,w,c
  2837  003824  0100               	movlb	0	; () banked
  2838  003826  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2839  003828  ECE5  F023         	call	_PCA_Write_Reg	;wreg free
  2840                           
  2841                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 25:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x01,servo_driver_obj->mode_2_cfg);
  2842  00382C  C15D  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2843  003830  C15E  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2844  003834  C15F  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2845  003838  C160  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2846  00383C  50DF               	movf	indf2,w,c
  2847  00383E  0100               	movlb	0	; () banked
  2848  003840  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2849  003842  0E01               	movlw	1
  2850  003844  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2851  003846  0101               	movlb	1	; () banked
  2852  003848  EE20 F003          	lfsr	2,3
  2853  00384C  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2854  00384E  26D9               	addwf	fsr2l,f,c
  2855  003850  5160               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2856  003852  22DA               	addwfc	fsr2h,f,c
  2857  003854  50DF               	movf	indf2,w,c
  2858  003856  0100               	movlb	0	; () banked
  2859  003858  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2860  00385A  ECE5  F023         	call	_PCA_Write_Reg	;wreg free
  2861  00385E                     l300:
  2862  00385E  0012               	return		;funcret
  2863  003860                     __end_of_ServoDriver_Init:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _MSSP_I2C_Init *****************
  2867 ;; Defined at:
  2868 ;;		line 23 in file "MCAL/I2C/mcal_i2c.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  i2c_obj         2   16[BANK1 ] PTR const struct .
  2871 ;;		 -> i2c_obj(7), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  ERRORSTATUS     1    0        unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      unsigned char 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2883 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 10
  2890 ;; This function calls:
  2891 ;;		_I2C_Master_Mode_Clock_Configurations
  2892 ;;		_I2C_Pin_Configurations
  2893 ;;		_I2C_Slave_Mode_Clock_Configurations
  2894 ;; This function is called by:
  2895 ;;		_ServoDriver_Init
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text9
  2900  002D32                     __ptext9:
  2901                           	callstack 0
  2902  002D32                     _MSSP_I2C_Init:
  2903                           	callstack 17
  2904  002D32                     
  2905                           ;MCAL/I2C/mcal_i2c.c: 26:     if (((void*)0)==i2c_obj)
  2906  002D32  0101               	movlb	1	; () banked
  2907  002D34  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2908  002D36  115C               	iorwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2909  002D38  A4D8               	btfss	status,2,c
  2910  002D3A  EFA1  F016         	goto	u10801
  2911  002D3E  EFA3  F016         	goto	u10800
  2912  002D42                     u10801:
  2913  002D42  EFA5  F016         	goto	l984
  2914  002D46                     u10800:
  2915  002D46                     
  2916                           ; BSR set to: 1
  2917                           ;MCAL/I2C/mcal_i2c.c: 29:     }
  2918  002D46  EF37  F017         	goto	l1002
  2919  002D4A                     l984:
  2920                           
  2921                           ; BSR set to: 1
  2922                           ;MCAL/I2C/mcal_i2c.c: 31:     {;MCAL/I2C/mcal_i2c.c: 33:         (SSPCON1bits.SSPEN = 0)
      +                          ;
  2923  002D4A  9AC6               	bcf	198,5,c	;volatile
  2924  002D4C                     
  2925                           ; BSR set to: 1
  2926                           ;MCAL/I2C/mcal_i2c.c: 35:         if(1==i2c_obj->i2c_cfg.i2c_mode)
  2927  002D4C  EE20 F006          	lfsr	2,6
  2928  002D50  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2929  002D52  26D9               	addwf	fsr2l,f,c
  2930  002D54  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2931  002D56  22DA               	addwfc	fsr2h,f,c
  2932  002D58  A0DF               	btfss	indf2,0,c
  2933  002D5A  EFB1  F016         	goto	u10811
  2934  002D5E  EFB3  F016         	goto	u10810
  2935  002D62                     u10811:
  2936  002D62  EFBB  F016         	goto	l10238
  2937  002D66                     u10810:
  2938  002D66                     
  2939                           ; BSR set to: 1
  2940                           ;MCAL/I2C/mcal_i2c.c: 36:         {;MCAL/I2C/mcal_i2c.c: 38:            I2C_Master_Mode_
      +                          Clock_Configurations(i2c_obj);
  2941  002D66  C15B  F0A4         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  2942  002D6A  C15C  F0A5         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  2943  002D6E  EC6A  F01E         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  2944                           
  2945                           ;MCAL/I2C/mcal_i2c.c: 39:         }
  2946  002D72  EFF7  F016         	goto	l10252
  2947  002D76                     l10238:
  2948                           
  2949                           ; BSR set to: 1
  2950  002D76  EE20 F006          	lfsr	2,6
  2951  002D7A  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2952  002D7C  26D9               	addwf	fsr2l,f,c
  2953  002D7E  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2954  002D80  22DA               	addwfc	fsr2h,f,c
  2955  002D82  B0DF               	btfsc	indf2,0,c
  2956  002D84  EFC6  F016         	goto	u10821
  2957  002D88  EFC8  F016         	goto	u10820
  2958  002D8C                     u10821:
  2959  002D8C  EFF7  F016         	goto	l10252
  2960  002D90                     u10820:
  2961  002D90                     
  2962                           ; BSR set to: 1
  2963                           ;MCAL/I2C/mcal_i2c.c: 41:         {;MCAL/I2C/mcal_i2c.c: 43:             if(1==i2c_obj->
      +                          i2c_cfg.i2c_general_call)
  2964  002D90  EE20 F006          	lfsr	2,6
  2965  002D94  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2966  002D96  26D9               	addwf	fsr2l,f,c
  2967  002D98  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2968  002D9A  22DA               	addwfc	fsr2h,f,c
  2969  002D9C  A6DF               	btfss	indf2,3,c
  2970  002D9E  EFD3  F016         	goto	u10831
  2971  002DA2  EFD5  F016         	goto	u10830
  2972  002DA6                     u10831:
  2973  002DA6  EFD8  F016         	goto	l10244
  2974  002DAA                     u10830:
  2975  002DAA                     
  2976                           ; BSR set to: 1
  2977                           ;MCAL/I2C/mcal_i2c.c: 44:             {;MCAL/I2C/mcal_i2c.c: 45:                 (SSPCON
      +                          2bits.GCEN = 1);
  2978  002DAA  8EC5               	bsf	197,7,c	;volatile
  2979                           
  2980                           ;MCAL/I2C/mcal_i2c.c: 46:             }
  2981  002DAC  EFE6  F016         	goto	l990
  2982  002DB0                     l10244:
  2983                           
  2984                           ; BSR set to: 1
  2985  002DB0  EE20 F006          	lfsr	2,6
  2986  002DB4  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2987  002DB6  26D9               	addwf	fsr2l,f,c
  2988  002DB8  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2989  002DBA  22DA               	addwfc	fsr2h,f,c
  2990  002DBC  B6DF               	btfsc	indf2,3,c
  2991  002DBE  EFE3  F016         	goto	u10841
  2992  002DC2  EFE5  F016         	goto	u10840
  2993  002DC6                     u10841:
  2994  002DC6  EFE6  F016         	goto	l990
  2995  002DCA                     u10840:
  2996  002DCA                     
  2997                           ; BSR set to: 1
  2998                           ;MCAL/I2C/mcal_i2c.c: 48:             {;MCAL/I2C/mcal_i2c.c: 49:                 (SSPCON
      +                          2bits.GCEN = 0);
  2999  002DCA  9EC5               	bcf	197,7,c	;volatile
  3000  002DCC                     l990:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;MCAL/I2C/mcal_i2c.c: 53:              SSPCON1bits.WCOL=0;
  3004  002DCC  9EC6               	bcf	198,7,c	;volatile
  3005                           
  3006                           ;MCAL/I2C/mcal_i2c.c: 55:              SSPCON1bits.SSPOV=0;
  3007  002DCE  9CC6               	bcf	198,6,c	;volatile
  3008                           
  3009                           ;MCAL/I2C/mcal_i2c.c: 57:              SSPCON1bits.CKP=1;
  3010  002DD0  88C6               	bsf	198,4,c	;volatile
  3011  002DD2                     
  3012                           ; BSR set to: 1
  3013                           ;MCAL/I2C/mcal_i2c.c: 59:              SSPADD=i2c_obj->i2c_cfg.i2c_slave_address;
  3014  002DD2  EE20 F005          	lfsr	2,5
  3015  002DD6  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3016  002DD8  26D9               	addwf	fsr2l,f,c
  3017  002DDA  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3018  002DDC  22DA               	addwfc	fsr2h,f,c
  3019  002DDE  50DF               	movf	indf2,w,c
  3020  002DE0  6EC8               	movwf	200,c	;volatile
  3021  002DE2                     
  3022                           ; BSR set to: 1
  3023                           ;MCAL/I2C/mcal_i2c.c: 61:              I2C_Slave_Mode_Clock_Configurations(i2c_obj);
  3024  002DE2  C15B  F01E         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Clock_Configurations@i2c_obj
  3025  002DE6  C15C  F01F         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Clock_Configurations@i2c_obj+1
  3026  002DEA  ECCE  F024         	call	_I2C_Slave_Mode_Clock_Configurations	;wreg free
  3027  002DEE                     l10252:
  3028                           
  3029                           ;MCAL/I2C/mcal_i2c.c: 65:         I2C_Pin_Configurations();
  3030  002DEE  EC2A  F026         	call	_I2C_Pin_Configurations	;wreg free
  3031  002DF2                     
  3032                           ;MCAL/I2C/mcal_i2c.c: 67:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  3033  002DF2  0101               	movlb	1	; () banked
  3034  002DF4  EE20 F006          	lfsr	2,6
  3035  002DF8  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3036  002DFA  26D9               	addwf	fsr2l,f,c
  3037  002DFC  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3038  002DFE  22DA               	addwfc	fsr2h,f,c
  3039  002E00  A2DF               	btfss	indf2,1,c
  3040  002E02  EF05  F017         	goto	u10851
  3041  002E06  EF07  F017         	goto	u10850
  3042  002E0A                     u10851:
  3043  002E0A  EF0A  F017         	goto	l10258
  3044  002E0E                     u10850:
  3045  002E0E                     
  3046                           ; BSR set to: 1
  3047                           ;MCAL/I2C/mcal_i2c.c: 68:             (SSPSTATbits.SMP = 1);
  3048  002E0E  8EC7               	bsf	199,7,c	;volatile
  3049                           
  3050                           ;MCAL/I2C/mcal_i2c.c: 69:         }
  3051  002E10  EF18  F017         	goto	l10262
  3052  002E14                     l10258:
  3053                           
  3054                           ; BSR set to: 1
  3055  002E14  EE20 F006          	lfsr	2,6
  3056  002E18  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3057  002E1A  26D9               	addwf	fsr2l,f,c
  3058  002E1C  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3059  002E1E  22DA               	addwfc	fsr2h,f,c
  3060  002E20  B2DF               	btfsc	indf2,1,c
  3061  002E22  EF15  F017         	goto	u10861
  3062  002E26  EF17  F017         	goto	u10860
  3063  002E2A                     u10861:
  3064  002E2A  EF18  F017         	goto	l10262
  3065  002E2E                     u10860:
  3066  002E2E                     
  3067                           ; BSR set to: 1
  3068                           ;MCAL/I2C/mcal_i2c.c: 71:             (SSPSTATbits.SMP = 0);
  3069  002E2E  9EC7               	bcf	199,7,c	;volatile
  3070  002E30                     l10262:
  3071                           
  3072                           ; BSR set to: 1
  3073                           ;MCAL/I2C/mcal_i2c.c: 75:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  3074  002E30  EE20 F006          	lfsr	2,6
  3075  002E34  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3076  002E36  26D9               	addwf	fsr2l,f,c
  3077  002E38  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3078  002E3A  22DA               	addwfc	fsr2h,f,c
  3079  002E3C  A4DF               	btfss	indf2,2,c
  3080  002E3E  EF23  F017         	goto	u10871
  3081  002E42  EF25  F017         	goto	u10870
  3082  002E46                     u10871:
  3083  002E46  EF28  F017         	goto	l10266
  3084  002E4A                     u10870:
  3085  002E4A                     
  3086                           ; BSR set to: 1
  3087                           ;MCAL/I2C/mcal_i2c.c: 76:             (SSPSTATbits.CKE = 1);
  3088  002E4A  8CC7               	bsf	199,6,c	;volatile
  3089                           
  3090                           ;MCAL/I2C/mcal_i2c.c: 77:         }
  3091  002E4C  EF36  F017         	goto	l999
  3092  002E50                     l10266:
  3093                           
  3094                           ; BSR set to: 1
  3095  002E50  EE20 F006          	lfsr	2,6
  3096  002E54  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  3097  002E56  26D9               	addwf	fsr2l,f,c
  3098  002E58  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  3099  002E5A  22DA               	addwfc	fsr2h,f,c
  3100  002E5C  B4DF               	btfsc	indf2,2,c
  3101  002E5E  EF33  F017         	goto	u10881
  3102  002E62  EF35  F017         	goto	u10880
  3103  002E66                     u10881:
  3104  002E66  EF36  F017         	goto	l999
  3105  002E6A                     u10880:
  3106  002E6A                     
  3107                           ; BSR set to: 1
  3108                           ;MCAL/I2C/mcal_i2c.c: 79:             (SSPSTATbits.CKE = 0);
  3109  002E6A  9CC7               	bcf	199,6,c	;volatile
  3110  002E6C                     l999:
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;MCAL/I2C/mcal_i2c.c: 89:         (SSPCON1bits.SSPEN = 1);
  3114  002E6C  8AC6               	bsf	198,5,c	;volatile
  3115  002E6E                     l1002:
  3116                           
  3117                           ; BSR set to: 1
  3118  002E6E  0012               	return		;funcret
  3119  002E70                     __end_of_MSSP_I2C_Init:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _I2C_Slave_Mode_Clock_Configurations *****************
  3123 ;; Defined at:
  3124 ;;		line 325 in file "MCAL/I2C/mcal_i2c.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  3127 ;;		 -> i2c_obj(7), 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  ERRORSTATUS     1    0        unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:        3 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 8
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_MSSP_I2C_Init
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text10
  3154  00499C                     __ptext10:
  3155                           	callstack 0
  3156  00499C                     _I2C_Slave_Mode_Clock_Configurations:
  3157                           	callstack 18
  3158  00499C                     
  3159                           ;MCAL/I2C/mcal_i2c.c: 328:     if (((void*)0)==i2c_obj)
  3160  00499C  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  3161  00499E  101F               	iorwf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  3162  0049A0  A4D8               	btfss	status,2,c
  3163  0049A2  EFD5  F024         	goto	u6391
  3164  0049A6  EFD7  F024         	goto	u6390
  3165  0049AA                     u6391:
  3166  0049AA  EFD9  F024         	goto	l7048
  3167  0049AE                     u6390:
  3168  0049AE                     
  3169                           ;MCAL/I2C/mcal_i2c.c: 331:     }
  3170  0049AE  EFE6  F024         	goto	l1097
  3171  0049B2                     l7048:
  3172                           
  3173                           ;MCAL/I2C/mcal_i2c.c: 333:     {;MCAL/I2C/mcal_i2c.c: 335:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  3174  0049B2  EE20 F004          	lfsr	2,4
  3175  0049B6  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  3176  0049B8  26D9               	addwf	fsr2l,f,c
  3177  0049BA  501F               	movf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  3178  0049BC  22DA               	addwfc	fsr2h,f,c
  3179  0049BE  50DF               	movf	indf2,w,c
  3180  0049C0  6E20               	movwf	??_I2C_Slave_Mode_Clock_Configurations^0,c
  3181  0049C2  50C6               	movf	198,w,c	;volatile
  3182  0049C4  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  3183  0049C6  0BF0               	andlw	-16
  3184  0049C8  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  3185  0049CA  6EC6               	movwf	198,c	;volatile
  3186  0049CC                     l1097:
  3187  0049CC  0012               	return		;funcret
  3188  0049CE                     __end_of_I2C_Slave_Mode_Clock_Configurations:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _I2C_Pin_Configurations *****************
  3192 ;; Defined at:
  3193 ;;		line 339 in file "MCAL/I2C/mcal_i2c.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		None
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 8
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_MSSP_I2C_Init
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text11
  3222  004C54                     __ptext11:
  3223                           	callstack 0
  3224  004C54                     _I2C_Pin_Configurations:
  3225                           	callstack 18
  3226  004C54                     
  3227                           ;MCAL/I2C/mcal_i2c.c: 341:     TRISCbits.RC3=1;
  3228  004C54  8694               	bsf	148,3,c	;volatile
  3229                           
  3230                           ;MCAL/I2C/mcal_i2c.c: 342:     TRISCbits.RC4=1;
  3231  004C56  8894               	bsf	148,4,c	;volatile
  3232  004C58  0012               	return		;funcret
  3233  004C5A                     __end_of_I2C_Pin_Configurations:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  3237 ;; Defined at:
  3238 ;;		line 310 in file "MCAL/I2C/mcal_i2c.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  i2c_obj         2   68[BANK0 ] PTR const struct .
  3241 ;;		 -> i2c_obj(7), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  ERRORSTATUS     1    0        unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;Total ram usage:        3 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 9
  3260 ;; This function calls:
  3261 ;;		___fladd
  3262 ;;		___fldiv
  3263 ;;		___fltol
  3264 ;;		___xxtofl
  3265 ;; This function is called by:
  3266 ;;		_MSSP_I2C_Init
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text12
  3271  003CD4                     __ptext12:
  3272                           	callstack 0
  3273  003CD4                     _I2C_Master_Mode_Clock_Configurations:
  3274                           	callstack 17
  3275  003CD4                     
  3276                           ;MCAL/I2C/mcal_i2c.c: 313:     if (((void*)0)==i2c_obj)
  3277  003CD4  0100               	movlb	0	; () banked
  3278  003CD6  51A4               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  3279  003CD8  11A5               	iorwf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  3280  003CDA  A4D8               	btfss	status,2,c
  3281  003CDC  EF72  F01E         	goto	u10781
  3282  003CE0  EF74  F01E         	goto	u10780
  3283  003CE4                     u10781:
  3284  003CE4  EF76  F01E         	goto	l10212
  3285  003CE8                     u10780:
  3286  003CE8                     
  3287                           ; BSR set to: 0
  3288                           ;MCAL/I2C/mcal_i2c.c: 316:     }
  3289  003CE8  EFC4  F01E         	goto	l1092
  3290  003CEC                     l10212:
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;MCAL/I2C/mcal_i2c.c: 318:     {;MCAL/I2C/mcal_i2c.c: 320:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  3294  003CEC  EE20 F004          	lfsr	2,4
  3295  003CF0  51A4               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  3296  003CF2  26D9               	addwf	fsr2l,f,c
  3297  003CF4  51A5               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  3298  003CF6  22DA               	addwfc	fsr2h,f,c
  3299  003CF8  50DF               	movf	indf2,w,c
  3300  003CFA  6E24               	movwf	??_I2C_Master_Mode_Clock_Configurations^0,c
  3301  003CFC  50C6               	movf	198,w,c	;volatile
  3302  003CFE  1824               	xorwf	??_I2C_Master_Mode_Clock_Configurations^0,w,c
  3303  003D00  0BF0               	andlw	-16
  3304  003D02  1824               	xorwf	??_I2C_Master_Mode_Clock_Configurations^0,w,c
  3305  003D04  6EC6               	movwf	198,c	;volatile
  3306  003D06                     
  3307                           ; BSR set to: 0
  3308                           ;MCAL/I2C/mcal_i2c.c: 321:         SSPADD=(uint8)(((8000000/4.0)/i2c_obj->i2c_clock)-1);
  3309  003D06  0E00               	movlw	0
  3310  003D08  6FA0               	movwf	___fladd@a& (0+255),b
  3311  003D0A  0E00               	movlw	0
  3312  003D0C  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  3313  003D0E  0E80               	movlw	128
  3314  003D10  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  3315  003D12  0EBF               	movlw	191
  3316  003D14  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  3317  003D16  C0A4  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  3318  003D1A  C0A5  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  3319  003D1E  CFDE F01E          	movff	postinc2,___xxtofl@val
  3320  003D22  CFDE F01F          	movff	postinc2,___xxtofl@val+1
  3321  003D26  CFDE F020          	movff	postinc2,___xxtofl@val+2
  3322  003D2A  CFDE F021          	movff	postinc2,___xxtofl@val+3
  3323  003D2E  0E00               	movlw	0
  3324  003D30  EC48  F012         	call	___xxtofl
  3325  003D34  C01E  F06E         	movff	?___xxtofl,___fldiv@a
  3326  003D38  C01F  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  3327  003D3C  C020  F070         	movff	?___xxtofl+2,___fldiv@a+2
  3328  003D40  C021  F071         	movff	?___xxtofl+3,___fldiv@a+3
  3329  003D44  0E00               	movlw	0
  3330  003D46  0100               	movlb	0	; () banked
  3331  003D48  6F6A               	movwf	___fldiv@b& (0+255),b
  3332  003D4A  0E24               	movlw	36
  3333  003D4C  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  3334  003D4E  0EF4               	movlw	244
  3335  003D50  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  3336  003D52  0E49               	movlw	73
  3337  003D54  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  3338  003D56  ECE9  F00C         	call	___fldiv	;wreg free
  3339  003D5A  C06A  F09C         	movff	?___fldiv,___fladd@b
  3340  003D5E  C06B  F09D         	movff	?___fldiv+1,___fladd@b+1
  3341  003D62  C06C  F09E         	movff	?___fldiv+2,___fladd@b+2
  3342  003D66  C06D  F09F         	movff	?___fldiv+3,___fladd@b+3
  3343  003D6A  EC24  F008         	call	___fladd	;wreg free
  3344  003D6E  C09C  F153         	movff	?___fladd,___fltol@f1
  3345  003D72  C09D  F154         	movff	?___fladd+1,___fltol@f1+1
  3346  003D76  C09E  F155         	movff	?___fladd+2,___fltol@f1+2
  3347  003D7A  C09F  F156         	movff	?___fladd+3,___fltol@f1+3
  3348  003D7E  ECEF  F018         	call	___fltol	;wreg free
  3349  003D82  0101               	movlb	1	; () banked
  3350  003D84  5153               	movf	?___fltol& (0+255),w,b
  3351  003D86  6EC8               	movwf	200,c	;volatile
  3352  003D88                     l1092:
  3353  003D88  0012               	return		;funcret
  3354  003D8A                     __end_of_I2C_Master_Mode_Clock_Configurations:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _ECU_DC_Motor_Init *****************
  3358 ;; Defined at:
  3359 ;;		line 19 in file "ECU/DC_Motor/ecu_dc_motor.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  dc_motor        2    6[BANK0 ] PTR const struct .
  3362 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  ret_value       1    0        unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      unsigned char 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 10
  3381 ;; This function calls:
  3382 ;;		_GPIO_Pin_Initialize
  3383 ;; This function is called by:
  3384 ;;		_Robot_Nav_Init
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text13
  3389  004B58                     __ptext13:
  3390                           	callstack 0
  3391  004B58                     _ECU_DC_Motor_Init:
  3392                           	callstack 18
  3393  004B58                     
  3394                           ;ECU/DC_Motor/ecu_dc_motor.c: 22:     if(((void*)0) == dc_motor)
  3395  004B58  0100               	movlb	0	; () banked
  3396  004B5A  5166               	movf	ECU_DC_Motor_Init@dc_motor& (0+255),w,b
  3397  004B5C  1167               	iorwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),w,b
  3398  004B5E  A4D8               	btfss	status,2,c
  3399  004B60  EFB4  F025         	goto	u11361
  3400  004B64  EFB6  F025         	goto	u11360
  3401  004B68                     u11361:
  3402  004B68  EFB8  F025         	goto	l10646
  3403  004B6C                     u11360:
  3404  004B6C                     
  3405                           ; BSR set to: 0
  3406                           ;ECU/DC_Motor/ecu_dc_motor.c: 25:     }
  3407  004B6C  EFBE  F025         	goto	l55
  3408  004B70                     l10646:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;ECU/DC_Motor/ecu_dc_motor.c: 27:     {;ECU/DC_Motor/ecu_dc_motor.c: 28:         GPIO_Pi
      +                          n_Initialize(&(dc_motor->dc_motor));
  3412  004B70  C066  F022         	movff	ECU_DC_Motor_Init@dc_motor,GPIO_Pin_Initialize@_pin_config
  3413  004B74  C067  F023         	movff	ECU_DC_Motor_Init@dc_motor+1,GPIO_Pin_Initialize@_pin_config+1
  3414  004B78  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  3415  004B7C                     l55:
  3416  004B7C  0012               	return		;funcret
  3417  004B7E                     __end_of_ECU_DC_Motor_Init:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _CCP_PWM_Start *****************
  3421 ;; Defined at:
  3422 ;;		line 202 in file "MCAL/CCP/hal_ccp.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  3425 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  ret             1    0        unsigned char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      unsigned char 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;Total ram usage:        3 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 8
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_Robot_Nav_Init
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text14
  3452  004830                     __ptext14:
  3453                           	callstack 0
  3454  004830                     _CCP_PWM_Start:
  3455                           	callstack 20
  3456  004830                     
  3457                           ;MCAL/CCP/hal_ccp.c: 205:     if(((void*)0) == _ccp_obj){
  3458  004830  501E               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  3459  004832  101F               	iorwf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  3460  004834  A4D8               	btfss	status,2,c
  3461  004836  EF1F  F024         	goto	u7301
  3462  00483A  EF21  F024         	goto	u7300
  3463  00483E                     u7301:
  3464  00483E  EF23  F024         	goto	l7648
  3465  004842                     u7300:
  3466  004842                     
  3467                           ;MCAL/CCP/hal_ccp.c: 207:     }
  3468  004842  EF45  F024         	goto	l543
  3469  004846                     l7648:
  3470                           
  3471                           ;MCAL/CCP/hal_ccp.c: 209:         if(CCP1_INST == _ccp_obj->ccp_inst){
  3472  004846  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  3473  00484A  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  3474  00484E  50DF               	movf	indf2,w,c
  3475  004850  A4D8               	btfss	status,2,c
  3476  004852  EF2D  F024         	goto	u7311
  3477  004856  EF2F  F024         	goto	u7310
  3478  00485A                     u7311:
  3479  00485A  EF35  F024         	goto	l7652
  3480  00485E                     u7310:
  3481  00485E                     
  3482                           ;MCAL/CCP/hal_ccp.c: 210:             CCP1CONbits.CCP1M = ((uint8)0x0C);
  3483  00485E  50BD               	movf	189,w,c	;volatile
  3484  004860  0BF0               	andlw	-16
  3485  004862  090C               	iorlw	12
  3486  004864  6EBD               	movwf	189,c	;volatile
  3487                           
  3488                           ;MCAL/CCP/hal_ccp.c: 211:         }
  3489  004866  EF45  F024         	goto	l7656
  3490  00486A                     l7652:
  3491  00486A  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  3492  00486E  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  3493  004872  04DE               	decf	postinc2,w,c
  3494  004874  A4D8               	btfss	status,2,c
  3495  004876  EF3F  F024         	goto	u7321
  3496  00487A  EF41  F024         	goto	u7320
  3497  00487E                     u7321:
  3498  00487E  EF45  F024         	goto	l7656
  3499  004882                     u7320:
  3500  004882                     
  3501                           ;MCAL/CCP/hal_ccp.c: 213:             CCP2CONbits.CCP2M = ((uint8)0x0C);
  3502  004882  50BA               	movf	186,w,c	;volatile
  3503  004884  0BF0               	andlw	-16
  3504  004886  090C               	iorlw	12
  3505  004888  6EBA               	movwf	186,c	;volatile
  3506  00488A                     l7656:
  3507  00488A                     l543:
  3508  00488A  0012               	return		;funcret
  3509  00488C                     __end_of_CCP_PWM_Start:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _CCP_Init *****************
  3513 ;; Defined at:
  3514 ;;		line 24 in file "MCAL/CCP/hal_ccp.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  _ccp_obj        2    6[BANK0 ] PTR const struct .
  3517 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  ret             1    0        unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      unsigned char 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;Total ram usage:        3 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 10
  3536 ;; This function calls:
  3537 ;;		_CCP_Capture_Mode_Config
  3538 ;;		_CCP_Compare_Mode_Config
  3539 ;;		_CCP_Interrupt_Config
  3540 ;;		_CCP_PWM_Mode_Config
  3541 ;;		_GPIO_Pin_Initialize
  3542 ;; This function is called by:
  3543 ;;		_Robot_Nav_Init
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text15
  3548  0033E8                     __ptext15:
  3549                           	callstack 0
  3550  0033E8                     _CCP_Init:
  3551                           	callstack 18
  3552  0033E8                     
  3553                           ;MCAL/CCP/hal_ccp.c: 26:     if(((void*)0) == _ccp_obj){
  3554  0033E8  0100               	movlb	0	; () banked
  3555  0033EA  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3556  0033EC  1167               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3557  0033EE  A4D8               	btfss	status,2,c
  3558  0033F0  EFFC  F019         	goto	u11391
  3559  0033F4  EFFE  F019         	goto	u11390
  3560  0033F8                     u11391:
  3561  0033F8  EF00  F01A         	goto	l10668
  3562  0033FC                     u11390:
  3563  0033FC                     
  3564                           ; BSR set to: 0
  3565                           ;MCAL/CCP/hal_ccp.c: 28:     }
  3566  0033FC  EF70  F01A         	goto	l516
  3567  003400                     l10668:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;MCAL/CCP/hal_ccp.c: 31:         if(CCP1_INST == _ccp_obj->ccp_inst){
  3571  003400  C066  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  3572  003404  C067  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  3573  003408  50DF               	movf	indf2,w,c
  3574  00340A  A4D8               	btfss	status,2,c
  3575  00340C  EF0A  F01A         	goto	u11401
  3576  003410  EF0C  F01A         	goto	u11400
  3577  003414                     u11401:
  3578  003414  EF10  F01A         	goto	l10672
  3579  003418                     u11400:
  3580  003418                     
  3581                           ; BSR set to: 0
  3582                           ;MCAL/CCP/hal_ccp.c: 32:             (CCP1CONbits.CCP1M = ((uint8)0x00));
  3583  003418  0EF0               	movlw	-16
  3584  00341A  16BD               	andwf	189,f,c	;volatile
  3585                           
  3586                           ;MCAL/CCP/hal_ccp.c: 33:         }
  3587  00341C  EF1E  F01A         	goto	l10676
  3588  003420                     l10672:
  3589                           
  3590                           ; BSR set to: 0
  3591  003420  C066  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  3592  003424  C067  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  3593  003428  04DE               	decf	postinc2,w,c
  3594  00342A  A4D8               	btfss	status,2,c
  3595  00342C  EF1A  F01A         	goto	u11411
  3596  003430  EF1C  F01A         	goto	u11410
  3597  003434                     u11411:
  3598  003434  EF1E  F01A         	goto	l10676
  3599  003438                     u11410:
  3600  003438                     
  3601                           ; BSR set to: 0
  3602                           ;MCAL/CCP/hal_ccp.c: 35:             (CCP2CONbits.CCP2M = ((uint8)0x00));
  3603  003438  0EF0               	movlw	-16
  3604  00343A  16BA               	andwf	186,f,c	;volatile
  3605  00343C                     l10676:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;MCAL/CCP/hal_ccp.c: 40:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mode){
  3609  00343C  EE20 F001          	lfsr	2,1
  3610  003440  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3611  003442  26D9               	addwf	fsr2l,f,c
  3612  003444  5167               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3613  003446  22DA               	addwfc	fsr2h,f,c
  3614  003448  50DF               	movf	indf2,w,c
  3615  00344A  A4D8               	btfss	status,2,c
  3616  00344C  EF2A  F01A         	goto	u11421
  3617  003450  EF2C  F01A         	goto	u11420
  3618  003454                     u11421:
  3619  003454  EF34  F01A         	goto	l10680
  3620  003458                     u11420:
  3621  003458                     
  3622                           ; BSR set to: 0
  3623  003458  C066  F021         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Config@_ccp_obj
  3624  00345C  C067  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Config@_ccp_obj+1
  3625  003460  ECF7  F015         	call	_CCP_Capture_Mode_Config	;wreg free
  3626                           
  3627                           ;MCAL/CCP/hal_ccp.c: 42:         }
  3628  003464  EF61  F01A         	goto	l10688
  3629  003468                     l10680:
  3630                           
  3631                           ; BSR set to: 0
  3632  003468  EE20 F001          	lfsr	2,1
  3633  00346C  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3634  00346E  26D9               	addwf	fsr2l,f,c
  3635  003470  5167               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3636  003472  22DA               	addwfc	fsr2h,f,c
  3637  003474  04DE               	decf	postinc2,w,c
  3638  003476  A4D8               	btfss	status,2,c
  3639  003478  EF40  F01A         	goto	u11431
  3640  00347C  EF42  F01A         	goto	u11430
  3641  003480                     u11431:
  3642  003480  EF4A  F01A         	goto	l10684
  3643  003484                     u11430:
  3644  003484                     
  3645                           ; BSR set to: 0
  3646  003484  C066  F021         	movff	CCP_Init@_ccp_obj,CCP_Compare_Mode_Config@_ccp_obj
  3647  003488  C067  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Compare_Mode_Config@_ccp_obj+1
  3648  00348C  ECE8  F013         	call	_CCP_Compare_Mode_Config	;wreg free
  3649                           
  3650                           ;MCAL/CCP/hal_ccp.c: 46:         }
  3651  003490  EF61  F01A         	goto	l10688
  3652  003494                     l10684:
  3653                           
  3654                           ; BSR set to: 0
  3655  003494  EE20 F001          	lfsr	2,1
  3656  003498  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3657  00349A  26D9               	addwf	fsr2l,f,c
  3658  00349C  5167               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3659  00349E  22DA               	addwfc	fsr2h,f,c
  3660  0034A0  0E02               	movlw	2
  3661  0034A2  18DE               	xorwf	postinc2,w,c
  3662  0034A4  A4D8               	btfss	status,2,c
  3663  0034A6  EF57  F01A         	goto	u11441
  3664  0034AA  EF59  F01A         	goto	u11440
  3665  0034AE                     u11441:
  3666  0034AE  EF61  F01A         	goto	l513
  3667  0034B2                     u11440:
  3668  0034B2                     
  3669                           ; BSR set to: 0
  3670                           ;MCAL/CCP/hal_ccp.c: 50:             CCP_PWM_Mode_Config(_ccp_obj);
  3671  0034B2  C066  F021         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Config@_ccp_obj
  3672  0034B6  C067  F022         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Config@_ccp_obj+1
  3673  0034BA  ECC9  F01F         	call	_CCP_PWM_Mode_Config	;wreg free
  3674                           
  3675                           ;MCAL/CCP/hal_ccp.c: 51:         }
  3676  0034BE  EF61  F01A         	goto	l10688
  3677  0034C2                     l513:
  3678  0034C2                     l10688:
  3679  0034C2  0E03               	movlw	3
  3680  0034C4  0100               	movlb	0	; () banked
  3681  0034C6  2566               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  3682  0034C8  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  3683  0034CA  0E00               	movlw	0
  3684  0034CC  2167               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3685  0034CE  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  3686  0034D0  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  3687  0034D4                     
  3688                           ;MCAL/CCP/hal_ccp.c: 58:         CCP_Interrupt_Config(_ccp_obj);
  3689  0034D4  C066  F01E         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Config@_ccp_obj
  3690  0034D8  C067  F01F         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Config@_ccp_obj+1
  3691  0034DC  EC2F  F026         	call	_CCP_Interrupt_Config	;wreg free
  3692  0034E0                     l516:
  3693  0034E0  0012               	return		;funcret
  3694  0034E2                     __end_of_CCP_Init:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _CCP_PWM_Mode_Config *****************
  3698 ;; Defined at:
  3699 ;;		line 264 in file "MCAL/CCP/hal_ccp.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  3702 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;Total ram usage:        3 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 9
  3721 ;; This function calls:
  3722 ;;		_Timer2_Init
  3723 ;; This function is called by:
  3724 ;;		_CCP_Init
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text16
  3729  003F92                     __ptext16:
  3730                           	callstack 0
  3731  003F92                     _CCP_PWM_Mode_Config:
  3732                           	callstack 18
  3733  003F92                     
  3734                           ;MCAL/CCP/hal_ccp.c: 269:     PR2 = _ccp_obj->timer2.timer2_preload_value ;
  3735  003F92  EE20 F009          	lfsr	2,9
  3736  003F96  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3737  003F98  26D9               	addwf	fsr2l,f,c
  3738  003F9A  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3739  003F9C  22DA               	addwfc	fsr2h,f,c
  3740  003F9E  50DF               	movf	indf2,w,c
  3741  003FA0  6ECB               	movwf	203,c	;volatile
  3742  003FA2                     
  3743                           ;MCAL/CCP/hal_ccp.c: 270:     Timer2_Init(&(_ccp_obj->timer2));
  3744  003FA2  0E09               	movlw	9
  3745  003FA4  2421               	addwf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3746  003FA6  6E1E               	movwf	Timer2_Init@_timer2^0,c
  3747  003FA8  0E00               	movlw	0
  3748  003FAA  2022               	addwfc	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3749  003FAC  6E1F               	movwf	(Timer2_Init@_timer2+1)^0,c
  3750  003FAE  EC0D  F022         	call	_Timer2_Init	;wreg free
  3751  003FB2                     
  3752                           ;MCAL/CCP/hal_ccp.c: 271:     if(CCP1_INST == _ccp_obj->ccp_inst){
  3753  003FB2  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  3754  003FB6  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  3755  003FBA  50DF               	movf	indf2,w,c
  3756  003FBC  A4D8               	btfss	status,2,c
  3757  003FBE  EFE3  F01F         	goto	u6701
  3758  003FC2  EFE5  F01F         	goto	u6700
  3759  003FC6                     u6701:
  3760  003FC6  EFFA  F01F         	goto	l7300
  3761  003FCA                     u6700:
  3762  003FCA                     
  3763                           ;MCAL/CCP/hal_ccp.c: 272:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  3764  003FCA  EE20 F002          	lfsr	2,2
  3765  003FCE  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3766  003FD0  26D9               	addwf	fsr2l,f,c
  3767  003FD2  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3768  003FD4  22DA               	addwfc	fsr2h,f,c
  3769  003FD6  0E0C               	movlw	12
  3770  003FD8  18DE               	xorwf	postinc2,w,c
  3771  003FDA  A4D8               	btfss	status,2,c
  3772  003FDC  EFF2  F01F         	goto	u6711
  3773  003FE0  EFF4  F01F         	goto	u6710
  3774  003FE4                     u6711:
  3775  003FE4  EF19  F020         	goto	l563
  3776  003FE8                     u6710:
  3777  003FE8                     
  3778                           ;MCAL/CCP/hal_ccp.c: 273:             (CCP1CONbits.CCP1M = ((uint8)0x0C));
  3779  003FE8  50BD               	movf	189,w,c	;volatile
  3780  003FEA  0BF0               	andlw	-16
  3781  003FEC  090C               	iorlw	12
  3782  003FEE  6EBD               	movwf	189,c	;volatile
  3783                           
  3784                           ;MCAL/CCP/hal_ccp.c: 274:         }
  3785  003FF0  EF19  F020         	goto	l563
  3786  003FF4                     l7300:
  3787  003FF4  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  3788  003FF8  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  3789  003FFC  04DE               	decf	postinc2,w,c
  3790  003FFE  A4D8               	btfss	status,2,c
  3791  004000  EF04  F020         	goto	u6721
  3792  004004  EF06  F020         	goto	u6720
  3793  004008                     u6721:
  3794  004008  EF19  F020         	goto	l563
  3795  00400C                     u6720:
  3796  00400C                     
  3797                           ;MCAL/CCP/hal_ccp.c: 278:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  3798  00400C  EE20 F002          	lfsr	2,2
  3799  004010  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3800  004012  26D9               	addwf	fsr2l,f,c
  3801  004014  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3802  004016  22DA               	addwfc	fsr2h,f,c
  3803  004018  0E0C               	movlw	12
  3804  00401A  18DE               	xorwf	postinc2,w,c
  3805  00401C  A4D8               	btfss	status,2,c
  3806  00401E  EF13  F020         	goto	u6731
  3807  004022  EF15  F020         	goto	u6730
  3808  004026                     u6731:
  3809  004026  EF19  F020         	goto	l563
  3810  00402A                     u6730:
  3811  00402A                     
  3812                           ;MCAL/CCP/hal_ccp.c: 279:             (CCP2CONbits.CCP2M = ((uint8)0x0C));
  3813  00402A  50BA               	movf	186,w,c	;volatile
  3814  00402C  0BF0               	andlw	-16
  3815  00402E  090C               	iorlw	12
  3816  004030  6EBA               	movwf	186,c	;volatile
  3817  004032                     l563:
  3818  004032  0012               	return		;funcret
  3819  004034                     __end_of_CCP_PWM_Mode_Config:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _Timer2_Init *****************
  3823 ;; Defined at:
  3824 ;;		line 15 in file "MCAL/TIMER2/mcal_timer2.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  _timer2         2   29[COMRAM] PTR const struct .
  3827 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  ERRORSTATUS     1    0        unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      unsigned char 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;Total ram usage:        3 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 8
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_CCP_PWM_Mode_Config
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text17
  3854  00441A                     __ptext17:
  3855                           	callstack 0
  3856  00441A                     _Timer2_Init:
  3857                           	callstack 18
  3858  00441A                     
  3859                           ;MCAL/TIMER2/mcal_timer2.c: 17:   if (((void*)0) == _timer2) {
  3860  00441A  501E               	movf	Timer2_Init@_timer2^0,w,c
  3861  00441C  101F               	iorwf	(Timer2_Init@_timer2+1)^0,w,c
  3862  00441E  A4D8               	btfss	status,2,c
  3863  004420  EF14  F022         	goto	u6341
  3864  004424  EF16  F022         	goto	u6340
  3865  004428                     u6341:
  3866  004428  EF18  F022         	goto	l1632
  3867  00442C                     u6340:
  3868  00442C                     
  3869                           ;MCAL/TIMER2/mcal_timer2.c: 19:   } else {
  3870  00442C  EF43  F022         	goto	l1634
  3871  004430                     l1632:
  3872                           
  3873                           ;MCAL/TIMER2/mcal_timer2.c: 21:     (T2CONbits.TMR2ON=0);
  3874  004430  94CA               	bcf	202,2,c	;volatile
  3875  004432                     
  3876                           ;MCAL/TIMER2/mcal_timer2.c: 23:     (T2CONbits.T2CKPS=_timer2->timer2_prescaler_value);
  3877  004432  EE20 F001          	lfsr	2,1
  3878  004436  501E               	movf	Timer2_Init@_timer2^0,w,c
  3879  004438  26D9               	addwf	fsr2l,f,c
  3880  00443A  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  3881  00443C  22DA               	addwfc	fsr2h,f,c
  3882  00443E  50DF               	movf	indf2,w,c
  3883  004440  6E20               	movwf	??_Timer2_Init^0,c
  3884  004442  50CA               	movf	202,w,c	;volatile
  3885  004444  1820               	xorwf	??_Timer2_Init^0,w,c
  3886  004446  0BFC               	andlw	-4
  3887  004448  1820               	xorwf	??_Timer2_Init^0,w,c
  3888  00444A  6ECA               	movwf	202,c	;volatile
  3889                           
  3890                           ;MCAL/TIMER2/mcal_timer2.c: 25:     (T2CONbits.T2OUTPS=_timer2->timer2_postscaler_value)
      +                          ;
  3891  00444C  EE20 F002          	lfsr	2,2
  3892  004450  501E               	movf	Timer2_Init@_timer2^0,w,c
  3893  004452  26D9               	addwf	fsr2l,f,c
  3894  004454  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  3895  004456  22DA               	addwfc	fsr2h,f,c
  3896  004458  50DF               	movf	indf2,w,c
  3897  00445A  6E20               	movwf	??_Timer2_Init^0,c
  3898  00445C  4620               	rlncf	??_Timer2_Init^0,f,c
  3899  00445E  4620               	rlncf	??_Timer2_Init^0,f,c
  3900  004460  4620               	rlncf	??_Timer2_Init^0,f,c
  3901  004462  50CA               	movf	202,w,c	;volatile
  3902  004464  1820               	xorwf	??_Timer2_Init^0,w,c
  3903  004466  0B87               	andlw	-121
  3904  004468  1820               	xorwf	??_Timer2_Init^0,w,c
  3905  00446A  6ECA               	movwf	202,c	;volatile
  3906  00446C                     
  3907                           ;MCAL/TIMER2/mcal_timer2.c: 27:     TMR2 = _timer2->timer2_preload_value;
  3908  00446C  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  3909  004470  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  3910  004474  50DF               	movf	indf2,w,c
  3911  004476  6ECC               	movwf	204,c	;volatile
  3912  004478                     
  3913                           ;MCAL/TIMER2/mcal_timer2.c: 28:     Timer2_PreLoaded_Value_Store = _timer2->timer2_prelo
      +                          ad_value;
  3914  004478  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  3915  00447C  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  3916  004480  50DF               	movf	indf2,w,c
  3917  004482  6E32               	movwf	_Timer2_PreLoaded_Value_Store^0,c
  3918  004484                     
  3919                           ;MCAL/TIMER2/mcal_timer2.c: 53:     (T2CONbits.TMR2ON=1);
  3920  004484  84CA               	bsf	202,2,c	;volatile
  3921  004486                     l1634:
  3922  004486  0012               	return		;funcret
  3923  004488                     __end_of_Timer2_Init:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _CCP_Interrupt_Config *****************
  3927 ;; Defined at:
  3928 ;;		line 287 in file "MCAL/CCP/hal_ccp.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  3931 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		None
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;Total ram usage:        2 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 8
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_CCP_Init
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text18
  3958  004C5E                     __ptext18:
  3959                           	callstack 0
  3960  004C5E                     _CCP_Interrupt_Config:
  3961                           	callstack 19
  3962  004C5E  0012               	return		;funcret
  3963  004C60                     __end_of_CCP_Interrupt_Config:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _CCP_Compare_Mode_Config *****************
  3967 ;; Defined at:
  3968 ;;		line 406 in file "MCAL/CCP/hal_ccp.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  3971 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  ret             1    0[BANK0 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      unsigned char 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:        5 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 9
  3990 ;; This function calls:
  3991 ;;		_CCP_Mode_Timer_Select
  3992 ;; This function is called by:
  3993 ;;		_CCP_Init
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text19
  3998  0027D0                     __ptext19:
  3999                           	callstack 0
  4000  0027D0                     _CCP_Compare_Mode_Config:
  4001                           	callstack 18
  4002  0027D0                     
  4003                           ;MCAL/CCP/hal_ccp.c: 407:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  4004  0027D0  0E01               	movlw	1
  4005  0027D2  0100               	movlb	0	; () banked
  4006  0027D4  6F60               	movwf	CCP_Compare_Mode_Config@ret& (0+255),b
  4007  0027D6                     
  4008                           ; BSR set to: 0
  4009                           ;MCAL/CCP/hal_ccp.c: 409:     if(CCP1_INST == _ccp_obj->ccp_inst){
  4010  0027D6  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  4011  0027DA  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  4012  0027DE  50DF               	movf	indf2,w,c
  4013  0027E0  A4D8               	btfss	status,2,c
  4014  0027E2  EFF5  F013         	goto	u10911
  4015  0027E6  EFF7  F013         	goto	u10910
  4016  0027EA                     u10911:
  4017  0027EA  EF42  F014         	goto	l10354
  4018  0027EE                     u10910:
  4019  0027EE  EF1B  F014         	goto	l10352
  4020  0027F2                     l10340:
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;MCAL/CCP/hal_ccp.c: 413:                 (CCP1CONbits.CCP1M = ((uint8)0x08));
  4024  0027F2  50BD               	movf	189,w,c	;volatile
  4025  0027F4  0BF0               	andlw	-16
  4026  0027F6  0908               	iorlw	8
  4027  0027F8  6EBD               	movwf	189,c	;volatile
  4028                           
  4029                           ;MCAL/CCP/hal_ccp.c: 414:                 break;
  4030  0027FA  EF95  F014         	goto	l10372
  4031  0027FE                     l10342:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;MCAL/CCP/hal_ccp.c: 416:                 (CCP1CONbits.CCP1M = ((uint8)0x09));
  4035  0027FE  50BD               	movf	189,w,c	;volatile
  4036  002800  0BF0               	andlw	-16
  4037  002802  0909               	iorlw	9
  4038  002804  6EBD               	movwf	189,c	;volatile
  4039                           
  4040                           ;MCAL/CCP/hal_ccp.c: 417:                 break;
  4041  002806  EF95  F014         	goto	l10372
  4042  00280A                     l10344:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;MCAL/CCP/hal_ccp.c: 419:                 (CCP1CONbits.CCP1M = ((uint8)0x02));
  4046  00280A  50BD               	movf	189,w,c	;volatile
  4047  00280C  0BF0               	andlw	-16
  4048  00280E  0902               	iorlw	2
  4049  002810  6EBD               	movwf	189,c	;volatile
  4050                           
  4051                           ;MCAL/CCP/hal_ccp.c: 420:                 break;
  4052  002812  EF95  F014         	goto	l10372
  4053  002816                     l10346:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;MCAL/CCP/hal_ccp.c: 422:                 (CCP1CONbits.CCP1M = ((uint8)0x0A));
  4057  002816  50BD               	movf	189,w,c	;volatile
  4058  002818  0BF0               	andlw	-16
  4059  00281A  090A               	iorlw	10
  4060  00281C  6EBD               	movwf	189,c	;volatile
  4061                           
  4062                           ;MCAL/CCP/hal_ccp.c: 423:                 break;
  4063  00281E  EF95  F014         	goto	l10372
  4064  002822                     l10348:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;MCAL/CCP/hal_ccp.c: 425:                 (CCP1CONbits.CCP1M = ((uint8)0x0B));
  4068  002822  50BD               	movf	189,w,c	;volatile
  4069  002824  0BF0               	andlw	-16
  4070  002826  090B               	iorlw	11
  4071  002828  6EBD               	movwf	189,c	;volatile
  4072                           
  4073                           ;MCAL/CCP/hal_ccp.c: 426:                 break;
  4074  00282A  EF95  F014         	goto	l10372
  4075  00282E                     l10350:
  4076                           
  4077                           ; BSR set to: 0
  4078  00282E  0E00               	movlw	0
  4079  002830  6F60               	movwf	CCP_Compare_Mode_Config@ret& (0+255),b
  4080                           
  4081                           ;MCAL/CCP/hal_ccp.c: 428:         }
  4082  002832  EF95  F014         	goto	l10372
  4083  002836                     l10352:
  4084                           
  4085                           ; BSR set to: 0
  4086  002836  EE20 F002          	lfsr	2,2
  4087  00283A  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  4088  00283C  26D9               	addwf	fsr2l,f,c
  4089  00283E  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  4090  002840  22DA               	addwfc	fsr2h,f,c
  4091  002842  50DF               	movf	indf2,w,c
  4092  002844  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  4093  002846  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  4094                           
  4095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4096                           ; Switch size 1, requested type "simple"
  4097                           ; Number of cases is 1, Range of values is 0 to 0
  4098                           ; switch strategies available:
  4099                           ; Name         Instructions Cycles
  4100                           ; simple_byte            4     3 (average)
  4101                           ;	Chosen strategy is simple_byte
  4102  002848  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  4103  00284A  0A00               	xorlw	0	; case 0
  4104  00284C  B4D8               	btfsc	status,2,c
  4105  00284E  EF2B  F014         	goto	l12018
  4106  002852  EF17  F014         	goto	l10350
  4107  002856                     l12018:
  4108                           
  4109                           ; BSR set to: 0
  4110                           ; Switch size 1, requested type "simple"
  4111                           ; Number of cases is 5, Range of values is 2 to 11
  4112                           ; switch strategies available:
  4113                           ; Name         Instructions Cycles
  4114                           ; simple_byte           16     9 (average)
  4115                           ;	Chosen strategy is simple_byte
  4116  002856  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  4117  002858  0A02               	xorlw	2	; case 2
  4118  00285A  B4D8               	btfsc	status,2,c
  4119  00285C  EF05  F014         	goto	l10344
  4120  002860  0A0A               	xorlw	10	; case 8
  4121  002862  B4D8               	btfsc	status,2,c
  4122  002864  EFF9  F013         	goto	l10340
  4123  002868  0A01               	xorlw	1	; case 9
  4124  00286A  B4D8               	btfsc	status,2,c
  4125  00286C  EFFF  F013         	goto	l10342
  4126  002870  0A03               	xorlw	3	; case 10
  4127  002872  B4D8               	btfsc	status,2,c
  4128  002874  EF0B  F014         	goto	l10346
  4129  002878  0A01               	xorlw	1	; case 11
  4130  00287A  B4D8               	btfsc	status,2,c
  4131  00287C  EF11  F014         	goto	l10348
  4132  002880  EF17  F014         	goto	l10350
  4133  002884                     l10354:
  4134                           
  4135                           ; BSR set to: 0
  4136  002884  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  4137  002888  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  4138  00288C  04DE               	decf	postinc2,w,c
  4139  00288E  A4D8               	btfss	status,2,c
  4140  002890  EF4C  F014         	goto	u10921
  4141  002894  EF4E  F014         	goto	u10920
  4142  002898                     u10921:
  4143  002898  EF95  F014         	goto	l10372
  4144  00289C                     u10920:
  4145  00289C  EF6E  F014         	goto	l10370
  4146  0028A0                     l10358:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;MCAL/CCP/hal_ccp.c: 434:                 (CCP2CONbits.CCP2M = ((uint8)0x08));
  4150  0028A0  50BA               	movf	186,w,c	;volatile
  4151  0028A2  0BF0               	andlw	-16
  4152  0028A4  0908               	iorlw	8
  4153  0028A6  6EBA               	movwf	186,c	;volatile
  4154                           
  4155                           ;MCAL/CCP/hal_ccp.c: 435:                 break;
  4156  0028A8  EF95  F014         	goto	l10372
  4157  0028AC                     l10360:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;MCAL/CCP/hal_ccp.c: 437:                 (CCP2CONbits.CCP2M = ((uint8)0x09));
  4161  0028AC  50BA               	movf	186,w,c	;volatile
  4162  0028AE  0BF0               	andlw	-16
  4163  0028B0  0909               	iorlw	9
  4164  0028B2  6EBA               	movwf	186,c	;volatile
  4165                           
  4166                           ;MCAL/CCP/hal_ccp.c: 438:                 break;
  4167  0028B4  EF95  F014         	goto	l10372
  4168  0028B8                     l10362:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;MCAL/CCP/hal_ccp.c: 440:                 (CCP2CONbits.CCP2M = ((uint8)0x02));
  4172  0028B8  50BA               	movf	186,w,c	;volatile
  4173  0028BA  0BF0               	andlw	-16
  4174  0028BC  0902               	iorlw	2
  4175  0028BE  6EBA               	movwf	186,c	;volatile
  4176                           
  4177                           ;MCAL/CCP/hal_ccp.c: 441:                 break;
  4178  0028C0  EF95  F014         	goto	l10372
  4179  0028C4                     l10364:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;MCAL/CCP/hal_ccp.c: 443:                 (CCP2CONbits.CCP2M = ((uint8)0x0A));
  4183  0028C4  50BA               	movf	186,w,c	;volatile
  4184  0028C6  0BF0               	andlw	-16
  4185  0028C8  090A               	iorlw	10
  4186  0028CA  6EBA               	movwf	186,c	;volatile
  4187                           
  4188                           ;MCAL/CCP/hal_ccp.c: 444:                 break;
  4189  0028CC  EF95  F014         	goto	l10372
  4190  0028D0                     l10366:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;MCAL/CCP/hal_ccp.c: 446:                 (CCP2CONbits.CCP2M = ((uint8)0x0B));
  4194  0028D0  50BA               	movf	186,w,c	;volatile
  4195  0028D2  0BF0               	andlw	-16
  4196  0028D4  090B               	iorlw	11
  4197  0028D6  6EBA               	movwf	186,c	;volatile
  4198                           
  4199                           ;MCAL/CCP/hal_ccp.c: 447:                 break;
  4200  0028D8  EF95  F014         	goto	l10372
  4201  0028DC                     l10370:
  4202                           
  4203                           ; BSR set to: 0
  4204  0028DC  EE20 F002          	lfsr	2,2
  4205  0028E0  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  4206  0028E2  26D9               	addwf	fsr2l,f,c
  4207  0028E4  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  4208  0028E6  22DA               	addwfc	fsr2h,f,c
  4209  0028E8  50DF               	movf	indf2,w,c
  4210  0028EA  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  4211  0028EC  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  4212                           
  4213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4214                           ; Switch size 1, requested type "simple"
  4215                           ; Number of cases is 1, Range of values is 0 to 0
  4216                           ; switch strategies available:
  4217                           ; Name         Instructions Cycles
  4218                           ; simple_byte            4     3 (average)
  4219                           ;	Chosen strategy is simple_byte
  4220  0028EE  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  4221  0028F0  0A00               	xorlw	0	; case 0
  4222  0028F2  B4D8               	btfsc	status,2,c
  4223  0028F4  EF7E  F014         	goto	l12020
  4224  0028F8  EF17  F014         	goto	l10350
  4225  0028FC                     l12020:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ; Switch size 1, requested type "simple"
  4229                           ; Number of cases is 5, Range of values is 2 to 11
  4230                           ; switch strategies available:
  4231                           ; Name         Instructions Cycles
  4232                           ; simple_byte           16     9 (average)
  4233                           ;	Chosen strategy is simple_byte
  4234  0028FC  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  4235  0028FE  0A02               	xorlw	2	; case 2
  4236  002900  B4D8               	btfsc	status,2,c
  4237  002902  EF5C  F014         	goto	l10362
  4238  002906  0A0A               	xorlw	10	; case 8
  4239  002908  B4D8               	btfsc	status,2,c
  4240  00290A  EF50  F014         	goto	l10358
  4241  00290E  0A01               	xorlw	1	; case 9
  4242  002910  B4D8               	btfsc	status,2,c
  4243  002912  EF56  F014         	goto	l10360
  4244  002916  0A03               	xorlw	3	; case 10
  4245  002918  B4D8               	btfsc	status,2,c
  4246  00291A  EF62  F014         	goto	l10364
  4247  00291E  0A01               	xorlw	1	; case 11
  4248  002920  B4D8               	btfsc	status,2,c
  4249  002922  EF68  F014         	goto	l10366
  4250  002926  EF17  F014         	goto	l10350
  4251  00292A                     l10372:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;MCAL/CCP/hal_ccp.c: 453:     CCP_Mode_Timer_Select(_ccp_obj);
  4255  00292A  C021  F01E         	movff	CCP_Compare_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  4256  00292E  C022  F01F         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  4257  002932  EC65  F021         	call	_CCP_Mode_Timer_Select	;wreg free
  4258  002936                     
  4259                           ;MCAL/CCP/hal_ccp.c: 455:     return ret;
  4260  002936  0100               	movlb	0	; () banked
  4261  002938  5160               	movf	CCP_Compare_Mode_Config@ret& (0+255),w,b
  4262  00293A                     
  4263                           ; BSR set to: 0
  4264  00293A  0012               	return		;funcret
  4265  00293C                     __end_of_CCP_Compare_Mode_Config:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _CCP_Capture_Mode_Config *****************
  4269 ;; Defined at:
  4270 ;;		line 359 in file "MCAL/CCP/hal_ccp.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  4273 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  ret             1    0[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      unsigned char 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;Total ram usage:        5 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 9
  4292 ;; This function calls:
  4293 ;;		_CCP_Mode_Timer_Select
  4294 ;; This function is called by:
  4295 ;;		_CCP_Init
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text20
  4300  002BEE                     __ptext20:
  4301                           	callstack 0
  4302  002BEE                     _CCP_Capture_Mode_Config:
  4303                           	callstack 18
  4304  002BEE                     
  4305                           ;MCAL/CCP/hal_ccp.c: 360:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  4306  002BEE  0E01               	movlw	1
  4307  002BF0  0100               	movlb	0	; () banked
  4308  002BF2  6F60               	movwf	CCP_Capture_Mode_Config@ret& (0+255),b
  4309  002BF4                     
  4310                           ; BSR set to: 0
  4311                           ;MCAL/CCP/hal_ccp.c: 362:     if(CCP1_INST == _ccp_obj->ccp_inst){
  4312  002BF4  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  4313  002BF8  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  4314  002BFC  50DF               	movf	indf2,w,c
  4315  002BFE  A4D8               	btfss	status,2,c
  4316  002C00  EF04  F016         	goto	u10891
  4317  002C04  EF06  F016         	goto	u10890
  4318  002C08                     u10891:
  4319  002C08  EF47  F016         	goto	l10300
  4320  002C0C                     u10890:
  4321  002C0C  EF24  F016         	goto	l10298
  4322  002C10                     l10288:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;MCAL/CCP/hal_ccp.c: 366:                 (CCP1CONbits.CCP1M = ((uint8)0x04));
  4326  002C10  50BD               	movf	189,w,c	;volatile
  4327  002C12  0BF0               	andlw	-16
  4328  002C14  0904               	iorlw	4
  4329  002C16  6EBD               	movwf	189,c	;volatile
  4330                           
  4331                           ;MCAL/CCP/hal_ccp.c: 367:                 break;
  4332  002C18  EF90  F016         	goto	l10316
  4333  002C1C                     l10290:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;MCAL/CCP/hal_ccp.c: 369:                 (CCP1CONbits.CCP1M = ((uint8)0x05));
  4337  002C1C  50BD               	movf	189,w,c	;volatile
  4338  002C1E  0BF0               	andlw	-16
  4339  002C20  0905               	iorlw	5
  4340  002C22  6EBD               	movwf	189,c	;volatile
  4341                           
  4342                           ;MCAL/CCP/hal_ccp.c: 370:                 break;
  4343  002C24  EF90  F016         	goto	l10316
  4344  002C28                     l10292:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;MCAL/CCP/hal_ccp.c: 372:                 (CCP1CONbits.CCP1M = ((uint8)0x06));
  4348  002C28  50BD               	movf	189,w,c	;volatile
  4349  002C2A  0BF0               	andlw	-16
  4350  002C2C  0906               	iorlw	6
  4351  002C2E  6EBD               	movwf	189,c	;volatile
  4352                           
  4353                           ;MCAL/CCP/hal_ccp.c: 373:                 break;
  4354  002C30  EF90  F016         	goto	l10316
  4355  002C34                     l10294:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;MCAL/CCP/hal_ccp.c: 375:                 (CCP1CONbits.CCP1M = ((uint8)0x07));
  4359  002C34  50BD               	movf	189,w,c	;volatile
  4360  002C36  0BF0               	andlw	-16
  4361  002C38  0907               	iorlw	7
  4362  002C3A  6EBD               	movwf	189,c	;volatile
  4363                           
  4364                           ;MCAL/CCP/hal_ccp.c: 376:                 break;
  4365  002C3C  EF90  F016         	goto	l10316
  4366  002C40                     l10296:
  4367                           
  4368                           ; BSR set to: 0
  4369  002C40  0E00               	movlw	0
  4370  002C42  6F60               	movwf	CCP_Capture_Mode_Config@ret& (0+255),b
  4371                           
  4372                           ;MCAL/CCP/hal_ccp.c: 378:         }
  4373  002C44  EF90  F016         	goto	l10316
  4374  002C48                     l10298:
  4375                           
  4376                           ; BSR set to: 0
  4377  002C48  EE20 F002          	lfsr	2,2
  4378  002C4C  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  4379  002C4E  26D9               	addwf	fsr2l,f,c
  4380  002C50  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  4381  002C52  22DA               	addwfc	fsr2h,f,c
  4382  002C54  50DF               	movf	indf2,w,c
  4383  002C56  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  4384  002C58  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  4385                           
  4386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4387                           ; Switch size 1, requested type "simple"
  4388                           ; Number of cases is 1, Range of values is 0 to 0
  4389                           ; switch strategies available:
  4390                           ; Name         Instructions Cycles
  4391                           ; simple_byte            4     3 (average)
  4392                           ;	Chosen strategy is simple_byte
  4393  002C5A  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  4394  002C5C  0A00               	xorlw	0	; case 0
  4395  002C5E  B4D8               	btfsc	status,2,c
  4396  002C60  EF34  F016         	goto	l12022
  4397  002C64  EF20  F016         	goto	l10296
  4398  002C68                     l12022:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ; Switch size 1, requested type "simple"
  4402                           ; Number of cases is 4, Range of values is 4 to 7
  4403                           ; switch strategies available:
  4404                           ; Name         Instructions Cycles
  4405                           ; simple_byte           13     7 (average)
  4406                           ;	Chosen strategy is simple_byte
  4407  002C68  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  4408  002C6A  0A04               	xorlw	4	; case 4
  4409  002C6C  B4D8               	btfsc	status,2,c
  4410  002C6E  EF08  F016         	goto	l10288
  4411  002C72  0A01               	xorlw	1	; case 5
  4412  002C74  B4D8               	btfsc	status,2,c
  4413  002C76  EF0E  F016         	goto	l10290
  4414  002C7A  0A03               	xorlw	3	; case 6
  4415  002C7C  B4D8               	btfsc	status,2,c
  4416  002C7E  EF14  F016         	goto	l10292
  4417  002C82  0A01               	xorlw	1	; case 7
  4418  002C84  B4D8               	btfsc	status,2,c
  4419  002C86  EF1A  F016         	goto	l10294
  4420  002C8A  EF20  F016         	goto	l10296
  4421  002C8E                     l10300:
  4422                           
  4423                           ; BSR set to: 0
  4424  002C8E  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  4425  002C92  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  4426  002C96  04DE               	decf	postinc2,w,c
  4427  002C98  A4D8               	btfss	status,2,c
  4428  002C9A  EF51  F016         	goto	u10901
  4429  002C9E  EF53  F016         	goto	u10900
  4430  002CA2                     u10901:
  4431  002CA2  EF90  F016         	goto	l10316
  4432  002CA6                     u10900:
  4433  002CA6  EF6D  F016         	goto	l10314
  4434  002CAA                     l10304:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;MCAL/CCP/hal_ccp.c: 384:                 (CCP2CONbits.CCP2M = ((uint8)0x04));
  4438  002CAA  50BA               	movf	186,w,c	;volatile
  4439  002CAC  0BF0               	andlw	-16
  4440  002CAE  0904               	iorlw	4
  4441  002CB0  6EBA               	movwf	186,c	;volatile
  4442                           
  4443                           ;MCAL/CCP/hal_ccp.c: 385:             break;
  4444  002CB2  EF90  F016         	goto	l10316
  4445  002CB6                     l10306:
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;MCAL/CCP/hal_ccp.c: 387:                 (CCP2CONbits.CCP2M = ((uint8)0x05));
  4449  002CB6  50BA               	movf	186,w,c	;volatile
  4450  002CB8  0BF0               	andlw	-16
  4451  002CBA  0905               	iorlw	5
  4452  002CBC  6EBA               	movwf	186,c	;volatile
  4453                           
  4454                           ;MCAL/CCP/hal_ccp.c: 388:                 break;
  4455  002CBE  EF90  F016         	goto	l10316
  4456  002CC2                     l10308:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;MCAL/CCP/hal_ccp.c: 390:                 (CCP2CONbits.CCP2M = ((uint8)0x06));
  4460  002CC2  50BA               	movf	186,w,c	;volatile
  4461  002CC4  0BF0               	andlw	-16
  4462  002CC6  0906               	iorlw	6
  4463  002CC8  6EBA               	movwf	186,c	;volatile
  4464                           
  4465                           ;MCAL/CCP/hal_ccp.c: 391:                 break;
  4466  002CCA  EF90  F016         	goto	l10316
  4467  002CCE                     l10310:
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;MCAL/CCP/hal_ccp.c: 393:                 (CCP2CONbits.CCP2M = ((uint8)0x07));
  4471  002CCE  50BA               	movf	186,w,c	;volatile
  4472  002CD0  0BF0               	andlw	-16
  4473  002CD2  0907               	iorlw	7
  4474  002CD4  6EBA               	movwf	186,c	;volatile
  4475                           
  4476                           ;MCAL/CCP/hal_ccp.c: 394:                 break;
  4477  002CD6  EF90  F016         	goto	l10316
  4478  002CDA                     l10314:
  4479                           
  4480                           ; BSR set to: 0
  4481  002CDA  EE20 F002          	lfsr	2,2
  4482  002CDE  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  4483  002CE0  26D9               	addwf	fsr2l,f,c
  4484  002CE2  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  4485  002CE4  22DA               	addwfc	fsr2h,f,c
  4486  002CE6  50DF               	movf	indf2,w,c
  4487  002CE8  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  4488  002CEA  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  4489                           
  4490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4491                           ; Switch size 1, requested type "simple"
  4492                           ; Number of cases is 1, Range of values is 0 to 0
  4493                           ; switch strategies available:
  4494                           ; Name         Instructions Cycles
  4495                           ; simple_byte            4     3 (average)
  4496                           ;	Chosen strategy is simple_byte
  4497  002CEC  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  4498  002CEE  0A00               	xorlw	0	; case 0
  4499  002CF0  B4D8               	btfsc	status,2,c
  4500  002CF2  EF7D  F016         	goto	l12024
  4501  002CF6  EF20  F016         	goto	l10296
  4502  002CFA                     l12024:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ; Switch size 1, requested type "simple"
  4506                           ; Number of cases is 4, Range of values is 4 to 7
  4507                           ; switch strategies available:
  4508                           ; Name         Instructions Cycles
  4509                           ; simple_byte           13     7 (average)
  4510                           ;	Chosen strategy is simple_byte
  4511  002CFA  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  4512  002CFC  0A04               	xorlw	4	; case 4
  4513  002CFE  B4D8               	btfsc	status,2,c
  4514  002D00  EF55  F016         	goto	l10304
  4515  002D04  0A01               	xorlw	1	; case 5
  4516  002D06  B4D8               	btfsc	status,2,c
  4517  002D08  EF5B  F016         	goto	l10306
  4518  002D0C  0A03               	xorlw	3	; case 6
  4519  002D0E  B4D8               	btfsc	status,2,c
  4520  002D10  EF61  F016         	goto	l10308
  4521  002D14  0A01               	xorlw	1	; case 7
  4522  002D16  B4D8               	btfsc	status,2,c
  4523  002D18  EF67  F016         	goto	l10310
  4524  002D1C  EF20  F016         	goto	l10296
  4525  002D20                     l10316:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;MCAL/CCP/hal_ccp.c: 401:     CCP_Mode_Timer_Select(_ccp_obj);
  4529  002D20  C021  F01E         	movff	CCP_Capture_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  4530  002D24  C022  F01F         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  4531  002D28  EC65  F021         	call	_CCP_Mode_Timer_Select	;wreg free
  4532  002D2C                     
  4533                           ;MCAL/CCP/hal_ccp.c: 403:     return ret;
  4534  002D2C  0100               	movlb	0	; () banked
  4535  002D2E  5160               	movf	CCP_Capture_Mode_Config@ret& (0+255),w,b
  4536  002D30                     
  4537                           ; BSR set to: 0
  4538  002D30  0012               	return		;funcret
  4539  002D32                     __end_of_CCP_Capture_Mode_Config:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _CCP_Mode_Timer_Select *****************
  4543 ;; Defined at:
  4544 ;;		line 339 in file "MCAL/CCP/hal_ccp.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  4547 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:        3 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 8
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_CCP_Capture_Mode_Config
  4570 ;;		_CCP_Compare_Mode_Config
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text21
  4575  0042CA                     __ptext21:
  4576                           	callstack 0
  4577  0042CA                     _CCP_Mode_Timer_Select:
  4578                           	callstack 18
  4579  0042CA                     
  4580                           ;MCAL/CCP/hal_ccp.c: 340:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
  4581  0042CA  EE20 F004          	lfsr	2,4
  4582  0042CE  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4583  0042D0  26D9               	addwf	fsr2l,f,c
  4584  0042D2  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4585  0042D4  22DA               	addwfc	fsr2h,f,c
  4586  0042D6  50DF               	movf	indf2,w,c
  4587  0042D8  A4D8               	btfss	status,2,c
  4588  0042DA  EF71  F021         	goto	u10751
  4589  0042DE  EF73  F021         	goto	u10750
  4590  0042E2                     u10751:
  4591  0042E2  EF77  F021         	goto	l10198
  4592  0042E6                     u10750:
  4593  0042E6                     
  4594                           ;MCAL/CCP/hal_ccp.c: 342:         T3CONbits.T3CCP1 = 0;
  4595  0042E6  96B1               	bcf	177,3,c	;volatile
  4596                           
  4597                           ;MCAL/CCP/hal_ccp.c: 343:         T3CONbits.T3CCP2 = 1;
  4598  0042E8  8CB1               	bsf	177,6,c	;volatile
  4599                           
  4600                           ;MCAL/CCP/hal_ccp.c: 344:     }
  4601  0042EA  EF9C  F021         	goto	l575
  4602  0042EE                     l10198:
  4603  0042EE  EE20 F004          	lfsr	2,4
  4604  0042F2  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4605  0042F4  26D9               	addwf	fsr2l,f,c
  4606  0042F6  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4607  0042F8  22DA               	addwfc	fsr2h,f,c
  4608  0042FA  04DE               	decf	postinc2,w,c
  4609  0042FC  A4D8               	btfss	status,2,c
  4610  0042FE  EF83  F021         	goto	u10761
  4611  004302  EF85  F021         	goto	u10760
  4612  004306                     u10761:
  4613  004306  EF89  F021         	goto	l10202
  4614  00430A                     u10760:
  4615  00430A                     
  4616                           ;MCAL/CCP/hal_ccp.c: 348:         T3CONbits.T3CCP1 = 1;
  4617  00430A  86B1               	bsf	177,3,c	;volatile
  4618                           
  4619                           ;MCAL/CCP/hal_ccp.c: 349:         T3CONbits.T3CCP2 = 0;
  4620  00430C  9CB1               	bcf	177,6,c	;volatile
  4621                           
  4622                           ;MCAL/CCP/hal_ccp.c: 350:     }
  4623  00430E  EF9C  F021         	goto	l575
  4624  004312                     l10202:
  4625  004312  EE20 F004          	lfsr	2,4
  4626  004316  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4627  004318  26D9               	addwf	fsr2l,f,c
  4628  00431A  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4629  00431C  22DA               	addwfc	fsr2h,f,c
  4630  00431E  0E02               	movlw	2
  4631  004320  18DE               	xorwf	postinc2,w,c
  4632  004322  A4D8               	btfss	status,2,c
  4633  004324  EF96  F021         	goto	u10771
  4634  004328  EF98  F021         	goto	u10770
  4635  00432C                     u10771:
  4636  00432C  EF9C  F021         	goto	l572
  4637  004330                     u10770:
  4638  004330                     
  4639                           ;MCAL/CCP/hal_ccp.c: 353:         T3CONbits.T3CCP1 = 0;
  4640  004330  96B1               	bcf	177,3,c	;volatile
  4641                           
  4642                           ;MCAL/CCP/hal_ccp.c: 354:         T3CONbits.T3CCP2 = 0;
  4643  004332  9CB1               	bcf	177,6,c	;volatile
  4644                           
  4645                           ;MCAL/CCP/hal_ccp.c: 355:     }
  4646  004334  EF9C  F021         	goto	l575
  4647  004338                     l572:
  4648  004338                     l575:
  4649  004338  0012               	return		;funcret
  4650  00433A                     __end_of_CCP_Mode_Timer_Select:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _Ecu_Stepper_Init *****************
  4654 ;; Defined at:
  4655 ;;		line 9 in file "ECU/stepper/ecu_stepper.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  stepper         2    6[BANK0 ] PTR struct .
  4658 ;;		 -> stepper_base(2), 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4670 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 10
  4677 ;; This function calls:
  4678 ;;		_GPIO_Pin_Direction_Initialize
  4679 ;;		_GPIO_Pin_Initialize
  4680 ;;		_GPIO_Pin_Write_Logic
  4681 ;; This function is called by:
  4682 ;;		_application_intialize
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text22
  4687  0041DE                     __ptext22:
  4688                           	callstack 0
  4689  0041DE                     _Ecu_Stepper_Init:
  4690                           	callstack 19
  4691  0041DE                     
  4692                           ;ECU/stepper/ecu_stepper.c: 9: Std_ReturnType Ecu_Stepper_Init(stepper_config_st *steppe
      +                          r);ECU/stepper/ecu_stepper.c: 10: {;ECU/stepper/ecu_stepper.c: 11:     if(((void*)0) == 
      +                          stepper)
  4693  0041DE  0100               	movlb	0	; () banked
  4694  0041E0  5166               	movf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4695  0041E2  1167               	iorwf	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4696  0041E4  A4D8               	btfss	status,2,c
  4697  0041E6  EFF7  F020         	goto	u11741
  4698  0041EA  EFF9  F020         	goto	u11740
  4699  0041EE                     u11741:
  4700  0041EE  EFFB  F020         	goto	l10894
  4701  0041F2                     u11740:
  4702  0041F2  EF2C  F021         	goto	l325
  4703  0041F6                     l10894:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;ECU/stepper/ecu_stepper.c: 16:     {;ECU/stepper/ecu_stepper.c: 17:         GPIO_Pin_In
      +                          itialize(&(stepper->step_pin));
  4707  0041F6  C066  F022         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Initialize@_pin_config
  4708  0041FA  C067  F023         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Initialize@_pin_config+1
  4709  0041FE  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  4710                           
  4711                           ;ECU/stepper/ecu_stepper.c: 18:         GPIO_Pin_Initialize(&(stepper->dir_pin));
  4712  004202  0E01               	movlw	1
  4713  004204  0100               	movlb	0	; () banked
  4714  004206  2566               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4715  004208  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  4716  00420A  0E00               	movlw	0
  4717  00420C  2167               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4718  00420E  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  4719  004210  EC71  F024         	call	_GPIO_Pin_Initialize	;wreg free
  4720                           
  4721                           ;ECU/stepper/ecu_stepper.c: 19:         GPIO_Pin_Direction_Initialize(&(stepper->dir_pin
      +                          ));
  4722  004214  0E01               	movlw	1
  4723  004216  0100               	movlb	0	; () banked
  4724  004218  2566               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4725  00421A  6E1E               	movwf	GPIO_Pin_Direction_Initialize@_pin_config^0,c
  4726  00421C  0E00               	movlw	0
  4727  00421E  2167               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4728  004220  6E1F               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,c
  4729  004222  EC54  F015         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4730                           
  4731                           ;ECU/stepper/ecu_stepper.c: 20:         GPIO_Pin_Direction_Initialize(&(stepper->step_pi
      +                          n));
  4732  004226  C066  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Direction_Initialize@_pin_config
  4733  00422A  C067  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  4734  00422E  EC54  F015         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4735                           
  4736                           ;ECU/stepper/ecu_stepper.c: 21:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , GPIO
      +                          _LOW);
  4737  004232  C066  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Write_Logic@_pin_config
  4738  004236  C067  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  4739  00423A  0E00               	movlw	0
  4740  00423C  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4741  00423E  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  4742                           
  4743                           ;ECU/stepper/ecu_stepper.c: 22:         GPIO_Pin_Write_Logic(&(stepper->dir_pin) , GPIO_
      +                          LOW);
  4744  004242  0E01               	movlw	1
  4745  004244  0100               	movlb	0	; () banked
  4746  004246  2566               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4747  004248  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  4748  00424A  0E00               	movlw	0
  4749  00424C  2167               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4750  00424E  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  4751  004250  0E00               	movlw	0
  4752  004252  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4753  004254  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  4754  004258                     l325:
  4755  004258  0012               	return		;funcret
  4756  00425A                     __end_of_Ecu_Stepper_Init:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _GPIO_Pin_Initialize *****************
  4760 ;; Defined at:
  4761 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  _pin_config     2   33[COMRAM] PTR const struct .
  4764 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
  4765 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
  4766 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  ERRORSTATUS     1   35[COMRAM] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      unsigned char 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        3 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 9
  4785 ;; This function calls:
  4786 ;;		_GPIO_Pin_Direction_Initialize
  4787 ;;		_GPIO_Pin_Write_Logic
  4788 ;; This function is called by:
  4789 ;;		_ECU_DC_Motor_Init
  4790 ;;		_Ecu_Stepper_Init
  4791 ;;		_CCP_Init
  4792 ;;		_Ultra_Sonic_Init
  4793 ;;		_application_intialize
  4794 ;;		_IR_Sensor_Init
  4795 ;;		_lcd_4bit_initialize
  4796 ;;		_lcd_8bit_initialize
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text23
  4801  0048E2                     __ptext23:
  4802                           	callstack 0
  4803  0048E2                     _GPIO_Pin_Initialize:
  4804                           	callstack 19
  4805  0048E2                     
  4806                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  4807  0048E2  5022               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
  4808  0048E4  1023               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
  4809  0048E6  A4D8               	btfss	status,2,c
  4810  0048E8  EF78  F024         	goto	u10791
  4811  0048EC  EF7A  F024         	goto	u10790
  4812  0048F0                     u10791:
  4813  0048F0  EF7E  F024         	goto	l10222
  4814  0048F4                     u10790:
  4815  0048F4                     
  4816                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  4817  0048F4  0E00               	movlw	0
  4818  0048F6  6E24               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  4819                           
  4820                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  4821  0048F8  EF94  F024         	goto	l10224
  4822  0048FC                     l10222:
  4823                           
  4824                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  4825  0048FC  C022  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  4826  004900  C023  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  4827  004904  EC54  F015         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4828  004908  6E24               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  4829                           
  4830                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  4831  00490A  C022  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  4832  00490E  C023  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  4833  004912  C022  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  4834  004916  C023  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  4835  00491A  0E00               	movlw	0
  4836  00491C  BEDF               	btfsc	indf2,7,c
  4837  00491E  0E01               	movlw	1
  4838  004920  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4839  004922  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  4840  004926  6E24               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  4841  004928                     l10224:
  4842                           
  4843                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  4844  004928  5024               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
  4845  00492A  0012               	return		;funcret
  4846  00492C                     __end_of_GPIO_Pin_Initialize:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  4850 ;; Defined at:
  4851 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  _pin_config     2   29[COMRAM] PTR const struct .
  4854 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
  4855 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
  4856 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  ERRORSTATUS     1   31[COMRAM] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      unsigned char 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;Total ram usage:        9 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 8
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_Ecu_Stepper_Init
  4879 ;;		_GPIO_Pin_Initialize
  4880 ;;		_interrupt_RBx_pin_init
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text24
  4885  002AA8                     __ptext24:
  4886                           	callstack 0
  4887  002AA8                     _GPIO_Pin_Direction_Initialize:
  4888                           	callstack 19
  4889  002AA8                     
  4890                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  4891  002AA8  0E01               	movlw	1
  4892  002AAA  6E20               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  4893  002AAC                     
  4894                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  4895  002AAC  501E               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  4896  002AAE  101F               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  4897  002AB0  B4D8               	btfsc	status,2,c
  4898  002AB2  EF5D  F015         	goto	u10691
  4899  002AB6  EF5F  F015         	goto	u10690
  4900  002ABA                     u10691:
  4901  002ABA  EF6F  F015         	goto	l10176
  4902  002ABE                     u10690:
  4903  002ABE  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4904  002AC2  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4905  002AC6  50DF               	movf	223,w,c
  4906  002AC8  0B07               	andlw	7
  4907  002ACA  0100               	movlb	0	; () banked
  4908  002ACC  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4909  002ACE  0E07               	movlw	7
  4910  002AD0  6560               	cpfsgt	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4911  002AD2  EF6D  F015         	goto	u10701
  4912  002AD6  EF6F  F015         	goto	u10700
  4913  002ADA                     u10701:
  4914  002ADA  EFD4  F015         	goto	l10184
  4915  002ADE                     u10700:
  4916  002ADE                     l10176:
  4917                           
  4918                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  4919  002ADE  0E00               	movlw	0
  4920  002AE0  6E20               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  4921                           
  4922                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  4923  002AE2  EFF5  F015         	goto	l10186
  4924  002AE6                     l10178:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  4928  002AE6  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4929  002AEA  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4930  002AEE  50DF               	movf	223,w,c
  4931  002AF0  0B07               	andlw	7
  4932  002AF2  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4933  002AF4  0E01               	movlw	1
  4934  002AF6  6F61               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  4935  002AF8  2B60               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4936  002AFA  EF81  F015         	goto	u10714
  4937  002AFE                     u10715:
  4938  002AFE  90D8               	bcf	status,0,c
  4939  002B00  3761               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  4940  002B02                     u10714:
  4941  002B02  2F60               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4942  002B04  EF7F  F015         	goto	u10715
  4943  002B08  0100               	movlb	0	; () banked
  4944  002B0A  5161               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  4945  002B0C  0AFF               	xorlw	255
  4946  002B0E  6F62               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  4947  002B10  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4948  002B14  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4949  002B18  30DF               	rrcf	223,w,c
  4950  002B1A  32E8               	rrcf	wreg,f,c
  4951  002B1C  32E8               	rrcf	wreg,f,c
  4952  002B1E  0B07               	andlw	7
  4953  002B20  6F63               	movwf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),b
  4954  002B22  5163               	movf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),w,b
  4955  002B24  0D02               	mullw	2
  4956  002B26  0EB0               	movlw	low _tris_registers
  4957  002B28  24F3               	addwf	243,w,c
  4958  002B2A  6ED9               	movwf	fsr2l,c
  4959  002B2C  0E00               	movlw	high _tris_registers
  4960  002B2E  20F4               	addwfc	prodh,w,c
  4961  002B30  6EDA               	movwf	fsr2h,c
  4962  002B32  CFDE F064          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  4963  002B36  CFDD F065          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  4964  002B3A  C064  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  4965  002B3E  C065  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  4966  002B42  5162               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  4967  002B44  16DF               	andwf	indf2,f,c
  4968                           
  4969                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  4970  002B46  EFF5  F015         	goto	l10186
  4971  002B4A                     l10180:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  4975  002B4A  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4976  002B4E  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4977  002B52  50DF               	movf	223,w,c
  4978  002B54  0B07               	andlw	7
  4979  002B56  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4980  002B58  0E01               	movlw	1
  4981  002B5A  6F61               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  4982  002B5C  2B60               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4983  002B5E  EFB3  F015         	goto	u10724
  4984  002B62                     u10725:
  4985  002B62  90D8               	bcf	status,0,c
  4986  002B64  3761               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  4987  002B66                     u10724:
  4988  002B66  2F60               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4989  002B68  EFB1  F015         	goto	u10725
  4990  002B6C  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4991  002B70  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4992  002B74  30DF               	rrcf	223,w,c
  4993  002B76  32E8               	rrcf	wreg,f,c
  4994  002B78  32E8               	rrcf	wreg,f,c
  4995  002B7A  0B07               	andlw	7
  4996  002B7C  0100               	movlb	0	; () banked
  4997  002B7E  6F62               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  4998  002B80  5162               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  4999  002B82  0D02               	mullw	2
  5000  002B84  0EB0               	movlw	low _tris_registers
  5001  002B86  24F3               	addwf	243,w,c
  5002  002B88  6ED9               	movwf	fsr2l,c
  5003  002B8A  0E00               	movlw	high _tris_registers
  5004  002B8C  20F4               	addwfc	prodh,w,c
  5005  002B8E  6EDA               	movwf	fsr2h,c
  5006  002B90  CFDE F063          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  5007  002B94  CFDD F064          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  5008  002B98  C063  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  5009  002B9C  C064  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  5010  002BA0  5161               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  5011  002BA2  12DF               	iorwf	indf2,f,c
  5012                           
  5013                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  5014  002BA4  EFF5  F015         	goto	l10186
  5015  002BA8                     l10184:
  5016                           
  5017                           ; BSR set to: 0
  5018  002BA8  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  5019  002BAC  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  5020  002BB0  BCDF               	btfsc	indf2,6,c
  5021  002BB2  EFDD  F015         	goto	u10731
  5022  002BB6  EFE0  F015         	goto	u10730
  5023  002BBA                     u10731:
  5024  002BBA  0E01               	movlw	1
  5025  002BBC  EFE1  F015         	goto	u10740
  5026  002BC0                     u10730:
  5027  002BC0  0E00               	movlw	0
  5028  002BC2                     u10740:
  5029  002BC2  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  5030  002BC4  6B61               	clrf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  5031                           
  5032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5033                           ; Switch size 1, requested type "simple"
  5034                           ; Number of cases is 1, Range of values is 0 to 0
  5035                           ; switch strategies available:
  5036                           ; Name         Instructions Cycles
  5037                           ; simple_byte            4     3 (average)
  5038                           ;	Chosen strategy is simple_byte
  5039  002BC6  5161               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  5040  002BC8  0A00               	xorlw	0	; case 0
  5041  002BCA  B4D8               	btfsc	status,2,c
  5042  002BCC  EFEA  F015         	goto	l12026
  5043  002BD0  EF6F  F015         	goto	l10176
  5044  002BD4                     l12026:
  5045                           
  5046                           ; BSR set to: 0
  5047                           ; Switch size 1, requested type "simple"
  5048                           ; Number of cases is 2, Range of values is 0 to 1
  5049                           ; switch strategies available:
  5050                           ; Name         Instructions Cycles
  5051                           ; simple_byte            7     4 (average)
  5052                           ;	Chosen strategy is simple_byte
  5053  002BD4  5160               	movf	??_GPIO_Pin_Direction_Initialize& (0+255),w,b
  5054  002BD6  0A00               	xorlw	0	; case 0
  5055  002BD8  B4D8               	btfsc	status,2,c
  5056  002BDA  EF73  F015         	goto	l10178
  5057  002BDE  0A01               	xorlw	1	; case 1
  5058  002BE0  B4D8               	btfsc	status,2,c
  5059  002BE2  EFA5  F015         	goto	l10180
  5060  002BE6  EF6F  F015         	goto	l10176
  5061  002BEA                     l10186:
  5062                           
  5063                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  5064  002BEA  5020               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  5065  002BEC  0012               	return		;funcret
  5066  002BEE                     __end_of_GPIO_Pin_Direction_Initialize:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _Robot_Steer_Right_Forward *****************
  5070 ;; Defined at:
  5071 ;;		line 108 in file "Robot/Navigation/robot_navigation.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  ret_val         1    0        unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 11
  5092 ;; This function calls:
  5093 ;;		_CCP_PWM_Set_Duty
  5094 ;;		_ECU_DC_Motor_Run_Right
  5095 ;;		_Robot_Steer_Stop
  5096 ;;		_Servo_SetAngle
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text25
  5103  003860                     __ptext25:
  5104                           	callstack 0
  5105  003860                     _Robot_Steer_Right_Forward:
  5106                           	callstack 19
  5107  003860                     
  5108                           ;Robot/Navigation/robot_navigation.c: 113:       Movement_State = NAV_MOV_FORW_STEER_RIG
      +                          HT ;
  5109  003860  0E02               	movlw	2
  5110  003862  0100               	movlb	0	; () banked
  5111  003864  6FF7               	movwf	_Movement_State& (0+255),b
  5112  003866                     
  5113                           ; BSR set to: 0
  5114                           ;Robot/Navigation/robot_navigation.c: 115:       Robot_Steer_Stop();
  5115  003866  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  5116  00386A                     
  5117                           ;Robot/Navigation/robot_navigation.c: 117:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 135 );
  5118  00386A  0EC6               	movlw	low _i2c_obj
  5119  00386C  0101               	movlb	1	; () banked
  5120  00386E  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5121  003870  0E00               	movlw	high _i2c_obj
  5122  003872  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5123  003874  0ECD               	movlw	low _servo_driver_obj
  5124  003876  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5125  003878  0E00               	movlw	high _servo_driver_obj
  5126  00387A  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5127  00387C  0E00               	movlw	0
  5128  00387E  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5129  003880  0E87               	movlw	135
  5130  003882  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5131  003884  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5132  003888                     
  5133                           ;Robot/Navigation/robot_navigation.c: 118:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 120 );
  5134  003888  0EC6               	movlw	low _i2c_obj
  5135  00388A  0101               	movlb	1	; () banked
  5136  00388C  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5137  00388E  0E00               	movlw	high _i2c_obj
  5138  003890  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5139  003892  0ECD               	movlw	low _servo_driver_obj
  5140  003894  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5141  003896  0E00               	movlw	high _servo_driver_obj
  5142  003898  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5143  00389A  0E01               	movlw	1
  5144  00389C  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5145  00389E  0E78               	movlw	120
  5146  0038A0  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5147  0038A2  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5148  0038A6                     
  5149                           ;Robot/Navigation/robot_navigation.c: 119:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 45 );
  5150  0038A6  0EC6               	movlw	low _i2c_obj
  5151  0038A8  0101               	movlb	1	; () banked
  5152  0038AA  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5153  0038AC  0E00               	movlw	high _i2c_obj
  5154  0038AE  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5155  0038B0  0ECD               	movlw	low _servo_driver_obj
  5156  0038B2  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5157  0038B4  0E00               	movlw	high _servo_driver_obj
  5158  0038B6  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5159  0038B8  0E02               	movlw	2
  5160  0038BA  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5161  0038BC  0E2D               	movlw	45
  5162  0038BE  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5163  0038C0  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5164  0038C4                     
  5165                           ;Robot/Navigation/robot_navigation.c: 120:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 30 );
  5166  0038C4  0EC6               	movlw	low _i2c_obj
  5167  0038C6  0101               	movlb	1	; () banked
  5168  0038C8  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5169  0038CA  0E00               	movlw	high _i2c_obj
  5170  0038CC  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5171  0038CE  0ECD               	movlw	low _servo_driver_obj
  5172  0038D0  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5173  0038D2  0E00               	movlw	high _servo_driver_obj
  5174  0038D4  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5175  0038D6  0E03               	movlw	3
  5176  0038D8  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5177  0038DA  0E1E               	movlw	30
  5178  0038DC  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5179  0038DE  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5180  0038E2                     
  5181                           ;Robot/Navigation/robot_navigation.c: 122:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  5182  0038E2  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  5183  0038E4  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  5184  0038E6  0E00               	movlw	high _W1_W3_W5_Motor_Control
  5185  0038E8  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  5186  0038EA  EC84  F025         	call	_ECU_DC_Motor_Run_Right	;wreg free
  5187  0038EE                     
  5188                           ;Robot/Navigation/robot_navigation.c: 123:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  5189  0038EE  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  5190  0038F0  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  5191  0038F2  0E00               	movlw	high _W2_W4_W6_Motor_Control
  5192  0038F4  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  5193  0038F6  EC84  F025         	call	_ECU_DC_Motor_Run_Right	;wreg free
  5194  0038FA                     
  5195                           ;Robot/Navigation/robot_navigation.c: 125:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  5196  0038FA  0EBA               	movlw	low _CCP1_Obj
  5197  0038FC  0101               	movlb	1	; () banked
  5198  0038FE  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5199  003900  0E00               	movlw	high _CCP1_Obj
  5200  003902  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5201  003904  0E5F               	movlw	95
  5202  003906  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5203  003908  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5204  00390C                     
  5205                           ;Robot/Navigation/robot_navigation.c: 126:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  5206  00390C  0E3F               	movlw	low _CCP2_Obj
  5207  00390E  0101               	movlb	1	; () banked
  5208  003910  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5209  003912  0E01               	movlw	high _CCP2_Obj
  5210  003914  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5211  003916  0E5F               	movlw	95
  5212  003918  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5213  00391A  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5214  00391E  0012               	return		;funcret
  5215  003920                     __end_of_Robot_Steer_Right_Forward:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _Robot_Steer_Right_Backward *****************
  5219 ;; Defined at:
  5220 ;;		line 151 in file "Robot/Navigation/robot_navigation.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  ret_val         1    0        unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 11
  5241 ;; This function calls:
  5242 ;;		_CCP_PWM_Set_Duty
  5243 ;;		_ECU_DC_Motor_Run_Left
  5244 ;;		_Robot_Steer_Stop
  5245 ;;		_Servo_SetAngle
  5246 ;; This function is called by:
  5247 ;;		_main
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text26
  5252  003B60                     __ptext26:
  5253                           	callstack 0
  5254  003B60                     _Robot_Steer_Right_Backward:
  5255                           	callstack 19
  5256  003B60                     
  5257                           ;Robot/Navigation/robot_navigation.c: 156:       Robot_Steer_Stop();
  5258  003B60  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  5259  003B64                     
  5260                           ;Robot/Navigation/robot_navigation.c: 158:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 135 );
  5261  003B64  0EC6               	movlw	low _i2c_obj
  5262  003B66  0101               	movlb	1	; () banked
  5263  003B68  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5264  003B6A  0E00               	movlw	high _i2c_obj
  5265  003B6C  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5266  003B6E  0ECD               	movlw	low _servo_driver_obj
  5267  003B70  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5268  003B72  0E00               	movlw	high _servo_driver_obj
  5269  003B74  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5270  003B76  0E00               	movlw	0
  5271  003B78  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5272  003B7A  0E87               	movlw	135
  5273  003B7C  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5274  003B7E  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5275  003B82                     
  5276                           ;Robot/Navigation/robot_navigation.c: 159:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 120 );
  5277  003B82  0EC6               	movlw	low _i2c_obj
  5278  003B84  0101               	movlb	1	; () banked
  5279  003B86  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5280  003B88  0E00               	movlw	high _i2c_obj
  5281  003B8A  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5282  003B8C  0ECD               	movlw	low _servo_driver_obj
  5283  003B8E  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5284  003B90  0E00               	movlw	high _servo_driver_obj
  5285  003B92  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5286  003B94  0E01               	movlw	1
  5287  003B96  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5288  003B98  0E78               	movlw	120
  5289  003B9A  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5290  003B9C  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5291  003BA0                     
  5292                           ;Robot/Navigation/robot_navigation.c: 160:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 45 );
  5293  003BA0  0EC6               	movlw	low _i2c_obj
  5294  003BA2  0101               	movlb	1	; () banked
  5295  003BA4  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5296  003BA6  0E00               	movlw	high _i2c_obj
  5297  003BA8  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5298  003BAA  0ECD               	movlw	low _servo_driver_obj
  5299  003BAC  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5300  003BAE  0E00               	movlw	high _servo_driver_obj
  5301  003BB0  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5302  003BB2  0E02               	movlw	2
  5303  003BB4  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5304  003BB6  0E2D               	movlw	45
  5305  003BB8  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5306  003BBA  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5307  003BBE                     
  5308                           ;Robot/Navigation/robot_navigation.c: 161:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 30 );
  5309  003BBE  0EC6               	movlw	low _i2c_obj
  5310  003BC0  0101               	movlb	1	; () banked
  5311  003BC2  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5312  003BC4  0E00               	movlw	high _i2c_obj
  5313  003BC6  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5314  003BC8  0ECD               	movlw	low _servo_driver_obj
  5315  003BCA  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5316  003BCC  0E00               	movlw	high _servo_driver_obj
  5317  003BCE  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5318  003BD0  0E03               	movlw	3
  5319  003BD2  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5320  003BD4  0E1E               	movlw	30
  5321  003BD6  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5322  003BD8  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5323  003BDC                     
  5324                           ;Robot/Navigation/robot_navigation.c: 163:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_C
      +                          ontrol);
  5325  003BDC  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  5326  003BDE  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  5327  003BE0  0E00               	movlw	high _W1_W3_W5_Motor_Control
  5328  003BE2  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  5329  003BE4  EC98  F025         	call	_ECU_DC_Motor_Run_Left	;wreg free
  5330  003BE8                     
  5331                           ;Robot/Navigation/robot_navigation.c: 164:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_C
      +                          ontrol);
  5332  003BE8  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  5333  003BEA  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  5334  003BEC  0E00               	movlw	high _W2_W4_W6_Motor_Control
  5335  003BEE  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  5336  003BF0  EC98  F025         	call	_ECU_DC_Motor_Run_Left	;wreg free
  5337  003BF4                     
  5338                           ;Robot/Navigation/robot_navigation.c: 166:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  5339  003BF4  0EBA               	movlw	low _CCP1_Obj
  5340  003BF6  0101               	movlb	1	; () banked
  5341  003BF8  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5342  003BFA  0E00               	movlw	high _CCP1_Obj
  5343  003BFC  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5344  003BFE  0E5F               	movlw	95
  5345  003C00  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5346  003C02  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5347  003C06                     
  5348                           ;Robot/Navigation/robot_navigation.c: 167:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  5349  003C06  0E3F               	movlw	low _CCP2_Obj
  5350  003C08  0101               	movlb	1	; () banked
  5351  003C0A  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5352  003C0C  0E01               	movlw	high _CCP2_Obj
  5353  003C0E  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5354  003C10  0E5F               	movlw	95
  5355  003C12  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5356  003C14  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5357  003C18  0012               	return		;funcret
  5358  003C1A                     __end_of_Robot_Steer_Right_Backward:
  5359                           	callstack 0
  5360                           
  5361 ;; *************** function _Robot_Steer_Left_Forward *****************
  5362 ;; Defined at:
  5363 ;;		line 130 in file "Robot/Navigation/robot_navigation.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  ret_val         1    0        unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 11
  5384 ;; This function calls:
  5385 ;;		_CCP_PWM_Set_Duty
  5386 ;;		_ECU_DC_Motor_Run_Right
  5387 ;;		_Robot_Steer_Stop
  5388 ;;		_Servo_SetAngle
  5389 ;; This function is called by:
  5390 ;;		_main
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text27
  5395  003920                     __ptext27:
  5396                           	callstack 0
  5397  003920                     _Robot_Steer_Left_Forward:
  5398                           	callstack 19
  5399  003920                     
  5400                           ;Robot/Navigation/robot_navigation.c: 133:             Movement_State = NAV_MOV_FORW_STE
      +                          ER_LEFT ;
  5401  003920  0E03               	movlw	3
  5402  003922  0100               	movlb	0	; () banked
  5403  003924  6FF7               	movwf	_Movement_State& (0+255),b
  5404  003926                     
  5405                           ; BSR set to: 0
  5406                           ;Robot/Navigation/robot_navigation.c: 135:       Robot_Steer_Stop();
  5407  003926  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  5408  00392A                     
  5409                           ;Robot/Navigation/robot_navigation.c: 137:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 45 );
  5410  00392A  0EC6               	movlw	low _i2c_obj
  5411  00392C  0101               	movlb	1	; () banked
  5412  00392E  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5413  003930  0E00               	movlw	high _i2c_obj
  5414  003932  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5415  003934  0ECD               	movlw	low _servo_driver_obj
  5416  003936  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5417  003938  0E00               	movlw	high _servo_driver_obj
  5418  00393A  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5419  00393C  0E00               	movlw	0
  5420  00393E  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5421  003940  0E2D               	movlw	45
  5422  003942  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5423  003944  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5424  003948                     
  5425                           ;Robot/Navigation/robot_navigation.c: 138:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 30 );
  5426  003948  0EC6               	movlw	low _i2c_obj
  5427  00394A  0101               	movlb	1	; () banked
  5428  00394C  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5429  00394E  0E00               	movlw	high _i2c_obj
  5430  003950  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5431  003952  0ECD               	movlw	low _servo_driver_obj
  5432  003954  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5433  003956  0E00               	movlw	high _servo_driver_obj
  5434  003958  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5435  00395A  0E01               	movlw	1
  5436  00395C  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5437  00395E  0E1E               	movlw	30
  5438  003960  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5439  003962  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5440  003966                     
  5441                           ;Robot/Navigation/robot_navigation.c: 139:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 135 );
  5442  003966  0EC6               	movlw	low _i2c_obj
  5443  003968  0101               	movlb	1	; () banked
  5444  00396A  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5445  00396C  0E00               	movlw	high _i2c_obj
  5446  00396E  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5447  003970  0ECD               	movlw	low _servo_driver_obj
  5448  003972  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5449  003974  0E00               	movlw	high _servo_driver_obj
  5450  003976  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5451  003978  0E02               	movlw	2
  5452  00397A  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5453  00397C  0E87               	movlw	135
  5454  00397E  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5455  003980  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5456  003984                     
  5457                           ;Robot/Navigation/robot_navigation.c: 140:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 120 );
  5458  003984  0EC6               	movlw	low _i2c_obj
  5459  003986  0101               	movlb	1	; () banked
  5460  003988  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5461  00398A  0E00               	movlw	high _i2c_obj
  5462  00398C  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5463  00398E  0ECD               	movlw	low _servo_driver_obj
  5464  003990  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5465  003992  0E00               	movlw	high _servo_driver_obj
  5466  003994  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5467  003996  0E03               	movlw	3
  5468  003998  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5469  00399A  0E78               	movlw	120
  5470  00399C  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5471  00399E  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5472  0039A2                     
  5473                           ;Robot/Navigation/robot_navigation.c: 142:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  5474  0039A2  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  5475  0039A4  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  5476  0039A6  0E00               	movlw	high _W1_W3_W5_Motor_Control
  5477  0039A8  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  5478  0039AA  EC84  F025         	call	_ECU_DC_Motor_Run_Right	;wreg free
  5479  0039AE                     
  5480                           ;Robot/Navigation/robot_navigation.c: 143:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  5481  0039AE  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  5482  0039B0  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  5483  0039B2  0E00               	movlw	high _W2_W4_W6_Motor_Control
  5484  0039B4  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  5485  0039B6  EC84  F025         	call	_ECU_DC_Motor_Run_Right	;wreg free
  5486  0039BA                     
  5487                           ;Robot/Navigation/robot_navigation.c: 145:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  5488  0039BA  0EBA               	movlw	low _CCP1_Obj
  5489  0039BC  0101               	movlb	1	; () banked
  5490  0039BE  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5491  0039C0  0E00               	movlw	high _CCP1_Obj
  5492  0039C2  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5493  0039C4  0E5F               	movlw	95
  5494  0039C6  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5495  0039C8  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5496  0039CC                     
  5497                           ;Robot/Navigation/robot_navigation.c: 146:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  5498  0039CC  0E3F               	movlw	low _CCP2_Obj
  5499  0039CE  0101               	movlb	1	; () banked
  5500  0039D0  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5501  0039D2  0E01               	movlw	high _CCP2_Obj
  5502  0039D4  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5503  0039D6  0E5F               	movlw	95
  5504  0039D8  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5505  0039DA  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5506  0039DE  0012               	return		;funcret
  5507  0039E0                     __end_of_Robot_Steer_Left_Forward:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _Robot_Steer_Left_Backward *****************
  5511 ;; Defined at:
  5512 ;;		line 172 in file "Robot/Navigation/robot_navigation.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  ret_val         1    0        unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      unsigned char 
  5519 ;; Registers used:
  5520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 11
  5533 ;; This function calls:
  5534 ;;		_CCP_PWM_Set_Duty
  5535 ;;		_ECU_DC_Motor_Run_Left
  5536 ;;		_Robot_Steer_Stop
  5537 ;;		_Servo_SetAngle
  5538 ;; This function is called by:
  5539 ;;		_main
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text28
  5544  003C1A                     __ptext28:
  5545                           	callstack 0
  5546  003C1A                     _Robot_Steer_Left_Backward:
  5547                           	callstack 19
  5548  003C1A                     
  5549                           ;Robot/Navigation/robot_navigation.c: 176:       Robot_Steer_Stop();
  5550  003C1A  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  5551  003C1E                     
  5552                           ;Robot/Navigation/robot_navigation.c: 178:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 0 , 45 );
  5553  003C1E  0EC6               	movlw	low _i2c_obj
  5554  003C20  0101               	movlb	1	; () banked
  5555  003C22  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5556  003C24  0E00               	movlw	high _i2c_obj
  5557  003C26  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5558  003C28  0ECD               	movlw	low _servo_driver_obj
  5559  003C2A  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5560  003C2C  0E00               	movlw	high _servo_driver_obj
  5561  003C2E  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5562  003C30  0E00               	movlw	0
  5563  003C32  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5564  003C34  0E2D               	movlw	45
  5565  003C36  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5566  003C38  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5567  003C3C                     
  5568                           ;Robot/Navigation/robot_navigation.c: 179:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 1 , 30 );
  5569  003C3C  0EC6               	movlw	low _i2c_obj
  5570  003C3E  0101               	movlb	1	; () banked
  5571  003C40  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5572  003C42  0E00               	movlw	high _i2c_obj
  5573  003C44  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5574  003C46  0ECD               	movlw	low _servo_driver_obj
  5575  003C48  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5576  003C4A  0E00               	movlw	high _servo_driver_obj
  5577  003C4C  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5578  003C4E  0E01               	movlw	1
  5579  003C50  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5580  003C52  0E1E               	movlw	30
  5581  003C54  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5582  003C56  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5583  003C5A                     
  5584                           ;Robot/Navigation/robot_navigation.c: 180:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 2 , 135 );
  5585  003C5A  0EC6               	movlw	low _i2c_obj
  5586  003C5C  0101               	movlb	1	; () banked
  5587  003C5E  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5588  003C60  0E00               	movlw	high _i2c_obj
  5589  003C62  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5590  003C64  0ECD               	movlw	low _servo_driver_obj
  5591  003C66  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5592  003C68  0E00               	movlw	high _servo_driver_obj
  5593  003C6A  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5594  003C6C  0E02               	movlw	2
  5595  003C6E  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5596  003C70  0E87               	movlw	135
  5597  003C72  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5598  003C74  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5599  003C78                     
  5600                           ;Robot/Navigation/robot_navigation.c: 181:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , 3 , 120 );
  5601  003C78  0EC6               	movlw	low _i2c_obj
  5602  003C7A  0101               	movlb	1	; () banked
  5603  003C7C  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5604  003C7E  0E00               	movlw	high _i2c_obj
  5605  003C80  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5606  003C82  0ECD               	movlw	low _servo_driver_obj
  5607  003C84  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5608  003C86  0E00               	movlw	high _servo_driver_obj
  5609  003C88  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5610  003C8A  0E03               	movlw	3
  5611  003C8C  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5612  003C8E  0E78               	movlw	120
  5613  003C90  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5614  003C92  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5615  003C96                     
  5616                           ;Robot/Navigation/robot_navigation.c: 183:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_C
      +                          ontrol);
  5617  003C96  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  5618  003C98  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  5619  003C9A  0E00               	movlw	high _W1_W3_W5_Motor_Control
  5620  003C9C  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  5621  003C9E  EC98  F025         	call	_ECU_DC_Motor_Run_Left	;wreg free
  5622  003CA2                     
  5623                           ;Robot/Navigation/robot_navigation.c: 184:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_C
      +                          ontrol);
  5624  003CA2  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  5625  003CA4  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  5626  003CA6  0E00               	movlw	high _W2_W4_W6_Motor_Control
  5627  003CA8  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  5628  003CAA  EC98  F025         	call	_ECU_DC_Motor_Run_Left	;wreg free
  5629  003CAE                     
  5630                           ;Robot/Navigation/robot_navigation.c: 186:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  5631  003CAE  0EBA               	movlw	low _CCP1_Obj
  5632  003CB0  0101               	movlb	1	; () banked
  5633  003CB2  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5634  003CB4  0E00               	movlw	high _CCP1_Obj
  5635  003CB6  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5636  003CB8  0E5F               	movlw	95
  5637  003CBA  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5638  003CBC  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5639  003CC0                     
  5640                           ;Robot/Navigation/robot_navigation.c: 187:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  5641  003CC0  0E3F               	movlw	low _CCP2_Obj
  5642  003CC2  0101               	movlb	1	; () banked
  5643  003CC4  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5644  003CC6  0E01               	movlw	high _CCP2_Obj
  5645  003CC8  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5646  003CCA  0E5F               	movlw	95
  5647  003CCC  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5648  003CCE  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5649  003CD2  0012               	return		;funcret
  5650  003CD4                     __end_of_Robot_Steer_Left_Backward:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _Robot_Move_Forward *****************
  5654 ;; Defined at:
  5655 ;;		line 62 in file "Robot/Navigation/robot_navigation.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  ret_val         1    0        unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      unsigned char 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 11
  5676 ;; This function calls:
  5677 ;;		_CCP_PWM_Set_Duty
  5678 ;;		_ECU_DC_Motor_Run_Right
  5679 ;;		_Robot_Steer_Stop
  5680 ;;		_Servo_SetAngle
  5681 ;; This function is called by:
  5682 ;;		_main
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text29
  5687  0039E0                     __ptext29:
  5688                           	callstack 0
  5689  0039E0                     _Robot_Move_Forward:
  5690                           	callstack 19
  5691  0039E0                     
  5692                           ;Robot/Navigation/robot_navigation.c: 67:             Movement_State = NAV_MOV_FORW ;
  5693  0039E0  0E01               	movlw	1
  5694  0039E2  0100               	movlb	0	; () banked
  5695  0039E4  6FF7               	movwf	_Movement_State& (0+255),b
  5696  0039E6                     
  5697                           ; BSR set to: 0
  5698                           ;Robot/Navigation/robot_navigation.c: 69:             Robot_Steer_Stop();
  5699  0039E6  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  5700  0039EA                     
  5701                           ;Robot/Navigation/robot_navigation.c: 71:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_1 , 90 );
  5702  0039EA  0EC6               	movlw	low _i2c_obj
  5703  0039EC  0101               	movlb	1	; () banked
  5704  0039EE  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5705  0039F0  0E00               	movlw	high _i2c_obj
  5706  0039F2  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5707  0039F4  0ECD               	movlw	low _servo_driver_obj
  5708  0039F6  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5709  0039F8  0E00               	movlw	high _servo_driver_obj
  5710  0039FA  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5711  0039FC  0E00               	movlw	0
  5712  0039FE  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5713  003A00  0E5A               	movlw	90
  5714  003A02  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5715  003A04  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5716  003A08                     
  5717                           ;Robot/Navigation/robot_navigation.c: 72:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_2 , 90 );
  5718  003A08  0EC6               	movlw	low _i2c_obj
  5719  003A0A  0101               	movlb	1	; () banked
  5720  003A0C  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5721  003A0E  0E00               	movlw	high _i2c_obj
  5722  003A10  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5723  003A12  0ECD               	movlw	low _servo_driver_obj
  5724  003A14  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5725  003A16  0E00               	movlw	high _servo_driver_obj
  5726  003A18  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5727  003A1A  0E01               	movlw	1
  5728  003A1C  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5729  003A1E  0E5A               	movlw	90
  5730  003A20  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5731  003A22  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5732  003A26                     
  5733                           ;Robot/Navigation/robot_navigation.c: 73:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_3 , 90 );
  5734  003A26  0EC6               	movlw	low _i2c_obj
  5735  003A28  0101               	movlb	1	; () banked
  5736  003A2A  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5737  003A2C  0E00               	movlw	high _i2c_obj
  5738  003A2E  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5739  003A30  0ECD               	movlw	low _servo_driver_obj
  5740  003A32  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5741  003A34  0E00               	movlw	high _servo_driver_obj
  5742  003A36  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5743  003A38  0E02               	movlw	2
  5744  003A3A  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5745  003A3C  0E5A               	movlw	90
  5746  003A3E  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5747  003A40  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5748  003A44                     
  5749                           ;Robot/Navigation/robot_navigation.c: 74:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_4 , 90 );
  5750  003A44  0EC6               	movlw	low _i2c_obj
  5751  003A46  0101               	movlb	1	; () banked
  5752  003A48  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5753  003A4A  0E00               	movlw	high _i2c_obj
  5754  003A4C  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5755  003A4E  0ECD               	movlw	low _servo_driver_obj
  5756  003A50  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5757  003A52  0E00               	movlw	high _servo_driver_obj
  5758  003A54  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5759  003A56  0E03               	movlw	3
  5760  003A58  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5761  003A5A  0E5A               	movlw	90
  5762  003A5C  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5763  003A5E  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5764  003A62                     
  5765                           ;Robot/Navigation/robot_navigation.c: 76:             ECU_DC_Motor_Run_Right(&W1_W3_W5_M
      +                          otor_Control);
  5766  003A62  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  5767  003A64  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  5768  003A66  0E00               	movlw	high _W1_W3_W5_Motor_Control
  5769  003A68  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  5770  003A6A  EC84  F025         	call	_ECU_DC_Motor_Run_Right	;wreg free
  5771  003A6E                     
  5772                           ;Robot/Navigation/robot_navigation.c: 77:             ECU_DC_Motor_Run_Right(&W2_W4_W6_M
      +                          otor_Control);
  5773  003A6E  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  5774  003A70  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  5775  003A72  0E00               	movlw	high _W2_W4_W6_Motor_Control
  5776  003A74  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  5777  003A76  EC84  F025         	call	_ECU_DC_Motor_Run_Right	;wreg free
  5778  003A7A                     
  5779                           ;Robot/Navigation/robot_navigation.c: 79:             CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  5780  003A7A  0EBA               	movlw	low _CCP1_Obj
  5781  003A7C  0101               	movlb	1	; () banked
  5782  003A7E  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5783  003A80  0E00               	movlw	high _CCP1_Obj
  5784  003A82  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5785  003A84  0E5F               	movlw	95
  5786  003A86  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5787  003A88  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5788  003A8C                     
  5789                           ;Robot/Navigation/robot_navigation.c: 80:             CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  5790  003A8C  0E3F               	movlw	low _CCP2_Obj
  5791  003A8E  0101               	movlb	1	; () banked
  5792  003A90  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5793  003A92  0E01               	movlw	high _CCP2_Obj
  5794  003A94  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5795  003A96  0E5F               	movlw	95
  5796  003A98  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  5797  003A9A  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  5798  003A9E  0012               	return		;funcret
  5799  003AA0                     __end_of_Robot_Move_Forward:
  5800                           	callstack 0
  5801                           
  5802 ;; *************** function _ECU_DC_Motor_Run_Right *****************
  5803 ;; Defined at:
  5804 ;;		line 59 in file "ECU/DC_Motor/ecu_dc_motor.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  5807 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  ret_value       1    0        unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:        2 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 9
  5826 ;; This function calls:
  5827 ;;		_GPIO_Pin_Write_Logic
  5828 ;; This function is called by:
  5829 ;;		_Robot_Move_Forward
  5830 ;;		_Robot_Steer_Right_Forward
  5831 ;;		_Robot_Steer_Left_Forward
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text30
  5836  004B08                     __ptext30:
  5837                           	callstack 0
  5838  004B08                     _ECU_DC_Motor_Run_Right:
  5839                           	callstack 20
  5840  004B08                     
  5841                           ;ECU/DC_Motor/ecu_dc_motor.c: 62:     if(((void*)0) == dc_motor)
  5842  004B08  5022               	movf	ECU_DC_Motor_Run_Right@dc_motor^0,w,c
  5843  004B0A  1023               	iorwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,w,c
  5844  004B0C  A4D8               	btfss	status,2,c
  5845  004B0E  EF8B  F025         	goto	u11611
  5846  004B12  EF8D  F025         	goto	u11610
  5847  004B16                     u11611:
  5848  004B16  EF8F  F025         	goto	l10778
  5849  004B1A                     u11610:
  5850  004B1A                     
  5851                           ;ECU/DC_Motor/ecu_dc_motor.c: 65:     }
  5852  004B1A  EF97  F025         	goto	l65
  5853  004B1E                     l10778:
  5854                           
  5855                           ;ECU/DC_Motor/ecu_dc_motor.c: 67:     {;ECU/DC_Motor/ecu_dc_motor.c: 68:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_LOW );
  5856  004B1E  C022  F01E         	movff	ECU_DC_Motor_Run_Right@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  5857  004B22  C023  F01F         	movff	ECU_DC_Motor_Run_Right@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  5858  004B26  0E00               	movlw	0
  5859  004B28  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  5860  004B2A  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  5861  004B2E                     l65:
  5862  004B2E  0012               	return		;funcret
  5863  004B30                     __end_of_ECU_DC_Motor_Run_Right:
  5864                           	callstack 0
  5865                           
  5866 ;; *************** function _Robot_Move_Backward *****************
  5867 ;; Defined at:
  5868 ;;		line 86 in file "Robot/Navigation/robot_navigation.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  ret_val         1    0        unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      unsigned char 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;Total ram usage:        0 bytes
  5887 ;; Hardware stack levels used: 1
  5888 ;; Hardware stack levels required when called: 11
  5889 ;; This function calls:
  5890 ;;		_CCP_PWM_Set_Duty
  5891 ;;		_ECU_DC_Motor_Run_Left
  5892 ;;		_Robot_Steer_Stop
  5893 ;;		_Servo_SetAngle
  5894 ;; This function is called by:
  5895 ;;		_main
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text31
  5900  003AA0                     __ptext31:
  5901                           	callstack 0
  5902  003AA0                     _Robot_Move_Backward:
  5903                           	callstack 19
  5904  003AA0                     
  5905                           ;Robot/Navigation/robot_navigation.c: 89:       Movement_State = NAV_MOV_BACKW ;
  5906  003AA0  0E04               	movlw	4
  5907  003AA2  0100               	movlb	0	; () banked
  5908  003AA4  6FF7               	movwf	_Movement_State& (0+255),b
  5909  003AA6                     
  5910                           ; BSR set to: 0
  5911                           ;Robot/Navigation/robot_navigation.c: 91:       Robot_Steer_Stop();
  5912  003AA6  ECBF  F025         	call	_Robot_Steer_Stop	;wreg free
  5913  003AAA                     
  5914                           ;Robot/Navigation/robot_navigation.c: 93:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_1 , 90 );
  5915  003AAA  0EC6               	movlw	low _i2c_obj
  5916  003AAC  0101               	movlb	1	; () banked
  5917  003AAE  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5918  003AB0  0E00               	movlw	high _i2c_obj
  5919  003AB2  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5920  003AB4  0ECD               	movlw	low _servo_driver_obj
  5921  003AB6  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5922  003AB8  0E00               	movlw	high _servo_driver_obj
  5923  003ABA  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5924  003ABC  0E00               	movlw	0
  5925  003ABE  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5926  003AC0  0E5A               	movlw	90
  5927  003AC2  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5928  003AC4  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5929  003AC8                     
  5930                           ;Robot/Navigation/robot_navigation.c: 94:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_2 , 90 );
  5931  003AC8  0EC6               	movlw	low _i2c_obj
  5932  003ACA  0101               	movlb	1	; () banked
  5933  003ACC  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5934  003ACE  0E00               	movlw	high _i2c_obj
  5935  003AD0  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5936  003AD2  0ECD               	movlw	low _servo_driver_obj
  5937  003AD4  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5938  003AD6  0E00               	movlw	high _servo_driver_obj
  5939  003AD8  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5940  003ADA  0E01               	movlw	1
  5941  003ADC  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5942  003ADE  0E5A               	movlw	90
  5943  003AE0  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5944  003AE2  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5945  003AE6                     
  5946                           ;Robot/Navigation/robot_navigation.c: 95:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_3 , 90 );
  5947  003AE6  0EC6               	movlw	low _i2c_obj
  5948  003AE8  0101               	movlb	1	; () banked
  5949  003AEA  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5950  003AEC  0E00               	movlw	high _i2c_obj
  5951  003AEE  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5952  003AF0  0ECD               	movlw	low _servo_driver_obj
  5953  003AF2  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5954  003AF4  0E00               	movlw	high _servo_driver_obj
  5955  003AF6  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5956  003AF8  0E02               	movlw	2
  5957  003AFA  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5958  003AFC  0E5A               	movlw	90
  5959  003AFE  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5960  003B00  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5961  003B04                     
  5962                           ;Robot/Navigation/robot_navigation.c: 96:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_4 , 90 );
  5963  003B04  0EC6               	movlw	low _i2c_obj
  5964  003B06  0101               	movlb	1	; () banked
  5965  003B08  6F5B               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  5966  003B0A  0E00               	movlw	high _i2c_obj
  5967  003B0C  6F5C               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  5968  003B0E  0ECD               	movlw	low _servo_driver_obj
  5969  003B10  6F5D               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  5970  003B12  0E00               	movlw	high _servo_driver_obj
  5971  003B14  6F5E               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  5972  003B16  0E03               	movlw	3
  5973  003B18  6F5F               	movwf	Servo_SetAngle@servo_no& (0+255),b
  5974  003B1A  0E5A               	movlw	90
  5975  003B1C  6F60               	movwf	Servo_SetAngle@angle& (0+255),b
  5976  003B1E  EC71  F01A         	call	_Servo_SetAngle	;wreg free
  5977  003B22                     
  5978                           ;Robot/Navigation/robot_navigation.c: 98:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_Co
      +                          ntrol);
  5979  003B22  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  5980  003B24  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  5981  003B26  0E00               	movlw	high _W1_W3_W5_Motor_Control
  5982  003B28  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  5983  003B2A  EC98  F025         	call	_ECU_DC_Motor_Run_Left	;wreg free
  5984  003B2E                     
  5985                           ;Robot/Navigation/robot_navigation.c: 99:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_Co
      +                          ntrol);
  5986  003B2E  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  5987  003B30  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  5988  003B32  0E00               	movlw	high _W2_W4_W6_Motor_Control
  5989  003B34  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  5990  003B36  EC98  F025         	call	_ECU_DC_Motor_Run_Left	;wreg free
  5991  003B3A                     
  5992                           ;Robot/Navigation/robot_navigation.c: 101:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  5993  003B3A  0EBA               	movlw	low _CCP1_Obj
  5994  003B3C  0101               	movlb	1	; () banked
  5995  003B3E  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  5996  003B40  0E00               	movlw	high _CCP1_Obj
  5997  003B42  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  5998  003B44  0E5F               	movlw	95
  5999  003B46  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6000  003B48  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  6001  003B4C                     
  6002                           ;Robot/Navigation/robot_navigation.c: 102:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6003  003B4C  0E3F               	movlw	low _CCP2_Obj
  6004  003B4E  0101               	movlb	1	; () banked
  6005  003B50  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6006  003B52  0E01               	movlw	high _CCP2_Obj
  6007  003B54  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6008  003B56  0E5F               	movlw	95
  6009  003B58  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6010  003B5A  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  6011  003B5E  0012               	return		;funcret
  6012  003B60                     __end_of_Robot_Move_Backward:
  6013                           	callstack 0
  6014                           
  6015 ;; *************** function _Servo_SetAngle *****************
  6016 ;; Defined at:
  6017 ;;		line 43 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  i2c_obj         2   16[BANK1 ] PTR const struct .
  6020 ;;		 -> i2c_obj(7), 
  6021 ;;  servo_driver    2   18[BANK1 ] PTR const struct .
  6022 ;;		 -> servo_driver_obj(4), 
  6023 ;;  servo_no        1   20[BANK1 ] const enum E3294
  6024 ;;  angle           1   21[BANK1 ] const unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  angle_in_reg    2   22[BANK1 ] unsigned short 
  6027 ;;  reg_addrees     1   24[BANK1 ] unsigned char 
  6028 ;;  ERRORSTATUS     1    0        unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      unsigned char 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6038 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;Total ram usage:        9 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; Hardware stack levels required when called: 10
  6045 ;; This function calls:
  6046 ;;		_PCA_Write_Reg
  6047 ;;		___fladd
  6048 ;;		___flmul
  6049 ;;		___fltol
  6050 ;;		___xxtofl
  6051 ;; This function is called by:
  6052 ;;		_Robot_Move_Forward
  6053 ;;		_Robot_Move_Backward
  6054 ;;		_Robot_Steer_Right_Forward
  6055 ;;		_Robot_Steer_Left_Forward
  6056 ;;		_Robot_Steer_Right_Backward
  6057 ;;		_Robot_Steer_Left_Backward
  6058 ;;		_main
  6059 ;;		_application_intialize
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text32
  6064  0034E2                     __ptext32:
  6065                           	callstack 0
  6066  0034E2                     _Servo_SetAngle:
  6067                           	callstack 19
  6068  0034E2                     
  6069                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 46:     if (((void*)0)==i2c_obj)
  6070  0034E2  0101               	movlb	1	; () banked
  6071  0034E4  515B               	movf	Servo_SetAngle@i2c_obj& (0+255),w,b
  6072  0034E6  115C               	iorwf	(Servo_SetAngle@i2c_obj+1)& (0+255),w,b
  6073  0034E8  A4D8               	btfss	status,2,c
  6074  0034EA  EF79  F01A         	goto	u11731
  6075  0034EE  EF7B  F01A         	goto	u11730
  6076  0034F2                     u11731:
  6077  0034F2  EF7D  F01A         	goto	l10876
  6078  0034F6                     u11730:
  6079  0034F6                     
  6080                           ; BSR set to: 1
  6081                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 49:     }
  6082  0034F6  EFE4  F01A         	goto	l310
  6083  0034FA                     l10876:
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 51:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 52:         uint8 reg_addrees=6+(servo_no*4)+2;
  6087  0034FA  515F               	movf	Servo_SetAngle@servo_no& (0+255),w,b
  6088  0034FC  0D04               	mullw	4
  6089  0034FE  50F3               	movf	243,w,c
  6090  003500  0F08               	addlw	8
  6091  003502  6F63               	movwf	Servo_SetAngle@reg_addrees& (0+255),b
  6092  003504                     
  6093                           ; BSR set to: 1
  6094                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 54:          uint16 angle_in_reg=
      +                          (uint16)(angle*1.138+204);
  6095  003504  0E00               	movlw	0
  6096  003506  0100               	movlb	0	; () banked
  6097  003508  6FA0               	movwf	___fladd@a& (0+255),b
  6098  00350A  0E00               	movlw	0
  6099  00350C  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  6100  00350E  0E4C               	movlw	76
  6101  003510  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  6102  003512  0E43               	movlw	67
  6103  003514  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  6104  003516  0EFC               	movlw	252
  6105  003518  6F87               	movwf	___flmul@a& (0+255),b
  6106  00351A  0EA9               	movlw	169
  6107  00351C  6F88               	movwf	(___flmul@a+1)& (0+255),b
  6108  00351E  0E91               	movlw	145
  6109  003520  6F89               	movwf	(___flmul@a+2)& (0+255),b
  6110  003522  0E3F               	movlw	63
  6111  003524  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  6112  003526  0101               	movlb	1	; () banked
  6113  003528  5160               	movf	Servo_SetAngle@angle& (0+255),w,b
  6114  00352A  6E1E               	movwf	___xxtofl@val^0,c
  6115  00352C  6A1F               	clrf	(___xxtofl@val+1)^0,c
  6116  00352E  6A20               	clrf	(___xxtofl@val+2)^0,c
  6117  003530  6A21               	clrf	(___xxtofl@val+3)^0,c
  6118  003532  0E01               	movlw	1
  6119  003534  EC48  F012         	call	___xxtofl
  6120  003538  C01E  F083         	movff	?___xxtofl,___flmul@b
  6121  00353C  C01F  F084         	movff	?___xxtofl+1,___flmul@b+1
  6122  003540  C020  F085         	movff	?___xxtofl+2,___flmul@b+2
  6123  003544  C021  F086         	movff	?___xxtofl+3,___flmul@b+3
  6124  003548  ECD3  F00A         	call	___flmul	;wreg free
  6125  00354C  C083  F09C         	movff	?___flmul,___fladd@b
  6126  003550  C084  F09D         	movff	?___flmul+1,___fladd@b+1
  6127  003554  C085  F09E         	movff	?___flmul+2,___fladd@b+2
  6128  003558  C086  F09F         	movff	?___flmul+3,___fladd@b+3
  6129  00355C  EC24  F008         	call	___fladd	;wreg free
  6130  003560  C09C  F153         	movff	?___fladd,___fltol@f1
  6131  003564  C09D  F154         	movff	?___fladd+1,___fltol@f1+1
  6132  003568  C09E  F155         	movff	?___fladd+2,___fltol@f1+2
  6133  00356C  C09F  F156         	movff	?___fladd+3,___fltol@f1+3
  6134  003570  ECEF  F018         	call	___fltol	;wreg free
  6135  003574  C153  F161         	movff	?___fltol,Servo_SetAngle@angle_in_reg
  6136  003578  C154  F162         	movff	?___fltol+1,Servo_SetAngle@angle_in_reg+1
  6137  00357C                     
  6138                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 61:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)angle_in_reg));
  6139  00357C  C15B  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  6140  003580  C15C  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  6141  003584  C15D  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  6142  003588  C15E  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  6143  00358C  50DF               	movf	indf2,w,c
  6144  00358E  0100               	movlb	0	; () banked
  6145  003590  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  6146  003592  C163  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  6147  003596  C161  F064         	movff	Servo_SetAngle@angle_in_reg,PCA_Write_Reg@data
  6148  00359A  ECE5  F023         	call	_PCA_Write_Reg	;wreg free
  6149  00359E                     
  6150                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 62:         reg_addrees++;
  6151  00359E  0101               	movlb	1	; () banked
  6152  0035A0  2B63               	incf	Servo_SetAngle@reg_addrees& (0+255),f,b
  6153  0035A2                     
  6154                           ; BSR set to: 1
  6155                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 63:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)(angle_in_reg>>8)));
  6156  0035A2  C15B  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  6157  0035A6  C15C  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  6158  0035AA  C15D  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  6159  0035AE  C15E  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  6160  0035B2  50DF               	movf	indf2,w,c
  6161  0035B4  0100               	movlb	0	; () banked
  6162  0035B6  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  6163  0035B8  C163  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  6164  0035BC  0101               	movlb	1	; () banked
  6165  0035BE  5162               	movf	(Servo_SetAngle@angle_in_reg+1)& (0+255),w,b
  6166  0035C0  0100               	movlb	0	; () banked
  6167  0035C2  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  6168  0035C4  ECE5  F023         	call	_PCA_Write_Reg	;wreg free
  6169  0035C8                     l310:
  6170  0035C8  0012               	return		;funcret
  6171  0035CA                     __end_of_Servo_SetAngle:
  6172                           	callstack 0
  6173                           
  6174 ;; *************** function ___fladd *****************
  6175 ;; Defined at:
  6176 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  b               4   60[BANK0 ] unsigned char 
  6179 ;;  a               4   64[BANK0 ] unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  grs             1    7[BANK1 ] unsigned char 
  6182 ;;  bexp            1    6[BANK1 ] unsigned char 
  6183 ;;  aexp            1    5[BANK1 ] unsigned char 
  6184 ;;  signs           1    4[BANK1 ] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  4   60[BANK0 ] unsigned char 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6194 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;      Totals:         0       8       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;Total ram usage:       16 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 8
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_Servo_SetAngle
  6205 ;;		_I2C_Master_Mode_Clock_Configurations
  6206 ;;		_async_config_baud_rate_gen
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text33
  6211  001048                     __ptext33:
  6212                           	callstack 0
  6213  001048                     ___fladd:
  6214                           	callstack 20
  6215  001048  0100               	movlb	0	; () banked
  6216  00104A  519F               	movf	(___fladd@b+3)& (0+255),w,b
  6217  00104C  0B80               	andlw	128
  6218  00104E  0101               	movlb	1	; () banked
  6219  001050  6F4F               	movwf	___fladd@signs& (0+255),b
  6220  001052  0100               	movlb	0	; () banked
  6221  001054  519F               	movf	(___fladd@b+3)& (0+255),w,b
  6222  001056  259F               	addwf	(___fladd@b+3)& (0+255),w,b
  6223  001058  0101               	movlb	1	; () banked
  6224  00105A  6F51               	movwf	___fladd@bexp& (0+255),b
  6225  00105C                     
  6226                           ; BSR set to: 1
  6227  00105C  0100               	movlb	0	; () banked
  6228  00105E  AF9E               	btfss	(___fladd@b+2)& (0+255),7,b
  6229  001060  EF34  F008         	goto	u9761
  6230  001064  EF36  F008         	goto	u9760
  6231  001068                     u9761:
  6232  001068  EF38  F008         	goto	l9684
  6233  00106C                     u9760:
  6234  00106C                     
  6235                           ; BSR set to: 0
  6236  00106C  0101               	movlb	1	; () banked
  6237  00106E  8151               	bsf	___fladd@bexp& (0+255),0,b
  6238  001070                     l9684:
  6239  001070  0101               	movlb	1	; () banked
  6240  001072  5151               	movf	___fladd@bexp& (0+255),w,b
  6241  001074  B4D8               	btfsc	status,2,c
  6242  001076  EF3F  F008         	goto	u9771
  6243  00107A  EF41  F008         	goto	u9770
  6244  00107E                     u9771:
  6245  00107E  EF58  F008         	goto	l9694
  6246  001082                     u9770:
  6247  001082                     
  6248                           ; BSR set to: 1
  6249  001082  2951               	incf	___fladd@bexp& (0+255),w,b
  6250  001084  A4D8               	btfss	status,2,c
  6251  001086  EF47  F008         	goto	u9781
  6252  00108A  EF49  F008         	goto	u9780
  6253  00108E                     u9781:
  6254  00108E  EF52  F008         	goto	l9690
  6255  001092                     u9780:
  6256  001092                     
  6257                           ; BSR set to: 1
  6258  001092  0E00               	movlw	0
  6259  001094  0100               	movlb	0	; () banked
  6260  001096  6F9C               	movwf	___fladd@b& (0+255),b
  6261  001098  0E00               	movlw	0
  6262  00109A  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6263  00109C  0E00               	movlw	0
  6264  00109E  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6265  0010A0  0E00               	movlw	0
  6266  0010A2  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6267  0010A4                     l9690:
  6268  0010A4  0100               	movlb	0	; () banked
  6269  0010A6  8F9E               	bsf	(___fladd@b+2)& (0+255),7,b
  6270  0010A8                     
  6271                           ; BSR set to: 0
  6272  0010A8  0E00               	movlw	0
  6273  0010AA  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6274  0010AC  EF61  F008         	goto	l9696
  6275  0010B0                     l9694:
  6276                           
  6277                           ; BSR set to: 1
  6278  0010B0  0E00               	movlw	0
  6279  0010B2  0100               	movlb	0	; () banked
  6280  0010B4  6F9C               	movwf	___fladd@b& (0+255),b
  6281  0010B6  0E00               	movlw	0
  6282  0010B8  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6283  0010BA  0E00               	movlw	0
  6284  0010BC  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6285  0010BE  0E00               	movlw	0
  6286  0010C0  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6287  0010C2                     l9696:
  6288                           
  6289                           ; BSR set to: 0
  6290  0010C2  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6291  0010C4  0B80               	andlw	128
  6292  0010C6  0101               	movlb	1	; () banked
  6293  0010C8  6F50               	movwf	___fladd@aexp& (0+255),b
  6294  0010CA                     
  6295                           ; BSR set to: 1
  6296  0010CA  514F               	movf	___fladd@signs& (0+255),w,b
  6297  0010CC  1950               	xorwf	___fladd@aexp& (0+255),w,b
  6298  0010CE  B4D8               	btfsc	status,2,c
  6299  0010D0  EF6C  F008         	goto	u9791
  6300  0010D4  EF6E  F008         	goto	u9790
  6301  0010D8                     u9791:
  6302  0010D8  EF6F  F008         	goto	l9702
  6303  0010DC                     u9790:
  6304  0010DC                     
  6305                           ; BSR set to: 1
  6306  0010DC  8D4F               	bsf	___fladd@signs& (0+255),6,b
  6307  0010DE                     l9702:
  6308                           
  6309                           ; BSR set to: 1
  6310  0010DE  0100               	movlb	0	; () banked
  6311  0010E0  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6312  0010E2  25A3               	addwf	(___fladd@a+3)& (0+255),w,b
  6313  0010E4  0101               	movlb	1	; () banked
  6314  0010E6  6F50               	movwf	___fladd@aexp& (0+255),b
  6315  0010E8                     
  6316                           ; BSR set to: 1
  6317  0010E8  0100               	movlb	0	; () banked
  6318  0010EA  AFA2               	btfss	(___fladd@a+2)& (0+255),7,b
  6319  0010EC  EF7A  F008         	goto	u9801
  6320  0010F0  EF7C  F008         	goto	u9800
  6321  0010F4                     u9801:
  6322  0010F4  EF7E  F008         	goto	l9708
  6323  0010F8                     u9800:
  6324  0010F8                     
  6325                           ; BSR set to: 0
  6326  0010F8  0101               	movlb	1	; () banked
  6327  0010FA  8150               	bsf	___fladd@aexp& (0+255),0,b
  6328  0010FC                     l9708:
  6329  0010FC  0101               	movlb	1	; () banked
  6330  0010FE  5150               	movf	___fladd@aexp& (0+255),w,b
  6331  001100  B4D8               	btfsc	status,2,c
  6332  001102  EF85  F008         	goto	u9811
  6333  001106  EF87  F008         	goto	u9810
  6334  00110A                     u9811:
  6335  00110A  EF9E  F008         	goto	l9718
  6336  00110E                     u9810:
  6337  00110E                     
  6338                           ; BSR set to: 1
  6339  00110E  2950               	incf	___fladd@aexp& (0+255),w,b
  6340  001110  A4D8               	btfss	status,2,c
  6341  001112  EF8D  F008         	goto	u9821
  6342  001116  EF8F  F008         	goto	u9820
  6343  00111A                     u9821:
  6344  00111A  EF98  F008         	goto	l9714
  6345  00111E                     u9820:
  6346  00111E                     
  6347                           ; BSR set to: 1
  6348  00111E  0E00               	movlw	0
  6349  001120  0100               	movlb	0	; () banked
  6350  001122  6FA0               	movwf	___fladd@a& (0+255),b
  6351  001124  0E00               	movlw	0
  6352  001126  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  6353  001128  0E00               	movlw	0
  6354  00112A  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  6355  00112C  0E00               	movlw	0
  6356  00112E  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  6357  001130                     l9714:
  6358  001130  0100               	movlb	0	; () banked
  6359  001132  8FA2               	bsf	(___fladd@a+2)& (0+255),7,b
  6360  001134                     
  6361                           ; BSR set to: 0
  6362  001134  0E00               	movlw	0
  6363  001136  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  6364  001138  EFA7  F008         	goto	l9720
  6365  00113C                     l9718:
  6366                           
  6367                           ; BSR set to: 1
  6368  00113C  0E00               	movlw	0
  6369  00113E  0100               	movlb	0	; () banked
  6370  001140  6FA0               	movwf	___fladd@a& (0+255),b
  6371  001142  0E00               	movlw	0
  6372  001144  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  6373  001146  0E00               	movlw	0
  6374  001148  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  6375  00114A  0E00               	movlw	0
  6376  00114C  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  6377  00114E                     l9720:
  6378                           
  6379                           ; BSR set to: 0
  6380  00114E  0101               	movlb	1	; () banked
  6381  001150  5151               	movf	___fladd@bexp& (0+255),w,b
  6382  001152  5D50               	subwf	___fladd@aexp& (0+255),w,b
  6383  001154  B0D8               	btfsc	status,0,c
  6384  001156  EFAF  F008         	goto	u9831
  6385  00115A  EFB1  F008         	goto	u9830
  6386  00115E                     u9831:
  6387  00115E  EFD8  F008         	goto	l9756
  6388  001162                     u9830:
  6389  001162                     
  6390                           ; BSR set to: 1
  6391  001162  AD4F               	btfss	___fladd@signs& (0+255),6,b
  6392  001164  EFB6  F008         	goto	u9841
  6393  001168  EFB8  F008         	goto	u9840
  6394  00116C                     u9841:
  6395  00116C  EFBA  F008         	goto	l9726
  6396  001170                     u9840:
  6397  001170                     
  6398                           ; BSR set to: 1
  6399  001170  0E80               	movlw	128
  6400  001172  1B4F               	xorwf	___fladd@signs& (0+255),f,b
  6401  001174                     l9726:
  6402                           
  6403                           ; BSR set to: 1
  6404  001174  C151  F152         	movff	___fladd@bexp,___fladd@grs
  6405  001178                     
  6406                           ; BSR set to: 1
  6407  001178  C150  F151         	movff	___fladd@aexp,___fladd@bexp
  6408  00117C                     
  6409                           ; BSR set to: 1
  6410  00117C  C152  F150         	movff	___fladd@grs,___fladd@aexp
  6411  001180                     
  6412                           ; BSR set to: 1
  6413  001180  C09C  F152         	movff	___fladd@b,___fladd@grs
  6414  001184                     
  6415                           ; BSR set to: 1
  6416  001184  C0A0  F09C         	movff	___fladd@a,___fladd@b
  6417  001188                     
  6418                           ; BSR set to: 1
  6419  001188  C152  F0A0         	movff	___fladd@grs,___fladd@a
  6420  00118C                     
  6421                           ; BSR set to: 1
  6422  00118C  C09D  F152         	movff	___fladd@b+1,___fladd@grs
  6423  001190                     
  6424                           ; BSR set to: 1
  6425  001190  C0A1  F09D         	movff	___fladd@a+1,___fladd@b+1
  6426  001194                     
  6427                           ; BSR set to: 1
  6428  001194  C152  F0A1         	movff	___fladd@grs,___fladd@a+1
  6429  001198                     
  6430                           ; BSR set to: 1
  6431  001198  C09E  F152         	movff	___fladd@b+2,___fladd@grs
  6432  00119C                     
  6433                           ; BSR set to: 1
  6434  00119C  C0A2  F09E         	movff	___fladd@a+2,___fladd@b+2
  6435  0011A0                     
  6436                           ; BSR set to: 1
  6437  0011A0  C152  F0A2         	movff	___fladd@grs,___fladd@a+2
  6438  0011A4                     
  6439                           ; BSR set to: 1
  6440  0011A4  C09F  F152         	movff	___fladd@b+3,___fladd@grs
  6441  0011A8                     
  6442                           ; BSR set to: 1
  6443  0011A8  C0A3  F09F         	movff	___fladd@a+3,___fladd@b+3
  6444  0011AC                     
  6445                           ; BSR set to: 1
  6446  0011AC  C152  F0A3         	movff	___fladd@grs,___fladd@a+3
  6447  0011B0                     l9756:
  6448                           
  6449                           ; BSR set to: 1
  6450  0011B0  0E00               	movlw	0
  6451  0011B2  6F52               	movwf	___fladd@grs& (0+255),b
  6452  0011B4                     
  6453                           ; BSR set to: 1
  6454  0011B4  5151               	movf	___fladd@bexp& (0+255),w,b
  6455  0011B6  C150  F14B         	movff	___fladd@aexp,??___fladd
  6456  0011BA  6B4C               	clrf	(??___fladd+1)& (0+255),b
  6457  0011BC  5F4B               	subwf	??___fladd& (0+255),f,b
  6458  0011BE  0E00               	movlw	0
  6459  0011C0  5B4C               	subwfb	(??___fladd+1)& (0+255),f,b
  6460  0011C2  BF4C               	btfsc	(??___fladd+1)& (0+255),7,b
  6461  0011C4  EFED  F008         	goto	u9851
  6462  0011C8  514C               	movf	(??___fladd+1)& (0+255),w,b
  6463  0011CA  E109               	bnz	u9850
  6464  0011CC  0E1A               	movlw	26
  6465  0011CE  5D4B               	subwf	??___fladd& (0+255),w,b
  6466  0011D0  A0D8               	btfss	status,0,c
  6467  0011D2  EFED  F008         	goto	u9851
  6468  0011D6  EFEF  F008         	goto	u9850
  6469  0011DA                     u9851:
  6470  0011DA  EF2D  F009         	goto	l2519
  6471  0011DE                     u9850:
  6472  0011DE                     
  6473                           ; BSR set to: 1
  6474  0011DE  0100               	movlb	0	; () banked
  6475  0011E0  519C               	movf	___fladd@b& (0+255),w,b
  6476  0011E2  119D               	iorwf	(___fladd@b+1)& (0+255),w,b
  6477  0011E4  119E               	iorwf	(___fladd@b+2)& (0+255),w,b
  6478  0011E6  119F               	iorwf	(___fladd@b+3)& (0+255),w,b
  6479  0011E8  A4D8               	btfss	status,2,c
  6480  0011EA  EFF9  F008         	goto	u9861
  6481  0011EE  EFFC  F008         	goto	u9860
  6482  0011F2                     u9861:
  6483  0011F2  0E01               	movlw	1
  6484  0011F4  EFFD  F008         	goto	u9870
  6485  0011F8                     u9860:
  6486  0011F8  0E00               	movlw	0
  6487  0011FA                     u9870:
  6488  0011FA  0101               	movlb	1	; () banked
  6489  0011FC  6F52               	movwf	___fladd@grs& (0+255),b
  6490  0011FE                     
  6491                           ; BSR set to: 1
  6492  0011FE  0E00               	movlw	0
  6493  001200  0100               	movlb	0	; () banked
  6494  001202  6F9C               	movwf	___fladd@b& (0+255),b
  6495  001204  0E00               	movlw	0
  6496  001206  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6497  001208  0E00               	movlw	0
  6498  00120A  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6499  00120C  0E00               	movlw	0
  6500  00120E  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6501  001210                     
  6502                           ; BSR set to: 0
  6503  001210  C150  F151         	movff	___fladd@aexp,___fladd@bexp
  6504  001214  EF36  F009         	goto	l2518
  6505  001218                     l2520:
  6506                           
  6507                           ; BSR set to: 1
  6508  001218  A152               	btfss	___fladd@grs& (0+255),0,b
  6509  00121A  EF11  F009         	goto	u9881
  6510  00121E  EF13  F009         	goto	u9880
  6511  001222                     u9881:
  6512  001222  EF19  F009         	goto	l9768
  6513  001226                     u9880:
  6514  001226                     
  6515                           ; BSR set to: 1
  6516  001226  90D8               	bcf	status,0,c
  6517  001228  3152               	rrcf	___fladd@grs& (0+255),w,b
  6518  00122A  0901               	iorlw	1
  6519  00122C  6F52               	movwf	___fladd@grs& (0+255),b
  6520  00122E  EF1B  F009         	goto	l9770
  6521  001232                     l9768:
  6522                           
  6523                           ; BSR set to: 1
  6524  001232  90D8               	bcf	status,0,c
  6525  001234  3352               	rrcf	___fladd@grs& (0+255),f,b
  6526  001236                     l9770:
  6527                           
  6528                           ; BSR set to: 1
  6529  001236  0100               	movlb	0	; () banked
  6530  001238  A19C               	btfss	___fladd@b& (0+255),0,b
  6531  00123A  EF21  F009         	goto	u9891
  6532  00123E  EF23  F009         	goto	u9890
  6533  001242                     u9891:
  6534  001242  EF25  F009         	goto	l9774
  6535  001246                     u9890:
  6536  001246                     
  6537                           ; BSR set to: 0
  6538  001246  0101               	movlb	1	; () banked
  6539  001248  8F52               	bsf	___fladd@grs& (0+255),7,b
  6540  00124A                     l9774:
  6541  00124A  0100               	movlb	0	; () banked
  6542  00124C  359F               	rlcf	(___fladd@b+3)& (0+255),w,b
  6543  00124E  339F               	rrcf	(___fladd@b+3)& (0+255),f,b
  6544  001250  339E               	rrcf	(___fladd@b+2)& (0+255),f,b
  6545  001252  339D               	rrcf	(___fladd@b+1)& (0+255),f,b
  6546  001254  339C               	rrcf	___fladd@b& (0+255),f,b
  6547  001256                     
  6548                           ; BSR set to: 0
  6549  001256  0101               	movlb	1	; () banked
  6550  001258  2B51               	incf	___fladd@bexp& (0+255),f,b
  6551  00125A                     l2519:
  6552                           
  6553                           ; BSR set to: 1
  6554  00125A  5150               	movf	___fladd@aexp& (0+255),w,b
  6555  00125C  5D51               	subwf	___fladd@bexp& (0+255),w,b
  6556  00125E  A0D8               	btfss	status,0,c
  6557  001260  EF34  F009         	goto	u9901
  6558  001264  EF36  F009         	goto	u9900
  6559  001268                     u9901:
  6560  001268  EF0C  F009         	goto	l2520
  6561  00126C                     u9900:
  6562  00126C                     l2518:
  6563  00126C  0101               	movlb	1	; () banked
  6564  00126E  BD4F               	btfsc	___fladd@signs& (0+255),6,b
  6565  001270  EF3C  F009         	goto	u9911
  6566  001274  EF3E  F009         	goto	u9910
  6567  001278                     u9911:
  6568  001278  EF85  F009         	goto	l9802
  6569  00127C                     u9910:
  6570  00127C                     
  6571                           ; BSR set to: 1
  6572  00127C  5151               	movf	___fladd@bexp& (0+255),w,b
  6573  00127E  A4D8               	btfss	status,2,c
  6574  001280  EF44  F009         	goto	u9921
  6575  001284  EF46  F009         	goto	u9920
  6576  001288                     u9921:
  6577  001288  EF51  F009         	goto	l9784
  6578  00128C                     u9920:
  6579  00128C                     
  6580                           ; BSR set to: 1
  6581  00128C  0E00               	movlw	0
  6582  00128E  0100               	movlb	0	; () banked
  6583  001290  6F9C               	movwf	?___fladd& (0+255),b
  6584  001292  0E00               	movlw	0
  6585  001294  6F9D               	movwf	(?___fladd+1)& (0+255),b
  6586  001296  0E00               	movlw	0
  6587  001298  6F9E               	movwf	(?___fladd+2)& (0+255),b
  6588  00129A  0E00               	movlw	0
  6589  00129C  6F9F               	movwf	(?___fladd+3)& (0+255),b
  6590  00129E  EFD2  F00A         	goto	l2527
  6591  0012A2                     l9784:
  6592                           
  6593                           ; BSR set to: 1
  6594  0012A2  0100               	movlb	0	; () banked
  6595  0012A4  51A0               	movf	___fladd@a& (0+255),w,b
  6596  0012A6  279C               	addwf	___fladd@b& (0+255),f,b
  6597  0012A8  51A1               	movf	(___fladd@a+1)& (0+255),w,b
  6598  0012AA  239D               	addwfc	(___fladd@b+1)& (0+255),f,b
  6599  0012AC  51A2               	movf	(___fladd@a+2)& (0+255),w,b
  6600  0012AE  239E               	addwfc	(___fladd@b+2)& (0+255),f,b
  6601  0012B0  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6602  0012B2  239F               	addwfc	(___fladd@b+3)& (0+255),f,b
  6603  0012B4                     
  6604                           ; BSR set to: 0
  6605  0012B4  A19F               	btfss	(___fladd@b+3)& (0+255),0,b
  6606  0012B6  EF5F  F009         	goto	u9931
  6607  0012BA  EF61  F009         	goto	u9930
  6608  0012BE                     u9931:
  6609  0012BE  EF2F  F00A         	goto	l9838
  6610  0012C2                     u9930:
  6611  0012C2                     
  6612                           ; BSR set to: 0
  6613  0012C2  0101               	movlb	1	; () banked
  6614  0012C4  A152               	btfss	___fladd@grs& (0+255),0,b
  6615  0012C6  EF67  F009         	goto	u9941
  6616  0012CA  EF69  F009         	goto	u9940
  6617  0012CE                     u9941:
  6618  0012CE  EF6F  F009         	goto	l9792
  6619  0012D2                     u9940:
  6620  0012D2                     
  6621                           ; BSR set to: 1
  6622  0012D2  90D8               	bcf	status,0,c
  6623  0012D4  3152               	rrcf	___fladd@grs& (0+255),w,b
  6624  0012D6  0901               	iorlw	1
  6625  0012D8  6F52               	movwf	___fladd@grs& (0+255),b
  6626  0012DA  EF71  F009         	goto	l9794
  6627  0012DE                     l9792:
  6628                           
  6629                           ; BSR set to: 1
  6630  0012DE  90D8               	bcf	status,0,c
  6631  0012E0  3352               	rrcf	___fladd@grs& (0+255),f,b
  6632  0012E2                     l9794:
  6633                           
  6634                           ; BSR set to: 1
  6635  0012E2  0100               	movlb	0	; () banked
  6636  0012E4  A19C               	btfss	___fladd@b& (0+255),0,b
  6637  0012E6  EF77  F009         	goto	u9951
  6638  0012EA  EF79  F009         	goto	u9950
  6639  0012EE                     u9951:
  6640  0012EE  EF7B  F009         	goto	l9798
  6641  0012F2                     u9950:
  6642  0012F2                     
  6643                           ; BSR set to: 0
  6644  0012F2  0101               	movlb	1	; () banked
  6645  0012F4  8F52               	bsf	___fladd@grs& (0+255),7,b
  6646  0012F6                     l9798:
  6647  0012F6  0100               	movlb	0	; () banked
  6648  0012F8  359F               	rlcf	(___fladd@b+3)& (0+255),w,b
  6649  0012FA  339F               	rrcf	(___fladd@b+3)& (0+255),f,b
  6650  0012FC  339E               	rrcf	(___fladd@b+2)& (0+255),f,b
  6651  0012FE  339D               	rrcf	(___fladd@b+1)& (0+255),f,b
  6652  001300  339C               	rrcf	___fladd@b& (0+255),f,b
  6653  001302                     
  6654                           ; BSR set to: 0
  6655  001302  0101               	movlb	1	; () banked
  6656  001304  2B51               	incf	___fladd@bexp& (0+255),f,b
  6657  001306  EF2F  F00A         	goto	l9838
  6658  00130A                     l9802:
  6659                           
  6660                           ; BSR set to: 1
  6661  00130A  0100               	movlb	0	; () banked
  6662  00130C  51A0               	movf	___fladd@a& (0+255),w,b
  6663  00130E  5D9C               	subwf	___fladd@b& (0+255),w,b
  6664  001310  51A1               	movf	(___fladd@a+1)& (0+255),w,b
  6665  001312  599D               	subwfb	(___fladd@b+1)& (0+255),w,b
  6666  001314  51A2               	movf	(___fladd@a+2)& (0+255),w,b
  6667  001316  599E               	subwfb	(___fladd@b+2)& (0+255),w,b
  6668  001318  519F               	movf	(___fladd@b+3)& (0+255),w,b
  6669  00131A  0A80               	xorlw	128
  6670  00131C  0101               	movlb	1	; () banked
  6671  00131E  6F4B               	movwf	??___fladd& (0+255),b
  6672  001320  0100               	movlb	0	; () banked
  6673  001322  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6674  001324  0A80               	xorlw	128
  6675  001326  0101               	movlb	1	; () banked
  6676  001328  594B               	subwfb	??___fladd& (0+255),w,b
  6677  00132A  B0D8               	btfsc	status,0,c
  6678  00132C  EF9A  F009         	goto	u9961
  6679  001330  EF9C  F009         	goto	u9960
  6680  001334                     u9961:
  6681  001334  EFD8  F009         	goto	l9812
  6682  001338                     u9960:
  6683  001338                     
  6684                           ; BSR set to: 1
  6685  001338  0100               	movlb	0	; () banked
  6686  00133A  519C               	movf	___fladd@b& (0+255),w,b
  6687  00133C  5DA0               	subwf	___fladd@a& (0+255),w,b
  6688  00133E  0101               	movlb	1	; () banked
  6689  001340  6F4B               	movwf	??___fladd& (0+255),b
  6690  001342  0100               	movlb	0	; () banked
  6691  001344  519D               	movf	(___fladd@b+1)& (0+255),w,b
  6692  001346  59A1               	subwfb	(___fladd@a+1)& (0+255),w,b
  6693  001348  0101               	movlb	1	; () banked
  6694  00134A  6F4C               	movwf	(??___fladd+1)& (0+255),b
  6695  00134C  0100               	movlb	0	; () banked
  6696  00134E  519E               	movf	(___fladd@b+2)& (0+255),w,b
  6697  001350  59A2               	subwfb	(___fladd@a+2)& (0+255),w,b
  6698  001352  0101               	movlb	1	; () banked
  6699  001354  6F4D               	movwf	(??___fladd+2)& (0+255),b
  6700  001356  0100               	movlb	0	; () banked
  6701  001358  519F               	movf	(___fladd@b+3)& (0+255),w,b
  6702  00135A  59A3               	subwfb	(___fladd@a+3)& (0+255),w,b
  6703  00135C  0101               	movlb	1	; () banked
  6704  00135E  6F4E               	movwf	(??___fladd+3)& (0+255),b
  6705  001360  0EFF               	movlw	255
  6706  001362  254B               	addwf	??___fladd& (0+255),w,b
  6707  001364  0100               	movlb	0	; () banked
  6708  001366  6F9C               	movwf	___fladd@b& (0+255),b
  6709  001368  0EFF               	movlw	255
  6710  00136A  0101               	movlb	1	; () banked
  6711  00136C  214C               	addwfc	(??___fladd+1)& (0+255),w,b
  6712  00136E  0100               	movlb	0	; () banked
  6713  001370  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6714  001372  0EFF               	movlw	255
  6715  001374  0101               	movlb	1	; () banked
  6716  001376  214D               	addwfc	(??___fladd+2)& (0+255),w,b
  6717  001378  0100               	movlb	0	; () banked
  6718  00137A  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6719  00137C  0EFF               	movlw	255
  6720  00137E  0101               	movlb	1	; () banked
  6721  001380  214E               	addwfc	(??___fladd+3)& (0+255),w,b
  6722  001382  0100               	movlb	0	; () banked
  6723  001384  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6724  001386  0E80               	movlw	128
  6725  001388  0101               	movlb	1	; () banked
  6726  00138A  1B4F               	xorwf	___fladd@signs& (0+255),f,b
  6727  00138C                     
  6728                           ; BSR set to: 1
  6729  00138C  6D52               	negf	___fladd@grs& (0+255),b
  6730  00138E                     
  6731                           ; BSR set to: 1
  6732  00138E  5152               	movf	___fladd@grs& (0+255),w,b
  6733  001390  A4D8               	btfss	status,2,c
  6734  001392  EFCD  F009         	goto	u9971
  6735  001396  EFCF  F009         	goto	u9970
  6736  00139A                     u9971:
  6737  00139A  EFE1  F009         	goto	l2535
  6738  00139E                     u9970:
  6739  00139E                     
  6740                           ; BSR set to: 1
  6741  00139E  0E01               	movlw	1
  6742  0013A0  0100               	movlb	0	; () banked
  6743  0013A2  279C               	addwf	___fladd@b& (0+255),f,b
  6744  0013A4  0E00               	movlw	0
  6745  0013A6  239D               	addwfc	(___fladd@b+1)& (0+255),f,b
  6746  0013A8  239E               	addwfc	(___fladd@b+2)& (0+255),f,b
  6747  0013AA  239F               	addwfc	(___fladd@b+3)& (0+255),f,b
  6748  0013AC  EFE1  F009         	goto	l2535
  6749  0013B0                     l9812:
  6750                           
  6751                           ; BSR set to: 1
  6752  0013B0  0100               	movlb	0	; () banked
  6753  0013B2  51A0               	movf	___fladd@a& (0+255),w,b
  6754  0013B4  5F9C               	subwf	___fladd@b& (0+255),f,b
  6755  0013B6  51A1               	movf	(___fladd@a+1)& (0+255),w,b
  6756  0013B8  5B9D               	subwfb	(___fladd@b+1)& (0+255),f,b
  6757  0013BA  51A2               	movf	(___fladd@a+2)& (0+255),w,b
  6758  0013BC  5B9E               	subwfb	(___fladd@b+2)& (0+255),f,b
  6759  0013BE  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6760  0013C0  5B9F               	subwfb	(___fladd@b+3)& (0+255),f,b
  6761  0013C2                     l2535:
  6762  0013C2  0100               	movlb	0	; () banked
  6763  0013C4  519C               	movf	___fladd@b& (0+255),w,b
  6764  0013C6  119D               	iorwf	(___fladd@b+1)& (0+255),w,b
  6765  0013C8  119E               	iorwf	(___fladd@b+2)& (0+255),w,b
  6766  0013CA  119F               	iorwf	(___fladd@b+3)& (0+255),w,b
  6767  0013CC  A4D8               	btfss	status,2,c
  6768  0013CE  EFEB  F009         	goto	u9981
  6769  0013D2  EFED  F009         	goto	u9980
  6770  0013D6                     u9981:
  6771  0013D6  EF27  F00A         	goto	l9836
  6772  0013DA                     u9980:
  6773  0013DA                     
  6774                           ; BSR set to: 0
  6775  0013DA  0101               	movlb	1	; () banked
  6776  0013DC  5152               	movf	___fladd@grs& (0+255),w,b
  6777  0013DE  A4D8               	btfss	status,2,c
  6778  0013E0  EFF4  F009         	goto	u9991
  6779  0013E4  EFF6  F009         	goto	u9990
  6780  0013E8                     u9991:
  6781  0013E8  EF27  F00A         	goto	l9836
  6782  0013EC                     u9990:
  6783  0013EC                     
  6784                           ; BSR set to: 1
  6785  0013EC  0E00               	movlw	0
  6786  0013EE  0100               	movlb	0	; () banked
  6787  0013F0  6F9C               	movwf	?___fladd& (0+255),b
  6788  0013F2  0E00               	movlw	0
  6789  0013F4  6F9D               	movwf	(?___fladd+1)& (0+255),b
  6790  0013F6  0E00               	movlw	0
  6791  0013F8  6F9E               	movwf	(?___fladd+2)& (0+255),b
  6792  0013FA  0E00               	movlw	0
  6793  0013FC  6F9F               	movwf	(?___fladd+3)& (0+255),b
  6794  0013FE  EFD2  F00A         	goto	l2527
  6795  001402                     l9820:
  6796                           
  6797                           ; BSR set to: 0
  6798  001402  90D8               	bcf	status,0,c
  6799  001404  379C               	rlcf	___fladd@b& (0+255),f,b
  6800  001406  379D               	rlcf	(___fladd@b+1)& (0+255),f,b
  6801  001408  379E               	rlcf	(___fladd@b+2)& (0+255),f,b
  6802  00140A  379F               	rlcf	(___fladd@b+3)& (0+255),f,b
  6803  00140C                     
  6804                           ; BSR set to: 0
  6805  00140C  0101               	movlb	1	; () banked
  6806  00140E  AF52               	btfss	___fladd@grs& (0+255),7,b
  6807  001410  EF0C  F00A         	goto	u10001
  6808  001414  EF0E  F00A         	goto	u10000
  6809  001418                     u10001:
  6810  001418  EF10  F00A         	goto	l9826
  6811  00141C                     u10000:
  6812  00141C                     
  6813                           ; BSR set to: 1
  6814  00141C  0100               	movlb	0	; () banked
  6815  00141E  819C               	bsf	___fladd@b& (0+255),0,b
  6816  001420                     l9826:
  6817  001420  0101               	movlb	1	; () banked
  6818  001422  A152               	btfss	___fladd@grs& (0+255),0,b
  6819  001424  EF16  F00A         	goto	u10011
  6820  001428  EF18  F00A         	goto	u10010
  6821  00142C                     u10011:
  6822  00142C  EF1C  F00A         	goto	l9830
  6823  001430                     u10010:
  6824  001430                     
  6825                           ; BSR set to: 1
  6826  001430  80D8               	bsf	status,0,c
  6827  001432  3752               	rlcf	___fladd@grs& (0+255),f,b
  6828  001434  EF1E  F00A         	goto	l9832
  6829  001438                     l9830:
  6830                           
  6831                           ; BSR set to: 1
  6832  001438  90D8               	bcf	status,0,c
  6833  00143A  3752               	rlcf	___fladd@grs& (0+255),f,b
  6834  00143C                     l9832:
  6835                           
  6836                           ; BSR set to: 1
  6837  00143C  5151               	movf	___fladd@bexp& (0+255),w,b
  6838  00143E  B4D8               	btfsc	status,2,c
  6839  001440  EF24  F00A         	goto	u10021
  6840  001444  EF26  F00A         	goto	u10020
  6841  001448                     u10021:
  6842  001448  EF27  F00A         	goto	l9836
  6843  00144C                     u10020:
  6844  00144C                     
  6845                           ; BSR set to: 1
  6846  00144C  0751               	decf	___fladd@bexp& (0+255),f,b
  6847  00144E                     l9836:
  6848  00144E  0100               	movlb	0	; () banked
  6849  001450  AF9E               	btfss	(___fladd@b+2)& (0+255),7,b
  6850  001452  EF2D  F00A         	goto	u10031
  6851  001456  EF2F  F00A         	goto	u10030
  6852  00145A                     u10031:
  6853  00145A  EF01  F00A         	goto	l9820
  6854  00145E                     u10030:
  6855  00145E                     l9838:
  6856  00145E  0E00               	movlw	0
  6857  001460  0101               	movlb	1	; () banked
  6858  001462  6F50               	movwf	___fladd@aexp& (0+255),b
  6859  001464                     
  6860                           ; BSR set to: 1
  6861  001464  AF52               	btfss	___fladd@grs& (0+255),7,b
  6862  001466  EF37  F00A         	goto	u10041
  6863  00146A  EF39  F00A         	goto	u10040
  6864  00146E                     u10041:
  6865  00146E  EF53  F00A         	goto	l2544
  6866  001472                     u10040:
  6867  001472                     
  6868                           ; BSR set to: 1
  6869  001472  C152  F14B         	movff	___fladd@grs,??___fladd
  6870  001476  0E7F               	movlw	127
  6871  001478  174B               	andwf	??___fladd& (0+255),f,b
  6872  00147A  B4D8               	btfsc	status,2,c
  6873  00147C  EF42  F00A         	goto	u10051
  6874  001480  EF44  F00A         	goto	u10050
  6875  001484                     u10051:
  6876  001484  EF49  F00A         	goto	l2545
  6877  001488                     u10050:
  6878  001488                     l9844:
  6879  001488  0E01               	movlw	1
  6880  00148A  0101               	movlb	1	; () banked
  6881  00148C  6F50               	movwf	___fladd@aexp& (0+255),b
  6882  00148E  EF53  F00A         	goto	l2544
  6883  001492                     l2545:
  6884                           
  6885                           ; BSR set to: 1
  6886  001492  0100               	movlb	0	; () banked
  6887  001494  A19C               	btfss	___fladd@b& (0+255),0,b
  6888  001496  EF4F  F00A         	goto	u10061
  6889  00149A  EF51  F00A         	goto	u10060
  6890  00149E                     u10061:
  6891  00149E  EF53  F00A         	goto	l2544
  6892  0014A2                     u10060:
  6893  0014A2  EF44  F00A         	goto	l9844
  6894  0014A6                     l2544:
  6895  0014A6  0101               	movlb	1	; () banked
  6896  0014A8  5150               	movf	___fladd@aexp& (0+255),w,b
  6897  0014AA  B4D8               	btfsc	status,2,c
  6898  0014AC  EF5A  F00A         	goto	u10071
  6899  0014B0  EF5C  F00A         	goto	u10070
  6900  0014B4                     u10071:
  6901  0014B4  EF89  F00A         	goto	l9856
  6902  0014B8                     u10070:
  6903  0014B8                     
  6904                           ; BSR set to: 1
  6905  0014B8  0E01               	movlw	1
  6906  0014BA  0100               	movlb	0	; () banked
  6907  0014BC  279C               	addwf	___fladd@b& (0+255),f,b
  6908  0014BE  0E00               	movlw	0
  6909  0014C0  239D               	addwfc	(___fladd@b+1)& (0+255),f,b
  6910  0014C2  239E               	addwfc	(___fladd@b+2)& (0+255),f,b
  6911  0014C4  239F               	addwfc	(___fladd@b+3)& (0+255),f,b
  6912  0014C6                     
  6913                           ; BSR set to: 0
  6914  0014C6  A19F               	btfss	(___fladd@b+3)& (0+255),0,b
  6915  0014C8  EF68  F00A         	goto	u10081
  6916  0014CC  EF6A  F00A         	goto	u10080
  6917  0014D0                     u10081:
  6918  0014D0  EF89  F00A         	goto	l9856
  6919  0014D4                     u10080:
  6920  0014D4                     
  6921                           ; BSR set to: 0
  6922  0014D4  C09C  F14B         	movff	___fladd@b,??___fladd
  6923  0014D8  C09D  F14C         	movff	___fladd@b+1,??___fladd+1
  6924  0014DC  C09E  F14D         	movff	___fladd@b+2,??___fladd+2
  6925  0014E0  C09F  F14E         	movff	___fladd@b+3,??___fladd+3
  6926  0014E4  0101               	movlb	1	; () banked
  6927  0014E6  354E               	rlcf	(??___fladd+3)& (0+255),w,b
  6928  0014E8  334E               	rrcf	(??___fladd+3)& (0+255),f,b
  6929  0014EA  334D               	rrcf	(??___fladd+2)& (0+255),f,b
  6930  0014EC  334C               	rrcf	(??___fladd+1)& (0+255),f,b
  6931  0014EE  334B               	rrcf	??___fladd& (0+255),f,b
  6932  0014F0  C14B  F09C         	movff	??___fladd,___fladd@b
  6933  0014F4  C14C  F09D         	movff	??___fladd+1,___fladd@b+1
  6934  0014F8  C14D  F09E         	movff	??___fladd+2,___fladd@b+2
  6935  0014FC  C14E  F09F         	movff	??___fladd+3,___fladd@b+3
  6936  001500  2951               	incf	___fladd@bexp& (0+255),w,b
  6937  001502  B4D8               	btfsc	status,2,c
  6938  001504  EF86  F00A         	goto	u10091
  6939  001508  EF88  F00A         	goto	u10090
  6940  00150C                     u10091:
  6941  00150C  EF89  F00A         	goto	l9856
  6942  001510                     u10090:
  6943  001510                     
  6944                           ; BSR set to: 1
  6945  001510  2B51               	incf	___fladd@bexp& (0+255),f,b
  6946  001512                     l9856:
  6947  001512  0101               	movlb	1	; () banked
  6948  001514  2951               	incf	___fladd@bexp& (0+255),w,b
  6949  001516  B4D8               	btfsc	status,2,c
  6950  001518  EF90  F00A         	goto	u10101
  6951  00151C  EF92  F00A         	goto	u10100
  6952  001520                     u10101:
  6953  001520  EF9A  F00A         	goto	l9860
  6954  001524                     u10100:
  6955  001524                     
  6956                           ; BSR set to: 1
  6957  001524  5151               	movf	___fladd@bexp& (0+255),w,b
  6958  001526  A4D8               	btfss	status,2,c
  6959  001528  EF98  F00A         	goto	u10111
  6960  00152C  EF9A  F00A         	goto	u10110
  6961  001530                     u10111:
  6962  001530  EFAE  F00A         	goto	l9864
  6963  001534                     u10110:
  6964  001534                     l9860:
  6965                           
  6966                           ; BSR set to: 1
  6967  001534  0E00               	movlw	0
  6968  001536  0100               	movlb	0	; () banked
  6969  001538  6F9C               	movwf	___fladd@b& (0+255),b
  6970  00153A  0E00               	movlw	0
  6971  00153C  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6972  00153E  0E00               	movlw	0
  6973  001540  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6974  001542  0E00               	movlw	0
  6975  001544  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6976  001546  0101               	movlb	1	; () banked
  6977  001548  5151               	movf	___fladd@bexp& (0+255),w,b
  6978  00154A  A4D8               	btfss	status,2,c
  6979  00154C  EFAA  F00A         	goto	u10121
  6980  001550  EFAC  F00A         	goto	u10120
  6981  001554                     u10121:
  6982  001554  EFAE  F00A         	goto	l9864
  6983  001558                     u10120:
  6984  001558                     
  6985                           ; BSR set to: 1
  6986  001558  0E00               	movlw	0
  6987  00155A  6F4F               	movwf	___fladd@signs& (0+255),b
  6988  00155C                     l9864:
  6989                           
  6990                           ; BSR set to: 1
  6991  00155C  A151               	btfss	___fladd@bexp& (0+255),0,b
  6992  00155E  EFB3  F00A         	goto	u10131
  6993  001562  EFB5  F00A         	goto	u10130
  6994  001566                     u10131:
  6995  001566  EFB9  F00A         	goto	l9868
  6996  00156A                     u10130:
  6997  00156A                     
  6998                           ; BSR set to: 1
  6999  00156A  0100               	movlb	0	; () banked
  7000  00156C  8F9E               	bsf	(___fladd@b+2)& (0+255),7,b
  7001  00156E  EFBB  F00A         	goto	l9870
  7002  001572                     l9868:
  7003                           
  7004                           ; BSR set to: 1
  7005  001572  0100               	movlb	0	; () banked
  7006  001574  9F9E               	bcf	(___fladd@b+2)& (0+255),7,b
  7007  001576                     l9870:
  7008                           
  7009                           ; BSR set to: 0
  7010  001576  0101               	movlb	1	; () banked
  7011  001578  90D8               	bcf	status,0,c
  7012  00157A  3151               	rrcf	___fladd@bexp& (0+255),w,b
  7013  00157C  0100               	movlb	0	; () banked
  7014  00157E  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  7015  001580                     
  7016                           ; BSR set to: 0
  7017  001580  0101               	movlb	1	; () banked
  7018  001582  AF4F               	btfss	___fladd@signs& (0+255),7,b
  7019  001584  EFC6  F00A         	goto	u10141
  7020  001588  EFC8  F00A         	goto	u10140
  7021  00158C                     u10141:
  7022  00158C  EFCA  F00A         	goto	l9876
  7023  001590                     u10140:
  7024  001590                     
  7025                           ; BSR set to: 1
  7026  001590  0100               	movlb	0	; () banked
  7027  001592  8F9F               	bsf	(___fladd@b+3)& (0+255),7,b
  7028  001594                     l9876:
  7029  001594  C09C  F09C         	movff	___fladd@b,?___fladd
  7030  001598  C09D  F09D         	movff	___fladd@b+1,?___fladd+1
  7031  00159C  C09E  F09E         	movff	___fladd@b+2,?___fladd+2
  7032  0015A0  C09F  F09F         	movff	___fladd@b+3,?___fladd+3
  7033  0015A4                     l2527:
  7034  0015A4  0012               	return		;funcret
  7035  0015A6                     __end_of___fladd:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function _PCA_Write_Reg *****************
  7039 ;; Defined at:
  7040 ;;		line 68 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  i2c_obj         2    0[BANK0 ] PTR const struct .
  7043 ;;		 -> i2c_obj(7), 
  7044 ;;  slave_addres    1    2[BANK0 ] unsigned char 
  7045 ;;  reg_address     1    3[BANK0 ] unsigned char 
  7046 ;;  data            1    4[BANK0 ] unsigned char 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  ack             1   34[COMRAM] unsigned char 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      void 
  7051 ;; Registers used:
  7052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7058 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;Total ram usage:        6 bytes
  7063 ;; Hardware stack levels used: 1
  7064 ;; Hardware stack levels required when called: 9
  7065 ;; This function calls:
  7066 ;;		_MSSP_I2C_Master_Send_Start
  7067 ;;		_MSSP_I2C_Master_Send_Stop
  7068 ;;		_MSSP_I2C_Master_Write_Blocking
  7069 ;; This function is called by:
  7070 ;;		_ServoDriver_Init
  7071 ;;		_Servo_SetAngle
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text34
  7076  0047CA                     __ptext34:
  7077                           	callstack 0
  7078  0047CA                     _PCA_Write_Reg:
  7079                           	callstack 19
  7080  0047CA                     
  7081                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 68: static void PCA_Write_Reg(con
      +                          st mssp_i2c_st *i2c_obj,uint8 slave_address,uint8 reg_address,uint8 data);ECU/SERVO_MOTO
      +                          R_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 69: {;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_m
      +                          otor_i2c.c: 70:     uint8 ack=6;
  7082  0047CA  0E06               	movlw	6
  7083  0047CC  6E23               	movwf	PCA_Write_Reg@ack^0,c
  7084  0047CE                     
  7085                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 72:     MSSP_I2C_Master_Send_Star
      +                          t(i2c_obj);
  7086  0047CE  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  7087  0047D2  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  7088  0047D6  ECB2  F024         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  7089  0047DA                     
  7090                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 74:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,slave_address,&ack);
  7091  0047DA  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  7092  0047DE  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  7093  0047E2  C062  F020         	movff	PCA_Write_Reg@slave_address,MSSP_I2C_Master_Write_Blocking@i2c_data
  7094  0047E6  0E23               	movlw	low PCA_Write_Reg@ack
  7095  0047E8  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  7096  0047EA  0E00               	movlw	high PCA_Write_Reg@ack
  7097  0047EC  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  7098  0047EE  EC7B  F022         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  7099  0047F2                     
  7100                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 76:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,reg_address,&ack);
  7101  0047F2  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  7102  0047F6  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  7103  0047FA  C063  F020         	movff	PCA_Write_Reg@reg_address,MSSP_I2C_Master_Write_Blocking@i2c_data
  7104  0047FE  0E23               	movlw	low PCA_Write_Reg@ack
  7105  004800  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  7106  004802  0E00               	movlw	high PCA_Write_Reg@ack
  7107  004804  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  7108  004806  EC7B  F022         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  7109  00480A                     
  7110                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 78:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,data,&ack);
  7111  00480A  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  7112  00480E  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  7113  004812  C064  F020         	movff	PCA_Write_Reg@data,MSSP_I2C_Master_Write_Blocking@i2c_data
  7114  004816  0E23               	movlw	low PCA_Write_Reg@ack
  7115  004818  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  7116  00481A  0E00               	movlw	high PCA_Write_Reg@ack
  7117  00481C  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  7118  00481E  EC7B  F022         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  7119  004822                     
  7120                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 80:     MSSP_I2C_Master_Send_Stop
      +                          (i2c_obj);
  7121  004822  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  7122  004826  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  7123  00482A  EC96  F024         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  7124  00482E  0012               	return		;funcret
  7125  004830                     __end_of_PCA_Write_Reg:
  7126                           	callstack 0
  7127                           
  7128 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
  7129 ;; Defined at:
  7130 ;;		line 196 in file "MCAL/I2C/mcal_i2c.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  7133 ;;		 -> i2c_obj(7), 
  7134 ;;  i2c_data        1   31[COMRAM] unsigned char 
  7135 ;;  _ack            2   32[COMRAM] PTR unsigned char 
  7136 ;;		 -> PCA_Write_Reg@ack(1), 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  ERRORSTATUS     1    0        unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      unsigned char 
  7141 ;; Registers used:
  7142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7148 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;Total ram usage:        5 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 8
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_PCA_Write_Reg
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text35
  7163  0044F6                     __ptext35:
  7164                           	callstack 0
  7165  0044F6                     _MSSP_I2C_Master_Write_Blocking:
  7166                           	callstack 19
  7167  0044F6                     
  7168                           ;MCAL/I2C/mcal_i2c.c: 199:     if (((void*)0)==i2c_obj||((void*)0)==_ack)
  7169  0044F6  501E               	movf	MSSP_I2C_Master_Write_Blocking@i2c_obj^0,w,c
  7170  0044F8  101F               	iorwf	(MSSP_I2C_Master_Write_Blocking@i2c_obj+1)^0,w,c
  7171  0044FA  B4D8               	btfsc	status,2,c
  7172  0044FC  EF82  F022         	goto	u10621
  7173  004500  EF84  F022         	goto	u10620
  7174  004504                     u10621:
  7175  004504  EF8D  F022         	goto	l10150
  7176  004508                     u10620:
  7177  004508  5021               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
  7178  00450A  1022               	iorwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,w,c
  7179  00450C  A4D8               	btfss	status,2,c
  7180  00450E  EF8B  F022         	goto	u10631
  7181  004512  EF8D  F022         	goto	u10630
  7182  004516                     u10631:
  7183  004516  EF8F  F022         	goto	l1038
  7184  00451A                     u10630:
  7185  00451A                     l10150:
  7186                           
  7187                           ;MCAL/I2C/mcal_i2c.c: 202:     }
  7188  00451A  EFAE  F022         	goto	l1047
  7189  00451E                     l1038:
  7190                           
  7191                           ;MCAL/I2C/mcal_i2c.c: 204:     {;MCAL/I2C/mcal_i2c.c: 206:         SSPBUF=i2c_data;
  7192  00451E  C020  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@i2c_data,4041	;volatile
  7193  004522                     l1042:
  7194  004522  B0C7               	btfsc	199,0,c	;volatile
  7195  004524  EF96  F022         	goto	u10641
  7196  004528  EF98  F022         	goto	u10640
  7197  00452C                     u10641:
  7198  00452C  EF91  F022         	goto	l1042
  7199  004530                     u10640:
  7200  004530                     
  7201                           ;MCAL/I2C/mcal_i2c.c: 210:         PIR1bits.SSPIF = 0;
  7202  004530  969E               	bcf	158,3,c	;volatile
  7203                           
  7204                           ;MCAL/I2C/mcal_i2c.c: 212:         if(0 == SSPCON2bits.ACKSTAT)
  7205  004532  BCC5               	btfsc	197,6,c	;volatile
  7206  004534  EF9E  F022         	goto	u10651
  7207  004538  EFA0  F022         	goto	u10650
  7208  00453C                     u10651:
  7209  00453C  EFA8  F022         	goto	l10154
  7210  004540                     u10650:
  7211  004540                     
  7212                           ;MCAL/I2C/mcal_i2c.c: 213:         {;MCAL/I2C/mcal_i2c.c: 214:             *_ack = 0;
  7213  004540  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
  7214  004544  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
  7215  004548  0E00               	movlw	0
  7216  00454A  6EDF               	movwf	indf2,c
  7217                           
  7218                           ;MCAL/I2C/mcal_i2c.c: 215:         }
  7219  00454C  EFAE  F022         	goto	l1047
  7220  004550                     l10154:
  7221                           
  7222                           ;MCAL/I2C/mcal_i2c.c: 217:         {;MCAL/I2C/mcal_i2c.c: 218:             *_ack = 1;
  7223  004550  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
  7224  004554  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
  7225  004558  0E01               	movlw	1
  7226  00455A  6EDF               	movwf	indf2,c
  7227  00455C                     l1047:
  7228  00455C  0012               	return		;funcret
  7229  00455E                     __end_of_MSSP_I2C_Master_Write_Blocking:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
  7233 ;; Defined at:
  7234 ;;		line 166 in file "MCAL/I2C/mcal_i2c.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  7237 ;;		 -> i2c_obj(7), 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  ERRORSTATUS     1    0        unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      unsigned char 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:        2 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; Hardware stack levels required when called: 8
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_PCA_Write_Reg
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text36
  7264  00492C                     __ptext36:
  7265                           	callstack 0
  7266  00492C                     _MSSP_I2C_Master_Send_Stop:
  7267                           	callstack 19
  7268  00492C                     
  7269                           ;MCAL/I2C/mcal_i2c.c: 169:     if (((void*)0)==i2c_obj)
  7270  00492C  501E               	movf	MSSP_I2C_Master_Send_Stop@i2c_obj^0,w,c
  7271  00492E  101F               	iorwf	(MSSP_I2C_Master_Send_Stop@i2c_obj+1)^0,w,c
  7272  004930  A4D8               	btfss	status,2,c
  7273  004932  EF9D  F024         	goto	u10661
  7274  004936  EF9F  F024         	goto	u10660
  7275  00493A                     u10661:
  7276  00493A  EFA1  F024         	goto	l1028
  7277  00493E                     u10660:
  7278  00493E                     l10162:
  7279                           
  7280                           ;MCAL/I2C/mcal_i2c.c: 172:     }
  7281  00493E  EFB1  F024         	goto	l1035
  7282  004942                     l1028:
  7283                           
  7284                           ;MCAL/I2C/mcal_i2c.c: 174:     {;MCAL/I2C/mcal_i2c.c: 176:         SSPCON2bits.PEN = 1;
  7285  004942  84C5               	bsf	197,2,c	;volatile
  7286  004944                     l1030:
  7287  004944  B4C5               	btfsc	197,2,c	;volatile
  7288  004946  EFA7  F024         	goto	u10671
  7289  00494A  EFA9  F024         	goto	u10670
  7290  00494E                     u10671:
  7291  00494E  EFA2  F024         	goto	l1030
  7292  004952                     u10670:
  7293  004952                     
  7294                           ;MCAL/I2C/mcal_i2c.c: 180:         PIR1bits.SSPIF = 0;
  7295  004952  969E               	bcf	158,3,c	;volatile
  7296                           
  7297                           ;MCAL/I2C/mcal_i2c.c: 182:         if(1 == SSPSTATbits.P)
  7298  004954  A8C7               	btfss	199,4,c	;volatile
  7299  004956  EFAF  F024         	goto	u10681
  7300  00495A  EFB1  F024         	goto	u10680
  7301  00495E                     u10681:
  7302  00495E  EF9F  F024         	goto	l10162
  7303  004962                     u10680:
  7304  004962                     l1035:
  7305  004962  0012               	return		;funcret
  7306  004964                     __end_of_MSSP_I2C_Master_Send_Stop:
  7307                           	callstack 0
  7308                           
  7309 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
  7310 ;; Defined at:
  7311 ;;		line 116 in file "MCAL/I2C/mcal_i2c.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  7314 ;;		 -> i2c_obj(7), 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  ERRORSTATUS     1    0        unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      unsigned char 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:        2 bytes
  7331 ;; Hardware stack levels used: 1
  7332 ;; Hardware stack levels required when called: 8
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_PCA_Write_Reg
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text37
  7341  004964                     __ptext37:
  7342                           	callstack 0
  7343  004964                     _MSSP_I2C_Master_Send_Start:
  7344                           	callstack 19
  7345  004964                     
  7346                           ;MCAL/I2C/mcal_i2c.c: 119:     if (((void*)0)==i2c_obj)
  7347  004964  501E               	movf	MSSP_I2C_Master_Send_Start@i2c_obj^0,w,c
  7348  004966  101F               	iorwf	(MSSP_I2C_Master_Send_Start@i2c_obj+1)^0,w,c
  7349  004968  A4D8               	btfss	status,2,c
  7350  00496A  EFB9  F024         	goto	u10591
  7351  00496E  EFBB  F024         	goto	u10590
  7352  004972                     u10591:
  7353  004972  EFBD  F024         	goto	l1010
  7354  004976                     u10590:
  7355  004976                     l10136:
  7356                           
  7357                           ;MCAL/I2C/mcal_i2c.c: 122:     }
  7358  004976  EFCD  F024         	goto	l1017
  7359  00497A                     l1010:
  7360                           
  7361                           ;MCAL/I2C/mcal_i2c.c: 124:     {;MCAL/I2C/mcal_i2c.c: 126:         SSPCON2bits.SEN = 1;
  7362  00497A  80C5               	bsf	197,0,c	;volatile
  7363  00497C                     l1012:
  7364  00497C  B0C5               	btfsc	197,0,c	;volatile
  7365  00497E  EFC3  F024         	goto	u10601
  7366  004982  EFC5  F024         	goto	u10600
  7367  004986                     u10601:
  7368  004986  EFBE  F024         	goto	l1012
  7369  00498A                     u10600:
  7370  00498A                     
  7371                           ;MCAL/I2C/mcal_i2c.c: 130:         PIR1bits.SSPIF = 0;
  7372  00498A  969E               	bcf	158,3,c	;volatile
  7373                           
  7374                           ;MCAL/I2C/mcal_i2c.c: 132:         if(1 == SSPSTATbits.S)
  7375  00498C  A6C7               	btfss	199,3,c	;volatile
  7376  00498E  EFCB  F024         	goto	u10611
  7377  004992  EFCD  F024         	goto	u10610
  7378  004996                     u10611:
  7379  004996  EFBB  F024         	goto	l10136
  7380  00499A                     u10610:
  7381  00499A                     l1017:
  7382  00499A  0012               	return		;funcret
  7383  00499C                     __end_of_MSSP_I2C_Master_Send_Start:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _Robot_Steer_Stop *****************
  7387 ;; Defined at:
  7388 ;;		line 193 in file "Robot/Navigation/robot_navigation.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  ret_val         1    0        unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      unsigned char 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used: 1
  7408 ;; Hardware stack levels required when called: 10
  7409 ;; This function calls:
  7410 ;;		_CCP_PWM_Set_Duty
  7411 ;; This function is called by:
  7412 ;;		_Robot_Move_Forward
  7413 ;;		_Robot_Move_Backward
  7414 ;;		_Robot_Steer_Right_Forward
  7415 ;;		_Robot_Steer_Left_Forward
  7416 ;;		_Robot_Steer_Right_Backward
  7417 ;;		_Robot_Steer_Left_Backward
  7418 ;;		_main
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text38
  7423  004B7E                     __ptext38:
  7424                           	callstack 0
  7425  004B7E                     _Robot_Steer_Stop:
  7426                           	callstack 20
  7427  004B7E                     
  7428                           ;Robot/Navigation/robot_navigation.c: 196:             CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  7429  004B7E  0EBA               	movlw	low _CCP1_Obj
  7430  004B80  0101               	movlb	1	; () banked
  7431  004B82  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  7432  004B84  0E00               	movlw	high _CCP1_Obj
  7433  004B86  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  7434  004B88  0E00               	movlw	0
  7435  004B8A  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  7436  004B8C  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  7437  004B90                     
  7438                           ;Robot/Navigation/robot_navigation.c: 197:             CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  7439  004B90  0E3F               	movlw	low _CCP2_Obj
  7440  004B92  0101               	movlb	1	; () banked
  7441  004B94  6F5B               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  7442  004B96  0E01               	movlw	high _CCP2_Obj
  7443  004B98  6F5C               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  7444  004B9A  0E00               	movlw	0
  7445  004B9C  6F5D               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  7446  004B9E  EC24  F013         	call	_CCP_PWM_Set_Duty	;wreg free
  7447  004BA2  0012               	return		;funcret
  7448  004BA4                     __end_of_Robot_Steer_Stop:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _CCP_PWM_Set_Duty *****************
  7452 ;; Defined at:
  7453 ;;		line 176 in file "MCAL/CCP/hal_ccp.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  _ccp_obj        2   16[BANK1 ] PTR const struct .
  7456 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  7457 ;;  _duty           1   18[BANK1 ] const unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  l_duty_temp     2   23[BANK1 ] unsigned short 
  7460 ;;  ret             1    0        unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      unsigned char 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7470 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;Total ram usage:       11 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 9
  7477 ;; This function calls:
  7478 ;;		___fldiv
  7479 ;;		___flmul
  7480 ;;		___fltol
  7481 ;;		___xxtofl
  7482 ;; This function is called by:
  7483 ;;		_Robot_Nav_Init
  7484 ;;		_Robot_Move_Forward
  7485 ;;		_Robot_Move_Backward
  7486 ;;		_Robot_Steer_Right_Forward
  7487 ;;		_Robot_Steer_Left_Forward
  7488 ;;		_Robot_Steer_Right_Backward
  7489 ;;		_Robot_Steer_Left_Backward
  7490 ;;		_Robot_Steer_Stop
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text39
  7495  002648                     __ptext39:
  7496                           	callstack 0
  7497  002648                     _CCP_PWM_Set_Duty:
  7498                           	callstack 19
  7499  002648                     
  7500                           ;MCAL/CCP/hal_ccp.c: 178:     uint16 l_duty_temp = 0;
  7501  002648  0E00               	movlw	0
  7502  00264A  0101               	movlb	1	; () banked
  7503  00264C  6F63               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)& (0+255),b
  7504  00264E  0E00               	movlw	0
  7505  002650  6F62               	movwf	CCP_PWM_Set_Duty@l_duty_temp& (0+255),b
  7506  002652                     
  7507                           ; BSR set to: 1
  7508                           ;MCAL/CCP/hal_ccp.c: 180:     if(((void*)0) == _ccp_obj){
  7509  002652  515B               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  7510  002654  115C               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  7511  002656  A4D8               	btfss	status,2,c
  7512  002658  EF30  F013         	goto	u11451
  7513  00265C  EF32  F013         	goto	u11450
  7514  002660                     u11451:
  7515  002660  EF34  F013         	goto	l10702
  7516  002664                     u11450:
  7517  002664                     
  7518                           ; BSR set to: 1
  7519                           ;MCAL/CCP/hal_ccp.c: 182:     }
  7520  002664  EFE7  F013         	goto	l534
  7521  002668                     l10702:
  7522                           
  7523                           ; BSR set to: 1
  7524                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
  7525  002668  0E00               	movlw	0
  7526  00266A  0100               	movlb	0	; () banked
  7527  00266C  6F6E               	movwf	___fldiv@a& (0+255),b
  7528  00266E  0E00               	movlw	0
  7529  002670  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7530  002672  0EC8               	movlw	200
  7531  002674  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7532  002676  0E42               	movlw	66
  7533  002678  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7534  00267A  0101               	movlb	1	; () banked
  7535  00267C  515D               	movf	CCP_PWM_Set_Duty@_duty& (0+255),w,b
  7536  00267E  6E1E               	movwf	___xxtofl@val^0,c
  7537  002680  6A1F               	clrf	(___xxtofl@val+1)^0,c
  7538  002682  6A20               	clrf	(___xxtofl@val+2)^0,c
  7539  002684  6A21               	clrf	(___xxtofl@val+3)^0,c
  7540  002686  0E01               	movlw	1
  7541  002688  EC48  F012         	call	___xxtofl
  7542  00268C  C01E  F06A         	movff	?___xxtofl,___fldiv@b
  7543  002690  C01F  F06B         	movff	?___xxtofl+1,___fldiv@b+1
  7544  002694  C020  F06C         	movff	?___xxtofl+2,___fldiv@b+2
  7545  002698  C021  F06D         	movff	?___xxtofl+3,___fldiv@b+3
  7546  00269C  ECE9  F00C         	call	___fldiv	;wreg free
  7547  0026A0  C06A  F087         	movff	?___fldiv,___flmul@a
  7548  0026A4  C06B  F088         	movff	?___fldiv+1,___flmul@a+1
  7549  0026A8  C06C  F089         	movff	?___fldiv+2,___flmul@a+2
  7550  0026AC  C06D  F08A         	movff	?___fldiv+3,___flmul@a+3
  7551  0026B0  50CB               	movf	203,w,c	;volatile
  7552  0026B2  0100               	movlb	0	; () banked
  7553  0026B4  6FA4               	movwf	??_CCP_PWM_Set_Duty& (0+255),b
  7554  0026B6  6BA5               	clrf	(??_CCP_PWM_Set_Duty+1)& (0+255),b
  7555  0026B8  0E01               	movlw	1
  7556  0026BA  27A4               	addwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7557  0026BC  0E00               	movlw	0
  7558  0026BE  23A5               	addwfc	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7559  0026C0  C0A4  F01E         	movff	??_CCP_PWM_Set_Duty,___xxtofl@val
  7560  0026C4  C0A5  F01F         	movff	??_CCP_PWM_Set_Duty+1,___xxtofl@val+1
  7561  0026C8  0E00               	movlw	0
  7562  0026CA  BE1F               	btfsc	(___xxtofl@val+1)^0,7,c
  7563  0026CC  0EFF               	movlw	-1
  7564  0026CE  6E20               	movwf	(___xxtofl@val+2)^0,c
  7565  0026D0  6E21               	movwf	(___xxtofl@val+3)^0,c
  7566  0026D2  0E01               	movlw	1
  7567  0026D4  EC48  F012         	call	___xxtofl
  7568  0026D8  C01E  F083         	movff	?___xxtofl,___flmul@b
  7569  0026DC  C01F  F084         	movff	?___xxtofl+1,___flmul@b+1
  7570  0026E0  C020  F085         	movff	?___xxtofl+2,___flmul@b+2
  7571  0026E4  C021  F086         	movff	?___xxtofl+3,___flmul@b+3
  7572  0026E8  ECD3  F00A         	call	___flmul	;wreg free
  7573  0026EC  C083  F15E         	movff	?___flmul,_CCP_PWM_Set_Duty$5751
  7574  0026F0  C084  F15F         	movff	?___flmul+1,_CCP_PWM_Set_Duty$5751+1
  7575  0026F4  C085  F160         	movff	?___flmul+2,_CCP_PWM_Set_Duty$5751+2
  7576  0026F8  C086  F161         	movff	?___flmul+3,_CCP_PWM_Set_Duty$5751+3
  7577                           
  7578                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
  7579  0026FC  0E00               	movlw	0
  7580  0026FE  0100               	movlb	0	; () banked
  7581  002700  6F87               	movwf	___flmul@a& (0+255),b
  7582  002702  0E00               	movlw	0
  7583  002704  6F88               	movwf	(___flmul@a+1)& (0+255),b
  7584  002706  0E80               	movlw	128
  7585  002708  6F89               	movwf	(___flmul@a+2)& (0+255),b
  7586  00270A  0E40               	movlw	64
  7587  00270C  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  7588  00270E  C15E  F083         	movff	_CCP_PWM_Set_Duty$5751,___flmul@b
  7589  002712  C15F  F084         	movff	_CCP_PWM_Set_Duty$5751+1,___flmul@b+1
  7590  002716  C160  F085         	movff	_CCP_PWM_Set_Duty$5751+2,___flmul@b+2
  7591  00271A  C161  F086         	movff	_CCP_PWM_Set_Duty$5751+3,___flmul@b+3
  7592  00271E  ECD3  F00A         	call	___flmul	;wreg free
  7593  002722  C083  F153         	movff	?___flmul,___fltol@f1
  7594  002726  C084  F154         	movff	?___flmul+1,___fltol@f1+1
  7595  00272A  C085  F155         	movff	?___flmul+2,___fltol@f1+2
  7596  00272E  C086  F156         	movff	?___flmul+3,___fltol@f1+3
  7597  002732  ECEF  F018         	call	___fltol	;wreg free
  7598  002736  C153  F162         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
  7599  00273A  C154  F163         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
  7600  00273E                     
  7601                           ;MCAL/CCP/hal_ccp.c: 186:         if(CCP1_INST == _ccp_obj->ccp_inst){
  7602  00273E  C15B  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  7603  002742  C15C  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  7604  002746  50DF               	movf	indf2,w,c
  7605  002748  A4D8               	btfss	status,2,c
  7606  00274A  EFA9  F013         	goto	u11461
  7607  00274E  EFAB  F013         	goto	u11460
  7608  002752                     u11461:
  7609  002752  EFC4  F013         	goto	l10708
  7610  002756                     u11460:
  7611  002756                     
  7612                           ;MCAL/CCP/hal_ccp.c: 187:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
  7613  002756  C162  F0A4         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7614  00275A  0E03               	movlw	3
  7615  00275C  0100               	movlb	0	; () banked
  7616  00275E  17A4               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7617  002760  3BA4               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7618  002762  50BD               	movf	189,w,c	;volatile
  7619  002764  19A4               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7620  002766  0BCF               	andlw	-49
  7621  002768  19A4               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7622  00276A  6EBD               	movwf	189,c	;volatile
  7623                           
  7624                           ;MCAL/CCP/hal_ccp.c: 188:             CCPR1L = (uint8)(l_duty_temp >> 2);
  7625  00276C  C162  F0A4         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7626  002770  C163  F0A5         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  7627  002774  90D8               	bcf	status,0,c
  7628  002776  33A5               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7629  002778  33A4               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7630  00277A  90D8               	bcf	status,0,c
  7631  00277C  33A5               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7632  00277E  33A4               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7633  002780  51A4               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7634  002782  6EBE               	movwf	190,c	;volatile
  7635                           
  7636                           ;MCAL/CCP/hal_ccp.c: 189:         }
  7637  002784  EFE7  F013         	goto	l10712
  7638  002788                     l10708:
  7639  002788  C15B  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  7640  00278C  C15C  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  7641  002790  04DE               	decf	postinc2,w,c
  7642  002792  A4D8               	btfss	status,2,c
  7643  002794  EFCE  F013         	goto	u11471
  7644  002798  EFD0  F013         	goto	u11470
  7645  00279C                     u11471:
  7646  00279C  EFE7  F013         	goto	l10712
  7647  0027A0                     u11470:
  7648  0027A0                     
  7649                           ;MCAL/CCP/hal_ccp.c: 191:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003);
  7650  0027A0  C162  F0A4         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7651  0027A4  0E03               	movlw	3
  7652  0027A6  0100               	movlb	0	; () banked
  7653  0027A8  17A4               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7654  0027AA  3BA4               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7655  0027AC  50BA               	movf	186,w,c	;volatile
  7656  0027AE  19A4               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7657  0027B0  0BCF               	andlw	-49
  7658  0027B2  19A4               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7659  0027B4  6EBA               	movwf	186,c	;volatile
  7660                           
  7661                           ;MCAL/CCP/hal_ccp.c: 192:             CCPR2L = (uint8)(l_duty_temp >> 2);
  7662  0027B6  C162  F0A4         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7663  0027BA  C163  F0A5         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  7664  0027BE  90D8               	bcf	status,0,c
  7665  0027C0  33A5               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7666  0027C2  33A4               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7667  0027C4  90D8               	bcf	status,0,c
  7668  0027C6  33A5               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7669  0027C8  33A4               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7670  0027CA  51A4               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7671  0027CC  6EBB               	movwf	187,c	;volatile
  7672  0027CE                     l10712:
  7673  0027CE                     l534:
  7674  0027CE  0012               	return		;funcret
  7675  0027D0                     __end_of_CCP_PWM_Set_Duty:
  7676                           	callstack 0
  7677                           
  7678 ;; *************** function ___fltol *****************
  7679 ;; Defined at:
  7680 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  f1              4    8[BANK1 ] unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  exp1            1   34[COMRAM] unsigned char 
  7685 ;;  sign1           1   33[COMRAM] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  4    8[BANK1 ] long 
  7688 ;; Registers used:
  7689 ;;		wreg, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7695 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Totals:         2       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;Total ram usage:       10 bytes
  7700 ;; Hardware stack levels used: 1
  7701 ;; Hardware stack levels required when called: 8
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_Servo_SetAngle
  7706 ;;		_CCP_PWM_Set_Duty
  7707 ;;		_I2C_Master_Mode_Clock_Configurations
  7708 ;;		_async_config_baud_rate_gen
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text40
  7713  0031DE                     __ptext40:
  7714                           	callstack 0
  7715  0031DE                     ___fltol:
  7716                           	callstack 20
  7717  0031DE  0101               	movlb	1	; () banked
  7718  0031E0  3555               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7719  0031E2  3556               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7720  0031E4  6E23               	movwf	___fltol@exp1^0,c
  7721  0031E6  5023               	movf	___fltol@exp1^0,w,c
  7722  0031E8  A4D8               	btfss	status,2,c
  7723  0031EA  EFF9  F018         	goto	u10381
  7724  0031EE  EFFB  F018         	goto	u10380
  7725  0031F2                     u10381:
  7726  0031F2  EF05  F019         	goto	l10024
  7727  0031F6                     u10380:
  7728  0031F6                     l10020:
  7729                           
  7730                           ; BSR set to: 1
  7731  0031F6  0E00               	movlw	0
  7732  0031F8  6F53               	movwf	?___fltol& (0+255),b
  7733  0031FA  0E00               	movlw	0
  7734  0031FC  6F54               	movwf	(?___fltol+1)& (0+255),b
  7735  0031FE  0E00               	movlw	0
  7736  003200  6F55               	movwf	(?___fltol+2)& (0+255),b
  7737  003202  0E00               	movlw	0
  7738  003204  6F56               	movwf	(?___fltol+3)& (0+255),b
  7739  003206  EF72  F019         	goto	l2287
  7740  00320A                     l10024:
  7741                           
  7742                           ; BSR set to: 1
  7743  00320A  C153  F157         	movff	___fltol@f1,??___fltol
  7744  00320E  C154  F158         	movff	___fltol@f1+1,??___fltol+1
  7745  003212  C155  F159         	movff	___fltol@f1+2,??___fltol+2
  7746  003216  C156  F15A         	movff	___fltol@f1+3,??___fltol+3
  7747  00321A  0E20               	movlw	32
  7748  00321C  EF15  F019         	goto	u10390
  7749  003220                     u10395:
  7750  003220  90D8               	bcf	status,0,c
  7751  003222  335A               	rrcf	(??___fltol+3)& (0+255),f,b
  7752  003224  3359               	rrcf	(??___fltol+2)& (0+255),f,b
  7753  003226  3358               	rrcf	(??___fltol+1)& (0+255),f,b
  7754  003228  3357               	rrcf	??___fltol& (0+255),f,b
  7755  00322A                     u10390:
  7756  00322A  2EE8               	decfsz	wreg,f,c
  7757  00322C  EF10  F019         	goto	u10395
  7758  003230  5157               	movf	??___fltol& (0+255),w,b
  7759  003232  6E22               	movwf	___fltol@sign1^0,c
  7760  003234                     
  7761                           ; BSR set to: 1
  7762  003234  8F55               	bsf	(___fltol@f1+2)& (0+255),7,b
  7763  003236                     
  7764                           ; BSR set to: 1
  7765  003236  0EFF               	movlw	255
  7766  003238  1753               	andwf	___fltol@f1& (0+255),f,b
  7767  00323A  0EFF               	movlw	255
  7768  00323C  1754               	andwf	(___fltol@f1+1)& (0+255),f,b
  7769  00323E  0EFF               	movlw	255
  7770  003240  1755               	andwf	(___fltol@f1+2)& (0+255),f,b
  7771  003242  0E00               	movlw	0
  7772  003244  1756               	andwf	(___fltol@f1+3)& (0+255),f,b
  7773  003246                     
  7774                           ; BSR set to: 1
  7775  003246  0E96               	movlw	150
  7776  003248  5E23               	subwf	___fltol@exp1^0,f,c
  7777  00324A                     
  7778                           ; BSR set to: 1
  7779  00324A  BE23               	btfsc	___fltol@exp1^0,7,c
  7780  00324C  EF2C  F019         	goto	u10400
  7781  003250  EF2A  F019         	goto	u10401
  7782  003254                     u10401:
  7783  003254  EF42  F019         	goto	l10044
  7784  003258                     u10400:
  7785  003258                     
  7786                           ; BSR set to: 1
  7787  003258  5023               	movf	___fltol@exp1^0,w,c
  7788  00325A  0A80               	xorlw	128
  7789  00325C  0F97               	addlw	151
  7790  00325E  B0D8               	btfsc	status,0,c
  7791  003260  EF34  F019         	goto	u10411
  7792  003264  EF36  F019         	goto	u10410
  7793  003268                     u10411:
  7794  003268  EF38  F019         	goto	l10040
  7795  00326C                     u10410:
  7796  00326C  EFFB  F018         	goto	l10020
  7797  003270                     l10040:
  7798                           
  7799                           ; BSR set to: 1
  7800  003270  90D8               	bcf	status,0,c
  7801  003272  3356               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7802  003274  3355               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7803  003276  3354               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7804  003278  3353               	rrcf	___fltol@f1& (0+255),f,b
  7805  00327A                     
  7806                           ; BSR set to: 1
  7807  00327A  3E23               	incfsz	___fltol@exp1^0,f,c
  7808  00327C  EF38  F019         	goto	l10040
  7809  003280  EF5A  F019         	goto	l10054
  7810  003284                     l10044:
  7811                           
  7812                           ; BSR set to: 1
  7813  003284  0E1F               	movlw	31
  7814  003286  6423               	cpfsgt	___fltol@exp1^0,c
  7815  003288  EF48  F019         	goto	u10421
  7816  00328C  EF4A  F019         	goto	u10420
  7817  003290                     u10421:
  7818  003290  EF52  F019         	goto	l10052
  7819  003294                     u10420:
  7820  003294  EFFB  F018         	goto	l10020
  7821  003298                     l10050:
  7822                           
  7823                           ; BSR set to: 1
  7824  003298  90D8               	bcf	status,0,c
  7825  00329A  3753               	rlcf	___fltol@f1& (0+255),f,b
  7826  00329C  3754               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7827  00329E  3755               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7828  0032A0  3756               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7829  0032A2  0623               	decf	___fltol@exp1^0,f,c
  7830  0032A4                     l10052:
  7831                           
  7832                           ; BSR set to: 1
  7833  0032A4  5023               	movf	___fltol@exp1^0,w,c
  7834  0032A6  A4D8               	btfss	status,2,c
  7835  0032A8  EF58  F019         	goto	u10431
  7836  0032AC  EF5A  F019         	goto	u10430
  7837  0032B0                     u10431:
  7838  0032B0  EF4C  F019         	goto	l10050
  7839  0032B4                     u10430:
  7840  0032B4                     l10054:
  7841                           
  7842                           ; BSR set to: 1
  7843  0032B4  5022               	movf	___fltol@sign1^0,w,c
  7844  0032B6  B4D8               	btfsc	status,2,c
  7845  0032B8  EF60  F019         	goto	u10441
  7846  0032BC  EF62  F019         	goto	u10440
  7847  0032C0                     u10441:
  7848  0032C0  EF6A  F019         	goto	l10058
  7849  0032C4                     u10440:
  7850  0032C4                     
  7851                           ; BSR set to: 1
  7852  0032C4  1F56               	comf	(___fltol@f1+3)& (0+255),f,b
  7853  0032C6  1F55               	comf	(___fltol@f1+2)& (0+255),f,b
  7854  0032C8  1F54               	comf	(___fltol@f1+1)& (0+255),f,b
  7855  0032CA  6D53               	negf	___fltol@f1& (0+255),b
  7856  0032CC  0E00               	movlw	0
  7857  0032CE  2354               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7858  0032D0  2355               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7859  0032D2  2356               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7860  0032D4                     l10058:
  7861                           
  7862                           ; BSR set to: 1
  7863  0032D4  C153  F153         	movff	___fltol@f1,?___fltol
  7864  0032D8  C154  F154         	movff	___fltol@f1+1,?___fltol+1
  7865  0032DC  C155  F155         	movff	___fltol@f1+2,?___fltol+2
  7866  0032E0  C156  F156         	movff	___fltol@f1+3,?___fltol+3
  7867  0032E4                     l2287:
  7868                           
  7869                           ; BSR set to: 1
  7870  0032E4  0012               	return		;funcret
  7871  0032E6                     __end_of___fltol:
  7872                           	callstack 0
  7873                           
  7874 ;; *************** function ___flmul *****************
  7875 ;; Defined at:
  7876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  b               4   35[BANK0 ] long 
  7879 ;;  a               4   39[BANK0 ] long 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  prod            4   54[BANK0 ] struct .
  7882 ;;  grs             4   49[BANK0 ] unsigned long 
  7883 ;;  temp            2   58[BANK0 ] struct .
  7884 ;;  bexp            1   53[BANK0 ] unsigned char 
  7885 ;;  aexp            1   48[BANK0 ] unsigned char 
  7886 ;;  sign            1   47[BANK0 ] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  4   35[BANK0 ] unsigned char 
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0, prodl, prodh
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7896 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;Total ram usage:       25 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 8
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_Servo_SetAngle
  7907 ;;		_CCP_PWM_Set_Duty
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text41
  7912  0015A6                     __ptext41:
  7913                           	callstack 0
  7914  0015A6                     ___flmul:
  7915                           	callstack 20
  7916  0015A6  0100               	movlb	0	; () banked
  7917  0015A8  5186               	movf	(___flmul@b+3)& (0+255),w,b
  7918  0015AA  0B80               	andlw	128
  7919  0015AC  6F8F               	movwf	___flmul@sign& (0+255),b
  7920  0015AE  5186               	movf	(___flmul@b+3)& (0+255),w,b
  7921  0015B0  2586               	addwf	(___flmul@b+3)& (0+255),w,b
  7922  0015B2  6F95               	movwf	___flmul@bexp& (0+255),b
  7923  0015B4                     
  7924                           ; BSR set to: 0
  7925  0015B4  AF85               	btfss	(___flmul@b+2)& (0+255),7,b
  7926  0015B6  EFDF  F00A         	goto	u11021
  7927  0015BA  EFE1  F00A         	goto	u11020
  7928  0015BE                     u11021:
  7929  0015BE  EFE2  F00A         	goto	l10456
  7930  0015C2                     u11020:
  7931  0015C2                     
  7932                           ; BSR set to: 0
  7933  0015C2  8195               	bsf	___flmul@bexp& (0+255),0,b
  7934  0015C4                     l10456:
  7935                           
  7936                           ; BSR set to: 0
  7937  0015C4  5195               	movf	___flmul@bexp& (0+255),w,b
  7938  0015C6  B4D8               	btfsc	status,2,c
  7939  0015C8  EFE8  F00A         	goto	u11031
  7940  0015CC  EFEA  F00A         	goto	u11030
  7941  0015D0                     u11031:
  7942  0015D0  EFFD  F00A         	goto	l10464
  7943  0015D4                     u11030:
  7944  0015D4                     
  7945                           ; BSR set to: 0
  7946  0015D4  2995               	incf	___flmul@bexp& (0+255),w,b
  7947  0015D6  A4D8               	btfss	status,2,c
  7948  0015D8  EFF0  F00A         	goto	u11041
  7949  0015DC  EFF2  F00A         	goto	u11040
  7950  0015E0                     u11041:
  7951  0015E0  EFFA  F00A         	goto	l10462
  7952  0015E4                     u11040:
  7953  0015E4                     
  7954                           ; BSR set to: 0
  7955  0015E4  0E00               	movlw	0
  7956  0015E6  6F83               	movwf	___flmul@b& (0+255),b
  7957  0015E8  0E00               	movlw	0
  7958  0015EA  6F84               	movwf	(___flmul@b+1)& (0+255),b
  7959  0015EC  0E00               	movlw	0
  7960  0015EE  6F85               	movwf	(___flmul@b+2)& (0+255),b
  7961  0015F0  0E00               	movlw	0
  7962  0015F2  6F86               	movwf	(___flmul@b+3)& (0+255),b
  7963  0015F4                     l10462:
  7964                           
  7965                           ; BSR set to: 0
  7966  0015F4  8F85               	bsf	(___flmul@b+2)& (0+255),7,b
  7967  0015F6  EF05  F00B         	goto	l10466
  7968  0015FA                     l10464:
  7969                           
  7970                           ; BSR set to: 0
  7971  0015FA  0E00               	movlw	0
  7972  0015FC  6F83               	movwf	___flmul@b& (0+255),b
  7973  0015FE  0E00               	movlw	0
  7974  001600  6F84               	movwf	(___flmul@b+1)& (0+255),b
  7975  001602  0E00               	movlw	0
  7976  001604  6F85               	movwf	(___flmul@b+2)& (0+255),b
  7977  001606  0E00               	movlw	0
  7978  001608  6F86               	movwf	(___flmul@b+3)& (0+255),b
  7979  00160A                     l10466:
  7980                           
  7981                           ; BSR set to: 0
  7982  00160A  518A               	movf	(___flmul@a+3)& (0+255),w,b
  7983  00160C  0B80               	andlw	128
  7984  00160E  1B8F               	xorwf	___flmul@sign& (0+255),f,b
  7985  001610                     
  7986                           ; BSR set to: 0
  7987  001610  518A               	movf	(___flmul@a+3)& (0+255),w,b
  7988  001612  258A               	addwf	(___flmul@a+3)& (0+255),w,b
  7989  001614  6F90               	movwf	___flmul@aexp& (0+255),b
  7990  001616                     
  7991                           ; BSR set to: 0
  7992  001616  AF89               	btfss	(___flmul@a+2)& (0+255),7,b
  7993  001618  EF10  F00B         	goto	u11051
  7994  00161C  EF12  F00B         	goto	u11050
  7995  001620                     u11051:
  7996  001620  EF13  F00B         	goto	l10474
  7997  001624                     u11050:
  7998  001624                     
  7999                           ; BSR set to: 0
  8000  001624  8190               	bsf	___flmul@aexp& (0+255),0,b
  8001  001626                     l10474:
  8002                           
  8003                           ; BSR set to: 0
  8004  001626  5190               	movf	___flmul@aexp& (0+255),w,b
  8005  001628  B4D8               	btfsc	status,2,c
  8006  00162A  EF19  F00B         	goto	u11061
  8007  00162E  EF1B  F00B         	goto	u11060
  8008  001632                     u11061:
  8009  001632  EF2E  F00B         	goto	l10482
  8010  001636                     u11060:
  8011  001636                     
  8012                           ; BSR set to: 0
  8013  001636  2990               	incf	___flmul@aexp& (0+255),w,b
  8014  001638  A4D8               	btfss	status,2,c
  8015  00163A  EF21  F00B         	goto	u11071
  8016  00163E  EF23  F00B         	goto	u11070
  8017  001642                     u11071:
  8018  001642  EF2B  F00B         	goto	l10480
  8019  001646                     u11070:
  8020  001646                     
  8021                           ; BSR set to: 0
  8022  001646  0E00               	movlw	0
  8023  001648  6F87               	movwf	___flmul@a& (0+255),b
  8024  00164A  0E00               	movlw	0
  8025  00164C  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8026  00164E  0E00               	movlw	0
  8027  001650  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8028  001652  0E00               	movlw	0
  8029  001654  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8030  001656                     l10480:
  8031                           
  8032                           ; BSR set to: 0
  8033  001656  8F89               	bsf	(___flmul@a+2)& (0+255),7,b
  8034  001658  EF36  F00B         	goto	l2604
  8035  00165C                     l10482:
  8036                           
  8037                           ; BSR set to: 0
  8038  00165C  0E00               	movlw	0
  8039  00165E  6F87               	movwf	___flmul@a& (0+255),b
  8040  001660  0E00               	movlw	0
  8041  001662  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8042  001664  0E00               	movlw	0
  8043  001666  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8044  001668  0E00               	movlw	0
  8045  00166A  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8046  00166C                     l2604:
  8047                           
  8048                           ; BSR set to: 0
  8049  00166C  5190               	movf	___flmul@aexp& (0+255),w,b
  8050  00166E  B4D8               	btfsc	status,2,c
  8051  001670  EF3C  F00B         	goto	u11081
  8052  001674  EF3E  F00B         	goto	u11080
  8053  001678                     u11081:
  8054  001678  EF46  F00B         	goto	l10486
  8055  00167C                     u11080:
  8056  00167C                     
  8057                           ; BSR set to: 0
  8058  00167C  5195               	movf	___flmul@bexp& (0+255),w,b
  8059  00167E  A4D8               	btfss	status,2,c
  8060  001680  EF44  F00B         	goto	u11091
  8061  001684  EF46  F00B         	goto	u11090
  8062  001688                     u11091:
  8063  001688  EF50  F00B         	goto	l10490
  8064  00168C                     u11090:
  8065  00168C                     l10486:
  8066                           
  8067                           ; BSR set to: 0
  8068  00168C  0E00               	movlw	0
  8069  00168E  6F83               	movwf	?___flmul& (0+255),b
  8070  001690  0E00               	movlw	0
  8071  001692  6F84               	movwf	(?___flmul+1)& (0+255),b
  8072  001694  0E00               	movlw	0
  8073  001696  6F85               	movwf	(?___flmul+2)& (0+255),b
  8074  001698  0E00               	movlw	0
  8075  00169A  6F86               	movwf	(?___flmul+3)& (0+255),b
  8076  00169C  EFE8  F00C         	goto	l2608
  8077  0016A0                     l10490:
  8078                           
  8079                           ; BSR set to: 0
  8080  0016A0  5189               	movf	(___flmul@a+2)& (0+255),w,b
  8081  0016A2  0383               	mulwf	___flmul@b& (0+255),b
  8082  0016A4  CFF3 F09A          	movff	prodl,___flmul@temp
  8083  0016A8  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8084  0016AC                     
  8085                           ; BSR set to: 0
  8086  0016AC  519A               	movf	___flmul@temp& (0+255),w,b
  8087  0016AE  6F91               	movwf	___flmul@grs& (0+255),b
  8088  0016B0  6B92               	clrf	(___flmul@grs+1)& (0+255),b
  8089  0016B2  6B93               	clrf	(___flmul@grs+2)& (0+255),b
  8090  0016B4  6B94               	clrf	(___flmul@grs+3)& (0+255),b
  8091  0016B6                     
  8092                           ; BSR set to: 0
  8093  0016B6  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8094  0016B8  6F96               	movwf	___flmul@prod& (0+255),b
  8095  0016BA  6B97               	clrf	(___flmul@prod+1)& (0+255),b
  8096  0016BC  6B98               	clrf	(___flmul@prod+2)& (0+255),b
  8097  0016BE  6B99               	clrf	(___flmul@prod+3)& (0+255),b
  8098  0016C0  5188               	movf	(___flmul@a+1)& (0+255),w,b
  8099  0016C2  0384               	mulwf	(___flmul@b+1)& (0+255),b
  8100  0016C4  CFF3 F09A          	movff	prodl,___flmul@temp
  8101  0016C8  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8102  0016CC                     
  8103                           ; BSR set to: 0
  8104  0016CC  519A               	movf	___flmul@temp& (0+255),w,b
  8105  0016CE  2791               	addwf	___flmul@grs& (0+255),f,b
  8106  0016D0  0E00               	movlw	0
  8107  0016D2  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8108  0016D4  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8109  0016D6  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8110  0016D8                     
  8111                           ; BSR set to: 0
  8112  0016D8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8113  0016DA  2796               	addwf	___flmul@prod& (0+255),f,b
  8114  0016DC  0E00               	movlw	0
  8115  0016DE  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8116  0016E0  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8117  0016E2  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8118  0016E4  5187               	movf	___flmul@a& (0+255),w,b
  8119  0016E6  0385               	mulwf	(___flmul@b+2)& (0+255),b
  8120  0016E8  CFF3 F09A          	movff	prodl,___flmul@temp
  8121  0016EC  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8122  0016F0                     
  8123                           ; BSR set to: 0
  8124  0016F0  519A               	movf	___flmul@temp& (0+255),w,b
  8125  0016F2  2791               	addwf	___flmul@grs& (0+255),f,b
  8126  0016F4  0E00               	movlw	0
  8127  0016F6  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8128  0016F8  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8129  0016FA  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8130  0016FC                     
  8131                           ; BSR set to: 0
  8132  0016FC  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8133  0016FE  2796               	addwf	___flmul@prod& (0+255),f,b
  8134  001700  0E00               	movlw	0
  8135  001702  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8136  001704  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8137  001706  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8138  001708                     
  8139                           ; BSR set to: 0
  8140  001708  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  8141  00170C  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  8142  001710  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  8143  001714  6B91               	clrf	___flmul@grs& (0+255),b
  8144  001716                     
  8145                           ; BSR set to: 0
  8146  001716  5187               	movf	___flmul@a& (0+255),w,b
  8147  001718  0384               	mulwf	(___flmul@b+1)& (0+255),b
  8148  00171A  CFF3 F09A          	movff	prodl,___flmul@temp
  8149  00171E  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8150  001722                     
  8151                           ; BSR set to: 0
  8152  001722  519A               	movf	___flmul@temp& (0+255),w,b
  8153  001724  2791               	addwf	___flmul@grs& (0+255),f,b
  8154  001726  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8155  001728  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8156  00172A  0E00               	movlw	0
  8157  00172C  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8158  00172E  0E00               	movlw	0
  8159  001730  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8160  001732                     
  8161                           ; BSR set to: 0
  8162  001732  5188               	movf	(___flmul@a+1)& (0+255),w,b
  8163  001734  0383               	mulwf	___flmul@b& (0+255),b
  8164  001736  CFF3 F09A          	movff	prodl,___flmul@temp
  8165  00173A  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8166  00173E                     
  8167                           ; BSR set to: 0
  8168  00173E  519A               	movf	___flmul@temp& (0+255),w,b
  8169  001740  2791               	addwf	___flmul@grs& (0+255),f,b
  8170  001742  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8171  001744  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8172  001746  0E00               	movlw	0
  8173  001748  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8174  00174A  0E00               	movlw	0
  8175  00174C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8176  00174E                     
  8177                           ; BSR set to: 0
  8178  00174E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  8179  001752  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  8180  001756  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  8181  00175A  6B91               	clrf	___flmul@grs& (0+255),b
  8182  00175C  5187               	movf	___flmul@a& (0+255),w,b
  8183  00175E  0383               	mulwf	___flmul@b& (0+255),b
  8184  001760  CFF3 F09A          	movff	prodl,___flmul@temp
  8185  001764  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8186  001768                     
  8187                           ; BSR set to: 0
  8188  001768  519A               	movf	___flmul@temp& (0+255),w,b
  8189  00176A  2791               	addwf	___flmul@grs& (0+255),f,b
  8190  00176C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8191  00176E  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8192  001770  0E00               	movlw	0
  8193  001772  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8194  001774  0E00               	movlw	0
  8195  001776  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8196  001778                     
  8197                           ; BSR set to: 0
  8198  001778  5189               	movf	(___flmul@a+2)& (0+255),w,b
  8199  00177A  0384               	mulwf	(___flmul@b+1)& (0+255),b
  8200  00177C  CFF3 F09A          	movff	prodl,___flmul@temp
  8201  001780  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8202  001784  519A               	movf	___flmul@temp& (0+255),w,b
  8203  001786  2796               	addwf	___flmul@prod& (0+255),f,b
  8204  001788  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8205  00178A  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8206  00178C  0E00               	movlw	0
  8207  00178E  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8208  001790  0E00               	movlw	0
  8209  001792  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8210  001794                     
  8211                           ; BSR set to: 0
  8212  001794  5188               	movf	(___flmul@a+1)& (0+255),w,b
  8213  001796  0385               	mulwf	(___flmul@b+2)& (0+255),b
  8214  001798  CFF3 F09A          	movff	prodl,___flmul@temp
  8215  00179C  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8216  0017A0                     
  8217                           ; BSR set to: 0
  8218  0017A0  519A               	movf	___flmul@temp& (0+255),w,b
  8219  0017A2  2796               	addwf	___flmul@prod& (0+255),f,b
  8220  0017A4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8221  0017A6  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8222  0017A8  0E00               	movlw	0
  8223  0017AA  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8224  0017AC  0E00               	movlw	0
  8225  0017AE  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8226  0017B0  5189               	movf	(___flmul@a+2)& (0+255),w,b
  8227  0017B2  0385               	mulwf	(___flmul@b+2)& (0+255),b
  8228  0017B4  CFF3 F09A          	movff	prodl,___flmul@temp
  8229  0017B8  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8230  0017BC                     
  8231                           ; BSR set to: 0
  8232  0017BC  519A               	movf	___flmul@temp& (0+255),w,b
  8233  0017BE  6F8B               	movwf	??___flmul& (0+255),b
  8234  0017C0  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8235  0017C2  6F8C               	movwf	(??___flmul+1)& (0+255),b
  8236  0017C4  6B8D               	clrf	(??___flmul+2)& (0+255),b
  8237  0017C6  6B8E               	clrf	(??___flmul+3)& (0+255),b
  8238  0017C8  C08D  F08E         	movff	??___flmul+2,??___flmul+3
  8239  0017CC  C08C  F08D         	movff	??___flmul+1,??___flmul+2
  8240  0017D0  C08B  F08C         	movff	??___flmul,??___flmul+1
  8241  0017D4  6B8B               	clrf	??___flmul& (0+255),b
  8242  0017D6  518B               	movf	??___flmul& (0+255),w,b
  8243  0017D8  2796               	addwf	___flmul@prod& (0+255),f,b
  8244  0017DA  518C               	movf	(??___flmul+1)& (0+255),w,b
  8245  0017DC  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8246  0017DE  518D               	movf	(??___flmul+2)& (0+255),w,b
  8247  0017E0  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8248  0017E2  518E               	movf	(??___flmul+3)& (0+255),w,b
  8249  0017E4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8250  0017E6                     
  8251                           ; BSR set to: 0
  8252  0017E6  C091  F08B         	movff	___flmul@grs,??___flmul
  8253  0017EA  C092  F08C         	movff	___flmul@grs+1,??___flmul+1
  8254  0017EE  C093  F08D         	movff	___flmul@grs+2,??___flmul+2
  8255  0017F2  C094  F08E         	movff	___flmul@grs+3,??___flmul+3
  8256  0017F6  0E19               	movlw	25
  8257  0017F8  EF03  F00C         	goto	u11100
  8258  0017FC                     u11105:
  8259  0017FC  90D8               	bcf	status,0,c
  8260  0017FE  338E               	rrcf	(??___flmul+3)& (0+255),f,b
  8261  001800  338D               	rrcf	(??___flmul+2)& (0+255),f,b
  8262  001802  338C               	rrcf	(??___flmul+1)& (0+255),f,b
  8263  001804  338B               	rrcf	??___flmul& (0+255),f,b
  8264  001806                     u11100:
  8265  001806  2EE8               	decfsz	wreg,f,c
  8266  001808  EFFE  F00B         	goto	u11105
  8267  00180C  518B               	movf	??___flmul& (0+255),w,b
  8268  00180E  2796               	addwf	___flmul@prod& (0+255),f,b
  8269  001810  518C               	movf	(??___flmul+1)& (0+255),w,b
  8270  001812  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8271  001814  518D               	movf	(??___flmul+2)& (0+255),w,b
  8272  001816  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8273  001818  518E               	movf	(??___flmul+3)& (0+255),w,b
  8274  00181A  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8275  00181C                     
  8276                           ; BSR set to: 0
  8277  00181C  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  8278  001820  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  8279  001824  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  8280  001828  6B91               	clrf	___flmul@grs& (0+255),b
  8281  00182A                     
  8282                           ; BSR set to: 0
  8283  00182A  5190               	movf	___flmul@aexp& (0+255),w,b
  8284  00182C  C095  F08B         	movff	___flmul@bexp,??___flmul
  8285  001830  6B8C               	clrf	(??___flmul+1)& (0+255),b
  8286  001832  278B               	addwf	??___flmul& (0+255),f,b
  8287  001834  0E00               	movlw	0
  8288  001836  238C               	addwfc	(??___flmul+1)& (0+255),f,b
  8289  001838  0E82               	movlw	130
  8290  00183A  258B               	addwf	??___flmul& (0+255),w,b
  8291  00183C  6F9A               	movwf	___flmul@temp& (0+255),b
  8292  00183E  0EFF               	movlw	255
  8293  001840  218C               	addwfc	(??___flmul+1)& (0+255),w,b
  8294  001842  6F9B               	movwf	(___flmul@temp+1)& (0+255),b
  8295  001844  EF39  F00C         	goto	l10538
  8296  001848                     l10532:
  8297                           
  8298                           ; BSR set to: 0
  8299  001848  90D8               	bcf	status,0,c
  8300  00184A  3796               	rlcf	___flmul@prod& (0+255),f,b
  8301  00184C  3797               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8302  00184E  3798               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8303  001850  3799               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8304  001852                     
  8305                           ; BSR set to: 0
  8306  001852  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  8307  001854  EF2E  F00C         	goto	u11111
  8308  001858  EF30  F00C         	goto	u11110
  8309  00185C                     u11111:
  8310  00185C  EF31  F00C         	goto	l2611
  8311  001860                     u11110:
  8312  001860                     
  8313                           ; BSR set to: 0
  8314  001860  8196               	bsf	___flmul@prod& (0+255),0,b
  8315  001862                     l2611:
  8316                           
  8317                           ; BSR set to: 0
  8318  001862  90D8               	bcf	status,0,c
  8319  001864  3791               	rlcf	___flmul@grs& (0+255),f,b
  8320  001866  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8321  001868  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8322  00186A  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8323  00186C  079A               	decf	___flmul@temp& (0+255),f,b
  8324  00186E  A0D8               	btfss	status,0,c
  8325  001870  079B               	decf	(___flmul@temp+1)& (0+255),f,b
  8326  001872                     l10538:
  8327                           
  8328                           ; BSR set to: 0
  8329  001872  AF98               	btfss	(___flmul@prod+2)& (0+255),7,b
  8330  001874  EF3E  F00C         	goto	u11121
  8331  001878  EF40  F00C         	goto	u11120
  8332  00187C                     u11121:
  8333  00187C  EF24  F00C         	goto	l10532
  8334  001880                     u11120:
  8335  001880                     
  8336                           ; BSR set to: 0
  8337  001880  0E00               	movlw	0
  8338  001882  6F90               	movwf	___flmul@aexp& (0+255),b
  8339  001884                     
  8340                           ; BSR set to: 0
  8341  001884  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  8342  001886  EF47  F00C         	goto	u11131
  8343  00188A  EF49  F00C         	goto	u11130
  8344  00188E                     u11131:
  8345  00188E  EF6D  F00C         	goto	l2613
  8346  001892                     u11130:
  8347  001892                     
  8348                           ; BSR set to: 0
  8349  001892  0EFF               	movlw	255
  8350  001894  1591               	andwf	___flmul@grs& (0+255),w,b
  8351  001896  6F8B               	movwf	??___flmul& (0+255),b
  8352  001898  0EFF               	movlw	255
  8353  00189A  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
  8354  00189C  6F8C               	movwf	(??___flmul+1)& (0+255),b
  8355  00189E  0EFF               	movlw	255
  8356  0018A0  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
  8357  0018A2  6F8D               	movwf	(??___flmul+2)& (0+255),b
  8358  0018A4  0E7F               	movlw	127
  8359  0018A6  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
  8360  0018A8  6F8E               	movwf	(??___flmul+3)& (0+255),b
  8361  0018AA  518B               	movf	??___flmul& (0+255),w,b
  8362  0018AC  118C               	iorwf	(??___flmul+1)& (0+255),w,b
  8363  0018AE  118D               	iorwf	(??___flmul+2)& (0+255),w,b
  8364  0018B0  118E               	iorwf	(??___flmul+3)& (0+255),w,b
  8365  0018B2  B4D8               	btfsc	status,2,c
  8366  0018B4  EF5E  F00C         	goto	u11141
  8367  0018B8  EF60  F00C         	goto	u11140
  8368  0018BC                     u11141:
  8369  0018BC  EF64  F00C         	goto	l2614
  8370  0018C0                     u11140:
  8371  0018C0                     l10546:
  8372                           
  8373                           ; BSR set to: 0
  8374  0018C0  0E01               	movlw	1
  8375  0018C2  6F90               	movwf	___flmul@aexp& (0+255),b
  8376  0018C4  EF6D  F00C         	goto	l2613
  8377  0018C8                     l2614:
  8378                           
  8379                           ; BSR set to: 0
  8380  0018C8  A196               	btfss	___flmul@prod& (0+255),0,b
  8381  0018CA  EF69  F00C         	goto	u11151
  8382  0018CE  EF6B  F00C         	goto	u11150
  8383  0018D2                     u11151:
  8384  0018D2  EF6D  F00C         	goto	l2613
  8385  0018D6                     u11150:
  8386  0018D6  EF60  F00C         	goto	l10546
  8387  0018DA                     l2613:
  8388                           
  8389                           ; BSR set to: 0
  8390  0018DA  5190               	movf	___flmul@aexp& (0+255),w,b
  8391  0018DC  B4D8               	btfsc	status,2,c
  8392  0018DE  EF73  F00C         	goto	u11161
  8393  0018E2  EF75  F00C         	goto	u11160
  8394  0018E6                     u11161:
  8395  0018E6  EF99  F00C         	goto	l10558
  8396  0018EA                     u11160:
  8397  0018EA                     
  8398                           ; BSR set to: 0
  8399  0018EA  0E01               	movlw	1
  8400  0018EC  2796               	addwf	___flmul@prod& (0+255),f,b
  8401  0018EE  0E00               	movlw	0
  8402  0018F0  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8403  0018F2  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8404  0018F4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8405  0018F6                     
  8406                           ; BSR set to: 0
  8407  0018F6  A199               	btfss	(___flmul@prod+3)& (0+255),0,b
  8408  0018F8  EF80  F00C         	goto	u11171
  8409  0018FC  EF82  F00C         	goto	u11170
  8410  001900                     u11171:
  8411  001900  EF99  F00C         	goto	l10558
  8412  001904                     u11170:
  8413  001904                     
  8414                           ; BSR set to: 0
  8415  001904  C096  F08B         	movff	___flmul@prod,??___flmul
  8416  001908  C097  F08C         	movff	___flmul@prod+1,??___flmul+1
  8417  00190C  C098  F08D         	movff	___flmul@prod+2,??___flmul+2
  8418  001910  C099  F08E         	movff	___flmul@prod+3,??___flmul+3
  8419  001914  358E               	rlcf	(??___flmul+3)& (0+255),w,b
  8420  001916  338E               	rrcf	(??___flmul+3)& (0+255),f,b
  8421  001918  338D               	rrcf	(??___flmul+2)& (0+255),f,b
  8422  00191A  338C               	rrcf	(??___flmul+1)& (0+255),f,b
  8423  00191C  338B               	rrcf	??___flmul& (0+255),f,b
  8424  00191E  C08B  F096         	movff	??___flmul,___flmul@prod
  8425  001922  C08C  F097         	movff	??___flmul+1,___flmul@prod+1
  8426  001926  C08D  F098         	movff	??___flmul+2,___flmul@prod+2
  8427  00192A  C08E  F099         	movff	??___flmul+3,___flmul@prod+3
  8428  00192E                     
  8429                           ; BSR set to: 0
  8430  00192E  4B9A               	infsnz	___flmul@temp& (0+255),f,b
  8431  001930  2B9B               	incf	(___flmul@temp+1)& (0+255),f,b
  8432  001932                     l10558:
  8433                           
  8434                           ; BSR set to: 0
  8435  001932  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8436  001934  EFA4  F00C         	goto	u11181
  8437  001938  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8438  00193A  E108               	bnz	u11180
  8439  00193C  299A               	incf	___flmul@temp& (0+255),w,b
  8440  00193E  A0D8               	btfss	status,0,c
  8441  001940  EFA4  F00C         	goto	u11181
  8442  001944  EFA6  F00C         	goto	u11180
  8443  001948                     u11181:
  8444  001948  EFB0  F00C         	goto	l10562
  8445  00194C                     u11180:
  8446  00194C                     
  8447                           ; BSR set to: 0
  8448  00194C  0E00               	movlw	0
  8449  00194E  6F96               	movwf	___flmul@prod& (0+255),b
  8450  001950  0E00               	movlw	0
  8451  001952  6F97               	movwf	(___flmul@prod+1)& (0+255),b
  8452  001954  0E80               	movlw	128
  8453  001956  6F98               	movwf	(___flmul@prod+2)& (0+255),b
  8454  001958  0E7F               	movlw	127
  8455  00195A  6F99               	movwf	(___flmul@prod+3)& (0+255),b
  8456  00195C  EFDE  F00C         	goto	l10574
  8457  001960                     l10562:
  8458                           
  8459                           ; BSR set to: 0
  8460  001960  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8461  001962  EFBD  F00C         	goto	u11190
  8462  001966  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8463  001968  E106               	bnz	u11191
  8464  00196A  059A               	decf	___flmul@temp& (0+255),w,b
  8465  00196C  B0D8               	btfsc	status,0,c
  8466  00196E  EFBB  F00C         	goto	u11191
  8467  001972  EFBD  F00C         	goto	u11190
  8468  001976                     u11191:
  8469  001976  EFC9  F00C         	goto	l2621
  8470  00197A                     u11190:
  8471  00197A                     
  8472                           ; BSR set to: 0
  8473  00197A  0E00               	movlw	0
  8474  00197C  6F96               	movwf	___flmul@prod& (0+255),b
  8475  00197E  0E00               	movlw	0
  8476  001980  6F97               	movwf	(___flmul@prod+1)& (0+255),b
  8477  001982  0E00               	movlw	0
  8478  001984  6F98               	movwf	(___flmul@prod+2)& (0+255),b
  8479  001986  0E00               	movlw	0
  8480  001988  6F99               	movwf	(___flmul@prod+3)& (0+255),b
  8481  00198A  0E00               	movlw	0
  8482  00198C  6F8F               	movwf	___flmul@sign& (0+255),b
  8483  00198E  EFDE  F00C         	goto	l10574
  8484  001992                     l2621:
  8485                           
  8486                           ; BSR set to: 0
  8487  001992  C09A  F095         	movff	___flmul@temp,___flmul@bexp
  8488  001996                     
  8489                           ; BSR set to: 0
  8490  001996  0EFF               	movlw	255
  8491  001998  1796               	andwf	___flmul@prod& (0+255),f,b
  8492  00199A  0EFF               	movlw	255
  8493  00199C  1797               	andwf	(___flmul@prod+1)& (0+255),f,b
  8494  00199E  0E7F               	movlw	127
  8495  0019A0  1798               	andwf	(___flmul@prod+2)& (0+255),f,b
  8496  0019A2  0E00               	movlw	0
  8497  0019A4  1799               	andwf	(___flmul@prod+3)& (0+255),f,b
  8498  0019A6                     
  8499                           ; BSR set to: 0
  8500  0019A6  A195               	btfss	___flmul@bexp& (0+255),0,b
  8501  0019A8  EFD8  F00C         	goto	u11201
  8502  0019AC  EFDA  F00C         	goto	u11200
  8503  0019B0                     u11201:
  8504  0019B0  EFDB  F00C         	goto	l10572
  8505  0019B4                     u11200:
  8506  0019B4                     
  8507                           ; BSR set to: 0
  8508  0019B4  8F98               	bsf	(___flmul@prod+2)& (0+255),7,b
  8509  0019B6                     l10572:
  8510                           
  8511                           ; BSR set to: 0
  8512  0019B6  90D8               	bcf	status,0,c
  8513  0019B8  3195               	rrcf	___flmul@bexp& (0+255),w,b
  8514  0019BA  6F99               	movwf	(___flmul@prod+3)& (0+255),b
  8515  0019BC                     l10574:
  8516                           
  8517                           ; BSR set to: 0
  8518  0019BC  518F               	movf	___flmul@sign& (0+255),w,b
  8519  0019BE  1399               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8520  0019C0                     
  8521                           ; BSR set to: 0
  8522  0019C0  C096  F083         	movff	___flmul@prod,?___flmul
  8523  0019C4  C097  F084         	movff	___flmul@prod+1,?___flmul+1
  8524  0019C8  C098  F085         	movff	___flmul@prod+2,?___flmul+2
  8525  0019CC  C099  F086         	movff	___flmul@prod+3,?___flmul+3
  8526  0019D0                     l2608:
  8527                           
  8528                           ; BSR set to: 0
  8529  0019D0  0012               	return		;funcret
  8530  0019D2                     __end_of___flmul:
  8531                           	callstack 0
  8532                           
  8533 ;; *************** function _ECU_DC_Motor_Run_Left *****************
  8534 ;; Defined at:
  8535 ;;		line 39 in file "ECU/DC_Motor/ecu_dc_motor.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  8538 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  ret_value       1    0        unsigned char 
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      unsigned char 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;Total ram usage:        2 bytes
  8555 ;; Hardware stack levels used: 1
  8556 ;; Hardware stack levels required when called: 9
  8557 ;; This function calls:
  8558 ;;		_GPIO_Pin_Write_Logic
  8559 ;; This function is called by:
  8560 ;;		_Robot_Move_Backward
  8561 ;;		_Robot_Steer_Right_Backward
  8562 ;;		_Robot_Steer_Left_Backward
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text42
  8567  004B30                     __ptext42:
  8568                           	callstack 0
  8569  004B30                     _ECU_DC_Motor_Run_Left:
  8570                           	callstack 20
  8571  004B30                     
  8572                           ;ECU/DC_Motor/ecu_dc_motor.c: 42:     if(((void*)0) == dc_motor)
  8573  004B30  5022               	movf	ECU_DC_Motor_Run_Left@dc_motor^0,w,c
  8574  004B32  1023               	iorwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,w,c
  8575  004B34  A4D8               	btfss	status,2,c
  8576  004B36  EF9F  F025         	goto	u11601
  8577  004B3A  EFA1  F025         	goto	u11600
  8578  004B3E                     u11601:
  8579  004B3E  EFA3  F025         	goto	l10768
  8580  004B42                     u11600:
  8581  004B42                     
  8582                           ;ECU/DC_Motor/ecu_dc_motor.c: 45:     }
  8583  004B42  EFAB  F025         	goto	l60
  8584  004B46                     l10768:
  8585                           
  8586                           ;ECU/DC_Motor/ecu_dc_motor.c: 47:     {;ECU/DC_Motor/ecu_dc_motor.c: 48:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_HIGH );
  8587  004B46  C022  F01E         	movff	ECU_DC_Motor_Run_Left@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  8588  004B4A  C023  F01F         	movff	ECU_DC_Motor_Run_Left@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  8589  004B4E  0E01               	movlw	1
  8590  004B50  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  8591  004B52  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  8592  004B56                     l60:
  8593  004B56  0012               	return		;funcret
  8594  004B58                     __end_of_ECU_DC_Motor_Run_Left:
  8595                           	callstack 0
  8596                           
  8597 ;; *************** function _Get_Temp_HUM *****************
  8598 ;; Defined at:
  8599 ;;		line 13 in file "Robot/sensors/DHT11/DHT.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;  RH_Decimal      2    0[BANK0 ] PTR unsigned char 
  8602 ;;		 -> RH_Decimal(1), 
  8603 ;;  RH_Integral     2    2[BANK0 ] PTR unsigned char 
  8604 ;;		 -> RH_Integral(1), 
  8605 ;;  T_Decimal       2    4[BANK0 ] PTR unsigned char 
  8606 ;;		 -> T_Decimal(1), 
  8607 ;;  T_Integral      2    6[BANK0 ] PTR unsigned char 
  8608 ;;		 -> T_Integral(1), 
  8609 ;;  Checksum        2    8[BANK0 ] PTR unsigned char 
  8610 ;;		 -> Checksum(1), 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  ERRORSTATUS     1    0        unsigned char 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  1    wreg      unsigned char 
  8615 ;; Registers used:
  8616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8622 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;Total ram usage:       10 bytes
  8627 ;; Hardware stack levels used: 1
  8628 ;; Hardware stack levels required when called: 9
  8629 ;; This function calls:
  8630 ;;		_DHT11_Check_Response
  8631 ;;		_DHT11_Read_Data
  8632 ;;		_DHT11_Start
  8633 ;; This function is called by:
  8634 ;;		_main
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text43
  8639  003EEC                     __ptext43:
  8640                           	callstack 0
  8641  003EEC                     _Get_Temp_HUM:
  8642                           	callstack 21
  8643  003EEC                     
  8644                           ;Robot/sensors/DHT11/DHT.c: 16:     if ( ((void*)0)==RH_Decimal||((void*)0)==RH_Integral
      +                          ||((void*)0)==T_Decimal||((void*)0)==T_Integral||((void*)0)==Checksum)
  8645  003EEC  0100               	movlb	0	; () banked
  8646  003EEE  5160               	movf	Get_Temp_HUM@RH_Decimal& (0+255),w,b
  8647  003EF0  1161               	iorwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),w,b
  8648  003EF2  B4D8               	btfsc	status,2,c
  8649  003EF4  EF7E  F01F         	goto	u11951
  8650  003EF8  EF80  F01F         	goto	u11950
  8651  003EFC                     u11951:
  8652  003EFC  EFA4  F01F         	goto	l11244
  8653  003F00                     u11950:
  8654  003F00                     
  8655                           ; BSR set to: 0
  8656  003F00  5162               	movf	Get_Temp_HUM@RH_Integral& (0+255),w,b
  8657  003F02  1163               	iorwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),w,b
  8658  003F04  B4D8               	btfsc	status,2,c
  8659  003F06  EF87  F01F         	goto	u11961
  8660  003F0A  EF89  F01F         	goto	u11960
  8661  003F0E                     u11961:
  8662  003F0E  EFA4  F01F         	goto	l11244
  8663  003F12                     u11960:
  8664  003F12                     
  8665                           ; BSR set to: 0
  8666  003F12  5164               	movf	Get_Temp_HUM@T_Decimal& (0+255),w,b
  8667  003F14  1165               	iorwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),w,b
  8668  003F16  B4D8               	btfsc	status,2,c
  8669  003F18  EF90  F01F         	goto	u11971
  8670  003F1C  EF92  F01F         	goto	u11970
  8671  003F20                     u11971:
  8672  003F20  EFA4  F01F         	goto	l11244
  8673  003F24                     u11970:
  8674  003F24                     
  8675                           ; BSR set to: 0
  8676  003F24  5166               	movf	Get_Temp_HUM@T_Integral& (0+255),w,b
  8677  003F26  1167               	iorwf	(Get_Temp_HUM@T_Integral+1)& (0+255),w,b
  8678  003F28  B4D8               	btfsc	status,2,c
  8679  003F2A  EF99  F01F         	goto	u11981
  8680  003F2E  EF9B  F01F         	goto	u11980
  8681  003F32                     u11981:
  8682  003F32  EFA4  F01F         	goto	l11244
  8683  003F36                     u11980:
  8684  003F36                     
  8685                           ; BSR set to: 0
  8686  003F36  5168               	movf	Get_Temp_HUM@Checksum& (0+255),w,b
  8687  003F38  1169               	iorwf	(Get_Temp_HUM@Checksum+1)& (0+255),w,b
  8688  003F3A  A4D8               	btfss	status,2,c
  8689  003F3C  EFA2  F01F         	goto	u11991
  8690  003F40  EFA4  F01F         	goto	u11990
  8691  003F44                     u11991:
  8692  003F44  EFA6  F01F         	goto	l11246
  8693  003F48                     u11990:
  8694  003F48                     l11244:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;Robot/sensors/DHT11/DHT.c: 19:     }
  8698  003F48  EFC8  F01F         	goto	l1739
  8699  003F4C                     l11246:
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;Robot/sensors/DHT11/DHT.c: 21:     {;Robot/sensors/DHT11/DHT.c: 22:        DHT11_Start(
      +                          );
  8703  003F4C  ECE3  F025         	call	_DHT11_Start	;wreg free
  8704  003F50                     
  8705                           ;Robot/sensors/DHT11/DHT.c: 23:        DHT11_Check_Response();
  8706  003F50  EC18  F025         	call	_DHT11_Check_Response	;wreg free
  8707  003F54                     
  8708                           ;Robot/sensors/DHT11/DHT.c: 24:        DHT11_Read_Data(RH_Decimal);
  8709  003F54  C060  F01E         	movff	Get_Temp_HUM@RH_Decimal,DHT11_Read_Data@data
  8710  003F58  C061  F01F         	movff	Get_Temp_HUM@RH_Decimal+1,DHT11_Read_Data@data+1
  8711  003F5C  EC1A  F020         	call	_DHT11_Read_Data	;wreg free
  8712  003F60                     
  8713                           ;Robot/sensors/DHT11/DHT.c: 25:        DHT11_Read_Data(RH_Integral);
  8714  003F60  C062  F01E         	movff	Get_Temp_HUM@RH_Integral,DHT11_Read_Data@data
  8715  003F64  C063  F01F         	movff	Get_Temp_HUM@RH_Integral+1,DHT11_Read_Data@data+1
  8716  003F68  EC1A  F020         	call	_DHT11_Read_Data	;wreg free
  8717  003F6C                     
  8718                           ;Robot/sensors/DHT11/DHT.c: 26:        DHT11_Read_Data(T_Decimal);
  8719  003F6C  C064  F01E         	movff	Get_Temp_HUM@T_Decimal,DHT11_Read_Data@data
  8720  003F70  C065  F01F         	movff	Get_Temp_HUM@T_Decimal+1,DHT11_Read_Data@data+1
  8721  003F74  EC1A  F020         	call	_DHT11_Read_Data	;wreg free
  8722  003F78                     
  8723                           ;Robot/sensors/DHT11/DHT.c: 27:        DHT11_Read_Data(T_Integral);
  8724  003F78  C066  F01E         	movff	Get_Temp_HUM@T_Integral,DHT11_Read_Data@data
  8725  003F7C  C067  F01F         	movff	Get_Temp_HUM@T_Integral+1,DHT11_Read_Data@data+1
  8726  003F80  EC1A  F020         	call	_DHT11_Read_Data	;wreg free
  8727  003F84                     
  8728                           ;Robot/sensors/DHT11/DHT.c: 28:        DHT11_Read_Data(Checksum);
  8729  003F84  C068  F01E         	movff	Get_Temp_HUM@Checksum,DHT11_Read_Data@data
  8730  003F88  C069  F01F         	movff	Get_Temp_HUM@Checksum+1,DHT11_Read_Data@data+1
  8731  003F8C  EC1A  F020         	call	_DHT11_Read_Data	;wreg free
  8732  003F90                     l1739:
  8733  003F90  0012               	return		;funcret
  8734  003F92                     __end_of_Get_Temp_HUM:
  8735                           	callstack 0
  8736                           
  8737 ;; *************** function _DHT11_Start *****************
  8738 ;; Defined at:
  8739 ;;		line 32 in file "Robot/sensors/DHT11/DHT.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;Total ram usage:        1 bytes
  8758 ;; Hardware stack levels used: 1
  8759 ;; Hardware stack levels required when called: 8
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_Get_Temp_HUM
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text44
  8768  004BC6                     __ptext44:
  8769                           	callstack 0
  8770  004BC6                     _DHT11_Start:
  8771                           	callstack 21
  8772  004BC6                     
  8773                           ;Robot/sensors/DHT11/DHT.c: 34:     TRISDbits.TRISD7=GPIO_DIRECTION_OUTPUT;
  8774  004BC6  9E95               	bcf	149,7,c	;volatile
  8775                           
  8776                           ;Robot/sensors/DHT11/DHT.c: 35:     LATDbits.LATD7=GPIO_LOW;
  8777  004BC8  9E8C               	bcf	140,7,c	;volatile
  8778  004BCA                     
  8779                           ;Robot/sensors/DHT11/DHT.c: 36:     _delay((unsigned long)((18)*(8000000/4000.0)));
  8780  004BCA  0E2F               	movlw	47
  8781  004BCC  6E1E               	movwf	??_DHT11_Start^0,c
  8782  004BCE  0EC0               	movlw	192
  8783  004BD0                     u12527:
  8784  004BD0  2EE8               	decfsz	wreg,f,c
  8785  004BD2  D7FE               	bra	u12527
  8786  004BD4  2E1E               	decfsz	??_DHT11_Start^0,f,c
  8787  004BD6  D7FC               	bra	u12527
  8788  004BD8                     
  8789                           ;Robot/sensors/DHT11/DHT.c: 37:     LATDbits.LATD7=GPIO_HIGH;
  8790  004BD8  8E8C               	bsf	140,7,c	;volatile
  8791                           
  8792                           ;Robot/sensors/DHT11/DHT.c: 38:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8793  004BDA  0E14               	movlw	20
  8794  004BDC                     u12537:
  8795  004BDC  2EE8               	decfsz	wreg,f,c
  8796  004BDE  D7FE               	bra	u12537
  8797  004BE0                     
  8798                           ;Robot/sensors/DHT11/DHT.c: 39:     TRISDbits.TRISD7=GPIO_DIRECTION_INPUT;
  8799  004BE0  8E95               	bsf	149,7,c	;volatile
  8800  004BE2  0012               	return		;funcret
  8801  004BE4                     __end_of_DHT11_Start:
  8802                           	callstack 0
  8803                           
  8804 ;; *************** function _DHT11_Read_Data *****************
  8805 ;; Defined at:
  8806 ;;		line 47 in file "Robot/sensors/DHT11/DHT.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  data            2   29[COMRAM] PTR unsigned char 
  8809 ;;		 -> Checksum(1), T_Integral(1), T_Decimal(1), RH_Integral(1), 
  8810 ;;		 -> RH_Decimal(1), 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  i               1   32[COMRAM] unsigned char 
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;Total ram usage:        4 bytes
  8827 ;; Hardware stack levels used: 1
  8828 ;; Hardware stack levels required when called: 8
  8829 ;; This function calls:
  8830 ;;		Nothing
  8831 ;; This function is called by:
  8832 ;;		_Get_Temp_HUM
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text45
  8837  004034                     __ptext45:
  8838                           	callstack 0
  8839  004034                     _DHT11_Read_Data:
  8840                           	callstack 21
  8841  004034                     
  8842                           ;Robot/sensors/DHT11/DHT.c: 47: static void DHT11_Read_Data(uint8* data);Robot/sensors/D
      +                          HT11/DHT.c: 48: {;Robot/sensors/DHT11/DHT.c: 49:   uint8 i;;Robot/sensors/DHT11/DHT.c: 5
      +                          0:   *data = 0;
  8843  004034  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  8844  004038  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  8845  00403C  0E00               	movlw	0
  8846  00403E  6EDF               	movwf	indf2,c
  8847  004040                     
  8848                           ;Robot/sensors/DHT11/DHT.c: 51:     for(i=0;i<8;i++)
  8849  004040  0E00               	movlw	0
  8850  004042  6E21               	movwf	DHT11_Read_Data@i^0,c
  8851  004044                     l1759:
  8852  004044  AE83               	btfss	131,7,c	;volatile
  8853  004046  EF27  F020         	goto	u7851
  8854  00404A  EF29  F020         	goto	u7850
  8855  00404E                     u7851:
  8856  00404E  EF22  F020         	goto	l1759
  8857  004052                     u7850:
  8858  004052                     
  8859                           ;Robot/sensors/DHT11/DHT.c: 54:         _delay((unsigned long)((40)*(8000000/4000000.0))
      +                          );
  8860  004052  0E1A               	movlw	26
  8861  004054                     u12547:
  8862  004054  2EE8               	decfsz	wreg,f,c
  8863  004056  D7FE               	bra	u12547
  8864  004058  F000 F000          	nop2	
  8865  00405C                     
  8866                           ;Robot/sensors/DHT11/DHT.c: 55:         if(PORTDbits.RD7 & 1)
  8867  00405C  AE83               	btfss	131,7,c	;volatile
  8868  00405E  EF33  F020         	goto	u7861
  8869  004062  EF35  F020         	goto	u7860
  8870  004066                     u7861:
  8871  004066  EF44  F020         	goto	l8004
  8872  00406A                     u7860:
  8873  00406A                     
  8874                           ;Robot/sensors/DHT11/DHT.c: 56:         {;Robot/sensors/DHT11/DHT.c: 57:             *da
      +                          ta = (((*data)<<1)|1);
  8875  00406A  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  8876  00406E  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  8877  004072  50DF               	movf	indf2,w,c
  8878  004074  6E20               	movwf	??_DHT11_Read_Data^0,c
  8879  004076  80D8               	bsf	status,0,c
  8880  004078  3420               	rlcf	??_DHT11_Read_Data^0,w,c
  8881  00407A  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  8882  00407E  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  8883  004082  6EDF               	movwf	indf2,c
  8884                           
  8885                           ;Robot/sensors/DHT11/DHT.c: 59:         }
  8886  004084  EF51  F020         	goto	l1764
  8887  004088                     l8004:
  8888                           
  8889                           ;Robot/sensors/DHT11/DHT.c: 61:         {;Robot/sensors/DHT11/DHT.c: 62:             *da
      +                          ta = ((*data)<<1);
  8890  004088  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  8891  00408C  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  8892  004090  50DF               	movf	indf2,w,c
  8893  004092  6E20               	movwf	??_DHT11_Read_Data^0,c
  8894  004094  90D8               	bcf	status,0,c
  8895  004096  3420               	rlcf	??_DHT11_Read_Data^0,w,c
  8896  004098  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  8897  00409C  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  8898  0040A0  6EDF               	movwf	indf2,c
  8899  0040A2                     l1764:
  8900  0040A2  BE83               	btfsc	131,7,c	;volatile
  8901  0040A4  EF56  F020         	goto	u7871
  8902  0040A8  EF58  F020         	goto	u7870
  8903  0040AC                     u7871:
  8904  0040AC  EF51  F020         	goto	l1764
  8905  0040B0                     u7870:
  8906  0040B0                     
  8907                           ;Robot/sensors/DHT11/DHT.c: 66:     }
  8908  0040B0  2A21               	incf	DHT11_Read_Data@i^0,f,c
  8909  0040B2  0E07               	movlw	7
  8910  0040B4  6421               	cpfsgt	DHT11_Read_Data@i^0,c
  8911  0040B6  EF5F  F020         	goto	u7881
  8912  0040BA  EF61  F020         	goto	u7880
  8913  0040BE                     u7881:
  8914  0040BE  EF22  F020         	goto	l1759
  8915  0040C2                     u7880:
  8916  0040C2  0012               	return		;funcret
  8917  0040C4                     __end_of_DHT11_Read_Data:
  8918                           	callstack 0
  8919                           
  8920 ;; *************** function _DHT11_Check_Response *****************
  8921 ;; Defined at:
  8922 ;;		line 41 in file "Robot/sensors/DHT11/DHT.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;		None
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1    wreg      void 
  8929 ;; Registers used:
  8930 ;;		None
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;Total ram usage:        0 bytes
  8941 ;; Hardware stack levels used: 1
  8942 ;; Hardware stack levels required when called: 8
  8943 ;; This function calls:
  8944 ;;		Nothing
  8945 ;; This function is called by:
  8946 ;;		_Get_Temp_HUM
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text46
  8951  004A30                     __ptext46:
  8952                           	callstack 0
  8953  004A30                     _DHT11_Check_Response:
  8954                           	callstack 21
  8955  004A30                     l1745:
  8956  004A30  BE83               	btfsc	131,7,c	;volatile
  8957  004A32  EF1D  F025         	goto	u7821
  8958  004A36  EF1F  F025         	goto	u7820
  8959  004A3A                     u7821:
  8960  004A3A  EF18  F025         	goto	l1745
  8961  004A3E                     u7820:
  8962  004A3E                     l1748:
  8963  004A3E  AE83               	btfss	131,7,c	;volatile
  8964  004A40  EF24  F025         	goto	u7831
  8965  004A44  EF26  F025         	goto	u7830
  8966  004A48                     u7831:
  8967  004A48  EF1F  F025         	goto	l1748
  8968  004A4C                     u7830:
  8969  004A4C                     l1751:
  8970  004A4C  BE83               	btfsc	131,7,c	;volatile
  8971  004A4E  EF2B  F025         	goto	u7841
  8972  004A52  EF2D  F025         	goto	u7840
  8973  004A56                     u7841:
  8974  004A56  EF26  F025         	goto	l1751
  8975  004A5A                     u7840:
  8976  004A5A  0012               	return		;funcret
  8977  004A5C                     __end_of_DHT11_Check_Response:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function _Get_Distance *****************
  8981 ;; Defined at:
  8982 ;;		line 25 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  ultrasonic_o    2   35[BANK0 ] PTR const struct .
  8985 ;;		 -> ultrasonic(2), 
  8986 ;;  _tmr0_config    2   37[BANK0 ] PTR const struct .
  8987 ;;		 -> timer0(4), 
  8988 ;;  distance        2   39[BANK0 ] PTR float 
  8989 ;;		 -> distance(4), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  timer_val       2   41[BANK0 ] unsigned short 
  8992 ;;  logic           1   43[BANK0 ] enum E3185
  8993 ;;  ERRORSTATUS     1    0        unsigned char 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      unsigned char 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9003 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;Total ram usage:        9 bytes
  9008 ;; Hardware stack levels used: 1
  9009 ;; Hardware stack levels required when called: 10
  9010 ;; This function calls:
  9011 ;;		_GPIO_Pin_Read_Logic
  9012 ;;		_HAL_Timer0_Read_Val
  9013 ;;		_HAL_Timer0_Write_Val
  9014 ;;		___fldiv
  9015 ;;		___xxtofl
  9016 ;;		_send_trig_pulse
  9017 ;; This function is called by:
  9018 ;;		_main
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           	psect	text47
  9023  0030D0                     __ptext47:
  9024                           	callstack 0
  9025  0030D0                     _Get_Distance:
  9026                           	callstack 20
  9027  0030D0                     
  9028                           ;Robot/sensors/ultrasonic/ultrasonic.c: 25: Std_ReturnType Get_Distance(const ultrasonic
      +                          _config_st* ultrasonic_object,const timer0_config_st *_tmr0_config,float32* distance);Ro
      +                          bot/sensors/ultrasonic/ultrasonic.c: 26: {;Robot/sensors/ultrasonic/ultrasonic.c: 27:   
      +                            logic_et logic=0;
  9029  0030D0  0E00               	movlw	0
  9030  0030D2  0100               	movlb	0	; () banked
  9031  0030D4  6F8B               	movwf	Get_Distance@logic& (0+255),b
  9032                           
  9033                           ;Robot/sensors/ultrasonic/ultrasonic.c: 28:     uint16 timer_val=0;
  9034  0030D6  0E00               	movlw	0
  9035  0030D8  6F8A               	movwf	(Get_Distance@timer_val+1)& (0+255),b
  9036  0030DA  0E00               	movlw	0
  9037  0030DC  6F89               	movwf	Get_Distance@timer_val& (0+255),b
  9038  0030DE                     
  9039                           ; BSR set to: 0
  9040                           ;Robot/sensors/ultrasonic/ultrasonic.c: 30:     if ( ((void*)0)==distance)
  9041  0030DE  5187               	movf	Get_Distance@distance& (0+255),w,b
  9042  0030E0  1188               	iorwf	(Get_Distance@distance+1)& (0+255),w,b
  9043  0030E2  A4D8               	btfss	status,2,c
  9044  0030E4  EF76  F018         	goto	u12001
  9045  0030E8  EF78  F018         	goto	u12000
  9046  0030EC                     u12001:
  9047  0030EC  EF7A  F018         	goto	l1795
  9048  0030F0                     u12000:
  9049  0030F0                     
  9050                           ; BSR set to: 0
  9051                           ;Robot/sensors/ultrasonic/ultrasonic.c: 34:     }
  9052  0030F0  EFEE  F018         	goto	l1803
  9053  0030F4                     l1795:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;Robot/sensors/ultrasonic/ultrasonic.c: 36:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           37:         (T0CONbits.TMR0ON = 0 );
  9057  0030F4  9ED5               	bcf	213,7,c	;volatile
  9058  0030F6                     
  9059                           ; BSR set to: 0
  9060                           ;Robot/sensors/ultrasonic/ultrasonic.c: 38:         HAL_Timer0_Write_Val(_tmr0_config ,0
      +                          );
  9061  0030F6  C085  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
  9062  0030FA  C086  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
  9063  0030FE  0E00               	movlw	0
  9064  003100  6E21               	movwf	(HAL_Timer0_Write_Val@val+1)^0,c
  9065  003102  0E00               	movlw	0
  9066  003104  6E20               	movwf	HAL_Timer0_Write_Val@val^0,c
  9067  003106  EC5A  F025         	call	_HAL_Timer0_Write_Val	;wreg free
  9068  00310A                     
  9069                           ;Robot/sensors/ultrasonic/ultrasonic.c: 39:         send_trig_pulse(ultrasonic_object);
  9070  00310A  C083  F022         	movff	Get_Distance@ultrasonic_object,send_trig_pulse@ultrasonic_object
  9071  00310E  C084  F023         	movff	Get_Distance@ultrasonic_object+1,send_trig_pulse@ultrasonic_object+1
  9072  003112  EC2E  F025         	call	_send_trig_pulse	;wreg free
  9073                           
  9074                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
  9075  003116  EF99  F018         	goto	l11274
  9076  00311A                     l11272:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;Robot/sensors/ultrasonic/ultrasonic.c: 41:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 42:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
  9080  00311A  0E01               	movlw	1
  9081  00311C  2583               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
  9082  00311E  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
  9083  003120  0E00               	movlw	0
  9084  003122  2184               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
  9085  003124  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
  9086  003126  0E8B               	movlw	low Get_Distance@logic
  9087  003128  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
  9088  00312A  0E00               	movlw	high Get_Distance@logic
  9089  00312C  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
  9090  00312E  EC1F  F01F         	call	_GPIO_Pin_Read_Logic	;wreg free
  9091  003132                     l11274:
  9092                           
  9093                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
  9094  003132  0100               	movlb	0	; () banked
  9095  003134  518B               	movf	Get_Distance@logic& (0+255),w,b
  9096  003136  B4D8               	btfsc	status,2,c
  9097  003138  EFA0  F018         	goto	u12011
  9098  00313C  EFA2  F018         	goto	u12010
  9099  003140                     u12011:
  9100  003140  EF8D  F018         	goto	l11272
  9101  003144                     u12010:
  9102  003144                     
  9103                           ; BSR set to: 0
  9104                           ;Robot/sensors/ultrasonic/ultrasonic.c: 44:         (T0CONbits.TMR0ON = 1 );
  9105  003144  8ED5               	bsf	213,7,c	;volatile
  9106                           
  9107                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
  9108  003146  EFB1  F018         	goto	l11278
  9109  00314A                     l11276:
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;Robot/sensors/ultrasonic/ultrasonic.c: 46:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 47:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
  9113  00314A  0E01               	movlw	1
  9114  00314C  2583               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
  9115  00314E  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
  9116  003150  0E00               	movlw	0
  9117  003152  2184               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
  9118  003154  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
  9119  003156  0E8B               	movlw	low Get_Distance@logic
  9120  003158  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
  9121  00315A  0E00               	movlw	high Get_Distance@logic
  9122  00315C  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
  9123  00315E  EC1F  F01F         	call	_GPIO_Pin_Read_Logic	;wreg free
  9124  003162                     l11278:
  9125                           
  9126                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
  9127  003162  0100               	movlb	0	; () banked
  9128  003164  518B               	movf	Get_Distance@logic& (0+255),w,b
  9129  003166  A4D8               	btfss	status,2,c
  9130  003168  EFB8  F018         	goto	u12021
  9131  00316C  EFBA  F018         	goto	u12020
  9132  003170                     u12021:
  9133  003170  EFA5  F018         	goto	l11276
  9134  003174                     u12020:
  9135  003174                     
  9136                           ; BSR set to: 0
  9137                           ;Robot/sensors/ultrasonic/ultrasonic.c: 49:         (T0CONbits.TMR0ON = 0 );
  9138  003174  9ED5               	bcf	213,7,c	;volatile
  9139  003176                     
  9140                           ; BSR set to: 0
  9141                           ;Robot/sensors/ultrasonic/ultrasonic.c: 50:         HAL_Timer0_Read_Val(_tmr0_config ,&t
      +                          imer_val);
  9142  003176  C085  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Read_Val@_tmr0_config
  9143  00317A  C086  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Read_Val@_tmr0_config+1
  9144  00317E  0E89               	movlw	low Get_Distance@timer_val
  9145  003180  6E20               	movwf	HAL_Timer0_Read_Val@result^0,c
  9146  003182  0E00               	movlw	high Get_Distance@timer_val
  9147  003184  6E21               	movwf	(HAL_Timer0_Read_Val@result+1)^0,c
  9148  003186  ECC5  F01E         	call	_HAL_Timer0_Read_Val	;wreg free
  9149                           
  9150                           ;Robot/sensors/ultrasonic/ultrasonic.c: 52:         *distance=timer_val/(float32)58.8;
  9151  00318A  C089  F01E         	movff	Get_Distance@timer_val,___xxtofl@val
  9152  00318E  C08A  F01F         	movff	Get_Distance@timer_val+1,___xxtofl@val+1
  9153  003192  6A20               	clrf	(___xxtofl@val+2)^0,c
  9154  003194  6A21               	clrf	(___xxtofl@val+3)^0,c
  9155  003196  0E00               	movlw	0
  9156  003198  EC48  F012         	call	___xxtofl
  9157  00319C  C01E  F06A         	movff	?___xxtofl,___fldiv@b
  9158  0031A0  C01F  F06B         	movff	?___xxtofl+1,___fldiv@b+1
  9159  0031A4  C020  F06C         	movff	?___xxtofl+2,___fldiv@b+2
  9160  0031A8  C021  F06D         	movff	?___xxtofl+3,___fldiv@b+3
  9161  0031AC  0E33               	movlw	51
  9162  0031AE  0100               	movlb	0	; () banked
  9163  0031B0  6F6E               	movwf	___fldiv@a& (0+255),b
  9164  0031B2  0E33               	movlw	51
  9165  0031B4  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  9166  0031B6  0E6B               	movlw	107
  9167  0031B8  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  9168  0031BA  0E42               	movlw	66
  9169  0031BC  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  9170  0031BE  ECE9  F00C         	call	___fldiv	;wreg free
  9171  0031C2  C087  FFD9         	movff	Get_Distance@distance,fsr2l
  9172  0031C6  C088  FFDA         	movff	Get_Distance@distance+1,fsr2h
  9173  0031CA  0100               	movlb	0	; () banked
  9174  0031CC  C06A  FFDE         	movff	?___fldiv,postinc2
  9175  0031D0  C06B  FFDE         	movff	?___fldiv+1,postinc2
  9176  0031D4  C06C  FFDE         	movff	?___fldiv+2,postinc2
  9177  0031D8  C06D  FFDE         	movff	?___fldiv+3,postinc2
  9178  0031DC                     l1803:
  9179                           
  9180                           ; BSR set to: 0
  9181  0031DC  0012               	return		;funcret
  9182  0031DE                     __end_of_Get_Distance:
  9183                           	callstack 0
  9184                           
  9185 ;; *************** function _send_trig_pulse *****************
  9186 ;; Defined at:
  9187 ;;		line 57 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  ultrasonic_o    2   33[COMRAM] PTR const struct .
  9190 ;;		 -> ultrasonic(2), 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;Total ram usage:        2 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; Hardware stack levels required when called: 9
  9209 ;; This function calls:
  9210 ;;		_GPIO_Pin_Write_Logic
  9211 ;; This function is called by:
  9212 ;;		_Get_Distance
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text48
  9217  004A5C                     __ptext48:
  9218                           	callstack 0
  9219  004A5C                     _send_trig_pulse:
  9220                           	callstack 20
  9221  004A5C                     
  9222                           ;Robot/sensors/ultrasonic/ultrasonic.c: 57: static void send_trig_pulse(const ultrasonic
      +                          _config_st* ultrasonic_object);Robot/sensors/ultrasonic/ultrasonic.c: 58: {;Robot/sensor
      +                          s/ultrasonic/ultrasonic.c: 59:     GPIO_Pin_Write_Logic(&(ultrasonic_object->trig_pin),G
      +                          PIO_HIGH);
  9223  004A5C  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
  9224  004A60  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
  9225  004A64  0E01               	movlw	1
  9226  004A66  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9227  004A68  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  9228  004A6C                     
  9229                           ;Robot/sensors/ultrasonic/ultrasonic.c: 60:     _delay((unsigned long)((10)*(8000000/400
      +                          0000.0)));
  9230  004A6C  0E06               	movlw	6
  9231  004A6E                     u12557:
  9232  004A6E  2EE8               	decfsz	wreg,f,c
  9233  004A70  D7FE               	bra	u12557
  9234  004A72  F000 F000          	nop2	
  9235  004A76                     
  9236                           ;Robot/sensors/ultrasonic/ultrasonic.c: 61:     GPIO_Pin_Write_Logic(&(ultrasonic_object
      +                          ->trig_pin),GPIO_LOW);
  9237  004A76  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
  9238  004A7A  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
  9239  004A7E  0E00               	movlw	0
  9240  004A80  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9241  004A82  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
  9242  004A86  0012               	return		;funcret
  9243  004A88                     __end_of_send_trig_pulse:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function ___xxtofl *****************
  9247 ;; Defined at:
  9248 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  sign            1    wreg     unsigned char 
  9251 ;;  val             4   29[COMRAM] long 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  sign            1    4[BANK0 ] unsigned char 
  9254 ;;  arg             4    6[BANK0 ] unsigned long 
  9255 ;;  exp             1    5[BANK0 ] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  4   29[COMRAM] unsigned char 
  9258 ;; Registers used:
  9259 ;;		wreg, status,2, status,0
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;Total ram usage:       14 bytes
  9270 ;; Hardware stack levels used: 1
  9271 ;; Hardware stack levels required when called: 8
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_Servo_SetAngle
  9276 ;;		_CCP_PWM_Set_Duty
  9277 ;;		_I2C_Master_Mode_Clock_Configurations
  9278 ;;		_Get_Distance
  9279 ;;		_async_config_baud_rate_gen
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text49
  9284  002490                     __ptext49:
  9285                           	callstack 0
  9286  002490                     ___xxtofl:
  9287                           	callstack 20
  9288                           
  9289                           ;incstack = 0
  9290                           ;___xxtofl@sign stored from wreg
  9291  002490  0100               	movlb	0	; () banked
  9292  002492  6F64               	movwf	___xxtofl@sign& (0+255),b
  9293  002494  0100               	movlb	0	; () banked
  9294  002496  5164               	movf	___xxtofl@sign& (0+255),w,b
  9295  002498  B4D8               	btfsc	status,2,c
  9296  00249A  EF51  F012         	goto	u10451
  9297  00249E  EF53  F012         	goto	u10450
  9298  0024A2                     u10451:
  9299  0024A2  EF75  F012         	goto	l2645
  9300  0024A6                     u10450:
  9301  0024A6                     
  9302                           ; BSR set to: 0
  9303  0024A6  BE21               	btfsc	(___xxtofl@val+3)^0,7,c
  9304  0024A8  EF5A  F012         	goto	u10460
  9305  0024AC  EF58  F012         	goto	u10461
  9306  0024B0                     u10461:
  9307  0024B0  EF75  F012         	goto	l2645
  9308  0024B4                     u10460:
  9309  0024B4                     
  9310                           ; BSR set to: 0
  9311  0024B4  C01E  F060         	movff	___xxtofl@val,??___xxtofl
  9312  0024B8  C01F  F061         	movff	___xxtofl@val+1,??___xxtofl+1
  9313  0024BC  C020  F062         	movff	___xxtofl@val+2,??___xxtofl+2
  9314  0024C0  C021  F063         	movff	___xxtofl@val+3,??___xxtofl+3
  9315  0024C4  1F60               	comf	??___xxtofl& (0+255),f,b
  9316  0024C6  1F61               	comf	(??___xxtofl+1)& (0+255),f,b
  9317  0024C8  1F62               	comf	(??___xxtofl+2)& (0+255),f,b
  9318  0024CA  1F63               	comf	(??___xxtofl+3)& (0+255),f,b
  9319  0024CC  2B60               	incf	??___xxtofl& (0+255),f,b
  9320  0024CE  0E00               	movlw	0
  9321  0024D0  2361               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9322  0024D2  2362               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9323  0024D4  2363               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9324  0024D6  C060  F066         	movff	??___xxtofl,___xxtofl@arg
  9325  0024DA  C061  F067         	movff	??___xxtofl+1,___xxtofl@arg+1
  9326  0024DE  C062  F068         	movff	??___xxtofl+2,___xxtofl@arg+2
  9327  0024E2  C063  F069         	movff	??___xxtofl+3,___xxtofl@arg+3
  9328  0024E6  EF7D  F012         	goto	l10068
  9329  0024EA                     l2645:
  9330                           
  9331                           ; BSR set to: 0
  9332  0024EA  C01E  F066         	movff	___xxtofl@val,___xxtofl@arg
  9333  0024EE  C01F  F067         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9334  0024F2  C020  F068         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9335  0024F6  C021  F069         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9336  0024FA                     l10068:
  9337                           
  9338                           ; BSR set to: 0
  9339  0024FA  501E               	movf	___xxtofl@val^0,w,c
  9340  0024FC  101F               	iorwf	(___xxtofl@val+1)^0,w,c
  9341  0024FE  1020               	iorwf	(___xxtofl@val+2)^0,w,c
  9342  002500  1021               	iorwf	(___xxtofl@val+3)^0,w,c
  9343  002502  A4D8               	btfss	status,2,c
  9344  002504  EF86  F012         	goto	u10471
  9345  002508  EF88  F012         	goto	u10470
  9346  00250C                     u10471:
  9347  00250C  EF92  F012         	goto	l10074
  9348  002510                     u10470:
  9349  002510                     
  9350                           ; BSR set to: 0
  9351  002510  0E00               	movlw	0
  9352  002512  6E1E               	movwf	?___xxtofl^0,c
  9353  002514  0E00               	movlw	0
  9354  002516  6E1F               	movwf	(?___xxtofl+1)^0,c
  9355  002518  0E00               	movlw	0
  9356  00251A  6E20               	movwf	(?___xxtofl+2)^0,c
  9357  00251C  0E00               	movlw	0
  9358  00251E  6E21               	movwf	(?___xxtofl+3)^0,c
  9359  002520  EF23  F013         	goto	l2648
  9360  002524                     l10074:
  9361                           
  9362                           ; BSR set to: 0
  9363  002524  0E96               	movlw	150
  9364  002526  6F65               	movwf	___xxtofl@exp& (0+255),b
  9365  002528  EF9C  F012         	goto	l10078
  9366  00252C                     l10076:
  9367                           
  9368                           ; BSR set to: 0
  9369  00252C  2B65               	incf	___xxtofl@exp& (0+255),f,b
  9370  00252E  90D8               	bcf	status,0,c
  9371  002530  3369               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9372  002532  3368               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9373  002534  3367               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9374  002536  3366               	rrcf	___xxtofl@arg& (0+255),f,b
  9375  002538                     l10078:
  9376                           
  9377                           ; BSR set to: 0
  9378  002538  0E00               	movlw	0
  9379  00253A  1566               	andwf	___xxtofl@arg& (0+255),w,b
  9380  00253C  6F60               	movwf	??___xxtofl& (0+255),b
  9381  00253E  0E00               	movlw	0
  9382  002540  1567               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9383  002542  6F61               	movwf	(??___xxtofl+1)& (0+255),b
  9384  002544  0E00               	movlw	0
  9385  002546  1568               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9386  002548  6F62               	movwf	(??___xxtofl+2)& (0+255),b
  9387  00254A  0EFE               	movlw	254
  9388  00254C  1569               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9389  00254E  6F63               	movwf	(??___xxtofl+3)& (0+255),b
  9390  002550  5160               	movf	??___xxtofl& (0+255),w,b
  9391  002552  1161               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9392  002554  1162               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9393  002556  1163               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9394  002558  A4D8               	btfss	status,2,c
  9395  00255A  EFB1  F012         	goto	u10481
  9396  00255E  EFB3  F012         	goto	u10480
  9397  002562                     u10481:
  9398  002562  EF96  F012         	goto	l10076
  9399  002566                     u10480:
  9400  002566  EFC1  F012         	goto	l2652
  9401  00256A                     l10080:
  9402                           
  9403                           ; BSR set to: 0
  9404  00256A  2B65               	incf	___xxtofl@exp& (0+255),f,b
  9405  00256C                     
  9406                           ; BSR set to: 0
  9407  00256C  0E01               	movlw	1
  9408  00256E  2766               	addwf	___xxtofl@arg& (0+255),f,b
  9409  002570  0E00               	movlw	0
  9410  002572  2367               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9411  002574  2368               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9412  002576  2369               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9413  002578                     
  9414                           ; BSR set to: 0
  9415  002578  90D8               	bcf	status,0,c
  9416  00257A  3369               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9417  00257C  3368               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9418  00257E  3367               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9419  002580  3366               	rrcf	___xxtofl@arg& (0+255),f,b
  9420  002582                     l2652:
  9421                           
  9422                           ; BSR set to: 0
  9423  002582  0E00               	movlw	0
  9424  002584  1566               	andwf	___xxtofl@arg& (0+255),w,b
  9425  002586  6F60               	movwf	??___xxtofl& (0+255),b
  9426  002588  0E00               	movlw	0
  9427  00258A  1567               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9428  00258C  6F61               	movwf	(??___xxtofl+1)& (0+255),b
  9429  00258E  0E00               	movlw	0
  9430  002590  1568               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9431  002592  6F62               	movwf	(??___xxtofl+2)& (0+255),b
  9432  002594  0EFF               	movlw	255
  9433  002596  1569               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9434  002598  6F63               	movwf	(??___xxtofl+3)& (0+255),b
  9435  00259A  5160               	movf	??___xxtofl& (0+255),w,b
  9436  00259C  1161               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9437  00259E  1162               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9438  0025A0  1163               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9439  0025A2  A4D8               	btfss	status,2,c
  9440  0025A4  EFD6  F012         	goto	u10491
  9441  0025A8  EFD8  F012         	goto	u10490
  9442  0025AC                     u10491:
  9443  0025AC  EFB5  F012         	goto	l10080
  9444  0025B0                     u10490:
  9445  0025B0  EFE0  F012         	goto	l10088
  9446  0025B4                     l10086:
  9447                           
  9448                           ; BSR set to: 0
  9449  0025B4  0765               	decf	___xxtofl@exp& (0+255),f,b
  9450  0025B6  90D8               	bcf	status,0,c
  9451  0025B8  3766               	rlcf	___xxtofl@arg& (0+255),f,b
  9452  0025BA  3767               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9453  0025BC  3768               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9454  0025BE  3769               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9455  0025C0                     l10088:
  9456                           
  9457                           ; BSR set to: 0
  9458  0025C0  BF68               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9459  0025C2  EFE5  F012         	goto	u10501
  9460  0025C6  EFE7  F012         	goto	u10500
  9461  0025CA                     u10501:
  9462  0025CA  EFEF  F012         	goto	l2659
  9463  0025CE                     u10500:
  9464  0025CE                     
  9465                           ; BSR set to: 0
  9466  0025CE  0E02               	movlw	2
  9467  0025D0  6165               	cpfslt	___xxtofl@exp& (0+255),b
  9468  0025D2  EFED  F012         	goto	u10511
  9469  0025D6  EFEF  F012         	goto	u10510
  9470  0025DA                     u10511:
  9471  0025DA  EFDA  F012         	goto	l10086
  9472  0025DE                     u10510:
  9473  0025DE                     l2659:
  9474                           
  9475                           ; BSR set to: 0
  9476  0025DE  B165               	btfsc	___xxtofl@exp& (0+255),0,b
  9477  0025E0  EFF4  F012         	goto	u10521
  9478  0025E4  EFF6  F012         	goto	u10520
  9479  0025E8                     u10521:
  9480  0025E8  EFF7  F012         	goto	l10094
  9481  0025EC                     u10520:
  9482  0025EC                     
  9483                           ; BSR set to: 0
  9484  0025EC  9F68               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9485  0025EE                     l10094:
  9486                           
  9487                           ; BSR set to: 0
  9488  0025EE  90D8               	bcf	status,0,c
  9489  0025F0  3365               	rrcf	___xxtofl@exp& (0+255),f,b
  9490  0025F2                     
  9491                           ; BSR set to: 0
  9492  0025F2  C065  F060         	movff	___xxtofl@exp,??___xxtofl
  9493  0025F6  6B61               	clrf	(??___xxtofl+1)& (0+255),b
  9494  0025F8  6B62               	clrf	(??___xxtofl+2)& (0+255),b
  9495  0025FA  6B63               	clrf	(??___xxtofl+3)& (0+255),b
  9496  0025FC  C060  F063         	movff	??___xxtofl,??___xxtofl+3
  9497  002600  6B62               	clrf	(??___xxtofl+2)& (0+255),b
  9498  002602  6B61               	clrf	(??___xxtofl+1)& (0+255),b
  9499  002604  6B60               	clrf	??___xxtofl& (0+255),b
  9500  002606  5160               	movf	??___xxtofl& (0+255),w,b
  9501  002608  1366               	iorwf	___xxtofl@arg& (0+255),f,b
  9502  00260A  5161               	movf	(??___xxtofl+1)& (0+255),w,b
  9503  00260C  1367               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9504  00260E  5162               	movf	(??___xxtofl+2)& (0+255),w,b
  9505  002610  1368               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9506  002612  5163               	movf	(??___xxtofl+3)& (0+255),w,b
  9507  002614  1369               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9508  002616                     
  9509                           ; BSR set to: 0
  9510  002616  5164               	movf	___xxtofl@sign& (0+255),w,b
  9511  002618  B4D8               	btfsc	status,2,c
  9512  00261A  EF11  F013         	goto	u10531
  9513  00261E  EF13  F013         	goto	u10530
  9514  002622                     u10531:
  9515  002622  EF1B  F013         	goto	l10104
  9516  002626                     u10530:
  9517  002626                     
  9518                           ; BSR set to: 0
  9519  002626  BE21               	btfsc	(___xxtofl@val+3)^0,7,c
  9520  002628  EF1A  F013         	goto	u10540
  9521  00262C  EF18  F013         	goto	u10541
  9522  002630                     u10541:
  9523  002630  EF1B  F013         	goto	l10104
  9524  002634                     u10540:
  9525  002634                     
  9526                           ; BSR set to: 0
  9527  002634  8F69               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9528  002636                     l10104:
  9529                           
  9530                           ; BSR set to: 0
  9531  002636  C066  F01E         	movff	___xxtofl@arg,?___xxtofl
  9532  00263A  C067  F01F         	movff	___xxtofl@arg+1,?___xxtofl+1
  9533  00263E  C068  F020         	movff	___xxtofl@arg+2,?___xxtofl+2
  9534  002642  C069  F021         	movff	___xxtofl@arg+3,?___xxtofl+3
  9535  002646                     l2648:
  9536                           
  9537                           ; BSR set to: 0
  9538  002646  0012               	return		;funcret
  9539  002648                     __end_of___xxtofl:
  9540                           	callstack 0
  9541                           
  9542 ;; *************** function ___fldiv *****************
  9543 ;; Defined at:
  9544 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  b               4   10[BANK0 ] unsigned char 
  9547 ;;  a               4   14[BANK0 ] unsigned char 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;  grs             4   29[BANK0 ] unsigned long 
  9550 ;;  rem             4   22[BANK0 ] unsigned long 
  9551 ;;  new_exp         2   27[BANK0 ] short 
  9552 ;;  aexp            1   34[BANK0 ] unsigned char 
  9553 ;;  bexp            1   33[BANK0 ] unsigned char 
  9554 ;;  sign            1   26[BANK0 ] unsigned char 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  4   10[BANK0 ] unsigned char 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9564 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;Total ram usage:       25 bytes
  9569 ;; Hardware stack levels used: 1
  9570 ;; Hardware stack levels required when called: 8
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_CCP_PWM_Set_Duty
  9575 ;;		_I2C_Master_Mode_Clock_Configurations
  9576 ;;		_Get_Distance
  9577 ;;		_async_config_baud_rate_gen
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text50
  9582  0019D2                     __ptext50:
  9583                           	callstack 0
  9584  0019D2                     ___fldiv:
  9585                           	callstack 17
  9586  0019D2  0100               	movlb	0	; () banked
  9587  0019D4  516D               	movf	(___fldiv@b+3)& (0+255),w,b
  9588  0019D6  0B80               	andlw	128
  9589  0019D8  6F7A               	movwf	___fldiv@sign& (0+255),b
  9590  0019DA  516D               	movf	(___fldiv@b+3)& (0+255),w,b
  9591  0019DC  256D               	addwf	(___fldiv@b+3)& (0+255),w,b
  9592  0019DE  6F81               	movwf	___fldiv@bexp& (0+255),b
  9593  0019E0                     
  9594                           ; BSR set to: 0
  9595  0019E0  AF6C               	btfss	(___fldiv@b+2)& (0+255),7,b
  9596  0019E2  EFF5  F00C         	goto	u10151
  9597  0019E6  EFF7  F00C         	goto	u10150
  9598  0019EA                     u10151:
  9599  0019EA  EFF8  F00C         	goto	l9886
  9600  0019EE                     u10150:
  9601  0019EE                     
  9602                           ; BSR set to: 0
  9603  0019EE  8181               	bsf	___fldiv@bexp& (0+255),0,b
  9604  0019F0                     l9886:
  9605                           
  9606                           ; BSR set to: 0
  9607  0019F0  5181               	movf	___fldiv@bexp& (0+255),w,b
  9608  0019F2  B4D8               	btfsc	status,2,c
  9609  0019F4  EFFE  F00C         	goto	u10161
  9610  0019F8  EF00  F00D         	goto	u10160
  9611  0019FC                     u10161:
  9612  0019FC  EF15  F00D         	goto	l9896
  9613  001A00                     u10160:
  9614  001A00                     
  9615                           ; BSR set to: 0
  9616  001A00  2981               	incf	___fldiv@bexp& (0+255),w,b
  9617  001A02  A4D8               	btfss	status,2,c
  9618  001A04  EF06  F00D         	goto	u10171
  9619  001A08  EF08  F00D         	goto	u10170
  9620  001A0C                     u10171:
  9621  001A0C  EF10  F00D         	goto	l9892
  9622  001A10                     u10170:
  9623  001A10                     
  9624                           ; BSR set to: 0
  9625  001A10  0E00               	movlw	0
  9626  001A12  6F6A               	movwf	___fldiv@b& (0+255),b
  9627  001A14  0E00               	movlw	0
  9628  001A16  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  9629  001A18  0E00               	movlw	0
  9630  001A1A  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  9631  001A1C  0E00               	movlw	0
  9632  001A1E  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  9633  001A20                     l9892:
  9634                           
  9635                           ; BSR set to: 0
  9636  001A20  8F6C               	bsf	(___fldiv@b+2)& (0+255),7,b
  9637  001A22                     
  9638                           ; BSR set to: 0
  9639  001A22  0E00               	movlw	0
  9640  001A24  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  9641  001A26  EF1D  F00D         	goto	l9898
  9642  001A2A                     l9896:
  9643                           
  9644                           ; BSR set to: 0
  9645  001A2A  0E00               	movlw	0
  9646  001A2C  6F6A               	movwf	___fldiv@b& (0+255),b
  9647  001A2E  0E00               	movlw	0
  9648  001A30  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  9649  001A32  0E00               	movlw	0
  9650  001A34  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  9651  001A36  0E00               	movlw	0
  9652  001A38  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  9653  001A3A                     l9898:
  9654                           
  9655                           ; BSR set to: 0
  9656  001A3A  5171               	movf	(___fldiv@a+3)& (0+255),w,b
  9657  001A3C  0B80               	andlw	128
  9658  001A3E  1B7A               	xorwf	___fldiv@sign& (0+255),f,b
  9659  001A40                     
  9660                           ; BSR set to: 0
  9661  001A40  5171               	movf	(___fldiv@a+3)& (0+255),w,b
  9662  001A42  2571               	addwf	(___fldiv@a+3)& (0+255),w,b
  9663  001A44  6F82               	movwf	___fldiv@aexp& (0+255),b
  9664  001A46                     
  9665                           ; BSR set to: 0
  9666  001A46  AF70               	btfss	(___fldiv@a+2)& (0+255),7,b
  9667  001A48  EF28  F00D         	goto	u10181
  9668  001A4C  EF2A  F00D         	goto	u10180
  9669  001A50                     u10181:
  9670  001A50  EF2B  F00D         	goto	l9906
  9671  001A54                     u10180:
  9672  001A54                     
  9673                           ; BSR set to: 0
  9674  001A54  8182               	bsf	___fldiv@aexp& (0+255),0,b
  9675  001A56                     l9906:
  9676                           
  9677                           ; BSR set to: 0
  9678  001A56  5182               	movf	___fldiv@aexp& (0+255),w,b
  9679  001A58  B4D8               	btfsc	status,2,c
  9680  001A5A  EF31  F00D         	goto	u10191
  9681  001A5E  EF33  F00D         	goto	u10190
  9682  001A62                     u10191:
  9683  001A62  EF48  F00D         	goto	l9916
  9684  001A66                     u10190:
  9685  001A66                     
  9686                           ; BSR set to: 0
  9687  001A66  2982               	incf	___fldiv@aexp& (0+255),w,b
  9688  001A68  A4D8               	btfss	status,2,c
  9689  001A6A  EF39  F00D         	goto	u10201
  9690  001A6E  EF3B  F00D         	goto	u10200
  9691  001A72                     u10201:
  9692  001A72  EF43  F00D         	goto	l9912
  9693  001A76                     u10200:
  9694  001A76                     
  9695                           ; BSR set to: 0
  9696  001A76  0E00               	movlw	0
  9697  001A78  6F6E               	movwf	___fldiv@a& (0+255),b
  9698  001A7A  0E00               	movlw	0
  9699  001A7C  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  9700  001A7E  0E00               	movlw	0
  9701  001A80  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  9702  001A82  0E00               	movlw	0
  9703  001A84  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  9704  001A86                     l9912:
  9705                           
  9706                           ; BSR set to: 0
  9707  001A86  8F70               	bsf	(___fldiv@a+2)& (0+255),7,b
  9708  001A88                     
  9709                           ; BSR set to: 0
  9710  001A88  0E00               	movlw	0
  9711  001A8A  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  9712  001A8C  EF50  F00D         	goto	l9918
  9713  001A90                     l9916:
  9714                           
  9715                           ; BSR set to: 0
  9716  001A90  0E00               	movlw	0
  9717  001A92  6F6E               	movwf	___fldiv@a& (0+255),b
  9718  001A94  0E00               	movlw	0
  9719  001A96  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  9720  001A98  0E00               	movlw	0
  9721  001A9A  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  9722  001A9C  0E00               	movlw	0
  9723  001A9E  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  9724  001AA0                     l9918:
  9725                           
  9726                           ; BSR set to: 0
  9727  001AA0  516E               	movf	___fldiv@a& (0+255),w,b
  9728  001AA2  116F               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9729  001AA4  1170               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9730  001AA6  1171               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9731  001AA8  A4D8               	btfss	status,2,c
  9732  001AAA  EF59  F00D         	goto	u10211
  9733  001AAE  EF5B  F00D         	goto	u10210
  9734  001AB2                     u10211:
  9735  001AB2  EF73  F00D         	goto	l9930
  9736  001AB6                     u10210:
  9737  001AB6                     
  9738                           ; BSR set to: 0
  9739  001AB6  0E00               	movlw	0
  9740  001AB8  6F6A               	movwf	___fldiv@b& (0+255),b
  9741  001ABA  0E00               	movlw	0
  9742  001ABC  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  9743  001ABE  0E00               	movlw	0
  9744  001AC0  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  9745  001AC2  0E00               	movlw	0
  9746  001AC4  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  9747  001AC6                     
  9748                           ; BSR set to: 0
  9749  001AC6  0E80               	movlw	128
  9750  001AC8  136C               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9751  001ACA  0E7F               	movlw	127
  9752  001ACC  136D               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9753  001ACE                     l9924:
  9754                           
  9755                           ; BSR set to: 0
  9756  001ACE  517A               	movf	___fldiv@sign& (0+255),w,b
  9757  001AD0  136D               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9758  001AD2                     
  9759                           ; BSR set to: 0
  9760  001AD2  C06A  F06A         	movff	___fldiv@b,?___fldiv
  9761  001AD6  C06B  F06B         	movff	___fldiv@b+1,?___fldiv+1
  9762  001ADA  C06C  F06C         	movff	___fldiv@b+2,?___fldiv+2
  9763  001ADE  C06D  F06D         	movff	___fldiv@b+3,?___fldiv+3
  9764  001AE2  EFB6  F00E         	goto	l2572
  9765  001AE6                     l9930:
  9766                           
  9767                           ; BSR set to: 0
  9768  001AE6  5181               	movf	___fldiv@bexp& (0+255),w,b
  9769  001AE8  A4D8               	btfss	status,2,c
  9770  001AEA  EF79  F00D         	goto	u10221
  9771  001AEE  EF7B  F00D         	goto	u10220
  9772  001AF2                     u10221:
  9773  001AF2  EF85  F00D         	goto	l9938
  9774  001AF6                     u10220:
  9775  001AF6                     
  9776                           ; BSR set to: 0
  9777  001AF6  0E00               	movlw	0
  9778  001AF8  6F6A               	movwf	?___fldiv& (0+255),b
  9779  001AFA  0E00               	movlw	0
  9780  001AFC  6F6B               	movwf	(?___fldiv+1)& (0+255),b
  9781  001AFE  0E00               	movlw	0
  9782  001B00  6F6C               	movwf	(?___fldiv+2)& (0+255),b
  9783  001B02  0E00               	movlw	0
  9784  001B04  6F6D               	movwf	(?___fldiv+3)& (0+255),b
  9785  001B06  EFB6  F00E         	goto	l2572
  9786  001B0A                     l9938:
  9787                           
  9788                           ; BSR set to: 0
  9789  001B0A  5182               	movf	___fldiv@aexp& (0+255),w,b
  9790  001B0C  C081  F072         	movff	___fldiv@bexp,??___fldiv
  9791  001B10  6B73               	clrf	(??___fldiv+1)& (0+255),b
  9792  001B12  5F72               	subwf	??___fldiv& (0+255),f,b
  9793  001B14  0E00               	movlw	0
  9794  001B16  5B73               	subwfb	(??___fldiv+1)& (0+255),f,b
  9795  001B18  0E7F               	movlw	127
  9796  001B1A  2572               	addwf	??___fldiv& (0+255),w,b
  9797  001B1C  6F7B               	movwf	___fldiv@new_exp& (0+255),b
  9798  001B1E  0E00               	movlw	0
  9799  001B20  2173               	addwfc	(??___fldiv+1)& (0+255),w,b
  9800  001B22  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9801  001B24                     
  9802                           ; BSR set to: 0
  9803  001B24  C06A  F076         	movff	___fldiv@b,___fldiv@rem
  9804  001B28  C06B  F077         	movff	___fldiv@b+1,___fldiv@rem+1
  9805  001B2C  C06C  F078         	movff	___fldiv@b+2,___fldiv@rem+2
  9806  001B30  C06D  F079         	movff	___fldiv@b+3,___fldiv@rem+3
  9807  001B34                     
  9808                           ; BSR set to: 0
  9809  001B34  0E00               	movlw	0
  9810  001B36  6F6A               	movwf	___fldiv@b& (0+255),b
  9811  001B38  0E00               	movlw	0
  9812  001B3A  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  9813  001B3C  0E00               	movlw	0
  9814  001B3E  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  9815  001B40  0E00               	movlw	0
  9816  001B42  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  9817  001B44                     
  9818                           ; BSR set to: 0
  9819  001B44  0E00               	movlw	0
  9820  001B46  6F7D               	movwf	___fldiv@grs& (0+255),b
  9821  001B48  0E00               	movlw	0
  9822  001B4A  6F7E               	movwf	(___fldiv@grs+1)& (0+255),b
  9823  001B4C  0E00               	movlw	0
  9824  001B4E  6F7F               	movwf	(___fldiv@grs+2)& (0+255),b
  9825  001B50  0E00               	movlw	0
  9826  001B52  6F80               	movwf	(___fldiv@grs+3)& (0+255),b
  9827  001B54                     
  9828                           ; BSR set to: 0
  9829  001B54  0E00               	movlw	0
  9830  001B56  6F82               	movwf	___fldiv@aexp& (0+255),b
  9831  001B58  EFE6  F00D         	goto	l2574
  9832  001B5C                     l9948:
  9833                           
  9834                           ; BSR set to: 0
  9835  001B5C  5182               	movf	___fldiv@aexp& (0+255),w,b
  9836  001B5E  B4D8               	btfsc	status,2,c
  9837  001B60  EFB4  F00D         	goto	u10231
  9838  001B64  EFB6  F00D         	goto	u10230
  9839  001B68                     u10231:
  9840  001B68  EFCD  F00D         	goto	l9956
  9841  001B6C                     u10230:
  9842  001B6C                     
  9843                           ; BSR set to: 0
  9844  001B6C  90D8               	bcf	status,0,c
  9845  001B6E  3776               	rlcf	___fldiv@rem& (0+255),f,b
  9846  001B70  3777               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9847  001B72  3778               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9848  001B74  3779               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9849  001B76  90D8               	bcf	status,0,c
  9850  001B78  376A               	rlcf	___fldiv@b& (0+255),f,b
  9851  001B7A  376B               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9852  001B7C  376C               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9853  001B7E  376D               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9854  001B80                     
  9855                           ; BSR set to: 0
  9856  001B80  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9857  001B82  EFC5  F00D         	goto	u10241
  9858  001B86  EFC7  F00D         	goto	u10240
  9859  001B8A                     u10241:
  9860  001B8A  EFC8  F00D         	goto	l2577
  9861  001B8E                     u10240:
  9862  001B8E                     
  9863                           ; BSR set to: 0
  9864  001B8E  816A               	bsf	___fldiv@b& (0+255),0,b
  9865  001B90                     l2577:
  9866                           
  9867                           ; BSR set to: 0
  9868  001B90  90D8               	bcf	status,0,c
  9869  001B92  377D               	rlcf	___fldiv@grs& (0+255),f,b
  9870  001B94  377E               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9871  001B96  377F               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9872  001B98  3780               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9873  001B9A                     l9956:
  9874                           
  9875                           ; BSR set to: 0
  9876  001B9A  516E               	movf	___fldiv@a& (0+255),w,b
  9877  001B9C  5D76               	subwf	___fldiv@rem& (0+255),w,b
  9878  001B9E  516F               	movf	(___fldiv@a+1)& (0+255),w,b
  9879  001BA0  5977               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9880  001BA2  5170               	movf	(___fldiv@a+2)& (0+255),w,b
  9881  001BA4  5978               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9882  001BA6  5171               	movf	(___fldiv@a+3)& (0+255),w,b
  9883  001BA8  5979               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9884  001BAA  A0D8               	btfss	status,0,c
  9885  001BAC  EFDA  F00D         	goto	u10251
  9886  001BB0  EFDC  F00D         	goto	u10250
  9887  001BB4                     u10251:
  9888  001BB4  EFE5  F00D         	goto	l9962
  9889  001BB8                     u10250:
  9890  001BB8                     
  9891                           ; BSR set to: 0
  9892  001BB8  8D80               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9893  001BBA                     
  9894                           ; BSR set to: 0
  9895  001BBA  516E               	movf	___fldiv@a& (0+255),w,b
  9896  001BBC  5F76               	subwf	___fldiv@rem& (0+255),f,b
  9897  001BBE  516F               	movf	(___fldiv@a+1)& (0+255),w,b
  9898  001BC0  5B77               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9899  001BC2  5170               	movf	(___fldiv@a+2)& (0+255),w,b
  9900  001BC4  5B78               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9901  001BC6  5171               	movf	(___fldiv@a+3)& (0+255),w,b
  9902  001BC8  5B79               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9903  001BCA                     l9962:
  9904                           
  9905                           ; BSR set to: 0
  9906  001BCA  2B82               	incf	___fldiv@aexp& (0+255),f,b
  9907  001BCC                     l2574:
  9908                           
  9909                           ; BSR set to: 0
  9910  001BCC  0E19               	movlw	25
  9911  001BCE  6582               	cpfsgt	___fldiv@aexp& (0+255),b
  9912  001BD0  EFEC  F00D         	goto	u10261
  9913  001BD4  EFEE  F00D         	goto	u10260
  9914  001BD8                     u10261:
  9915  001BD8  EFAE  F00D         	goto	l9948
  9916  001BDC                     u10260:
  9917  001BDC                     
  9918                           ; BSR set to: 0
  9919  001BDC  5176               	movf	___fldiv@rem& (0+255),w,b
  9920  001BDE  1177               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9921  001BE0  1178               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9922  001BE2  1179               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9923  001BE4  B4D8               	btfsc	status,2,c
  9924  001BE6  EFF7  F00D         	goto	u10271
  9925  001BEA  EFF9  F00D         	goto	u10270
  9926  001BEE                     u10271:
  9927  001BEE  EF11  F00E         	goto	l9974
  9928  001BF2                     u10270:
  9929  001BF2                     
  9930                           ; BSR set to: 0
  9931  001BF2  817D               	bsf	___fldiv@grs& (0+255),0,b
  9932  001BF4  EF11  F00E         	goto	l9974
  9933  001BF8                     l9968:
  9934                           
  9935                           ; BSR set to: 0
  9936  001BF8  90D8               	bcf	status,0,c
  9937  001BFA  376A               	rlcf	___fldiv@b& (0+255),f,b
  9938  001BFC  376B               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9939  001BFE  376C               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9940  001C00  376D               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9941  001C02                     
  9942                           ; BSR set to: 0
  9943  001C02  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9944  001C04  EF06  F00E         	goto	u10281
  9945  001C08  EF08  F00E         	goto	u10280
  9946  001C0C                     u10281:
  9947  001C0C  EF09  F00E         	goto	l2583
  9948  001C10                     u10280:
  9949  001C10                     
  9950                           ; BSR set to: 0
  9951  001C10  816A               	bsf	___fldiv@b& (0+255),0,b
  9952  001C12                     l2583:
  9953                           
  9954                           ; BSR set to: 0
  9955  001C12  90D8               	bcf	status,0,c
  9956  001C14  377D               	rlcf	___fldiv@grs& (0+255),f,b
  9957  001C16  377E               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9958  001C18  377F               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9959  001C1A  3780               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9960  001C1C  077B               	decf	___fldiv@new_exp& (0+255),f,b
  9961  001C1E  A0D8               	btfss	status,0,c
  9962  001C20  077C               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9963  001C22                     l9974:
  9964                           
  9965                           ; BSR set to: 0
  9966  001C22  AF6C               	btfss	(___fldiv@b+2)& (0+255),7,b
  9967  001C24  EF16  F00E         	goto	u10291
  9968  001C28  EF18  F00E         	goto	u10290
  9969  001C2C                     u10291:
  9970  001C2C  EFFC  F00D         	goto	l9968
  9971  001C30                     u10290:
  9972  001C30                     
  9973                           ; BSR set to: 0
  9974  001C30  0E00               	movlw	0
  9975  001C32  6F82               	movwf	___fldiv@aexp& (0+255),b
  9976  001C34                     
  9977                           ; BSR set to: 0
  9978  001C34  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9979  001C36  EF1F  F00E         	goto	u10301
  9980  001C3A  EF21  F00E         	goto	u10300
  9981  001C3E                     u10301:
  9982  001C3E  EF45  F00E         	goto	l2585
  9983  001C42                     u10300:
  9984  001C42                     
  9985                           ; BSR set to: 0
  9986  001C42  0EFF               	movlw	255
  9987  001C44  157D               	andwf	___fldiv@grs& (0+255),w,b
  9988  001C46  6F72               	movwf	??___fldiv& (0+255),b
  9989  001C48  0EFF               	movlw	255
  9990  001C4A  157E               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9991  001C4C  6F73               	movwf	(??___fldiv+1)& (0+255),b
  9992  001C4E  0EFF               	movlw	255
  9993  001C50  157F               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9994  001C52  6F74               	movwf	(??___fldiv+2)& (0+255),b
  9995  001C54  0E7F               	movlw	127
  9996  001C56  1580               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9997  001C58  6F75               	movwf	(??___fldiv+3)& (0+255),b
  9998  001C5A  5172               	movf	??___fldiv& (0+255),w,b
  9999  001C5C  1173               	iorwf	(??___fldiv+1)& (0+255),w,b
 10000  001C5E  1174               	iorwf	(??___fldiv+2)& (0+255),w,b
 10001  001C60  1175               	iorwf	(??___fldiv+3)& (0+255),w,b
 10002  001C62  B4D8               	btfsc	status,2,c
 10003  001C64  EF36  F00E         	goto	u10311
 10004  001C68  EF38  F00E         	goto	u10310
 10005  001C6C                     u10311:
 10006  001C6C  EF3C  F00E         	goto	l2586
 10007  001C70                     u10310:
 10008  001C70                     l9982:
 10009                           
 10010                           ; BSR set to: 0
 10011  001C70  0E01               	movlw	1
 10012  001C72  6F82               	movwf	___fldiv@aexp& (0+255),b
 10013  001C74  EF45  F00E         	goto	l2585
 10014  001C78                     l2586:
 10015                           
 10016                           ; BSR set to: 0
 10017  001C78  A16A               	btfss	___fldiv@b& (0+255),0,b
 10018  001C7A  EF41  F00E         	goto	u10321
 10019  001C7E  EF43  F00E         	goto	u10320
 10020  001C82                     u10321:
 10021  001C82  EF45  F00E         	goto	l2585
 10022  001C86                     u10320:
 10023  001C86  EF38  F00E         	goto	l9982
 10024  001C8A                     l2585:
 10025                           
 10026                           ; BSR set to: 0
 10027  001C8A  5182               	movf	___fldiv@aexp& (0+255),w,b
 10028  001C8C  B4D8               	btfsc	status,2,c
 10029  001C8E  EF4B  F00E         	goto	u10331
 10030  001C92  EF4D  F00E         	goto	u10330
 10031  001C96                     u10331:
 10032  001C96  EF71  F00E         	goto	l9994
 10033  001C9A                     u10330:
 10034  001C9A                     
 10035                           ; BSR set to: 0
 10036  001C9A  0E01               	movlw	1
 10037  001C9C  276A               	addwf	___fldiv@b& (0+255),f,b
 10038  001C9E  0E00               	movlw	0
 10039  001CA0  236B               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10040  001CA2  236C               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10041  001CA4  236D               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10042  001CA6                     
 10043                           ; BSR set to: 0
 10044  001CA6  A16D               	btfss	(___fldiv@b+3)& (0+255),0,b
 10045  001CA8  EF58  F00E         	goto	u10341
 10046  001CAC  EF5A  F00E         	goto	u10340
 10047  001CB0                     u10341:
 10048  001CB0  EF71  F00E         	goto	l9994
 10049  001CB4                     u10340:
 10050  001CB4                     
 10051                           ; BSR set to: 0
 10052  001CB4  C06A  F072         	movff	___fldiv@b,??___fldiv
 10053  001CB8  C06B  F073         	movff	___fldiv@b+1,??___fldiv+1
 10054  001CBC  C06C  F074         	movff	___fldiv@b+2,??___fldiv+2
 10055  001CC0  C06D  F075         	movff	___fldiv@b+3,??___fldiv+3
 10056  001CC4  3575               	rlcf	(??___fldiv+3)& (0+255),w,b
 10057  001CC6  3375               	rrcf	(??___fldiv+3)& (0+255),f,b
 10058  001CC8  3374               	rrcf	(??___fldiv+2)& (0+255),f,b
 10059  001CCA  3373               	rrcf	(??___fldiv+1)& (0+255),f,b
 10060  001CCC  3372               	rrcf	??___fldiv& (0+255),f,b
 10061  001CCE  C072  F06A         	movff	??___fldiv,___fldiv@b
 10062  001CD2  C073  F06B         	movff	??___fldiv+1,___fldiv@b+1
 10063  001CD6  C074  F06C         	movff	??___fldiv+2,___fldiv@b+2
 10064  001CDA  C075  F06D         	movff	??___fldiv+3,___fldiv@b+3
 10065  001CDE                     
 10066                           ; BSR set to: 0
 10067  001CDE  4B7B               	infsnz	___fldiv@new_exp& (0+255),f,b
 10068  001CE0  2B7C               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10069  001CE2                     l9994:
 10070                           
 10071                           ; BSR set to: 0
 10072  001CE2  BF7C               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10073  001CE4  EF7C  F00E         	goto	u10351
 10074  001CE8  517C               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10075  001CEA  E108               	bnz	u10350
 10076  001CEC  297B               	incf	___fldiv@new_exp& (0+255),w,b
 10077  001CEE  A0D8               	btfss	status,0,c
 10078  001CF0  EF7C  F00E         	goto	u10351
 10079  001CF4  EF7E  F00E         	goto	u10350
 10080  001CF8                     u10351:
 10081  001CF8  EF89  F00E         	goto	l9998
 10082  001CFC                     u10350:
 10083  001CFC                     
 10084                           ; BSR set to: 0
 10085  001CFC  0E00               	movlw	0
 10086  001CFE  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10087  001D00  697B               	setf	___fldiv@new_exp& (0+255),b
 10088  001D02  0E00               	movlw	0
 10089  001D04  6F6A               	movwf	___fldiv@b& (0+255),b
 10090  001D06  0E00               	movlw	0
 10091  001D08  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10092  001D0A  0E00               	movlw	0
 10093  001D0C  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10094  001D0E  0E00               	movlw	0
 10095  001D10  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10096  001D12                     l9998:
 10097                           
 10098                           ; BSR set to: 0
 10099  001D12  BF7C               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10100  001D14  EF96  F00E         	goto	u10360
 10101  001D18  517C               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10102  001D1A  E106               	bnz	u10361
 10103  001D1C  057B               	decf	___fldiv@new_exp& (0+255),w,b
 10104  001D1E  B0D8               	btfsc	status,0,c
 10105  001D20  EF94  F00E         	goto	u10361
 10106  001D24  EF96  F00E         	goto	u10360
 10107  001D28                     u10361:
 10108  001D28  EFA4  F00E         	goto	l10002
 10109  001D2C                     u10360:
 10110  001D2C                     
 10111                           ; BSR set to: 0
 10112  001D2C  0E00               	movlw	0
 10113  001D2E  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10114  001D30  0E00               	movlw	0
 10115  001D32  6F7B               	movwf	___fldiv@new_exp& (0+255),b
 10116  001D34  0E00               	movlw	0
 10117  001D36  6F6A               	movwf	___fldiv@b& (0+255),b
 10118  001D38  0E00               	movlw	0
 10119  001D3A  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10120  001D3C  0E00               	movlw	0
 10121  001D3E  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10122  001D40  0E00               	movlw	0
 10123  001D42  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10124  001D44  0E00               	movlw	0
 10125  001D46  6F7A               	movwf	___fldiv@sign& (0+255),b
 10126  001D48                     l10002:
 10127                           
 10128                           ; BSR set to: 0
 10129  001D48  C07B  F081         	movff	___fldiv@new_exp,___fldiv@bexp
 10130  001D4C                     
 10131                           ; BSR set to: 0
 10132  001D4C  A181               	btfss	___fldiv@bexp& (0+255),0,b
 10133  001D4E  EFAB  F00E         	goto	u10371
 10134  001D52  EFAD  F00E         	goto	u10370
 10135  001D56                     u10371:
 10136  001D56  EFB0  F00E         	goto	l10008
 10137  001D5A                     u10370:
 10138  001D5A                     
 10139                           ; BSR set to: 0
 10140  001D5A  8F6C               	bsf	(___fldiv@b+2)& (0+255),7,b
 10141  001D5C  EFB1  F00E         	goto	l10010
 10142  001D60                     l10008:
 10143                           
 10144                           ; BSR set to: 0
 10145  001D60  9F6C               	bcf	(___fldiv@b+2)& (0+255),7,b
 10146  001D62                     l10010:
 10147                           
 10148                           ; BSR set to: 0
 10149  001D62  90D8               	bcf	status,0,c
 10150  001D64  3181               	rrcf	___fldiv@bexp& (0+255),w,b
 10151  001D66  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10152  001D68  EF67  F00D         	goto	l9924
 10153  001D6C                     l2572:
 10154                           
 10155                           ; BSR set to: 0
 10156  001D6C  0012               	return		;funcret
 10157  001D6E                     __end_of___fldiv:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _HAL_Timer0_Write_Val *****************
 10161 ;; Defined at:
 10162 ;;		line 179 in file "MCAL/Timer0/hal_timer0.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 10165 ;;		 -> timer0(4), 
 10166 ;;  val             2   31[COMRAM] unsigned short 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;  ret_value       1   33[COMRAM] unsigned char 
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      unsigned char 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, status,0
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;Total ram usage:        5 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; Hardware stack levels required when called: 8
 10185 ;; This function calls:
 10186 ;;		Nothing
 10187 ;; This function is called by:
 10188 ;;		_HAL_Timer0_Init
 10189 ;;		_Get_Distance
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text51
 10194  004AB4                     __ptext51:
 10195                           	callstack 0
 10196  004AB4                     _HAL_Timer0_Write_Val:
 10197                           	callstack 19
 10198  004AB4                     
 10199                           ;MCAL/Timer0/hal_timer0.c: 179: Std_ReturnType HAL_Timer0_Write_Val(const timer0_config_
      +                          st *_tmr0_config ,;MCAL/Timer0/hal_timer0.c: 180:         uint16_t val);MCAL/Timer0/hal_
      +                          timer0.c: 181: {;MCAL/Timer0/hal_timer0.c: 182:     Std_ReturnType ret_value = (Std_Retu
      +                          rnType) 0x01 ;
 10200  004AB4  0E01               	movlw	1
 10201  004AB6  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 10202  004AB8                     
 10203                           ;MCAL/Timer0/hal_timer0.c: 184:     if(((void*)0) == _tmr0_config)
 10204  004AB8  501E               	movf	HAL_Timer0_Write_Val@_tmr0_config^0,w,c
 10205  004ABA  101F               	iorwf	(HAL_Timer0_Write_Val@_tmr0_config+1)^0,w,c
 10206  004ABC  A4D8               	btfss	status,2,c
 10207  004ABE  EF63  F025         	goto	u11011
 10208  004AC2  EF65  F025         	goto	u11010
 10209  004AC6                     u11011:
 10210  004AC6  EF69  F025         	goto	l10444
 10211  004ACA                     u11010:
 10212  004ACA                     
 10213                           ;MCAL/Timer0/hal_timer0.c: 185:     {;MCAL/Timer0/hal_timer0.c: 186:         ret_value =
      +                           (Std_ReturnType) 0x00 ;
 10214  004ACA  0E00               	movlw	0
 10215  004ACC  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 10216                           
 10217                           ;MCAL/Timer0/hal_timer0.c: 187:     }
 10218  004ACE  EF6D  F025         	goto	l1537
 10219  004AD2                     l10444:
 10220                           
 10221                           ;MCAL/Timer0/hal_timer0.c: 189:     {;MCAL/Timer0/hal_timer0.c: 190:        TMR0H=(val)>
      +                          >8;
 10222  004AD2  5021               	movf	(HAL_Timer0_Write_Val@val+1)^0,w,c
 10223  004AD4  6ED7               	movwf	215,c	;volatile
 10224  004AD6                     
 10225                           ;MCAL/Timer0/hal_timer0.c: 191:        TMR0L=(uint8)(val);
 10226  004AD6  C020  FFD6         	movff	HAL_Timer0_Write_Val@val,4054	;volatile
 10227  004ADA                     l1537:
 10228                           
 10229                           ;MCAL/Timer0/hal_timer0.c: 212:     return ret_value ;
 10230  004ADA  5022               	movf	HAL_Timer0_Write_Val@ret_value^0,w,c
 10231  004ADC  0012               	return		;funcret
 10232  004ADE                     __end_of_HAL_Timer0_Write_Val:
 10233                           	callstack 0
 10234                           
 10235 ;; *************** function _HAL_Timer0_Read_Val *****************
 10236 ;; Defined at:
 10237 ;;		line 141 in file "MCAL/Timer0/hal_timer0.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 10240 ;;		 -> timer0(4), 
 10241 ;;  result          2   31[COMRAM] PTR unsigned short 
 10242 ;;		 -> Get_Distance@timer_val(2), 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  l_low_byte      1   34[COMRAM] unsigned char 
 10245 ;;  l_high_byte     1   33[COMRAM] unsigned char 
 10246 ;;  ret_value       1    0        unsigned char 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      unsigned char 
 10249 ;; Registers used:
 10250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;Total ram usage:       10 bytes
 10261 ;; Hardware stack levels used: 1
 10262 ;; Hardware stack levels required when called: 8
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_Get_Distance
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text52
 10271  003D8A                     __ptext52:
 10272                           	callstack 0
 10273  003D8A                     _HAL_Timer0_Read_Val:
 10274                           	callstack 21
 10275  003D8A                     
 10276                           ;MCAL/Timer0/hal_timer0.c: 145:     uint8_t l_low_byte = 0;
 10277  003D8A  0E00               	movlw	0
 10278  003D8C  6E23               	movwf	HAL_Timer0_Read_Val@l_low_byte^0,c
 10279                           
 10280                           ;MCAL/Timer0/hal_timer0.c: 146:     uint8_t l_high_byte = 0;
 10281  003D8E  0E00               	movlw	0
 10282  003D90  6E22               	movwf	HAL_Timer0_Read_Val@l_high_byte^0,c
 10283  003D92                     
 10284                           ;MCAL/Timer0/hal_timer0.c: 148:     if((((void*)0) == _tmr0_config) || (((void*)0) == re
      +                          sult))
 10285  003D92  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 10286  003D94  101F               	iorwf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 10287  003D96  B4D8               	btfsc	status,2,c
 10288  003D98  EFD0  F01E         	goto	u11761
 10289  003D9C  EFD2  F01E         	goto	u11760
 10290  003DA0                     u11761:
 10291  003DA0  EFDB  F01E         	goto	l10918
 10292  003DA4                     u11760:
 10293  003DA4  5020               	movf	HAL_Timer0_Read_Val@result^0,w,c
 10294  003DA6  1021               	iorwf	(HAL_Timer0_Read_Val@result+1)^0,w,c
 10295  003DA8  A4D8               	btfss	status,2,c
 10296  003DAA  EFD9  F01E         	goto	u11771
 10297  003DAE  EFDB  F01E         	goto	u11770
 10298  003DB2                     u11771:
 10299  003DB2  EFDD  F01E         	goto	l10920
 10300  003DB6                     u11770:
 10301  003DB6                     l10918:
 10302                           
 10303                           ;MCAL/Timer0/hal_timer0.c: 151:     }
 10304  003DB6  EF1E  F01F         	goto	l1533
 10305  003DBA                     l10920:
 10306                           
 10307                           ;MCAL/Timer0/hal_timer0.c: 153:     {;MCAL/Timer0/hal_timer0.c: 154:         if( 0x00U =
      +                          = _tmr0_config->reg_bit_size)
 10308  003DBA  EE20 F003          	lfsr	2,3
 10309  003DBE  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 10310  003DC0  26D9               	addwf	fsr2l,f,c
 10311  003DC2  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 10312  003DC4  22DA               	addwfc	fsr2h,f,c
 10313  003DC6  B2DF               	btfsc	indf2,1,c
 10314  003DC8  EFE8  F01E         	goto	u11781
 10315  003DCC  EFEA  F01E         	goto	u11780
 10316  003DD0                     u11781:
 10317  003DD0  EF03  F01F         	goto	l10926
 10318  003DD4                     u11780:
 10319  003DD4                     
 10320                           ;MCAL/Timer0/hal_timer0.c: 155:         {;MCAL/Timer0/hal_timer0.c: 156:             l_l
      +                          ow_byte = TMR0L ;
 10321  003DD4  CFD6 F023          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 10322                           
 10323                           ;MCAL/Timer0/hal_timer0.c: 157:             l_high_byte = TMR0H ;
 10324  003DD8  CFD7 F022          	movff	4055,HAL_Timer0_Read_Val@l_high_byte	;volatile
 10325  003DDC                     
 10326                           ;MCAL/Timer0/hal_timer0.c: 158:             *result = (uint16_t) (l_low_byte + (l_high_b
      +                          yte << 8));
 10327  003DDC  5022               	movf	HAL_Timer0_Read_Val@l_high_byte^0,w,c
 10328  003DDE  0100               	movlb	0	; () banked
 10329  003DE0  6F61               	movwf	(??_HAL_Timer0_Read_Val+1)& (0+255),b
 10330  003DE2  6B60               	clrf	??_HAL_Timer0_Read_Val& (0+255),b
 10331  003DE4  5023               	movf	HAL_Timer0_Read_Val@l_low_byte^0,w,c
 10332  003DE6  6F62               	movwf	(??_HAL_Timer0_Read_Val+2)& (0+255),b
 10333  003DE8  6B63               	clrf	(??_HAL_Timer0_Read_Val+3)& (0+255),b
 10334  003DEA  5160               	movf	??_HAL_Timer0_Read_Val& (0+255),w,b
 10335  003DEC  2762               	addwf	(??_HAL_Timer0_Read_Val+2)& (0+255),f,b
 10336  003DEE  5161               	movf	(??_HAL_Timer0_Read_Val+1)& (0+255),w,b
 10337  003DF0  2363               	addwfc	(??_HAL_Timer0_Read_Val+3)& (0+255),f,b
 10338  003DF2  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 10339  003DF6  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 10340  003DFA  C062  FFDE         	movff	??_HAL_Timer0_Read_Val+2,postinc2
 10341  003DFE  C063  FFDD         	movff	??_HAL_Timer0_Read_Val+3,postdec2
 10342                           
 10343                           ;MCAL/Timer0/hal_timer0.c: 159:         }
 10344  003E02  EF1E  F01F         	goto	l1533
 10345  003E06                     l10926:
 10346  003E06  EE20 F003          	lfsr	2,3
 10347  003E0A  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 10348  003E0C  26D9               	addwf	fsr2l,f,c
 10349  003E0E  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 10350  003E10  22DA               	addwfc	fsr2h,f,c
 10351  003E12  A2DF               	btfss	indf2,1,c
 10352  003E14  EF0E  F01F         	goto	u11791
 10353  003E18  EF10  F01F         	goto	u11790
 10354  003E1C                     u11791:
 10355  003E1C  EFDB  F01E         	goto	l10918
 10356  003E20                     u11790:
 10357  003E20                     
 10358                           ;MCAL/Timer0/hal_timer0.c: 161:         {;MCAL/Timer0/hal_timer0.c: 162:             l_l
      +                          ow_byte = TMR0L ;
 10359  003E20  CFD6 F023          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 10360  003E24                     
 10361                           ;MCAL/Timer0/hal_timer0.c: 163:             *result = (uint16_t) (l_low_byte);
 10362  003E24  5023               	movf	HAL_Timer0_Read_Val@l_low_byte^0,w,c
 10363  003E26  0100               	movlb	0	; () banked
 10364  003E28  6F60               	movwf	??_HAL_Timer0_Read_Val& (0+255),b
 10365  003E2A  6B61               	clrf	(??_HAL_Timer0_Read_Val+1)& (0+255),b
 10366  003E2C  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 10367  003E30  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 10368  003E34  C060  FFDE         	movff	??_HAL_Timer0_Read_Val,postinc2
 10369  003E38  C061  FFDD         	movff	??_HAL_Timer0_Read_Val+1,postdec2
 10370  003E3C                     l1533:
 10371  003E3C  0012               	return		;funcret
 10372  003E3E                     __end_of_HAL_Timer0_Read_Val:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _GPIO_Pin_Read_Logic *****************
 10376 ;; Defined at:
 10377 ;;		line 114 in file "MCAL/GPIO/hal_gpio.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 10380 ;;		 -> ultrasonic(2), 
 10381 ;;  logic           2   31[COMRAM] PTR enum E3185
 10382 ;;		 -> Get_Distance@logic(1), 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  ERRORSTATUS     1    0        unsigned char 
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      unsigned char 
 10387 ;; Registers used:
 10388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10397 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10398 ;;Total ram usage:        9 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; Hardware stack levels required when called: 8
 10401 ;; This function calls:
 10402 ;;		Nothing
 10403 ;; This function is called by:
 10404 ;;		_Get_Distance
 10405 ;;		_IR_Sensor_Detect
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text53
 10410  003E3E                     __ptext53:
 10411                           	callstack 0
 10412  003E3E                     _GPIO_Pin_Read_Logic:
 10413                           	callstack 21
 10414  003E3E                     
 10415                           ;MCAL/GPIO/hal_gpio.c: 117:           if ( ((void*)0)==_pin_config||((void*)0)==logic||_
      +                          pin_config->pin> 8 -1)
 10416  003E3E  501E               	movf	GPIO_Pin_Read_Logic@_pin_config^0,w,c
 10417  003E40  101F               	iorwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,w,c
 10418  003E42  B4D8               	btfsc	status,2,c
 10419  003E44  EF26  F01F         	goto	u11621
 10420  003E48  EF28  F01F         	goto	u11620
 10421  003E4C                     u11621:
 10422  003E4C  EF41  F01F         	goto	l10790
 10423  003E50                     u11620:
 10424  003E50  5020               	movf	GPIO_Pin_Read_Logic@logic^0,w,c
 10425  003E52  1021               	iorwf	(GPIO_Pin_Read_Logic@logic+1)^0,w,c
 10426  003E54  B4D8               	btfsc	status,2,c
 10427  003E56  EF2F  F01F         	goto	u11631
 10428  003E5A  EF31  F01F         	goto	u11630
 10429  003E5E                     u11631:
 10430  003E5E  EF41  F01F         	goto	l10790
 10431  003E62                     u11630:
 10432  003E62  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 10433  003E66  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 10434  003E6A  50DF               	movf	223,w,c
 10435  003E6C  0B07               	andlw	7
 10436  003E6E  0100               	movlb	0	; () banked
 10437  003E70  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 10438  003E72  0E07               	movlw	7
 10439  003E74  6560               	cpfsgt	??_GPIO_Pin_Read_Logic& (0+255),b
 10440  003E76  EF3F  F01F         	goto	u11641
 10441  003E7A  EF41  F01F         	goto	u11640
 10442  003E7E                     u11641:
 10443  003E7E  EF43  F01F         	goto	l10792
 10444  003E82                     u11640:
 10445  003E82                     l10790:
 10446                           
 10447                           ;MCAL/GPIO/hal_gpio.c: 120:     }
 10448  003E82  EF75  F01F         	goto	l916
 10449  003E86                     l10792:
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;MCAL/GPIO/hal_gpio.c: 122:     {;MCAL/GPIO/hal_gpio.c: 123:          *logic= (( *port_r
      +                          egisters[_pin_config->port]>>_pin_config->pin )&(uint8)1);
 10453  003E86  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 10454  003E8A  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 10455  003E8E  50DF               	movf	223,w,c
 10456  003E90  0B07               	andlw	7
 10457  003E92  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 10458  003E94  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 10459  003E98  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 10460  003E9C  30DF               	rrcf	223,w,c
 10461  003E9E  32E8               	rrcf	wreg,f,c
 10462  003EA0  32E8               	rrcf	wreg,f,c
 10463  003EA2  0B07               	andlw	7
 10464  003EA4  6F61               	movwf	(??_GPIO_Pin_Read_Logic+1)& (0+255),b
 10465  003EA6  5161               	movf	(??_GPIO_Pin_Read_Logic+1)& (0+255),w,b
 10466  003EA8  0D02               	mullw	2
 10467  003EAA  0E29               	movlw	low _port_registers
 10468  003EAC  24F3               	addwf	243,w,c
 10469  003EAE  6ED9               	movwf	fsr2l,c
 10470  003EB0  0E01               	movlw	high _port_registers
 10471  003EB2  20F4               	addwfc	prodh,w,c
 10472  003EB4  6EDA               	movwf	fsr2h,c
 10473  003EB6  CFDE F062          	movff	postinc2,??_GPIO_Pin_Read_Logic+2
 10474  003EBA  CFDD F063          	movff	postdec2,??_GPIO_Pin_Read_Logic+3
 10475  003EBE  C062  FFD9         	movff	??_GPIO_Pin_Read_Logic+2,fsr2l
 10476  003EC2  C063  FFDA         	movff	??_GPIO_Pin_Read_Logic+3,fsr2h
 10477  003EC6  50DF               	movf	indf2,w,c
 10478  003EC8  6F64               	movwf	(??_GPIO_Pin_Read_Logic+4)& (0+255),b
 10479  003ECA  2B60               	incf	??_GPIO_Pin_Read_Logic& (0+255),f,b
 10480  003ECC  EF6A  F01F         	goto	u11654
 10481  003ED0                     u11655:
 10482  003ED0  90D8               	bcf	status,0,c
 10483  003ED2  3364               	rrcf	(??_GPIO_Pin_Read_Logic+4)& (0+255),f,b
 10484  003ED4                     u11654:
 10485  003ED4  2F60               	decfsz	??_GPIO_Pin_Read_Logic& (0+255),f,b
 10486  003ED6  EF68  F01F         	goto	u11655
 10487  003EDA  0100               	movlb	0	; () banked
 10488  003EDC  5164               	movf	(??_GPIO_Pin_Read_Logic+4)& (0+255),w,b
 10489  003EDE  0B01               	andlw	1
 10490  003EE0  C020  FFD9         	movff	GPIO_Pin_Read_Logic@logic,fsr2l
 10491  003EE4  C021  FFDA         	movff	GPIO_Pin_Read_Logic@logic+1,fsr2h
 10492  003EE8  6EDF               	movwf	indf2,c
 10493  003EEA                     l916:
 10494  003EEA  0012               	return		;funcret
 10495  003EEC                     __end_of_GPIO_Pin_Read_Logic:
 10496                           	callstack 0
 10497                           
 10498 ;; *************** function _GPS_Service *****************
 10499 ;; Defined at:
 10500 ;;		line 417 in file "application.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;		None
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  key             1   18[BANK0 ] unsigned char 
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  1    wreg      void 
 10507 ;; Registers used:
 10508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;Total ram usage:        3 bytes
 10519 ;; Hardware stack levels used: 1
 10520 ;; Hardware stack levels required when called: 11
 10521 ;; This function calls:
 10522 ;;		_EUSART_Async_Read_Data_Blocking
 10523 ;;		_GPIO_Pin_Write_Logic
 10524 ;; This function is called by:
 10525 ;;		_main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text54
 10530  00293C                     __ptext54:
 10531                           	callstack 0
 10532  00293C                     _GPS_Service:
 10533                           	callstack 19
 10534  00293C                     
 10535                           ;application.c: 419:     uint8 key=1;
 10536  00293C  0E01               	movlw	1
 10537  00293E  0100               	movlb	0	; () banked
 10538  002940  6F72               	movwf	GPS_Service@key& (0+255),b
 10539  002942                     
 10540                           ; BSR set to: 0
 10541                           ;application.c: 420:     (PIE1bits.RCIE = 0);
 10542  002942  9A9D               	bcf	157,5,c	;volatile
 10543  002944                     
 10544                           ; BSR set to: 0
 10545                           ;application.c: 421:     GPIO_Pin_Write_Logic(&selector,GPIO_HIGH);
 10546  002944  0E40               	movlw	low _selector
 10547  002946  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10548  002948  0E00               	movlw	high _selector
 10549  00294A  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10550  00294C  0E01               	movlw	1
 10551  00294E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10552  002950  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
 10553                           
 10554                           ;application.c: 423:     while (key)
 10555  002954  EF34  F015         	goto	l11328
 10556  002958                     l11292:
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;application.c: 424:     {;application.c: 425:         EUSART_Async_Read_Data_Blocking(&
      +                          _uart_obj,&gpstemp);
 10560  002958  0E33               	movlw	low __uart_obj
 10561  00295A  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 10562  00295C  0E01               	movlw	high __uart_obj
 10563  00295E  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 10564  002960  0E39               	movlw	low _gpstemp
 10565  002962  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 10566  002964  0E00               	movlw	high _gpstemp
 10567  002966  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 10568  002968  EC44  F022         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 10569  00296C                     
 10570                           ;application.c: 426:         if ('$'==gpstemp)
 10571  00296C  0E24               	movlw	36
 10572  00296E  1839               	xorwf	_gpstemp^0,w,c
 10573  002970  A4D8               	btfss	status,2,c
 10574  002972  EFBD  F014         	goto	u12031
 10575  002976  EFBF  F014         	goto	u12030
 10576  00297A                     u12031:
 10577  00297A  EF34  F015         	goto	l11328
 10578  00297E                     u12030:
 10579  00297E  EF2B  F015         	goto	l1975
 10580  002982                     l11298:
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;application.c: 429:             {;application.c: 430:                     EUSART_Async_
      +                          Read_Data_Blocking(&_uart_obj,&gpstemp);
 10584  002982  0E33               	movlw	low __uart_obj
 10585  002984  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 10586  002986  0E01               	movlw	high __uart_obj
 10587  002988  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 10588  00298A  0E39               	movlw	low _gpstemp
 10589  00298C  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 10590  00298E  0E00               	movlw	high _gpstemp
 10591  002990  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 10592  002992  EC44  F022         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 10593  002996                     
 10594                           ;application.c: 431:                     if (','==gpstemp)
 10595  002996  0E2C               	movlw	44
 10596  002998  1839               	xorwf	_gpstemp^0,w,c
 10597  00299A  A4D8               	btfss	status,2,c
 10598  00299C  EFD2  F014         	goto	u12041
 10599  0029A0  EFD4  F014         	goto	u12040
 10600  0029A4                     u12041:
 10601  0029A4  EF2B  F015         	goto	l1975
 10602  0029A8                     u12040:
 10603  0029A8                     
 10604                           ;application.c: 432:                     {;application.c: 433:                         c
      +                          ounter++;
 10605  0029A8  2A2C               	incf	_counter^0,f,c
 10606  0029AA                     
 10607                           ;application.c: 434:                         if (3==counter)
 10608  0029AA  0E03               	movlw	3
 10609  0029AC  182C               	xorwf	_counter^0,w,c
 10610  0029AE  A4D8               	btfss	status,2,c
 10611  0029B0  EFDC  F014         	goto	u12051
 10612  0029B4  EFDE  F014         	goto	u12050
 10613  0029B8                     u12051:
 10614  0029B8  EF00  F015         	goto	l11316
 10615  0029BC                     u12050:
 10616  0029BC                     
 10617                           ;application.c: 435:                         {;application.c: 436:                      
      +                                 i=0;
 10618  0029BC  0E00               	movlw	0
 10619  0029BE  6E2B               	movwf	_i^0,c
 10620  0029C0                     l11308:
 10621                           
 10622                           ;application.c: 439:                             {;application.c: 440:                  
      +                                         EUSART_Async_Read_Data_Blocking(&_uart_obj,(latitude+i));
 10623  0029C0  0E33               	movlw	low __uart_obj
 10624  0029C2  0100               	movlb	0	; () banked
 10625  0029C4  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 10626  0029C6  0E01               	movlw	high __uart_obj
 10627  0029C8  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 10628  0029CA  0E1C               	movlw	low _latitude
 10629  0029CC  242B               	addwf	_i^0,w,c
 10630  0029CE  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 10631  0029D0  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 10632  0029D2  0E01               	movlw	high _latitude
 10633  0029D4  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 10634  0029D6  EC44  F022         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 10635  0029DA                     
 10636                           ;application.c: 441:                                 i++;
 10637  0029DA  2A2B               	incf	_i^0,f,c
 10638  0029DC                     
 10639                           ;application.c: 442:                             }while(','!=(latitude[i-1]));
 10640  0029DC  0E1B               	movlw	low (_latitude+65535)
 10641  0029DE  242B               	addwf	_i^0,w,c
 10642  0029E0  6ED9               	movwf	fsr2l,c
 10643  0029E2  6ADA               	clrf	fsr2h,c
 10644  0029E4  0E01               	movlw	high (_latitude+65535)
 10645  0029E6  22DA               	addwfc	fsr2h,f,c
 10646  0029E8  0E2C               	movlw	44
 10647  0029EA  18DE               	xorwf	postinc2,w,c
 10648  0029EC  A4D8               	btfss	status,2,c
 10649  0029EE  EFFB  F014         	goto	u12061
 10650  0029F2  EFFD  F014         	goto	u12060
 10651  0029F6                     u12061:
 10652  0029F6  EFE0  F014         	goto	l11308
 10653  0029FA                     u12060:
 10654  0029FA                     
 10655                           ;application.c: 443:                             counter++;
 10656  0029FA  2A2C               	incf	_counter^0,f,c
 10657                           
 10658                           ;application.c: 445:                         }
 10659  0029FC  EF2B  F015         	goto	l1975
 10660  002A00                     l11316:
 10661  002A00  0E05               	movlw	5
 10662  002A02  182C               	xorwf	_counter^0,w,c
 10663  002A04  A4D8               	btfss	status,2,c
 10664  002A06  EF07  F015         	goto	u12071
 10665  002A0A  EF09  F015         	goto	u12070
 10666  002A0E                     u12071:
 10667  002A0E  EF2B  F015         	goto	l1975
 10668  002A12                     u12070:
 10669  002A12                     
 10670                           ;application.c: 447:                         {;application.c: 448:                      
      +                                 i=0;
 10671  002A12  0E00               	movlw	0
 10672  002A14  6E2B               	movwf	_i^0,c
 10673  002A16                     l11320:
 10674                           
 10675                           ;application.c: 451:                                 EUSART_Async_Read_Data_Blocking(&_u
      +                          art_obj,(longtude+i));
 10676  002A16  0E33               	movlw	low __uart_obj
 10677  002A18  0100               	movlb	0	; () banked
 10678  002A1A  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 10679  002A1C  0E01               	movlw	high __uart_obj
 10680  002A1E  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 10681  002A20  0E0F               	movlw	low _longtude
 10682  002A22  242B               	addwf	_i^0,w,c
 10683  002A24  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 10684  002A26  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 10685  002A28  0E01               	movlw	high _longtude
 10686  002A2A  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 10687  002A2C  EC44  F022         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 10688  002A30                     
 10689                           ;application.c: 452:                                 i++;
 10690  002A30  2A2B               	incf	_i^0,f,c
 10691  002A32                     
 10692                           ;application.c: 453:                             }while(','!=(longtude[i-1]));
 10693  002A32  0E0E               	movlw	low (_longtude+65535)
 10694  002A34  242B               	addwf	_i^0,w,c
 10695  002A36  6ED9               	movwf	fsr2l,c
 10696  002A38  6ADA               	clrf	fsr2h,c
 10697  002A3A  0E01               	movlw	high (_longtude+65535)
 10698  002A3C  22DA               	addwfc	fsr2h,f,c
 10699  002A3E  0E2C               	movlw	44
 10700  002A40  18DE               	xorwf	postinc2,w,c
 10701  002A42  A4D8               	btfss	status,2,c
 10702  002A44  EF26  F015         	goto	u12081
 10703  002A48  EF28  F015         	goto	u12080
 10704  002A4C                     u12081:
 10705  002A4C  EF0B  F015         	goto	l11320
 10706  002A50                     u12080:
 10707  002A50                     
 10708                           ;application.c: 454:                             key=0;
 10709  002A50  0E00               	movlw	0
 10710  002A52  0100               	movlb	0	; () banked
 10711  002A54  6F72               	movwf	GPS_Service@key& (0+255),b
 10712  002A56                     l1975:
 10713                           
 10714                           ;application.c: 428:             while (key)
 10715  002A56  0100               	movlb	0	; () banked
 10716  002A58  5172               	movf	GPS_Service@key& (0+255),w,b
 10717  002A5A  A4D8               	btfss	status,2,c
 10718  002A5C  EF32  F015         	goto	u12091
 10719  002A60  EF34  F015         	goto	u12090
 10720  002A64                     u12091:
 10721  002A64  EFC1  F014         	goto	l11298
 10722  002A68                     u12090:
 10723  002A68                     l11328:
 10724                           
 10725                           ;application.c: 423:     while (key)
 10726  002A68  0100               	movlb	0	; () banked
 10727  002A6A  5172               	movf	GPS_Service@key& (0+255),w,b
 10728  002A6C  A4D8               	btfss	status,2,c
 10729  002A6E  EF3B  F015         	goto	u12101
 10730  002A72  EF3D  F015         	goto	u12100
 10731  002A76                     u12101:
 10732  002A76  EFAC  F014         	goto	l11292
 10733  002A7A                     u12100:
 10734  002A7A                     
 10735                           ; BSR set to: 0
 10736                           ;application.c: 460:       _delay((unsigned long)((2000)*(8000000/4000.0)));
 10737  002A7A  0E15               	movlw	21
 10738  002A7C  0100               	movlb	0	; () banked
 10739  002A7E  6F71               	movwf	(??_GPS_Service+1)& (0+255),b
 10740  002A80  0E4B               	movlw	75
 10741  002A82  6F70               	movwf	??_GPS_Service& (0+255),b
 10742  002A84  0EBE               	movlw	190
 10743  002A86                     u12567:
 10744  002A86  2EE8               	decfsz	wreg,f,c
 10745  002A88  D7FE               	bra	u12567
 10746  002A8A  2F70               	decfsz	??_GPS_Service& (0+255),f,b
 10747  002A8C  D7FC               	bra	u12567
 10748  002A8E  2F71               	decfsz	(??_GPS_Service+1)& (0+255),f,b
 10749  002A90  D7FA               	bra	u12567
 10750  002A92  F000               	nop	
 10751  002A94                     
 10752                           ;application.c: 461:     GPIO_Pin_Write_Logic(&selector,GPIO_LOW);
 10753  002A94  0E40               	movlw	low _selector
 10754  002A96  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 10755  002A98  0E00               	movlw	high _selector
 10756  002A9A  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 10757  002A9C  0E00               	movlw	0
 10758  002A9E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 10759  002AA0  ECD1  F017         	call	_GPIO_Pin_Write_Logic	;wreg free
 10760  002AA4                     
 10761                           ;application.c: 462:     (PIE1bits.RCIE = 1) ;
 10762  002AA4  8A9D               	bsf	157,5,c	;volatile
 10763  002AA6  0012               	return		;funcret
 10764  002AA8                     __end_of_GPS_Service:
 10765                           	callstack 0
 10766                           
 10767 ;; *************** function _GPIO_Pin_Write_Logic *****************
 10768 ;; Defined at:
 10769 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 10772 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
 10773 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
 10774 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
 10775 ;;  logic           1   31[COMRAM] enum E3185
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  ERRORSTATUS     1   32[COMRAM] unsigned char 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      unsigned char 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10787 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;Total ram usage:       10 bytes
 10792 ;; Hardware stack levels used: 1
 10793 ;; Hardware stack levels required when called: 8
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		_ECU_DC_Motor_Run_Left
 10798 ;;		_ECU_DC_Motor_Run_Right
 10799 ;;		_Ecu_Stepper_Init
 10800 ;;		_Ecu_Stepper_Step
 10801 ;;		_stepper_move_one_deg_cw
 10802 ;;		_stepper_move_one_deg_ccw
 10803 ;;		_GPIO_Pin_Initialize
 10804 ;;		_send_trig_pulse
 10805 ;;		_GPS_Service
 10806 ;;		_lcd_4bit_send_command
 10807 ;;		_lcd_4bit_send_char_data
 10808 ;;		_lcd_8bit_send_command
 10809 ;;		_lcd_8bit_send_char_data
 10810 ;;		_lcd_4bits_send_enable_signal
 10811 ;;		_lcd_send_4bits
 10812 ;;		_lcd_8bits_send_enable_signal
 10813 ;;		_Ecu_Stepper_Change_Direction
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text55
 10818  002FA2                     __ptext55:
 10819                           	callstack 0
 10820  002FA2                     _GPIO_Pin_Write_Logic:
 10821                           	callstack 21
 10822  002FA2                     
 10823                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 10824  002FA2  0E01               	movlw	1
 10825  002FA4  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 10826  002FA6                     
 10827                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 10828  002FA6  501E               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
 10829  002FA8  101F               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 10830  002FAA  B4D8               	btfsc	status,2,c
 10831  002FAC  EFDA  F017         	goto	u10551
 10832  002FB0  EFDC  F017         	goto	u10550
 10833  002FB4                     u10551:
 10834  002FB4  EFEC  F017         	goto	l10114
 10835  002FB8                     u10550:
 10836  002FB8  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10837  002FBC  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10838  002FC0  50DF               	movf	223,w,c
 10839  002FC2  0B07               	andlw	7
 10840  002FC4  0100               	movlb	0	; () banked
 10841  002FC6  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10842  002FC8  0E07               	movlw	7
 10843  002FCA  6560               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
 10844  002FCC  EFEA  F017         	goto	u10561
 10845  002FD0  EFEC  F017         	goto	u10560
 10846  002FD4                     u10561:
 10847  002FD4  EF51  F018         	goto	l10122
 10848  002FD8                     u10560:
 10849  002FD8                     l10114:
 10850                           
 10851                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 10852  002FD8  0E00               	movlw	0
 10853  002FDA  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 10854                           
 10855                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 10856  002FDC  EF66  F018         	goto	l10124
 10857  002FE0                     l10116:
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 10861  002FE0  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10862  002FE4  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10863  002FE8  50DF               	movf	223,w,c
 10864  002FEA  0B07               	andlw	7
 10865  002FEC  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10866  002FEE  0E01               	movlw	1
 10867  002FF0  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 10868  002FF2  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10869  002FF4  EFFE  F017         	goto	u10574
 10870  002FF8                     u10575:
 10871  002FF8  90D8               	bcf	status,0,c
 10872  002FFA  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 10873  002FFC                     u10574:
 10874  002FFC  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10875  002FFE  EFFC  F017         	goto	u10575
 10876  003002  0100               	movlb	0	; () banked
 10877  003004  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 10878  003006  0AFF               	xorlw	255
 10879  003008  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 10880  00300A  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10881  00300E  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10882  003012  30DF               	rrcf	223,w,c
 10883  003014  32E8               	rrcf	wreg,f,c
 10884  003016  32E8               	rrcf	wreg,f,c
 10885  003018  0B07               	andlw	7
 10886  00301A  6F63               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
 10887  00301C  5163               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
 10888  00301E  0D02               	mullw	2
 10889  003020  0EA6               	movlw	low _lat_registers
 10890  003022  24F3               	addwf	243,w,c
 10891  003024  6ED9               	movwf	fsr2l,c
 10892  003026  0E00               	movlw	high _lat_registers
 10893  003028  20F4               	addwfc	prodh,w,c
 10894  00302A  6EDA               	movwf	fsr2h,c
 10895  00302C  CFDE F064          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
 10896  003030  CFDD F065          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
 10897  003034  C064  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
 10898  003038  C065  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
 10899  00303C  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 10900  00303E  16DF               	andwf	indf2,f,c
 10901                           
 10902                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 10903  003040  EF66  F018         	goto	l10124
 10904  003044                     l10118:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 10908  003044  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10909  003048  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10910  00304C  50DF               	movf	223,w,c
 10911  00304E  0B07               	andlw	7
 10912  003050  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10913  003052  0E01               	movlw	1
 10914  003054  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 10915  003056  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10916  003058  EF30  F018         	goto	u10584
 10917  00305C                     u10585:
 10918  00305C  90D8               	bcf	status,0,c
 10919  00305E  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 10920  003060                     u10584:
 10921  003060  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 10922  003062  EF2E  F018         	goto	u10585
 10923  003066  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 10924  00306A  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 10925  00306E  30DF               	rrcf	223,w,c
 10926  003070  32E8               	rrcf	wreg,f,c
 10927  003072  32E8               	rrcf	wreg,f,c
 10928  003074  0B07               	andlw	7
 10929  003076  0100               	movlb	0	; () banked
 10930  003078  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 10931  00307A  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 10932  00307C  0D02               	mullw	2
 10933  00307E  0EA6               	movlw	low _lat_registers
 10934  003080  24F3               	addwf	243,w,c
 10935  003082  6ED9               	movwf	fsr2l,c
 10936  003084  0E00               	movlw	high _lat_registers
 10937  003086  20F4               	addwfc	prodh,w,c
 10938  003088  6EDA               	movwf	fsr2h,c
 10939  00308A  CFDE F063          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
 10940  00308E  CFDD F064          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
 10941  003092  C063  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
 10942  003096  C064  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
 10943  00309A  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 10944  00309C  12DF               	iorwf	indf2,f,c
 10945                           
 10946                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 10947  00309E  EF66  F018         	goto	l10124
 10948  0030A2                     l10122:
 10949                           
 10950                           ; BSR set to: 0
 10951  0030A2  5020               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
 10952  0030A4  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 10953  0030A6  6B61               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 10954                           
 10955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10956                           ; Switch size 1, requested type "simple"
 10957                           ; Number of cases is 1, Range of values is 0 to 0
 10958                           ; switch strategies available:
 10959                           ; Name         Instructions Cycles
 10960                           ; simple_byte            4     3 (average)
 10961                           ;	Chosen strategy is simple_byte
 10962  0030A8  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 10963  0030AA  0A00               	xorlw	0	; case 0
 10964  0030AC  B4D8               	btfsc	status,2,c
 10965  0030AE  EF5B  F018         	goto	l12028
 10966  0030B2  EFEC  F017         	goto	l10114
 10967  0030B6                     l12028:
 10968                           
 10969                           ; BSR set to: 0
 10970                           ; Switch size 1, requested type "simple"
 10971                           ; Number of cases is 2, Range of values is 0 to 1
 10972                           ; switch strategies available:
 10973                           ; Name         Instructions Cycles
 10974                           ; simple_byte            7     4 (average)
 10975                           ;	Chosen strategy is simple_byte
 10976  0030B6  5160               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
 10977  0030B8  0A00               	xorlw	0	; case 0
 10978  0030BA  B4D8               	btfsc	status,2,c
 10979  0030BC  EFF0  F017         	goto	l10116
 10980  0030C0  0A01               	xorlw	1	; case 1
 10981  0030C2  B4D8               	btfsc	status,2,c
 10982  0030C4  EF22  F018         	goto	l10118
 10983  0030C8  EFEC  F017         	goto	l10114
 10984  0030CC                     l10124:
 10985                           
 10986                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 10987  0030CC  5021               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
 10988  0030CE  0012               	return		;funcret
 10989  0030D0                     __end_of_GPIO_Pin_Write_Logic:
 10990                           	callstack 0
 10991                           
 10992 ;; *************** function _EUSART_Async_Read_Data_Blocking *****************
 10993 ;; Defined at:
 10994 ;;		line 337 in file "MCAL/EUSART/mcal_EUSART.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  _eusart_obj     2   12[BANK0 ] PTR const struct .
 10997 ;;		 -> _uart_obj(12), 
 10998 ;;  data            2   14[BANK0 ] PTR unsigned short 
 10999 ;;		 -> longtude(13), latitude(13), gpstemp(1), 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  ret_val         1    0        unsigned char 
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      unsigned char 
 11004 ;; Registers used:
 11005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11014 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;Total ram usage:        4 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; Hardware stack levels required when called: 10
 11018 ;; This function calls:
 11019 ;;		_EUSART_Async_Read_Data
 11020 ;; This function is called by:
 11021 ;;		_GPS_Service
 11022 ;;		_Bluetooth_Recieve_Data_Blocking
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text56
 11027  004488                     __ptext56:
 11028                           	callstack 0
 11029  004488                     _EUSART_Async_Read_Data_Blocking:
 11030                           	callstack 19
 11031  004488                     
 11032                           ;MCAL/EUSART/mcal_EUSART.c: 341:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 11033  004488  0100               	movlb	0	; () banked
 11034  00448A  516C               	movf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),w,b
 11035  00448C  116D               	iorwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),w,b
 11036  00448E  B4D8               	btfsc	status,2,c
 11037  004490  EF4C  F022         	goto	u11551
 11038  004494  EF4E  F022         	goto	u11550
 11039  004498                     u11551:
 11040  004498  EF57  F022         	goto	l10754
 11041  00449C                     u11550:
 11042  00449C                     
 11043                           ; BSR set to: 0
 11044  00449C  516E               	movf	EUSART_Async_Read_Data_Blocking@data& (0+255),w,b
 11045  00449E  116F               	iorwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),w,b
 11046  0044A0  A4D8               	btfss	status,2,c
 11047  0044A2  EF55  F022         	goto	u11561
 11048  0044A6  EF57  F022         	goto	u11560
 11049  0044AA                     u11561:
 11050  0044AA  EF59  F022         	goto	l753
 11051  0044AE                     u11560:
 11052  0044AE                     l10754:
 11053                           
 11054                           ; BSR set to: 0
 11055                           ;MCAL/EUSART/mcal_EUSART.c: 344:     }
 11056  0044AE  EF6A  F022         	goto	l10758
 11057  0044B2                     l753:
 11058  0044B2  AA9E               	btfss	158,5,c	;volatile
 11059  0044B4  EF5E  F022         	goto	u11571
 11060  0044B8  EF60  F022         	goto	u11570
 11061  0044BC                     u11571:
 11062  0044BC  EF59  F022         	goto	l753
 11063  0044C0                     u11570:
 11064  0044C0                     
 11065                           ;MCAL/EUSART/mcal_EUSART.c: 348:         EUSART_Async_Read_Data(_eusart_obj , data);
 11066  0044C0  C06C  F060         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj,EUSART_Async_Read_Data@_eusart_obj
 11067  0044C4  C06D  F061         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj+1,EUSART_Async_Read_Data@_eusart_obj+
      +                          1
 11068  0044C8  C06E  F062         	movff	EUSART_Async_Read_Data_Blocking@data,EUSART_Async_Read_Data@data
 11069  0044CC  C06F  F063         	movff	EUSART_Async_Read_Data_Blocking@data+1,EUSART_Async_Read_Data@data+1
 11070  0044D0  EC3B  F010         	call	_EUSART_Async_Read_Data	;wreg free
 11071  0044D4                     l10758:
 11072                           
 11073                           ;MCAL/EUSART/mcal_EUSART.c: 351:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 11074  0044D4  B2AB               	btfsc	171,1,c	;volatile
 11075  0044D6  EF6F  F022         	goto	u11581
 11076  0044DA  EF71  F022         	goto	u11580
 11077  0044DE                     u11581:
 11078  0044DE  EF78  F022         	goto	l758
 11079  0044E2                     u11580:
 11080  0044E2  A4AB               	btfss	171,2,c	;volatile
 11081  0044E4  EF76  F022         	goto	u11591
 11082  0044E8  EF78  F022         	goto	u11590
 11083  0044EC                     u11591:
 11084  0044EC  EF7A  F022         	goto	l759
 11085  0044F0                     u11590:
 11086  0044F0                     l758:
 11087                           
 11088                           ;MCAL/EUSART/mcal_EUSART.c: 352:     {;MCAL/EUSART/mcal_EUSART.c: 354:         RCSTA1bit
      +                          s.CREN=0;
 11089  0044F0  98AB               	bcf	171,4,c	;volatile
 11090                           
 11091                           ;MCAL/EUSART/mcal_EUSART.c: 355:         RCSTA1bits.CREN=1;
 11092  0044F2  88AB               	bsf	171,4,c	;volatile
 11093  0044F4                     l759:
 11094  0044F4  0012               	return		;funcret
 11095  0044F6                     __end_of_EUSART_Async_Read_Data_Blocking:
 11096                           	callstack 0
 11097                           
 11098 ;; *************** function _EUSART_Async_Read_Data *****************
 11099 ;; Defined at:
 11100 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  _eusart_obj     2    0[BANK0 ] PTR const struct .
 11103 ;;		 -> _uart_obj(12), 
 11104 ;;  data            2    2[BANK0 ] PTR unsigned short 
 11105 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  l_temp_data     2   10[BANK0 ] unsigned short 
 11108 ;;  ret_val         1    0        unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;                  1    wreg      unsigned char 
 11111 ;; Registers used:
 11112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;Total ram usage:       14 bytes
 11123 ;; Hardware stack levels used: 1
 11124 ;; Hardware stack levels required when called: 9
 11125 ;; This function calls:
 11126 ;;		_calc_parity_even
 11127 ;;		_calc_parity_odd
 11128 ;; This function is called by:
 11129 ;;		_EUSART_Async_Read_Data_Blocking
 11130 ;;		_Bluetooth_Recieve_Data_Non_Blocking
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           
 11134                           	psect	text57
 11135  002076                     __ptext57:
 11136                           	callstack 0
 11137  002076                     _EUSART_Async_Read_Data:
 11138                           	callstack 19
 11139  002076                     
 11140                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 11141  002076  0E00               	movlw	0
 11142  002078  0100               	movlb	0	; () banked
 11143  00207A  6F6B               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11144  00207C  0E00               	movlw	0
 11145  00207E  6F6A               	movwf	EUSART_Async_Read_Data@l_temp_data& (0+255),b
 11146  002080                     
 11147                           ; BSR set to: 0
 11148                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 11149  002080  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11150  002082  1161               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11151  002084  B4D8               	btfsc	status,2,c
 11152  002086  EF47  F010         	goto	u11211
 11153  00208A  EF49  F010         	goto	u11210
 11154  00208E                     u11211:
 11155  00208E  EF52  F010         	goto	l10586
 11156  002092                     u11210:
 11157  002092                     
 11158                           ; BSR set to: 0
 11159  002092  5162               	movf	EUSART_Async_Read_Data@data& (0+255),w,b
 11160  002094  1163               	iorwf	(EUSART_Async_Read_Data@data+1)& (0+255),w,b
 11161  002096  A4D8               	btfss	status,2,c
 11162  002098  EF50  F010         	goto	u11221
 11163  00209C  EF52  F010         	goto	u11220
 11164  0020A0                     u11221:
 11165  0020A0  EF54  F010         	goto	l693
 11166  0020A4                     u11220:
 11167  0020A4                     l10586:
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 11171  0020A4  EF32  F011         	goto	l10636
 11172  0020A8                     l693:
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 11176  0020A8  AA9E               	btfss	158,5,c	;volatile
 11177  0020AA  EF59  F010         	goto	u11231
 11178  0020AE  EF5B  F010         	goto	u11230
 11179  0020B2                     u11231:
 11180  0020B2  EF52  F010         	goto	l10586
 11181  0020B6                     u11230:
 11182  0020B6                     
 11183                           ; BSR set to: 0
 11184                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 11185  0020B6  EE20 F009          	lfsr	2,9
 11186  0020BA  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11187  0020BC  26D9               	addwf	fsr2l,f,c
 11188  0020BE  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11189  0020C0  22DA               	addwfc	fsr2h,f,c
 11190  0020C2  B8DF               	btfsc	indf2,4,c
 11191  0020C4  EF66  F010         	goto	u11241
 11192  0020C8  EF68  F010         	goto	u11240
 11193  0020CC                     u11241:
 11194  0020CC  EF75  F010         	goto	l10592
 11195  0020D0                     u11240:
 11196  0020D0                     
 11197                           ; BSR set to: 0
 11198                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 11199  0020D0  50AE               	movf	174,w,c	;volatile
 11200  0020D2  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 11201  0020D4  6A24               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
 11202  0020D6  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 11203  0020DA  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 11204  0020DE  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 11205  0020E2  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 11206                           
 11207                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 11208  0020E6  EF32  F011         	goto	l10636
 11209  0020EA                     l10592:
 11210                           
 11211                           ; BSR set to: 0
 11212  0020EA  EE20 F009          	lfsr	2,9
 11213  0020EE  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11214  0020F0  26D9               	addwf	fsr2l,f,c
 11215  0020F2  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11216  0020F4  22DA               	addwfc	fsr2h,f,c
 11217  0020F6  A8DF               	btfss	indf2,4,c
 11218  0020F8  EF80  F010         	goto	u11251
 11219  0020FC  EF82  F010         	goto	u11250
 11220  002100                     u11251:
 11221  002100  EF32  F011         	goto	l706
 11222  002104                     u11250:
 11223  002104                     
 11224                           ; BSR set to: 0
 11225                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 11226  002104  EE20 F009          	lfsr	2,9
 11227  002108  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11228  00210A  26D9               	addwf	fsr2l,f,c
 11229  00210C  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11230  00210E  22DA               	addwfc	fsr2h,f,c
 11231  002110  30DF               	rrcf	223,w,c
 11232  002112  0B03               	andlw	3
 11233  002114  0900               	iorlw	0
 11234  002116  A4D8               	btfss	status,2,c
 11235  002118  EF90  F010         	goto	u11261
 11236  00211C  EF92  F010         	goto	u11260
 11237  002120                     u11261:
 11238  002120  EFB4  F010         	goto	l10606
 11239  002124                     u11260:
 11240  002124                     
 11241                           ; BSR set to: 0
 11242                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 11243  002124  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 11244  002128  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11245                           
 11246                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 11247  00212A  B0AB               	btfsc	4011,0,c	;volatile
 11248  00212C  EF9A  F010         	goto	u11271
 11249  002130  EF9C  F010         	goto	u11270
 11250  002134                     u11271:
 11251  002134  EFA2  F010         	goto	l10600
 11252  002138                     u11270:
 11253  002138                     
 11254                           ; BSR set to: 0
 11255  002138  0E00               	movlw	0
 11256  00213A  6F65               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 11257  00213C  0E00               	movlw	0
 11258  00213E  6F64               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 11259  002140  EFA6  F010         	goto	l10602
 11260  002144                     l10600:
 11261                           
 11262                           ; BSR set to: 0
 11263  002144  0E01               	movlw	1
 11264  002146  6F65               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 11265  002148  0E00               	movlw	0
 11266  00214A  6F64               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 11267  00214C                     l10602:
 11268                           
 11269                           ; BSR set to: 0
 11270  00214C  5164               	movf	_EUSART_Async_Read_Data$2031& (0+255),w,b
 11271  00214E  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 11272  002150  5165               	movf	(_EUSART_Async_Read_Data$2031+1)& (0+255),w,b
 11273  002152  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 11274  002154                     
 11275                           ; BSR set to: 0
 11276                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 11277  002154  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 11278  002158  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 11279  00215C  C06A  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
 11280  002160  C06B  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
 11281                           
 11282                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 11283  002164  EF32  F011         	goto	l10636
 11284  002168                     l10606:
 11285                           
 11286                           ; BSR set to: 0
 11287  002168  EE20 F009          	lfsr	2,9
 11288  00216C  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11289  00216E  26D9               	addwf	fsr2l,f,c
 11290  002170  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11291  002172  22DA               	addwfc	fsr2h,f,c
 11292  002174  30DF               	rrcf	223,w,c
 11293  002176  0B03               	andlw	3
 11294  002178  06E8               	decf	wreg,f,c
 11295  00217A  A4D8               	btfss	status,2,c
 11296  00217C  EFC2  F010         	goto	u11281
 11297  002180  EFC4  F010         	goto	u11280
 11298  002184                     u11281:
 11299  002184  EFFA  F010         	goto	l10620
 11300  002188                     u11280:
 11301  002188                     
 11302                           ; BSR set to: 0
 11303                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 11304  002188  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 11305  00218C  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11306                           
 11307                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 11308  00218E  B0AB               	btfsc	171,0,c	;volatile
 11309  002190  EFCC  F010         	goto	u11291
 11310  002194  EFCE  F010         	goto	u11290
 11311  002198                     u11291:
 11312  002198  EFD4  F010         	goto	l10612
 11313  00219C                     u11290:
 11314  00219C                     
 11315                           ; BSR set to: 0
 11316  00219C  0E00               	movlw	0
 11317  00219E  6F67               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 11318  0021A0  0E00               	movlw	0
 11319  0021A2  6F66               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 11320  0021A4  EFD8  F010         	goto	l10614
 11321  0021A8                     l10612:
 11322                           
 11323                           ; BSR set to: 0
 11324  0021A8  0E01               	movlw	1
 11325  0021AA  6F67               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 11326  0021AC  0E00               	movlw	0
 11327  0021AE  6F66               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 11328  0021B0                     l10614:
 11329                           
 11330                           ; BSR set to: 0
 11331  0021B0  5166               	movf	_EUSART_Async_Read_Data$2032& (0+255),w,b
 11332  0021B2  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 11333  0021B4  5167               	movf	(_EUSART_Async_Read_Data$2032+1)& (0+255),w,b
 11334  0021B6  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 11335  0021B8                     
 11336                           ; BSR set to: 0
 11337                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 11338  0021B8  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 11339  0021BA  ECE3  F022         	call	_calc_parity_even
 11340  0021BE  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 11341  0021C0  0100               	movlb	0	; () banked
 11342  0021C2  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 11343  0021C4  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 11344  0021C6  A4D8               	btfss	status,2,c
 11345  0021C8  EFE8  F010         	goto	u11301
 11346  0021CC  EFEA  F010         	goto	u11300
 11347  0021D0                     u11301:
 11348  0021D0  EF32  F011         	goto	l706
 11349  0021D4                     u11300:
 11350  0021D4                     l10618:
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 11354  0021D4  0EFF               	movlw	255
 11355  0021D6  156A               	andwf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 11356  0021D8  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 11357  0021DA  0E00               	movlw	0
 11358  0021DC  156B               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 11359  0021DE  6E24               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
 11360  0021E0  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 11361  0021E4  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 11362  0021E8  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 11363  0021EC  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 11364                           
 11365                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 11366  0021F0  EF32  F011         	goto	l10636
 11367  0021F4                     l10620:
 11368                           
 11369                           ; BSR set to: 0
 11370  0021F4  EE20 F009          	lfsr	2,9
 11371  0021F8  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11372  0021FA  26D9               	addwf	fsr2l,f,c
 11373  0021FC  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11374  0021FE  22DA               	addwfc	fsr2h,f,c
 11375  002200  30DF               	rrcf	223,w,c
 11376  002202  0B03               	andlw	3
 11377  002204  0A02               	xorlw	2
 11378  002206  A4D8               	btfss	status,2,c
 11379  002208  EF08  F011         	goto	u11311
 11380  00220C  EF0A  F011         	goto	u11310
 11381  002210                     u11311:
 11382  002210  EF32  F011         	goto	l706
 11383  002214                     u11310:
 11384  002214                     
 11385                           ; BSR set to: 0
 11386                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 11387  002214  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 11388  002218  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11389                           
 11390                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 11391  00221A  B0AB               	btfsc	171,0,c	;volatile
 11392  00221C  EF12  F011         	goto	u11321
 11393  002220  EF14  F011         	goto	u11320
 11394  002224                     u11321:
 11395  002224  EF1A  F011         	goto	l10626
 11396  002228                     u11320:
 11397  002228                     
 11398                           ; BSR set to: 0
 11399  002228  0E00               	movlw	0
 11400  00222A  6F69               	movwf	(_EUSART_Async_Read_Data$2033+1)& (0+255),b
 11401  00222C  0E00               	movlw	0
 11402  00222E  6F68               	movwf	_EUSART_Async_Read_Data$2033& (0+255),b
 11403  002230  EF1E  F011         	goto	l10628
 11404  002234                     l10626:
 11405                           
 11406                           ; BSR set to: 0
 11407  002234  0E01               	movlw	1
 11408  002236  6F69               	movwf	(_EUSART_Async_Read_Data$2033+1)& (0+255),b
 11409  002238  0E00               	movlw	0
 11410  00223A  6F68               	movwf	_EUSART_Async_Read_Data$2033& (0+255),b
 11411  00223C                     l10628:
 11412                           
 11413                           ; BSR set to: 0
 11414  00223C  5168               	movf	_EUSART_Async_Read_Data$2033& (0+255),w,b
 11415  00223E  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 11416  002240  5169               	movf	(_EUSART_Async_Read_Data$2033+1)& (0+255),w,b
 11417  002242  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 11418  002244                     
 11419                           ; BSR set to: 0
 11420                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 11421  002244  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 11422  002246  ECAF  F022         	call	_calc_parity_odd
 11423  00224A  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 11424  00224C  0100               	movlb	0	; () banked
 11425  00224E  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 11426  002250  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 11427  002252  A4D8               	btfss	status,2,c
 11428  002254  EF2E  F011         	goto	u11331
 11429  002258  EF30  F011         	goto	u11330
 11430  00225C                     u11331:
 11431  00225C  EF32  F011         	goto	l706
 11432  002260                     u11330:
 11433  002260  EFEA  F010         	goto	l10618
 11434  002264                     l706:
 11435  002264                     l10636:
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 11439  002264  B2AB               	btfsc	171,1,c	;volatile
 11440  002266  EF37  F011         	goto	u11341
 11441  00226A  EF39  F011         	goto	u11340
 11442  00226E                     u11341:
 11443  00226E  EF40  F011         	goto	l727
 11444  002272                     u11340:
 11445  002272                     
 11446                           ; BSR set to: 0
 11447  002272  A4AB               	btfss	171,2,c	;volatile
 11448  002274  EF3E  F011         	goto	u11351
 11449  002278  EF40  F011         	goto	u11350
 11450  00227C                     u11351:
 11451  00227C  EF42  F011         	goto	l728
 11452  002280                     u11350:
 11453  002280                     l727:
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 11457  002280  98AB               	bcf	171,4,c	;volatile
 11458                           
 11459                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 11460  002282  88AB               	bsf	171,4,c	;volatile
 11461  002284                     l728:
 11462                           
 11463                           ; BSR set to: 0
 11464  002284  0012               	return		;funcret
 11465  002286                     __end_of_EUSART_Async_Read_Data:
 11466                           	callstack 0
 11467                           
 11468 ;; *************** function _calc_parity_odd *****************
 11469 ;; Defined at:
 11470 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  data            1    wreg     unsigned char 
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  data            1   31[COMRAM] unsigned char 
 11475 ;;  l_counter       1   33[COMRAM] unsigned char 
 11476 ;;  number_of_on    1   32[COMRAM] unsigned char 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      unsigned char 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11487 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;Total ram usage:        5 bytes
 11491 ;; Hardware stack levels used: 1
 11492 ;; Hardware stack levels required when called: 8
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_EUSART_Async_Read_Data
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text58
 11501  00455E                     __ptext58:
 11502                           	callstack 0
 11503  00455E                     _calc_parity_odd:
 11504                           	callstack 19
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;incstack = 0
 11508                           ;calc_parity_odd@data stored from wreg
 11509  00455E  6E20               	movwf	calc_parity_odd@data^0,c
 11510  004560                     
 11511                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 11512  004560  0E00               	movlw	0
 11513  004562  6E21               	movwf	calc_parity_odd@number_of_ones^0,c
 11514                           
 11515                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 11516  004564  0E00               	movlw	0
 11517  004566  6E22               	movwf	calc_parity_odd@l_counter^0,c
 11518                           
 11519                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 11520  004568  0E00               	movlw	0
 11521  00456A  6E22               	movwf	calc_parity_odd@l_counter^0,c
 11522  00456C                     l10420:
 11523                           
 11524                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 11525  00456C  C022  F01E         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
 11526  004570  0E01               	movlw	1
 11527  004572  6E1F               	movwf	(??_calc_parity_odd+1)^0,c
 11528  004574  2A1E               	incf	??_calc_parity_odd^0,f,c
 11529  004576  EFBF  F022         	goto	u10974
 11530  00457A                     u10975:
 11531  00457A  90D8               	bcf	status,0,c
 11532  00457C  361F               	rlcf	(??_calc_parity_odd+1)^0,f,c
 11533  00457E                     u10974:
 11534  00457E  2E1E               	decfsz	??_calc_parity_odd^0,f,c
 11535  004580  EFBD  F022         	goto	u10975
 11536  004584  501F               	movf	(??_calc_parity_odd+1)^0,w,c
 11537  004586  1420               	andwf	calc_parity_odd@data^0,w,c
 11538  004588  0900               	iorlw	0
 11539  00458A  B4D8               	btfsc	status,2,c
 11540  00458C  EFCA  F022         	goto	u10981
 11541  004590  EFCC  F022         	goto	u10980
 11542  004594                     u10981:
 11543  004594  EFCD  F022         	goto	l826
 11544  004598                     u10980:
 11545  004598                     
 11546                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 11547  004598  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 11548  00459A                     l826:
 11549                           
 11550                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 11551  00459A  2A22               	incf	calc_parity_odd@l_counter^0,f,c
 11552  00459C  0E07               	movlw	7
 11553  00459E  6422               	cpfsgt	calc_parity_odd@l_counter^0,c
 11554  0045A0  EFD4  F022         	goto	u10991
 11555  0045A4  EFD6  F022         	goto	u10990
 11556  0045A8                     u10991:
 11557  0045A8  EFB6  F022         	goto	l10420
 11558  0045AC                     u10990:
 11559  0045AC                     
 11560                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 11561  0045AC  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 11562  0045AE                     
 11563                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 11564  0045AE  B021               	btfsc	calc_parity_odd@number_of_ones^0,0,c
 11565  0045B0  EFDC  F022         	goto	u11001
 11566  0045B4  EFDE  F022         	goto	u11000
 11567  0045B8                     u11001:
 11568  0045B8  EFE1  F022         	goto	l10434
 11569  0045BC                     u11000:
 11570  0045BC                     
 11571                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 11572  0045BC  0E01               	movlw	1
 11573  0045BE  EFE2  F022         	goto	l828
 11574  0045C2                     l10434:
 11575                           
 11576                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 11577  0045C2  0E00               	movlw	0
 11578  0045C4                     l828:
 11579  0045C4  0012               	return		;funcret
 11580  0045C6                     __end_of_calc_parity_odd:
 11581                           	callstack 0
 11582                           
 11583 ;; *************** function _calc_parity_even *****************
 11584 ;; Defined at:
 11585 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  data            1    wreg     unsigned char 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;  data            1   31[COMRAM] unsigned char 
 11590 ;;  l_counter       1   33[COMRAM] unsigned char 
 11591 ;;  number_of_on    1   32[COMRAM] unsigned char 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      unsigned char 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, status,0
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;Total ram usage:        5 bytes
 11606 ;; Hardware stack levels used: 1
 11607 ;; Hardware stack levels required when called: 8
 11608 ;; This function calls:
 11609 ;;		Nothing
 11610 ;; This function is called by:
 11611 ;;		_EUSART_Async_Read_Data
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           	psect	text59
 11616  0045C6                     __ptext59:
 11617                           	callstack 0
 11618  0045C6                     _calc_parity_even:
 11619                           	callstack 19
 11620                           
 11621                           ;incstack = 0
 11622                           ;calc_parity_even@data stored from wreg
 11623  0045C6  6E20               	movwf	calc_parity_even@data^0,c
 11624  0045C8                     
 11625                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 11626  0045C8  0E00               	movlw	0
 11627  0045CA  6E21               	movwf	calc_parity_even@number_of_ones^0,c
 11628                           
 11629                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 11630  0045CC  0E00               	movlw	0
 11631  0045CE  6E22               	movwf	calc_parity_even@l_counter^0,c
 11632                           
 11633                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 11634  0045D0  0E00               	movlw	0
 11635  0045D2  6E22               	movwf	calc_parity_even@l_counter^0,c
 11636  0045D4                     l10396:
 11637                           
 11638                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 11639  0045D4  C022  F01E         	movff	calc_parity_even@l_counter,??_calc_parity_even
 11640  0045D8  0E01               	movlw	1
 11641  0045DA  6E1F               	movwf	(??_calc_parity_even+1)^0,c
 11642  0045DC  2A1E               	incf	??_calc_parity_even^0,f,c
 11643  0045DE  EFF3  F022         	goto	u10934
 11644  0045E2                     u10935:
 11645  0045E2  90D8               	bcf	status,0,c
 11646  0045E4  361F               	rlcf	(??_calc_parity_even+1)^0,f,c
 11647  0045E6                     u10934:
 11648  0045E6  2E1E               	decfsz	??_calc_parity_even^0,f,c
 11649  0045E8  EFF1  F022         	goto	u10935
 11650  0045EC  501F               	movf	(??_calc_parity_even+1)^0,w,c
 11651  0045EE  1420               	andwf	calc_parity_even@data^0,w,c
 11652  0045F0  0900               	iorlw	0
 11653  0045F2  B4D8               	btfsc	status,2,c
 11654  0045F4  EFFE  F022         	goto	u10941
 11655  0045F8  EF00  F023         	goto	u10940
 11656  0045FC                     u10941:
 11657  0045FC  EF01  F023         	goto	l833
 11658  004600                     u10940:
 11659  004600                     
 11660                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 11661  004600  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 11662  004602                     l833:
 11663                           
 11664                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 11665  004602  2A22               	incf	calc_parity_even@l_counter^0,f,c
 11666  004604  0E07               	movlw	7
 11667  004606  6422               	cpfsgt	calc_parity_even@l_counter^0,c
 11668  004608  EF08  F023         	goto	u10951
 11669  00460C  EF0A  F023         	goto	u10950
 11670  004610                     u10951:
 11671  004610  EFEA  F022         	goto	l10396
 11672  004614                     u10950:
 11673  004614                     
 11674                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 11675  004614  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 11676  004616                     
 11677                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 11678  004616  A021               	btfss	calc_parity_even@number_of_ones^0,0,c
 11679  004618  EF10  F023         	goto	u10961
 11680  00461C  EF12  F023         	goto	u10960
 11681  004620                     u10961:
 11682  004620  EF15  F023         	goto	l10410
 11683  004624                     u10960:
 11684  004624                     
 11685                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 11686  004624  0E01               	movlw	1
 11687  004626  EF16  F023         	goto	l835
 11688  00462A                     l10410:
 11689                           
 11690                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 11691  00462A  0E00               	movlw	0
 11692  00462C                     l835:
 11693  00462C  0012               	return		;funcret
 11694  00462E                     __end_of_calc_parity_even:
 11695                           	callstack 0
 11696                           
 11697 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
 11698 ;; Defined at:
 11699 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 11700 ;; Parameters:    Size  Location     Type
 11701 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 11702 ;;		 -> TEST_PIN(1), 
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;  ERRORSTATUS     1    0        unsigned char 
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      unsigned char 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;Total ram usage:        7 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 8
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_main
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text60
 11729  00433A                     __ptext60:
 11730                           	callstack 0
 11731  00433A                     _GPIO_Pin_Toggle_Logic:
 11732                           	callstack 22
 11733  00433A                     
 11734                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 11735  00433A  501E               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 11736  00433C  101F               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 11737  00433E  A4D8               	btfss	status,2,c
 11738  004340  EFA4  F021         	goto	u8081
 11739  004344  EFA6  F021         	goto	u8080
 11740  004348                     u8081:
 11741  004348  EFA8  F021         	goto	l8168
 11742  00434C                     u8080:
 11743  00434C                     
 11744                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 11745  00434C  EFD4  F021         	goto	l921
 11746  004350                     l8168:
 11747                           
 11748                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 11749  004350  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 11750  004354  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 11751  004358  50DF               	movf	223,w,c
 11752  00435A  0B07               	andlw	7
 11753  00435C  6E20               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
 11754  00435E  0E01               	movlw	1
 11755  004360  6E21               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
 11756  004362  2A20               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
 11757  004364  EFB6  F021         	goto	u8094
 11758  004368                     u8095:
 11759  004368  90D8               	bcf	status,0,c
 11760  00436A  3621               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
 11761  00436C                     u8094:
 11762  00436C  2E20               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
 11763  00436E  EFB4  F021         	goto	u8095
 11764  004372  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 11765  004376  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 11766  00437A  30DF               	rrcf	223,w,c
 11767  00437C  32E8               	rrcf	wreg,f,c
 11768  00437E  32E8               	rrcf	wreg,f,c
 11769  004380  0B07               	andlw	7
 11770  004382  6E22               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
 11771  004384  5022               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
 11772  004386  0D02               	mullw	2
 11773  004388  0EA6               	movlw	low _lat_registers
 11774  00438A  24F3               	addwf	243,w,c
 11775  00438C  6ED9               	movwf	fsr2l,c
 11776  00438E  0E00               	movlw	high _lat_registers
 11777  004390  20F4               	addwfc	prodh,w,c
 11778  004392  6EDA               	movwf	fsr2h,c
 11779  004394  CFDE F023          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
 11780  004398  CFDD F024          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
 11781  00439C  C023  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
 11782  0043A0  C024  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
 11783  0043A4  5021               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
 11784  0043A6  1ADF               	xorwf	indf2,f,c
 11785  0043A8                     l921:
 11786  0043A8  0012               	return		;funcret
 11787  0043AA                     __end_of_GPIO_Pin_Toggle_Logic:
 11788                           	callstack 0
 11789                           
 11790 ;; *************** function _InterruptManagerLow *****************
 11791 ;; Defined at:
 11792 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;		None
 11795 ;; Auto vars:     Size  Location     Type
 11796 ;;		None
 11797 ;; Return value:  Size  Location     Type
 11798 ;;                  1    wreg      void 
 11799 ;; Registers used:
 11800 ;;		wreg, status,2, cstack
 11801 ;; Tracked objects:
 11802 ;;		On entry : 0/0
 11803 ;;		On exit  : 0/0
 11804 ;;		Unchanged: 0/0
 11805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11810 ;;Total ram usage:        3 bytes
 11811 ;; Hardware stack levels used: 1
 11812 ;; Hardware stack levels required when called: 7
 11813 ;; This function calls:
 11814 ;;		_ADC_ISR
 11815 ;;		_INT1_ISR
 11816 ;;		_RB4_ISR
 11817 ;;		_RB5_ISR
 11818 ;;		_RB6_ISR
 11819 ;;		_RB7_ISR
 11820 ;; This function is called by:
 11821 ;;		Interrupt level 1
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           	psect	intcodelo
 11826  000018                     __pintcodelo:
 11827                           	callstack 0
 11828  000018                     _InterruptManagerLow:
 11829                           	callstack 17
 11830                           
 11831                           ;incstack = 0
 11832  000018  8042               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 11833  00001A  CFD8 F01B          	movff	status,??_InterruptManagerLow
 11834  00001E  CFE8 F01C          	movff	wreg,??_InterruptManagerLow+1
 11835  000022  CFE0 F01D          	movff	bsr,??_InterruptManagerLow+2
 11836  000026                     
 11837                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
 11838  000026  A6F0               	btfss	240,3,c	;volatile
 11839  000028  EF18  F000         	goto	i1u917_21
 11840  00002C  EF1A  F000         	goto	i1u917_20
 11841  000030                     i1u917_21:
 11842  000030  EF23  F000         	goto	i1l1164
 11843  000034                     i1u917_20:
 11844  000034  A0F0               	btfss	240,0,c	;volatile
 11845  000036  EF1F  F000         	goto	i1u918_21
 11846  00003A  EF21  F000         	goto	i1u918_20
 11847  00003E                     i1u918_21:
 11848  00003E  EF23  F000         	goto	i1l1164
 11849  000042                     i1u918_20:
 11850  000042                     
 11851                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
 11852  000042  EC2D  F026         	call	_INT1_ISR	;wreg free
 11853  000046                     i1l1164:
 11854                           
 11855                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 11856  000046  A6F2               	btfss	242,3,c	;volatile
 11857  000048  EF28  F000         	goto	i1u919_21
 11858  00004C  EF2A  F000         	goto	i1u919_20
 11859  000050                     i1u919_21:
 11860  000050  EF43  F000         	goto	i1l1166
 11861  000054                     i1u919_20:
 11862  000054  A0F2               	btfss	242,0,c	;volatile
 11863  000056  EF2F  F000         	goto	i1u920_21
 11864  00005A  EF31  F000         	goto	i1u920_20
 11865  00005E                     i1u920_21:
 11866  00005E  EF43  F000         	goto	i1l1166
 11867  000062                     i1u920_20:
 11868  000062  A881               	btfss	129,4,c	;volatile
 11869  000064  EF36  F000         	goto	i1u921_21
 11870  000068  EF38  F000         	goto	i1u921_20
 11871  00006C                     i1u921_21:
 11872  00006C  EF43  F000         	goto	i1l1166
 11873  000070                     i1u921_20:
 11874  000070  A03D               	btfss	_flags^0,0,c	;volatile
 11875  000072  EF3D  F000         	goto	i1u922_21
 11876  000076  EF3F  F000         	goto	i1u922_20
 11877  00007A                     i1u922_21:
 11878  00007A  EF43  F000         	goto	i1l1166
 11879  00007E                     i1u922_20:
 11880  00007E                     
 11881                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
 11882  00007E  903D               	bcf	_flags^0,0,c	;volatile
 11883  000080                     
 11884                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
 11885  000080  0E01               	movlw	1
 11886  000082  EC19  F026         	call	_RB4_ISR
 11887  000086                     i1l1166:
 11888                           
 11889                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 11890  000086  A6F2               	btfss	242,3,c	;volatile
 11891  000088  EF48  F000         	goto	i1u923_21
 11892  00008C  EF4A  F000         	goto	i1u923_20
 11893  000090                     i1u923_21:
 11894  000090  EF63  F000         	goto	i1l1168
 11895  000094                     i1u923_20:
 11896  000094  A0F2               	btfss	242,0,c	;volatile
 11897  000096  EF4F  F000         	goto	i1u924_21
 11898  00009A  EF51  F000         	goto	i1u924_20
 11899  00009E                     i1u924_21:
 11900  00009E  EF63  F000         	goto	i1l1168
 11901  0000A2                     i1u924_20:
 11902  0000A2  B881               	btfsc	129,4,c	;volatile
 11903  0000A4  EF56  F000         	goto	i1u925_21
 11904  0000A8  EF58  F000         	goto	i1u925_20
 11905  0000AC                     i1u925_21:
 11906  0000AC  EF63  F000         	goto	i1l1168
 11907  0000B0                     i1u925_20:
 11908  0000B0  B03D               	btfsc	_flags^0,0,c	;volatile
 11909  0000B2  EF5D  F000         	goto	i1u926_21
 11910  0000B6  EF5F  F000         	goto	i1u926_20
 11911  0000BA                     i1u926_21:
 11912  0000BA  EF63  F000         	goto	i1l1168
 11913  0000BE                     i1u926_20:
 11914  0000BE                     
 11915                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
 11916  0000BE  803D               	bsf	_flags^0,0,c	;volatile
 11917  0000C0                     
 11918                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
 11919  0000C0  0E00               	movlw	0
 11920  0000C2  EC19  F026         	call	_RB4_ISR
 11921  0000C6                     i1l1168:
 11922                           
 11923                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 11924  0000C6  A6F2               	btfss	242,3,c	;volatile
 11925  0000C8  EF68  F000         	goto	i1u927_21
 11926  0000CC  EF6A  F000         	goto	i1u927_20
 11927  0000D0                     i1u927_21:
 11928  0000D0  EF83  F000         	goto	i1l1170
 11929  0000D4                     i1u927_20:
 11930  0000D4  A0F2               	btfss	242,0,c	;volatile
 11931  0000D6  EF6F  F000         	goto	i1u928_21
 11932  0000DA  EF71  F000         	goto	i1u928_20
 11933  0000DE                     i1u928_21:
 11934  0000DE  EF83  F000         	goto	i1l1170
 11935  0000E2                     i1u928_20:
 11936  0000E2  AA81               	btfss	129,5,c	;volatile
 11937  0000E4  EF76  F000         	goto	i1u929_21
 11938  0000E8  EF78  F000         	goto	i1u929_20
 11939  0000EC                     i1u929_21:
 11940  0000EC  EF83  F000         	goto	i1l1170
 11941  0000F0                     i1u929_20:
 11942  0000F0  A23D               	btfss	_flags^0,1,c	;volatile
 11943  0000F2  EF7D  F000         	goto	i1u930_21
 11944  0000F6  EF7F  F000         	goto	i1u930_20
 11945  0000FA                     i1u930_21:
 11946  0000FA  EF83  F000         	goto	i1l1170
 11947  0000FE                     i1u930_20:
 11948  0000FE                     
 11949                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
 11950  0000FE  923D               	bcf	_flags^0,1,c	;volatile
 11951  000100                     
 11952                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
 11953  000100  0E01               	movlw	1
 11954  000102  EC0C  F026         	call	_RB5_ISR
 11955  000106                     i1l1170:
 11956                           
 11957                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 11958  000106  A6F2               	btfss	242,3,c	;volatile
 11959  000108  EF88  F000         	goto	i1u931_21
 11960  00010C  EF8A  F000         	goto	i1u931_20
 11961  000110                     i1u931_21:
 11962  000110  EFA3  F000         	goto	i1l1172
 11963  000114                     i1u931_20:
 11964  000114  A0F2               	btfss	242,0,c	;volatile
 11965  000116  EF8F  F000         	goto	i1u932_21
 11966  00011A  EF91  F000         	goto	i1u932_20
 11967  00011E                     i1u932_21:
 11968  00011E  EFA3  F000         	goto	i1l1172
 11969  000122                     i1u932_20:
 11970  000122  BA81               	btfsc	129,5,c	;volatile
 11971  000124  EF96  F000         	goto	i1u933_21
 11972  000128  EF98  F000         	goto	i1u933_20
 11973  00012C                     i1u933_21:
 11974  00012C  EFA3  F000         	goto	i1l1172
 11975  000130                     i1u933_20:
 11976  000130  B23D               	btfsc	_flags^0,1,c	;volatile
 11977  000132  EF9D  F000         	goto	i1u934_21
 11978  000136  EF9F  F000         	goto	i1u934_20
 11979  00013A                     i1u934_21:
 11980  00013A  EFA3  F000         	goto	i1l1172
 11981  00013E                     i1u934_20:
 11982  00013E                     
 11983                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
 11984  00013E  823D               	bsf	_flags^0,1,c	;volatile
 11985  000140                     
 11986                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
 11987  000140  0E00               	movlw	0
 11988  000142  EC0C  F026         	call	_RB5_ISR
 11989  000146                     i1l1172:
 11990                           
 11991                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 11992  000146  A6F2               	btfss	242,3,c	;volatile
 11993  000148  EFA8  F000         	goto	i1u935_21
 11994  00014C  EFAA  F000         	goto	i1u935_20
 11995  000150                     i1u935_21:
 11996  000150  EFC3  F000         	goto	i1l1174
 11997  000154                     i1u935_20:
 11998  000154  A0F2               	btfss	242,0,c	;volatile
 11999  000156  EFAF  F000         	goto	i1u936_21
 12000  00015A  EFB1  F000         	goto	i1u936_20
 12001  00015E                     i1u936_21:
 12002  00015E  EFC3  F000         	goto	i1l1174
 12003  000162                     i1u936_20:
 12004  000162  AC81               	btfss	129,6,c	;volatile
 12005  000164  EFB6  F000         	goto	i1u937_21
 12006  000168  EFB8  F000         	goto	i1u937_20
 12007  00016C                     i1u937_21:
 12008  00016C  EFC3  F000         	goto	i1l1174
 12009  000170                     i1u937_20:
 12010  000170  A43D               	btfss	_flags^0,2,c	;volatile
 12011  000172  EFBD  F000         	goto	i1u938_21
 12012  000176  EFBF  F000         	goto	i1u938_20
 12013  00017A                     i1u938_21:
 12014  00017A  EFC3  F000         	goto	i1l1174
 12015  00017E                     i1u938_20:
 12016  00017E                     
 12017                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
 12018  00017E  943D               	bcf	_flags^0,2,c	;volatile
 12019  000180                     
 12020                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
 12021  000180  0E01               	movlw	1
 12022  000182  ECFF  F025         	call	_RB6_ISR
 12023  000186                     i1l1174:
 12024                           
 12025                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12026  000186  A6F2               	btfss	242,3,c	;volatile
 12027  000188  EFC8  F000         	goto	i1u939_21
 12028  00018C  EFCA  F000         	goto	i1u939_20
 12029  000190                     i1u939_21:
 12030  000190  EFE3  F000         	goto	i1l1176
 12031  000194                     i1u939_20:
 12032  000194  A0F2               	btfss	242,0,c	;volatile
 12033  000196  EFCF  F000         	goto	i1u940_21
 12034  00019A  EFD1  F000         	goto	i1u940_20
 12035  00019E                     i1u940_21:
 12036  00019E  EFE3  F000         	goto	i1l1176
 12037  0001A2                     i1u940_20:
 12038  0001A2  BC81               	btfsc	129,6,c	;volatile
 12039  0001A4  EFD6  F000         	goto	i1u941_21
 12040  0001A8  EFD8  F000         	goto	i1u941_20
 12041  0001AC                     i1u941_21:
 12042  0001AC  EFE3  F000         	goto	i1l1176
 12043  0001B0                     i1u941_20:
 12044  0001B0  B43D               	btfsc	_flags^0,2,c	;volatile
 12045  0001B2  EFDD  F000         	goto	i1u942_21
 12046  0001B6  EFDF  F000         	goto	i1u942_20
 12047  0001BA                     i1u942_21:
 12048  0001BA  EFE3  F000         	goto	i1l1176
 12049  0001BE                     i1u942_20:
 12050  0001BE                     
 12051                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
 12052  0001BE  843D               	bsf	_flags^0,2,c	;volatile
 12053  0001C0                     
 12054                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
 12055  0001C0  0E00               	movlw	0
 12056  0001C2  ECFF  F025         	call	_RB6_ISR
 12057  0001C6                     i1l1176:
 12058                           
 12059                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12060  0001C6  A6F2               	btfss	242,3,c	;volatile
 12061  0001C8  EFE8  F000         	goto	i1u943_21
 12062  0001CC  EFEA  F000         	goto	i1u943_20
 12063  0001D0                     i1u943_21:
 12064  0001D0  EF03  F001         	goto	i1l1178
 12065  0001D4                     i1u943_20:
 12066  0001D4  A0F2               	btfss	242,0,c	;volatile
 12067  0001D6  EFEF  F000         	goto	i1u944_21
 12068  0001DA  EFF1  F000         	goto	i1u944_20
 12069  0001DE                     i1u944_21:
 12070  0001DE  EF03  F001         	goto	i1l1178
 12071  0001E2                     i1u944_20:
 12072  0001E2  AE81               	btfss	129,7,c	;volatile
 12073  0001E4  EFF6  F000         	goto	i1u945_21
 12074  0001E8  EFF8  F000         	goto	i1u945_20
 12075  0001EC                     i1u945_21:
 12076  0001EC  EF03  F001         	goto	i1l1178
 12077  0001F0                     i1u945_20:
 12078  0001F0  A63D               	btfss	_flags^0,3,c	;volatile
 12079  0001F2  EFFD  F000         	goto	i1u946_21
 12080  0001F6  EFFF  F000         	goto	i1u946_20
 12081  0001FA                     i1u946_21:
 12082  0001FA  EF03  F001         	goto	i1l1178
 12083  0001FE                     i1u946_20:
 12084  0001FE                     
 12085                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
 12086  0001FE  963D               	bcf	_flags^0,3,c	;volatile
 12087  000200                     
 12088                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
 12089  000200  0E01               	movlw	1
 12090  000202  ECF2  F025         	call	_RB7_ISR
 12091  000206                     i1l1178:
 12092                           
 12093                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12094  000206  A6F2               	btfss	242,3,c	;volatile
 12095  000208  EF08  F001         	goto	i1u947_21
 12096  00020C  EF0A  F001         	goto	i1u947_20
 12097  000210                     i1u947_21:
 12098  000210  EF23  F001         	goto	i1l1180
 12099  000214                     i1u947_20:
 12100  000214  A0F2               	btfss	242,0,c	;volatile
 12101  000216  EF0F  F001         	goto	i1u948_21
 12102  00021A  EF11  F001         	goto	i1u948_20
 12103  00021E                     i1u948_21:
 12104  00021E  EF23  F001         	goto	i1l1180
 12105  000222                     i1u948_20:
 12106  000222  BE81               	btfsc	129,7,c	;volatile
 12107  000224  EF16  F001         	goto	i1u949_21
 12108  000228  EF18  F001         	goto	i1u949_20
 12109  00022C                     i1u949_21:
 12110  00022C  EF23  F001         	goto	i1l1180
 12111  000230                     i1u949_20:
 12112  000230  B63D               	btfsc	_flags^0,3,c	;volatile
 12113  000232  EF1D  F001         	goto	i1u950_21
 12114  000236  EF1F  F001         	goto	i1u950_20
 12115  00023A                     i1u950_21:
 12116  00023A  EF23  F001         	goto	i1l1180
 12117  00023E                     i1u950_20:
 12118  00023E                     
 12119                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
 12120  00023E  863D               	bsf	_flags^0,3,c	;volatile
 12121  000240                     
 12122                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
 12123  000240  0E00               	movlw	0
 12124  000242  ECF2  F025         	call	_RB7_ISR
 12125  000246                     i1l1180:
 12126                           
 12127                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
 12128  000246  AC9D               	btfss	157,6,c	;volatile
 12129  000248  EF28  F001         	goto	i1u951_21
 12130  00024C  EF2A  F001         	goto	i1u951_20
 12131  000250                     i1u951_21:
 12132  000250  EF33  F001         	goto	i1l1182
 12133  000254                     i1u951_20:
 12134  000254  AC9E               	btfss	158,6,c	;volatile
 12135  000256  EF2F  F001         	goto	i1u952_21
 12136  00025A  EF31  F001         	goto	i1u952_20
 12137  00025E                     i1u952_21:
 12138  00025E  EF33  F001         	goto	i1l1182
 12139  000262                     i1u952_20:
 12140  000262                     
 12141                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
 12142  000262  EC30  F026         	call	_ADC_ISR	;wreg free
 12143  000266                     i1l1182:
 12144                           
 12145                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
 12146  000266  A09D               	btfss	157,0,c	;volatile
 12147  000268  EF38  F001         	goto	i1u953_21
 12148  00026C  EF3A  F001         	goto	i1u953_20
 12149  000270                     i1u953_21:
 12150  000270  EF3B  F001         	goto	i1l1185
 12151  000274                     i1u953_20:
 12152  000274  509E               	movf	158,w,c	;volatile
 12153  000276                     i1l1185:
 12154  000276  C01D  FFE0         	movff	??_InterruptManagerLow+2,bsr
 12155  00027A  C01C  FFE8         	movff	??_InterruptManagerLow+1,wreg
 12156  00027E  C01B  FFD8         	movff	??_InterruptManagerLow,status
 12157  000282  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12158  000284  0010               	retfie	
 12159  000286                     __end_of_InterruptManagerLow:
 12160                           	callstack 0
 12161                           
 12162 ;; *************** function _RB7_ISR *****************
 12163 ;; Defined at:
 12164 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;  Handler_Sele    1    wreg     unsigned char 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  1    wreg      void 
 12171 ;; Registers used:
 12172 ;;		wreg, status,2
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;Total ram usage:        1 bytes
 12183 ;; Hardware stack levels used: 1
 12184 ;; Hardware stack levels required when called: 6
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		_InterruptManagerLow
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text62
 12193  004BE4                     __ptext62:
 12194                           	callstack 0
 12195  004BE4                     _RB7_ISR:
 12196                           	callstack 17
 12197                           
 12198                           ;incstack = 0
 12199                           ;RB7_ISR@Handler_Select stored from wreg
 12200  004BE4  6E1A               	movwf	RB7_ISR@Handler_Select^0,c
 12201  004BE6                     
 12202                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
 12203  004BE6  90F2               	bcf	242,0,c	;volatile
 12204  004BE8                     
 12205                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
 12206  004BE8  501A               	movf	RB7_ISR@Handler_Select^0,w,c
 12207  004BEA  B4D8               	btfsc	status,2,c
 12208  004BEC  EFFA  F025         	goto	i1u813_21
 12209  004BF0  EFFC  F025         	goto	i1u813_20
 12210  004BF4                     i1u813_21:
 12211  004BF4  EFFE  F025         	goto	i1l8208
 12212  004BF8                     i1u813_20:
 12213  004BF8  EFFE  F025         	goto	i1l1291
 12214  004BFC                     i1l8208:
 12215  004BFC                     i1l1291:
 12216  004BFC  0012               	return		;funcret
 12217  004BFE                     __end_of_RB7_ISR:
 12218                           	callstack 0
 12219                           
 12220 ;; *************** function _RB6_ISR *****************
 12221 ;; Defined at:
 12222 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  Handler_Sele    1    wreg     unsigned char 
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1    wreg      void 
 12229 ;; Registers used:
 12230 ;;		wreg, status,2
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;Total ram usage:        1 bytes
 12241 ;; Hardware stack levels used: 1
 12242 ;; Hardware stack levels required when called: 6
 12243 ;; This function calls:
 12244 ;;		Nothing
 12245 ;; This function is called by:
 12246 ;;		_InterruptManagerLow
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           	psect	text63
 12251  004BFE                     __ptext63:
 12252                           	callstack 0
 12253  004BFE                     _RB6_ISR:
 12254                           	callstack 17
 12255                           
 12256                           ;incstack = 0
 12257                           ;RB6_ISR@Handler_Select stored from wreg
 12258  004BFE  6E1A               	movwf	RB6_ISR@Handler_Select^0,c
 12259  004C00                     
 12260                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
 12261  004C00  90F2               	bcf	242,0,c	;volatile
 12262  004C02                     
 12263                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
 12264  004C02  501A               	movf	RB6_ISR@Handler_Select^0,w,c
 12265  004C04  B4D8               	btfsc	status,2,c
 12266  004C06  EF07  F026         	goto	i1u812_21
 12267  004C0A  EF09  F026         	goto	i1u812_20
 12268  004C0E                     i1u812_21:
 12269  004C0E  EF0B  F026         	goto	i1l8198
 12270  004C12                     i1u812_20:
 12271  004C12  EF0B  F026         	goto	i1l1282
 12272  004C16                     i1l8198:
 12273  004C16                     i1l1282:
 12274  004C16  0012               	return		;funcret
 12275  004C18                     __end_of_RB6_ISR:
 12276                           	callstack 0
 12277                           
 12278 ;; *************** function _RB5_ISR *****************
 12279 ;; Defined at:
 12280 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  Handler_Sele    1    wreg     unsigned char 
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  1    wreg      void 
 12287 ;; Registers used:
 12288 ;;		wreg, status,2
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12298 ;;Total ram usage:        1 bytes
 12299 ;; Hardware stack levels used: 1
 12300 ;; Hardware stack levels required when called: 6
 12301 ;; This function calls:
 12302 ;;		Nothing
 12303 ;; This function is called by:
 12304 ;;		_InterruptManagerLow
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308                           	psect	text64
 12309  004C18                     __ptext64:
 12310                           	callstack 0
 12311  004C18                     _RB5_ISR:
 12312                           	callstack 17
 12313                           
 12314                           ;incstack = 0
 12315                           ;RB5_ISR@Handler_Select stored from wreg
 12316  004C18  6E1A               	movwf	RB5_ISR@Handler_Select^0,c
 12317  004C1A                     
 12318                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
 12319  004C1A  90F2               	bcf	242,0,c	;volatile
 12320  004C1C                     
 12321                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
 12322  004C1C  501A               	movf	RB5_ISR@Handler_Select^0,w,c
 12323  004C1E  B4D8               	btfsc	status,2,c
 12324  004C20  EF14  F026         	goto	i1u811_21
 12325  004C24  EF16  F026         	goto	i1u811_20
 12326  004C28                     i1u811_21:
 12327  004C28  EF18  F026         	goto	i1l8188
 12328  004C2C                     i1u811_20:
 12329  004C2C  EF18  F026         	goto	i1l1273
 12330  004C30                     i1l8188:
 12331  004C30                     i1l1273:
 12332  004C30  0012               	return		;funcret
 12333  004C32                     __end_of_RB5_ISR:
 12334                           	callstack 0
 12335                           
 12336 ;; *************** function _RB4_ISR *****************
 12337 ;; Defined at:
 12338 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12339 ;; Parameters:    Size  Location     Type
 12340 ;;  Handler_Sele    1    wreg     unsigned char 
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  1    wreg      void 
 12345 ;; Registers used:
 12346 ;;		wreg, status,2
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12356 ;;Total ram usage:        1 bytes
 12357 ;; Hardware stack levels used: 1
 12358 ;; Hardware stack levels required when called: 6
 12359 ;; This function calls:
 12360 ;;		Nothing
 12361 ;; This function is called by:
 12362 ;;		_InterruptManagerLow
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text65
 12367  004C32                     __ptext65:
 12368                           	callstack 0
 12369  004C32                     _RB4_ISR:
 12370                           	callstack 17
 12371                           
 12372                           ;incstack = 0
 12373                           ;RB4_ISR@Handler_Select stored from wreg
 12374  004C32  6E1A               	movwf	RB4_ISR@Handler_Select^0,c
 12375  004C34                     
 12376                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
 12377  004C34  90F2               	bcf	242,0,c	;volatile
 12378  004C36                     
 12379                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
 12380  004C36  501A               	movf	RB4_ISR@Handler_Select^0,w,c
 12381  004C38  B4D8               	btfsc	status,2,c
 12382  004C3A  EF21  F026         	goto	i1u810_21
 12383  004C3E  EF23  F026         	goto	i1u810_20
 12384  004C42                     i1u810_21:
 12385  004C42  EF25  F026         	goto	i1l8178
 12386  004C46                     i1u810_20:
 12387  004C46  EF25  F026         	goto	i1l1264
 12388  004C4A                     i1l8178:
 12389  004C4A                     i1l1264:
 12390  004C4A  0012               	return		;funcret
 12391  004C4C                     __end_of_RB4_ISR:
 12392                           	callstack 0
 12393                           
 12394 ;; *************** function _INT1_ISR *****************
 12395 ;; Defined at:
 12396 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;		None
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;		None
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		None
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;Total ram usage:        0 bytes
 12415 ;; Hardware stack levels used: 1
 12416 ;; Hardware stack levels required when called: 6
 12417 ;; This function calls:
 12418 ;;		Nothing
 12419 ;; This function is called by:
 12420 ;;		_InterruptManagerLow
 12421 ;; This function uses a non-reentrant model
 12422 ;;
 12423                           
 12424                           	psect	text66
 12425  004C5A                     __ptext66:
 12426                           	callstack 0
 12427  004C5A                     _INT1_ISR:
 12428                           	callstack 17
 12429  004C5A                     
 12430                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
 12431  004C5A  90F0               	bcf	240,0,c	;volatile
 12432  004C5C  0012               	return		;funcret
 12433  004C5E                     __end_of_INT1_ISR:
 12434                           	callstack 0
 12435                           
 12436 ;; *************** function _ADC_ISR *****************
 12437 ;; Defined at:
 12438 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;		None
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;		None
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  1    wreg      void 
 12445 ;; Registers used:
 12446 ;;		None
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12456 ;;Total ram usage:        0 bytes
 12457 ;; Hardware stack levels used: 1
 12458 ;; Hardware stack levels required when called: 6
 12459 ;; This function calls:
 12460 ;;		Nothing
 12461 ;; This function is called by:
 12462 ;;		_InterruptManagerLow
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           	psect	text67
 12467  004C60                     __ptext67:
 12468                           	callstack 0
 12469  004C60                     _ADC_ISR:
 12470                           	callstack 17
 12471  004C60  0012               	return		;funcret
 12472  004C62                     __end_of_ADC_ISR:
 12473                           	callstack 0
 12474                           
 12475 ;; *************** function _InterruptManagerHigh *****************
 12476 ;; Defined at:
 12477 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;		None
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;		None
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1    wreg      void 
 12484 ;; Registers used:
 12485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12495 ;;Total ram usage:        6 bytes
 12496 ;; Hardware stack levels used: 1
 12497 ;; Hardware stack levels required when called: 5
 12498 ;; This function calls:
 12499 ;;		_EUSART_Rx_ISR
 12500 ;;		_EUSART_Tx_ISR
 12501 ;;		_TMR0_ISR
 12502 ;; This function is called by:
 12503 ;;		Interrupt level 2
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           	psect	intcode
 12508  000008                     __pintcode:
 12509                           	callstack 0
 12510  000008                     _InterruptManagerHigh:
 12511                           	callstack 17
 12512                           
 12513                           ;incstack = 0
 12514  000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12515  00000A  EFE5  F01A         	goto	int_func
 12516                           
 12517                           	psect	intcode_body
 12518  0035CA                     __pintcode_body:
 12519                           	callstack 17
 12520  0035CA                     int_func:
 12521                           	callstack 17
 12522  0035CA  CFFA F014          	movff	pclath,??_InterruptManagerHigh
 12523  0035CE  CFFB F015          	movff	pclatu,??_InterruptManagerHigh+1
 12524  0035D2  CFD9 F016          	movff	fsr2l,??_InterruptManagerHigh+2
 12525  0035D6  CFDA F017          	movff	fsr2h,??_InterruptManagerHigh+3
 12526  0035DA  CFF3 F018          	movff	prodl,??_InterruptManagerHigh+4
 12527  0035DE  CFF4 F019          	movff	prodh,??_InterruptManagerHigh+5
 12528  0035E2                     
 12529                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
 12530  0035E2  AAF2               	btfss	242,5,c	;volatile
 12531  0035E4  EFF6  F01A         	goto	i2u906_41
 12532  0035E8  EFF8  F01A         	goto	i2u906_40
 12533  0035EC                     i2u906_41:
 12534  0035EC  EF01  F01B         	goto	i2l1143
 12535  0035F0                     i2u906_40:
 12536  0035F0  A4F2               	btfss	242,2,c	;volatile
 12537  0035F2  EFFD  F01A         	goto	i2u907_41
 12538  0035F6  EFFF  F01A         	goto	i2u907_40
 12539  0035FA                     i2u907_41:
 12540  0035FA  EF01  F01B         	goto	i2l1143
 12541  0035FE                     i2u907_40:
 12542  0035FE                     
 12543                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
 12544  0035FE  EC31  F026         	call	_TMR0_ISR	;wreg free
 12545  003602                     i2l1143:
 12546                           
 12547                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
 12548  003602  A29D               	btfss	157,1,c	;volatile
 12549  003604  EF06  F01B         	goto	i2u908_41
 12550  003608  EF08  F01B         	goto	i2u908_40
 12551  00360C                     i2u908_41:
 12552  00360C  EF09  F01B         	goto	i2l1145
 12553  003610                     i2u908_40:
 12554  003610  509E               	movf	158,w,c	;volatile
 12555  003612                     i2l1145:
 12556                           
 12557                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
 12558  003612  A2A0               	btfss	160,1,c	;volatile
 12559  003614  EF0E  F01B         	goto	i2u909_41
 12560  003618  EF10  F01B         	goto	i2u909_40
 12561  00361C                     i2u909_41:
 12562  00361C  EF11  F01B         	goto	i2l1147
 12563  003620                     i2u909_40:
 12564  003620  50A1               	movf	161,w,c	;volatile
 12565  003622                     i2l1147:
 12566                           
 12567                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
 12568  003622  A0A0               	btfss	160,0,c	;volatile
 12569  003624  EF16  F01B         	goto	i2u910_41
 12570  003628  EF18  F01B         	goto	i2u910_40
 12571  00362C                     i2u910_41:
 12572  00362C  EF19  F01B         	goto	i2l1149
 12573  003630                     i2u910_40:
 12574  003630  50A1               	movf	161,w,c	;volatile
 12575  003632                     i2l1149:
 12576                           
 12577                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
 12578  003632  AA9D               	btfss	157,5,c	;volatile
 12579  003634  EF1E  F01B         	goto	i2u911_41
 12580  003638  EF20  F01B         	goto	i2u911_40
 12581  00363C                     i2u911_41:
 12582  00363C  EF29  F01B         	goto	i2l1151
 12583  003640                     i2u911_40:
 12584  003640  AA9E               	btfss	158,5,c	;volatile
 12585  003642  EF25  F01B         	goto	i2u912_41
 12586  003646  EF27  F01B         	goto	i2u912_40
 12587  00364A                     i2u912_41:
 12588  00364A  EF29  F01B         	goto	i2l1151
 12589  00364E                     i2u912_40:
 12590  00364E                     
 12591                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
 12592  00364E  EC44  F025         	call	_EUSART_Rx_ISR	;wreg free
 12593  003652                     i2l1151:
 12594                           
 12595                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
 12596  003652  A89D               	btfss	157,4,c	;volatile
 12597  003654  EF2E  F01B         	goto	i2u913_41
 12598  003658  EF30  F01B         	goto	i2u913_40
 12599  00365C                     i2u913_41:
 12600  00365C  EF39  F01B         	goto	i2l1153
 12601  003660                     i2u913_40:
 12602  003660  A89E               	btfss	158,4,c	;volatile
 12603  003662  EF35  F01B         	goto	i2u914_41
 12604  003666  EF37  F01B         	goto	i2u914_40
 12605  00366A                     i2u914_41:
 12606  00366A  EF39  F01B         	goto	i2l1153
 12607  00366E                     i2u914_40:
 12608  00366E                     
 12609                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
 12610  00366E  EC32  F026         	call	_EUSART_Tx_ISR	;wreg free
 12611  003672                     i2l1153:
 12612                           
 12613                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
 12614  003672  A6A0               	btfss	160,3,c	;volatile
 12615  003674  EF3E  F01B         	goto	i2u915_41
 12616  003678  EF40  F01B         	goto	i2u915_40
 12617  00367C                     i2u915_41:
 12618  00367C  EF41  F01B         	goto	i2l1155
 12619  003680                     i2u915_40:
 12620  003680  50A1               	movf	161,w,c	;volatile
 12621  003682                     i2l1155:
 12622                           
 12623                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
 12624  003682  A69D               	btfss	157,3,c	;volatile
 12625  003684  EF46  F01B         	goto	i2u916_41
 12626  003688  EF48  F01B         	goto	i2u916_40
 12627  00368C                     i2u916_41:
 12628  00368C  EF49  F01B         	goto	i2l1158
 12629  003690                     i2u916_40:
 12630  003690  509E               	movf	158,w,c	;volatile
 12631  003692                     i2l1158:
 12632  003692  C019  FFF4         	movff	??_InterruptManagerHigh+5,prodh
 12633  003696  C018  FFF3         	movff	??_InterruptManagerHigh+4,prodl
 12634  00369A  C017  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 12635  00369E  C016  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 12636  0036A2  C015  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 12637  0036A6  C014  FFFA         	movff	??_InterruptManagerHigh,pclath
 12638  0036AA  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12639  0036AC  0011               	retfie		f
 12640  0036AE                     __end_of_InterruptManagerHigh:
 12641                           	callstack 0
 12642                           
 12643 ;; *************** function _TMR0_ISR *****************
 12644 ;; Defined at:
 12645 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      void 
 12652 ;; Registers used:
 12653 ;;		None
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12663 ;;Total ram usage:        0 bytes
 12664 ;; Hardware stack levels used: 1
 12665 ;; This function calls:
 12666 ;;		Nothing
 12667 ;; This function is called by:
 12668 ;;		_InterruptManagerHigh
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672                           	psect	text69
 12673  004C62                     __ptext69:
 12674                           	callstack 0
 12675  004C62                     _TMR0_ISR:
 12676                           	callstack 21
 12677  004C62  0012               	return		;funcret
 12678  004C64                     __end_of_TMR0_ISR:
 12679                           	callstack 0
 12680                           
 12681 ;; *************** function _EUSART_Tx_ISR *****************
 12682 ;; Defined at:
 12683 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;		None
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;		None
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1    wreg      void 
 12690 ;; Registers used:
 12691 ;;		None
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12701 ;;Total ram usage:        0 bytes
 12702 ;; Hardware stack levels used: 1
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_InterruptManagerHigh
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text70
 12711  004C64                     __ptext70:
 12712                           	callstack 0
 12713  004C64                     _EUSART_Tx_ISR:
 12714                           	callstack 21
 12715  004C64  0012               	return		;funcret
 12716  004C66                     __end_of_EUSART_Tx_ISR:
 12717                           	callstack 0
 12718                           
 12719 ;; *************** function _EUSART_Rx_ISR *****************
 12720 ;; Defined at:
 12721 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;		None
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      void 
 12728 ;; Registers used:
 12729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12739 ;;Total ram usage:        0 bytes
 12740 ;; Hardware stack levels used: 1
 12741 ;; Hardware stack levels required when called: 4
 12742 ;; This function calls:
 12743 ;;		Absolute function
 12744 ;;		_usart_isr
 12745 ;; This function is called by:
 12746 ;;		_InterruptManagerHigh
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text71
 12751  004A88                     __ptext71:
 12752                           	callstack 0
 12753  004A88                     _EUSART_Rx_ISR:
 12754                           	callstack 17
 12755  004A88                     
 12756                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
 12757  004A88  5029               	movf	_eusart_Rx_InterruptHandler^0,w,c
 12758  004A8A  102A               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 12759  004A8C  B4D8               	btfsc	status,2,c
 12760  004A8E  EF4B  F025         	goto	i2u806_41
 12761  004A92  EF4D  F025         	goto	i2u806_40
 12762  004A96                     i2u806_41:
 12763  004A96  EF59  F025         	goto	i2l842
 12764  004A9A                     i2u806_40:
 12765  004A9A                     
 12766                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
 12767  004A9A  D802               	call	i2u807_48
 12768  004A9C  EF59  F025         	goto	i2u807_49
 12769  004AA0                     i2u807_48:
 12770  004AA0  0005               	push	
 12771  004AA2  6EFA               	movwf	pclath,c
 12772  004AA4  5029               	movf	_eusart_Rx_InterruptHandler^0,w,c
 12773  004AA6  6EFD               	movwf	tosl,c
 12774  004AA8  502A               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 12775  004AAA  6EFE               	movwf	tosh,c
 12776  004AAC  6AFF               	clrf	tosu,c
 12777  004AAE  50FA               	movf	pclath,w,c
 12778  004AB0  0012               	return		;indir
 12779  004AB2                     i2u807_49:
 12780  004AB2                     i2l842:
 12781  004AB2  0012               	return		;funcret
 12782  004AB4                     __end_of_EUSART_Rx_ISR:
 12783                           	callstack 0
 12784                           
 12785 ;; *************** function _usart_isr *****************
 12786 ;; Defined at:
 12787 ;;		line 411 in file "application.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;		None
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;		None
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  1    wreg      void 
 12794 ;; Registers used:
 12795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12796 ;; Tracked objects:
 12797 ;;		On entry : 0/0
 12798 ;;		On exit  : 0/0
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12805 ;;Total ram usage:        0 bytes
 12806 ;; Hardware stack levels used: 1
 12807 ;; Hardware stack levels required when called: 3
 12808 ;; This function calls:
 12809 ;;		_Bluetooth_Send_Data_Non_Blocking
 12810 ;;		i2_EUSART_Async_Read_Data
 12811 ;;		i2_GPIO_Pin_Toggle_Logic
 12812 ;; This function is called by:
 12813 ;;		_EUSART_Rx_ISR
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text72
 12818  0049CE                     __ptext72:
 12819                           	callstack 0
 12820  0049CE                     _usart_isr:
 12821                           	callstack 17
 12822  0049CE                     
 12823                           ;application.c: 413:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
 12824  0049CE  0E33               	movlw	low __uart_obj
 12825  0049D0  6E06               	movwf	i2EUSART_Async_Read_Data@_eusart_obj^0,c
 12826  0049D2  0E01               	movlw	high __uart_obj
 12827  0049D4  6E07               	movwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,c
 12828  0049D6  0E38               	movlw	low _datarecive
 12829  0049D8  6E08               	movwf	i2EUSART_Async_Read_Data@data^0,c
 12830  0049DA  0E00               	movlw	high _datarecive
 12831  0049DC  6E09               	movwf	(i2EUSART_Async_Read_Data@data+1)^0,c
 12832  0049DE  EC43  F011         	call	i2_EUSART_Async_Read_Data	;wreg free
 12833                           
 12834                           ;application.c: 414:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
 12835  0049E2  0E33               	movlw	low __uart_obj
 12836  0049E4  6E0C               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
 12837  0049E6  0E01               	movlw	high __uart_obj
 12838  0049E8  6E0D               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
 12839  0049EA  C03A  F00E         	movff	_datasend,Bluetooth_Send_Data_Non_Blocking@data
 12840  0049EE  EC6F  F025         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
 12841  0049F2                     
 12842                           ;application.c: 415:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
 12843  0049F2  0E41               	movlw	low _TEST_PIN
 12844  0049F4  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
 12845  0049F6  0E00               	movlw	high _TEST_PIN
 12846  0049F8  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
 12847  0049FA  ECD5  F021         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
 12848  0049FE  0012               	return		;funcret
 12849  004A00                     __end_of_usart_isr:
 12850                           	callstack 0
 12851                           
 12852 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
 12853 ;; Defined at:
 12854 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 12857 ;;		 -> TEST_PIN(1), 
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;  ERRORSTATUS     1    0        unsigned char 
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  1    wreg      unsigned char 
 12862 ;; Registers used:
 12863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12873 ;;Total ram usage:        7 bytes
 12874 ;; Hardware stack levels used: 1
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_usart_isr
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text73
 12883  0043AA                     __ptext73:
 12884                           	callstack 0
 12885  0043AA                     i2_GPIO_Pin_Toggle_Logic:
 12886                           	callstack 19
 12887  0043AA                     
 12888                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 12889  0043AA  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 12890  0043AC  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 12891  0043AE  A4D8               	btfss	status,2,c
 12892  0043B0  EFDC  F021         	goto	i2u755_41
 12893  0043B4  EFDE  F021         	goto	i2u755_40
 12894  0043B8                     i2u755_41:
 12895  0043B8  EFE0  F021         	goto	i2l7758
 12896  0043BC                     i2u755_40:
 12897  0043BC                     
 12898                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 12899  0043BC  EF0C  F022         	goto	i2l921
 12900  0043C0                     i2l7758:
 12901                           
 12902                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 12903  0043C0  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 12904  0043C4  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 12905  0043C8  50DF               	movf	223,w,c
 12906  0043CA  0B07               	andlw	7
 12907  0043CC  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
 12908  0043CE  0E01               	movlw	1
 12909  0043D0  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
 12910  0043D2  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 12911  0043D4  EFEE  F021         	goto	i2u756_44
 12912  0043D8                     i2u756_45:
 12913  0043D8  90D8               	bcf	status,0,c
 12914  0043DA  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
 12915  0043DC                     i2u756_44:
 12916  0043DC  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 12917  0043DE  EFEC  F021         	goto	i2u756_45
 12918  0043E2  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 12919  0043E6  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 12920  0043EA  30DF               	rrcf	223,w,c
 12921  0043EC  32E8               	rrcf	wreg,f,c
 12922  0043EE  32E8               	rrcf	wreg,f,c
 12923  0043F0  0B07               	andlw	7
 12924  0043F2  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
 12925  0043F4  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
 12926  0043F6  0D02               	mullw	2
 12927  0043F8  0EA6               	movlw	low _lat_registers
 12928  0043FA  24F3               	addwf	243,w,c
 12929  0043FC  6ED9               	movwf	fsr2l,c
 12930  0043FE  0E00               	movlw	high _lat_registers
 12931  004400  20F4               	addwfc	prodh,w,c
 12932  004402  6EDA               	movwf	fsr2h,c
 12933  004404  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
 12934  004408  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
 12935  00440C  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
 12936  004410  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
 12937  004414  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
 12938  004416  1ADF               	xorwf	indf2,f,c
 12939  004418                     i2l921:
 12940  004418  0012               	return		;funcret
 12941  00441A                     __end_ofi2_GPIO_Pin_Toggle_Logic:
 12942                           	callstack 0
 12943                           
 12944 ;; *************** function i2_EUSART_Async_Read_Data *****************
 12945 ;; Defined at:
 12946 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 12947 ;; Parameters:    Size  Location     Type
 12948 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 12949 ;;		 -> _uart_obj(12), 
 12950 ;;  data            2    7[COMRAM] PTR unsigned short 
 12951 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
 12952 ;; Auto vars:     Size  Location     Type
 12953 ;;  l_temp_data     2   17[COMRAM] unsigned short 
 12954 ;;  ret_val         1    0        unsigned char 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      unsigned char 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12967 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12968 ;;Total ram usage:       14 bytes
 12969 ;; Hardware stack levels used: 1
 12970 ;; Hardware stack levels required when called: 1
 12971 ;; This function calls:
 12972 ;;		i2_calc_parity_even
 12973 ;;		i2_calc_parity_odd
 12974 ;; This function is called by:
 12975 ;;		_usart_isr
 12976 ;; This function uses a non-reentrant model
 12977 ;;
 12978                           
 12979                           	psect	text74
 12980  002286                     __ptext74:
 12981                           	callstack 0
 12982  002286                     i2_EUSART_Async_Read_Data:
 12983                           	callstack 18
 12984  002286                     
 12985                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 12986  002286  0E00               	movlw	0
 12987  002288  6E13               	movwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 12988  00228A  0E00               	movlw	0
 12989  00228C  6E12               	movwf	i2EUSART_Async_Read_Data@l_temp_data^0,c
 12990  00228E                     
 12991                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 12992  00228E  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 12993  002290  1007               	iorwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 12994  002292  B4D8               	btfsc	status,2,c
 12995  002294  EF4E  F011         	goto	i2u740_41
 12996  002298  EF50  F011         	goto	i2u740_40
 12997  00229C                     i2u740_41:
 12998  00229C  EF59  F011         	goto	i2l7698
 12999  0022A0                     i2u740_40:
 13000  0022A0  5008               	movf	i2EUSART_Async_Read_Data@data^0,w,c
 13001  0022A2  1009               	iorwf	(i2EUSART_Async_Read_Data@data+1)^0,w,c
 13002  0022A4  A4D8               	btfss	status,2,c
 13003  0022A6  EF57  F011         	goto	i2u741_41
 13004  0022AA  EF59  F011         	goto	i2u741_40
 13005  0022AE                     i2u741_41:
 13006  0022AE  EF5B  F011         	goto	i2l693
 13007  0022B2                     i2u741_40:
 13008  0022B2                     i2l7698:
 13009                           
 13010                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 13011  0022B2  EF37  F012         	goto	i2l7748
 13012  0022B6                     i2l693:
 13013                           
 13014                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 13015  0022B6  AA9E               	btfss	158,5,c	;volatile
 13016  0022B8  EF60  F011         	goto	i2u742_41
 13017  0022BC  EF62  F011         	goto	i2u742_40
 13018  0022C0                     i2u742_41:
 13019  0022C0  EF59  F011         	goto	i2l7698
 13020  0022C4                     i2u742_40:
 13021  0022C4                     
 13022                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 13023  0022C4  EE20 F009          	lfsr	2,9
 13024  0022C8  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13025  0022CA  26D9               	addwf	fsr2l,f,c
 13026  0022CC  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13027  0022CE  22DA               	addwfc	fsr2h,f,c
 13028  0022D0  B8DF               	btfsc	indf2,4,c
 13029  0022D2  EF6D  F011         	goto	i2u743_41
 13030  0022D6  EF6F  F011         	goto	i2u743_40
 13031  0022DA                     i2u743_41:
 13032  0022DA  EF7C  F011         	goto	i2l7704
 13033  0022DE                     i2u743_40:
 13034  0022DE                     
 13035                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 13036  0022DE  50AE               	movf	174,w,c	;volatile
 13037  0022E0  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13038  0022E2  6A0B               	clrf	(??i2_EUSART_Async_Read_Data+1)^0,c
 13039  0022E4  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 13040  0022E8  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 13041  0022EC  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 13042  0022F0  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 13043                           
 13044                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 13045  0022F4  EF37  F012         	goto	i2l7748
 13046  0022F8                     i2l7704:
 13047  0022F8  EE20 F009          	lfsr	2,9
 13048  0022FC  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13049  0022FE  26D9               	addwf	fsr2l,f,c
 13050  002300  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13051  002302  22DA               	addwfc	fsr2h,f,c
 13052  002304  A8DF               	btfss	indf2,4,c
 13053  002306  EF87  F011         	goto	i2u744_41
 13054  00230A  EF89  F011         	goto	i2u744_40
 13055  00230E                     i2u744_41:
 13056  00230E  EF37  F012         	goto	i2l706
 13057  002312                     i2u744_40:
 13058  002312                     
 13059                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 13060  002312  EE20 F009          	lfsr	2,9
 13061  002316  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13062  002318  26D9               	addwf	fsr2l,f,c
 13063  00231A  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13064  00231C  22DA               	addwfc	fsr2h,f,c
 13065  00231E  30DF               	rrcf	223,w,c
 13066  002320  0B03               	andlw	3
 13067  002322  0900               	iorlw	0
 13068  002324  A4D8               	btfss	status,2,c
 13069  002326  EF97  F011         	goto	i2u745_41
 13070  00232A  EF99  F011         	goto	i2u745_40
 13071  00232E                     i2u745_41:
 13072  00232E  EFBB  F011         	goto	i2l7718
 13073  002332                     i2u745_40:
 13074  002332                     
 13075                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 13076  002332  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 13077  002336  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13078                           
 13079                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 13080  002338  B0AB               	btfsc	4011,0,c	;volatile
 13081  00233A  EFA1  F011         	goto	i2u746_41
 13082  00233E  EFA3  F011         	goto	i2u746_40
 13083  002342                     i2u746_41:
 13084  002342  EFA9  F011         	goto	i2l7712
 13085  002346                     i2u746_40:
 13086  002346  0E00               	movlw	0
 13087  002348  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 13088  00234A  0E00               	movlw	0
 13089  00234C  6E0C               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 13090  00234E  EFAD  F011         	goto	i2l7714
 13091  002352                     i2l7712:
 13092  002352  0E01               	movlw	1
 13093  002354  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 13094  002356  0E00               	movlw	0
 13095  002358  6E0C               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 13096  00235A                     i2l7714:
 13097  00235A  500C               	movf	i2_EUSART_Async_Read_Data$2031^0,w,c
 13098  00235C  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 13099  00235E  500D               	movf	(i2_EUSART_Async_Read_Data$2031+1)^0,w,c
 13100  002360  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 13101  002362                     
 13102                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 13103  002362  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 13104  002366  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 13105  00236A  C012  FFDE         	movff	i2EUSART_Async_Read_Data@l_temp_data,postinc2
 13106  00236E  C013  FFDD         	movff	i2EUSART_Async_Read_Data@l_temp_data+1,postdec2
 13107                           
 13108                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 13109  002372  EF37  F012         	goto	i2l7748
 13110  002376                     i2l7718:
 13111  002376  EE20 F009          	lfsr	2,9
 13112  00237A  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13113  00237C  26D9               	addwf	fsr2l,f,c
 13114  00237E  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13115  002380  22DA               	addwfc	fsr2h,f,c
 13116  002382  30DF               	rrcf	223,w,c
 13117  002384  0B03               	andlw	3
 13118  002386  06E8               	decf	wreg,f,c
 13119  002388  A4D8               	btfss	status,2,c
 13120  00238A  EFC9  F011         	goto	i2u747_41
 13121  00238E  EFCB  F011         	goto	i2u747_40
 13122  002392                     i2u747_41:
 13123  002392  EF00  F012         	goto	i2l7732
 13124  002396                     i2u747_40:
 13125  002396                     
 13126                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 13127  002396  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 13128  00239A  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13129                           
 13130                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 13131  00239C  B0AB               	btfsc	171,0,c	;volatile
 13132  00239E  EFD3  F011         	goto	i2u748_41
 13133  0023A2  EFD5  F011         	goto	i2u748_40
 13134  0023A6                     i2u748_41:
 13135  0023A6  EFDB  F011         	goto	i2l7724
 13136  0023AA                     i2u748_40:
 13137  0023AA  0E00               	movlw	0
 13138  0023AC  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 13139  0023AE  0E00               	movlw	0
 13140  0023B0  6E0E               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 13141  0023B2  EFDF  F011         	goto	i2l7726
 13142  0023B6                     i2l7724:
 13143  0023B6  0E01               	movlw	1
 13144  0023B8  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 13145  0023BA  0E00               	movlw	0
 13146  0023BC  6E0E               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 13147  0023BE                     i2l7726:
 13148  0023BE  500E               	movf	i2_EUSART_Async_Read_Data$2032^0,w,c
 13149  0023C0  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 13150  0023C2  500F               	movf	(i2_EUSART_Async_Read_Data$2032+1)^0,w,c
 13151  0023C4  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 13152  0023C6                     
 13153                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 13154  0023C6  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 13155  0023C8  EC4B  F023         	call	i2_calc_parity_even
 13156  0023CC  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13157  0023CE  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 13158  0023D0  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 13159  0023D2  A4D8               	btfss	status,2,c
 13160  0023D4  EFEE  F011         	goto	i2u749_41
 13161  0023D8  EFF0  F011         	goto	i2u749_40
 13162  0023DC                     i2u749_41:
 13163  0023DC  EF37  F012         	goto	i2l706
 13164  0023E0                     i2u749_40:
 13165  0023E0                     i2l7730:
 13166                           
 13167                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 13168  0023E0  0EFF               	movlw	255
 13169  0023E2  1412               	andwf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 13170  0023E4  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13171  0023E6  0E00               	movlw	0
 13172  0023E8  1413               	andwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 13173  0023EA  6E0B               	movwf	(??i2_EUSART_Async_Read_Data+1)^0,c
 13174  0023EC  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 13175  0023F0  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 13176  0023F4  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 13177  0023F8  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 13178                           
 13179                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 13180  0023FC  EF37  F012         	goto	i2l7748
 13181  002400                     i2l7732:
 13182  002400  EE20 F009          	lfsr	2,9
 13183  002404  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13184  002406  26D9               	addwf	fsr2l,f,c
 13185  002408  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13186  00240A  22DA               	addwfc	fsr2h,f,c
 13187  00240C  30DF               	rrcf	223,w,c
 13188  00240E  0B03               	andlw	3
 13189  002410  0A02               	xorlw	2
 13190  002412  A4D8               	btfss	status,2,c
 13191  002414  EF0E  F012         	goto	i2u750_41
 13192  002418  EF10  F012         	goto	i2u750_40
 13193  00241C                     i2u750_41:
 13194  00241C  EF37  F012         	goto	i2l706
 13195  002420                     i2u750_40:
 13196  002420                     
 13197                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 13198  002420  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 13199  002424  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13200                           
 13201                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 13202  002426  B0AB               	btfsc	171,0,c	;volatile
 13203  002428  EF18  F012         	goto	i2u751_41
 13204  00242C  EF1A  F012         	goto	i2u751_40
 13205  002430                     i2u751_41:
 13206  002430  EF20  F012         	goto	i2l7738
 13207  002434                     i2u751_40:
 13208  002434  0E00               	movlw	0
 13209  002436  6E11               	movwf	(i2_EUSART_Async_Read_Data$2033+1)^0,c
 13210  002438  0E00               	movlw	0
 13211  00243A  6E10               	movwf	i2_EUSART_Async_Read_Data$2033^0,c
 13212  00243C  EF24  F012         	goto	i2l7740
 13213  002440                     i2l7738:
 13214  002440  0E01               	movlw	1
 13215  002442  6E11               	movwf	(i2_EUSART_Async_Read_Data$2033+1)^0,c
 13216  002444  0E00               	movlw	0
 13217  002446  6E10               	movwf	i2_EUSART_Async_Read_Data$2033^0,c
 13218  002448                     i2l7740:
 13219  002448  5010               	movf	i2_EUSART_Async_Read_Data$2033^0,w,c
 13220  00244A  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 13221  00244C  5011               	movf	(i2_EUSART_Async_Read_Data$2033+1)^0,w,c
 13222  00244E  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 13223  002450                     
 13224                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 13225  002450  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 13226  002452  EC17  F023         	call	i2_calc_parity_odd
 13227  002456  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13228  002458  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 13229  00245A  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 13230  00245C  A4D8               	btfss	status,2,c
 13231  00245E  EF33  F012         	goto	i2u752_41
 13232  002462  EF35  F012         	goto	i2u752_40
 13233  002466                     i2u752_41:
 13234  002466  EF37  F012         	goto	i2l706
 13235  00246A                     i2u752_40:
 13236  00246A  EFF0  F011         	goto	i2l7730
 13237  00246E                     i2l706:
 13238  00246E                     i2l7748:
 13239                           
 13240                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 13241  00246E  B2AB               	btfsc	171,1,c	;volatile
 13242  002470  EF3C  F012         	goto	i2u753_41
 13243  002474  EF3E  F012         	goto	i2u753_40
 13244  002478                     i2u753_41:
 13245  002478  EF45  F012         	goto	i2l727
 13246  00247C                     i2u753_40:
 13247  00247C  A4AB               	btfss	171,2,c	;volatile
 13248  00247E  EF43  F012         	goto	i2u754_41
 13249  002482  EF45  F012         	goto	i2u754_40
 13250  002486                     i2u754_41:
 13251  002486  EF47  F012         	goto	i2l728
 13252  00248A                     i2u754_40:
 13253  00248A                     i2l727:
 13254                           
 13255                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 13256  00248A  98AB               	bcf	171,4,c	;volatile
 13257                           
 13258                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 13259  00248C  88AB               	bsf	171,4,c	;volatile
 13260  00248E                     i2l728:
 13261  00248E  0012               	return		;funcret
 13262  002490                     __end_ofi2_EUSART_Async_Read_Data:
 13263                           	callstack 0
 13264                           
 13265 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
 13266 ;; Defined at:
 13267 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  _uart_obj       2   11[COMRAM] PTR const struct .
 13270 ;;		 -> _uart_obj(12), 
 13271 ;;  data            1   13[COMRAM] unsigned char 
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;  ret_val         1    0        unsigned char 
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  1    wreg      unsigned char 
 13276 ;; Registers used:
 13277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13283 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13287 ;;Total ram usage:        3 bytes
 13288 ;; Hardware stack levels used: 1
 13289 ;; Hardware stack levels required when called: 2
 13290 ;; This function calls:
 13291 ;;		_EUSART_Async_Transmit_Data
 13292 ;; This function is called by:
 13293 ;;		_usart_isr
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           	psect	text75
 13298  004ADE                     __ptext75:
 13299                           	callstack 0
 13300  004ADE                     _Bluetooth_Send_Data_Non_Blocking:
 13301                           	callstack 17
 13302  004ADE                     
 13303                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 13304  004ADE  500C               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
 13305  004AE0  100D               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
 13306  004AE2  A4D8               	btfss	status,2,c
 13307  004AE4  EF76  F025         	goto	i2u702_41
 13308  004AE8  EF78  F025         	goto	i2u702_40
 13309  004AEC                     i2u702_41:
 13310  004AEC  EF7A  F025         	goto	i2l7502
 13311  004AF0                     i2u702_40:
 13312  004AF0                     
 13313                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 13314  004AF0  EF83  F025         	goto	i2l32
 13315  004AF4                     i2l7502:
 13316                           
 13317                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 13318  004AF4  C00C  F006         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
 13319  004AF8  C00D  F007         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
 13320  004AFC  C00E  F008         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
 13321  004B00  6A09               	clrf	(EUSART_Async_Transmit_Data@data+1)^0,c
 13322  004B02  EC57  F01B         	call	_EUSART_Async_Transmit_Data	;wreg free
 13323  004B06                     i2l32:
 13324  004B06  0012               	return		;funcret
 13325  004B08                     __end_of_Bluetooth_Send_Data_Non_Blocking:
 13326                           	callstack 0
 13327                           
 13328 ;; *************** function _EUSART_Async_Transmit_Data *****************
 13329 ;; Defined at:
 13330 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 13333 ;;		 -> _uart_obj(12), 
 13334 ;;  data            2    7[COMRAM] unsigned short 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  ret_val         1    0        unsigned char 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  1    wreg      unsigned char 
 13339 ;; Registers used:
 13340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13350 ;;Total ram usage:        6 bytes
 13351 ;; Hardware stack levels used: 1
 13352 ;; Hardware stack levels required when called: 1
 13353 ;; This function calls:
 13354 ;;		i2_calc_parity_even
 13355 ;;		i2_calc_parity_odd
 13356 ;; This function is called by:
 13357 ;;		_Bluetooth_Send_Data_Non_Blocking
 13358 ;;		_EUSART_Async_Transmit_Data_Blocking
 13359 ;; This function uses a non-reentrant model
 13360 ;;
 13361                           
 13362                           	psect	text76
 13363  0036AE                     __ptext76:
 13364                           	callstack 0
 13365  0036AE                     _EUSART_Async_Transmit_Data:
 13366                           	callstack 17
 13367  0036AE                     
 13368                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 13369  0036AE  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 13370  0036B0  1007               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 13371  0036B2  A4D8               	btfss	status,2,c
 13372  0036B4  EF5E  F01B         	goto	i2u648_41
 13373  0036B8  EF60  F01B         	goto	i2u648_40
 13374  0036BC                     i2u648_41:
 13375  0036BC  EF62  F01B         	goto	i2l7106
 13376  0036C0                     i2u648_40:
 13377  0036C0                     
 13378                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 13379  0036C0  EFC8  F01B         	goto	i2l690
 13380  0036C4                     i2l7106:
 13381                           
 13382                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 13383  0036C4  EE20 F002          	lfsr	2,2
 13384  0036C8  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 13385  0036CA  26D9               	addwf	fsr2l,f,c
 13386  0036CC  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 13387  0036CE  22DA               	addwfc	fsr2h,f,c
 13388  0036D0  A6DF               	btfss	indf2,3,c
 13389  0036D2  EF6D  F01B         	goto	i2u649_41
 13390  0036D6  EF6F  F01B         	goto	i2u649_40
 13391  0036DA                     i2u649_41:
 13392  0036DA  EFC6  F01B         	goto	i2l7120
 13393  0036DE                     i2u649_40:
 13394  0036DE                     
 13395                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 13396  0036DE  EE20 F002          	lfsr	2,2
 13397  0036E2  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 13398  0036E4  26D9               	addwf	fsr2l,f,c
 13399  0036E6  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 13400  0036E8  22DA               	addwfc	fsr2h,f,c
 13401  0036EA  50DF               	movf	223,w,c
 13402  0036EC  0B03               	andlw	3
 13403  0036EE  0900               	iorlw	0
 13404  0036F0  A4D8               	btfss	status,2,c
 13405  0036F2  EF7D  F01B         	goto	i2u650_41
 13406  0036F6  EF7F  F01B         	goto	i2u650_40
 13407  0036FA                     i2u650_41:
 13408  0036FA  EF8E  F01B         	goto	i2l7112
 13409  0036FE                     i2u650_40:
 13410  0036FE                     
 13411                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 13412  0036FE  C008  F00A         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
 13413  003702  C009  F00B         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
 13414  003706  C00B  F00A         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
 13415  00370A  6A0B               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
 13416  00370C  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 13417  00370E  A0D8               	btfss	status,0,c
 13418  003710  D002               	bra	i2u651_45
 13419  003712  80AC               	bsf	172,0,c	;volatile
 13420  003714  D001               	bra	i2u651_47
 13421  003716                     i2u651_45:
 13422  003716  90AC               	bcf	172,0,c	;volatile
 13423  003718                     i2u651_47:
 13424                           
 13425                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 13426  003718  EFC6  F01B         	goto	i2l7120
 13427  00371C                     i2l7112:
 13428  00371C  EE20 F002          	lfsr	2,2
 13429  003720  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 13430  003722  26D9               	addwf	fsr2l,f,c
 13431  003724  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 13432  003726  22DA               	addwfc	fsr2h,f,c
 13433  003728  50DF               	movf	223,w,c
 13434  00372A  0B03               	andlw	3
 13435  00372C  06E8               	decf	wreg,f,c
 13436  00372E  A4D8               	btfss	status,2,c
 13437  003730  EF9C  F01B         	goto	i2u652_41
 13438  003734  EF9E  F01B         	goto	i2u652_40
 13439  003738                     i2u652_41:
 13440  003738  EFAA  F01B         	goto	i2l7116
 13441  00373C                     i2u652_40:
 13442  00373C                     
 13443                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 13444  00373C  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 13445  00373E  EC4B  F023         	call	i2_calc_parity_even
 13446  003742  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 13447  003744  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 13448  003746  A0D8               	btfss	status,0,c
 13449  003748  D002               	bra	i2u653_45
 13450  00374A  80AC               	bsf	172,0,c	;volatile
 13451  00374C  D001               	bra	i2u653_47
 13452  00374E                     i2u653_45:
 13453  00374E  90AC               	bcf	172,0,c	;volatile
 13454  003750                     i2u653_47:
 13455                           
 13456                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 13457  003750  EFC6  F01B         	goto	i2l7120
 13458  003754                     i2l7116:
 13459  003754  EE20 F002          	lfsr	2,2
 13460  003758  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 13461  00375A  26D9               	addwf	fsr2l,f,c
 13462  00375C  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 13463  00375E  22DA               	addwfc	fsr2h,f,c
 13464  003760  50DF               	movf	223,w,c
 13465  003762  0B03               	andlw	3
 13466  003764  0A02               	xorlw	2
 13467  003766  A4D8               	btfss	status,2,c
 13468  003768  EFB8  F01B         	goto	i2u654_41
 13469  00376C  EFBA  F01B         	goto	i2u654_40
 13470  003770                     i2u654_41:
 13471  003770  EFC6  F01B         	goto	i2l686
 13472  003774                     i2u654_40:
 13473  003774                     
 13474                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 13475  003774  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 13476  003776  EC17  F023         	call	i2_calc_parity_odd
 13477  00377A  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 13478  00377C  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 13479  00377E  A0D8               	btfss	status,0,c
 13480  003780  D002               	bra	i2u655_45
 13481  003782  80AC               	bsf	172,0,c	;volatile
 13482  003784  D001               	bra	i2u655_47
 13483  003786                     i2u655_45:
 13484  003786  90AC               	bcf	172,0,c	;volatile
 13485  003788                     i2u655_47:
 13486  003788  EFC6  F01B         	goto	i2l7120
 13487  00378C                     i2l686:
 13488  00378C                     i2l7120:
 13489                           
 13490                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 13491  00378C  C008  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
 13492  003790                     i2l690:
 13493  003790  0012               	return		;funcret
 13494  003792                     __end_of_EUSART_Async_Transmit_Data:
 13495                           	callstack 0
 13496                           
 13497 ;; *************** function i2_calc_parity_odd *****************
 13498 ;; Defined at:
 13499 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  data            1    wreg     unsigned char 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;  data            1    2[COMRAM] unsigned char 
 13504 ;;  l_counter       1    4[COMRAM] unsigned char 
 13505 ;;  number_of_on    1    3[COMRAM] unsigned char 
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  1    wreg      unsigned char 
 13508 ;; Registers used:
 13509 ;;		wreg, status,2, status,0
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13518 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13519 ;;Total ram usage:        5 bytes
 13520 ;; Hardware stack levels used: 1
 13521 ;; This function calls:
 13522 ;;		Nothing
 13523 ;; This function is called by:
 13524 ;;		_EUSART_Async_Transmit_Data
 13525 ;;		i2_EUSART_Async_Read_Data
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text77
 13530  00462E                     __ptext77:
 13531                           	callstack 0
 13532  00462E                     i2_calc_parity_odd:
 13533                           	callstack 18
 13534                           
 13535                           ;incstack = 0
 13536                           ;i2calc_parity_odd@data stored from wreg
 13537  00462E  6E03               	movwf	i2calc_parity_odd@data^0,c
 13538  004630                     
 13539                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 13540  004630  0E00               	movlw	0
 13541  004632  6E04               	movwf	i2calc_parity_odd@number_of_ones^0,c
 13542                           
 13543                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 13544  004634  0E00               	movlw	0
 13545  004636  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 13546                           
 13547                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 13548  004638  0E00               	movlw	0
 13549  00463A  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 13550  00463C                     i2l7058:
 13551                           
 13552                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 13553  00463C  C005  F001         	movff	i2calc_parity_odd@l_counter,??i2_calc_parity_odd
 13554  004640  0E01               	movlw	1
 13555  004642  6E02               	movwf	(??i2_calc_parity_odd+1)^0,c
 13556  004644  2A01               	incf	??i2_calc_parity_odd^0,f,c
 13557  004646  EF27  F023         	goto	i2u640_44
 13558  00464A                     i2u640_45:
 13559  00464A  90D8               	bcf	status,0,c
 13560  00464C  3602               	rlcf	(??i2_calc_parity_odd+1)^0,f,c
 13561  00464E                     i2u640_44:
 13562  00464E  2E01               	decfsz	??i2_calc_parity_odd^0,f,c
 13563  004650  EF25  F023         	goto	i2u640_45
 13564  004654  5002               	movf	(??i2_calc_parity_odd+1)^0,w,c
 13565  004656  1403               	andwf	i2calc_parity_odd@data^0,w,c
 13566  004658  0900               	iorlw	0
 13567  00465A  B4D8               	btfsc	status,2,c
 13568  00465C  EF32  F023         	goto	i2u641_41
 13569  004660  EF34  F023         	goto	i2u641_40
 13570  004664                     i2u641_41:
 13571  004664  EF35  F023         	goto	i2l826
 13572  004668                     i2u641_40:
 13573  004668                     
 13574                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 13575  004668  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 13576  00466A                     i2l826:
 13577                           
 13578                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 13579  00466A  2A05               	incf	i2calc_parity_odd@l_counter^0,f,c
 13580  00466C  0E07               	movlw	7
 13581  00466E  6405               	cpfsgt	i2calc_parity_odd@l_counter^0,c
 13582  004670  EF3C  F023         	goto	i2u642_41
 13583  004674  EF3E  F023         	goto	i2u642_40
 13584  004678                     i2u642_41:
 13585  004678  EF1E  F023         	goto	i2l7058
 13586  00467C                     i2u642_40:
 13587  00467C                     
 13588                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 13589  00467C  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 13590  00467E                     
 13591                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 13592  00467E  B004               	btfsc	i2calc_parity_odd@number_of_ones^0,0,c
 13593  004680  EF44  F023         	goto	i2u643_41
 13594  004684  EF46  F023         	goto	i2u643_40
 13595  004688                     i2u643_41:
 13596  004688  EF49  F023         	goto	i2l7072
 13597  00468C                     i2u643_40:
 13598  00468C                     
 13599                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 13600  00468C  0E01               	movlw	1
 13601  00468E  EF4A  F023         	goto	i2l828
 13602  004692                     i2l7072:
 13603                           
 13604                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 13605  004692  0E00               	movlw	0
 13606  004694                     i2l828:
 13607  004694  0012               	return		;funcret
 13608  004696                     __end_ofi2_calc_parity_odd:
 13609                           	callstack 0
 13610                           
 13611 ;; *************** function i2_calc_parity_even *****************
 13612 ;; Defined at:
 13613 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  data            1    wreg     unsigned char 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  data            1    2[COMRAM] unsigned char 
 13618 ;;  l_counter       1    4[COMRAM] unsigned char 
 13619 ;;  number_of_on    1    3[COMRAM] unsigned char 
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      unsigned char 
 13622 ;; Registers used:
 13623 ;;		wreg, status,2, status,0
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13630 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13632 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13633 ;;Total ram usage:        5 bytes
 13634 ;; Hardware stack levels used: 1
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_EUSART_Async_Transmit_Data
 13639 ;;		i2_EUSART_Async_Read_Data
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text78
 13644  004696                     __ptext78:
 13645                           	callstack 0
 13646  004696                     i2_calc_parity_even:
 13647                           	callstack 18
 13648                           
 13649                           ;incstack = 0
 13650                           ;i2calc_parity_even@data stored from wreg
 13651  004696  6E03               	movwf	i2calc_parity_even@data^0,c
 13652  004698                     
 13653                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 13654  004698  0E00               	movlw	0
 13655  00469A  6E04               	movwf	i2calc_parity_even@number_of_ones^0,c
 13656                           
 13657                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 13658  00469C  0E00               	movlw	0
 13659  00469E  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 13660                           
 13661                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 13662  0046A0  0E00               	movlw	0
 13663  0046A2  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 13664  0046A4                     i2l7082:
 13665                           
 13666                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 13667  0046A4  C005  F001         	movff	i2calc_parity_even@l_counter,??i2_calc_parity_even
 13668  0046A8  0E01               	movlw	1
 13669  0046AA  6E02               	movwf	(??i2_calc_parity_even+1)^0,c
 13670  0046AC  2A01               	incf	??i2_calc_parity_even^0,f,c
 13671  0046AE  EF5B  F023         	goto	i2u644_44
 13672  0046B2                     i2u644_45:
 13673  0046B2  90D8               	bcf	status,0,c
 13674  0046B4  3602               	rlcf	(??i2_calc_parity_even+1)^0,f,c
 13675  0046B6                     i2u644_44:
 13676  0046B6  2E01               	decfsz	??i2_calc_parity_even^0,f,c
 13677  0046B8  EF59  F023         	goto	i2u644_45
 13678  0046BC  5002               	movf	(??i2_calc_parity_even+1)^0,w,c
 13679  0046BE  1403               	andwf	i2calc_parity_even@data^0,w,c
 13680  0046C0  0900               	iorlw	0
 13681  0046C2  B4D8               	btfsc	status,2,c
 13682  0046C4  EF66  F023         	goto	i2u645_41
 13683  0046C8  EF68  F023         	goto	i2u645_40
 13684  0046CC                     i2u645_41:
 13685  0046CC  EF69  F023         	goto	i2l833
 13686  0046D0                     i2u645_40:
 13687  0046D0                     
 13688                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 13689  0046D0  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 13690  0046D2                     i2l833:
 13691                           
 13692                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 13693  0046D2  2A05               	incf	i2calc_parity_even@l_counter^0,f,c
 13694  0046D4  0E07               	movlw	7
 13695  0046D6  6405               	cpfsgt	i2calc_parity_even@l_counter^0,c
 13696  0046D8  EF70  F023         	goto	i2u646_41
 13697  0046DC  EF72  F023         	goto	i2u646_40
 13698  0046E0                     i2u646_41:
 13699  0046E0  EF52  F023         	goto	i2l7082
 13700  0046E4                     i2u646_40:
 13701  0046E4                     
 13702                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 13703  0046E4  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 13704  0046E6                     
 13705                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 13706  0046E6  A004               	btfss	i2calc_parity_even@number_of_ones^0,0,c
 13707  0046E8  EF78  F023         	goto	i2u647_41
 13708  0046EC  EF7A  F023         	goto	i2u647_40
 13709  0046F0                     i2u647_41:
 13710  0046F0  EF7D  F023         	goto	i2l7096
 13711  0046F4                     i2u647_40:
 13712  0046F4                     
 13713                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 13714  0046F4  0E01               	movlw	1
 13715  0046F6  EF7E  F023         	goto	i2l835
 13716  0046FA                     i2l7096:
 13717                           
 13718                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 13719  0046FA  0E00               	movlw	0
 13720  0046FC                     i2l835:
 13721  0046FC  0012               	return		;funcret
 13722  0046FE                     __end_ofi2_calc_parity_even:
 13723                           	callstack 0
 13724                           
 13725                           	psect	text79
 13726  000000                     __ptext79:
 13727                           	callstack 0
 13728  000000                     
 13729                           	psect	rparam
 13730  0000                     
 13731                           	psect	temp
 13732  000042                     btemp:
 13733                           	callstack 0
 13734  000042                     	ds	1
 13735  0000                     int$flags	set	btemp
 13736  0000                     wtemp8	set	btemp+1
 13737  0000                     ttemp5	set	btemp+1
 13738  0000                     ttemp6	set	btemp+4
 13739  0000                     ttemp7	set	btemp+8
 13740                           
 13741                           	psect	idloc
 13742                           
 13743                           ;Config register IDLOC0 @ 0x200000
 13744                           ;	unspecified, using default values
 13745  200000                     	org	2097152
 13746  200000  FF                 	db	255
 13747                           
 13748                           ;Config register IDLOC1 @ 0x200001
 13749                           ;	unspecified, using default values
 13750  200001                     	org	2097153
 13751  200001  FF                 	db	255
 13752                           
 13753                           ;Config register IDLOC2 @ 0x200002
 13754                           ;	unspecified, using default values
 13755  200002                     	org	2097154
 13756  200002  FF                 	db	255
 13757                           
 13758                           ;Config register IDLOC3 @ 0x200003
 13759                           ;	unspecified, using default values
 13760  200003                     	org	2097155
 13761  200003  FF                 	db	255
 13762                           
 13763                           ;Config register IDLOC4 @ 0x200004
 13764                           ;	unspecified, using default values
 13765  200004                     	org	2097156
 13766  200004  FF                 	db	255
 13767                           
 13768                           ;Config register IDLOC5 @ 0x200005
 13769                           ;	unspecified, using default values
 13770  200005                     	org	2097157
 13771  200005  FF                 	db	255
 13772                           
 13773                           ;Config register IDLOC6 @ 0x200006
 13774                           ;	unspecified, using default values
 13775  200006                     	org	2097158
 13776  200006  FF                 	db	255
 13777                           
 13778                           ;Config register IDLOC7 @ 0x200007
 13779                           ;	unspecified, using default values
 13780  200007                     	org	2097159
 13781  200007  FF                 	db	255
 13782                           
 13783                           	psect	config
 13784                           
 13785                           ; Padding undefined space
 13786  300000                     	org	3145728
 13787  300000  FF                 	db	255
 13788                           
 13789                           ;Config register CONFIG1H @ 0x300001
 13790                           ;	Oscillator Selection bits
 13791                           ;	FOSC = HS, HS oscillator
 13792                           ;	Fail-Safe Clock Monitor Enable bit
 13793                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13794                           ;	Internal/External Oscillator Switchover bit
 13795                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13796  300001                     	org	3145729
 13797  300001  02                 	db	2
 13798                           
 13799                           ;Config register CONFIG2L @ 0x300002
 13800                           ;	Power-up Timer Enable bit
 13801                           ;	PWRT = OFF, PWRT disabled
 13802                           ;	Brown-out Reset Enable bits
 13803                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 13804                           ;	Brown Out Reset Voltage bits
 13805                           ;	BORV = 18, VBOR set to 1.8 V nominal
 13806  300002                     	org	3145730
 13807  300002  19                 	db	25
 13808                           
 13809                           ;Config register CONFIG2H @ 0x300003
 13810                           ;	Watchdog Timer Enable bit
 13811                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 13812                           ;	Watchdog Timer Postscale Select bits
 13813                           ;	WDTPS = 32768, 1:32768
 13814  300003                     	org	3145731
 13815  300003  1E                 	db	30
 13816                           
 13817                           ; Padding undefined space
 13818  300004                     	org	3145732
 13819  300004  FF                 	db	255
 13820                           
 13821                           ;Config register CONFIG3H @ 0x300005
 13822                           ;	CCP2 MUX bit
 13823                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13824                           ;	PORTB A/D Enable bit
 13825                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 13826                           ;	Low-Power Timer1 Oscillator Enable bit
 13827                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13828                           ;	HFINTOSC Fast Start-up
 13829                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
 13830                           ;	MCLR Pin Enable bit
 13831                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13832  300005                     	org	3145733
 13833  300005  81                 	db	129
 13834                           
 13835                           ;Config register CONFIG4L @ 0x300006
 13836                           ;	Stack Full/Underflow Reset Enable bit
 13837                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13838                           ;	Single-Supply ICSP Enable bit
 13839                           ;	LVP = OFF, Single-Supply ICSP disabled
 13840                           ;	Extended Instruction Set Enable bit
 13841                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13842                           ;	Background Debugger Enable bit
 13843                           ;	DEBUG = 0x1, unprogrammed default
 13844  300006                     	org	3145734
 13845  300006  81                 	db	129
 13846                           
 13847                           ; Padding undefined space
 13848  300007                     	org	3145735
 13849  300007  FF                 	db	255
 13850                           
 13851                           ;Config register CONFIG5L @ 0x300008
 13852                           ;	Code Protection Block 0
 13853                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13854                           ;	Code Protection Block 1
 13855                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13856                           ;	Code Protection Block 2
 13857                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13858                           ;	Code Protection Block 3
 13859                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13860  300008                     	org	3145736
 13861  300008  0F                 	db	15
 13862                           
 13863                           ;Config register CONFIG5H @ 0x300009
 13864                           ;	Boot Block Code Protection bit
 13865                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13866                           ;	Data EEPROM Code Protection bit
 13867                           ;	CPD = OFF, Data EEPROM not code-protected
 13868  300009                     	org	3145737
 13869  300009  C0                 	db	192
 13870                           
 13871                           ;Config register CONFIG6L @ 0x30000A
 13872                           ;	Write Protection Block 0
 13873                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13874                           ;	Write Protection Block 1
 13875                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13876                           ;	Write Protection Block 2
 13877                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13878                           ;	Write Protection Block 3
 13879                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 13880  30000A                     	org	3145738
 13881  30000A  0F                 	db	15
 13882                           
 13883                           ;Config register CONFIG6H @ 0x30000B
 13884                           ;	Configuration Register Write Protection bit
 13885                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13886                           ;	Boot Block Write Protection bit
 13887                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13888                           ;	Data EEPROM Write Protection bit
 13889                           ;	WRTD = OFF, Data EEPROM not write-protected
 13890  30000B                     	org	3145739
 13891  30000B  E0                 	db	224
 13892                           
 13893                           ;Config register CONFIG7L @ 0x30000C
 13894                           ;	Table Read Protection Block 0
 13895                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13896                           ;	Table Read Protection Block 1
 13897                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13898                           ;	Table Read Protection Block 2
 13899                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13900                           ;	Table Read Protection Block 3
 13901                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13902  30000C                     	org	3145740
 13903  30000C  0F                 	db	15
 13904                           
 13905                           ;Config register CONFIG7H @ 0x30000D
 13906                           ;	Boot Block Table Read Protection bit
 13907                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13908  30000D                     	org	3145741
 13909  30000D  40                 	db	64
 13910                           tosu	equ	0xFFF
 13911                           tosh	equ	0xFFE
 13912                           tosl	equ	0xFFD
 13913                           stkptr	equ	0xFFC
 13914                           pclatu	equ	0xFFB
 13915                           pclath	equ	0xFFA
 13916                           pcl	equ	0xFF9
 13917                           tblptru	equ	0xFF8
 13918                           tblptrh	equ	0xFF7
 13919                           tblptrl	equ	0xFF6
 13920                           tablat	equ	0xFF5
 13921                           prodh	equ	0xFF4
 13922                           prodl	equ	0xFF3
 13923                           indf0	equ	0xFEF
 13924                           postinc0	equ	0xFEE
 13925                           postdec0	equ	0xFED
 13926                           preinc0	equ	0xFEC
 13927                           plusw0	equ	0xFEB
 13928                           fsr0h	equ	0xFEA
 13929                           fsr0l	equ	0xFE9
 13930                           wreg	equ	0xFE8
 13931                           indf1	equ	0xFE7
 13932                           postinc1	equ	0xFE6
 13933                           postdec1	equ	0xFE5
 13934                           preinc1	equ	0xFE4
 13935                           plusw1	equ	0xFE3
 13936                           fsr1h	equ	0xFE2
 13937                           fsr1l	equ	0xFE1
 13938                           bsr	equ	0xFE0
 13939                           indf2	equ	0xFDF
 13940                           postinc2	equ	0xFDE
 13941                           postdec2	equ	0xFDD
 13942                           preinc2	equ	0xFDC
 13943                           plusw2	equ	0xFDB
 13944                           fsr2h	equ	0xFDA
 13945                           fsr2l	equ	0xFD9
 13946                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        89
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160     70     160
    BANK1           256     27     102
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    CCP_Interrupt_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S5259$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5259$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    send_trig_pulse@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Get_Distance@distance	PTR float  size(2) Largest target is 4
		 -> distance(BANK0[4]), 

    Ultra_Sonic_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Ultra_Sonic_Init@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    DHT11_Read_Data@data	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), T_Integral(COMRAM[1]), T_Decimal(COMRAM[1]), RH_Integral(COMRAM[1]), 
		 -> RH_Decimal(COMRAM[1]), 

    Get_Temp_HUM@Checksum	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), 

    Get_Temp_HUM@T_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> T_Integral(COMRAM[1]), 

    Get_Temp_HUM@T_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> T_Decimal(COMRAM[1]), 

    Get_Temp_HUM@RH_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Integral(COMRAM[1]), 

    Get_Temp_HUM@RH_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Decimal(COMRAM[1]), 

    Timer2_Init@_timer2	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    Timer1_Preload_Value@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_RW_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Prescaler_Config@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3609$Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    HAL_Timer0_Write_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Read_Val@result	PTR unsigned short  size(2) Largest target is 2
		 -> Get_Distance@timer_val(BANK0[2]), 

    HAL_Timer0_Read_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3104$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3104$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3057$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Slave_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Write_Blocking@_ack	PTR unsigned char  size(2) Largest target is 1
		 -> PCA_Write_Reg@ack(COMRAM[1]), 

    MSSP_I2C_Master_Write_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Stop@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Start@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> TEST_PIN(COMRAM[1]), 

    GPIO_Pin_Read_Logic@logic	PTR enum E3185 size(2) Largest target is 1
		 -> Get_Distance@logic(BANK0[1]), 

    GPIO_Pin_Read_Logic@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllh[1]), PORTD(BITBIGSFRllllh[1]), PORTC(BITBIGSFRllllh[1]), PORTB(BITBIGSFRllllh[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data_Blocking@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), 

    EUSART_Async_Read_Data_Blocking@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(COMRAM[1]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    CCP_Compare_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    CCP_Capture_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    CCP_Mode_Timer_Select@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    CCP_PWM_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    CCP_PWM_Start@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK0[12]), 

    stepper_move_one_deg_ccw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    stepper_move_one_deg_cw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    Ecu_Stepper_Step@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    Ecu_Stepper_Init@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    PCA_Write_Reg@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    Servo_SetAngle@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    Servo_SetAngle@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    ServoDriver_Init@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    ServoDriver_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 0

    ECU_DC_Motor_Run_Right@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Run_Left@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Init@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _main->_GPIO_Pin_Toggle_Logic
    _stepper_move_one_deg_cw->_Ecu_Stepper_Step
    _stepper_move_one_deg_ccw->_Ecu_Stepper_Step
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _application_intialize->_GPIO_Pin_Initialize
    _Ultra_Sonic_Init->_GPIO_Pin_Initialize
    _Ultra_Sonic_Init->_HAL_Timer0_Init
    _HAL_Timer0_Init->_HAL_Timer0_Write_Val
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _ECU_DC_Motor_Init->_GPIO_Pin_Initialize
    _CCP_Init->_CCP_Capture_Mode_Config
    _CCP_Init->_CCP_Compare_Mode_Config
    _CCP_Init->_GPIO_Pin_Initialize
    _CCP_PWM_Mode_Config->_Timer2_Init
    _CCP_Compare_Mode_Config->_CCP_Mode_Timer_Select
    _CCP_Capture_Mode_Config->_CCP_Mode_Timer_Select
    _Ecu_Stepper_Init->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _Robot_Steer_Right_Forward->_ECU_DC_Motor_Run_Right
    _Robot_Steer_Right_Backward->_ECU_DC_Motor_Run_Left
    _Robot_Steer_Left_Forward->_ECU_DC_Motor_Run_Right
    _Robot_Steer_Left_Backward->_ECU_DC_Motor_Run_Left
    _Robot_Move_Forward->_ECU_DC_Motor_Run_Right
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Robot_Move_Backward->_ECU_DC_Motor_Run_Left
    _Servo_SetAngle->_PCA_Write_Reg
    _Servo_SetAngle->___fltol
    ___fladd->___xxtofl
    _PCA_Write_Reg->_MSSP_I2C_Master_Write_Blocking
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Temp_HUM->_DHT11_Read_Data
    _Get_Distance->_HAL_Timer0_Read_Val
    _Get_Distance->_send_trig_pulse
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _usart_isr->i2_EUSART_Async_Read_Data
    i2_EUSART_Async_Read_Data->i2_calc_parity_even
    i2_EUSART_Async_Read_Data->i2_calc_parity_odd
    _Bluetooth_Send_Data_Non_Blocking->_EUSART_Async_Transmit_Data
    _EUSART_Async_Transmit_Data->i2_calc_parity_even
    _EUSART_Async_Transmit_Data->i2_calc_parity_odd

Critical Paths under _main in BANK0

    _stepper_move_one_deg_cw->_Ecu_Stepper_Step
    _stepper_move_one_deg_ccw->_Ecu_Stepper_Step
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _Robot_Nav_Init->_CCP_PWM_Set_Duty
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fladd
    _Ecu_Stepper_Init->_GPIO_Pin_Direction_Initialize
    _Ecu_Stepper_Init->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _Robot_Steer_Right_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Backward->_CCP_PWM_Set_Duty
    _Robot_Move_Forward->_CCP_PWM_Set_Duty
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Robot_Move_Backward->_CCP_PWM_Set_Duty
    _Servo_SetAngle->___fladd
    ___fladd->___flmul
    _Robot_Steer_Stop->_CCP_PWM_Set_Duty
    ___fltol->___fladd
    ___flmul->___fldiv
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Distance->___fldiv
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _GPS_Service->_EUSART_Async_Read_Data_Blocking
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Servo_SetAngle
    _application_intialize->_Servo_SetAngle
    _Robot_Nav_Init->_CCP_PWM_Set_Duty
    _ServoDriver_Init->_MSSP_I2C_Init
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _Robot_Steer_Right_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Forward->_Servo_SetAngle
    _Robot_Steer_Right_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Right_Backward->_Servo_SetAngle
    _Robot_Steer_Left_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Forward->_Servo_SetAngle
    _Robot_Steer_Left_Backward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Backward->_Servo_SetAngle
    _Robot_Move_Forward->_CCP_PWM_Set_Duty
    _Robot_Move_Forward->_Servo_SetAngle
    _Robot_Move_Backward->_CCP_PWM_Set_Duty
    _Robot_Move_Backward->_Servo_SetAngle
    _Servo_SetAngle->___fltol
    _Robot_Steer_Stop->_CCP_PWM_Set_Duty
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->___fladd

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  529342
                                             25 BANK1      2     2      0
              _GPIO_Pin_Toggle_Logic
                        _GPS_Service
                       _Get_Distance
                       _Get_Temp_HUM
                _Robot_Move_Backward
                 _Robot_Move_Forward
          _Robot_Steer_Left_Backward
           _Robot_Steer_Left_Forward
         _Robot_Steer_Right_Backward
          _Robot_Steer_Right_Forward
                   _Robot_Steer_Stop
                     _Servo_SetAngle
              _application_intialize
           _stepper_move_one_deg_ccw
            _stepper_move_one_deg_cw
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_cw                              4     2      2   11478
                                              8 BANK0      4     2      2
                   _Ecu_Stepper_Step
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_ccw                             4     2      2   11478
                                              8 BANK0      4     2      2
                   _Ecu_Stepper_Step
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Step                                     4     2      2    5750
                                             33 COMRAM     2     0      2
                                              6 BANK0      2     2      0
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0  102254
                   _Ecu_Stepper_Init
                _GPIO_Pin_Initialize
                     _Robot_Nav_Init
                     _Servo_SetAngle
                   _Ultra_Sonic_Init
 ---------------------------------------------------------------------------------
 (2) _Ultra_Sonic_Init                                     5     1      4    8896
                                              6 BANK0      4     0      4
                _GPIO_Pin_Initialize
                    _HAL_Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _HAL_Timer0_Init                                      4     2      2     937
                                             34 COMRAM     2     0      2
                                              0 BANK0      1     1      0
               _HAL_Timer0_Write_Val
 ---------------------------------------------------------------------------------
 (2) _Robot_Nav_Init                                       1     1      0   44430
                           _CCP_Init
                   _CCP_PWM_Set_Duty
                      _CCP_PWM_Start
                  _ECU_DC_Motor_Init
                   _ServoDriver_Init
 ---------------------------------------------------------------------------------
 (3) _ServoDriver_Init                                     5     1      4   14763
                                             18 BANK1      4     0      4
                      _MSSP_I2C_Init
                      _PCA_Write_Reg
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Init                                        3     1      2   10784
                                             16 BANK1      2     0      2
_I2C_Master_Mode_Clock_Configuration
             _I2C_Pin_Configurations
_I2C_Slave_Mode_Clock_Configurations
 ---------------------------------------------------------------------------------
 (5) _I2C_Slave_Mode_Clock_Configurations                  4     2      2     122
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Pin_Configurations                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Mode_Clock_Configurations                 4     2      2   10187
                                             35 COMRAM     1     1      0
                                             68 BANK0      2     0      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _ECU_DC_Motor_Init                                    3     1      2    7866
                                              6 BANK0      2     0      2
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Start                                        4     2      2     227
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Init                                             4     2      2    9751
                                              6 BANK0      3     1      2
            _CCP_Capture_Mode_Config
            _CCP_Compare_Mode_Config
               _CCP_Interrupt_Config
                _CCP_PWM_Mode_Config
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (4) _CCP_PWM_Mode_Config                                  3     1      2     402
                                             32 COMRAM     3     1      2
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (5) _Timer2_Init                                          4     2      2     194
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Interrupt_Config                                 2     0      2      76
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Compare_Mode_Config                              5     3      2     558
                                             32 COMRAM     4     2      2
                                              0 BANK0      1     1      0
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (4) _CCP_Capture_Mode_Config                              5     3      2     558
                                             32 COMRAM     4     2      2
                                              0 BANK0      1     1      0
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (5) _CCP_Mode_Timer_Select                                3     1      2     273
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Init                                     2     0      2   14012
                                              6 BANK0      2     0      2
      _GPIO_Pin_Direction_Initialize
                _GPIO_Pin_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    7611
                                             33 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     617
                                             29 COMRAM     3     1      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Forward                            1     1      0   57043
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Backward                           1     1      0   57043
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Forward                             1     1      0   57043
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Backward                            1     1      0   57043
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Forward                                   1     1      0   57043
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Right                               3     1      2    6092
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Backward                                  1     1      0   57043
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _Servo_SetAngle                                      10     4      6   27305
                                             16 BANK1      9     3      6
                      _PCA_Write_Reg
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    4242
                                             60 BANK0      8     0      8
                                              0 BANK1      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PCA_Write_Reg                                        6     1      5    3414
                                             34 COMRAM     1     1      0
                                              0 BANK0      5     0      5
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Write_Blocking                       6     1      5     978
                                             29 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Send_Stop                            3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Master_Send_Start                           3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Stop                                     1     1      0   11823
                   _CCP_PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Set_Duty                                    12     9      3   11813
                                             68 BANK0      2     2      0
                                             16 BANK1      9     6      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     757
                                             33 COMRAM     2     2      0
                                              8 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2873
                                             35 BANK0     25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Left                                3     1      2    6092
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Get_Temp_HUM                                        11     1     10    1309
                                              0 BANK0     10     0     10
               _DHT11_Check_Response
                    _DHT11_Read_Data
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Data                                      4     2      2     536
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Check_Response                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Distance                                        10     4      6   13057
                                             35 BANK0      9     3      6
                _GPIO_Pin_Read_Logic
                _HAL_Timer0_Read_Val
               _HAL_Timer0_Write_Val
                            ___fldiv
                           ___xxtofl
                    _send_trig_pulse
 ---------------------------------------------------------------------------------
 (2) _send_trig_pulse                                      2     0      2    5629
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1256
                                             29 COMRAM     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3743
                                             10 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _HAL_Timer0_Write_Val                                 5     1      4     490
                                             29 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _HAL_Timer0_Read_Val                                 11     7      4     490
                                             29 COMRAM     6     2      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Read_Logic                                 10     6      4     739
                                             29 COMRAM     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Service                                          3     3      0    8104
                                             16 BANK0      3     3      0
    _EUSART_Async_Read_Data_Blocking
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Write_Logic                                10     7      3    5477
                                             29 COMRAM     4     1      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Read_Data_Blocking                      5     1      4    2559
                                             12 BANK0      4     0      4
             _EUSART_Async_Read_Data
 ---------------------------------------------------------------------------------
 (3) _EUSART_Async_Read_Data                              15    11      4    1522
                                             34 COMRAM     2     2      0
                                              0 BANK0     12     8      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (4) _calc_parity_odd                                      5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _calc_parity_even                                     5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     276
                                             29 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  3     3      0     176
                                             26 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 6     6      0    1836
                                             19 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Rx_ISR                                       0     0      0    1836
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (11) _usart_isr                                           0     0      0    1836
   _Bluetooth_Send_Data_Non_Blocking
           i2_EUSART_Async_Read_Data
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Async_Read_Data                           15    11      4     768
                                              5 COMRAM    14    10      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (12) _Bluetooth_Send_Data_Non_Blocking                    4     1      3     968
                                             11 COMRAM     3     0      3
         _EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (13) _EUSART_Async_Transmit_Data                          7     3      4     742
                                              5 COMRAM     6     2      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_odd                                   5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_even                                  5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPS_Service
     _EUSART_Async_Read_Data_Blocking
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
     _GPIO_Pin_Write_Logic
   _Get_Distance
     _GPIO_Pin_Read_Logic
     _HAL_Timer0_Read_Val
     _HAL_Timer0_Write_Val
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _send_trig_pulse
       _GPIO_Pin_Write_Logic
   _Get_Temp_HUM
     _DHT11_Check_Response
     _DHT11_Read_Data
     _DHT11_Start
   _Robot_Move_Backward
     _CCP_PWM_Set_Duty
       ___fldiv
       ___flmul
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _ECU_DC_Motor_Run_Left
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
       _CCP_PWM_Set_Duty
     _Servo_SetAngle
       _PCA_Write_Reg
         _MSSP_I2C_Master_Send_Start
         _MSSP_I2C_Master_Send_Stop
         _MSSP_I2C_Master_Write_Blocking
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
   _Robot_Move_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Backward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Left
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Backward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Left
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Stop
   _Servo_SetAngle
   _application_intialize
     _Ecu_Stepper_Init
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Initialize
     _Robot_Nav_Init
       _CCP_Init
         _CCP_Capture_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Compare_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Interrupt_Config
         _CCP_PWM_Mode_Config
           _Timer2_Init
         _GPIO_Pin_Initialize
       _CCP_PWM_Set_Duty
       _CCP_PWM_Start
       _ECU_DC_Motor_Init
         _GPIO_Pin_Initialize
       _ServoDriver_Init
         _MSSP_I2C_Init
           _I2C_Master_Mode_Clock_Configurations
             ___fladd
             ___fldiv
             ___fltol
             ___xxtofl
           _I2C_Pin_Configurations
           _I2C_Slave_Mode_Clock_Configurations
         _PCA_Write_Reg
     _Servo_SetAngle
     _Ultra_Sonic_Init
       _GPIO_Pin_Initialize
       _HAL_Timer0_Init
         _HAL_Timer0_Write_Val
   _stepper_move_one_deg_ccw
     _Ecu_Stepper_Step
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Write_Logic
   _stepper_move_one_deg_cw
     _Ecu_Stepper_Step
     _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       _Bluetooth_Send_Data_Non_Blocking
         _EUSART_Async_Transmit_Data
           i2_calc_parity_even
           i2_calc_parity_odd
       i2_EUSART_Async_Read_Data
         i2_calc_parity_even
         i2_calc_parity_odd
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1B      66       7       39.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      41       1       69.1%
BITBIGSFRlllll      20      0       0      48        0.0%
BITBIGSFRhhhhll     18      0       0      38        0.0%
BITBIGSFRhhhhh       D      0       0      37        0.0%
BITBIGSFRllhhll      9      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      43        0.0%
BITBIGSFRllhhll      6      0       0      45        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRlllh        4      0       0      46        0.0%
BITBIGSFRhhhhll      3      0       0      39        0.0%
BITBIGSFRllhhll      1      0       0      42        0.0%
BITBIGSFRllhhlh      1      0       0      41        0.0%
BITBIGSFRllhhh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      12        0.0%
DATA                 0      0     147       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 03 10:09:34 2023

                                 _RH_Integral 0036                     ?_stepper_move_one_deg_ccw 0068  
                                ___fldiv@aexp 0082                                  ___fldiv@bexp 0081  
                                           _i 002B                                  ___fldiv@sign 007A  
                                 _SSPSTATbits 000FC7                                            l60 4B56  
                                          l55 4B7C                                            l65 4B2E  
                                          bsr 000FE0                         ??_InterruptManagerLow 001B  
              ECU_DC_Motor_Run_Right@dc_motor 0022                                           l300 385E  
                                         l310 35C8                                           l313 482E  
                                         l330 42C8                                           l325 4258  
                                         l342 4762                                           l513 34C2  
                                         l516 34E0                                           l349 47C8  
                                         l534 27CE                                           l543 488A  
                                         l706 2264                                           l619 293A  
                                         l563 4032                                           l572 4338  
                                         l566 4C5E                                           l727 2280  
                                         l575 4338                                           l728 2284  
                                         l921 43A8                                           l833 4602  
                                         l753 44B2                                           l826 459A  
                                         l835 462C                                           l828 45C4  
                                         l916 3EEA                                           l596 2D30  
                                         l693 20A8                                           l909 30CE  
                                         l758 44F0                                           l926 492A  
                                         l759 44F4                                           l890 2BEC  
                                         l990 2DCC                                           l984 2D4A  
                                         l999 2E6C                                           _PR2 000FCB  
                            _calc_parity_even 45C6                        ??_InterruptManagerHigh 0014  
                                         _gps 003C                     _RB5_InterruptHandler_HIGH 00E3  
                             __end_of_ADC_ISR 4C62      GPIO_Pin_Direction_Initialize@ERRORSTATUS 0020  
                                         prod 000FF3                                           tosl 000FFD  
                                         wreg 000FE8                                    _TXSTA1bits 000FAC  
                                ___flmul@aexp 0090                                  ___flmul@bexp 0095  
                                ___flmul@sign 008F                                  ___flmul@temp 009A  
                                ___flmul@prod 0096                        ??_GPIO_Pin_Write_Logic 0060  
                                 _stepper_pos 002D                        ??_HAL_Timer0_Write_Val 0022  
                             __end_of_RB4_ISR 4C4C                               __end_of_RB5_ISR 4C32  
                             __end_of_RB6_ISR 4C18                               __end_of_RB7_ISR 4BFE  
                                ___fltol@exp1 0023                                          l1010 497A  
                                        l1002 2E6E                                          l1012 497C  
                                        l1100 4C58                                          l1014 498A  
                                        l1030 4944                                          l1032 4952  
                                        l1017 499A                                          l1042 4522  
                                        l1035 4962                                          l1028 4942  
                                        l1044 4530                                          l1038 451E  
                                        l1047 455C                                          l1092 3D88  
                                        l1510 32FC                                          l1097 49CC  
                                        l1700 3A9E                                          l1533 3E3C  
                                        l1517 33E6                                          l1703 3B5E  
                                        l2520 1218                                          l1712 3C18  
                                        l1632 4430                                          l1537 4ADA  
                                        l1538 4ADC                                          l1802 3174  
                                        l1706 391E                                          l1634 4486  
                                        l1803 31DC                                          l2611 1862  
                                        l1715 3CD2                                          l2604 166C  
                                        l2621 1992                                          l2613 18DA  
                                        l1709 39DE                                          l1806 4A86  
                                        l1742 4BE2                                          l2614 18C8  
                                        l1718 4BA2                                          l2518 126C  
                                        l1751 4A4C                                          l2287 32E4  
                                        l2535 13C2                                          l2527 15A4  
                                        l2519 125A                                          l2608 19D0  
                                        l2544 14A6                                          l1745 4A30  
                                        l2545 1492                                          l1754 4A5A  
                                        l1739 3F90                                          l2572 1D6C  
                                        l2652 2582                                          l1748 4A3E  
                                        l1764 40A2                                          l2645 24EA  
                                        l1925 1D7E                                          l2574 1BCC  
                                        l2583 1C12                                          l1767 40C2  
                                        l1759 4044                                          l2648 2646  
                                        l1792 48E0                                          l2585 1C8A  
                                        l2577 1B90                                          l1697 41DC  
                                        l2586 1C78                                          l7010 4432  
                                        l2659 25DE                                          l1795 30F4  
                                        l7012 446C                                          l7004 441A  
                                        l7014 4478                                          l7006 441A  
                                        l1966 2FA0                                          l1975 2A56  
                                        l1799 3144                                          l8000 405C  
                                        l7016 4484                                          l7008 442C  
                                        l8002 406A                                          l7050 4C54  
                                        l7042 499C                                          l1987 2AA6  
                                        l8004 4088                                          l7300 3FF4  
                                        l7044 499C                                          l8006 40B0  
                                        l7302 400C                                          l7046 49AE  
                                        l8008 40B2                                          l7304 402A  
                                        l7048 49B2                                          l8162 433A  
                                        l7290 3F92                                          l8164 433A  
                                        l7292 3FA2                                          l8166 434C  
                                        l7294 3FB2                                          l8168 4350  
                                        l7296 3FCA                                          l7298 3FE8  
                                        l7650 485E                                          l7642 4830  
                                        l7652 486A                                          l7644 4830  
                                        l7654 4882                                          l7646 4842  
                                        l7656 488A                                          l7648 4846  
                                        l9700 10DC                                          l9710 110E  
                                        l9702 10DE                                          l9800 1302  
                                        l9720 114E                                          l9712 111E  
                                        l9704 10E8                                          l9810 139E  
                                        l9802 130A                                          l9730 117C  
                                        l9722 1162                                          l9714 1130  
                                        l9706 10F8                                          l9900 1A40  
                                        l7980 4BC6                                          l9820 1402  
                                        l9804 1338                                          l9812 13B0  
                                        l9740 1190                                          l9732 1180  
                                        l9724 1170                                          l9716 1134  
                                        l9708 10FC                                          l9910 1A76  
                                        l9902 1A46                                          l7990 4034  
                                        l7982 4BCA                                          l9830 1438  
                                        l9822 140C                                          l9814 13DA  
                                        l9806 138C                                          l9750 11A4  
                                        l9742 1194                                          l9734 1184  
                                        l9726 1174                                          l9718 113C  
                                        l9920 1AB6                                          l9912 1A86  
                                        l9904 1A54                                          l7992 4040  
                                        l7984 4BD8                                          l9840 1464  
                                        l9832 143C                                          l9824 141C  
                                        l9816 13EC                                          l9808 138E  
                                        l9760 11DE                                          l9752 11A8  
                                        l9744 1198                                          l9736 1188  
                                        l9728 1178                                          l9680 105C  
                                        l9922 1AC6                                          l9930 1AE6  
                                        l9914 1A88                                          l9906 1A56  
                                        l7986 4BE0                                          l9850 14C6  
                                        l9842 1472                                          l9834 144C  
                                        l9826 1420                                          l9770 1236  
                                        l9762 11FE                                          l9754 11AC  
                                        l9746 119C                                          l9738 118C  
                                        l9690 10A4                                          l9682 106C  
                                        l9940 1B24                                          l9932 1AF6  
                                        l9924 1ACE                                          l9908 1A66  
                                        l9916 1A90                                          l7988 4A30  
                                        l9860 1534                                          l9852 14D4  
                                        l9844 1488                                          l9828 1430  
                                        l9836 144E                                          l9780 128C  
                                        l9772 1246                                          l9764 1210  
                                        l9748 11A0                                          l9756 11B0  
                                        l9692 10A8                                          l9684 1070  
                                        l9950 1B6C                                          l9942 1B34  
                                        l9934 1AF6                                          l9926 1AD2  
                                        l9918 1AA0                                          l7998 4052  
                                        l9870 1576                                          l9862 1558  
                                        l9854 1510                                          l9790 12D2  
                                        l9838 145E                                          l9774 124A  
                                        l9766 1226                                          l9758 11B4  
                                        l9686 1082                                          l9694 10B0  
                                        l9678 1048                                          STR_1 1014  
                                        l9960 1BBA                                          l9952 1B80  
                                        l9944 1B44                                          l9880 19D2  
                                        l9872 1580                                          l9864 155C  
                                        l9848 14B8                                          l9856 1512  
                                        l9792 12DE                                          l9784 12A2  
                                        l9776 1256                                          l9768 1232  
                                        l9696 10C2                                          l9688 1092  
                                        STR_2 1034                                          STR_3 1025  
                                        l9970 1C02                                          l9962 1BCA  
                                        l9954 1B8E                                          l9946 1B54  
                                        l9938 1B0A                                          l9890 1A10  
                                        l9882 19E0                                          l9874 1590  
                                        l9866 156A                                          l9858 1524  
                                        l9794 12E2                                          l9786 12B4  
                                        l9778 127C                                          l9698 10CA  
                                        STR_4 1001                                          STR_5 1043  
                                        l9980 1C42                                          l9972 1C10  
                                        l9964 1BDC                                          l9956 1B9A  
                                        l9948 1B5C                                          l9892 1A20  
                                        l9884 19EE                                          l9876 1594  
                                        l9868 1572                                          l9796 12F2  
                                        l9788 12C2                                          l9990 1CB4  
                                        l9982 1C70                                          l9966 1BF2  
                                        l9974 1C22                                          l9958 1BB8  
                                        l9894 1A22                                          l9886 19F0  
                                        l9798 12F6                                          STR_9 1040  
                                        l9992 1CDE                                          l9976 1C30  
                                        l9968 1BF8                                          l9888 1A00  
                                        l9896 1A2A                                          l9986 1C9A  
                                        l9994 1CE2                                          l9978 1C34  
                                        l9898 1A3A                                          l9996 1CFC  
                                        l9988 1CA6                                          l9998 1D12  
                                        _LATA 000F89                                          _LATB 000F8A  
                                        _LATC 000F8B                                          _LATD 000F8C  
                                        _LATE 000F8D                                          u6340 442C  
                                        u7300 4842                                          u6341 4428  
                                        u7301 483E                                          u7310 485E  
                                        u7311 485A                                          i2l32 4B06  
                                        u7320 4882                                          u7321 487E  
                                        u6700 3FCA                                          u6701 3FC6  
                                        u6710 3FE8                                          u6390 49AE  
                                        u6711 3FE4                                          u6391 49AA  
                                        u8080 434C                                          u6720 400C  
                                        u8081 4348                                          u6721 4008  
                                        u6730 402A                                          u6731 4026  
                                        u8094 436C                                          u8095 4368  
                                        u7820 4A3E                                          u7821 4A3A  
                                        u7830 4A4C                                          u7831 4A48  
                                        u7840 4A5A                                          u7841 4A56  
                                        u7850 4052                                          u7851 404E  
                                        u7860 406A                                          u7861 4066  
                                        u7870 40B0                                          u7871 40AC  
                                        u7880 40C2                                          u9800 10F8  
                                        u7881 40BE                                          u9801 10F4  
                                        u9810 110E                                          u9811 110A  
                                        u9900 126C                                          u9820 111E  
                                        u9901 1268                                          u9821 111A  
                                        u9910 127C                                          u9830 1162  
                                        u9911 1278                                          u9831 115E  
                                        u9920 128C                                          u9840 1170  
                                        u9760 106C                                          u9921 1288  
                                        u9841 116C                                          u9761 1068  
                                        u9930 12C2                                          u9850 11DE  
                                        u9770 1082                                          u9931 12BE  
                                        u9851 11DA                                          u9771 107E  
                                        u9940 12D2                                          u9860 11F8  
                                        u9780 1092                                          u9941 12CE  
                                        u9861 11F2                                          u9781 108E  
                                        u9950 12F2                                          u9870 11FA  
                                        u9790 10DC                                          _RX9D 007D58  
                                        u9951 12EE                                          u9791 10D8  
                                        u9960 1338                                          u9880 1226  
                                        u9961 1334                                          u9881 1222  
                                        u9970 139E                                          u9890 1246  
                                        _TMR2 000FCC                                          u9971 139A  
                                        u9891 1242                                          u9980 13DA  
                                        u9981 13D6                                          u9990 13EC  
                                        u9991 13E8                         ??_CCP_PWM_Mode_Config 0023  
                     ??_application_intialize 0025              __end_ofi2_EUSART_Async_Read_Data 2490  
                    _RB4_InterruptHandler_LOW 00E5                     ??_CCP_Capture_Mode_Config 0023  
                                        _blue 003B                                          _main 1D6E  
                    _RB7_InterruptHandler_LOW 00D9                                          fsr2h 000FDA  
                                        indf2 000FDF                                          fsr1l 000FE1  
                                        fsr2l 000FD9                                          btemp 0042  
                                        prodh 000FF4                                          prodl 000FF3  
                                        start 0286               __end_of_CCP_Compare_Mode_Config 293C  
            GPIO_Pin_Toggle_Logic@_pin_config 001E            i2GPIO_Pin_Toggle_Logic@_pin_config 0001  
                           ??_HAL_Timer0_Init 0060                               ___fldiv@new_exp 007B  
                       __end_of_CCP_PWM_Start 488C                       ?_EUSART_Async_Read_Data 0060  
        Bluetooth_Send_Data_Non_Blocking@data 000E                         _CCP_PWM_Set_Duty$5751 015E  
                            __end_of_CCP_Init 34E2                          __end_of_Get_Distance 31DE  
                                ___param_bank 000000                                  fp__usart_isr 0000  
                                _stepper_base 003E                              __end_of_INT1_ISR 4C5E  
                  __end_ofi2_calc_parity_even 46FE                                         l10000 1D2C  
                                       l10010 1D62                                         l10002 1D48  
                                       l10004 1D4C                                         l10100 2626  
                                       l10020 31F6                                         l10110 2FA6  
                                       l10006 1D5A                                         l10102 2634  
                                       l10030 3246                                         l10112 2FB8  
                                       l10008 1D60                                         l10104 2636  
                                       l10040 3270                                         l10032 324A  
                                       l10024 320A                                         l10200 430A  
                                       l10122 30A2                                         l10114 2FD8  
                                       l10050 3298                                         l10042 327A  
                                       l10034 3258                                         l10026 3234  
                                       l10018 31DE                                         l10202 4312  
                                       l10210 3CE8                                         l10116 2FE0  
                                       l10124 30CC                                         l10108 2FA2  
                                       l10052 32A4                                         l10044 3284  
                                       l10028 3236                                         l10132 4964  
                                       l11100 39E0                                         l10220 48F4  
                                       l10204 4330                                         l10300 2C8E  
                                       l10212 3CEC                                         l10118 3044  
                                       l10070 2510                                         l10062 2494  
                                       l10054 32B4                                         l10134 4964  
                                       l10150 451A                                         l11110 3A44  
                                       l11102 39E6                                         l10222 48FC  
                                       l10310 2CCE                                         l10214 3D06  
                                       l10206 3CD4                                         l10230 2D32  
                                       l10400 4604                                         l10080 256A  
                                       l10064 24A6                                         l10056 32C4  
                                       l10136 4976                                         l10160 492C  
                                       l10152 4540                                         l10144 44F6  
                                       l11112 3A62                                         l11104 39EA  
                                       l11200 3BDC                                         l10224 4928  
                                       l10216 48E2                                         l10304 2CAA  
                                       l10208 3CD4                                         l10240 2D90  
                                       l10232 2D46                                         l10410 462A  
                                       l10402 4614                                         l10090 25CE  
                                       l10082 256C                                         l10074 2524  
                                       l10066 24B4                                         l10058 32D4  
                                       l10138 499A                                         l10162 493E  
                                       l10154 4550                                         l10146 44F6  
                                       l11130 3AE6                                         l11122 3AA0  
                                       l11114 3A6E                                         l11106 3A08  
                                       l11210 3C1A                                         l11202 3BE8  
                                       l10170 2AA8                                         l10218 48E2  
                                       l10306 2CB6                                         l10314 2CDA  
                                       l10250 2DE2                                         l10242 2DAA  
                                       l10234 2D4C                                         l10404 4616  
                                       l10420 456C                                         l11300 2996  
                                       l10092 25EC                                         l10084 2578  
                                       l10076 252C                                         l10068 24FA  
                                       l10500 16F0                                         l10164 4962  
                                       l10148 4508                                         l11140 3B4C  
                                       l11132 3B04                                         l11124 3AA6  
                                       l11116 3A7A                                         l11108 3A26  
                                       l11220 3C78                                         l11212 3C1A  
                                       l11204 3BF4                                         l10180 2B4A  
                                       l10172 2AAC                                         l10308 2CC2  
                                       l10316 2D20                                         l12020 28FC  
                                       l10340 27F2                                         l10260 2E2E  
                                       l10244 2DB0                                         l10252 2DEE  
                                       l10236 2D66                                         l10228 2D32  
                                       l11060 46FE                                         l10406 4624  
                                       l10430 45BC                                         l10422 4598  
                                       l10414 4560                                         l11310 29DA  
                                       l11302 29A8                                         l10094 25EE  
                                       l10086 25B4                                         l10078 2538  
                                       l10510 1732                                         l10502 16FC  
                                       l10158 492C                                         l10270 47CA  
                                       l11134 3B22                                         l11126 3AAA  
                                       l11118 3A8C                                         l11222 3C96  
                                       l11214 3C1E                                         l11206 3C06  
                                       l11150 3888                                         l10174 2ABE  
                                       l10318 2D2C                                         l12022 2C68  
                                       l10350 282E                                         l10342 27FE  
                                       l10334 27D0                                         l10262 2E30  
                                       l10254 2DF2                                         l10246 2DCA  
                                       l10238 2D76                                         l10424 459C  
                                       l10600 2144                                         l11320 2A16  
                                       l11312 29DC                                         l11304 29AA  
                                       l10440 4AB8                                         l10096 25F2  
                                       l10088 25C0                                         l11240 3F24  
                                       l11232 3EEC                                         l10520 1794  
                                       l10512 173E                                         l10504 1708  
                                       l10280 4822                                         l10272 47CE  
                                       l11136 3B2E                                         l11128 3AC8  
                                       l11224 3CA2                                         l11216 3C3C  
                                       l11160 38FA                                         l11152 38A6  
                                       l11144 3860                                         l10184 2BA8  
                                       l10176 2ADE                                         l12024 2CFA  
                                       l10360 28AC                                         l10344 280A  
                                       l10352 2836                                         l10336 27D6  
                                       l10264 2E4A                                         l10256 2E0E  
                                       l10248 2DD2                                         l11080 4764  
                                       l12016 1FAC                                         l10434 45C2  
                                       l10426 45AC                                         l10610 219C  
                                       l10602 214C                                         l11330 2A7A  
                                       l11322 2A30                                         l11314 29FA  
                                       l11306 29BC                                         l10442 4ACA  
                                       l10098 2616                                         l11250 3F54  
                                       l11242 3F36                                         l11234 3EEC  
                                       l10530 182A                                         l10522 17A0  
                                       l10514 174E                                         l10506 1716  
                                       l10450 15A6                                         l10274 47DA  
                                       l11138 3B3A                                         l11226 3CAE  
                                       l11218 3C5A                                         l11170 392A  
                                       l11162 390C                                         l11154 38C4  
                                       l11146 3866                                         l12026 2BD4  
                                       l10178 2AE6                                         l10186 2BEA  
                                       l10194 42CA                                         l10290 2C1C  
                                       l10282 2BEE                                         l10362 28B8  
                                       l10370 28DC                                         l12018 2856  
                                       l10346 2816                                         l10354 2884  
                                       l10266 2E50                                         l10258 2E14  
                                       l11074 4734                                         l11066 4716  
                                       l10428 45AE                                         l10612 21A8  
                                       l10620 21F4                                         l10604 2154  
                                       l12028 30B6                                         l11332 2A94  
                                       l11324 2A32                                         l11308 29C0  
                                       l11316 2A00                                         l10444 4AD2  
                                       l11252 3F60                                         l11236 3F00  
                                       l11244 3F48                                         l10540 1880  
                                       l10532 1848                                         l10524 17BC  
                                       l10516 1768                                         l10508 1722  
                                       l10460 15E4                                         l10452 15B4  
                                       l10700 2664                                         l10276 47F2  
                                       l11228 3CC0                                         l11180 39AE  
                                       l11172 3948                                         l11156 38E2  
                                       l11148 386A                                         l10196 42E6  
                                       l10292 2C28                                         l10284 2BF4  
                                       l10364 28C4                                         l10348 2822  
                                       l10372 292A                                         l10268 2E6A  
                                       l11076 4740                                         l11068 472A  
                                       l10390 45C8                                         l10630 2244  
                                       l10622 2214                                         l10614 21B0  
                                       l10606 2168                                         l11334 2AA4  
                                       l11326 2A50                                         l11318 2A12  
                                       l10446 4AD6                                         l10438 4AB4  
                                       l11270 310A                                         l11262 30D0  
                                       l11254 3F6C                                         l11246 3F4C  
                                       l11238 3F12                                         l10550 18EA  
                                       l10542 1884                                         l10534 1852  
                                       l10526 17E6                                         l10518 1778  
                                       l10470 1616                                         l10462 15F4  
                                       l10454 15C2                                         l10710 27A0  
                                       l10702 2668                                         l10278 480A  
                                       l11182 39BA                                         l11174 3966  
                                       l11166 3920                                         l11190 3B60  
                                       l11158 38EE                                         l10198 42EE  
                                       l10294 2C34                                         l10374 2936  
                                       l10366 28D0                                         l10358 28A0  
                                       l11094 479A                                         l11086 477C  
                                       l11078 4746                                         l10624 2228  
                                       l10616 21B8                                         l10608 2188  
                                       l11328 2A68                                         l11280 3176  
                                       l11272 311A                                         l11264 30DE  
                                       l11256 3F78                                         l11248 3F50  
                                       l10560 194C                                         l10552 18F6  
                                       l10544 1892                                         l10536 1860  
                                       l10528 181C                                         l10480 1656  
                                       l10472 1624                                         l10464 15FA  
                                       l10456 15C4                                         l10712 27CE  
                                       l10704 273E                                         l11184 39CC  
                                       l11176 3984                                         l11168 3926  
                                       l11192 3B64                                         l10296 2C40  
                                       l10288 2C10                                         l10640 4B58  
                                       l10720 32F8                                         l11096 47A6  
                                       l11088 4790                                         l10626 2234  
                                       l10618 21D4                                         l11290 2944  
                                       l11274 3132                                         l11266 30F0  
                                       l11258 3F84                                         l10570 19B4  
                                       l10562 1960                                         l10554 1904  
                                       l10546 18C0                                         l10538 1872  
                                       l10490 16A0                                         l10482 165C  
                                       l10474 1626                                         l10466 160A  
                                       l10458 15D4                                         l10706 2756  
                                       l11178 39A2                                         l11194 3B82  
                                       l10298 2C48                                         l10642 4B58  
                                       l10650 3792                                         l10730 3366  
                                       l10722 32FE                                         l11098 47AC  
                                       l10396 45D4                                         l10628 223C  
                                       l10636 2264                                         l10580 2076  
                                       l11292 2958                                         l11276 314A  
                                       l11268 30F6                                         l10572 19B6  
                                       l10564 197A                                         l10556 192E  
                                       l10492 16AC                                         l10484 167C  
                                       l10476 1636                                         l10468 1610  
                                       l10708 2788                                         l11196 3BA0  
                                       l11188 3B60                                         l10644 4B6C  
                                       l10652 3792                                         l10740 33B0  
                                       l10732 3368                                         l10724 332E  
                                       l10716 32E6                                         l11284 2E70  
                                       l10398 4600                                         l10638 2272  
                                       l10590 20D0                                         l10582 2080  
                                       l10750 4488                                         l11294 296C  
                                       l11286 293C                                         l11278 3162  
                                       l10566 1996                                         l10574 19BC  
                                       l10558 1932                                         l10494 16B6  
                                       l10486 168C                                         l10478 1646  
                                       l11198 3BBE                                         l10670 3418  
                                       l10662 33E8                                         l10646 4B70  
                                       l10654 37A6                                         l10742 33D0  
                                       l10734 3382                                         l10726 3346  
                                       l10718 32E6                                         l10592 20EA  
                                       l10584 2092                                         l10760 44E2  
                                       l10752 449C                                         l11288 2942  
                                       l10920 3DBA                                         l10912 3D8A  
                                       l10576 19C0                                         l10568 19A6  
                                       l10496 16CC                                         l10680 3468  
                                       l10672 3420                                         l10664 33E8  
                                       l10656 37B8                                         l10744 33E4  
                                       l10736 3398                                         l10728 334C  
                                       l10904 4270                                         l11800 1F00  
                                       l10594 2104                                         l10586 20A4  
                                       l10754 44AE                                         l11298 2982  
                                       l10930 3E24                                         l10922 3DD4  
                                       l10914 3D92                                         l10762 4B30  
                                       l10498 16D8                                         l10690 34D4  
                                       l10682 3484                                         l10674 3438  
                                       l10666 33FC                                         l10658 37BC  
                                       l10738 339A                                         l10906 4280  
                                       l11810 1F3A                                         l11802 1F20  
                                       l11730 1DA6                                         l10596 2124  
                                       l10588 20B6                                         l10756 44C0  
                                       l10748 4488                                         l10924 3DDC  
                                       l10916 3DA4                                         l10764 4B30  
                                       l10772 4B08                                         l10692 34E0  
                                       l10684 3494                                         l10676 343C  
                                       l10668 3400                                         l10940 4160  
                                       l10908 429C                                         l11812 1F6C  
                                       l11804 1F22                                         l11740 1DCE  
                                       l11732 1DAE                                         l11724 1D6E  
                                       l10598 2138                                         l10758 44D4  
                                       l10790 3E82                                         l10782 3E3E  
                                       l10926 3E06                                         l10918 3DB6  
                                       l10766 4B42                                         l10870 34E2  
                                       l10774 4B08                                         l10686 34B2  
                                       l10678 3458                                         l10950 41AE  
                                       l10942 416E                                         l11814 1F8E  
                                       l11806 1F32                                         l11750 1E0C  
                                       l11742 1DD6                                         l11734 1DB6  
                                       l11726 1D8A                                         l10792 3E86  
                                       l10784 3E3E                                         l10928 3E20  
                                       l10768 4B46                                         l10696 2648  
                                       l10960 4B7E                                         l10880 357C  
                                       l10872 34E2                                         l10776 4B1A  
                                       l10688 34C2                                         l10952 41BA  
                                       l10944 417C                                         l10936 4152  
                                       l11752 1E10                                         l11744 1DE8  
                                       l11736 1DBE                                         l11728 1D9E  
                                       l10786 3E50                                         l10698 2652  
                                       l10962 4B90                                         l10882 359E  
                                       l10874 34F6                                         l10778 4B1E  
                                       l10954 41C6                                         l10946 418A  
                                       l10938 4152                                         l10970 48A0  
                                       l11770 1E80                                         l11762 1E4A  
                                       l11754 1E30                                         l11746 1DFA  
                                       l11738 1DC6                                         l11818 1F96  
                                       l10788 3E62                                         l10980 4A5C  
                                       l10884 35A2                                         l10876 34FA  
                                       l10948 419C                                         l10972 48B2  
                                       l11780 1E9C                                         l11772 1E82  
                                       l11764 1E4C                                         l11756 1E32  
                                       l11748 1DFC                                         l10982 4A6C  
                                       l10958 4B7E                                         l10878 3504  
                                       l10894 41F6                                         l10974 48B6  
                                       l10966 488C                                         l11790 1EE2  
                                       l11782 1EAC                                         l11774 1E92  
                                       l11766 1E5C                                         l11758 1E42  
                                       l10984 4A76                                         l10888 41DE  
                                       l10976 48D4                                         l10968 488C  
                                       l11784 1EB0                                         l11768 1E60  
                                       l10898 425A                                         l11794 1EEA  
                                       l11786 1ED0                                         l11778 1E9A  
                                       l11796 1EEC                                         l11788 1ED2  
                                       l11798 1EFC                                 ___fltol@sign1 0022  
                             __end_of___fladd 15A6                                         ?_main 0001  
                      Servo_SetAngle@servo_no 015F                               __end_of___fldiv 1D6E  
                             __end_of___flmul 19D2                               __end_of___fltol 32E6  
                                       u10000 141C                                         u10001 1418  
                                       u10010 1430                                         u10011 142C  
                                       u10100 1524                                         u10020 144C  
                                       u10101 1520                                         u10021 1448  
                                       u10110 1534                                         u10030 145E  
                                       u10111 1530                                         u10031 145A  
                                       u11000 45BC                                         u10200 1A76  
                                       u10120 1558                                         u10040 1472  
                                       u11001 45B8                                         u10201 1A72  
                                       u10121 1554                                         u10041 146E  
                                       u11010 4ACA                                         u10210 1AB6  
                                       u10130 156A                                         u10050 1488  
                                       u11011 4AC6                                         u10211 1AB2  
                                       u10131 1566                                         u10051 1484  
                                       u10300 1C42                                         u10220 1AF6  
                                       u11100 1806                                         u11020 15C2  
                                       u10140 1590                                         u10060 14A2  
                                       u10301 1C3E                                         u10221 1AF2  
                                       u11021 15BE                                         u10141 158C  
                                       u10061 149E                                         u10310 1C70  
                                       u10230 1B6C                                         u10150 19EE  
                                       u11110 1860                                         u11030 15D4  
                                       u10070 14B8                                         u10311 1C6C  
                                       u10231 1B68                                         u10151 19EA  
                                       u11111 185C                                         u11031 15D0  
                                       u10071 14B4                                         u10320 1C86  
                                       u10240 1B8E                                         u10160 1A00  
                                       u12000 30F0                                         u11200 19B4  
                                       u11120 1880                                         u11040 15E4  
                                       u10400 3258                                         u10080 14D4  
                                       u10321 1C82                                         u10241 1B8A  
                                       u10161 19FC                                         u12001 30EC  
                                       u11201 19B0                                         u11121 187C  
                                       u11105 17FC                                         u11041 15E0  
                                       u10401 3254                                         u10081 14D0  
                                       u11210 2092                                         u10330 1C9A  
                                       u10250 1BB8                                         u10170 1A10  
                                       u12010 3144                                         u11130 1892  
                                       u11050 1624                                         u10410 326C  
                                       u10090 1510                                         u11211 208E  
                                       u10331 1C96                                         u10251 1BB4  
                                       u10171 1A0C                                         u12011 3140  
                                       u11131 188E                                         u11051 1620  
                                       u10411 3268                                         u10091 150C  
                                       u11300 21D4                                         u11220 20A4  
                                       u12100 2A7A                                         u10340 1CB4  
                                       u10260 1BDC                                         u10180 1A54  
                                       u10500 25CE                                         u12020 3174  
                                       u11140 18C0                                         u11060 1636  
                                       u10420 3294                                         u11301 21D0  
                                       u11221 20A0                                         u12101 2A76  
                                       u10341 1CB0                                         u10261 1BD8  
                                       u10181 1A50                                         u10501 25CA  
                                       u12021 3170                                         u11141 18BC  
                                       u11061 1632                                         u10421 3290  
                                       u11310 2214                                         u11230 20B6  
                                       u12030 297E                                         u10350 1CFC  
                                       u10270 1BF2                                         u10190 1A66  
                                       u10510 25DE                                         u11150 18D6  
                                       u11070 1646                                         u10430 32B4  
                                       u11311 2210                                         u11231 20B2  
                                       u12031 297A                                         u10351 1CF8  
                                       u10271 1BEE                                         u10191 1A62  
                                       u10511 25DA                                         u11151 18D2  
                                       u11071 1642                                         u10431 32B0  
                 ??_MSSP_I2C_Master_Send_Stop 0020                                         u11320 2228  
                                       u11240 20D0                                         u12040 29A8  
                                       u10360 1D2C                                         u10280 1C10  
                                       u10520 25EC                                         u11160 18EA  
                                       u11080 167C                                         u10440 32C4  
                                       u10600 498A                                         u11400 3418  
                                       u11321 2224                                         u11241 20CC  
                                       u12041 29A4                                         u10361 1D28  
                                       u10281 1C0C                                         u10521 25E8  
                                       u11161 18E6                                         u11081 1678  
                                       u10441 32C0                                         u10601 4986  
                                       u11401 3414                                         u11330 2260  
                                       u11250 2104                                         u12050 29BC  
                                       u10370 1D5A                                         u10290 1C30  
                                       u10530 2626                                         u10450 24A6  
                                       u11170 1904                                         u11090 168C  
                                       u10610 499A                                         u11410 3438  
                                       u11331 225C                                         u11251 2100  
                                       u12051 29B8                                         u10371 1D56  
                                       u10291 1C2C                                         u10531 2622  
                                       u10451 24A2                                         u11171 1900  
                                       u11091 1688                                         u10611 4996  
                                       u11411 3434                                         u11340 2272  
                                       u11260 2124                                         u12060 29FA  
                                       u10540 2634                                         u10460 24B4  
                                       u11180 194C                                         u10380 31F6  
                                       u10620 4508                                         u10700 2ADE  
                                       u11420 3458                                         u11500 332E  
                                       u11341 226E                                         u11261 2120  
                                       u12061 29F6                                         u10541 2630  
                                       u10461 24B0                                         u11181 1948  
                                       u10381 31F2                                         u10621 4504  
                                       u10701 2ADA                                         u11421 3454  
                                       u11501 332A                                         u11350 2280  
                                       u11270 2138                                         u10550 2FB8  
                                       u12070 2A12                                         u10470 2510  
                                       u11190 197A                                         u10390 322A  
                                       u10630 451A                                         u11430 3484  
                                       u11510 3366                                         u11351 227C  
                                       u11271 2134                                         u10551 2FB4  
                                       u12071 2A0E                                         u10471 250C  
                                       u11191 1976                                         u10631 4516  
                                       u11431 3480                                         u11511 3362  
                                       u11280 2188                                         u10560 2FD8  
                                       u12080 2A50                                         u10480 2566  
                                       u11600 4B42                                         u10640 4530  
                                       u11440 34B2                                         u11360 4B6C  
                                       u10800 2D46                                         u11520 3382  
                                       u11281 2184                                         u10561 2FD4  
                                       u12081 2A4C                                         u10481 2562  
                                       u11601 4B3E                                         u10641 452C  
                                       u11441 34AE                                         u11361 4B68  
                                       u10801 2D42                                         u11521 337E  
                                       u11290 219C                                         u12090 2A68  
                                       u10490 25B0                                         u11450 2664  
                                       u10650 4540                                         u11610 4B1A  
                                       u10730 2BC0                                         u10714 2B02  
                                       u10810 2D66                                         u11370 37A6  
                                       u12410 1E0C                                         u11291 2198  
                                       u12091 2A64                                         u10491 25AC  
                                       u10395 3220                                         u11451 2660  
                                       u10651 453C                                         u11611 4B16  
                                       u10731 2BBA                                         u10715 2AFE  
                                       u10811 2D62                                         u11371 37A2  
                                       u12411 1E08                                         u11620 3E50  
                                       u11460 2756                                         u10660 493E  
                                       u10740 2BC2                                         u10724 2B66  
                                       u10900 2CA6                                         u10820 2D90  
                                       u11380 37B8                                         u12420 1E42  
                                       u11621 3E4C                                         u11461 2752  
                                       u10661 493A                                         u10725 2B62  
                                       u10901 2CA2                                         u10821 2D8C  
                                       u11381 37B4                                         u12421 1E3E  
                                       u11550 449C                                         u10574 2FFC  
                                       u11630 3E62                                         u11470 27A0  
                                       u10590 4976                                         u10670 4952  
                                       u10750 42E6                                         u10910 27EE  
                                       u11390 33FC                                         u10830 2DAA  
                                       u12430 1E5C                                         u11551 4498  
                                       u10575 2FF8                                         u11631 3E5E  
                                       u11471 279C                                         u10591 4972  
                                       u10671 494E                                         u10751 42E2  
                                       u10911 27EA                                         u11391 33F8  
                                       u10831 2DA6                                         u11535 3396  
                                       u12431 1E58                                         u11560 44AE  
                                       u10584 3060                                         u11640 3E82  
                                       u10680 4962                                         u10760 430A  
                                       u10920 289C                                         u10840 2DCA  
                                       u11480 32F8                                         u11800 48A0  
                                       u12440 1E92                                         u11561 44AA  
                                       u10585 305C                                         u11641 3E7E  
                                       u10681 495E                                         u10761 4306  
                                       u10921 2898                                         u10841 2DC6  
                                       u11545 33AE                                         u11537 3398  
                                       u11481 32F4                                         u11801 489C  
                                       u12441 1E8E                                         u11570 44C0  
                                       u11730 34F6                                         u10690 2ABE  
                                       u10770 4330                                         u10850 2E0E  
                                       u11810 48B2                                         u12450 1EAC  
                                       u11571 44BC                                         u11731 34F2  
                                       u10691 2ABA                                         u10771 432C  
                                       u10851 2E0A                                         u11547 33B0  
                                       u11811 48AE                                         u12507 428C  
                                       u12451 1EA8                                         u10940 4600  
                                       u11580 44E2                                         u11740 41F2  
                                       u10780 3CE8                                         u10860 2E2E  
                                       u12460 1EE2                                         u10941 45FC  
                                       u11581 44DE                                         u11741 41EE  
                                       u10781 3CE4                                         u10861 2E2A  
                                       u12517 42B8                                         u12461 1EDE  
                                       u10950 4614                                         u10934 45E6  
                                       u11590 44F0                                         u11654 3ED4  
                                       u10790 48F4                                         u10870 2E4A  
                                       u11750 426C                                         u11910 4712  
                                       u12470 1EFC                                         u10951 4610  
                                       u10935 45E2                                         u11591 44EC  
                                       u11655 3ED0                                         u12527 4BD0  
                                       u10791 48F0                                         u10871 2E46  
                                       u11495 3312                                         u11751 4268  
                                       u11911 470E                                         u12471 1EF8  
                                       u10960 4624                                         u11760 3DA4  
                                       u10880 2E6A                                         u11920 4762  
                                       u12480 1F32                                         u10961 4620  
                                       u11761 3DA0                                         u12537 4BDC  
                                       u10881 2E66                                         u11497 3314  
                                       u11921 475E                                         u12481 1F2E  
                                       u11770 3DB6                                         u10890 2C0C  
                                       u11930 4778                                         u11771 3DB2  
                                       u12547 4054                                         u10891 2C08  
                                       u11931 4774                                         u10980 4598  
                                       u11780 3DD4                                         u11940 47C8  
                                       u10981 4594                                         u11781 3DD0  
                                       u12557 4A6E                          __end_of_Get_Temp_HUM 3F92  
                                       u11941 47C4                                         u10990 45AC  
                                       u10974 457E                                         u11790 3E20  
                                       u11950 3F00                                         u10991 45A8  
                                       u10975 457A                                         u12567 2A86  
                                       u11791 3E1C                                         u11951 3EFC  
                                       u11960 3F12                                         u11961 3F0E  
                                       u12497 1D92                                         u11970 3F24  
                                       u11971 3F20                                         u11980 3F36  
                                       u11981 3F32                                         u11990 3F48  
                                       u11991 3F44                        _ECU_DC_Motor_Run_Right 4B08  
                                       i1l477 4C60                                         i2l706 246E  
                                       i2l727 248A                                         i2l728 248E  
                                       i2l833 46D2                                         i2l921 4418  
                                       i2l826 466A                                         i2l690 3790  
                                       i2l842 4AB2                                         i2l835 46FC  
                                       i2l828 4694                                         i2l693 22B6  
                                       i2l686 378C                                         i2l838 4C64  
                                       _RCREG 000FAE                                         _TMR0H 000FD7  
                                       _TMR1H 000FCF                                         _TMR0L 000FD6  
                                       _TMR1L 000FCE                         Get_Distance@timer_val 0089  
                                       _SPBRG 000FAF                                         _PORTA 000F80  
                                       _PORTB 000F81                                         _PORTC 000F82  
                                       _PORTD 000F83                                         _PORTE 000F84  
                               _EUSART_Rx_ISR 4A88                                         _TRISA 000F92  
                                       _TRISB 000F93                                         _TRISC 000F94  
                                       _TRISD 000F95                                         _TRISE 000F96  
                               _EUSART_Tx_ISR 4C64                                         _TXREG 000FAD  
                            __end_of_TMR0_ISR 4C64                                GPS_Service@key 0072  
                                       _flags 003D                                    _T_Integral 0034  
                  ?_Robot_Steer_Right_Forward 0001                                         pclath 000FFA  
                                       pclatu 000FFB                                  ?_GPS_Service 0001  
                                       tablat 000FF5               CCP_Capture_Mode_Config@_ccp_obj 0021  
                 HAL_Timer0_Init@_tmr0_config 0023                          PCA_Write_Reg@i2c_obj 0060  
                                       ttemp5 0043                                         ttemp6 0046  
                                       ttemp7 004A                                         status 000FD8  
                                       wtemp8 0043                __end_of_EUSART_Async_Read_Data 2286  
                    Get_Distance@_tmr0_config 0085                       HAL_Timer0_Write_Val@val 0020  
            ServoDriver_Init@servo_driver_obj 015F                             ??_DHT11_Read_Data 0020  
                 _I2C_DefaultInterruptHandler 00F1                               __initialization 40C4  
      MSSP_I2C_Master_Write_Blocking@i2c_data 0020                                  __end_of_main 2076  
                  _eusart_Rx_InterruptHandler 0029                         CCP_PWM_Start@_ccp_obj 001E  
               __end_of_GPIO_Pin_Toggle_Logic 43AA                                     ??_ADC_ISR 001A  
                            _servo_driver_obj 00CD                         _CCP_Mode_Timer_Select 42CA  
                               _lat_registers 00A6                              _Ultra_Sonic_Init 488C  
                                      ??_main 0164                     Servo_SetAngle@reg_addrees 0163  
                               __activetblptr 000003                                ?_EUSART_Rx_ISR 0001  
                         DHT11_Read_Data@data 001E                                ?_EUSART_Tx_ISR 0001  
                                   ??_RB4_ISR 001A                       ?_I2C_Pin_Configurations 0001  
                                   ??_RB5_ISR 001A                                     ??_RB6_ISR 001A  
                                   ??_RB7_ISR 001A                         Get_Temp_HUM@T_Decimal 0064  
              GPIO_Pin_Read_Logic@_pin_config 001E                         RB5_ISR@Handler_Select 001A  
                Ultra_Sonic_Init@_tmr0_config 0068                                        _ADRESH 000FC4  
                                      _ADRESL 000FC3                                        _CCPR1L 000FBE  
                                      _CCPR2L 000FBB                      __end_of_Ecu_Stepper_Init 425A  
                ??_MSSP_I2C_Master_Send_Start 0020                      __end_of_Ecu_Stepper_Step 42CA  
                                      i1l1170 0106                                        i1l1251 4C5C  
                                      i1l1180 0246                                        i1l1172 0146  
                                      i1l1164 0046                                        i1l1182 0266  
                                      i1l1174 0186                                        i1l1166 0086  
                                      i1l1264 4C4A                                        i1l1176 01C6  
                                      i1l1168 00C6                                        i1l1273 4C30  
                                      i1l1185 0276                                        i1l1282 4C16  
                                      i1l1178 0206                                        i1l1291 4BFC  
                                      i1l4414 4C5A                                        i2l1151 3652  
                                      i2l1143 3602                                        i2l1153 3672  
                                      i2l1145 3612                                        i2l1155 3682  
                                      i2l1147 3622                                        i2l1149 3632  
                                      i2l1158 3692                                        i2l1541 4C62  
                                      i1l8202 4BE6                                        i1l8204 4BE8  
                                      i1l8208 4BFC                                        i1l9200 00B0  
                                      i1l9210 00F0                                        i1l9202 00BE  
                                      i1l8172 4C34                                        i1l9220 0130  
                                      i1l9212 00FE                                        i1l9204 00C0  
                                      i1l8174 4C36                                        i1l8182 4C1A  
                                      i1l9230 0170                                        i1l9222 013E  
                                      i1l9214 0100                                        i1l9206 00D4  
                                      i1l8184 4C1C                                        i1l8192 4C00  
                                      i1l9240 01B0                                        i1l9232 017E  
                                      i1l9224 0140                                        i1l9216 0114  
                                      i1l9208 00E2                                        i1l8178 4C4A  
                                      i1l8194 4C02                                        i1l9250 01F0  
                                      i1l9242 01BE                                        i1l9234 0180  
                                      i1l9226 0154                                        i1l9218 0122  
                                      i2l7100 36AE                                        i1l8188 4C30  
                                      i1l9260 0230                                        i1l9252 01FE  
                                      i1l9244 01C0                                        i1l9236 0194  
                                      i1l9228 0162                                        i1l9180 0026  
                                      i2l7110 36FE                                        i2l7102 36AE  
                                      i1l8198 4C16                                        i1l9270 0274  
                                      i1l9262 023E                                        i1l9254 0200  
                                      i1l9246 01D4                                        i1l9238 01A2  
                                      i1l9190 0070                                        i1l9182 0034  
                                      i2l7112 371C                                        i2l7120 378C  
                                      i2l7104 36C0                                        i1l9264 0240  
                                      i1l9256 0214                                        i1l9248 01E2  
                                      i1l9192 007E                                        i1l9184 0042  
                                      i2l1969 49FE                                        i2l7114 373C  
                                      i2l7106 36C4                                        i1l9266 0254  
                                      i1l9258 0222                                        i1l9194 0080  
                                      i1l9186 0054                                        i2l7060 4668  
                                      i2l7052 4630                                        i2l7116 3754  
                                      i2l7108 36DE                                        i1l9268 0262  
                                      i1l9196 0094                                        i1l9188 0062  
                                      i2l7062 466C                                        i2l7118 3774  
                                      i2l8030 49CE                                        i1l9198 00A2  
                                      i2l7072 4692                                        i2l7064 467C  
                                      i2l8032 49F2                                        i2l7090 46E6  
                                      i2l7082 46A4                                        i2l7066 467E  
                                      i2l7058 463C                                        i2l7092 46F4  
                                      i2l7084 46D0                                        i2l7076 4698  
                                      i2l7068 468C                                        i2l7500 4AF0  
                                      i2l7086 46D4                                        i2l7502 4AF4  
                                      i2l7096 46FA                                        i2l7088 46E4  
                                      i2l8160 4A9A                                        i2l7700 22C4  
                                      i2l7710 2346                                        i2l7702 22DE  
                                      i2l8158 4A88                                        i2l9150 35FE  
                                      i2l7720 2396                                        i2l7712 2352  
                                      i2l7704 22F8                                        i2l9160 3630  
                                      i2l9152 3610                                        i2l7730 23E0  
                                      i2l7722 23AA                                        i2l7714 235A  
                                      i2l7706 2312                                        i2l9170 366E  
                                      i2l9146 35E2                                        i2l7740 2448  
                                      i2l7724 23B6                                        i2l7732 2400  
                                      i2l7716 2362                                        i2l7708 2332  
                                      i2l9172 3680                                        i2l9164 3640  
                                      i2l9156 3620                                        i2l9148 35F0  
                                      i2l7750 247C                                        i2l7742 2450  
                                      i2l7734 2420                                        i2l7726 23BE  
                                      i2l7718 2376                                        i2l9166 364E  
                                      i2l7496 4ADE                                        i2l7736 2434  
                                      i2l7728 23C6                                        i2l7752 43AA  
                                      i2l9176 3690                                        i2l9168 3660  
                                      i2l7498 4ADE                                        i2l7738 2440  
                                      i2l7754 43AA                                        i2l7748 246E  
                                      i2l7692 2286                                        i2l7756 43BC  
                                      i2l7694 228E                                        i2l7758 43C0  
                                      i2l7696 22A0                                        i2l7698 22B2  
           __end_of_Robot_Steer_Right_Forward 3920                  __end_of_DHT11_Check_Response 4A5C  
                              _Movement_State 00F7                                        _SPBRGH 000FB0  
                   _MSSP_I2C_Master_Send_Stop 492C                                        _SSPADD 000FC8  
                                      _SSPBUF 000FC9                             i2_calc_parity_odd 462E  
                    calc_parity_odd@l_counter 0022                              __end_of___xxtofl 2648  
                      _W1_W3_W5_Motor_Control 00D4                      ?i2_GPIO_Pin_Toggle_Logic 0001  
                 ?_Robot_Steer_Right_Backward 0001                         __end_of_MSSP_I2C_Init 2E70  
                          ?i2_calc_parity_odd 0001                                 ??_Timer2_Init 0020  
                    i2_EUSART_Async_Read_Data 2286  __end_of_I2C_Master_Mode_Clock_Configurations 3D8A  
      ??_I2C_Master_Mode_Clock_Configurations 0024         ?_I2C_Master_Mode_Clock_Configurations 00A4  
        _I2C_Master_Mode_Clock_Configurations 3CD4                            _Robot_Move_Forward 39E0  
                 __end_of_GPIO_Pin_Read_Logic 3EEC               ??_GPIO_Pin_Direction_Initialize 0060  
               __end_of_ECU_DC_Motor_Run_Left 4B58                                     ??___fladd 014B  
                                   ??___fldiv 0072                      ?_stepper_move_one_deg_cw 0068  
                                   ??___flmul 008B                                     ??___fltol 0157  
                 __end_of_GPIO_Pin_Initialize 492C                           ??i2_calc_parity_odd 0001  
                                      clear_0 412A                                        clear_1 4136  
                                      clear_2 4142                           ?_Robot_Move_Forward 0001  
                 ?_EUSART_Async_Transmit_Data 0006                                        _timer0 00F8  
                                      isa$std 000001                __end_of_I2C_Pin_Configurations 4C5A  
              stepper_move_one_deg_cw@stepper 0068                                  __pdataCOMRAM 003A  
                                __mediumconst 0000         EUSART_Async_Transmit_Data@_eusart_obj 0006  
                                      tblptrh 000FF7                                        tblptrl 000FF6  
                                      tblptru 000FF8                                     ?_CCP_Init 0066  
                      Get_Temp_HUM@RH_Decimal 0060                   CCP_PWM_Mode_Config@_ccp_obj 0021  
                   __end_ofi2_calc_parity_odd 4696                          ??_Robot_Move_Forward 0024  
                                ___xxtofl@arg 0066                                  ___xxtofl@exp 0065  
                                ___xxtofl@val 001E                                    __accesstop 0060  
                     __end_of__initialization 4148      __end_of_Bluetooth_Send_Data_Non_Blocking 4B08  
          ??_Bluetooth_Send_Data_Non_Blocking 000F             ?_Bluetooth_Send_Data_Non_Blocking 000C  
            _Bluetooth_Send_Data_Non_Blocking 4ADE                                     ?_INT1_ISR 0001  
                            _CCP_PWM_Set_Duty 2648                                 ___rparam_used 000001  
                    __end_of_calc_parity_even 462E                                    ___fltol@f1 0153  
            ??_MSSP_I2C_Master_Write_Blocking 0023               ?_MSSP_I2C_Master_Write_Blocking 001E  
                CCP_Interrupt_Config@_ccp_obj 001E                    _I2C_Report_Write_Collision 00ED  
                           ??_calc_parity_odd 001E                                __pcstackCOMRAM 0001  
          MSSP_I2C_Master_Write_Blocking@_ack 0021                                  __pidataBANK0 4A00  
                                __pidataBANK1 4BA4                                     ?_TMR0_ISR 0001  
       MSSP_I2C_Master_Write_Blocking@i2c_obj 001E                        ?_CCP_Mode_Timer_Select 001E  
                   ?_Robot_Steer_Left_Forward 0001                           __end_of_Timer2_Init 4488  
                             ??_EUSART_Rx_ISR 0014    EUSART_Async_Read_Data_Blocking@_eusart_obj 006C  
                             ??_EUSART_Tx_ISR 0001                                 _PCA_Write_Reg 47CA  
                                _Get_Distance 30D0                     calc_parity_even@l_counter 0022  
                 __end_of_HAL_Timer0_Read_Val 3E3E                               _HAL_Timer0_Init 32E6  
                                  ??_CCP_Init 0068                                _Robot_Nav_Init 4152  
                       CCP_PWM_Set_Duty@_duty 015D               __end_ofi2_GPIO_Pin_Toggle_Logic 441A  
                                  __pbssBANK0 00D5                                    __pbssBANK1 0100  
                       _INT0_InterruptHandler 00EB                                    ??_INT1_ISR 001A  
               __end_of_application_intialize 2FA2                                  _Get_Temp_HUM 3EEC  
                    _eusart_frameerr_CallBack 00F3                                    _datarecive 0038  
                 __end_of_InterruptManagerLow 0286                          calc_parity_even@data 0020  
                                  ??_TMR0_ISR 0001                   CCP_PWM_Set_Duty@l_duty_temp 0162  
                     ?_ECU_DC_Motor_Run_Right 0022                                       _ADC_ISR 4C60  
                            _Robot_Steer_Stop 4B7E         __end_of_GPIO_Pin_Direction_Initialize 2BEE  
               _GPIO_Pin_Direction_Initialize 2AA8             Ultra_Sonic_Init@ultrasonic_object 0066  
                              ?_PCA_Write_Reg 0060                 HAL_Timer0_Read_Val@l_low_byte 0023  
                        _DHT11_Check_Response 4A30                                       _RB4_ISR 4C32  
                                     _RB5_ISR 4C18                                       _RB6_ISR 4BFE  
                      Get_Temp_HUM@T_Integral 0066                                       _RB7_ISR 4BE4  
                                   ?___xxtofl 001E                     _RB6_InterruptHandler_HIGH 00DF  
                         _Robot_Move_Backward 3AA0                   __end_of_CCP_PWM_Mode_Config 4034  
                  PCA_Write_Reg@slave_address 0062                        __end_of_Robot_Nav_Init 41DE  
                             _DHT11_Read_Data 4034            __end_of_MSSP_I2C_Master_Send_Start 499C  
                  _MSSP_I2C_Master_Send_Start 4964                            i2_calc_parity_even 4696  
              EUSART_Async_Transmit_Data@data 0008                   ??_Robot_Steer_Right_Forward 0024  
                              _tris_registers 00B0                      __end_of_Ultra_Sonic_Init 48E2  
                               ??_DHT11_Start 001E                             ??_send_trig_pulse 0024  
                    _RB6_InterruptHandler_LOW 00DD                           ?i2_calc_parity_even 0001  
                                     _i2c_obj 00C6                      _stepper_move_one_deg_ccw 4764  
                                     __Hparam 0000                                _Servo_SetAngle 34E2  
                        ?_Robot_Move_Backward 0001                    _eusart_overrunerr_CallBack 00F5  
                                 _Timer2_Init 441A                                       __Lparam 0000  
                __end_of_CCP_Interrupt_Config 4C60               stepper_move_one_deg_ccw@stepper 0068  
              __end_of_ECU_DC_Motor_Run_Right 4B30                                       ___fladd 1048  
                                     ___fldiv 19D2                     stepper_move_one_deg_ccw@i 006A  
                                     ___flmul 15A6               CCP_Compare_Mode_Config@_ccp_obj 0021  
                                     ___fltol 31DE                                  __psmallconst 1000  
                _Timer1_PreLoaded_Value_Store 0025                                       __pcinit 40C4  
                                     __ramtop 1000                         ?_DHT11_Check_Response 0001  
                                     __ptext0 1D6E                                       __ptext1 46FE  
                                     __ptext2 4764                                       __ptext3 425A  
                                     __ptext4 2E70                                       __ptext5 488C  
                                     __ptext6 32E6                                       __ptext7 4152  
                                     __ptext8 3792                                       __ptext9 2D32  
                                   _T0CONbits 000FD5                          ??i2_calc_parity_even 0001  
                     __end_of_HAL_Timer0_Init 33E8                                     _T1CONbits 000FCD  
                                     _counter 002C                                     _T2CONbits 000FCA  
                   ECU_DC_Motor_Init@dc_motor 0066                                    ??___xxtofl 0060  
                                   _T3CONbits 000FB1                                       _gpstemp 0039  
                     _CCP_Compare_Mode_Config 27D0                               ?_Robot_Nav_Init 0001  
                    ?_CCP_Capture_Mode_Config 0021              MSSP_I2C_Master_Send_Stop@i2c_obj 001E  
                  ??i2_EUSART_Async_Read_Data 000A                                __pintcode_body 35CA  
                        end_of_initialization 4148                             ?_Ecu_Stepper_Init 0066  
                    GPIO_Pin_Read_Logic@logic 0020                              _ServoDriver_Init 3792  
                           ?_Ecu_Stepper_Step 0022                      PCA_Write_Reg@reg_address 0063  
              calc_parity_even@number_of_ones 0021              i2calc_parity_even@number_of_ones 0004  
                                     int_func 35CA                            ??_Ecu_Stepper_Init 0025  
                      __end_of_Servo_SetAngle 35CA                            ??_Ecu_Stepper_Step 0066  
                          Timer2_Init@_timer2 001E                         i2calc_parity_odd@data 0003  
                i2EUSART_Async_Read_Data@data 0008                         ??_Robot_Move_Backward 0024  
                    CCP_PWM_Set_Duty@_ccp_obj 015B                                     _RCSTAbits 000FAB  
                         __end_of_DHT11_Start 4BE4                                       postdec1 000FE5  
                                     postdec2 000FDD                                       postinc0 000FEE  
                                     postinc2 000FDE                               ??_PCA_Write_Reg 0023  
                   _Robot_Steer_Right_Forward 3860                             __end_of_usart_isr 4A00  
                       _INT1_InterruptHandler 0027                                     _PORTBbits 000F81  
                       _GPIO_Pin_Toggle_Logic 433A                                     _PORTDbits 000F83  
                    __end_of_CCP_PWM_Set_Duty 27D0                       __end_of_DHT11_Read_Data 40C4  
                                 ___fladd@grs 0152                ?_GPIO_Pin_Direction_Initialize 001E  
                               ___xxtofl@sign 0064                         Servo_SetAngle@i2c_obj 015B  
                                   _TRISBbits 000F93                                     _TRISCbits 000F94  
                                   _TRISDbits 000F95                         RB4_ISR@Handler_Select 001A  
                       RB7_ISR@Handler_Select 001A                                   ___fldiv@grs 007D  
                                 ___fldiv@rem 0076                       Get_Temp_HUM@RH_Integral 0062  
                     Ecu_Stepper_Init@stepper 0066           EUSART_Async_Read_Data_Blocking@data 006E  
                             _calc_parity_odd 455E                                   ___flmul@grs 0091  
                           PCA_Write_Reg@data 0064                          Get_Distance@distance 0087  
            __end_of_Robot_Steer_Left_Forward 39E0                                   _CCP1CONbits 000FBD  
                            CCP_Init@_ccp_obj 0066                               ?_Servo_SetAngle 015B  
                                 _CCP2CONbits 000FBA                                     _TXSTAbits 000FAC  
                  ?_Robot_Steer_Left_Backward 0001                             ?_calc_parity_even 0001  
                     ??_CCP_Mode_Timer_Select 0020                                    _ultrasonic 00D1  
                  CCP_Capture_Mode_Config@ret 0060                                 _CCP_PWM_Start 4830  
                  EUSART_Async_Read_Data@data 0062                            ??_calc_parity_even 001E  
                                   _T_Decimal 0035                    CCP_Compare_Mode_Config@ret 0060  
               convert_uint16_to_string@F3421 0109                         _ECU_DC_Motor_Run_Left 4B30  
                      ??_DHT11_Check_Response 001E                                   _BAUDCONbits 000FB8  
                               __pidataCOMRAM 4C4C              send_trig_pulse@ultrasonic_object 0022  
                   ??_CCP_Compare_Mode_Config 0023                              ?_HAL_Timer0_Init 0023  
             __end_of_CCP_Capture_Mode_Config 2D32                           start_initialization 40C4  
         i2EUSART_Async_Read_Data@_eusart_obj 0006             EUSART_Async_Read_Data@_eusart_obj 0060  
             GPIO_Pin_Write_Logic@_pin_config 001E                          _CCP_Interrupt_Config 4C5E  
                    ??_EUSART_Async_Read_Data 0023                          Get_Temp_HUM@Checksum 0068  
                    __end_of_Robot_Steer_Stop 4BA4                                   _DHT11_Start 4BC6  
           __end_of_Robot_Steer_Left_Backward 3CD4                                ?_CCP_PWM_Start 001E  
              GPIO_Pin_Initialize@_pin_config 0022                                   __pdataBANK0 00A6  
                                 __pdataBANK1 0129                                      ?_ADC_ISR 0001  
                      ?_GPIO_Pin_Toggle_Logic 001E                         __end_of_EUSART_Rx_ISR 4AB4  
                                   ___fladd@a 00A0                                     ___fladd@b 009C  
                            ?_DHT11_Read_Data 001E                         __end_of_EUSART_Tx_ISR 4C66  
                        MSSP_I2C_Init@i2c_obj 015B                                     ___fldiv@a 006E  
                                   ___fldiv@b 006A                                      ?_RB4_ISR 0001  
                                    ?_RB5_ISR 0001                                      ?_RB6_ISR 0001  
                                    ?_RB7_ISR 0001                                     ___flmul@a 0087  
                                   ___flmul@b 0083                                   __pbssCOMRAM 0025  
                     __end_of_calc_parity_odd 45C6                               _send_trig_pulse 4A5C  
                         Servo_SetAngle@angle 0160                                 __pcstackBANK0 0060  
                               __pcstackBANK1 014B                 i2_EUSART_Async_Read_Data$2031 000C  
               i2_EUSART_Async_Read_Data$2032 000E                 i2_EUSART_Async_Read_Data$2033 0010  
                       ?_CCP_Interrupt_Config 001E                    ??_stepper_move_one_deg_ccw 0024  
                 ?_MSSP_I2C_Master_Send_Start 001E                              DHT11_Read_Data@i 0021  
                               ??_GPS_Service 0070                         _INT2_InterruptHandler 00E9  
                           ?_Ultra_Sonic_Init 0066                           calc_parity_odd@data 0020  
              HAL_Timer0_Read_Val@l_high_byte 0022                            ??_Ultra_Sonic_Init 0025  
                __end_of_InterruptManagerHigh 36AE                                  ?_Timer2_Init 001E  
                               _MSSP_I2C_Init 2D32                         _application_intialize 2E70  
                    _Robot_Steer_Left_Forward 3920                                     __pintcode 0008  
                    ??_I2C_Pin_Configurations 001E                        ?_ECU_DC_Motor_Run_Left 0022  
                __end_of_GPIO_Pin_Write_Logic 30D0                                      ?___fladd 009C  
                                    ?___fldiv 006A                                     __uart_obj 0133  
                                    ?___flmul 0083               GPIO_Pin_Write_Logic@ERRORSTATUS 0021  
                                    ?___fltol 0153                  __end_of_HAL_Timer0_Write_Val 4ADE  
                     i2_GPIO_Pin_Toggle_Logic 43AA                      __end_of_ServoDriver_Init 3860  
                                 __pintcodelo 0018                 HAL_Timer0_Write_Val@ret_value 0022  
                            ??_Robot_Nav_Init 0025                                   __smallconst 1000  
                   _RB4_InterruptHandler_HIGH 00E7                             Get_Distance@logic 008B  
                                    _CCP1_Obj 00BA                                      _CCP2_Obj 013F  
                     _stepper_move_one_deg_cw 46FE                       ServoDriver_Init@i2c_obj 015D  
                   _RB7_InterruptHandler_HIGH 00DB                 CCP_Mode_Timer_Select@_ccp_obj 001E  
                                    _CCP_Init 33E8           i2EUSART_Async_Read_Data@l_temp_data 0012  
           EUSART_Async_Read_Data@l_temp_data 006A                GPIO_Pin_Initialize@ERRORSTATUS 0024  
 __end_of_I2C_Slave_Mode_Clock_Configurations 49CE         ??_I2C_Slave_Mode_Clock_Configurations 0020  
        ?_I2C_Slave_Mode_Clock_Configurations 001E           _I2C_Slave_Mode_Clock_Configurations 499C  
              convert_float32_to_string@F3432 0100                      _RB5_InterruptHandler_LOW 00E1  
                                    _INT1_ISR 4C5A                                      _LATDbits 000F8C  
            HAL_Timer0_Write_Val@_tmr0_config 001E                               ??_CCP_PWM_Start 0020  
                                    _IPR1bits 000F9F                                      _PIE1bits 000F9D  
                                    _PIE2bits 000FA0                                ?_MSSP_I2C_Init 015B  
                ??_Robot_Steer_Right_Backward 0024                           __end_of_GPS_Service 2AA8  
                                    i1u810_20 4C46                                      i1u810_21 4C42  
                                    i1u811_20 4C2C                                      i1u811_21 4C28  
                                    i1u812_20 4C12                                      i1u812_21 4C0E  
                                    i1u813_20 4BF8                                      i1u813_21 4BF4  
                                    i1u920_20 0062                                      i1u920_21 005E  
                                    i1u921_20 0070                                      i1u921_21 006C  
                                    _PIR1bits 000F9E                                      i1u930_20 00FE  
                                    i1u922_20 007E                                      i1u930_21 00FA  
                                    i1u922_21 007A                                      i1u931_20 0114  
                                    i1u923_20 0094                                      i1u931_21 0110  
                                    i1u923_21 0090                                      _PIR2bits 000FA1  
                                    i1u940_20 01A2                                      i1u932_20 0122  
                                    i1u924_20 00A2                                      i1u940_21 019E  
                                    i1u932_21 011E                                      i1u924_21 009E  
                                    i1u941_20 01B0                                      i1u933_20 0130  
                                    i1u925_20 00B0                                      i1u917_20 0034  
                                    i1u941_21 01AC                                      i1u933_21 012C  
                                    i1u925_21 00AC                                      i1u917_21 0030  
                                    i1u950_20 023E                                      i1u942_20 01BE  
                                    i1u934_20 013E                                      i1u926_20 00BE  
                                    i1u918_20 0042                                      i1u950_21 023A  
                                    i1u942_21 01BA                                      i1u934_21 013A  
                                    i1u926_21 00BA                                      i1u918_21 003E  
                                    i2u702_40 4AF0                                      i2u702_41 4AEC  
                                    i1u951_20 0254                                      i1u943_20 01D4  
                                    i1u935_20 0154                                      i1u927_20 00D4  
                                    i1u919_20 0054                                      i1u951_21 0250  
                                    i1u943_21 01D0                                      i1u935_21 0150  
                                    i1u927_21 00D0                                      i1u919_21 0050  
                                    i1u952_20 0262                                      i1u944_20 01E2  
                                    i1u936_20 0162                                      i1u928_20 00E2  
                                    i1u952_21 025E                                      i1u944_21 01DE  
                                    i1u936_21 015E                                      i1u928_21 00DE  
                                    i2u640_44 464E                                      i1u953_20 0274  
                                    i1u945_20 01F0                                      i1u937_20 0170  
                                    i1u929_20 00F0                                      i2u640_45 464A  
                                    i1u953_21 0270                                      i1u945_21 01EC  
                                    i1u937_21 016C                                      i1u929_21 00EC  
                                    i2u641_40 4668                                      i2u641_41 4664  
                                    i1u946_20 01FE                                      i1u938_20 017E  
                                    i1u946_21 01FA                                      i1u938_21 017A  
                                    i2u642_40 467C                                      i2u650_40 36FE  
                                    i2u642_41 4678                                      i2u650_41 36FA  
                                    i1u947_20 0214                                      i1u939_20 0194  
                                    i1u947_21 0210                                      i1u939_21 0190  
                                    i2u643_40 468C                                      i2u643_41 4688  
                                    i1u948_20 0222                                      i2u651_45 3716  
                                    i1u948_21 021E                                      i2u651_47 3718  
                                    i2u652_40 373C                                      i2u740_40 22A0  
                                    i2u652_41 3738                                      i2u740_41 229C  
                                    i2u644_44 46B6                                      i1u949_20 0230  
                                    i2u644_45 46B2                                      i1u949_21 022C  
                                    i2u645_40 46D0                                      i2u741_40 22B2  
                                    i2u645_41 46CC                                      i2u741_41 22AE  
                                    i2u653_45 374E                                      i2u653_47 3750  
                                    i2u646_40 46E4                                      i2u654_40 3774  
                                    i2u750_40 2420                                      i2u742_40 22C4  
                                    i2u806_40 4A9A                                      i2u910_40 3630  
                                    i2u646_41 46E0                                      i2u654_41 3770  
                                    i2u750_41 241C                                      i2u742_41 22C0  
                                    i2u806_41 4A96                                      i2u910_41 362C  
                                    i2u647_40 46F4                                      i2u751_40 2434  
                                    i2u743_40 22DE                                      i2u911_40 3640  
                                    i2u647_41 46F0                                      i2u751_41 2430  
                                    i2u743_41 22DA                                      i2u911_41 363C  
                                    i2u655_45 3786                                      i2u655_47 3788  
                                    i2u648_40 36C0                                      i2u752_40 246A  
                                    i2u744_40 2312                                      i2u807_48 4AA0  
                                    i2u912_40 364E                                      i2u648_41 36BC  
                                    i2u752_41 2466                                      i2u744_41 230E  
                                    i2u807_49 4AB2                                      i2u912_41 364A  
                                    i2u649_40 36DE                                      i2u753_40 247C  
                                    i2u745_40 2332                                      i2u913_40 3660  
                                    i2u649_41 36DA                                      i2u753_41 2478  
                                    i2u745_41 232E                                      i2u913_41 365C  
                                    i2u754_40 248A                                      i2u746_40 2346  
                                    i2u914_40 366E                                      i2u906_40 35F0  
                                    i2u754_41 2486                                      i2u746_41 2342  
                                    i2u914_41 366A                                      i2u906_41 35EC  
                                    i2u747_40 2396                                      i2u755_40 43BC  
                                    i2u915_40 3680                                      i2u907_40 35FE  
                                    i2u747_41 2392                                      i2u755_41 43B8  
                                    i2u915_41 367C                                      i2u907_41 35FA  
                                    i2u748_40 23AA                                      i2u916_40 3690  
                                    i2u908_40 3610                                      i2u748_41 23A6  
                                    i2u916_41 368C                                      i2u908_41 360C  
                                    i2u756_44 43DC                                      i2u756_45 43D8  
                                    i2u749_40 23E0                                      i2u909_40 3620  
                                    i2u749_41 23DC                                      i2u909_41 361C  
                                   _servo1Pos 0031                                     _servo2Pos 0030  
                                   _servo3Pos 002F                                      _RCONbits 000FD0  
                                   _servo4Pos 002E                                      _TMR0_ISR 4C62  
                                    _TEST_PIN 0041                       __end_of_send_trig_pulse 4A88  
                _Timer2_PreLoaded_Value_Store 0032                   _I2C_Report_Receive_Overflow 00EF  
                ??_EUSART_Async_Transmit_Data 000A                                    _ADCON0bits 000FC2  
                                  _ADCON1bits 000FC1                                    _ADCON2bits 000FC0  
                           ?_CCP_PWM_Set_Duty 015B                              PCA_Write_Reg@ack 0023  
                                    _Checksum 0033                                     _usart_isr 49CE  
                            ?_calc_parity_odd 0001                            ??_CCP_PWM_Set_Duty 00A4  
                      ??_CCP_Interrupt_Config 0020                   i2calc_parity_even@l_counter 0005  
                   HAL_Timer0_Read_Val@result 0020                              ??_Servo_SetAngle 0024  
                                 _INTCON2bits 000FF1                                   _INTCON3bits 000FF0  
                                   copy_data0 40D8                                     copy_data1 40F8  
                                   copy_data2 4118                   __end_of_Robot_Move_Backward 3B60  
                 _EUSART_Async_Read_Data$2031 0064                   _EUSART_Async_Read_Data$2032 0066  
                 _EUSART_Async_Read_Data$2033 0068                           _GPIO_Pin_Read_Logic 3E3E  
             HAL_Timer0_Read_Val@_tmr0_config 001E                        ?_application_intialize 0001  
                 ??_Robot_Steer_Left_Backward 0024                           _GPIO_Pin_Initialize 48E2  
                                    __Hrparam 0000                                      __Lrparam 0000  
                   ??i2_GPIO_Pin_Toggle_Logic 0003                 __end_of_CCP_Mode_Timer_Select 433A  
                   ?i2_EUSART_Async_Read_Data 0006                        _EUSART_Async_Read_Data 2076  
                   GPIO_Pin_Write_Logic@logic 0020                         __end_of_PCA_Write_Reg 4830  
                        ?_GPIO_Pin_Read_Logic 001E                     ??_stepper_move_one_deg_cw 0024  
                               _preloaded_val 00D7                    ?_MSSP_I2C_Master_Send_Stop 001E  
           MSSP_I2C_Master_Send_Start@i2c_obj 001E                          ?_GPIO_Pin_Initialize 0022  
                                    ___xxtofl 2490                                    ?_usart_isr 0001  
                                    _datasend 003A              __end_of_stepper_move_one_deg_ccw 47CA  
                               ?_Get_Distance 0083                         RB6_ISR@Handler_Select 001A  
                        _InterruptManagerHigh 0008                                      __ptext10 499C  
                                    __ptext11 4C54                                      __ptext20 2BEE  
                                    __ptext12 3CD4                                      __ptext21 42CA  
                                    __ptext13 4B58                                      __ptext30 4B08  
                                    __ptext22 41DE                                      __ptext14 4830  
                                    __ptext31 3AA0                                      __ptext23 48E2  
                                    __ptext15 33E8                                      __ptext40 31DE  
                                    __ptext32 34E2                                      __ptext24 2AA8  
                                    __ptext16 3F92                                      __ptext41 15A6  
                                    __ptext33 1048                                      __ptext25 3860  
                                    __ptext17 441A                                      __ptext50 19D2  
                                    __ptext42 4B30                                      __ptext34 47CA  
                                    __ptext26 3B60                                      __ptext18 4C5E  
                                    __ptext51 4AB4                                      __ptext43 3EEC  
                                    __ptext35 44F6                                      __ptext27 3920  
                                    __ptext19 27D0                                      __ptext60 433A  
                                    __ptext52 3D8A                                      __ptext44 4BC6  
                                    __ptext36 492C                                      __ptext28 3C1A  
                                    __ptext53 3E3E                                      __ptext45 4034  
                                    __ptext37 4964                                      __ptext29 39E0  
                                    __ptext70 4C64                                      __ptext62 4BE4  
                                    __ptext54 293C                                      __ptext46 4A30  
                                    __ptext38 4B7E                                      __ptext71 4A88  
                                    __ptext63 4BFE                                      __ptext55 2FA2  
                                    __ptext47 30D0                                      __ptext39 2648  
                                    __ptext72 49CE                                      __ptext64 4C18  
                                    __ptext56 4488                                      __ptext48 4A5C  
                                    __ptext73 43AA                                      __ptext65 4C32  
                                    __ptext57 2076                                      __ptext49 2490  
                                    __ptext74 2286                                      __ptext66 4C5A  
                                    __ptext58 455E                                      __ptext75 4ADE  
                                    __ptext67 4C60                                      __ptext59 45C6  
                                    __ptext76 36AE                                      __ptext77 462E  
                                    __ptext69 4C62                                      __ptext78 4696  
                                    __ptext79 0000     Bluetooth_Send_Data_Non_Blocking@_uart_obj 000C  
  I2C_Slave_Mode_Clock_Configurations@i2c_obj 001E   I2C_Master_Mode_Clock_Configurations@i2c_obj 00A4  
                    _Timer1_Interrupt_Handler 00D5                                      _distance 00FC  
                        _GPIO_Pin_Write_Logic 2FA2                             _ECU_DC_Motor_Init 4B58  
                        _HAL_Timer0_Write_Val 4AB4                                   _GPS_Service 293C  
              Servo_SetAngle@servo_driver_obj 015D                                      _latitude 011C  
                           ?_Robot_Steer_Stop 0001                            ?_ECU_DC_Motor_Init 0066  
                             ??_MSSP_I2C_Init 0025                                  ?_DHT11_Start 0001  
                    ??_ECU_DC_Motor_Run_Right 0024                                 ?_Get_Temp_HUM 0060  
                          ??_Robot_Steer_Stop 0024                                      _longtude 010F  
                                    _selector 0040       __end_of_EUSART_Async_Read_Data_Blocking 44F6  
           ??_EUSART_Async_Read_Data_Blocking 0025              ?_EUSART_Async_Read_Data_Blocking 006C  
             _EUSART_Async_Read_Data_Blocking 4488                           ??_ECU_DC_Motor_Init 0025  
                     ??_GPIO_Pin_Toggle_Logic 0020                                      isa$xinst 000000  
                                    int$flags 0042                         ??_GPIO_Pin_Read_Logic 0060  
                            ?_send_trig_pulse 0022                         ??_GPIO_Pin_Initialize 0024  
                         _HAL_Timer0_Read_Val 3D8A                     _Robot_Steer_Left_Backward 3C1A  
           __end_of_MSSP_I2C_Master_Send_Stop 4964                                    _INTCONbits 000FF2  
               calc_parity_odd@number_of_ones 0021               i2calc_parity_odd@number_of_ones 0004  
                     Ecu_Stepper_Step@stepper 0022                                ??_Get_Distance 0024  
                       ?_InterruptManagerHigh 0001                     __end_of_ECU_DC_Motor_Init 4B7E  
                      _I2C_Pin_Configurations 4C54                    __end_of_Robot_Move_Forward 3AA0  
               ECU_DC_Motor_Run_Left@dc_motor 0022                         ?_GPIO_Pin_Write_Logic 001E  
                    stepper_move_one_deg_cw@i 006A                         ?_HAL_Timer0_Write_Val 001E  
                                    intlevel1 0000                                      intlevel2 0000  
                  ??_Robot_Steer_Left_Forward 0024               __end_of_stepper_move_one_deg_cw 4764  
                         _InterruptManagerLow 0018                                ??_Get_Temp_HUM 0022  
                  i2calc_parity_odd@l_counter 0005                          ?_HAL_Timer0_Read_Val 001E  
          __end_of_Robot_Steer_Right_Backward 3C1A                    _Robot_Steer_Right_Backward 3B60  
    GPIO_Pin_Direction_Initialize@_pin_config 001E                                    _RCSTA1bits 000FAB  
                     ??_ECU_DC_Motor_Run_Left 0024                       _CCP_Capture_Mode_Config 2BEE  
                      i2calc_parity_even@data 0003                      ?_CCP_Compare_Mode_Config 0021  
                            _Ecu_Stepper_Init 41DE                              _Ecu_Stepper_Step 425A  
          __end_of_EUSART_Async_Transmit_Data 3792                    _EUSART_Async_Transmit_Data 36AE  
                  Servo_SetAngle@angle_in_reg 0161                          ?_InterruptManagerLow 0001  
                           ?_ServoDriver_Init 015D                           _CCP_PWM_Mode_Config 3F92  
                          ??_ServoDriver_Init 0025                                _port_registers 0129  
                      _W2_W4_W6_Motor_Control 00D3                                   ??_usart_isr 0014  
      __end_of_MSSP_I2C_Master_Write_Blocking 455E                _MSSP_I2C_Master_Write_Blocking 44F6  
                                 _SSPCON1bits 000FC6                                   _SSPCON2bits 000FC5  
                                  _WDTCONbits 000FD1                                 ___fladd@signs 014F  
               Get_Distance@ultrasonic_object 0083                          ?_CCP_PWM_Mode_Config 0021  
                                ___fladd@aexp 0150                                  ___fladd@bexp 0151  
                       ??_HAL_Timer0_Read_Val 0060                                    _RH_Decimal 0037  
