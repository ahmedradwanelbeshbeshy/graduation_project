

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Mar 05 20:40:58 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4620 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  00191A                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _lat_registers
    87  00191A  89                 	db	137
    88  00191B  0F                 	db	15
    89  00191C  8A                 	db	138
    90  00191D  0F                 	db	15
    91  00191E  8B                 	db	139
    92  00191F  0F                 	db	15
    93  001920  8C                 	db	140
    94  001921  0F                 	db	15
    95  001922  8D                 	db	141
    96  001923  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99  001924  92                 	db	146
   100  001925  0F                 	db	15
   101  001926  93                 	db	147
   102  001927  0F                 	db	15
   103  001928  94                 	db	148
   104  001929  0F                 	db	15
   105  00192A  95                 	db	149
   106  00192B  0F                 	db	15
   107  00192C  96                 	db	150
   108  00192D  0F                 	db	15
   109                           
   110                           ;initializer for _ultrasonic
   111  00192E  09                 	db	9
   112  00192F  48                 	db	72
   113                           
   114                           ;initializer for _flags
   115  001930  0F                 	db	15
   116                           
   117                           ;initializer for _lcd1
   118  001931  18                 	db	24
   119  001932  19                 	db	25
   120  001933  1A                 	db	26
   121  001934  1B                 	db	27
   122  001935  1C                 	db	28
   123  001936  1D                 	db	29
   124                           
   125                           ;initializer for _W2_W4_W6_Motor_Control
   126  001937  1A                 	db	26
   127  001938  1B                 	db	27
   128                           
   129                           ;initializer for _W1_W3_W5_Motor_Control
   130  001939  18                 	db	24
   131  00193A  19                 	db	25
   132                           
   133                           ;initializer for _pinc0
   134  00193B  90                 	db	144
   135                           
   136                           	psect	idataBANK0
   137  00193C                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _port_registers
   141  00193C  80                 	db	128
   142  00193D  0F                 	db	15
   143  00193E  81                 	db	129
   144  00193F  0F                 	db	15
   145  001940  82                 	db	130
   146  001941  0F                 	db	15
   147  001942  83                 	db	131
   148  001943  0F                 	db	15
   149  001944  84                 	db	132
   150  001945  0F                 	db	15
   151                           
   152                           ;initializer for _CCP2_Obj
   153  001946  01                 	db	1
   154  001947  02                 	db	2
   155  001948  00                 	db	0
   156  001949  11                 	db	17
   157  00194A  00                 	db	0
   158  00194B  01F4               	dw	500
   159  00194D  0000               	dw	0
   160  00194F  F9                 	db	249
   161  001950  00                 	db	0
   162  001951  0F                 	db	15
   163                           
   164                           ;initializer for _CCP1_Obj
   165  001952  00                 	db	0
   166  001953  02                 	db	2
   167  001954  00                 	db	0
   168  001955  12                 	db	18
   169  001956  00                 	db	0
   170  001957  01F4               	dw	500
   171  001959  0000               	dw	0
   172  00195B  F9                 	db	249
   173  00195C  00                 	db	0
   174  00195D  0F                 	db	15
   175  0000                     _PORTDbits	set	3971
   176  0000                     _LATDbits	set	3980
   177  0000                     _TRISDbits	set	3989
   178  0000                     _WDTCONbits	set	4049
   179  0000                     _TMR0H	set	4055
   180  0000                     _TMR0L	set	4054
   181  0000                     _T0CONbits	set	4053
   182  0000                     _INTCON2bits	set	4081
   183  0000                     _TRISBbits	set	3987
   184  0000                     _PORTBbits	set	3969
   185  0000                     _INTCON3bits	set	4080
   186  0000                     _IPR2bits	set	4002
   187  0000                     _PIR2bits	set	4001
   188  0000                     _SSPBUF	set	4041
   189  0000                     _PIE2bits	set	4000
   190  0000                     _SSPSTATbits	set	4039
   191  0000                     _SSPADD	set	4040
   192  0000                     _SSPCON2bits	set	4037
   193  0000                     _SSPCON1bits	set	4038
   194  0000                     _SPBRGH	set	4016
   195  0000                     _SPBRG	set	4015
   196  0000                     _BAUDCONbits	set	4024
   197  0000                     _INTCONbits	set	4082
   198  0000                     _IPR1bits	set	3999
   199  0000                     _RCONbits	set	4048
   200  0000                     _RCSTA1bits	set	4011
   201  0000                     _RCREG	set	4014
   202  0000                     _PIR1bits	set	3998
   203  0000                     _TXREG	set	4013
   204  0000                     _TXSTAbits	set	4012
   205  0000                     _PIE1bits	set	3997
   206  0000                     _TRISCbits	set	3988
   207  0000                     _TXSTA1bits	set	4012
   208  0000                     _RCSTAbits	set	4011
   209  0000                     _T3CONbits	set	4017
   210  0000                     _CCPR2L	set	4027
   211  0000                     _CCPR1L	set	4030
   212  0000                     _PR2	set	4043
   213  0000                     _CCP2CONbits	set	4026
   214  0000                     _CCP1CONbits	set	4029
   215  0000                     _ADCON1bits	set	4033
   216  0000                     _ADRESL	set	4035
   217  0000                     _ADRESH	set	4036
   218  0000                     _ADCON2bits	set	4032
   219  0000                     _ADCON0bits	set	4034
   220  0000                     _PORTE	set	3972
   221  0000                     _PORTD	set	3971
   222  0000                     _PORTC	set	3970
   223  0000                     _PORTB	set	3969
   224  0000                     _PORTA	set	3968
   225  0000                     _LATE	set	3981
   226  0000                     _LATD	set	3980
   227  0000                     _LATC	set	3979
   228  0000                     _LATB	set	3978
   229  0000                     _LATA	set	3977
   230  0000                     _TRISD	set	3989
   231  0000                     _TRISC	set	3988
   232  0000                     _TRISB	set	3987
   233  0000                     _TRISE	set	3990
   234  0000                     _TRISA	set	3986
   235  0000                     _RX9D	set	32088
   236                           
   237                           	psect	smallconst
   238  001000                     __psmallconst:
   239                           	callstack 0
   240  001000  00                 	db	0
   241  001001  41                 	db	65	;'A'
   242  001002  54                 	db	84	;'T'
   243  001003  2B                 	db	43
   244  001004  55                 	db	85	;'U'
   245  001005  41                 	db	65	;'A'
   246  001006  52                 	db	82	;'R'
   247  001007  54                 	db	84	;'T'
   248  001008  3A                 	db	58	;':'
   249  001009  39                 	db	57	;'9'
   250  00100A  36                 	db	54	;'6'
   251  00100B  30                 	db	48	;'0'
   252  00100C  30                 	db	48	;'0'
   253  00100D  2C                 	db	44
   254  00100E  30                 	db	48	;'0'
   255  00100F  2C                 	db	44
   256  001010  30                 	db	48	;'0'
   257  001011  0D                 	db	13
   258  001012  0A                 	db	10
   259  001013  00                 	db	0
   260  001014  41                 	db	65	;'A'
   261  001015  54                 	db	84	;'T'
   262  001016  2B                 	db	43
   263  001017  52                 	db	82	;'R'
   264  001018  4E                 	db	78	;'N'
   265  001019  41                 	db	65	;'A'
   266  00101A  4D                 	db	77	;'M'
   267  00101B  45                 	db	69	;'E'
   268  00101C  3A                 	db	58	;':'
   269  00101D  52                 	db	82	;'R'
   270  00101E  6F                 	db	111	;'o'
   271  00101F  62                 	db	98	;'b'
   272  001020  6F                 	db	111	;'o'
   273  001021  74                 	db	116	;'t'
   274  001022  0D                 	db	13
   275  001023  0A                 	db	10
   276  001024  00                 	db	0
   277  001025                     STR_11:
   278  001025  20                 	db	32
   279  001026  20                 	db	32
   280  001027  20                 	db	32
   281  001028  20                 	db	32
   282  001029  20                 	db	32
   283  00102A  20                 	db	32
   284  00102B  20                 	db	32
   285  00102C  20                 	db	32
   286  00102D  20                 	db	32
   287  00102E  20                 	db	32
   288  00102F  20                 	db	32
   289  001030  20                 	db	32
   290  001031  20                 	db	32
   291  001032  20                 	db	32
   292  001033  00                 	db	0
   293  001034  41                 	db	65	;'A'
   294  001035  54                 	db	84	;'T'
   295  001036  2B                 	db	43
   296  001037  50                 	db	80	;'P'
   297  001038  53                 	db	83	;'S'
   298  001039  57                 	db	87	;'W'
   299  00103A  44                 	db	68	;'D'
   300  00103B  3A                 	db	58	;':'
   301  00103C  31                 	db	49	;'1'
   302  00103D  32                 	db	50	;'2'
   303  00103E  33                 	db	51	;'3'
   304  00103F  34                 	db	52	;'4'
   305  001040  0D                 	db	13
   306  001041  0A                 	db	10
   307  001042  00                 	db	0
   308  001043  41                 	db	65	;'A'
   309  001044  54                 	db	84	;'T'
   310  001045  2B                 	db	43
   311  001046  52                 	db	82	;'R'
   312  001047  4F                 	db	79	;'O'
   313  001048  4C                 	db	76	;'L'
   314  001049  45                 	db	69	;'E'
   315  00104A  3A                 	db	58	;':'
   316  00104B  30                 	db	48	;'0'
   317  00104C  0D                 	db	13
   318  00104D  0A                 	db	10
   319  00104E  00                 	db	0
   320  00104F                     STR_13:
   321  00104F  2D                 	db	45
   322  001050  3E                 	db	62	;'>'
   323  001051  20                 	db	32
   324  001052  00                 	db	0
   325  001053                     STR_9:
   326  001053  25                 	db	37
   327  001054  66                 	db	102	;'f'
   328  001055  00                 	db	0
   329  001056                     STR_5:
   330  001056  25                 	db	37
   331  001057  69                 	db	105	;'i'
   332  001058  00                 	db	0
   333  001059  00                 	db	0	; dummy byte at the end
   334  0000                     
   335                           ; #config settings
   336                           
   337                           	psect	cinit
   338  0017C4                     __pcinit:
   339                           	callstack 0
   340  0017C4                     start_initialization:
   341                           	callstack 0
   342  0017C4                     __initialization:
   343                           	callstack 0
   344                           
   345                           ; Initialize objects allocated to BANK0 (34 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347  0017C4  0E3C               	movlw	low __pidataBANK0
   348  0017C6  6EF6               	movwf	tblptrl,c
   349  0017C8  0E19               	movlw	high __pidataBANK0
   350  0017CA  6EF7               	movwf	tblptrh,c
   351  0017CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352  0017CE  6EF8               	movwf	tblptru,c
   353  0017D0  EE00  F080         	lfsr	0,__pdataBANK0
   354  0017D4  EE10 F022          	lfsr	1,34
   355  0017D8                     copy_data0:
   356  0017D8  0009               	tblrd		*+
   357  0017DA  CFF5 FFEE          	movff	tablat,postinc0
   358  0017DE  50E5               	movf	postdec1,w,c
   359  0017E0  50E1               	movf	fsr1l,w,c
   360  0017E2  E1FA               	bnz	copy_data0
   361                           
   362                           ; Initialize objects allocated to COMRAM (34 bytes)
   363                           ; load TBLPTR registers with __pidataCOMRAM
   364  0017E4  0E1A               	movlw	low __pidataCOMRAM
   365  0017E6  6EF6               	movwf	tblptrl,c
   366  0017E8  0E19               	movlw	high __pidataCOMRAM
   367  0017EA  6EF7               	movwf	tblptrh,c
   368  0017EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   369  0017EE  6EF8               	movwf	tblptru,c
   370  0017F0  EE00  F057         	lfsr	0,__pdataCOMRAM
   371  0017F4  EE10 F022          	lfsr	1,34
   372  0017F8                     copy_data1:
   373  0017F8  0009               	tblrd		*+
   374  0017FA  CFF5 FFEE          	movff	tablat,postinc0
   375  0017FE  50E5               	movf	postdec1,w,c
   376  001800  50E1               	movf	fsr1l,w,c
   377  001802  E1FA               	bnz	copy_data1
   378                           
   379                           ; Clear objects allocated to BANK0 (19 bytes)
   380  001804  EE00  F0A2         	lfsr	0,__pbssBANK0
   381  001808  0E13               	movlw	19
   382  00180A                     clear_0:
   383  00180A  6AEE               	clrf	postinc0,c
   384  00180C  06E8               	decf	wreg,f,c
   385  00180E  E1FD               	bnz	clear_0
   386                           
   387                           ; Clear objects allocated to COMRAM (51 bytes)
   388  001810  EE00  F001         	lfsr	0,__pbssCOMRAM
   389  001814  0E33               	movlw	51
   390  001816                     clear_1:
   391  001816  6AEE               	clrf	postinc0,c
   392  001818  06E8               	decf	wreg,f,c
   393  00181A  E1FD               	bnz	clear_1
   394  00181C                     end_of_initialization:
   395                           	callstack 0
   396  00181C                     __end_of__initialization:
   397                           	callstack 0
   398  00181C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   399  00181E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   400  001820  0100               	movlb	0
   401  001822  EF48  F00A         	goto	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMRAM
   404  000001                     __pbssCOMRAM:
   405                           	callstack 0
   406  000001                     	ds	6
   407  000007                     _timer0:
   408                           	callstack 0
   409  000007                     	ds	4
   410  00000B                     _distance:
   411                           	callstack 0
   412  00000B                     	ds	4
   413  00000F                     _preloaded_val:
   414                           	callstack 0
   415  00000F                     	ds	2
   416  000011                     _RB7_InterruptHandler_LOW:
   417                           	callstack 0
   418  000011                     	ds	2
   419  000013                     _RB7_InterruptHandler_HIGH:
   420                           	callstack 0
   421  000013                     	ds	2
   422  000015                     _RB6_InterruptHandler_LOW:
   423                           	callstack 0
   424  000015                     	ds	2
   425  000017                     _RB6_InterruptHandler_HIGH:
   426                           	callstack 0
   427  000017                     	ds	2
   428  000019                     _RB5_InterruptHandler_LOW:
   429                           	callstack 0
   430  000019                     	ds	2
   431  00001B                     _RB5_InterruptHandler_HIGH:
   432                           	callstack 0
   433  00001B                     	ds	2
   434  00001D                     _RB4_InterruptHandler_LOW:
   435                           	callstack 0
   436  00001D                     	ds	2
   437  00001F                     _RB4_InterruptHandler_HIGH:
   438                           	callstack 0
   439  00001F                     	ds	2
   440  000021                     _INT2_InterruptHandler:
   441                           	callstack 0
   442  000021                     	ds	2
   443  000023                     _INT1_InterruptHandler:
   444                           	callstack 0
   445  000023                     	ds	2
   446  000025                     _INT0_InterruptHandler:
   447                           	callstack 0
   448  000025                     	ds	2
   449  000027                     _I2C_Report_Write_Collision:
   450                           	callstack 0
   451  000027                     	ds	2
   452  000029                     _I2C_Report_Receive_Overflow:
   453                           	callstack 0
   454  000029                     	ds	2
   455  00002B                     _I2C_DefaultInterruptHandler:
   456                           	callstack 0
   457  00002B                     	ds	2
   458  00002D                     _eusart_frameerr_CallBack:
   459                           	callstack 0
   460  00002D                     	ds	2
   461  00002F                     _eusart_overrunerr_CallBack:
   462                           	callstack 0
   463  00002F                     	ds	2
   464  000031                     _eusart_Rx_InterruptHandler:
   465                           	callstack 0
   466  000031                     	ds	2
   467  000033                     _Movement_State:
   468                           	callstack 0
   469  000033                     	ds	1
   470                           
   471                           	psect	dataCOMRAM
   472  000057                     __pdataCOMRAM:
   473                           	callstack 0
   474  000057                     _lat_registers:
   475                           	callstack 0
   476  000057                     	ds	10
   477  000061                     _tris_registers:
   478                           	callstack 0
   479  000061                     	ds	10
   480  00006B                     _ultrasonic:
   481                           	callstack 0
   482  00006B                     	ds	2
   483  00006D                     _flags:
   484                           	callstack 0
   485  00006D                     	ds	1
   486  00006E                     _lcd1:
   487                           	callstack 0
   488  00006E                     	ds	6
   489  000074                     _W2_W4_W6_Motor_Control:
   490                           	callstack 0
   491  000074                     	ds	2
   492  000076                     _W1_W3_W5_Motor_Control:
   493                           	callstack 0
   494  000076                     	ds	2
   495  000078                     _pinc0:
   496                           	callstack 0
   497  000078                     	ds	1
   498                           
   499                           	psect	bssBANK0
   500  0000A2                     __pbssBANK0:
   501                           	callstack 0
   502  0000A2                     _dis:
   503                           	callstack 0
   504  0000A2                     	ds	10
   505  0000AC                     	ds	9
   506                           
   507                           	psect	dataBANK0
   508  000080                     __pdataBANK0:
   509                           	callstack 0
   510  000080                     _port_registers:
   511                           	callstack 0
   512  000080                     	ds	10
   513  00008A                     _CCP2_Obj:
   514                           	callstack 0
   515  00008A                     	ds	12
   516  000096                     _CCP1_Obj:
   517                           	callstack 0
   518  000096                     	ds	12
   519                           
   520                           	psect	cstackBANK0
   521  0000B5                     __pcstackBANK0:
   522                           	callstack 0
   523  0000B5                     ??_main:
   524                           
   525                           ; 1 bytes @ 0x0
   526  0000B5                     	ds	2
   527                           
   528                           	psect	cstackCOMRAM
   529  000034                     __pcstackCOMRAM:
   530                           	callstack 0
   531  000034                     RB4_ISR@Handler_Select:
   532                           	callstack 0
   533  000034                     RB5_ISR@Handler_Select:
   534                           	callstack 0
   535  000034                     RB6_ISR@Handler_Select:
   536                           	callstack 0
   537  000034                     RB7_ISR@Handler_Select:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x0
   541  000034                     	ds	1
   542  000035                     ??_InterruptManagerLow:
   543                           
   544                           ; 1 bytes @ 0x1
   545  000035                     	ds	3
   546  000038                     GPIO_Pin_Direction_Initialize@_pin_config:
   547                           	callstack 0
   548  000038                     GPIO_Pin_Write_Logic@_pin_config:
   549                           	callstack 0
   550  000038                     GPIO_Pin_Toggle_Logic@_pin_config:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x4
   554  000038                     	ds	2
   555  00003A                     ??_GPIO_Pin_Direction_Initialize:
   556  00003A                     ??_GPIO_Pin_Toggle_Logic:
   557  00003A                     GPIO_Pin_Write_Logic@logic:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x6
   561  00003A                     	ds	1
   562  00003B                     ??_GPIO_Pin_Write_Logic:
   563                           
   564                           ; 1 bytes @ 0x7
   565  00003B                     	ds	5
   566  000040                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0xC
   570  000040                     	ds	1
   571  000041                     GPIO_Pin_Write_Logic@ERRORSTATUS:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0xD
   575  000041                     	ds	1
   576  000042                     lcd_4bits_send_enable_signal@lcd:
   577                           	callstack 0
   578  000042                     lcd_send_4bits@lcd:
   579                           	callstack 0
   580  000042                     GPIO_Pin_Initialize@_pin_config:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0xE
   584  000042                     	ds	2
   585  000044                     lcd_send_4bits@data_command:
   586                           	callstack 0
   587  000044                     GPIO_Pin_Initialize@ERRORSTATUS:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x10
   591  000044                     	ds	1
   592  000045                     
   593                           ; 1 bytes @ 0x11
   594  000045                     	ds	1
   595  000046                     lcd_4bit_send_command@lcd:
   596                           	callstack 0
   597  000046                     lcd_4bit_send_char_data@lcd:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x12
   601  000046                     	ds	2
   602  000048                     lcd_4bit_send_command@command:
   603                           	callstack 0
   604  000048                     lcd_4bit_send_char_data@data:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x14
   608  000048                     	ds	1
   609  000049                     lcd_4bit_send_command@ERRORSTATUS:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x15
   613  000049                     	ds	1
   614  00004A                     lcd_4bit_initialize@lcd:
   615                           	callstack 0
   616  00004A                     lcd_4bits_set_courser@lcd:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x16
   620  00004A                     	ds	2
   621  00004C                     ??_lcd_4bit_initialize:
   622  00004C                     lcd_4bits_set_courser@row:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x18
   626  00004C                     	ds	1
   627  00004D                     lcd_4bits_set_courser@colum:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x19
   631  00004D                     	ds	1
   632  00004E                     ??_lcd_4bits_set_courser:
   633                           
   634                           ; 1 bytes @ 0x1A
   635  00004E                     	ds	1
   636  00004F                     lcd_4bit_initialize@pin_lcd_counter:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1B
   640  00004F                     	ds	1
   641  000050                     
   642                           ; 1 bytes @ 0x1C
   643  000050                     	ds	1
   644  000051                     lcd_4bit_send_string_data_pos@lcd:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x1D
   648  000051                     	ds	2
   649  000053                     lcd_4bit_send_string_data_pos@row:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x1F
   653  000053                     	ds	1
   654  000054                     lcd_4bit_send_string_data_pos@colum:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x20
   658  000054                     	ds	1
   659  000055                     lcd_4bit_send_string_data_pos@str:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x21
   663  000055                     	ds	2
   664  000057                     
   665                           ; 1 bytes @ 0x23
   666 ;;
   667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   668 ;;
   669 ;; *************** function _main *****************
   670 ;; Defined at:
   671 ;;		line 79 in file "application.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  2  1660[None  ] int 
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        2 bytes
   690 ;; Hardware stack levels required when called:    9
   691 ;; This function calls:
   692 ;;		_GPIO_Pin_Toggle_Logic
   693 ;;		_GPIO_Pin_Write_Logic
   694 ;;		_application_intialize
   695 ;;		_lcd_4bit_send_string_data_pos
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text0
   702  001490                     __ptext0:
   703                           	callstack 0
   704  001490                     _main:
   705                           	callstack 22
   706  001490                     
   707                           ;application.c: 83:     application_intialize();
   708  001490  ECAF  F00C         	call	_application_intialize	;wreg free
   709  001494                     
   710                           ;application.c: 84:     lcd_4bit_send_string_data_pos(&lcd1,1,1,"              ");
   711  001494  0E6E               	movlw	low _lcd1
   712  001496  6E51               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
   713  001498  0E00               	movlw	high _lcd1
   714  00149A  6E52               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
   715  00149C  0E01               	movlw	1
   716  00149E  6E53               	movwf	lcd_4bit_send_string_data_pos@row^0,c
   717  0014A0  0E01               	movlw	1
   718  0014A2  6E54               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
   719  0014A4  0E25               	movlw	low STR_11
   720  0014A6  6E55               	movwf	lcd_4bit_send_string_data_pos@str^0,c
   721  0014A8  0E10               	movlw	high STR_11
   722  0014AA  6E56               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
   723  0014AC  ECF8  F00A         	call	_lcd_4bit_send_string_data_pos	;wreg free
   724  0014B0                     
   725                           ;application.c: 85:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"              ");
   726  0014B0  0E6E               	movlw	low _lcd1
   727  0014B2  6E51               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
   728  0014B4  0E00               	movlw	high _lcd1
   729  0014B6  6E52               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
   730  0014B8  0E02               	movlw	2
   731  0014BA  6E53               	movwf	lcd_4bit_send_string_data_pos@row^0,c
   732  0014BC  0E01               	movlw	1
   733  0014BE  6E54               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
   734  0014C0  0E25               	movlw	low STR_11
   735  0014C2  6E55               	movwf	lcd_4bit_send_string_data_pos@str^0,c
   736  0014C4  0E10               	movlw	high STR_11
   737  0014C6  6E56               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
   738  0014C8  ECF8  F00A         	call	_lcd_4bit_send_string_data_pos	;wreg free
   739  0014CC                     
   740                           ;application.c: 86:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-> ");
   741  0014CC  0E6E               	movlw	low _lcd1
   742  0014CE  6E51               	movwf	lcd_4bit_send_string_data_pos@lcd^0,c
   743  0014D0  0E00               	movlw	high _lcd1
   744  0014D2  6E52               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,c
   745  0014D4  0E02               	movlw	2
   746  0014D6  6E53               	movwf	lcd_4bit_send_string_data_pos@row^0,c
   747  0014D8  0E01               	movlw	1
   748  0014DA  6E54               	movwf	lcd_4bit_send_string_data_pos@colum^0,c
   749  0014DC  0E4F               	movlw	low STR_13
   750  0014DE  6E55               	movwf	lcd_4bit_send_string_data_pos@str^0,c
   751  0014E0  0E10               	movlw	high STR_13
   752  0014E2  6E56               	movwf	(lcd_4bit_send_string_data_pos@str+1)^0,c
   753  0014E4  ECF8  F00A         	call	_lcd_4bit_send_string_data_pos	;wreg free
   754  0014E8                     
   755                           ;application.c: 87:     GPIO_Pin_Write_Logic(&pinc0,GPIO_HIGH);
   756  0014E8  0E78               	movlw	low _pinc0
   757  0014EA  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
   758  0014EC  0E00               	movlw	high _pinc0
   759  0014EE  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
   760  0014F0  0E01               	movlw	1
   761  0014F2  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
   762  0014F4  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
   763  0014F8                     
   764                           ;application.c: 88:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   765  0014F8  0E0B               	movlw	11
   766  0014FA  0100               	movlb	0	; () banked
   767  0014FC  6FB6               	movwf	(??_main+1)& (0+255),b
   768  0014FE  0E26               	movlw	38
   769  001500  6FB5               	movwf	??_main& (0+255),b
   770  001502  0E5D               	movlw	93
   771  001504                     u5457:
   772  001504  2EE8               	decfsz	wreg,f,c
   773  001506  D7FE               	bra	u5457
   774  001508  2FB5               	decfsz	??_main& (0+255),f,b
   775  00150A  D7FC               	bra	u5457
   776  00150C  2FB6               	decfsz	(??_main+1)& (0+255),f,b
   777  00150E  D7FA               	bra	u5457
   778  001510  D000               	nop2	
   779  001512                     l6493:
   780                           
   781                           ;application.c: 90:     {;application.c: 91:        GPIO_Pin_Toggle_Logic(&pinc0);
   782  001512  0E78               	movlw	low _pinc0
   783  001514  6E38               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
   784  001516  0E00               	movlw	high _pinc0
   785  001518  6E39               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
   786  00151A  EC75  F00B         	call	_GPIO_Pin_Toggle_Logic	;wreg free
   787  00151E                     
   788                           ;application.c: 92:            _delay((unsigned long)((500)*(8000000/4000.0)));
   789  00151E  0E06               	movlw	6
   790  001520  0100               	movlb	0	; () banked
   791  001522  6FB6               	movwf	(??_main+1)& (0+255),b
   792  001524  0E13               	movlw	19
   793  001526  6FB5               	movwf	??_main& (0+255),b
   794  001528  0EAD               	movlw	173
   795  00152A                     u5467:
   796  00152A  2EE8               	decfsz	wreg,f,c
   797  00152C  D7FE               	bra	u5467
   798  00152E  2FB5               	decfsz	??_main& (0+255),f,b
   799  001530  D7FC               	bra	u5467
   800  001532  2FB6               	decfsz	(??_main+1)& (0+255),f,b
   801  001534  D7FA               	bra	u5467
   802  001536  D000               	nop2	
   803  001538  EF89  F00A         	goto	l6493
   804  00153C  EF43  F001         	goto	start
   805  001540                     __end_of_main:
   806                           	callstack 0
   807                           
   808 ;; *************** function _lcd_4bit_send_string_data_pos *****************
   809 ;; Defined at:
   810 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  lcd             2   29[COMRAM] PTR const struct .
   813 ;;		 -> lcd1(6), 
   814 ;;  row             1   31[COMRAM] unsigned char 
   815 ;;  colum           1   32[COMRAM] unsigned char 
   816 ;;  str             2   33[COMRAM] PTR unsigned char 
   817 ;;		 -> STR_13(4), STR_12(15), STR_11(15), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  ERRORSTATUS     1    0        unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      unsigned char 
   822 ;; Registers used:
   823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        7 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    8
   836 ;; This function calls:
   837 ;;		_lcd_4bit_send_char_data
   838 ;;		_lcd_4bits_set_courser
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text1
   845  0015F0                     __ptext1:
   846                           	callstack 0
   847  0015F0                     _lcd_4bit_send_string_data_pos:
   848                           	callstack 22
   849  0015F0                     
   850                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
   851  0015F0  5051               	movf	lcd_4bit_send_string_data_pos@lcd^0,w,c
   852  0015F2  1052               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)^0,w,c
   853  0015F4  B4D8               	btfsc	status,2,c
   854  0015F6  EFFF  F00A         	goto	u4111
   855  0015FA  EF01  F00B         	goto	u4110
   856  0015FE                     u4111:
   857  0015FE  EF0A  F00B         	goto	l5383
   858  001602                     u4110:
   859  001602  5055               	movf	lcd_4bit_send_string_data_pos@str^0,w,c
   860  001604  1056               	iorwf	(lcd_4bit_send_string_data_pos@str+1)^0,w,c
   861  001606  A4D8               	btfss	status,2,c
   862  001608  EF08  F00B         	goto	u4121
   863  00160C  EF0A  F00B         	goto	u4120
   864  001610                     u4121:
   865  001610  EF0C  F00B         	goto	l5385
   866  001614                     u4120:
   867  001614                     l5383:
   868                           
   869                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
   870  001614  EF37  F00B         	goto	l155
   871  001618                     l5385:
   872                           
   873                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
   874  001618  C051  F04A         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
   875  00161C  C052  F04B         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
   876  001620  C053  F04C         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
   877  001624  C054  F04D         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
   878  001628  ECA0  F00A         	call	_lcd_4bits_set_courser	;wreg free
   879                           
   880                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
   881  00162C  EF28  F00B         	goto	l5391
   882  001630                     l5387:
   883                           
   884                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
   885  001630  C051  F046         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
   886  001634  C052  F047         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
   887  001638  C055  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
   888  00163C  C056  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
   889  001640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   890  001640  6AF8               	clrf	tblptru,c
   891  001642                     	endif
   892  001642                     	if	0	;tblptru may be non-zero
   893  001642                     	endif
   894  001642  0008               	tblrd		*
   895  001644  CFF5 F048          	movff	tablat,lcd_4bit_send_char_data@data
   896  001648  EC13  F00C         	call	_lcd_4bit_send_char_data	;wreg free
   897  00164C  4A55               	infsnz	lcd_4bit_send_string_data_pos@str^0,f,c
   898  00164E  2A56               	incf	(lcd_4bit_send_string_data_pos@str+1)^0,f,c
   899  001650                     l5391:
   900                           
   901                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
   902  001650  C055  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
   903  001654  C056  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
   904  001658                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   905  001658  6AF8               	clrf	tblptru,c
   906  00165A                     	endif
   907  00165A                     	if	0	;tblptru may be non-zero
   908  00165A                     	endif
   909  00165A  0008               	tblrd		*
   910  00165C  50F5               	movf	tablat,w,c
   911  00165E  0900               	iorlw	0
   912  001660  A4D8               	btfss	status,2,c
   913  001662  EF35  F00B         	goto	u4131
   914  001666  EF37  F00B         	goto	u4130
   915  00166A                     u4131:
   916  00166A  EF18  F00B         	goto	l5387
   917  00166E                     u4130:
   918  00166E                     l155:
   919  00166E  0012               	return		;funcret
   920  001670                     __end_of_lcd_4bit_send_string_data_pos:
   921                           	callstack 0
   922                           
   923 ;; *************** function _lcd_4bits_set_courser *****************
   924 ;; Defined at:
   925 ;;		line 591 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  lcd             2   22[COMRAM] PTR const struct .
   928 ;;		 -> lcd1(6), 
   929 ;;  row             1   24[COMRAM] unsigned char 
   930 ;;  colum           1   25[COMRAM] unsigned char 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  ERRORSTATUS     1    0        unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      unsigned char 
   935 ;; Registers used:
   936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;Total ram usage:        7 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    7
   949 ;; This function calls:
   950 ;;		_lcd_4bit_send_command
   951 ;; This function is called by:
   952 ;;		_lcd_4bit_send_string_data_pos
   953 ;;		_lcd_4bit_send_char_data_pos
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text2
   958  001540                     __ptext2:
   959                           	callstack 0
   960  001540                     _lcd_4bits_set_courser:
   961                           	callstack 22
   962  001540                     
   963                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 594:         if ( ((void*)0)==lcd)
   964  001540  504A               	movf	lcd_4bits_set_courser@lcd^0,w,c
   965  001542  104B               	iorwf	(lcd_4bits_set_courser@lcd+1)^0,w,c
   966  001544  A4D8               	btfss	status,2,c
   967  001546  EFA7  F00A         	goto	u3891
   968  00154A  EFA9  F00A         	goto	u3890
   969  00154E                     u3891:
   970  00154E  EFAB  F00A         	goto	l5139
   971  001552                     u3890:
   972  001552                     
   973                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 597:     }
   974  001552  EFF7  F00A         	goto	l281
   975  001556                     l5139:
   976                           
   977                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 599:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 60
      +                          0:             colum--;
   978  001556  064D               	decf	lcd_4bits_set_courser@colum^0,f,c
   979                           
   980                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 601:             switch (row)
   981  001558  EFDA  F00A         	goto	l5151
   982  00155C                     l5141:
   983  00155C  C04A  F046         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
   984  001560  C04B  F047         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
   985  001564  504D               	movf	lcd_4bits_set_courser@colum^0,w,c
   986  001566  0F80               	addlw	128
   987  001568  6E48               	movwf	lcd_4bit_send_command@command^0,c
   988  00156A  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
   989  00156E  EFF7  F00A         	goto	l281
   990  001572                     l5143:
   991  001572  C04A  F046         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
   992  001576  C04B  F047         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
   993  00157A  504D               	movf	lcd_4bits_set_courser@colum^0,w,c
   994  00157C  0FC0               	addlw	192
   995  00157E  6E48               	movwf	lcd_4bit_send_command@command^0,c
   996  001580  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
   997  001584  EFF7  F00A         	goto	l281
   998  001588                     l5145:
   999  001588  C04A  F046         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1000  00158C  C04B  F047         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1001  001590  504D               	movf	lcd_4bits_set_courser@colum^0,w,c
  1002  001592  0F94               	addlw	148
  1003  001594  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1004  001596  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1005  00159A  EFF7  F00A         	goto	l281
  1006  00159E                     l5147:
  1007  00159E  C04A  F046         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  1008  0015A2  C04B  F047         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  1009  0015A6  504D               	movf	lcd_4bits_set_courser@colum^0,w,c
  1010  0015A8  0FD4               	addlw	212
  1011  0015AA  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1012  0015AC  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1013  0015B0  EFF7  F00A         	goto	l281
  1014  0015B4                     l5151:
  1015  0015B4  504C               	movf	lcd_4bits_set_courser@row^0,w,c
  1016  0015B6  6E4E               	movwf	??_lcd_4bits_set_courser^0,c
  1017  0015B8  6A4F               	clrf	(??_lcd_4bits_set_courser+1)^0,c
  1018                           
  1019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1020                           ; Switch size 1, requested type "simple"
  1021                           ; Number of cases is 1, Range of values is 0 to 0
  1022                           ; switch strategies available:
  1023                           ; Name         Instructions Cycles
  1024                           ; simple_byte            4     3 (average)
  1025                           ;	Chosen strategy is simple_byte
  1026  0015BA  504F               	movf	(??_lcd_4bits_set_courser+1)^0,w,c
  1027  0015BC  0A00               	xorlw	0	; case 0
  1028  0015BE  B4D8               	btfsc	status,2,c
  1029  0015C0  EFE4  F00A         	goto	l6509
  1030  0015C4  EFF7  F00A         	goto	l281
  1031  0015C8                     l6509:
  1032                           
  1033                           ; Switch size 1, requested type "simple"
  1034                           ; Number of cases is 4, Range of values is 1 to 4
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte           13     7 (average)
  1038                           ;	Chosen strategy is simple_byte
  1039  0015C8  504E               	movf	??_lcd_4bits_set_courser^0,w,c
  1040  0015CA  0A01               	xorlw	1	; case 1
  1041  0015CC  B4D8               	btfsc	status,2,c
  1042  0015CE  EFAE  F00A         	goto	l5141
  1043  0015D2  0A03               	xorlw	3	; case 2
  1044  0015D4  B4D8               	btfsc	status,2,c
  1045  0015D6  EFB9  F00A         	goto	l5143
  1046  0015DA  0A01               	xorlw	1	; case 3
  1047  0015DC  B4D8               	btfsc	status,2,c
  1048  0015DE  EFC4  F00A         	goto	l5145
  1049  0015E2  0A07               	xorlw	7	; case 4
  1050  0015E4  B4D8               	btfsc	status,2,c
  1051  0015E6  EFCF  F00A         	goto	l5147
  1052  0015EA  EFF7  F00A         	goto	l281
  1053  0015EE                     l281:
  1054  0015EE  0012               	return		;funcret
  1055  0015F0                     __end_of_lcd_4bits_set_courser:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _lcd_4bit_send_char_data *****************
  1059 ;; Defined at:
  1060 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  lcd             2   18[COMRAM] PTR const struct .
  1063 ;;		 -> lcd1(6), 
  1064 ;;  data            1   20[COMRAM] unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  ERRORSTATUS     1    0        unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      unsigned char 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1076 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;Total ram usage:        4 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    6
  1083 ;; This function calls:
  1084 ;;		_GPIO_Pin_Write_Logic
  1085 ;;		_lcd_4bits_send_enable_signal
  1086 ;;		_lcd_send_4bits
  1087 ;; This function is called by:
  1088 ;;		_lcd_4bit_send_string_data_pos
  1089 ;;		_lcd_4bit_send_char_data_pos
  1090 ;;		_lcd_4bit_send_string_data
  1091 ;;		_lcd_4bit_send_custom_char
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096  001826                     __ptext3:
  1097                           	callstack 0
  1098  001826                     _lcd_4bit_send_char_data:
  1099                           	callstack 23
  1100  001826                     
  1101                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  1102  001826  5046               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1103  001828  1047               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1104  00182A  A4D8               	btfss	status,2,c
  1105  00182C  EF1A  F00C         	goto	u3881
  1106  001830  EF1C  F00C         	goto	u3880
  1107  001834                     u3881:
  1108  001834  EF1E  F00C         	goto	l5129
  1109  001838                     u3880:
  1110  001838                     
  1111                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  1112  001838  EF43  F00C         	goto	l130
  1113  00183C                     l5129:
  1114  00183C  C046  F038         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  1115  001840  C047  F039         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1116  001844  0E01               	movlw	1
  1117  001846  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1118  001848  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1119                           
  1120                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  1121  00184C  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1122  001850  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1123  001854  3848               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1124  001856  0B0F               	andlw	15
  1125  001858  6E44               	movwf	lcd_send_4bits@data_command^0,c
  1126  00185A  EC38  F00B         	call	_lcd_send_4bits	;wreg free
  1127                           
  1128                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  1129  00185E  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1130  001862  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1131  001866  EC69  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1132                           
  1133                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  1134  00186A  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1135  00186E  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1136  001872  C048  F044         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1137  001876  EC38  F00B         	call	_lcd_send_4bits	;wreg free
  1138                           
  1139                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  1140  00187A  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1141  00187E  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1142  001882  EC69  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1143  001886                     l130:
  1144  001886  0012               	return		;funcret
  1145  001888                     __end_of_lcd_4bit_send_char_data:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _application_intialize *****************
  1149 ;; Defined at:
  1150 ;;		line 103 in file "application.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    8
  1171 ;; This function calls:
  1172 ;;		_GPIO_Pin_Initialize
  1173 ;;		_lcd_4bit_initialize
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180  00195E                     __ptext4:
  1181                           	callstack 0
  1182  00195E                     _application_intialize:
  1183                           	callstack 22
  1184  00195E                     
  1185                           ;application.c: 105:     GPIO_Pin_Initialize(&pinc0);
  1186  00195E  0E78               	movlw	low _pinc0
  1187  001960  6E42               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1188  001962  0E00               	movlw	high _pinc0
  1189  001964  6E43               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1190  001966  EC44  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1191                           
  1192                           ;application.c: 106:     lcd_4bit_initialize(&lcd1);
  1193  00196A  0E6E               	movlw	low _lcd1
  1194  00196C  6E4A               	movwf	lcd_4bit_initialize@lcd^0,c
  1195  00196E  0E00               	movlw	high _lcd1
  1196  001970  6E4B               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  1197  001972  EC61  F009         	call	_lcd_4bit_initialize	;wreg free
  1198  001976  0012               	return		;funcret
  1199  001978                     __end_of_application_intialize:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _lcd_4bit_initialize *****************
  1203 ;; Defined at:
  1204 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  lcd             2   22[COMRAM] PTR const struct .
  1207 ;;		 -> lcd1(6), 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  pin_lcd_coun    1   27[COMRAM] unsigned char 
  1210 ;;  ERRORSTATUS     1    0        unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      unsigned char 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        6 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    7
  1227 ;; This function calls:
  1228 ;;		_GPIO_Pin_Initialize
  1229 ;;		_lcd_4bit_send_command
  1230 ;; This function is called by:
  1231 ;;		_application_intialize
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text5
  1236  0012C2                     __ptext5:
  1237                           	callstack 0
  1238  0012C2                     _lcd_4bit_initialize:
  1239                           	callstack 22
  1240  0012C2                     
  1241                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  1242  0012C2  504A               	movf	lcd_4bit_initialize@lcd^0,w,c
  1243  0012C4  104B               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  1244  0012C6  A4D8               	btfss	status,2,c
  1245  0012C8  EF68  F009         	goto	u3861
  1246  0012CC  EF6A  F009         	goto	u3860
  1247  0012D0                     u3861:
  1248  0012D0  EF6C  F009         	goto	l5083
  1249  0012D4                     u3860:
  1250  0012D4                     
  1251                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  1252  0012D4  EFEC  F009         	goto	l120
  1253  0012D8                     l5083:
  1254  0012D8  C04A  F042         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  1255  0012DC  C04B  F043         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  1256  0012E0  EC44  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1257  0012E4  0E01               	movlw	1
  1258  0012E6  244A               	addwf	lcd_4bit_initialize@lcd^0,w,c
  1259  0012E8  6E42               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1260  0012EA  0E00               	movlw	0
  1261  0012EC  204B               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  1262  0012EE  6E43               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1263  0012F0  EC44  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1264                           
  1265                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  1266  0012F4  0E00               	movlw	0
  1267  0012F6  6E4F               	movwf	lcd_4bit_initialize@pin_lcd_counter^0,c
  1268  0012F8                     l5093:
  1269  0012F8  504F               	movf	lcd_4bit_initialize@pin_lcd_counter^0,w,c
  1270  0012FA  244A               	addwf	lcd_4bit_initialize@lcd^0,w,c
  1271  0012FC  6E4C               	movwf	??_lcd_4bit_initialize^0,c
  1272  0012FE  0E00               	movlw	0
  1273  001300  204B               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  1274  001302  6E4D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  1275  001304  0E02               	movlw	2
  1276  001306  244C               	addwf	??_lcd_4bit_initialize^0,w,c
  1277  001308  6E42               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  1278  00130A  0E00               	movlw	0
  1279  00130C  204D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  1280  00130E  6E43               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  1281  001310  EC44  F00C         	call	_GPIO_Pin_Initialize	;wreg free
  1282  001314                     
  1283                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  1284  001314  2A4F               	incf	lcd_4bit_initialize@pin_lcd_counter^0,f,c
  1285  001316  0E03               	movlw	3
  1286  001318  644F               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter^0,c
  1287  00131A  EF91  F009         	goto	u3871
  1288  00131E  EF93  F009         	goto	u3870
  1289  001322                     u3871:
  1290  001322  EF7C  F009         	goto	l5093
  1291  001326                     u3870:
  1292  001326                     
  1293                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(8000000/4
      +                          000.0)));
  1294  001326  0E34               	movlw	52
  1295  001328  6E4C               	movwf	??_lcd_4bit_initialize^0,c
  1296  00132A  0EF2               	movlw	242
  1297  00132C                     u5477:
  1298  00132C  2EE8               	decfsz	wreg,f,c
  1299  00132E  D7FE               	bra	u5477
  1300  001330  2E4C               	decfsz	??_lcd_4bit_initialize^0,f,c
  1301  001332  D7FC               	bra	u5477
  1302  001334  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1303  001338  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1304  00133C  0E38               	movlw	56
  1305  00133E  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1306  001340  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1307  001344                     
  1308                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(8000000/40
      +                          00.0)));
  1309  001344  0E0D               	movlw	13
  1310  001346  6E4C               	movwf	??_lcd_4bit_initialize^0,c
  1311  001348  0EFC               	movlw	252
  1312  00134A                     u5487:
  1313  00134A  2EE8               	decfsz	wreg,f,c
  1314  00134C  D7FE               	bra	u5487
  1315  00134E  2E4C               	decfsz	??_lcd_4bit_initialize^0,f,c
  1316  001350  D7FC               	bra	u5487
  1317  001352  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1318  001356  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1319  00135A  0E38               	movlw	56
  1320  00135C  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1321  00135E  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1322  001362                     
  1323                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(8000000/
      +                          4000000.0)));
  1324  001362  0E64               	movlw	100
  1325  001364                     u5497:
  1326  001364  2EE8               	decfsz	wreg,f,c
  1327  001366  D7FE               	bra	u5497
  1328  001368  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1329  00136C  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1330  001370  0E38               	movlw	56
  1331  001372  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1332  001374  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1333  001378  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1334  00137C  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1335  001380  0E01               	movlw	1
  1336  001382  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1337  001384  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1338  001388  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1339  00138C  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1340  001390  0E02               	movlw	2
  1341  001392  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1342  001394  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1343  001398  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1344  00139C  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1345  0013A0  0E06               	movlw	6
  1346  0013A2  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1347  0013A4  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1348  0013A8  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1349  0013AC  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1350  0013B0  0E0D               	movlw	13
  1351  0013B2  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1352  0013B4  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1353  0013B8  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1354  0013BC  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1355  0013C0  0E28               	movlw	40
  1356  0013C2  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1357  0013C4  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1358  0013C8  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1359  0013CC  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1360  0013D0  0E80               	movlw	128
  1361  0013D2  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1362  0013D4  ECAD  F00B         	call	_lcd_4bit_send_command	;wreg free
  1363  0013D8                     l120:
  1364  0013D8  0012               	return		;funcret
  1365  0013DA                     __end_of_lcd_4bit_initialize:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _lcd_4bit_send_command *****************
  1369 ;; Defined at:
  1370 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  lcd             2   18[COMRAM] PTR const struct .
  1373 ;;		 -> lcd1(6), 
  1374 ;;  command         1   20[COMRAM] unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  ERRORSTATUS     1   21[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      unsigned char 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1386 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;Total ram usage:        4 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    6
  1393 ;; This function calls:
  1394 ;;		_GPIO_Pin_Write_Logic
  1395 ;;		_lcd_4bits_send_enable_signal
  1396 ;;		_lcd_send_4bits
  1397 ;; This function is called by:
  1398 ;;		_lcd_4bit_initialize
  1399 ;;		_lcd_4bits_set_courser
  1400 ;;		_lcd_4bit_send_custom_char
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text6
  1405  00175A                     __ptext6:
  1406                           	callstack 0
  1407  00175A                     _lcd_4bit_send_command:
  1408                           	callstack 22
  1409  00175A                     
  1410                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  1411  00175A  5046               	movf	lcd_4bit_send_command@lcd^0,w,c
  1412  00175C  1047               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  1413  00175E  A4D8               	btfss	status,2,c
  1414  001760  EFB4  F00B         	goto	u3821
  1415  001764  EFB6  F00B         	goto	u3820
  1416  001768                     u3821:
  1417  001768  EFBA  F00B         	goto	l5059
  1418  00176C                     u3820:
  1419  00176C                     
  1420                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
  1421  00176C  0E00               	movlw	0
  1422  00176E  6E49               	movwf	lcd_4bit_send_command@ERRORSTATUS^0,c
  1423                           
  1424                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  1425  001770  EFE0  F00B         	goto	l5061
  1426  001774                     l5059:
  1427                           
  1428                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
  1429  001774  C046  F038         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
  1430  001778  C047  F039         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  1431  00177C  0E00               	movlw	0
  1432  00177E  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1433  001780  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1434  001784  6E49               	movwf	lcd_4bit_send_command@ERRORSTATUS^0,c
  1435                           
  1436                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  1437  001786  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1438  00178A  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1439  00178E  3848               	swapf	lcd_4bit_send_command@command^0,w,c
  1440  001790  0B0F               	andlw	15
  1441  001792  6E44               	movwf	lcd_send_4bits@data_command^0,c
  1442  001794  EC38  F00B         	call	_lcd_send_4bits	;wreg free
  1443                           
  1444                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  1445  001798  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1446  00179C  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1447  0017A0  EC69  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1448                           
  1449                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  1450  0017A4  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1451  0017A8  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1452  0017AC  C048  F044         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  1453  0017B0  EC38  F00B         	call	_lcd_send_4bits	;wreg free
  1454                           
  1455                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  1456  0017B4  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1457  0017B8  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  1458  0017BC  EC69  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1459  0017C0                     l5061:
  1460                           
  1461                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
  1462  0017C0  5049               	movf	lcd_4bit_send_command@ERRORSTATUS^0,w,c
  1463  0017C2  0012               	return		;funcret
  1464  0017C4                     __end_of_lcd_4bit_send_command:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _lcd_send_4bits *****************
  1468 ;; Defined at:
  1469 ;;		line 529 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  lcd             2   14[COMRAM] PTR const struct .
  1472 ;;		 -> lcd1(6), 
  1473 ;;  data_command    1   16[COMRAM] unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  ERRORSTATUS     1    0        unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        4 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    5
  1492 ;; This function calls:
  1493 ;;		_GPIO_Pin_Write_Logic
  1494 ;; This function is called by:
  1495 ;;		_lcd_4bit_send_command
  1496 ;;		_lcd_4bit_send_char_data
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text7
  1501  001670                     __ptext7:
  1502                           	callstack 0
  1503  001670                     _lcd_send_4bits:
  1504                           	callstack 22
  1505  001670                     
  1506                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 532:         if ( ((void*)0)==lcd)
  1507  001670  5042               	movf	lcd_send_4bits@lcd^0,w,c
  1508  001672  1043               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  1509  001674  A4D8               	btfss	status,2,c
  1510  001676  EF3F  F00B         	goto	u3731
  1511  00167A  EF41  F00B         	goto	u3730
  1512  00167E                     u3731:
  1513  00167E  EF43  F00B         	goto	l4999
  1514  001682                     u3730:
  1515  001682                     
  1516                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 535:     }
  1517  001682  EF74  F00B         	goto	l252
  1518  001686                     l4999:
  1519                           
  1520                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 537:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 53
      +                          8:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  1521  001686  0E02               	movlw	2
  1522  001688  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  1523  00168A  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1524  00168C  0E00               	movlw	0
  1525  00168E  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1526  001690  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1527  001692  5044               	movf	lcd_send_4bits@data_command^0,w,c
  1528  001694  0B01               	andlw	1
  1529  001696  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1530  001698  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1531                           
  1532                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 539:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  1533  00169C  0E03               	movlw	3
  1534  00169E  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  1535  0016A0  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1536  0016A2  0E00               	movlw	0
  1537  0016A4  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1538  0016A6  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1539  0016A8  90D8               	bcf	status,0,c
  1540  0016AA  3044               	rrcf	lcd_send_4bits@data_command^0,w,c
  1541  0016AC  0B01               	andlw	1
  1542  0016AE  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1543  0016B0  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1544                           
  1545                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 540:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  1546  0016B4  0E04               	movlw	4
  1547  0016B6  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  1548  0016B8  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1549  0016BA  0E00               	movlw	0
  1550  0016BC  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1551  0016BE  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1552  0016C0  4044               	rrncf	lcd_send_4bits@data_command^0,w,c
  1553  0016C2  42E8               	rrncf	wreg,f,c
  1554  0016C4  0B3F               	andlw	63
  1555  0016C6  0B01               	andlw	1
  1556  0016C8  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1557  0016CA  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1558                           
  1559                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 541:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  1560  0016CE  0E05               	movlw	5
  1561  0016D0  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  1562  0016D2  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1563  0016D4  0E00               	movlw	0
  1564  0016D6  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1565  0016D8  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1566  0016DA  3844               	swapf	lcd_send_4bits@data_command^0,w,c
  1567  0016DC  46E8               	rlncf	wreg,f,c
  1568  0016DE  0B1F               	andlw	31
  1569  0016E0  0B01               	andlw	1
  1570  0016E2  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1571  0016E4  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1572  0016E8                     l252:
  1573  0016E8  0012               	return		;funcret
  1574  0016EA                     __end_of_lcd_send_4bits:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _lcd_4bits_send_enable_signal *****************
  1578 ;; Defined at:
  1579 ;;		line 512 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  lcd             2   14[COMRAM] PTR const struct .
  1582 ;;		 -> lcd1(6), 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  ERRORSTATUS     1    0        unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      unsigned char 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:        3 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    5
  1601 ;; This function calls:
  1602 ;;		_GPIO_Pin_Write_Logic
  1603 ;; This function is called by:
  1604 ;;		_lcd_4bit_send_command
  1605 ;;		_lcd_4bit_send_char_data
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text8
  1610  0018D2                     __ptext8:
  1611                           	callstack 0
  1612  0018D2                     _lcd_4bits_send_enable_signal:
  1613                           	callstack 22
  1614  0018D2                     
  1615                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:         if ( ((void*)0)==lcd)
  1616  0018D2  5042               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1617  0018D4  1043               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  1618  0018D6  A4D8               	btfss	status,2,c
  1619  0018D8  EF70  F00C         	goto	u3741
  1620  0018DC  EF72  F00C         	goto	u3740
  1621  0018E0                     u3741:
  1622  0018E0  EF74  F00C         	goto	l5009
  1623  0018E4                     u3740:
  1624  0018E4                     
  1625                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 518:     }
  1626  0018E4  EF8C  F00C         	goto	l247
  1627  0018E8                     l5009:
  1628                           
  1629                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 520:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 52
      +                          1:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  1630  0018E8  0E01               	movlw	1
  1631  0018EA  2442               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1632  0018EC  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1633  0018EE  0E00               	movlw	0
  1634  0018F0  2043               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  1635  0018F2  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1636  0018F4  0E01               	movlw	1
  1637  0018F6  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1638  0018F8  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1639  0018FC                     
  1640                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 522:             _delay((unsigned long)((5)*(80000
      +                          00/4000000.0)));
  1641  0018FC  0E03               	movlw	3
  1642  0018FE                     u5507:
  1643  0018FE  2EE8               	decfsz	wreg,f,c
  1644  001900  D7FE               	bra	u5507
  1645  001902  F000               	nop	
  1646  001904                     
  1647                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 523:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  1648  001904  0E01               	movlw	1
  1649  001906  2442               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1650  001908  6E38               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1651  00190A  0E00               	movlw	0
  1652  00190C  2043               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  1653  00190E  6E39               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1654  001910  0E00               	movlw	0
  1655  001912  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1656  001914  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1657  001918                     l247:
  1658  001918  0012               	return		;funcret
  1659  00191A                     __end_of_lcd_4bits_send_enable_signal:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _GPIO_Pin_Initialize *****************
  1663 ;; Defined at:
  1664 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  _pin_config     2   14[COMRAM] PTR const struct .
  1667 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(12), 
  1668 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1669 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  ERRORSTATUS     1   16[COMRAM] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      unsigned char 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;Total ram usage:        3 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    5
  1688 ;; This function calls:
  1689 ;;		_GPIO_Pin_Direction_Initialize
  1690 ;;		_GPIO_Pin_Write_Logic
  1691 ;; This function is called by:
  1692 ;;		_lcd_4bit_initialize
  1693 ;;		_application_intialize
  1694 ;;		_ECU_DC_Motor_Init
  1695 ;;		_IR_Sensor_Init
  1696 ;;		_lcd_8bit_initialize
  1697 ;;		_CCP_Init
  1698 ;;		_Ultra_Sonic_Init
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text9
  1703  001888                     __ptext9:
  1704                           	callstack 0
  1705  001888                     _GPIO_Pin_Initialize:
  1706                           	callstack 23
  1707  001888                     
  1708                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  1709  001888  5042               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
  1710  00188A  1043               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
  1711  00188C  A4D8               	btfss	status,2,c
  1712  00188E  EF4B  F00C         	goto	u3811
  1713  001892  EF4D  F00C         	goto	u3810
  1714  001896                     u3811:
  1715  001896  EF51  F00C         	goto	l5047
  1716  00189A                     u3810:
  1717  00189A                     
  1718                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  1719  00189A  0E00               	movlw	0
  1720  00189C  6E44               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  1721                           
  1722                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  1723  00189E  EF67  F00C         	goto	l5049
  1724  0018A2                     l5047:
  1725                           
  1726                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  1727  0018A2  C042  F038         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  1728  0018A6  C043  F039         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  1729  0018AA  EC2D  F008         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  1730  0018AE  6E44               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  1731                           
  1732                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  1733  0018B0  C042  F038         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  1734  0018B4  C043  F039         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  1735  0018B8  C042  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  1736  0018BC  C043  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  1737  0018C0  0E00               	movlw	0
  1738  0018C2  BEDF               	btfsc	indf2,7,c
  1739  0018C4  0E01               	movlw	1
  1740  0018C6  6E3A               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1741  0018C8  ECCD  F008         	call	_GPIO_Pin_Write_Logic	;wreg free
  1742  0018CC  6E44               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  1743  0018CE                     l5049:
  1744                           
  1745                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  1746  0018CE  5044               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
  1747  0018D0  0012               	return		;funcret
  1748  0018D2                     __end_of_GPIO_Pin_Initialize:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _GPIO_Pin_Write_Logic *****************
  1752 ;; Defined at:
  1753 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1756 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(12), 
  1757 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1758 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1759 ;;  logic           1    6[COMRAM] enum E2958
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  ERRORSTATUS     1   13[COMRAM] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      unsigned char 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1771 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;Total ram usage:       10 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_lcd_4bit_send_command
  1782 ;;		_lcd_4bit_send_char_data
  1783 ;;		_lcd_4bits_send_enable_signal
  1784 ;;		_lcd_send_4bits
  1785 ;;		_GPIO_Pin_Initialize
  1786 ;;		_main
  1787 ;;		_ECU_DC_Motor_Run_Left
  1788 ;;		_ECU_DC_Motor_Run_Right
  1789 ;;		_ECU_DC_Motor_Stop
  1790 ;;		_lcd_8bit_send_command
  1791 ;;		_lcd_8bit_send_char_data
  1792 ;;		_lcd_8bits_send_enable_signal
  1793 ;;		_send_trig_pulse
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text10
  1798  00119A                     __ptext10:
  1799                           	callstack 0
  1800  00119A                     _GPIO_Pin_Write_Logic:
  1801                           	callstack 22
  1802  00119A                     
  1803                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  1804  00119A  0E01               	movlw	1
  1805  00119C  6E41               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  1806  00119E                     
  1807                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  1808  00119E  5038               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
  1809  0011A0  1039               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  1810  0011A2  B4D8               	btfsc	status,2,c
  1811  0011A4  EFD6  F008         	goto	u3691
  1812  0011A8  EFD8  F008         	goto	u3690
  1813  0011AC                     u3691:
  1814  0011AC  EFE7  F008         	goto	l4975
  1815  0011B0                     u3690:
  1816  0011B0  C038  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1817  0011B4  C039  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1818  0011B8  50DF               	movf	indf2,w,c
  1819  0011BA  0B07               	andlw	7
  1820  0011BC  6E3B               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1821  0011BE  0E07               	movlw	7
  1822  0011C0  643B               	cpfsgt	??_GPIO_Pin_Write_Logic^0,c
  1823  0011C2  EFE5  F008         	goto	u3701
  1824  0011C6  EFE7  F008         	goto	u3700
  1825  0011CA                     u3701:
  1826  0011CA  EF4A  F009         	goto	l4983
  1827  0011CE                     u3700:
  1828  0011CE                     l4975:
  1829                           
  1830                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  1831  0011CE  0E00               	movlw	0
  1832  0011D0  6E41               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  1833                           
  1834                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  1835  0011D2  EF5F  F009         	goto	l4985
  1836  0011D6                     l4977:
  1837                           
  1838                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  1839  0011D6  C038  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1840  0011DA  C039  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1841  0011DE  50DF               	movf	indf2,w,c
  1842  0011E0  0B07               	andlw	7
  1843  0011E2  6E3B               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1844  0011E4  0E01               	movlw	1
  1845  0011E6  6E3C               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1846  0011E8  2A3B               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1847  0011EA  EFF9  F008         	goto	u3714
  1848  0011EE                     u3715:
  1849  0011EE  90D8               	bcf	status,0,c
  1850  0011F0  363C               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1851  0011F2                     u3714:
  1852  0011F2  2E3B               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1853  0011F4  EFF7  F008         	goto	u3715
  1854  0011F8  503C               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1855  0011FA  0AFF               	xorlw	255
  1856  0011FC  6E3D               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1857  0011FE  C038  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1858  001202  C039  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1859  001206  30DF               	rrcf	indf2,w,c
  1860  001208  32E8               	rrcf	wreg,f,c
  1861  00120A  32E8               	rrcf	wreg,f,c
  1862  00120C  0B07               	andlw	7
  1863  00120E  6E3E               	movwf	(??_GPIO_Pin_Write_Logic+3)^0,c
  1864  001210  503E               	movf	(??_GPIO_Pin_Write_Logic+3)^0,w,c
  1865  001212  0D02               	mullw	2
  1866  001214  0E57               	movlw	low _lat_registers
  1867  001216  24F3               	addwf	243,w,c
  1868  001218  6ED9               	movwf	fsr2l,c
  1869  00121A  0E00               	movlw	high _lat_registers
  1870  00121C  20F4               	addwfc	prodh,w,c
  1871  00121E  6EDA               	movwf	fsr2h,c
  1872  001220  CFDE F03F          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  1873  001224  CFDD F040          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  1874  001228  C03F  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  1875  00122C  C040  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  1876  001230  503D               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1877  001232  16DF               	andwf	indf2,f,c
  1878                           
  1879                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  1880  001234  EF5F  F009         	goto	l4985
  1881  001238                     l4979:
  1882                           
  1883                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  1884  001238  C038  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1885  00123C  C039  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1886  001240  50DF               	movf	indf2,w,c
  1887  001242  0B07               	andlw	7
  1888  001244  6E3B               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1889  001246  0E01               	movlw	1
  1890  001248  6E3C               	movwf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1891  00124A  2A3B               	incf	??_GPIO_Pin_Write_Logic^0,f,c
  1892  00124C  EF2A  F009         	goto	u3724
  1893  001250                     u3725:
  1894  001250  90D8               	bcf	status,0,c
  1895  001252  363C               	rlcf	(??_GPIO_Pin_Write_Logic+1)^0,f,c
  1896  001254                     u3724:
  1897  001254  2E3B               	decfsz	??_GPIO_Pin_Write_Logic^0,f,c
  1898  001256  EF28  F009         	goto	u3725
  1899  00125A  C038  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  1900  00125E  C039  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  1901  001262  30DF               	rrcf	indf2,w,c
  1902  001264  32E8               	rrcf	wreg,f,c
  1903  001266  32E8               	rrcf	wreg,f,c
  1904  001268  0B07               	andlw	7
  1905  00126A  6E3D               	movwf	(??_GPIO_Pin_Write_Logic+2)^0,c
  1906  00126C  503D               	movf	(??_GPIO_Pin_Write_Logic+2)^0,w,c
  1907  00126E  0D02               	mullw	2
  1908  001270  0E57               	movlw	low _lat_registers
  1909  001272  24F3               	addwf	243,w,c
  1910  001274  6ED9               	movwf	fsr2l,c
  1911  001276  0E00               	movlw	high _lat_registers
  1912  001278  20F4               	addwfc	prodh,w,c
  1913  00127A  6EDA               	movwf	fsr2h,c
  1914  00127C  CFDE F03E          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  1915  001280  CFDD F03F          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  1916  001284  C03E  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  1917  001288  C03F  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  1918  00128C  503C               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1919  00128E  12DF               	iorwf	indf2,f,c
  1920                           
  1921                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  1922  001290  EF5F  F009         	goto	l4985
  1923  001294                     l4983:
  1924  001294  503A               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  1925  001296  6E3B               	movwf	??_GPIO_Pin_Write_Logic^0,c
  1926  001298  6A3C               	clrf	(??_GPIO_Pin_Write_Logic+1)^0,c
  1927                           
  1928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1929                           ; Switch size 1, requested type "simple"
  1930                           ; Number of cases is 1, Range of values is 0 to 0
  1931                           ; switch strategies available:
  1932                           ; Name         Instructions Cycles
  1933                           ; simple_byte            4     3 (average)
  1934                           ;	Chosen strategy is simple_byte
  1935  00129A  503C               	movf	(??_GPIO_Pin_Write_Logic+1)^0,w,c
  1936  00129C  0A00               	xorlw	0	; case 0
  1937  00129E  B4D8               	btfsc	status,2,c
  1938  0012A0  EF54  F009         	goto	l6511
  1939  0012A4  EFE7  F008         	goto	l4975
  1940  0012A8                     l6511:
  1941                           
  1942                           ; Switch size 1, requested type "simple"
  1943                           ; Number of cases is 2, Range of values is 0 to 1
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte            7     4 (average)
  1947                           ;	Chosen strategy is simple_byte
  1948  0012A8  503B               	movf	??_GPIO_Pin_Write_Logic^0,w,c
  1949  0012AA  0A00               	xorlw	0	; case 0
  1950  0012AC  B4D8               	btfsc	status,2,c
  1951  0012AE  EFEB  F008         	goto	l4977
  1952  0012B2  0A01               	xorlw	1	; case 1
  1953  0012B4  B4D8               	btfsc	status,2,c
  1954  0012B6  EF1C  F009         	goto	l4979
  1955  0012BA  EFE7  F008         	goto	l4975
  1956  0012BE                     l4985:
  1957                           
  1958                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  1959  0012BE  5041               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  1960  0012C0  0012               	return		;funcret
  1961  0012C2                     __end_of_GPIO_Pin_Write_Logic:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  1965 ;; Defined at:
  1966 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  1969 ;;		 -> pinc0(1), lcd1.lcd_data_pins(4), lcd1(6), CCP2_Obj(12), 
  1970 ;;		 -> CCP1_Obj(12), W2_W4_W6_Motor_Control.dc_motor(2), W2_W4_W6_Motor_Control(2), W1_W3_W5_Motor_Control.dc_motor(2),
      + 
  1971 ;;		 -> W1_W3_W5_Motor_Control(2), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  ERRORSTATUS     1   12[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      unsigned char 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:        9 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    4
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_GPIO_Pin_Initialize
  1994 ;;		_interrupt_RBx_pin_init
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text11
  1999  00105A                     __ptext11:
  2000                           	callstack 0
  2001  00105A                     _GPIO_Pin_Direction_Initialize:
  2002                           	callstack 23
  2003  00105A                     
  2004                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  2005  00105A  0E01               	movlw	1
  2006  00105C  6E40               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2007  00105E                     
  2008                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  2009  00105E  5038               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  2010  001060  1039               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  2011  001062  B4D8               	btfsc	status,2,c
  2012  001064  EF36  F008         	goto	u3751
  2013  001068  EF38  F008         	goto	u3750
  2014  00106C                     u3751:
  2015  00106C  EF47  F008         	goto	l5023
  2016  001070                     u3750:
  2017  001070  C038  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2018  001074  C039  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2019  001078  50DF               	movf	indf2,w,c
  2020  00107A  0B07               	andlw	7
  2021  00107C  6E3A               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2022  00107E  0E07               	movlw	7
  2023  001080  643A               	cpfsgt	??_GPIO_Pin_Direction_Initialize^0,c
  2024  001082  EF45  F008         	goto	u3761
  2025  001086  EF47  F008         	goto	u3760
  2026  00108A                     u3761:
  2027  00108A  EFAA  F008         	goto	l5031
  2028  00108E                     u3760:
  2029  00108E                     l5023:
  2030                           
  2031                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2032  00108E  0E00               	movlw	0
  2033  001090  6E40               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2034                           
  2035                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  2036  001092  EFCB  F008         	goto	l5033
  2037  001096                     l5025:
  2038                           
  2039                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  2040  001096  C038  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2041  00109A  C039  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2042  00109E  50DF               	movf	indf2,w,c
  2043  0010A0  0B07               	andlw	7
  2044  0010A2  6E3A               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2045  0010A4  0E01               	movlw	1
  2046  0010A6  6E3B               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2047  0010A8  2A3A               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  2048  0010AA  EF59  F008         	goto	u3774
  2049  0010AE                     u3775:
  2050  0010AE  90D8               	bcf	status,0,c
  2051  0010B0  363B               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  2052  0010B2                     u3774:
  2053  0010B2  2E3A               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  2054  0010B4  EF57  F008         	goto	u3775
  2055  0010B8  503B               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2056  0010BA  0AFF               	xorlw	255
  2057  0010BC  6E3C               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  2058  0010BE  C038  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2059  0010C2  C039  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2060  0010C6  30DF               	rrcf	indf2,w,c
  2061  0010C8  32E8               	rrcf	wreg,f,c
  2062  0010CA  32E8               	rrcf	wreg,f,c
  2063  0010CC  0B07               	andlw	7
  2064  0010CE  6E3D               	movwf	(??_GPIO_Pin_Direction_Initialize+3)^0,c
  2065  0010D0  503D               	movf	(??_GPIO_Pin_Direction_Initialize+3)^0,w,c
  2066  0010D2  0D02               	mullw	2
  2067  0010D4  0E61               	movlw	low _tris_registers
  2068  0010D6  24F3               	addwf	243,w,c
  2069  0010D8  6ED9               	movwf	fsr2l,c
  2070  0010DA  0E00               	movlw	high _tris_registers
  2071  0010DC  20F4               	addwfc	prodh,w,c
  2072  0010DE  6EDA               	movwf	fsr2h,c
  2073  0010E0  CFDE F03E          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  2074  0010E4  CFDD F03F          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  2075  0010E8  C03E  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  2076  0010EC  C03F  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  2077  0010F0  503C               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  2078  0010F2  16DF               	andwf	indf2,f,c
  2079                           
  2080                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  2081  0010F4  EFCB  F008         	goto	l5033
  2082  0010F8                     l5027:
  2083                           
  2084                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  2085  0010F8  C038  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2086  0010FC  C039  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2087  001100  50DF               	movf	indf2,w,c
  2088  001102  0B07               	andlw	7
  2089  001104  6E3A               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2090  001106  0E01               	movlw	1
  2091  001108  6E3B               	movwf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2092  00110A  2A3A               	incf	??_GPIO_Pin_Direction_Initialize^0,f,c
  2093  00110C  EF8A  F008         	goto	u3784
  2094  001110                     u3785:
  2095  001110  90D8               	bcf	status,0,c
  2096  001112  363B               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)^0,f,c
  2097  001114                     u3784:
  2098  001114  2E3A               	decfsz	??_GPIO_Pin_Direction_Initialize^0,f,c
  2099  001116  EF88  F008         	goto	u3785
  2100  00111A  C038  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2101  00111E  C039  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2102  001122  30DF               	rrcf	indf2,w,c
  2103  001124  32E8               	rrcf	wreg,f,c
  2104  001126  32E8               	rrcf	wreg,f,c
  2105  001128  0B07               	andlw	7
  2106  00112A  6E3C               	movwf	(??_GPIO_Pin_Direction_Initialize+2)^0,c
  2107  00112C  503C               	movf	(??_GPIO_Pin_Direction_Initialize+2)^0,w,c
  2108  00112E  0D02               	mullw	2
  2109  001130  0E61               	movlw	low _tris_registers
  2110  001132  24F3               	addwf	243,w,c
  2111  001134  6ED9               	movwf	fsr2l,c
  2112  001136  0E00               	movlw	high _tris_registers
  2113  001138  20F4               	addwfc	prodh,w,c
  2114  00113A  6EDA               	movwf	fsr2h,c
  2115  00113C  CFDE F03D          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  2116  001140  CFDD F03E          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  2117  001144  C03D  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  2118  001148  C03E  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  2119  00114C  503B               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2120  00114E  12DF               	iorwf	indf2,f,c
  2121                           
  2122                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  2123  001150  EFCB  F008         	goto	l5033
  2124  001154                     l5031:
  2125  001154  C038  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2126  001158  C039  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2127  00115C  BCDF               	btfsc	indf2,6,c
  2128  00115E  EFB3  F008         	goto	u3791
  2129  001162  EFB6  F008         	goto	u3790
  2130  001166                     u3791:
  2131  001166  0E01               	movlw	1
  2132  001168  EFB7  F008         	goto	u3800
  2133  00116C                     u3790:
  2134  00116C  0E00               	movlw	0
  2135  00116E                     u3800:
  2136  00116E  6E3A               	movwf	??_GPIO_Pin_Direction_Initialize^0,c
  2137  001170  6A3B               	clrf	(??_GPIO_Pin_Direction_Initialize+1)^0,c
  2138                           
  2139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 1, Range of values is 0 to 0
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte            4     3 (average)
  2145                           ;	Chosen strategy is simple_byte
  2146  001172  503B               	movf	(??_GPIO_Pin_Direction_Initialize+1)^0,w,c
  2147  001174  0A00               	xorlw	0	; case 0
  2148  001176  B4D8               	btfsc	status,2,c
  2149  001178  EFC0  F008         	goto	l6513
  2150  00117C  EF47  F008         	goto	l5023
  2151  001180                     l6513:
  2152                           
  2153                           ; Switch size 1, requested type "simple"
  2154                           ; Number of cases is 2, Range of values is 0 to 1
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte            7     4 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159  001180  503A               	movf	??_GPIO_Pin_Direction_Initialize^0,w,c
  2160  001182  0A00               	xorlw	0	; case 0
  2161  001184  B4D8               	btfsc	status,2,c
  2162  001186  EF4B  F008         	goto	l5025
  2163  00118A  0A01               	xorlw	1	; case 1
  2164  00118C  B4D8               	btfsc	status,2,c
  2165  00118E  EF7C  F008         	goto	l5027
  2166  001192  EF47  F008         	goto	l5023
  2167  001196                     l5033:
  2168                           
  2169                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  2170  001196  5040               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  2171  001198  0012               	return		;funcret
  2172  00119A                     __end_of_GPIO_Pin_Direction_Initialize:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  2176 ;; Defined at:
  2177 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  _pin_config     2    4[COMRAM] PTR const struct .
  2180 ;;		 -> pinc0(1), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  ERRORSTATUS     1    0        unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        8 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text12
  2207  0016EA                     __ptext12:
  2208                           	callstack 0
  2209  0016EA                     _GPIO_Pin_Toggle_Logic:
  2210                           	callstack 26
  2211  0016EA                     
  2212                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  2213  0016EA  5038               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  2214  0016EC  1039               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  2215  0016EE  A4D8               	btfss	status,2,c
  2216  0016F0  EF7C  F00B         	goto	u4331
  2217  0016F4  EF7E  F00B         	goto	u4330
  2218  0016F8                     u4331:
  2219  0016F8  EF80  F00B         	goto	l5523
  2220  0016FC                     u4330:
  2221  0016FC                     
  2222                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  2223  0016FC  EFAC  F00B         	goto	l882
  2224  001700                     l5523:
  2225                           
  2226                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  2227  001700  C038  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  2228  001704  C039  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  2229  001708  50DF               	movf	indf2,w,c
  2230  00170A  0B07               	andlw	7
  2231  00170C  6E3A               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
  2232  00170E  0E01               	movlw	1
  2233  001710  6E3B               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
  2234  001712  2A3A               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
  2235  001714  EF8E  F00B         	goto	u4344
  2236  001718                     u4345:
  2237  001718  90D8               	bcf	status,0,c
  2238  00171A  363B               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
  2239  00171C                     u4344:
  2240  00171C  2E3A               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
  2241  00171E  EF8C  F00B         	goto	u4345
  2242  001722  C038  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  2243  001726  C039  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  2244  00172A  30DF               	rrcf	indf2,w,c
  2245  00172C  32E8               	rrcf	wreg,f,c
  2246  00172E  32E8               	rrcf	wreg,f,c
  2247  001730  0B07               	andlw	7
  2248  001732  6E3C               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
  2249  001734  503C               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
  2250  001736  0D02               	mullw	2
  2251  001738  0E57               	movlw	low _lat_registers
  2252  00173A  24F3               	addwf	243,w,c
  2253  00173C  6ED9               	movwf	fsr2l,c
  2254  00173E  0E00               	movlw	high _lat_registers
  2255  001740  20F4               	addwfc	prodh,w,c
  2256  001742  6EDA               	movwf	fsr2h,c
  2257  001744  CFDE F03D          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  2258  001748  CFDD F03E          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  2259  00174C  C03D  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  2260  001750  C03E  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  2261  001754  503B               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
  2262  001756  1ADF               	xorwf	indf2,f,c
  2263  001758                     l882:
  2264  001758  0012               	return		;funcret
  2265  00175A                     __end_of_GPIO_Pin_Toggle_Logic:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _InterruptManagerLow *****************
  2269 ;; Defined at:
  2270 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;Total ram usage:        3 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    3
  2291 ;; This function calls:
  2292 ;;		_ADC_ISR
  2293 ;;		_INT1_ISR
  2294 ;;		_RB4_ISR
  2295 ;;		_RB5_ISR
  2296 ;;		_RB6_ISR
  2297 ;;		_RB7_ISR
  2298 ;; This function is called by:
  2299 ;;		Interrupt level 1
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	intcodelo
  2304  000018                     __pintcodelo:
  2305                           	callstack 0
  2306  000018                     _InterruptManagerLow:
  2307                           	callstack 22
  2308                           
  2309                           ;incstack = 0
  2310  000018  8079               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2311  00001A  CFD8 F035          	movff	status,??_InterruptManagerLow
  2312  00001E  CFE8 F036          	movff	wreg,??_InterruptManagerLow+1
  2313  000022  CFE0 F037          	movff	bsr,??_InterruptManagerLow+2
  2314  000026                     
  2315                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  2316  000026  A6F0               	btfss	240,3,c	;volatile
  2317  000028  EF18  F000         	goto	i1u279_21
  2318  00002C  EF1A  F000         	goto	i1u279_20
  2319  000030                     i1u279_21:
  2320  000030  EF23  F000         	goto	i1l1151
  2321  000034                     i1u279_20:
  2322  000034  A0F0               	btfss	240,0,c	;volatile
  2323  000036  EF1F  F000         	goto	i1u280_21
  2324  00003A  EF21  F000         	goto	i1u280_20
  2325  00003E                     i1u280_21:
  2326  00003E  EF23  F000         	goto	i1l1151
  2327  000042                     i1u280_20:
  2328  000042                     
  2329                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  2330  000042  ECF0  F00C         	call	_INT1_ISR	;wreg free
  2331  000046                     i1l1151:
  2332                           
  2333                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2334  000046  A6F2               	btfss	242,3,c	;volatile
  2335  000048  EF28  F000         	goto	i1u281_21
  2336  00004C  EF2A  F000         	goto	i1u281_20
  2337  000050                     i1u281_21:
  2338  000050  EF43  F000         	goto	i1l1153
  2339  000054                     i1u281_20:
  2340  000054  A0F2               	btfss	242,0,c	;volatile
  2341  000056  EF2F  F000         	goto	i1u282_21
  2342  00005A  EF31  F000         	goto	i1u282_20
  2343  00005E                     i1u282_21:
  2344  00005E  EF43  F000         	goto	i1l1153
  2345  000062                     i1u282_20:
  2346  000062  A881               	btfss	129,4,c	;volatile
  2347  000064  EF36  F000         	goto	i1u283_21
  2348  000068  EF38  F000         	goto	i1u283_20
  2349  00006C                     i1u283_21:
  2350  00006C  EF43  F000         	goto	i1l1153
  2351  000070                     i1u283_20:
  2352  000070  A06D               	btfss	_flags^0,0,c	;volatile
  2353  000072  EF3D  F000         	goto	i1u284_21
  2354  000076  EF3F  F000         	goto	i1u284_20
  2355  00007A                     i1u284_21:
  2356  00007A  EF43  F000         	goto	i1l1153
  2357  00007E                     i1u284_20:
  2358  00007E                     
  2359                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  2360  00007E  906D               	bcf	_flags^0,0,c	;volatile
  2361  000080                     
  2362                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  2363  000080  0E01               	movlw	1
  2364  000082  ECE3  F00C         	call	_RB4_ISR
  2365  000086                     i1l1153:
  2366                           
  2367                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2368  000086  A6F2               	btfss	242,3,c	;volatile
  2369  000088  EF48  F000         	goto	i1u285_21
  2370  00008C  EF4A  F000         	goto	i1u285_20
  2371  000090                     i1u285_21:
  2372  000090  EF63  F000         	goto	i1l1155
  2373  000094                     i1u285_20:
  2374  000094  A0F2               	btfss	242,0,c	;volatile
  2375  000096  EF4F  F000         	goto	i1u286_21
  2376  00009A  EF51  F000         	goto	i1u286_20
  2377  00009E                     i1u286_21:
  2378  00009E  EF63  F000         	goto	i1l1155
  2379  0000A2                     i1u286_20:
  2380  0000A2  B881               	btfsc	129,4,c	;volatile
  2381  0000A4  EF56  F000         	goto	i1u287_21
  2382  0000A8  EF58  F000         	goto	i1u287_20
  2383  0000AC                     i1u287_21:
  2384  0000AC  EF63  F000         	goto	i1l1155
  2385  0000B0                     i1u287_20:
  2386  0000B0  B06D               	btfsc	_flags^0,0,c	;volatile
  2387  0000B2  EF5D  F000         	goto	i1u288_21
  2388  0000B6  EF5F  F000         	goto	i1u288_20
  2389  0000BA                     i1u288_21:
  2390  0000BA  EF63  F000         	goto	i1l1155
  2391  0000BE                     i1u288_20:
  2392  0000BE                     
  2393                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  2394  0000BE  806D               	bsf	_flags^0,0,c	;volatile
  2395  0000C0                     
  2396                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  2397  0000C0  0E00               	movlw	0
  2398  0000C2  ECE3  F00C         	call	_RB4_ISR
  2399  0000C6                     i1l1155:
  2400                           
  2401                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2402  0000C6  A6F2               	btfss	242,3,c	;volatile
  2403  0000C8  EF68  F000         	goto	i1u289_21
  2404  0000CC  EF6A  F000         	goto	i1u289_20
  2405  0000D0                     i1u289_21:
  2406  0000D0  EF83  F000         	goto	i1l1157
  2407  0000D4                     i1u289_20:
  2408  0000D4  A0F2               	btfss	242,0,c	;volatile
  2409  0000D6  EF6F  F000         	goto	i1u290_21
  2410  0000DA  EF71  F000         	goto	i1u290_20
  2411  0000DE                     i1u290_21:
  2412  0000DE  EF83  F000         	goto	i1l1157
  2413  0000E2                     i1u290_20:
  2414  0000E2  AA81               	btfss	129,5,c	;volatile
  2415  0000E4  EF76  F000         	goto	i1u291_21
  2416  0000E8  EF78  F000         	goto	i1u291_20
  2417  0000EC                     i1u291_21:
  2418  0000EC  EF83  F000         	goto	i1l1157
  2419  0000F0                     i1u291_20:
  2420  0000F0  A26D               	btfss	_flags^0,1,c	;volatile
  2421  0000F2  EF7D  F000         	goto	i1u292_21
  2422  0000F6  EF7F  F000         	goto	i1u292_20
  2423  0000FA                     i1u292_21:
  2424  0000FA  EF83  F000         	goto	i1l1157
  2425  0000FE                     i1u292_20:
  2426  0000FE                     
  2427                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  2428  0000FE  926D               	bcf	_flags^0,1,c	;volatile
  2429  000100                     
  2430                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  2431  000100  0E01               	movlw	1
  2432  000102  ECD6  F00C         	call	_RB5_ISR
  2433  000106                     i1l1157:
  2434                           
  2435                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2436  000106  A6F2               	btfss	242,3,c	;volatile
  2437  000108  EF88  F000         	goto	i1u293_21
  2438  00010C  EF8A  F000         	goto	i1u293_20
  2439  000110                     i1u293_21:
  2440  000110  EFA3  F000         	goto	i1l1159
  2441  000114                     i1u293_20:
  2442  000114  A0F2               	btfss	242,0,c	;volatile
  2443  000116  EF8F  F000         	goto	i1u294_21
  2444  00011A  EF91  F000         	goto	i1u294_20
  2445  00011E                     i1u294_21:
  2446  00011E  EFA3  F000         	goto	i1l1159
  2447  000122                     i1u294_20:
  2448  000122  BA81               	btfsc	129,5,c	;volatile
  2449  000124  EF96  F000         	goto	i1u295_21
  2450  000128  EF98  F000         	goto	i1u295_20
  2451  00012C                     i1u295_21:
  2452  00012C  EFA3  F000         	goto	i1l1159
  2453  000130                     i1u295_20:
  2454  000130  B26D               	btfsc	_flags^0,1,c	;volatile
  2455  000132  EF9D  F000         	goto	i1u296_21
  2456  000136  EF9F  F000         	goto	i1u296_20
  2457  00013A                     i1u296_21:
  2458  00013A  EFA3  F000         	goto	i1l1159
  2459  00013E                     i1u296_20:
  2460  00013E                     
  2461                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  2462  00013E  826D               	bsf	_flags^0,1,c	;volatile
  2463  000140                     
  2464                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  2465  000140  0E00               	movlw	0
  2466  000142  ECD6  F00C         	call	_RB5_ISR
  2467  000146                     i1l1159:
  2468                           
  2469                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2470  000146  A6F2               	btfss	242,3,c	;volatile
  2471  000148  EFA8  F000         	goto	i1u297_21
  2472  00014C  EFAA  F000         	goto	i1u297_20
  2473  000150                     i1u297_21:
  2474  000150  EFC3  F000         	goto	i1l1161
  2475  000154                     i1u297_20:
  2476  000154  A0F2               	btfss	242,0,c	;volatile
  2477  000156  EFAF  F000         	goto	i1u298_21
  2478  00015A  EFB1  F000         	goto	i1u298_20
  2479  00015E                     i1u298_21:
  2480  00015E  EFC3  F000         	goto	i1l1161
  2481  000162                     i1u298_20:
  2482  000162  AC81               	btfss	129,6,c	;volatile
  2483  000164  EFB6  F000         	goto	i1u299_21
  2484  000168  EFB8  F000         	goto	i1u299_20
  2485  00016C                     i1u299_21:
  2486  00016C  EFC3  F000         	goto	i1l1161
  2487  000170                     i1u299_20:
  2488  000170  A46D               	btfss	_flags^0,2,c	;volatile
  2489  000172  EFBD  F000         	goto	i1u300_21
  2490  000176  EFBF  F000         	goto	i1u300_20
  2491  00017A                     i1u300_21:
  2492  00017A  EFC3  F000         	goto	i1l1161
  2493  00017E                     i1u300_20:
  2494  00017E                     
  2495                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  2496  00017E  946D               	bcf	_flags^0,2,c	;volatile
  2497  000180                     
  2498                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  2499  000180  0E01               	movlw	1
  2500  000182  ECC9  F00C         	call	_RB6_ISR
  2501  000186                     i1l1161:
  2502                           
  2503                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2504  000186  A6F2               	btfss	242,3,c	;volatile
  2505  000188  EFC8  F000         	goto	i1u301_21
  2506  00018C  EFCA  F000         	goto	i1u301_20
  2507  000190                     i1u301_21:
  2508  000190  EFE3  F000         	goto	i1l1163
  2509  000194                     i1u301_20:
  2510  000194  A0F2               	btfss	242,0,c	;volatile
  2511  000196  EFCF  F000         	goto	i1u302_21
  2512  00019A  EFD1  F000         	goto	i1u302_20
  2513  00019E                     i1u302_21:
  2514  00019E  EFE3  F000         	goto	i1l1163
  2515  0001A2                     i1u302_20:
  2516  0001A2  BC81               	btfsc	129,6,c	;volatile
  2517  0001A4  EFD6  F000         	goto	i1u303_21
  2518  0001A8  EFD8  F000         	goto	i1u303_20
  2519  0001AC                     i1u303_21:
  2520  0001AC  EFE3  F000         	goto	i1l1163
  2521  0001B0                     i1u303_20:
  2522  0001B0  B46D               	btfsc	_flags^0,2,c	;volatile
  2523  0001B2  EFDD  F000         	goto	i1u304_21
  2524  0001B6  EFDF  F000         	goto	i1u304_20
  2525  0001BA                     i1u304_21:
  2526  0001BA  EFE3  F000         	goto	i1l1163
  2527  0001BE                     i1u304_20:
  2528  0001BE                     
  2529                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  2530  0001BE  846D               	bsf	_flags^0,2,c	;volatile
  2531  0001C0                     
  2532                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  2533  0001C0  0E00               	movlw	0
  2534  0001C2  ECC9  F00C         	call	_RB6_ISR
  2535  0001C6                     i1l1163:
  2536                           
  2537                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2538  0001C6  A6F2               	btfss	242,3,c	;volatile
  2539  0001C8  EFE8  F000         	goto	i1u305_21
  2540  0001CC  EFEA  F000         	goto	i1u305_20
  2541  0001D0                     i1u305_21:
  2542  0001D0  EF03  F001         	goto	i1l1165
  2543  0001D4                     i1u305_20:
  2544  0001D4  A0F2               	btfss	242,0,c	;volatile
  2545  0001D6  EFEF  F000         	goto	i1u306_21
  2546  0001DA  EFF1  F000         	goto	i1u306_20
  2547  0001DE                     i1u306_21:
  2548  0001DE  EF03  F001         	goto	i1l1165
  2549  0001E2                     i1u306_20:
  2550  0001E2  AE81               	btfss	129,7,c	;volatile
  2551  0001E4  EFF6  F000         	goto	i1u307_21
  2552  0001E8  EFF8  F000         	goto	i1u307_20
  2553  0001EC                     i1u307_21:
  2554  0001EC  EF03  F001         	goto	i1l1165
  2555  0001F0                     i1u307_20:
  2556  0001F0  A66D               	btfss	_flags^0,3,c	;volatile
  2557  0001F2  EFFD  F000         	goto	i1u308_21
  2558  0001F6  EFFF  F000         	goto	i1u308_20
  2559  0001FA                     i1u308_21:
  2560  0001FA  EF03  F001         	goto	i1l1165
  2561  0001FE                     i1u308_20:
  2562  0001FE                     
  2563                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  2564  0001FE  966D               	bcf	_flags^0,3,c	;volatile
  2565  000200                     
  2566                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  2567  000200  0E01               	movlw	1
  2568  000202  ECBC  F00C         	call	_RB7_ISR
  2569  000206                     i1l1165:
  2570                           
  2571                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  2572  000206  A6F2               	btfss	242,3,c	;volatile
  2573  000208  EF08  F001         	goto	i1u309_21
  2574  00020C  EF0A  F001         	goto	i1u309_20
  2575  000210                     i1u309_21:
  2576  000210  EF23  F001         	goto	i1l1167
  2577  000214                     i1u309_20:
  2578  000214  A0F2               	btfss	242,0,c	;volatile
  2579  000216  EF0F  F001         	goto	i1u310_21
  2580  00021A  EF11  F001         	goto	i1u310_20
  2581  00021E                     i1u310_21:
  2582  00021E  EF23  F001         	goto	i1l1167
  2583  000222                     i1u310_20:
  2584  000222  BE81               	btfsc	129,7,c	;volatile
  2585  000224  EF16  F001         	goto	i1u311_21
  2586  000228  EF18  F001         	goto	i1u311_20
  2587  00022C                     i1u311_21:
  2588  00022C  EF23  F001         	goto	i1l1167
  2589  000230                     i1u311_20:
  2590  000230  B66D               	btfsc	_flags^0,3,c	;volatile
  2591  000232  EF1D  F001         	goto	i1u312_21
  2592  000236  EF1F  F001         	goto	i1u312_20
  2593  00023A                     i1u312_21:
  2594  00023A  EF23  F001         	goto	i1l1167
  2595  00023E                     i1u312_20:
  2596  00023E                     
  2597                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  2598  00023E  866D               	bsf	_flags^0,3,c	;volatile
  2599  000240                     
  2600                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  2601  000240  0E00               	movlw	0
  2602  000242  ECBC  F00C         	call	_RB7_ISR
  2603  000246                     i1l1167:
  2604                           
  2605                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  2606  000246  AC9D               	btfss	157,6,c	;volatile
  2607  000248  EF28  F001         	goto	i1u313_21
  2608  00024C  EF2A  F001         	goto	i1u313_20
  2609  000250                     i1u313_21:
  2610  000250  EF33  F001         	goto	i1l1169
  2611  000254                     i1u313_20:
  2612  000254  AC9E               	btfss	158,6,c	;volatile
  2613  000256  EF2F  F001         	goto	i1u314_21
  2614  00025A  EF31  F001         	goto	i1u314_20
  2615  00025E                     i1u314_21:
  2616  00025E  EF33  F001         	goto	i1l1169
  2617  000262                     i1u314_20:
  2618  000262                     
  2619                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
  2620  000262  ECF2  F00C         	call	_ADC_ISR	;wreg free
  2621  000266                     i1l1169:
  2622                           
  2623                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  2624  000266  A09D               	btfss	157,0,c	;volatile
  2625  000268  EF38  F001         	goto	i1u315_21
  2626  00026C  EF3A  F001         	goto	i1u315_20
  2627  000270                     i1u315_21:
  2628  000270  EF3B  F001         	goto	i1l1172
  2629  000274                     i1u315_20:
  2630  000274  509E               	movf	158,w,c	;volatile
  2631  000276                     i1l1172:
  2632  000276  C037  FFE0         	movff	??_InterruptManagerLow+2,bsr
  2633  00027A  C036  FFE8         	movff	??_InterruptManagerLow+1,wreg
  2634  00027E  C035  FFD8         	movff	??_InterruptManagerLow,status
  2635  000282  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2636  000284  0010               	retfie	
  2637  000286                     __end_of_InterruptManagerLow:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _RB7_ISR *****************
  2641 ;; Defined at:
  2642 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  Handler_Sele    1    wreg     unsigned char 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;Total ram usage:        1 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    2
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_InterruptManagerLow
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text14
  2671  001978                     __ptext14:
  2672                           	callstack 0
  2673  001978                     _RB7_ISR:
  2674                           	callstack 22
  2675                           
  2676                           ;incstack = 0
  2677                           ;RB7_ISR@Handler_Select stored from wreg
  2678  001978  6E34               	movwf	RB7_ISR@Handler_Select^0,c
  2679  00197A                     
  2680                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  2681  00197A  90F2               	bcf	242,0,c	;volatile
  2682  00197C                     
  2683                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  2684  00197C  5034               	movf	RB7_ISR@Handler_Select^0,w,c
  2685  00197E  B4D8               	btfsc	status,2,c
  2686  001980  EFC4  F00C         	goto	i1u101_21
  2687  001984  EFC6  F00C         	goto	i1u101_20
  2688  001988                     i1u101_21:
  2689  001988  EFC8  F00C         	goto	i1l3133
  2690  00198C                     i1u101_20:
  2691  00198C  EFC8  F00C         	goto	i1l1278
  2692  001990                     i1l3133:
  2693  001990                     i1l1278:
  2694  001990  0012               	return		;funcret
  2695  001992                     __end_of_RB7_ISR:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _RB6_ISR *****************
  2699 ;; Defined at:
  2700 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  Handler_Sele    1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;Total ram usage:        1 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_InterruptManagerLow
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text15
  2729  001992                     __ptext15:
  2730                           	callstack 0
  2731  001992                     _RB6_ISR:
  2732                           	callstack 22
  2733                           
  2734                           ;incstack = 0
  2735                           ;RB6_ISR@Handler_Select stored from wreg
  2736  001992  6E34               	movwf	RB6_ISR@Handler_Select^0,c
  2737  001994                     
  2738                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  2739  001994  90F2               	bcf	242,0,c	;volatile
  2740  001996                     
  2741                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  2742  001996  5034               	movf	RB6_ISR@Handler_Select^0,w,c
  2743  001998  B4D8               	btfsc	status,2,c
  2744  00199A  EFD1  F00C         	goto	i1u100_21
  2745  00199E  EFD3  F00C         	goto	i1u100_20
  2746  0019A2                     i1u100_21:
  2747  0019A2  EFD5  F00C         	goto	i1l3123
  2748  0019A6                     i1u100_20:
  2749  0019A6  EFD5  F00C         	goto	i1l1269
  2750  0019AA                     i1l3123:
  2751  0019AA                     i1l1269:
  2752  0019AA  0012               	return		;funcret
  2753  0019AC                     __end_of_RB6_ISR:
  2754                           	callstack 0
  2755                           
  2756 ;; *************** function _RB5_ISR *****************
  2757 ;; Defined at:
  2758 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  Handler_Sele    1    wreg     unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:        1 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    2
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_InterruptManagerLow
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text16
  2787  0019AC                     __ptext16:
  2788                           	callstack 0
  2789  0019AC                     _RB5_ISR:
  2790                           	callstack 22
  2791                           
  2792                           ;incstack = 0
  2793                           ;RB5_ISR@Handler_Select stored from wreg
  2794  0019AC  6E34               	movwf	RB5_ISR@Handler_Select^0,c
  2795  0019AE                     
  2796                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  2797  0019AE  90F2               	bcf	242,0,c	;volatile
  2798  0019B0                     
  2799                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  2800  0019B0  5034               	movf	RB5_ISR@Handler_Select^0,w,c
  2801  0019B2  B4D8               	btfsc	status,2,c
  2802  0019B4  EFDE  F00C         	goto	i1u99_21
  2803  0019B8  EFE0  F00C         	goto	i1u99_20
  2804  0019BC                     i1u99_21:
  2805  0019BC  EFE2  F00C         	goto	i1l3113
  2806  0019C0                     i1u99_20:
  2807  0019C0  EFE2  F00C         	goto	i1l1260
  2808  0019C4                     i1l3113:
  2809  0019C4                     i1l1260:
  2810  0019C4  0012               	return		;funcret
  2811  0019C6                     __end_of_RB5_ISR:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _RB4_ISR *****************
  2815 ;; Defined at:
  2816 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  Handler_Sele    1    wreg     unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  Handler_Sele    1    0[COMRAM] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_InterruptManagerLow
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text17
  2845  0019C6                     __ptext17:
  2846                           	callstack 0
  2847  0019C6                     _RB4_ISR:
  2848                           	callstack 22
  2849                           
  2850                           ;incstack = 0
  2851                           ;RB4_ISR@Handler_Select stored from wreg
  2852  0019C6  6E34               	movwf	RB4_ISR@Handler_Select^0,c
  2853  0019C8                     
  2854                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  2855  0019C8  90F2               	bcf	242,0,c	;volatile
  2856  0019CA                     
  2857                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  2858  0019CA  5034               	movf	RB4_ISR@Handler_Select^0,w,c
  2859  0019CC  B4D8               	btfsc	status,2,c
  2860  0019CE  EFEB  F00C         	goto	i1u98_21
  2861  0019D2  EFED  F00C         	goto	i1u98_20
  2862  0019D6                     i1u98_21:
  2863  0019D6  EFEF  F00C         	goto	i1l3103
  2864  0019DA                     i1u98_20:
  2865  0019DA  EFEF  F00C         	goto	i1l1251
  2866  0019DE                     i1l3103:
  2867  0019DE                     i1l1251:
  2868  0019DE  0012               	return		;funcret
  2869  0019E0                     __end_of_RB4_ISR:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _INT1_ISR *****************
  2873 ;; Defined at:
  2874 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		None
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    2
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_InterruptManagerLow
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text18
  2903  0019E0                     __ptext18:
  2904                           	callstack 0
  2905  0019E0                     _INT1_ISR:
  2906                           	callstack 22
  2907  0019E0                     
  2908                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  2909  0019E0  90F0               	bcf	240,0,c	;volatile
  2910  0019E2  0012               	return		;funcret
  2911  0019E4                     __end_of_INT1_ISR:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _ADC_ISR *****************
  2915 ;; Defined at:
  2916 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		None
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_InterruptManagerLow
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text19
  2945  0019E4                     __ptext19:
  2946                           	callstack 0
  2947  0019E4                     _ADC_ISR:
  2948                           	callstack 22
  2949  0019E4  0012               	return		;funcret
  2950  0019E6                     __end_of_ADC_ISR:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _InterruptManagerHigh *****************
  2954 ;; Defined at:
  2955 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		_EUSART_Rx_ISR
  2978 ;;		_EUSART_Tx_ISR
  2979 ;;		_TMR0_ISR
  2980 ;; This function is called by:
  2981 ;;		Interrupt level 2
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	intcode
  2986  000008                     __pintcode:
  2987                           	callstack 0
  2988  000008                     _InterruptManagerHigh:
  2989                           	callstack 22
  2990                           
  2991                           ;incstack = 0
  2992  000008  8279               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2993  00000A  EDED  F009         	call	int_func,f	;refresh shadow registers
  2994                           
  2995                           	psect	intcode_body
  2996  0013DA                     __pintcode_body:
  2997                           	callstack 22
  2998  0013DA                     int_func:
  2999                           	callstack 22
  3000  0013DA  0006               	pop		; remove dummy address from shadow register refresh
  3001  0013DC                     
  3002                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  3003  0013DC  AAF2               	btfss	242,5,c	;volatile
  3004  0013DE  EFF3  F009         	goto	i2u268_41
  3005  0013E2  EFF5  F009         	goto	i2u268_40
  3006  0013E6                     i2u268_41:
  3007  0013E6  EFFE  F009         	goto	i2l1130
  3008  0013EA                     i2u268_40:
  3009  0013EA  A4F2               	btfss	242,2,c	;volatile
  3010  0013EC  EFFA  F009         	goto	i2u269_41
  3011  0013F0  EFFC  F009         	goto	i2u269_40
  3012  0013F4                     i2u269_41:
  3013  0013F4  EFFE  F009         	goto	i2l1130
  3014  0013F8                     i2u269_40:
  3015  0013F8                     
  3016                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  3017  0013F8  ECF3  F00C         	call	_TMR0_ISR	;wreg free
  3018  0013FC                     i2l1130:
  3019                           
  3020                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  3021  0013FC  A29D               	btfss	157,1,c	;volatile
  3022  0013FE  EF03  F00A         	goto	i2u270_41
  3023  001402  EF05  F00A         	goto	i2u270_40
  3024  001406                     i2u270_41:
  3025  001406  EF06  F00A         	goto	i2l1132
  3026  00140A                     i2u270_40:
  3027  00140A  509E               	movf	158,w,c	;volatile
  3028  00140C                     i2l1132:
  3029                           
  3030                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  3031  00140C  A2A0               	btfss	160,1,c	;volatile
  3032  00140E  EF0B  F00A         	goto	i2u271_41
  3033  001412  EF0D  F00A         	goto	i2u271_40
  3034  001416                     i2u271_41:
  3035  001416  EF0E  F00A         	goto	i2l1134
  3036  00141A                     i2u271_40:
  3037  00141A  50A1               	movf	161,w,c	;volatile
  3038  00141C                     i2l1134:
  3039                           
  3040                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  3041  00141C  A0A0               	btfss	160,0,c	;volatile
  3042  00141E  EF13  F00A         	goto	i2u272_41
  3043  001422  EF15  F00A         	goto	i2u272_40
  3044  001426                     i2u272_41:
  3045  001426  EF16  F00A         	goto	i2l1136
  3046  00142A                     i2u272_40:
  3047  00142A  50A1               	movf	161,w,c	;volatile
  3048  00142C                     i2l1136:
  3049                           
  3050                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  3051  00142C  AA9D               	btfss	157,5,c	;volatile
  3052  00142E  EF1B  F00A         	goto	i2u273_41
  3053  001432  EF1D  F00A         	goto	i2u273_40
  3054  001436                     i2u273_41:
  3055  001436  EF26  F00A         	goto	i2l1138
  3056  00143A                     i2u273_40:
  3057  00143A  AA9E               	btfss	158,5,c	;volatile
  3058  00143C  EF22  F00A         	goto	i2u274_41
  3059  001440  EF24  F00A         	goto	i2u274_40
  3060  001444                     i2u274_41:
  3061  001444  EF26  F00A         	goto	i2l1138
  3062  001448                     i2u274_40:
  3063  001448                     
  3064                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  3065  001448  ECF5  F00C         	call	_EUSART_Rx_ISR	;wreg free
  3066  00144C                     i2l1138:
  3067                           
  3068                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  3069  00144C  A89D               	btfss	157,4,c	;volatile
  3070  00144E  EF2B  F00A         	goto	i2u275_41
  3071  001452  EF2D  F00A         	goto	i2u275_40
  3072  001456                     i2u275_41:
  3073  001456  EF36  F00A         	goto	i2l1140
  3074  00145A                     i2u275_40:
  3075  00145A  A89E               	btfss	158,4,c	;volatile
  3076  00145C  EF32  F00A         	goto	i2u276_41
  3077  001460  EF34  F00A         	goto	i2u276_40
  3078  001464                     i2u276_41:
  3079  001464  EF36  F00A         	goto	i2l1140
  3080  001468                     i2u276_40:
  3081  001468                     
  3082                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  3083  001468  ECF4  F00C         	call	_EUSART_Tx_ISR	;wreg free
  3084  00146C                     i2l1140:
  3085                           
  3086                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  3087  00146C  A6A0               	btfss	160,3,c	;volatile
  3088  00146E  EF3B  F00A         	goto	i2u277_41
  3089  001472  EF3D  F00A         	goto	i2u277_40
  3090  001476                     i2u277_41:
  3091  001476  EF3E  F00A         	goto	i2l1142
  3092  00147A                     i2u277_40:
  3093  00147A  50A1               	movf	161,w,c	;volatile
  3094  00147C                     i2l1142:
  3095                           
  3096                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  3097  00147C  A69D               	btfss	157,3,c	;volatile
  3098  00147E  EF43  F00A         	goto	i2u278_41
  3099  001482  EF45  F00A         	goto	i2u278_40
  3100  001486                     i2u278_41:
  3101  001486  EF46  F00A         	goto	i2l1145
  3102  00148A                     i2u278_40:
  3103  00148A  509E               	movf	158,w,c	;volatile
  3104  00148C                     i2l1145:
  3105  00148C  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3106  00148E  0011               	retfie		f
  3107  001490                     __end_of_InterruptManagerHigh:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _TMR0_ISR *****************
  3111 ;; Defined at:
  3112 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		None
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_InterruptManagerHigh
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text21
  3140  0019E6                     __ptext21:
  3141                           	callstack 0
  3142  0019E6                     _TMR0_ISR:
  3143                           	callstack 22
  3144  0019E6  0012               	return		;funcret
  3145  0019E8                     __end_of_TMR0_ISR:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _EUSART_Tx_ISR *****************
  3149 ;; Defined at:
  3150 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		None
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_InterruptManagerHigh
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text22
  3178  0019E8                     __ptext22:
  3179                           	callstack 0
  3180  0019E8                     _EUSART_Tx_ISR:
  3181                           	callstack 22
  3182  0019E8  0012               	return		;funcret
  3183  0019EA                     __end_of_EUSART_Tx_ISR:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _EUSART_Rx_ISR *****************
  3187 ;; Defined at:
  3188 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_InterruptManagerHigh
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text23
  3216  0019EA                     __ptext23:
  3217                           	callstack 0
  3218  0019EA                     _EUSART_Rx_ISR:
  3219                           	callstack 22
  3220  0019EA  0012               	return		;funcret
  3221  0019EC                     __end_of_EUSART_Rx_ISR:
  3222                           	callstack 0
  3223                           
  3224                           	psect	rparam
  3225  0000                     
  3226                           	psect	temp
  3227  000079                     btemp:
  3228                           	callstack 0
  3229  000079                     	ds	1
  3230  0000                     int$flags	set	btemp
  3231  0000                     wtemp8	set	btemp+1
  3232  0000                     ttemp5	set	btemp+1
  3233  0000                     ttemp6	set	btemp+4
  3234  0000                     ttemp7	set	btemp+8
  3235                           
  3236                           	psect	idloc
  3237                           
  3238                           ;Config register IDLOC0 @ 0x200000
  3239                           ;	unspecified, using default values
  3240  200000                     	org	2097152
  3241  200000  FF                 	db	255
  3242                           
  3243                           ;Config register IDLOC1 @ 0x200001
  3244                           ;	unspecified, using default values
  3245  200001                     	org	2097153
  3246  200001  FF                 	db	255
  3247                           
  3248                           ;Config register IDLOC2 @ 0x200002
  3249                           ;	unspecified, using default values
  3250  200002                     	org	2097154
  3251  200002  FF                 	db	255
  3252                           
  3253                           ;Config register IDLOC3 @ 0x200003
  3254                           ;	unspecified, using default values
  3255  200003                     	org	2097155
  3256  200003  FF                 	db	255
  3257                           
  3258                           ;Config register IDLOC4 @ 0x200004
  3259                           ;	unspecified, using default values
  3260  200004                     	org	2097156
  3261  200004  FF                 	db	255
  3262                           
  3263                           ;Config register IDLOC5 @ 0x200005
  3264                           ;	unspecified, using default values
  3265  200005                     	org	2097157
  3266  200005  FF                 	db	255
  3267                           
  3268                           ;Config register IDLOC6 @ 0x200006
  3269                           ;	unspecified, using default values
  3270  200006                     	org	2097158
  3271  200006  FF                 	db	255
  3272                           
  3273                           ;Config register IDLOC7 @ 0x200007
  3274                           ;	unspecified, using default values
  3275  200007                     	org	2097159
  3276  200007  FF                 	db	255
  3277                           
  3278                           	psect	config
  3279                           
  3280                           ; Padding undefined space
  3281  300000                     	org	3145728
  3282  300000  FF                 	db	255
  3283                           
  3284                           ;Config register CONFIG1H @ 0x300001
  3285                           ;	Oscillator Selection bits
  3286                           ;	OSC = HS, HS oscillator
  3287                           ;	Fail-Safe Clock Monitor Enable bit
  3288                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3289                           ;	Internal/External Oscillator Switchover bit
  3290                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3291  300001                     	org	3145729
  3292  300001  02                 	db	2
  3293                           
  3294                           ;Config register CONFIG2L @ 0x300002
  3295                           ;	Power-up Timer Enable bit
  3296                           ;	PWRT = OFF, PWRT disabled
  3297                           ;	Brown-out Reset Enable bits
  3298                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3299                           ;	Brown Out Reset Voltage bits
  3300                           ;	BORV = 1, 
  3301  300002                     	org	3145730
  3302  300002  09                 	db	9
  3303                           
  3304                           ;Config register CONFIG2H @ 0x300003
  3305                           ;	Watchdog Timer Enable bit
  3306                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3307                           ;	Watchdog Timer Postscale Select bits
  3308                           ;	WDTPS = 512, 1:512
  3309  300003                     	org	3145731
  3310  300003  12                 	db	18
  3311                           
  3312                           ; Padding undefined space
  3313  300004                     	org	3145732
  3314  300004  FF                 	db	255
  3315                           
  3316                           ;Config register CONFIG3H @ 0x300005
  3317                           ;	CCP2 MUX bit
  3318                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3319                           ;	PORTB A/D Enable bit
  3320                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3321                           ;	Low-Power Timer1 Oscillator Enable bit
  3322                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3323                           ;	MCLR Pin Enable bit
  3324                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3325  300005                     	org	3145733
  3326  300005  81                 	db	129
  3327                           
  3328                           ;Config register CONFIG4L @ 0x300006
  3329                           ;	Stack Full/Underflow Reset Enable bit
  3330                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3331                           ;	Single-Supply ICSP Enable bit
  3332                           ;	LVP = OFF, Single-Supply ICSP disabled
  3333                           ;	Extended Instruction Set Enable bit
  3334                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3335                           ;	Background Debugger Enable bit
  3336                           ;	DEBUG = 0x1, unprogrammed default
  3337  300006                     	org	3145734
  3338  300006  81                 	db	129
  3339                           
  3340                           ; Padding undefined space
  3341  300007                     	org	3145735
  3342  300007  FF                 	db	255
  3343                           
  3344                           ;Config register CONFIG5L @ 0x300008
  3345                           ;	Code Protection bit
  3346                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3347                           ;	Code Protection bit
  3348                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3349                           ;	Code Protection bit
  3350                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3351                           ;	Code Protection bit
  3352                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3353  300008                     	org	3145736
  3354  300008  0F                 	db	15
  3355                           
  3356                           ;Config register CONFIG5H @ 0x300009
  3357                           ;	Boot Block Code Protection bit
  3358                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3359                           ;	Data EEPROM Code Protection bit
  3360                           ;	CPD = OFF, Data EEPROM not code-protected
  3361  300009                     	org	3145737
  3362  300009  C0                 	db	192
  3363                           
  3364                           ;Config register CONFIG6L @ 0x30000A
  3365                           ;	Write Protection bit
  3366                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3367                           ;	Write Protection bit
  3368                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3369                           ;	Write Protection bit
  3370                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3371                           ;	Write Protection bit
  3372                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3373  30000A                     	org	3145738
  3374  30000A  0F                 	db	15
  3375                           
  3376                           ;Config register CONFIG6H @ 0x30000B
  3377                           ;	Configuration Register Write Protection bit
  3378                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3379                           ;	Boot Block Write Protection bit
  3380                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3381                           ;	Data EEPROM Write Protection bit
  3382                           ;	WRTD = OFF, Data EEPROM not write-protected
  3383  30000B                     	org	3145739
  3384  30000B  E0                 	db	224
  3385                           
  3386                           ;Config register CONFIG7L @ 0x30000C
  3387                           ;	Table Read Protection bit
  3388                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3389                           ;	Table Read Protection bit
  3390                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3391                           ;	Table Read Protection bit
  3392                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3393                           ;	Table Read Protection bit
  3394                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3395  30000C                     	org	3145740
  3396  30000C  0F                 	db	15
  3397                           
  3398                           ;Config register CONFIG7H @ 0x30000D
  3399                           ;	Boot Block Table Read Protection bit
  3400                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3401  30000D                     	org	3145741
  3402  30000D  40                 	db	64
  3403                           tosu	equ	0xFFF
  3404                           tosh	equ	0xFFE
  3405                           tosl	equ	0xFFD
  3406                           stkptr	equ	0xFFC
  3407                           pclatu	equ	0xFFB
  3408                           pclath	equ	0xFFA
  3409                           pcl	equ	0xFF9
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           indf0	equ	0xFEF
  3417                           postinc0	equ	0xFEE
  3418                           postdec0	equ	0xFED
  3419                           preinc0	equ	0xFEC
  3420                           plusw0	equ	0xFEB
  3421                           fsr0h	equ	0xFEA
  3422                           fsr0l	equ	0xFE9
  3423                           wreg	equ	0xFE8
  3424                           indf1	equ	0xFE7
  3425                           postinc1	equ	0xFE6
  3426                           postdec1	equ	0xFE5
  3427                           preinc1	equ	0xFE4
  3428                           plusw1	equ	0xFE3
  3429                           fsr1h	equ	0xFE2
  3430                           fsr1l	equ	0xFE1
  3431                           bsr	equ	0xFE0
  3432                           indf2	equ	0xFDF
  3433                           postinc2	equ	0xFDE
  3434                           postdec2	equ	0xFDD
  3435                           preinc2	equ	0xFDC
  3436                           plusw2	equ	0xFDB
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8

Data Sizes:
    Strings     88
    Constant    0
    Data        68
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36     121
    BANK0           128      2      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    Timer2_Init$0	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK0[12]), CCP1_Obj(BANK0[12]), 

    S4715_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 9
		 -> convert_float32_to_string@temp_string(COMRAM[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> convert_float32_to_string@temp_string(COMRAM[9]), convert_uint16_to_string@temp_string(COMRAM[6]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3218$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3218$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3171$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S527$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S527$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[12]), 
		 -> CCP1_Obj(BANK0[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pinc0(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[12]), 
		 -> CCP1_Obj(BANK0[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> pinc0(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), lcd1(COMRAM[6]), CCP2_Obj(BANK0[12]), 
		 -> CCP1_Obj(BANK0[12]), W2_W4_W6_Motor_Control.dc_motor(COMRAM[2]), W2_W4_W6_Motor_Control(COMRAM[2]), W1_W3_W5_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W3_W5_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), TRISE(SFR[1]), 
		 -> TRISA(SFR[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[15]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_string_data_pos
    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   60200
                                              0 BANK0      2     2      0
              _GPIO_Pin_Toggle_Logic
               _GPIO_Pin_Write_Logic
              _application_intialize
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   30250
                                             29 COMRAM     7     1      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   15687
                                             22 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   13466
                                             18 COMRAM     4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   25973
                _GPIO_Pin_Initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   20713
                                             22 COMRAM     6     4      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   15002
                                             18 COMRAM     4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    4641
                                             14 COMRAM     4     1      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    4205
                                             14 COMRAM     3     1      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    5260
                                             14 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    3827
                                              4 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     331
                                              4 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     150
                                              4 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManagerLow                                  3     3      0     120
                                              1 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptManagerHigh                                 0     0      0       0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Tx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Rx_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPIO_Pin_Write_Logic
   _application_intialize
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
         _GPIO_Pin_Write_Logic
       _lcd_send_4bits
         _GPIO_Pin_Write_Logic
     _lcd_4bits_set_courser
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      37       5       43.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     24      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0      34        0.0%
DATA                 0      0      B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Mar 05 20:40:58 2023

                         ?_lcd_send_4bits 0042          lcd_4bit_send_command@ERRORSTATUS 0049  
                             _SSPSTATbits 000FC7                                        bsr 000FE0  
                   ??_InterruptManagerLow 0035                                       l120 13D8  
                                     l130 1886                                       l125 17C2  
                                     l155 166E                                       l252 16E8  
                                     l247 1918                                       l281 15EE  
                                     l851 1198                                       l870 12C0  
                                     l882 1758                                       l887 18D0  
                                     _PR2 000FCB      __end_of_lcd_4bits_send_enable_signal 191A  
   __size_of_lcd_4bits_send_enable_signal 0048              _lcd_4bits_send_enable_signal 18D2  
                                     _dis 00A2                    ??_InterruptManagerHigh 0034  
               _RB5_InterruptHandler_HIGH 001B                           __end_of_ADC_ISR 19E6  
GPIO_Pin_Direction_Initialize@ERRORSTATUS 0040                                       prod 000FF3  
                                     wreg 000FE8                                _TXSTA1bits 000FAC  
                  ??_GPIO_Pin_Write_Logic 003B                           __end_of_RB4_ISR 19E0  
                         __end_of_RB5_ISR 19C6                           __end_of_RB6_ISR 19AC  
                         __end_of_RB7_ISR 1992                                      l5011 18FC  
                                    l5003 18D2                                      l5021 1070  
                                    l5013 1904                                      l5005 18D2  
                                    l5101 1334                                      l5031 1154  
                                    l5023 108E                                      l5007 18E4  
                                    l5111 1388                                      l5103 1344  
                                    l5025 1096                                      l5033 1196  
                                    l5017 105A                                      l5041 1888  
                                    l5009 18E8                                      l5113 1398  
                                    l5105 1362                                      l5027 10F8  
                                    l5019 105E                                      l5043 1888  
                                    l5115 13A8                                      l5107 1368  
                                    l1667 1976                                      l5123 1826  
                                    l5045 189A                                      l5061 17C0  
                                    l5053 175A                                      l5117 13B8  
                                    l5109 1378                                      l5125 1826  
                                    l5141 155C                                      l5133 1540  
                                    l5047 18A2                                      l5055 175A  
                                    l5119 13C8                                      l5127 1838  
                                    l5143 1572                                      l5151 15B4  
                                    l5135 1540                                      l5049 18CE  
                                    l5057 176C                                      l5081 12D4  
                                    l5129 183C                                      l5145 1588  
                                    l5137 1552                                      l5059 1774  
                                    l5083 12D8                                      l5147 159E  
                                    l5139 1556                                      l5093 12F8  
                                    l5085 12D8                                      l5077 12C2  
                                    l5095 1314                                      l5087 12E4  
                                    l5079 12C2                                      l5521 16FC  
                                    l5097 1316                                      l5523 1700  
                                    l5099 1326                                      l5517 16EA  
                                    l5381 1602                                      l5519 16EA  
                                    l6511 12A8                                      l5527 195E  
                                    l5391 1650                                      l5383 1614  
                                    l6513 1180                                      l5385 1618  
                                    l5377 15F0                                      l5387 1630  
                                    l5379 15F0                                      l6509 15C8  
                                    l5389 164C                                      l6481 1490  
                                    l4971 119E                                      l6491 14F8  
                                    l6483 1494                                      l4973 11B0  
                                    l6493 1512                                      l6485 14B0  
                                    l4983 1294                                      l4975 11CE  
                                    l6495 151E                                      l6487 14CC  
                                    l4977 11D6                                      l4985 12BE  
                                    l4969 119A                                      l4993 1670  
                                    l6489 14E8                                      l4979 1238  
                                    l4995 1670                                      l4997 1682  
                                    l4999 1686                                      STR_1 1014  
                                    STR_2 1043                                      STR_3 1034  
                                    STR_4 1001                                      STR_5 1056  
                                    STR_9 1053                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u4110 1602                                      u4111 15FE  
                                    u4120 1614                                      u4121 1610  
                                    u4130 166E                                      u4131 166A  
                                    u4330 16FC                                      u4331 16F8  
                                    u3700 11CE                                      u3701 11CA  
                                    u4344 171C                                      u3800 116E  
                                    u4345 1718                                      u3714 11F2  
                                    u3810 189A                                      u3730 1682  
                                    u3715 11EE                                      u3811 1896  
                                    u3731 167E                                      u3724 1254  
                                    u3740 18E4                                      u3820 176C  
                                    u3725 1250                                      u3741 18E0  
                                    u3821 1768                                      u3750 1070  
                                    u3751 106C                                      u3760 108E  
                                    u3761 108A                                      u3690 11B0  
                                    u3691 11AC                                      u5507 18FE  
                                    u3860 12D4                                      u3861 12D0  
                                    u3790 116C                                      u3774 10B2  
                                    u3870 1326                                      u3791 1166  
                                    u3775 10AE                                      u3871 1322  
                                    u3784 1114                                      u3880 1838  
                                    u3785 1110                                      u3881 1834  
                                    u5457 1504                                      u3890 1552  
                                    u3891 154E                                      u5467 152A  
                                    u5477 132C                                      u5487 134A  
                                    u5497 1364                                      _RX9D 007D58  
                 ??_application_intialize 0050                  _RB4_InterruptHandler_LOW 001D  
                                    _lcd1 006E                                      _main 1490  
                _RB7_InterruptHandler_LOW 0011                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0079  
                                    prodl 000FF3                                      start 0286  
        GPIO_Pin_Toggle_Logic@_pin_config 0038                              ___param_bank 000000  
        __size_of_lcd_4bit_send_char_data 0062                     _lcd_4bit_send_command 175A  
                        __end_of_INT1_ISR 19E4                                     ?_main 0034  
                                   STR_11 1025                                     STR_12 1025  
                                   STR_13 104F                                     i1l438 19E4  
                                   i2l803 19EA                                     i2l799 19E8  
                                   _RCREG 000FAE                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _SPBRG 000FAF  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                             _EUSART_Rx_ISR 19EA  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             _EUSART_Tx_ISR 19E8  
                                   _TXREG 000FAD             ?_lcd_4bits_send_enable_signal 0042  
                        __end_of_TMR0_ISR 19E8                                     _flags 006D  
                                   _pinc0 0078                    ?_lcd_4bits_set_courser 004A  
                                   tablat 000FF5                lcd_4bits_set_courser@colum 004D  
   __end_of_lcd_4bit_send_string_data_pos 1670    __size_of_lcd_4bit_send_string_data_pos 0080  
           _lcd_4bit_send_string_data_pos 15F0                                     ttemp5 007A  
                                   ttemp6 007D                                     ttemp7 0081  
                                   status 000FD8                                     wtemp8 007A  
             _I2C_DefaultInterruptHandler 002B                           __initialization 17C4  
                            __end_of_main 1540                _eusart_Rx_InterruptHandler 0031  
          __size_of_GPIO_Pin_Toggle_Logic 0070             __end_of_GPIO_Pin_Toggle_Logic 175A  
                               ??_ADC_ISR 0034                             _lat_registers 0057  
                                  ??_main 00B5                             __activetblptr 000003  
                          ?_EUSART_Rx_ISR 0034                            ?_EUSART_Tx_ISR 0034  
                               ??_RB4_ISR 0034                                 ??_RB5_ISR 0034  
                               ??_RB6_ISR 0034                                 ??_RB7_ISR 0034  
                   RB5_ISR@Handler_Select 0034                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1L 000FBE  
                                  _CCPR2L 000FBB                                    i1l1151 0046  
                                  i1l1161 0186                                    i1l1153 0086  
                                  i1l1251 19DE                                    i1l1163 01C6  
                                  i1l1155 00C6                                    i1l1260 19C4  
                                  i1l1172 0276                                    i1l1165 0206  
                                  i1l1157 0106                                    i1l1238 19E2  
                                  i1l3103 19DE                                    i1l1167 0246  
                                  i1l1159 0146                                    i1l3113 19C4  
                                  i1l1169 0266                                    i1l3107 19AE  
                                  i1l3123 19AA                                    i1l3109 19B0  
                                  i1l1269 19AA                                    i1l3117 1994  
                                  i1l3133 1990                                    i1l1278 1990  
                                  i1l3119 1996                                    i1l3127 197A  
                                  i1l3129 197C                                    i1l3093 19E0  
                                  i1l3097 19C8                                    i1l4401 0222  
                                  i2l1130 13FC                                    i1l3099 19CA  
                                  i1l4411 0262                                    i1l4403 0230  
                                  i1l4331 0062                                    i1l4323 0026  
                                  i2l1140 146C                                    i2l1132 140C  
                                  i1l4413 0274                                    i1l4405 023E  
                                  i1l4341 00A2                                    i1l4333 0070  
                                  i1l4325 0034                                    i2l1142 147C  
                                  i2l1134 141C                                    i1l4407 0240  
                                  i1l4351 00E2                                    i1l4343 00B0  
                                  i1l4335 007E                                    i1l4327 0042  
                                  i2l1136 142C                                    i2l1145 148C  
                                  i1l4409 0254                                    i1l4361 0122  
                                  i1l4353 00F0                                    i1l4345 00BE  
                                  i1l4337 0080                                    i1l4329 0054  
                                  i2l1138 144C                                    i1l4371 0162  
                                  i1l4363 0130                                    i1l4355 00FE  
                                  i1l4347 00C0                                    i1l4339 0094  
                                  i1l4381 01A2                                    i1l4373 0170  
                                  i1l4365 013E                                    i1l4357 0100  
                                  i1l4349 00D4                                    i1l4391 01E2  
                                  i1l4383 01B0                                    i1l4375 017E  
                                  i1l4367 0140                                    i1l4359 0114  
                                  i1l4393 01F0                                    i1l4385 01BE  
                                  i1l4377 0180                                    i1l4369 0154  
                                  i1l4395 01FE                                    i1l4387 01C0  
                                  i1l4379 0194                                    i1l4397 0200  
                                  i1l4389 01D4                                    i1l4399 0214  
                                  i2l1528 19E6                                    i2l3081 19EA  
                                  i2l4311 145A                                    i2l4303 142A  
                                  i2l4313 1468                                    i2l4315 147A  
                                  i2l4307 143A                                    i2l4309 1448  
                                  i2l4319 148A                                    i2l4291 13EA  
                                  i2l4293 13F8                                    i2l4295 140A  
                                  i2l4289 13DC                                    i2l4299 141A  
                          _Movement_State 0033                                    _SPBRGH 000FB0  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                  _W1_W3_W5_Motor_Control 0076        lcd_4bit_send_string_data_pos@colum 0054  
                  ?_lcd_4bit_send_command 0046           ??_GPIO_Pin_Direction_Initialize 003A  
             __end_of_GPIO_Pin_Initialize 18D2                                    clear_0 180A  
                                  clear_1 1816                                    _timer0 0007  
                            __pdataCOMRAM 0057                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8              __size_of_lcd_4bit_initialize 0118  
                              __accesstop 0080                   __end_of__initialization 181C  
                               ?_INT1_ISR 0034                             ___rparam_used 000001  
                        ??_lcd_send_4bits 0045                _I2C_Report_Write_Collision 0027  
                 _lcd_4bit_send_char_data 1826            ?_lcd_4bit_send_string_data_pos 0051  
                          __pcstackCOMRAM 0034                              __pidataBANK0 193C  
                               ?_TMR0_ISR 0034                           ??_EUSART_Rx_ISR 0034  
                         ??_EUSART_Tx_ISR 0034                  lcd_4bit_send_command@lcd 0046  
                              __pbssBANK0 00A2                     _INT0_InterruptHandler 0025  
                              ??_INT1_ISR 0034           lcd_4bits_send_enable_signal@lcd 0042  
          __size_of_application_intialize 001A             __end_of_application_intialize 1978  
                _eusart_frameerr_CallBack 002D               __end_of_InterruptManagerLow 0286  
      lcd_4bit_initialize@pin_lcd_counter 004F                                ??_TMR0_ISR 0034  
                                 _ADC_ISR 19E4     __end_of_GPIO_Pin_Direction_Initialize 119A  
  __size_of_GPIO_Pin_Direction_Initialize 0140             _GPIO_Pin_Direction_Initialize 105A  
                                 _RB4_ISR 19C6                                   _RB5_ISR 19AC  
                                 _RB6_ISR 1992                                   _RB7_ISR 1978  
               _RB6_InterruptHandler_HIGH 0017                   ??_lcd_4bits_set_courser 004E  
           __size_of_InterruptManagerHigh 1488                                   i1u98_20 19DA  
                                 i1u98_21 19D6                                   i1u99_20 19C0  
                                 i1u99_21 19BC             __size_of_GPIO_Pin_Write_Logic 0128  
                          _tris_registers 0061                  _RB6_InterruptHandler_LOW 0015  
               ??_lcd_4bit_send_char_data 0049                                   __Hparam 0000  
              _eusart_overrunerr_CallBack 002F                                   __Lparam 0000  
                            __psmallconst 1000                                   __pcinit 17C4  
                                 __ramtop 1000                                   __ptext0 1490  
                                 __ptext1 15F0                                   __ptext2 1540  
                                 __ptext3 1826                                   __ptext4 195E  
                                 __ptext5 12C2                                   __ptext6 175A  
                                 __ptext7 1670                                   __ptext8 18D2  
                                 __ptext9 1888                                 _T0CONbits 000FD5  
                               _T3CONbits 000FB1                            __pintcode_body 13DA  
                    end_of_initialization 181C                         lcd_send_4bits@lcd 0042  
                                 int_func 13DA                   ??_lcd_4bit_send_command 0049  
                               _RCSTAbits 000FAB                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                       _lcd_4bit_initialize 12C2  
         __end_of_lcd_4bit_send_char_data 1888                     _INT1_InterruptHandler 0023  
                               _PORTBbits 000F81                     _GPIO_Pin_Toggle_Logic 16EA  
                               _PORTDbits 000F83                lcd_4bit_send_char_data@lcd 0046  
          ?_GPIO_Pin_Direction_Initialize 0038                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                   RB4_ISR@Handler_Select 0034                     RB7_ISR@Handler_Select 0034  
                    ?_lcd_4bit_initialize 004A                               _CCP1CONbits 000FBD  
                             _CCP2CONbits 000FBA                                 _TXSTAbits 000FAC  
                       __size_of_INT1_ISR 0004                                _ultrasonic 006B  
           convert_uint16_to_string@F3194 0001                               _BAUDCONbits 000FB8  
                           __pidataCOMRAM 191A                         __size_of_TMR0_ISR 0002  
            __size_of_GPIO_Pin_Initialize 004A                       start_initialization 17C4  
         GPIO_Pin_Write_Logic@_pin_config 0038                     ??_lcd_4bit_initialize 004C  
          GPIO_Pin_Initialize@_pin_config 0042                               __pdataBANK0 0080  
                                ?_ADC_ISR 0034                    ?_GPIO_Pin_Toggle_Logic 0038  
            lcd_4bit_send_command@command 0048                     __end_of_EUSART_Rx_ISR 19EC  
                   __end_of_EUSART_Tx_ISR 19EA                                  ?_RB4_ISR 0034  
                                ?_RB5_ISR 0034                                  ?_RB6_ISR 0034  
                                ?_RB7_ISR 0034                               __pbssCOMRAM 0001  
                           __pcstackBANK0 00B5            __size_of_lcd_4bits_set_courser 00B0  
           __end_of_lcd_4bits_set_courser 15F0                     _INT2_InterruptHandler 0021  
          ??_lcd_4bits_send_enable_signal 0044              __end_of_InterruptManagerHigh 1490  
                   _application_intialize 195E                                 __pintcode 0008  
            __end_of_GPIO_Pin_Write_Logic 12C2           GPIO_Pin_Write_Logic@ERRORSTATUS 0041  
                             __pintcodelo 0018              __size_of_InterruptManagerLow 026E  
                 __size_of_lcd_send_4bits 007A                               __smallconst 1000  
               _RB4_InterruptHandler_HIGH 001F                                  _CCP1_Obj 0096  
                                _CCP2_Obj 008A                 _RB7_InterruptHandler_HIGH 0013  
          GPIO_Pin_Initialize@ERRORSTATUS 0044            convert_float32_to_string@F3205 00AC  
                _RB5_InterruptHandler_LOW 0019                                  _INT1_ISR 19E0  
              lcd_send_4bits@data_command 0044                                  _LATDbits 000F8C  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                i1u100_20 19A6                                  i1u100_21 19A2  
                                i1u101_20 198C                                  i1u101_21 1988  
                                i1u300_20 017E                                  i1u300_21 017A  
                                i1u301_20 0194                                  i1u301_21 0190  
                                i1u310_20 0222                                  i1u302_20 01A2  
                                i1u310_21 021E                                  i1u302_21 019E  
                                i1u311_20 0230                                  i1u303_20 01B0  
                                i1u311_21 022C                                  i1u303_21 01AC  
                                i1u312_20 023E                                  i1u304_20 01BE  
                                i1u312_21 023A                                  i1u304_21 01BA  
          __size_of_lcd_4bit_send_command 006A                                  i1u313_20 0254  
                                i1u305_20 01D4                                  i1u313_21 0250  
                                i1u305_21 01D0                                  i1u314_20 0262  
                                i1u306_20 01E2                                  i1u314_21 025E  
                                i1u306_21 01DE                                  i1u315_20 0274  
                                i1u307_20 01F0                                  i1u315_21 0270  
                                i1u307_21 01EC                                  i1u308_20 01FE  
                                i1u308_21 01FA                                  i1u309_20 0214  
                                i1u309_21 0210                                  i1u280_20 0042  
                                i1u280_21 003E                                  i1u281_20 0054  
                                i1u281_21 0050                                  i1u290_20 00E2  
                                i1u282_20 0062                                  i1u290_21 00DE  
                                i1u282_21 005E                                  i1u291_20 00F0  
                                i1u283_20 0070                                  i1u291_21 00EC  
                                i1u283_21 006C                                  i1u292_20 00FE  
                                i1u284_20 007E                                  i1u292_21 00FA  
                                i1u284_21 007A             __end_of_lcd_4bit_send_command 17C4  
                                i1u293_20 0114                                  i1u285_20 0094  
                                i1u293_21 0110                                  i1u285_21 0090  
                                i1u294_20 0122                                  i1u286_20 00A2  
                                i1u294_21 011E                                  i1u286_21 009E  
                                i1u295_20 0130                                  i1u287_20 00B0  
                                i1u279_20 0034                                  i1u295_21 012C  
                                i1u287_21 00AC                                  i1u279_21 0030  
                                i1u296_20 013E                                  i1u288_20 00BE  
                                i1u296_21 013A                                  i1u288_21 00BA  
                                i1u297_20 0154                                  i1u289_20 00D4  
                                i1u297_21 0150                                  i1u289_21 00D0  
                                i1u298_20 0162                                  i1u298_21 015E  
                                i1u299_20 0170                                  i1u299_21 016C  
                                i2u270_40 140A                                  i2u270_41 1406  
                                i2u271_40 141A                                  i2u271_41 1416  
                                i2u272_40 142A                                  i2u272_41 1426  
                                i2u273_40 143A                                  i2u273_41 1436  
                                _PIR1bits 000F9E                                  i2u274_40 1448  
                                i2u274_41 1444                                  i2u275_40 145A  
                                i2u275_41 1456                                  _PIR2bits 000FA1  
                                i2u276_40 1468                                  i2u268_40 13EA  
                                i2u276_41 1464                                  i2u268_41 13E6  
                                i2u277_40 147A                                  i2u269_40 13F8  
                                i2u277_41 1476                                  i2u269_41 13F4  
                                i2u278_40 148A                                  i2u278_41 1486  
                                _RCONbits 000FD0                                  _TMR0_ISR 19E6  
             _I2C_Report_Receive_Overflow 0029                          __size_of_ADC_ISR 0002  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                              _ADCON2bits 000FC0                          __size_of_RB4_ISR 001A  
                        __size_of_RB5_ISR 001A                          __size_of_RB6_ISR 001A  
                        __size_of_RB7_ISR 001A                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                  ?_lcd_4bit_send_char_data 0046  
                               copy_data0 17D8                                 copy_data1 17F8  
                  ?_application_intialize 0034                       _GPIO_Pin_Initialize 1888  
                                __Hrparam 0000          lcd_4bit_send_string_data_pos@lcd 0051  
        lcd_4bit_send_string_data_pos@row 0053          lcd_4bit_send_string_data_pos@str 0055  
                                __Lrparam 0000                 GPIO_Pin_Write_Logic@logic 003A  
                           _preloaded_val 000F                      ?_GPIO_Pin_Initialize 0042  
                   RB6_ISR@Handler_Select 0034                      _InterruptManagerHigh 0008  
                lcd_4bits_set_courser@lcd 004A                  lcd_4bits_set_courser@row 004C  
                                __ptext10 119A                                  __ptext11 105A  
                                __ptext12 16EA                                  __ptext21 19E6  
                                __ptext22 19E8                                  __ptext14 1978  
                                __ptext23 19EA                                  __ptext15 1992  
                                __ptext16 19AC                                  __ptext17 19C6  
                                __ptext18 19E0                                  __ptext19 19E4  
                                _distance 000B                      _GPIO_Pin_Write_Logic 119A  
                           __size_of_main 00B0                   ??_GPIO_Pin_Toggle_Logic 003A  
                                int$flags 0079                            _lcd_send_4bits 1670  
                   ??_GPIO_Pin_Initialize 0044                                _INTCONbits 000FF2  
             __end_of_lcd_4bit_initialize 13DA                     ?_InterruptManagerHigh 0034  
                   ?_GPIO_Pin_Write_Logic 0038                                  intlevel1 0000  
                                intlevel2 0000                       _InterruptManagerLow 0018  
GPIO_Pin_Direction_Initialize@_pin_config 0038                                _RCSTA1bits 000FAB  
                  __end_of_lcd_send_4bits 16EA                      ?_InterruptManagerLow 0034  
                          _port_registers 0080                    _W2_W4_W6_Motor_Control 0074  
                             _SSPCON1bits 000FC6                               _SSPCON2bits 000FC5  
                              _WDTCONbits 000FD1           ??_lcd_4bit_send_string_data_pos 0057  
                   _lcd_4bits_set_courser 1540               lcd_4bit_send_char_data@data 0048  
                  __size_of_EUSART_Rx_ISR 0002                    __size_of_EUSART_Tx_ISR 0002  
                  lcd_4bit_initialize@lcd 004A  
