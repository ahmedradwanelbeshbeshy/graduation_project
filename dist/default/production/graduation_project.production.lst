

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 08 22:08:37 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77  0000                     
    78                           ; Version 2.40
    79                           ; Generated 17/11/2021 GMT
    80                           ; 
    81                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4620 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  003F08                     __pidataCOMRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for _blue
   119  003F08  01                 	db	1
   120                           
   121                           ;initializer for _gps
   122  003F09  01                 	db	1
   123                           
   124                           ;initializer for _datasend
   125  003F0A  77                 	db	119
   126                           
   127                           ;initializer for _flags
   128  003F0B  0F                 	db	15
   129                           
   130                           ;initializer for _lcd1
   131  003F0C  10                 	db	16
   132  003F0D  11                 	db	17
   133  003F0E  12                 	db	18
   134  003F0F  13                 	db	19
   135  003F10  14                 	db	20
   136  003F11  15                 	db	21
   137                           
   138                           ;initializer for _W4_Motor_Control
   139  003F12  1C                 	db	28
   140  003F13  1D                 	db	29
   141                           
   142                           ;initializer for _W3_Motor_Control
   143  003F14  1A                 	db	26
   144  003F15  1B                 	db	27
   145                           
   146                           ;initializer for _W1_W5_W2_W6_Motor_Control
   147  003F16  18                 	db	24
   148  003F17  19                 	db	25
   149                           
   150                           ;initializer for _selector
   151  003F18  08                 	db	8
   152                           
   153                           ;initializer for _pind1
   154  003F19  99                 	db	153
   155                           
   156                           ;initializer for _pind2
   157  003F1A  1A                 	db	26
   158                           
   159                           	psect	idataBANK0
   160  003D68                     __pidataBANK0:
   161                           	callstack 0
   162                           
   163                           ;initializer for _port_registers
   164  003D68  80                 	db	128
   165  003D69  0F                 	db	15
   166  003D6A  81                 	db	129
   167  003D6B  0F                 	db	15
   168  003D6C  82                 	db	130
   169  003D6D  0F                 	db	15
   170  003D6E  83                 	db	131
   171  003D6F  0F                 	db	15
   172  003D70  84                 	db	132
   173  003D71  0F                 	db	15
   174                           
   175                           ;initializer for _lat_registers
   176  003D72  89                 	db	137
   177  003D73  0F                 	db	15
   178  003D74  8A                 	db	138
   179  003D75  0F                 	db	15
   180  003D76  8B                 	db	139
   181  003D77  0F                 	db	15
   182  003D78  8C                 	db	140
   183  003D79  0F                 	db	15
   184  003D7A  8D                 	db	141
   185  003D7B  0F                 	db	15
   186                           
   187                           ;initializer for _tris_registers
   188  003D7C  92                 	db	146
   189  003D7D  0F                 	db	15
   190  003D7E  93                 	db	147
   191  003D7F  0F                 	db	15
   192  003D80  94                 	db	148
   193  003D81  0F                 	db	15
   194  003D82  95                 	db	149
   195  003D83  0F                 	db	15
   196  003D84  96                 	db	150
   197  003D85  0F                 	db	15
   198                           
   199                           ;initializer for __uart_obj
   200  003D86  2580               	dw	9600
   201  003D88  04                 	db	4
   202  003D89  8E                 	db	low _usart_isr
   203  003D8A  3C                 	db	high _usart_isr
   204  003D8B  00                 	db	0
   205  003D8C  00                 	db	0
   206  003D8D  00                 	db	0
   207  003D8E  00                 	db	0
   208  003D8F  09                 	db	9
   209  003D90  00                 	db	0
   210  003D91  00                 	db	0
   211                           
   212                           ;initializer for _CCP2_Obj
   213  003D92  01                 	db	1
   214  003D93  02                 	db	2
   215  003D94  00                 	db	0
   216  003D95  11                 	db	17
   217  003D96  00                 	db	0
   218  003D97  2710               	dw	10000
   219  003D99  0000               	dw	0
   220  003D9B  11                 	db	17
   221                           
   222                           ;initializer for _CCP1_Obj
   223  003D9C  00                 	db	0
   224  003D9D  02                 	db	2
   225  003D9E  00                 	db	0
   226  003D9F  12                 	db	18
   227  003DA0  00                 	db	0
   228  003DA1  2710               	dw	10000
   229  003DA3  0000               	dw	0
   230  003DA5  10                 	db	16
   231                           
   232                           ;initializer for _Timer0
   233  003DA6  07                 	db	7
   234  003DA7  85EE               	dw	34286
   235  003DA9  7A                 	db	low _Timer0_Handler
   236  003DAA  3E                 	db	high _Timer0_Handler
   237  003DAB  01                 	db	1
   238  0000                     _TMR0H	set	4055
   239  0000                     _TMR0L	set	4054
   240  0000                     _T0CONbits	set	4053
   241  0000                     _INTCON2bits	set	4081
   242  0000                     _TRISBbits	set	3987
   243  0000                     _PORTBbits	set	3969
   244  0000                     _INTCON3bits	set	4080
   245  0000                     _IPR2bits	set	4002
   246  0000                     _PIR2bits	set	4001
   247  0000                     _SSPBUF	set	4041
   248  0000                     _PIE2bits	set	4000
   249  0000                     _SSPSTATbits	set	4039
   250  0000                     _SSPADD	set	4040
   251  0000                     _SSPCON2bits	set	4037
   252  0000                     _SSPCON1bits	set	4038
   253  0000                     _SPBRGH	set	4016
   254  0000                     _SPBRG	set	4015
   255  0000                     _BAUDCONbits	set	4024
   256  0000                     _INTCONbits	set	4082
   257  0000                     _IPR1bits	set	3999
   258  0000                     _RCONbits	set	4048
   259  0000                     _RCSTA1bits	set	4011
   260  0000                     _RCREG	set	4014
   261  0000                     _PIR1bits	set	3998
   262  0000                     _TXREG	set	4013
   263  0000                     _TXSTAbits	set	4012
   264  0000                     _PIE1bits	set	3997
   265  0000                     _TRISCbits	set	3988
   266  0000                     _TXSTA1bits	set	4012
   267  0000                     _RCSTAbits	set	4011
   268  0000                     _T3CONbits	set	4017
   269  0000                     _CCPR2L	set	4027
   270  0000                     _CCPR1L	set	4030
   271  0000                     _CCP2CONbits	set	4026
   272  0000                     _CCP1CONbits	set	4029
   273  0000                     _PORTE	set	3972
   274  0000                     _PORTD	set	3971
   275  0000                     _PORTC	set	3970
   276  0000                     _PORTB	set	3969
   277  0000                     _PORTA	set	3968
   278  0000                     _LATE	set	3981
   279  0000                     _LATD	set	3980
   280  0000                     _LATC	set	3979
   281  0000                     _LATB	set	3978
   282  0000                     _LATA	set	3977
   283  0000                     _TRISE	set	3990
   284  0000                     _TRISD	set	3989
   285  0000                     _TRISC	set	3988
   286  0000                     _TRISB	set	3987
   287  0000                     _TRISA	set	3986
   288  0000                     _PR2	set	4043
   289  0000                     _RX9D	set	32088
   290                           
   291                           	psect	smallconst
   292  001000                     __psmallconst:
   293                           	callstack 0
   294  001000  00                 	db	0
   295  001001  41                 	db	65	;'A'
   296  001002  54                 	db	84	;'T'
   297  001003  2B                 	db	43
   298  001004  55                 	db	85	;'U'
   299  001005  41                 	db	65	;'A'
   300  001006  52                 	db	82	;'R'
   301  001007  54                 	db	84	;'T'
   302  001008  3A                 	db	58	;':'
   303  001009  39                 	db	57	;'9'
   304  00100A  36                 	db	54	;'6'
   305  00100B  30                 	db	48	;'0'
   306  00100C  30                 	db	48	;'0'
   307  00100D  2C                 	db	44
   308  00100E  30                 	db	48	;'0'
   309  00100F  2C                 	db	44
   310  001010  30                 	db	48	;'0'
   311  001011  0D                 	db	13
   312  001012  0A                 	db	10
   313  001013  00                 	db	0
   314  001014  41                 	db	65	;'A'
   315  001015  54                 	db	84	;'T'
   316  001016  2B                 	db	43
   317  001017  52                 	db	82	;'R'
   318  001018  4E                 	db	78	;'N'
   319  001019  41                 	db	65	;'A'
   320  00101A  4D                 	db	77	;'M'
   321  00101B  45                 	db	69	;'E'
   322  00101C  3A                 	db	58	;':'
   323  00101D  52                 	db	82	;'R'
   324  00101E  6F                 	db	111	;'o'
   325  00101F  62                 	db	98	;'b'
   326  001020  6F                 	db	111	;'o'
   327  001021  74                 	db	116	;'t'
   328  001022  0D                 	db	13
   329  001023  0A                 	db	10
   330  001024  00                 	db	0
   331  001025                     STR_27:
   332  001025  72                 	db	114	;'r'
   333  001026  69                 	db	105	;'i'
   334  001027  67                 	db	103	;'g'
   335  001028  68                 	db	104	;'h'
   336  001029  74                 	db	116	;'t'
   337  00102A  20                 	db	32
   338  00102B  62                 	db	98	;'b'
   339  00102C  61                 	db	97	;'a'
   340  00102D  63                 	db	99	;'c'
   341  00102E  6B                 	db	107	;'k'
   342  00102F  77                 	db	119	;'w'
   343  001030  61                 	db	97	;'a'
   344  001031  72                 	db	114	;'r'
   345  001032  64                 	db	100	;'d'
   346  001033  3A                 	db	58	;':'
   347  001034  00                 	db	0
   348  001035                     STR_10:
   349  001035  20                 	db	32
   350  001036  20                 	db	32
   351  001037  20                 	db	32
   352  001038  20                 	db	32
   353  001039  20                 	db	32
   354  00103A  20                 	db	32
   355  00103B  20                 	db	32
   356  00103C  20                 	db	32
   357  00103D  20                 	db	32
   358  00103E  20                 	db	32
   359  00103F  20                 	db	32
   360  001040  20                 	db	32
   361  001041  20                 	db	32
   362  001042  20                 	db	32
   363  001043  00                 	db	0
   364  001044                     STR_34:
   365  001044  2D                 	db	45
   366  001045  20                 	db	32
   367  001046  20                 	db	32
   368  001047  20                 	db	32
   369  001048  20                 	db	32
   370  001049  20                 	db	32
   371  00104A  20                 	db	32
   372  00104B  20                 	db	32
   373  00104C  20                 	db	32
   374  00104D  20                 	db	32
   375  00104E  20                 	db	32
   376  00104F  20                 	db	32
   377  001050  20                 	db	32
   378  001051  20                 	db	32
   379  001052  00                 	db	0
   380  001053                     STR_23:
   381  001053  6C                 	db	108	;'l'
   382  001054  65                 	db	101	;'e'
   383  001055  66                 	db	102	;'f'
   384  001056  74                 	db	116	;'t'
   385  001057  20                 	db	32
   386  001058  62                 	db	98	;'b'
   387  001059  61                 	db	97	;'a'
   388  00105A  63                 	db	99	;'c'
   389  00105B  6B                 	db	107	;'k'
   390  00105C  77                 	db	119	;'w'
   391  00105D  61                 	db	97	;'a'
   392  00105E  72                 	db	114	;'r'
   393  00105F  64                 	db	100	;'d'
   394  001060  3A                 	db	58	;':'
   395  001061  00                 	db	0
   396  001062                     STR_17:
   397  001062  72                 	db	114	;'r'
   398  001063  69                 	db	105	;'i'
   399  001064  67                 	db	103	;'g'
   400  001065  68                 	db	104	;'h'
   401  001066  74                 	db	116	;'t'
   402  001067  20                 	db	32
   403  001068  66                 	db	102	;'f'
   404  001069  6F                 	db	111	;'o'
   405  00106A  72                 	db	114	;'r'
   406  00106B  77                 	db	119	;'w'
   407  00106C  61                 	db	97	;'a'
   408  00106D  72                 	db	114	;'r'
   409  00106E  64                 	db	100	;'d'
   410  00106F  3A                 	db	58	;':'
   411  001070  00                 	db	0
   412  001071  41                 	db	65	;'A'
   413  001072  54                 	db	84	;'T'
   414  001073  2B                 	db	43
   415  001074  50                 	db	80	;'P'
   416  001075  53                 	db	83	;'S'
   417  001076  57                 	db	87	;'W'
   418  001077  44                 	db	68	;'D'
   419  001078  3A                 	db	58	;':'
   420  001079  31                 	db	49	;'1'
   421  00107A  32                 	db	50	;'2'
   422  00107B  33                 	db	51	;'3'
   423  00107C  34                 	db	52	;'4'
   424  00107D  0D                 	db	13
   425  00107E  0A                 	db	10
   426  00107F  00                 	db	0
   427  001080                     STR_13:
   428  001080  6C                 	db	108	;'l'
   429  001081  65                 	db	101	;'e'
   430  001082  66                 	db	102	;'f'
   431  001083  74                 	db	116	;'t'
   432  001084  20                 	db	32
   433  001085  66                 	db	102	;'f'
   434  001086  6F                 	db	111	;'o'
   435  001087  72                 	db	114	;'r'
   436  001088  77                 	db	119	;'w'
   437  001089  61                 	db	97	;'a'
   438  00108A  72                 	db	114	;'r'
   439  00108B  64                 	db	100	;'d'
   440  00108C  3A                 	db	58	;':'
   441  00108D  00                 	db	0
   442  00108E                     STR_29:
   443  00108E  72                 	db	114	;'r'
   444  00108F  6F                 	db	111	;'o'
   445  001090  74                 	db	116	;'t'
   446  001091  61                 	db	97	;'a'
   447  001092  74                 	db	116	;'t'
   448  001093  65                 	db	101	;'e'
   449  001094  20                 	db	32
   450  001095  6C                 	db	108	;'l'
   451  001096  65                 	db	101	;'e'
   452  001097  66                 	db	102	;'f'
   453  001098  74                 	db	116	;'t'
   454  001099  3A                 	db	58	;':'
   455  00109A  00                 	db	0
   456  00109B                     STR_33:
   457  00109B  64                 	db	100	;'d'
   458  00109C  65                 	db	101	;'e'
   459  00109D  66                 	db	102	;'f'
   460  00109E  61                 	db	97	;'a'
   461  00109F  75                 	db	117	;'u'
   462  0010A0  6C                 	db	108	;'l'
   463  0010A1  74                 	db	116	;'t'
   464  0010A2  20                 	db	32
   465  0010A3  63                 	db	99	;'c'
   466  0010A4  61                 	db	97	;'a'
   467  0010A5  73                 	db	115	;'s'
   468  0010A6  65                 	db	101	;'e'
   469  0010A7  00                 	db	0
   470  0010A8                     STR_21:
   471  0010A8  74                 	db	116	;'t'
   472  0010A9  75                 	db	117	;'u'
   473  0010AA  72                 	db	114	;'r'
   474  0010AB  6E                 	db	110	;'n'
   475  0010AC  20                 	db	32
   476  0010AD  72                 	db	114	;'r'
   477  0010AE  69                 	db	105	;'i'
   478  0010AF  67                 	db	103	;'g'
   479  0010B0  68                 	db	104	;'h'
   480  0010B1  74                 	db	116	;'t'
   481  0010B2  3A                 	db	58	;':'
   482  0010B3  00                 	db	0
   483  0010B4  41                 	db	65	;'A'
   484  0010B5  54                 	db	84	;'T'
   485  0010B6  2B                 	db	43
   486  0010B7  52                 	db	82	;'R'
   487  0010B8  4F                 	db	79	;'O'
   488  0010B9  4C                 	db	76	;'L'
   489  0010BA  45                 	db	69	;'E'
   490  0010BB  3A                 	db	58	;':'
   491  0010BC  30                 	db	48	;'0'
   492  0010BD  0D                 	db	13
   493  0010BE  0A                 	db	10
   494  0010BF  00                 	db	0
   495  0010C0                     STR_19:
   496  0010C0  74                 	db	116	;'t'
   497  0010C1  75                 	db	117	;'u'
   498  0010C2  72                 	db	114	;'r'
   499  0010C3  6E                 	db	110	;'n'
   500  0010C4  20                 	db	32
   501  0010C5  6C                 	db	108	;'l'
   502  0010C6  65                 	db	101	;'e'
   503  0010C7  66                 	db	102	;'f'
   504  0010C8  74                 	db	116	;'t'
   505  0010C9  3A                 	db	58	;':'
   506  0010CA  00                 	db	0
   507  0010CB                     STR_11:
   508  0010CB  6E                 	db	110	;'n'
   509  0010CC  6F                 	db	111	;'o'
   510  0010CD  20                 	db	32
   511  0010CE  74                 	db	116	;'t'
   512  0010CF  68                 	db	104	;'h'
   513  0010D0  69                 	db	105	;'i'
   514  0010D1  6E                 	db	110	;'n'
   515  0010D2  67                 	db	103	;'g'
   516  0010D3  00                 	db	0
   517  0010D4                     STR_9:
   518  0010D4  2D                 	db	45
   519  0010D5  3E                 	db	62	;'>'
   520  0010D6  20                 	db	32
   521  0010D7  00                 	db	0
   522  0010D8                     STR_31:
   523  0010D8  67                 	db	103	;'g'
   524  0010D9  70                 	db	112	;'p'
   525  0010DA  73                 	db	115	;'s'
   526  0010DB  00                 	db	0
   527  0010DC                     STR_5:
   528  0010DC  25                 	db	37
   529  0010DD  69                 	db	105	;'i'
   530  0010DE  00                 	db	0
   531  0010DF  00                 	db	0	; dummy byte at the end
   532  0000                     
   533                           ; #config settings
   534                           
   535                           	psect	cinit
   536  003794                     __pcinit:
   537                           	callstack 0
   538  003794                     start_initialization:
   539                           	callstack 0
   540  003794                     __initialization:
   541                           	callstack 0
   542                           
   543                           ; Initialize objects allocated to BANK0 (68 bytes)
   544                           ; load TBLPTR registers with __pidataBANK0
   545  003794  0E68               	movlw	low __pidataBANK0
   546  003796  6EF6               	movwf	tblptrl,c
   547  003798  0E3D               	movlw	high __pidataBANK0
   548  00379A  6EF7               	movwf	tblptrh,c
   549  00379C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   550  00379E  6EF8               	movwf	tblptru,c
   551  0037A0  EE00  F080         	lfsr	0,__pdataBANK0
   552  0037A4  EE10 F044          	lfsr	1,68
   553  0037A8                     copy_data0:
   554  0037A8  0009               	tblrd		*+
   555  0037AA  CFF5 FFEE          	movff	tablat,postinc0
   556  0037AE  50E5               	movf	postdec1,w,c
   557  0037B0  50E1               	movf	fsr1l,w,c
   558  0037B2  E1FA               	bnz	copy_data0
   559                           
   560                           ; Initialize objects allocated to COMRAM (19 bytes)
   561                           ; load TBLPTR registers with __pidataCOMRAM
   562  0037B4  0E08               	movlw	low __pidataCOMRAM
   563  0037B6  6EF6               	movwf	tblptrl,c
   564  0037B8  0E3F               	movlw	high __pidataCOMRAM
   565  0037BA  6EF7               	movwf	tblptrh,c
   566  0037BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   567  0037BE  6EF8               	movwf	tblptru,c
   568  0037C0  EE00  F043         	lfsr	0,__pdataCOMRAM
   569  0037C4  EE10 F013          	lfsr	1,19
   570  0037C8                     copy_data1:
   571  0037C8  0009               	tblrd		*+
   572  0037CA  CFF5 FFEE          	movff	tablat,postinc0
   573  0037CE  50E5               	movf	postdec1,w,c
   574  0037D0  50E1               	movf	fsr1l,w,c
   575  0037D2  E1FA               	bnz	copy_data1
   576                           
   577                           ; Clear objects allocated to BANK1 (26 bytes)
   578  0037D4  EE01  F025         	lfsr	0,__pbssBANK1
   579  0037D8  0E1A               	movlw	26
   580  0037DA                     clear_0:
   581  0037DA  6AEE               	clrf	postinc0,c
   582  0037DC  06E8               	decf	wreg,f,c
   583  0037DE  E1FD               	bnz	clear_0
   584                           
   585                           ; Clear objects allocated to BANK0 (28 bytes)
   586  0037E0  EE00  F0E4         	lfsr	0,__pbssBANK0
   587  0037E4  0E1C               	movlw	28
   588  0037E6                     clear_1:
   589  0037E6  6AEE               	clrf	postinc0,c
   590  0037E8  06E8               	decf	wreg,f,c
   591  0037EA  E1FD               	bnz	clear_1
   592                           
   593                           ; Clear objects allocated to COMRAM (21 bytes)
   594  0037EC  EE00  F02E         	lfsr	0,__pbssCOMRAM
   595  0037F0  0E15               	movlw	21
   596  0037F2                     clear_2:
   597  0037F2  6AEE               	clrf	postinc0,c
   598  0037F4  06E8               	decf	wreg,f,c
   599  0037F6  E1FD               	bnz	clear_2
   600  0037F8                     end_of_initialization:
   601                           	callstack 0
   602  0037F8                     __end_of__initialization:
   603                           	callstack 0
   604  0037F8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   605  0037FA  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   606  0037FC  0100               	movlb	0
   607  0037FE  EF36  F00D         	goto	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMRAM
   610  00002E                     __pbssCOMRAM:
   611                           	callstack 0
   612  00002E                     _preloaded_val:
   613                           	callstack 0
   614  00002E                     	ds	2
   615  000030                     _tmr0_InterruptHandler:
   616                           	callstack 0
   617  000030                     	ds	2
   618  000032                     _RB5_InterruptHandler_LOW:
   619                           	callstack 0
   620  000032                     	ds	2
   621  000034                     _RB5_InterruptHandler_HIGH:
   622                           	callstack 0
   623  000034                     	ds	2
   624  000036                     _RB4_InterruptHandler_LOW:
   625                           	callstack 0
   626  000036                     	ds	2
   627  000038                     _RB4_InterruptHandler_HIGH:
   628                           	callstack 0
   629  000038                     	ds	2
   630  00003A                     _INT1_InterruptHandler:
   631                           	callstack 0
   632  00003A                     	ds	2
   633  00003C                     _eusart_Rx_InterruptHandler:
   634                           	callstack 0
   635  00003C                     	ds	2
   636  00003E                     _counter:
   637                           	callstack 0
   638  00003E                     	ds	1
   639  00003F                     _i:
   640                           	callstack 0
   641  00003F                     	ds	1
   642  000040                     _Movement_State:
   643                           	callstack 0
   644  000040                     	ds	1
   645  000041                     _gpstemp:
   646                           	callstack 0
   647  000041                     	ds	1
   648  000042                     _datarecive:
   649                           	callstack 0
   650  000042                     	ds	1
   651                           
   652                           	psect	dataCOMRAM
   653  000043                     __pdataCOMRAM:
   654                           	callstack 0
   655  000043                     _blue:
   656                           	callstack 0
   657  000043                     	ds	1
   658  000044                     _gps:
   659                           	callstack 0
   660  000044                     	ds	1
   661  000045                     _datasend:
   662                           	callstack 0
   663  000045                     	ds	1
   664  000046                     _flags:
   665                           	callstack 0
   666  000046                     	ds	1
   667  000047                     _lcd1:
   668                           	callstack 0
   669  000047                     	ds	6
   670  00004D                     _W4_Motor_Control:
   671                           	callstack 0
   672  00004D                     	ds	2
   673  00004F                     _W3_Motor_Control:
   674                           	callstack 0
   675  00004F                     	ds	2
   676  000051                     _W1_W5_W2_W6_Motor_Control:
   677                           	callstack 0
   678  000051                     	ds	2
   679  000053                     _selector:
   680                           	callstack 0
   681  000053                     	ds	1
   682  000054                     _pind1:
   683                           	callstack 0
   684  000054                     	ds	1
   685  000055                     _pind2:
   686                           	callstack 0
   687  000055                     	ds	1
   688                           
   689                           	psect	bssBANK0
   690  0000E4                     __pbssBANK0:
   691                           	callstack 0
   692  0000E4                     	ds	6
   693  0000EA                     _RB7_InterruptHandler_LOW:
   694                           	callstack 0
   695  0000EA                     	ds	2
   696  0000EC                     _RB7_InterruptHandler_HIGH:
   697                           	callstack 0
   698  0000EC                     	ds	2
   699  0000EE                     _RB6_InterruptHandler_LOW:
   700                           	callstack 0
   701  0000EE                     	ds	2
   702  0000F0                     _RB6_InterruptHandler_HIGH:
   703                           	callstack 0
   704  0000F0                     	ds	2
   705  0000F2                     _INT2_InterruptHandler:
   706                           	callstack 0
   707  0000F2                     	ds	2
   708  0000F4                     _INT0_InterruptHandler:
   709                           	callstack 0
   710  0000F4                     	ds	2
   711  0000F6                     _I2C_Report_Write_Collision:
   712                           	callstack 0
   713  0000F6                     	ds	2
   714  0000F8                     _I2C_Report_Receive_Overflow:
   715                           	callstack 0
   716  0000F8                     	ds	2
   717  0000FA                     _I2C_DefaultInterruptHandler:
   718                           	callstack 0
   719  0000FA                     	ds	2
   720  0000FC                     _eusart_frameerr_CallBack:
   721                           	callstack 0
   722  0000FC                     	ds	2
   723  0000FE                     _eusart_overrunerr_CallBack:
   724                           	callstack 0
   725  0000FE                     	ds	2
   726                           
   727                           	psect	dataBANK0
   728  000080                     __pdataBANK0:
   729                           	callstack 0
   730  000080                     _port_registers:
   731                           	callstack 0
   732  000080                     	ds	10
   733  00008A                     _lat_registers:
   734                           	callstack 0
   735  00008A                     	ds	10
   736  000094                     _tris_registers:
   737                           	callstack 0
   738  000094                     	ds	10
   739  00009E                     __uart_obj:
   740                           	callstack 0
   741  00009E                     	ds	12
   742  0000AA                     _CCP2_Obj:
   743                           	callstack 0
   744  0000AA                     	ds	10
   745  0000B4                     _CCP1_Obj:
   746                           	callstack 0
   747  0000B4                     	ds	10
   748  0000BE                     _Timer0:
   749                           	callstack 0
   750  0000BE                     	ds	6
   751                           
   752                           	psect	bssBANK1
   753  000125                     __pbssBANK1:
   754                           	callstack 0
   755  000125                     _longtude:
   756                           	callstack 0
   757  000125                     	ds	13
   758  000132                     _latitude:
   759                           	callstack 0
   760  000132                     	ds	13
   761                           
   762                           	psect	cstackBANK1
   763  000100                     __pcstackBANK1:
   764                           	callstack 0
   765  000100                     ___fldiv@rem:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x0
   769  000100                     	ds	4
   770  000104                     ___fldiv@sign:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x4
   774  000104                     	ds	1
   775  000105                     ___fldiv@new_exp:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x5
   779  000105                     	ds	2
   780  000107                     ___fldiv@grs:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x7
   784  000107                     	ds	4
   785  00010B                     ___fldiv@bexp:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0xB
   789  00010B                     	ds	1
   790  00010C                     ___fldiv@aexp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xC
   794  00010C                     	ds	1
   795  00010D                     ??___fladd:
   796                           
   797                           ; 1 bytes @ 0xD
   798  00010D                     	ds	4
   799  000111                     ___fladd@signs:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x11
   803  000111                     	ds	1
   804  000112                     ___fladd@aexp:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x12
   808  000112                     	ds	1
   809  000113                     ___fladd@bexp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x13
   813  000113                     	ds	1
   814  000114                     ___fladd@grs:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x14
   818  000114                     	ds	1
   819  000115                     ??_async_config_baud_rate_gen:
   820                           
   821                           ; 1 bytes @ 0x15
   822  000115                     	ds	2
   823  000117                     async_config_baud_rate_gen@ret_val:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x17
   827  000117                     	ds	1
   828  000118                     async_config_baud_rate_gen@Baudrate_temp:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x18
   832  000118                     	ds	4
   833  00011C                     _async_config_baud_rate_gen$4701:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x1C
   837  00011C                     	ds	4
   838  000120                     EUSART_Async_Init@_eusart_obj:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x20
   842  000120                     	ds	2
   843  000122                     EUSART_Async_Init@ret_val:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x22
   847  000122                     	ds	1
   848  000123                     ??_main:
   849                           
   850                           ; 1 bytes @ 0x23
   851  000123                     	ds	2
   852                           
   853                           	psect	cstackBANK0
   854  0000C4                     __pcstackBANK0:
   855                           	callstack 0
   856  0000C4                     ??_GPIO_Pin_Write_Logic:
   857  0000C4                     ??_GPIO_Pin_Direction_Initialize:
   858  0000C4                     ??_GPIO_Pin_Toggle_Logic:
   859  0000C4                     ??___fltol:
   860  0000C4                     ??___xxtofl:
   861  0000C4                     calc_parity_odd@data:
   862                           	callstack 0
   863  0000C4                     calc_parity_even@data:
   864                           	callstack 0
   865  0000C4                     async_Rx_config@_rx_obj:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x0
   869  0000C4                     	ds	1
   870  0000C5                     calc_parity_odd@number_of_ones:
   871                           	callstack 0
   872  0000C5                     calc_parity_even@number_of_ones:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x1
   876  0000C5                     	ds	1
   877  0000C6                     calc_parity_odd@l_counter:
   878                           	callstack 0
   879  0000C6                     calc_parity_even@l_counter:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x2
   883  0000C6                     	ds	1
   884  0000C7                     EUSART_Async_Read_Data@_eusart_obj:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x3
   888  0000C7                     	ds	1
   889  0000C8                     ___fltol@sign1:
   890                           	callstack 0
   891  0000C8                     ___xxtofl@sign:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x4
   895  0000C8                     	ds	1
   896  0000C9                     ___fltol@exp1:
   897                           	callstack 0
   898  0000C9                     ___xxtofl@exp:
   899                           	callstack 0
   900  0000C9                     EUSART_Async_Read_Data@data:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x5
   904  0000C9                     	ds	1
   905  0000CA                     lcd_4bits_send_enable_signal@lcd:
   906                           	callstack 0
   907  0000CA                     lcd_send_4bits@lcd:
   908                           	callstack 0
   909  0000CA                     GPIO_Pin_Initialize@_pin_config:
   910                           	callstack 0
   911  0000CA                     ___xxtofl@arg:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x6
   915  0000CA                     	ds	2
   916  0000CC                     lcd_send_4bits@data_command:
   917                           	callstack 0
   918  0000CC                     GPIO_Pin_Initialize@ERRORSTATUS:
   919                           	callstack 0
   920  0000CC                     _EUSART_Async_Read_Data$1571:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x8
   924  0000CC                     	ds	2
   925  0000CE                     ?___fldiv:
   926                           	callstack 0
   927  0000CE                     lcd_4bit_send_command@lcd:
   928                           	callstack 0
   929  0000CE                     lcd_4bit_send_char_data@lcd:
   930                           	callstack 0
   931  0000CE                     _EUSART_Async_Read_Data$1572:
   932                           	callstack 0
   933  0000CE                     ___fldiv@b:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0xA
   937  0000CE                     	ds	2
   938  0000D0                     lcd_4bit_send_command@command:
   939                           	callstack 0
   940  0000D0                     lcd_4bit_send_char_data@data:
   941                           	callstack 0
   942  0000D0                     _EUSART_Async_Read_Data$1573:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0xC
   946  0000D0                     	ds	1
   947  0000D1                     lcd_4bit_send_command@ERRORSTATUS:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0xD
   951  0000D1                     	ds	1
   952  0000D2                     lcd_4bit_initialize@lcd:
   953                           	callstack 0
   954  0000D2                     lcd_4bits_set_courser@lcd:
   955                           	callstack 0
   956  0000D2                     EUSART_Async_Read_Data@l_temp_data:
   957                           	callstack 0
   958  0000D2                     ___fldiv@a:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0xE
   962  0000D2                     	ds	2
   963  0000D4                     ??_lcd_4bit_initialize:
   964  0000D4                     lcd_4bits_set_courser@row:
   965                           	callstack 0
   966  0000D4                     EUSART_Async_Read_Data_Blocking@_eusart_obj:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x10
   970  0000D4                     	ds	1
   971  0000D5                     lcd_4bits_set_courser@colum:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x11
   975  0000D5                     	ds	1
   976  0000D6                     ??_lcd_4bits_set_courser:
   977  0000D6                     ??___fldiv:
   978  0000D6                     lcd_4bit_initialize@pin_lcd_counter:
   979                           	callstack 0
   980  0000D6                     EUSART_Async_Read_Data_Blocking@data:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x12
   984  0000D6                     	ds	3
   985  0000D9                     lcd_4bit_send_string_data_pos@lcd:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x15
   989  0000D9                     	ds	1
   990  0000DA                     ?___fladd:
   991                           	callstack 0
   992  0000DA                     ___fladd@b:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x16
   996  0000DA                     	ds	1
   997  0000DB                     lcd_4bit_send_string_data_pos@row:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x17
  1001  0000DB                     	ds	1
  1002  0000DC                     lcd_4bit_send_string_data_pos@colum:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x18
  1006  0000DC                     	ds	1
  1007  0000DD                     lcd_4bit_send_string_data_pos@str:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x19
  1011  0000DD                     	ds	1
  1012  0000DE                     ___fladd@a:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x1A
  1016  0000DE                     	ds	2
  1017  0000E0                     ??_GPS_Service:
  1018                           
  1019                           ; 1 bytes @ 0x1C
  1020  0000E0                     	ds	2
  1021  0000E2                     GPS_Service@key:
  1022                           	callstack 0
  1023  0000E2                     async_config_baud_rate_gen@_eusart_obj:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x1E
  1027  0000E2                     	ds	2
  1028                           
  1029                           	psect	cstackCOMRAM
  1030  000001                     __pcstackCOMRAM:
  1031                           	callstack 0
  1032  000001                     ??i2_calc_parity_odd:
  1033  000001                     ??i2_calc_parity_even:
  1034  000001                     i2GPIO_Pin_Write_Logic@_pin_config:
  1035                           	callstack 0
  1036  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x0
  1040  000001                     	ds	2
  1041  000003                     ??i2_GPIO_Pin_Toggle_Logic:
  1042  000003                     i2calc_parity_odd@data:
  1043                           	callstack 0
  1044  000003                     i2calc_parity_even@data:
  1045                           	callstack 0
  1046  000003                     i2GPIO_Pin_Write_Logic@logic:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x2
  1050  000003                     	ds	1
  1051  000004                     ??i2_GPIO_Pin_Write_Logic:
  1052  000004                     i2calc_parity_odd@number_of_ones:
  1053                           	callstack 0
  1054  000004                     i2calc_parity_even@number_of_ones:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x3
  1058  000004                     	ds	1
  1059  000005                     i2calc_parity_odd@l_counter:
  1060                           	callstack 0
  1061  000005                     i2calc_parity_even@l_counter:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x4
  1065  000005                     	ds	1
  1066  000006                     EUSART_Async_Transmit_Data@_eusart_obj:
  1067                           	callstack 0
  1068  000006                     i2EUSART_Async_Read_Data@_eusart_obj:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x5
  1072  000006                     	ds	2
  1073  000008                     EUSART_Async_Transmit_Data@data:
  1074                           	callstack 0
  1075  000008                     i2EUSART_Async_Read_Data@data:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x7
  1079  000008                     	ds	2
  1080  00000A                     ??_EUSART_Async_Transmit_Data:
  1081  00000A                     ??i2_EUSART_Async_Read_Data:
  1082  00000A                     i2GPIO_Pin_Write_Logic@ERRORSTATUS:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x9
  1086  00000A                     	ds	1
  1087  00000B                     ECU_DC_Motor_Stop@dc_motor:
  1088                           	callstack 0
  1089  00000B                     i2lcd_4bits_send_enable_signal@lcd:
  1090                           	callstack 0
  1091  00000B                     i2lcd_send_4bits@lcd:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0xA
  1095  00000B                     	ds	2
  1096  00000D                     i2lcd_send_4bits@data_command:
  1097                           	callstack 0
  1098  00000D                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
  1099                           	callstack 0
  1100  00000D                     i2_EUSART_Async_Read_Data$1571:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0xC
  1104  00000D                     	ds	1
  1105  00000E                     ??_TMR0_ISR:
  1106  00000E                     
  1107                           ; 1 bytes @ 0xD
  1108  00000E                     	ds	1
  1109  00000F                     Bluetooth_Send_Data_Non_Blocking@data:
  1110                           	callstack 0
  1111  00000F                     i2lcd_4bit_send_command@lcd:
  1112                           	callstack 0
  1113  00000F                     i2lcd_4bit_send_char_data@lcd:
  1114                           	callstack 0
  1115  00000F                     i2_EUSART_Async_Read_Data$1572:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0xE
  1119  00000F                     	ds	1
  1120  000010                     
  1121                           ; 1 bytes @ 0xF
  1122  000010                     	ds	1
  1123  000011                     i2lcd_4bit_send_command@command:
  1124                           	callstack 0
  1125  000011                     i2lcd_4bit_send_char_data@data:
  1126                           	callstack 0
  1127  000011                     i2_EUSART_Async_Read_Data$1573:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x10
  1131  000011                     	ds	1
  1132  000012                     
  1133                           ; 1 bytes @ 0x11
  1134  000012                     	ds	1
  1135  000013                     i2lcd_4bits_set_courser@lcd:
  1136                           	callstack 0
  1137  000013                     i2EUSART_Async_Read_Data@l_temp_data:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x12
  1141  000013                     	ds	2
  1142  000015                     i2lcd_4bits_set_courser@row:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x14
  1146  000015                     	ds	1
  1147  000016                     i2lcd_4bits_set_courser@colum:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x15
  1151  000016                     	ds	1
  1152  000017                     ??i2_lcd_4bits_set_courser:
  1153                           
  1154                           ; 1 bytes @ 0x16
  1155  000017                     	ds	3
  1156  00001A                     lcd_4bit_send_char_data_pos@lcd:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x19
  1160  00001A                     	ds	2
  1161  00001C                     lcd_4bit_send_char_data_pos@row:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x1B
  1165  00001C                     	ds	1
  1166  00001D                     lcd_4bit_send_char_data_pos@colum:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x1C
  1170  00001D                     	ds	1
  1171  00001E                     lcd_4bit_send_char_data_pos@data:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x1D
  1175  00001E                     	ds	1
  1176  00001F                     
  1177                           ; 1 bytes @ 0x1E
  1178  00001F                     	ds	1
  1179  000020                     ??_InterruptManagerHigh:
  1180                           
  1181                           ; 1 bytes @ 0x1F
  1182  000020                     	ds	6
  1183  000026                     RB4_ISR@Handler_Select:
  1184                           	callstack 0
  1185  000026                     RB5_ISR@Handler_Select:
  1186                           	callstack 0
  1187  000026                     RB6_ISR@Handler_Select:
  1188                           	callstack 0
  1189  000026                     RB7_ISR@Handler_Select:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x25
  1193  000026                     	ds	1
  1194  000027                     ??_InterruptManagerLow:
  1195                           
  1196                           ; 1 bytes @ 0x26
  1197  000027                     	ds	3
  1198  00002A                     ??_calc_parity_even:
  1199  00002A                     ??_calc_parity_odd:
  1200  00002A                     ?___fltol:
  1201                           	callstack 0
  1202  00002A                     ?___xxtofl:
  1203                           	callstack 0
  1204  00002A                     async_Tx_config@_tx_obj:
  1205                           	callstack 0
  1206  00002A                     Rx_config_interrupt@_rx_obj:
  1207                           	callstack 0
  1208  00002A                     GPIO_Pin_Direction_Initialize@_pin_config:
  1209                           	callstack 0
  1210  00002A                     GPIO_Pin_Write_Logic@_pin_config:
  1211                           	callstack 0
  1212  00002A                     GPIO_Pin_Toggle_Logic@_pin_config:
  1213                           	callstack 0
  1214  00002A                     ___fltol@f1:
  1215                           	callstack 0
  1216  00002A                     ___xxtofl@val:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x29
  1220  00002A                     	ds	2
  1221  00002C                     ??_EUSART_Async_Read_Data:
  1222  00002C                     async_Tx_config@ret_val:
  1223                           	callstack 0
  1224  00002C                     Rx_config_interrupt@ret_val:
  1225                           	callstack 0
  1226  00002C                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
  1227                           	callstack 0
  1228  00002C                     GPIO_Pin_Write_Logic@logic:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x2B
  1232  00002C                     	ds	1
  1233  00002D                     async_Rx_config@ret_val:
  1234                           	callstack 0
  1235  00002D                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1236                           	callstack 0
  1237                           
  1238                           ; 1 bytes @ 0x2C
  1239  00002D                     	ds	1
  1240  00002E                     
  1241                           ; 1 bytes @ 0x2D
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 91 in file "application.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  2  1525[None  ] int 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;Total ram usage:        2 bytes
  1266 ;; Hardware stack levels required when called:   16
  1267 ;; This function calls:
  1268 ;;		_GPIO_Pin_Toggle_Logic
  1269 ;;		_GPS_Service
  1270 ;;		_application_intialize
  1271 ;;		_lcd_4bit_send_string_data_pos
  1272 ;; This function is called by:
  1273 ;;		Startup code after reset
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text0
  1278  001A6C                     __ptext0:
  1279                           	callstack 0
  1280  001A6C                     _main:
  1281                           	callstack 15
  1282  001A6C                     
  1283                           ;application.c: 94:     application_intialize();
  1284  001A6C  EC6C  F01E         	call	_application_intialize	;wreg free
  1285  001A70                     
  1286                           ;application.c: 95:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-> ");
  1287  001A70  0E47               	movlw	low _lcd1
  1288  001A72  0100               	movlb	0	; () banked
  1289  001A74  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1290  001A76  0E00               	movlw	high _lcd1
  1291  001A78  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1292  001A7A  0E02               	movlw	2
  1293  001A7C  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1294  001A7E  0E01               	movlw	1
  1295  001A80  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1296  001A82  0ED4               	movlw	low STR_9
  1297  001A84  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1298  001A86  0E10               	movlw	high STR_9
  1299  001A88  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1300  001A8A  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1301  001A8E                     l10204:
  1302                           
  1303                           ;application.c: 98:     {;application.c: 99:         GPIO_Pin_Toggle_Logic(&pind1);
  1304  001A8E  0E54               	movlw	low _pind1
  1305  001A90  6E2A               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1306  001A92  0E00               	movlw	high _pind1
  1307  001A94  6E2B               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1308  001A96  EC20  F01B         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1309  001A9A                     
  1310                           ;application.c: 100:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1311  001A9A  0E0B               	movlw	11
  1312  001A9C  0101               	movlb	1	; () banked
  1313  001A9E  6F24               	movwf	(??_main+1)& (0+255),b
  1314  001AA0  0E26               	movlw	38
  1315  001AA2  6F23               	movwf	??_main& (0+255),b
  1316  001AA4  0E5D               	movlw	93
  1317  001AA6                     u11367:
  1318  001AA6  2EE8               	decfsz	wreg,f,c
  1319  001AA8  D7FE               	bra	u11367
  1320  001AAA  2F23               	decfsz	??_main& (0+255),f,b
  1321  001AAC  D7FC               	bra	u11367
  1322  001AAE  2F24               	decfsz	(??_main+1)& (0+255),f,b
  1323  001AB0  D7FA               	bra	u11367
  1324  001AB2  D000               	nop2	
  1325                           
  1326                           ;application.c: 101:         switch(datarecive)
  1327  001AB4  EFDE  F00E         	goto	l10234
  1328  001AB8                     l10208:
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;application.c: 105:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1332  001AB8  0E47               	movlw	low _lcd1
  1333  001ABA  0100               	movlb	0	; () banked
  1334  001ABC  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1335  001ABE  0E00               	movlw	high _lcd1
  1336  001AC0  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1337  001AC2  0E01               	movlw	1
  1338  001AC4  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1339  001AC6  0E01               	movlw	1
  1340  001AC8  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1341  001ACA  0E35               	movlw	low STR_10
  1342  001ACC  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1343  001ACE  0E10               	movlw	high STR_10
  1344  001AD0  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1345  001AD2  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1346                           
  1347                           ;application.c: 106:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"no thing")
      +                          ;
  1348  001AD6  0E47               	movlw	low _lcd1
  1349  001AD8  0100               	movlb	0	; () banked
  1350  001ADA  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1351  001ADC  0E00               	movlw	high _lcd1
  1352  001ADE  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1353  001AE0  0E01               	movlw	1
  1354  001AE2  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1355  001AE4  0E01               	movlw	1
  1356  001AE6  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1357  001AE8  0ECB               	movlw	low STR_11
  1358  001AEA  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1359  001AEC  0E10               	movlw	high STR_11
  1360  001AEE  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1361  001AF0  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1362                           
  1363                           ;application.c: 107:                 break;
  1364  001AF4  EF47  F00D         	goto	l10204
  1365  001AF8                     l10210:
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;application.c: 110:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1369  001AF8  0E47               	movlw	low _lcd1
  1370  001AFA  0100               	movlb	0	; () banked
  1371  001AFC  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1372  001AFE  0E00               	movlw	high _lcd1
  1373  001B00  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1374  001B02  0E01               	movlw	1
  1375  001B04  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1376  001B06  0E01               	movlw	1
  1377  001B08  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1378  001B0A  0E35               	movlw	low STR_10
  1379  001B0C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1380  001B0E  0E10               	movlw	high STR_10
  1381  001B10  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1382  001B12  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1383                           
  1384                           ;application.c: 111:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"left forwa
      +                          rd:");
  1385  001B16  0E47               	movlw	low _lcd1
  1386  001B18  0100               	movlb	0	; () banked
  1387  001B1A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1388  001B1C  0E00               	movlw	high _lcd1
  1389  001B1E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1390  001B20  0E01               	movlw	1
  1391  001B22  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1392  001B24  0E01               	movlw	1
  1393  001B26  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1394  001B28  0E80               	movlw	low STR_13
  1395  001B2A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1396  001B2C  0E10               	movlw	high STR_13
  1397  001B2E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1398  001B30  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1399                           
  1400                           ;application.c: 113:                 break;
  1401  001B34  EF47  F00D         	goto	l10204
  1402  001B38                     l10212:
  1403                           
  1404                           ; BSR set to: 1
  1405                           ;application.c: 116:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1406  001B38  0E47               	movlw	low _lcd1
  1407  001B3A  0100               	movlb	0	; () banked
  1408  001B3C  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1409  001B3E  0E00               	movlw	high _lcd1
  1410  001B40  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1411  001B42  0E01               	movlw	1
  1412  001B44  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1413  001B46  0E01               	movlw	1
  1414  001B48  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1415  001B4A  0E35               	movlw	low STR_10
  1416  001B4C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1417  001B4E  0E10               	movlw	high STR_10
  1418  001B50  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1419  001B52  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1420                           
  1421                           ;application.c: 117:                 lcd_4bit_send_string_data_pos(&lcd1,1,1," forward:"
      +                          );
  1422  001B56  0E47               	movlw	low _lcd1
  1423  001B58  0100               	movlb	0	; () banked
  1424  001B5A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1425  001B5C  0E00               	movlw	high _lcd1
  1426  001B5E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1427  001B60  0E01               	movlw	1
  1428  001B62  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1429  001B64  0E01               	movlw	1
  1430  001B66  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1431  001B68  0E84               	movlw	low (STR_13+4)
  1432  001B6A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1433  001B6C  0E10               	movlw	high (STR_13+4)
  1434  001B6E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1435  001B70  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1436                           
  1437                           ;application.c: 118:                 break;
  1438  001B74  EF47  F00D         	goto	l10204
  1439  001B78                     l10214:
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;application.c: 121:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1443  001B78  0E47               	movlw	low _lcd1
  1444  001B7A  0100               	movlb	0	; () banked
  1445  001B7C  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1446  001B7E  0E00               	movlw	high _lcd1
  1447  001B80  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1448  001B82  0E01               	movlw	1
  1449  001B84  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1450  001B86  0E01               	movlw	1
  1451  001B88  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1452  001B8A  0E35               	movlw	low STR_10
  1453  001B8C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1454  001B8E  0E10               	movlw	high STR_10
  1455  001B90  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1456  001B92  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1457                           
  1458                           ;application.c: 122:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"right forw
      +                          ard:");
  1459  001B96  0E47               	movlw	low _lcd1
  1460  001B98  0100               	movlb	0	; () banked
  1461  001B9A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1462  001B9C  0E00               	movlw	high _lcd1
  1463  001B9E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1464  001BA0  0E01               	movlw	1
  1465  001BA2  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1466  001BA4  0E01               	movlw	1
  1467  001BA6  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1468  001BA8  0E62               	movlw	low STR_17
  1469  001BAA  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1470  001BAC  0E10               	movlw	high STR_17
  1471  001BAE  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1472  001BB0  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1473                           
  1474                           ;application.c: 124:                 break;
  1475  001BB4  EF47  F00D         	goto	l10204
  1476  001BB8                     l10216:
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;application.c: 127:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1480  001BB8  0E47               	movlw	low _lcd1
  1481  001BBA  0100               	movlb	0	; () banked
  1482  001BBC  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1483  001BBE  0E00               	movlw	high _lcd1
  1484  001BC0  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1485  001BC2  0E01               	movlw	1
  1486  001BC4  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1487  001BC6  0E01               	movlw	1
  1488  001BC8  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1489  001BCA  0E35               	movlw	low STR_10
  1490  001BCC  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1491  001BCE  0E10               	movlw	high STR_10
  1492  001BD0  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1493  001BD2  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1494                           
  1495                           ;application.c: 128:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"turn left:
      +                          ");
  1496  001BD6  0E47               	movlw	low _lcd1
  1497  001BD8  0100               	movlb	0	; () banked
  1498  001BDA  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1499  001BDC  0E00               	movlw	high _lcd1
  1500  001BDE  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1501  001BE0  0E01               	movlw	1
  1502  001BE2  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1503  001BE4  0E01               	movlw	1
  1504  001BE6  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1505  001BE8  0EC0               	movlw	low STR_19
  1506  001BEA  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1507  001BEC  0E10               	movlw	high STR_19
  1508  001BEE  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1509  001BF0  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1510                           
  1511                           ;application.c: 130:                 break;
  1512  001BF4  EF47  F00D         	goto	l10204
  1513  001BF8                     l10218:
  1514                           
  1515                           ; BSR set to: 1
  1516                           ;application.c: 133:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1517  001BF8  0E47               	movlw	low _lcd1
  1518  001BFA  0100               	movlb	0	; () banked
  1519  001BFC  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1520  001BFE  0E00               	movlw	high _lcd1
  1521  001C00  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1522  001C02  0E01               	movlw	1
  1523  001C04  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1524  001C06  0E01               	movlw	1
  1525  001C08  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1526  001C0A  0E35               	movlw	low STR_10
  1527  001C0C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1528  001C0E  0E10               	movlw	high STR_10
  1529  001C10  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1530  001C12  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1531                           
  1532                           ;application.c: 134:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"turn right
      +                          :");
  1533  001C16  0E47               	movlw	low _lcd1
  1534  001C18  0100               	movlb	0	; () banked
  1535  001C1A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1536  001C1C  0E00               	movlw	high _lcd1
  1537  001C1E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1538  001C20  0E01               	movlw	1
  1539  001C22  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1540  001C24  0E01               	movlw	1
  1541  001C26  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1542  001C28  0EA8               	movlw	low STR_21
  1543  001C2A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1544  001C2C  0E10               	movlw	high STR_21
  1545  001C2E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1546  001C30  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1547                           
  1548                           ;application.c: 136:                 break;
  1549  001C34  EF47  F00D         	goto	l10204
  1550  001C38                     l10220:
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;application.c: 139:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1554  001C38  0E47               	movlw	low _lcd1
  1555  001C3A  0100               	movlb	0	; () banked
  1556  001C3C  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1557  001C3E  0E00               	movlw	high _lcd1
  1558  001C40  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1559  001C42  0E01               	movlw	1
  1560  001C44  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1561  001C46  0E01               	movlw	1
  1562  001C48  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1563  001C4A  0E35               	movlw	low STR_10
  1564  001C4C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1565  001C4E  0E10               	movlw	high STR_10
  1566  001C50  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1567  001C52  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1568                           
  1569                           ;application.c: 140:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"left backw
      +                          ard:");
  1570  001C56  0E47               	movlw	low _lcd1
  1571  001C58  0100               	movlb	0	; () banked
  1572  001C5A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1573  001C5C  0E00               	movlw	high _lcd1
  1574  001C5E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1575  001C60  0E01               	movlw	1
  1576  001C62  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1577  001C64  0E01               	movlw	1
  1578  001C66  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1579  001C68  0E53               	movlw	low STR_23
  1580  001C6A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1581  001C6C  0E10               	movlw	high STR_23
  1582  001C6E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1583  001C70  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1584                           
  1585                           ;application.c: 142:                 break;
  1586  001C74  EF47  F00D         	goto	l10204
  1587  001C78                     l10222:
  1588                           
  1589                           ; BSR set to: 1
  1590                           ;application.c: 145:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1591  001C78  0E47               	movlw	low _lcd1
  1592  001C7A  0100               	movlb	0	; () banked
  1593  001C7C  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1594  001C7E  0E00               	movlw	high _lcd1
  1595  001C80  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1596  001C82  0E01               	movlw	1
  1597  001C84  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1598  001C86  0E01               	movlw	1
  1599  001C88  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1600  001C8A  0E35               	movlw	low STR_10
  1601  001C8C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1602  001C8E  0E10               	movlw	high STR_10
  1603  001C90  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1604  001C92  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1605                           
  1606                           ;application.c: 146:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"backward:"
      +                          );
  1607  001C96  0E47               	movlw	low _lcd1
  1608  001C98  0100               	movlb	0	; () banked
  1609  001C9A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1610  001C9C  0E00               	movlw	high _lcd1
  1611  001C9E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1612  001CA0  0E01               	movlw	1
  1613  001CA2  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1614  001CA4  0E01               	movlw	1
  1615  001CA6  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1616  001CA8  0E58               	movlw	low (STR_23+5)
  1617  001CAA  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1618  001CAC  0E10               	movlw	high (STR_23+5)
  1619  001CAE  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1620  001CB0  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1621                           
  1622                           ;application.c: 148:                 break;
  1623  001CB4  EF47  F00D         	goto	l10204
  1624  001CB8                     l10224:
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;application.c: 151:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1628  001CB8  0E47               	movlw	low _lcd1
  1629  001CBA  0100               	movlb	0	; () banked
  1630  001CBC  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1631  001CBE  0E00               	movlw	high _lcd1
  1632  001CC0  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1633  001CC2  0E01               	movlw	1
  1634  001CC4  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1635  001CC6  0E01               	movlw	1
  1636  001CC8  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1637  001CCA  0E35               	movlw	low STR_10
  1638  001CCC  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1639  001CCE  0E10               	movlw	high STR_10
  1640  001CD0  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1641  001CD2  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1642                           
  1643                           ;application.c: 152:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"right back
      +                          ward:");
  1644  001CD6  0E47               	movlw	low _lcd1
  1645  001CD8  0100               	movlb	0	; () banked
  1646  001CDA  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1647  001CDC  0E00               	movlw	high _lcd1
  1648  001CDE  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1649  001CE0  0E01               	movlw	1
  1650  001CE2  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1651  001CE4  0E01               	movlw	1
  1652  001CE6  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1653  001CE8  0E25               	movlw	low STR_27
  1654  001CEA  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1655  001CEC  0E10               	movlw	high STR_27
  1656  001CEE  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1657  001CF0  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1658                           
  1659                           ;application.c: 154:                 break;
  1660  001CF4  EF47  F00D         	goto	l10204
  1661  001CF8                     l10226:
  1662                           
  1663                           ; BSR set to: 1
  1664                           ;application.c: 157:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1665  001CF8  0E47               	movlw	low _lcd1
  1666  001CFA  0100               	movlb	0	; () banked
  1667  001CFC  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1668  001CFE  0E00               	movlw	high _lcd1
  1669  001D00  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1670  001D02  0E01               	movlw	1
  1671  001D04  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1672  001D06  0E01               	movlw	1
  1673  001D08  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1674  001D0A  0E35               	movlw	low STR_10
  1675  001D0C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1676  001D0E  0E10               	movlw	high STR_10
  1677  001D10  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1678  001D12  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1679                           
  1680                           ;application.c: 158:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"rotate lef
      +                          t:");
  1681  001D16  0E47               	movlw	low _lcd1
  1682  001D18  0100               	movlb	0	; () banked
  1683  001D1A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1684  001D1C  0E00               	movlw	high _lcd1
  1685  001D1E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1686  001D20  0E01               	movlw	1
  1687  001D22  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1688  001D24  0E01               	movlw	1
  1689  001D26  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1690  001D28  0E8E               	movlw	low STR_29
  1691  001D2A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1692  001D2C  0E10               	movlw	high STR_29
  1693  001D2E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1694  001D30  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1695                           
  1696                           ;application.c: 160:                 break;
  1697  001D34  EF47  F00D         	goto	l10204
  1698  001D38                     l10228:
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;application.c: 163:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1702  001D38  0E47               	movlw	low _lcd1
  1703  001D3A  0100               	movlb	0	; () banked
  1704  001D3C  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1705  001D3E  0E00               	movlw	high _lcd1
  1706  001D40  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1707  001D42  0E01               	movlw	1
  1708  001D44  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1709  001D46  0E01               	movlw	1
  1710  001D48  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1711  001D4A  0E35               	movlw	low STR_10
  1712  001D4C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1713  001D4E  0E10               	movlw	high STR_10
  1714  001D50  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1715  001D52  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1716                           
  1717                           ;application.c: 164:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"gps");
  1718  001D56  0E47               	movlw	low _lcd1
  1719  001D58  0100               	movlb	0	; () banked
  1720  001D5A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1721  001D5C  0E00               	movlw	high _lcd1
  1722  001D5E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1723  001D60  0E01               	movlw	1
  1724  001D62  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1725  001D64  0E01               	movlw	1
  1726  001D66  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1727  001D68  0ED8               	movlw	low STR_31
  1728  001D6A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1729  001D6C  0E10               	movlw	high STR_31
  1730  001D6E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1731  001D70  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1732                           
  1733                           ;application.c: 167:                 GPS_Service();
  1734  001D74  EC07  F013         	call	_GPS_Service	;wreg free
  1735                           
  1736                           ;application.c: 168:                 break;
  1737  001D78  EF47  F00D         	goto	l10204
  1738  001D7C                     l10230:
  1739                           
  1740                           ; BSR set to: 1
  1741                           ;application.c: 172:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"          
      +                              ");
  1742  001D7C  0E47               	movlw	low _lcd1
  1743  001D7E  0100               	movlb	0	; () banked
  1744  001D80  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1745  001D82  0E00               	movlw	high _lcd1
  1746  001D84  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1747  001D86  0E01               	movlw	1
  1748  001D88  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1749  001D8A  0E01               	movlw	1
  1750  001D8C  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1751  001D8E  0E35               	movlw	low STR_10
  1752  001D90  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1753  001D92  0E10               	movlw	high STR_10
  1754  001D94  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1755  001D96  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1756                           
  1757                           ;application.c: 173:                 lcd_4bit_send_string_data_pos(&lcd1,1,1,"default ca
      +                          se");
  1758  001D9A  0E47               	movlw	low _lcd1
  1759  001D9C  0100               	movlb	0	; () banked
  1760  001D9E  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  1761  001DA0  0E00               	movlw	high _lcd1
  1762  001DA2  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  1763  001DA4  0E01               	movlw	1
  1764  001DA6  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  1765  001DA8  0E01               	movlw	1
  1766  001DAA  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  1767  001DAC  0E9B               	movlw	low STR_33
  1768  001DAE  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  1769  001DB0  0E10               	movlw	high STR_33
  1770  001DB2  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  1771  001DB4  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  1772                           
  1773                           ;application.c: 174:                 break;
  1774  001DB8  EF47  F00D         	goto	l10204
  1775  001DBC                     l10234:
  1776  001DBC  5042               	movf	_datarecive^0,w,c
  1777  001DBE  0101               	movlb	1	; () banked
  1778  001DC0  6F23               	movwf	??_main& (0+255),b
  1779  001DC2  6B24               	clrf	(??_main+1)& (0+255),b
  1780                           
  1781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1782                           ; Switch size 1, requested type "simple"
  1783                           ; Number of cases is 1, Range of values is 0 to 0
  1784                           ; switch strategies available:
  1785                           ; Name         Instructions Cycles
  1786                           ; simple_byte            4     3 (average)
  1787                           ;	Chosen strategy is simple_byte
  1788  001DC4  5124               	movf	(??_main+1)& (0+255),w,b
  1789  001DC6  0A00               	xorlw	0	; case 0
  1790  001DC8  B4D8               	btfsc	status,2,c
  1791  001DCA  EFE9  F00E         	goto	l10402
  1792  001DCE  EFBE  F00E         	goto	l10230
  1793  001DD2                     l10402:
  1794                           
  1795                           ; BSR set to: 1
  1796                           ; Switch size 1, requested type "simple"
  1797                           ; Number of cases is 11, Range of values is 0 to 10
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte           34    18 (average)
  1801                           ;	Chosen strategy is simple_byte
  1802  001DD2  5123               	movf	??_main& (0+255),w,b
  1803  001DD4  0A00               	xorlw	0	; case 0
  1804  001DD6  B4D8               	btfsc	status,2,c
  1805  001DD8  EF5C  F00D         	goto	l10208
  1806  001DDC  0A01               	xorlw	1	; case 1
  1807  001DDE  B4D8               	btfsc	status,2,c
  1808  001DE0  EF7C  F00D         	goto	l10210
  1809  001DE4  0A03               	xorlw	3	; case 2
  1810  001DE6  B4D8               	btfsc	status,2,c
  1811  001DE8  EF9C  F00D         	goto	l10212
  1812  001DEC  0A01               	xorlw	1	; case 3
  1813  001DEE  B4D8               	btfsc	status,2,c
  1814  001DF0  EFBC  F00D         	goto	l10214
  1815  001DF4  0A07               	xorlw	7	; case 4
  1816  001DF6  B4D8               	btfsc	status,2,c
  1817  001DF8  EFDC  F00D         	goto	l10216
  1818  001DFC  0A01               	xorlw	1	; case 5
  1819  001DFE  B4D8               	btfsc	status,2,c
  1820  001E00  EFFC  F00D         	goto	l10218
  1821  001E04  0A03               	xorlw	3	; case 6
  1822  001E06  B4D8               	btfsc	status,2,c
  1823  001E08  EF1C  F00E         	goto	l10220
  1824  001E0C  0A01               	xorlw	1	; case 7
  1825  001E0E  B4D8               	btfsc	status,2,c
  1826  001E10  EF3C  F00E         	goto	l10222
  1827  001E14  0A0F               	xorlw	15	; case 8
  1828  001E16  B4D8               	btfsc	status,2,c
  1829  001E18  EF5C  F00E         	goto	l10224
  1830  001E1C  0A01               	xorlw	1	; case 9
  1831  001E1E  B4D8               	btfsc	status,2,c
  1832  001E20  EF7C  F00E         	goto	l10226
  1833  001E24  0A03               	xorlw	3	; case 10
  1834  001E26  B4D8               	btfsc	status,2,c
  1835  001E28  EF9C  F00E         	goto	l10228
  1836  001E2C  EFBE  F00E         	goto	l10230
  1837  001E30  EF3B  F001         	goto	start
  1838  001E34                     __end_of_main:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _application_intialize *****************
  1842 ;; Defined at:
  1843 ;;		line 180 in file "application.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:   14
  1864 ;; This function calls:
  1865 ;;		_EUSART_Async_Init
  1866 ;;		_GPIO_Pin_Initialize
  1867 ;;		_lcd_4bit_initialize
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text1
  1874  003CD8                     __ptext1:
  1875                           	callstack 0
  1876  003CD8                     _application_intialize:
  1877                           	callstack 16
  1878  003CD8                     
  1879                           ;application.c: 182:     GPIO_Pin_Initialize(&pind1);
  1880  003CD8  0E54               	movlw	low _pind1
  1881  003CDA  0100               	movlb	0	; () banked
  1882  003CDC  6FCA               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1883  003CDE  0E00               	movlw	high _pind1
  1884  003CE0  6FCB               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1885  003CE2  ECD4  F01D         	call	_GPIO_Pin_Initialize	;wreg free
  1886                           
  1887                           ;application.c: 183:     GPIO_Pin_Initialize(&pind2);
  1888  003CE6  0E55               	movlw	low _pind2
  1889  003CE8  0100               	movlb	0	; () banked
  1890  003CEA  6FCA               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1891  003CEC  0E00               	movlw	high _pind2
  1892  003CEE  6FCB               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1893  003CF0  ECD4  F01D         	call	_GPIO_Pin_Initialize	;wreg free
  1894                           
  1895                           ;application.c: 184:     GPIO_Pin_Initialize(&selector);
  1896  003CF4  0E53               	movlw	low _selector
  1897  003CF6  0100               	movlb	0	; () banked
  1898  003CF8  6FCA               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1899  003CFA  0E00               	movlw	high _selector
  1900  003CFC  6FCB               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1901  003CFE  ECD4  F01D         	call	_GPIO_Pin_Initialize	;wreg free
  1902  003D02                     
  1903                           ;application.c: 185:     EUSART_Async_Init(&_uart_obj);
  1904  003D02  0E9E               	movlw	low __uart_obj
  1905  003D04  0101               	movlb	1	; () banked
  1906  003D06  6F20               	movwf	EUSART_Async_Init@_eusart_obj& (0+255),b
  1907  003D08  0E00               	movlw	high __uart_obj
  1908  003D0A  6F21               	movwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),b
  1909  003D0C  EC41  F01D         	call	_EUSART_Async_Init	;wreg free
  1910  003D10                     
  1911                           ;application.c: 186:     lcd_4bit_initialize(&lcd1);
  1912  003D10  0E47               	movlw	low _lcd1
  1913  003D12  0100               	movlb	0	; () banked
  1914  003D14  6FD2               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  1915  003D16  0E00               	movlw	high _lcd1
  1916  003D18  6FD3               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  1917  003D1A  EC77  F015         	call	_lcd_4bit_initialize	;wreg free
  1918  003D1E  0012               	return		;funcret
  1919  003D20                     __end_of_application_intialize:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _lcd_4bit_initialize *****************
  1923 ;; Defined at:
  1924 ;;		line 21 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1927 ;;		 -> lcd1(6), 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  pin_lcd_coun    1   18[BANK0 ] unsigned char 
  1930 ;;  ERRORSTATUS     1    0        unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      unsigned char 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        6 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:   13
  1947 ;; This function calls:
  1948 ;;		_GPIO_Pin_Initialize
  1949 ;;		_lcd_4bit_send_command
  1950 ;; This function is called by:
  1951 ;;		_application_intialize
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text2
  1956  002AEE                     __ptext2:
  1957                           	callstack 0
  1958  002AEE                     _lcd_4bit_initialize:
  1959                           	callstack 16
  1960  002AEE                     
  1961                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 24:     if ( ((void*)0)==lcd)
  1962  002AEE  0100               	movlb	0	; () banked
  1963  002AF0  51D2               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  1964  002AF2  11D3               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1965  002AF4  A4D8               	btfss	status,2,c
  1966  002AF6  EF7F  F015         	goto	u10411
  1967  002AFA  EF81  F015         	goto	u10410
  1968  002AFE                     u10411:
  1969  002AFE  EF83  F015         	goto	l9346
  1970  002B02                     u10410:
  1971  002B02                     
  1972                           ; BSR set to: 0
  1973                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 27:     }
  1974  002B02  EF13  F016         	goto	l77
  1975  002B06                     l9346:
  1976  002B06                     
  1977                           ; BSR set to: 0
  1978  002B06  C0D2  F0CA         	movff	lcd_4bit_initialize@lcd,GPIO_Pin_Initialize@_pin_config
  1979  002B0A  C0D3  F0CB         	movff	lcd_4bit_initialize@lcd+1,GPIO_Pin_Initialize@_pin_config+1
  1980  002B0E  ECD4  F01D         	call	_GPIO_Pin_Initialize	;wreg free
  1981  002B12  0E01               	movlw	1
  1982  002B14  0100               	movlb	0	; () banked
  1983  002B16  25D2               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1984  002B18  6FCA               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  1985  002B1A  0E00               	movlw	0
  1986  002B1C  21D3               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1987  002B1E  6FCB               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  1988  002B20  ECD4  F01D         	call	_GPIO_Pin_Initialize	;wreg free
  1989                           
  1990                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 33:         for(pin_lcd_counter=0;pin_lcd_counter<
      +                          4;pin_lcd_counter++)
  1991  002B24  0E00               	movlw	0
  1992  002B26  0100               	movlb	0	; () banked
  1993  002B28  6FD6               	movwf	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  1994  002B2A                     l9356:
  1995                           
  1996                           ; BSR set to: 0
  1997  002B2A  51D6               	movf	lcd_4bit_initialize@pin_lcd_counter& (0+255),w,b
  1998  002B2C  25D2               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1999  002B2E  6FD4               	movwf	??_lcd_4bit_initialize& (0+255),b
  2000  002B30  0E00               	movlw	0
  2001  002B32  21D3               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  2002  002B34  6FD5               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  2003  002B36  0E02               	movlw	2
  2004  002B38  25D4               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  2005  002B3A  6FCA               	movwf	GPIO_Pin_Initialize@_pin_config& (0+255),b
  2006  002B3C  0E00               	movlw	0
  2007  002B3E  21D5               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  2008  002B40  6FCB               	movwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),b
  2009  002B42  ECD4  F01D         	call	_GPIO_Pin_Initialize	;wreg free
  2010  002B46                     
  2011                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 38:         }
  2012  002B46  0100               	movlb	0	; () banked
  2013  002B48  2BD6               	incf	lcd_4bit_initialize@pin_lcd_counter& (0+255),f,b
  2014  002B4A                     
  2015                           ; BSR set to: 0
  2016  002B4A  0E03               	movlw	3
  2017  002B4C  65D6               	cpfsgt	lcd_4bit_initialize@pin_lcd_counter& (0+255),b
  2018  002B4E  EFAB  F015         	goto	u10421
  2019  002B52  EFAD  F015         	goto	u10420
  2020  002B56                     u10421:
  2021  002B56  EF95  F015         	goto	l9356
  2022  002B5A                     u10420:
  2023  002B5A                     
  2024                           ; BSR set to: 0
  2025                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 39:         _delay((unsigned long)((20)*(8000000/4
      +                          000.0)));
  2026  002B5A  0E34               	movlw	52
  2027  002B5C  0100               	movlb	0	; () banked
  2028  002B5E  6FD4               	movwf	??_lcd_4bit_initialize& (0+255),b
  2029  002B60  0EF1               	movlw	241
  2030  002B62                     u11377:
  2031  002B62  2EE8               	decfsz	wreg,f,c
  2032  002B64  D7FE               	bra	u11377
  2033  002B66  2FD4               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  2034  002B68  D7FC               	bra	u11377
  2035  002B6A  D000               	nop2	
  2036  002B6C  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2037  002B70  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2038  002B74  0E38               	movlw	56
  2039  002B76  0100               	movlb	0	; () banked
  2040  002B78  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2041  002B7A  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2042  002B7E                     
  2043                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 41:         _delay((unsigned long)((5)*(8000000/40
      +                          00.0)));
  2044  002B7E  0E0D               	movlw	13
  2045  002B80  0100               	movlb	0	; () banked
  2046  002B82  6FD4               	movwf	??_lcd_4bit_initialize& (0+255),b
  2047  002B84  0EFB               	movlw	251
  2048  002B86                     u11387:
  2049  002B86  2EE8               	decfsz	wreg,f,c
  2050  002B88  D7FE               	bra	u11387
  2051  002B8A  2FD4               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  2052  002B8C  D7FC               	bra	u11387
  2053  002B8E  D000               	nop2	
  2054  002B90  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2055  002B94  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2056  002B98  0E38               	movlw	56
  2057  002B9A  0100               	movlb	0	; () banked
  2058  002B9C  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2059  002B9E  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2060  002BA2                     
  2061                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 43:         _delay((unsigned long)((150)*(8000000/
      +                          4000000.0)));
  2062  002BA2  0E64               	movlw	100
  2063  002BA4                     u11397:
  2064  002BA4  2EE8               	decfsz	wreg,f,c
  2065  002BA6  D7FE               	bra	u11397
  2066  002BA8  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2067  002BAC  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2068  002BB0  0E38               	movlw	56
  2069  002BB2  0100               	movlb	0	; () banked
  2070  002BB4  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2071  002BB6  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2072  002BBA  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2073  002BBE  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2074  002BC2  0E01               	movlw	1
  2075  002BC4  0100               	movlb	0	; () banked
  2076  002BC6  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2077  002BC8  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2078  002BCC  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2079  002BD0  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2080  002BD4  0E02               	movlw	2
  2081  002BD6  0100               	movlb	0	; () banked
  2082  002BD8  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2083  002BDA  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2084  002BDE  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2085  002BE2  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2086  002BE6  0E06               	movlw	6
  2087  002BE8  0100               	movlb	0	; () banked
  2088  002BEA  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2089  002BEC  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2090  002BF0  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2091  002BF4  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2092  002BF8  0E0D               	movlw	13
  2093  002BFA  0100               	movlb	0	; () banked
  2094  002BFC  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2095  002BFE  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2096  002C02  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2097  002C06  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2098  002C0A  0E28               	movlw	40
  2099  002C0C  0100               	movlb	0	; () banked
  2100  002C0E  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2101  002C10  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2102  002C14  C0D2  F0CE         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2103  002C18  C0D3  F0CF         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2104  002C1C  0E80               	movlw	128
  2105  002C1E  0100               	movlb	0	; () banked
  2106  002C20  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  2107  002C22  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  2108  002C26                     l77:
  2109  002C26  0012               	return		;funcret
  2110  002C28                     __end_of_lcd_4bit_initialize:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _GPIO_Pin_Initialize *****************
  2114 ;; Defined at:
  2115 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  _pin_config     2    6[BANK0 ] PTR const struct .
  2118 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  2119 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  2120 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  2121 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  ERRORSTATUS     1    8[BANK0 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;Total ram usage:        3 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:   11
  2140 ;; This function calls:
  2141 ;;		_GPIO_Pin_Direction_Initialize
  2142 ;;		_GPIO_Pin_Write_Logic
  2143 ;; This function is called by:
  2144 ;;		_lcd_4bit_initialize
  2145 ;;		_application_intialize
  2146 ;;		_lcd_8bit_initialize
  2147 ;;		_CCP_Init
  2148 ;;		_ECU_DC_Motor_Init
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text3
  2153  003BA8                     __ptext3:
  2154                           	callstack 0
  2155  003BA8                     _GPIO_Pin_Initialize:
  2156                           	callstack 17
  2157  003BA8                     
  2158                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  2159  003BA8  0100               	movlb	0	; () banked
  2160  003BAA  51CA               	movf	GPIO_Pin_Initialize@_pin_config& (0+255),w,b
  2161  003BAC  11CB               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)& (0+255),w,b
  2162  003BAE  A4D8               	btfss	status,2,c
  2163  003BB0  EFDC  F01D         	goto	u10211
  2164  003BB4  EFDE  F01D         	goto	u10210
  2165  003BB8                     u10211:
  2166  003BB8  EFE2  F01D         	goto	l9172
  2167  003BBC                     u10210:
  2168  003BBC                     
  2169                           ; BSR set to: 0
  2170                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  2171  003BBC  0E00               	movlw	0
  2172  003BBE  6FCC               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2173                           
  2174                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  2175  003BC0  EFFA  F01D         	goto	l9174
  2176  003BC4                     l9172:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  2180  003BC4  C0CA  F02A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  2181  003BC8  C0CB  F02B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  2182  003BCC  ECD4  F014         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  2183  003BD0  0100               	movlb	0	; () banked
  2184  003BD2  6FCC               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2185                           
  2186                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  2187  003BD4  C0CA  F02A         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  2188  003BD8  C0CB  F02B         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  2189  003BDC  C0CA  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  2190  003BE0  C0CB  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  2191  003BE4  0E00               	movlw	0
  2192  003BE6  BEDF               	btfsc	indf2,7,c
  2193  003BE8  0E01               	movlw	1
  2194  003BEA  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2195  003BEC  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  2196  003BF0  0100               	movlb	0	; () banked
  2197  003BF2  6FCC               	movwf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),b
  2198  003BF4                     l9174:
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  2202  003BF4  51CC               	movf	GPIO_Pin_Initialize@ERRORSTATUS& (0+255),w,b
  2203  003BF6                     
  2204                           ; BSR set to: 0
  2205  003BF6  0012               	return		;funcret
  2206  003BF8                     __end_of_GPIO_Pin_Initialize:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  2210 ;; Defined at:
  2211 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  _pin_config     2   41[COMRAM] PTR const struct .
  2214 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  2215 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  2216 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  2217 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  ERRORSTATUS     1   43[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;Total ram usage:        9 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:   10
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_GPIO_Pin_Initialize
  2240 ;;		_interrupt_RBx_pin_init
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text4
  2245  0029A8                     __ptext4:
  2246                           	callstack 0
  2247  0029A8                     _GPIO_Pin_Direction_Initialize:
  2248                           	callstack 17
  2249  0029A8                     
  2250                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  2251  0029A8  0E01               	movlw	1
  2252  0029AA  6E2C               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2253  0029AC                     
  2254                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  2255  0029AC  502A               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  2256  0029AE  102B               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  2257  0029B0  B4D8               	btfsc	status,2,c
  2258  0029B2  EFDD  F014         	goto	u9211
  2259  0029B6  EFDF  F014         	goto	u9210
  2260  0029BA                     u9211:
  2261  0029BA  EFEF  F014         	goto	l8658
  2262  0029BE                     u9210:
  2263  0029BE  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2264  0029C2  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2265  0029C6  50DF               	movf	indf2,w,c
  2266  0029C8  0B07               	andlw	7
  2267  0029CA  0100               	movlb	0	; () banked
  2268  0029CC  6FC4               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2269  0029CE  0E07               	movlw	7
  2270  0029D0  65C4               	cpfsgt	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2271  0029D2  EFED  F014         	goto	u9221
  2272  0029D6  EFEF  F014         	goto	u9220
  2273  0029DA                     u9221:
  2274  0029DA  EF54  F015         	goto	l8666
  2275  0029DE                     u9220:
  2276  0029DE                     l8658:
  2277                           
  2278                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  2279  0029DE  0E00               	movlw	0
  2280  0029E0  6E2C               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  2281                           
  2282                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  2283  0029E2  EF75  F015         	goto	l8668
  2284  0029E6                     l8660:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  2288  0029E6  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2289  0029EA  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2290  0029EE  50DF               	movf	indf2,w,c
  2291  0029F0  0B07               	andlw	7
  2292  0029F2  6FC4               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2293  0029F4  0E01               	movlw	1
  2294  0029F6  6FC5               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  2295  0029F8  2BC4               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2296  0029FA  EF01  F015         	goto	u9234
  2297  0029FE                     u9235:
  2298  0029FE  90D8               	bcf	status,0,c
  2299  002A00  37C5               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  2300  002A02                     u9234:
  2301  002A02  2FC4               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2302  002A04  EFFF  F014         	goto	u9235
  2303  002A08  0100               	movlb	0	; () banked
  2304  002A0A  51C5               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  2305  002A0C  0AFF               	xorlw	255
  2306  002A0E  6FC6               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  2307  002A10  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2308  002A14  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2309  002A18  30DF               	rrcf	indf2,w,c
  2310  002A1A  32E8               	rrcf	wreg,f,c
  2311  002A1C  32E8               	rrcf	wreg,f,c
  2312  002A1E  0B07               	andlw	7
  2313  002A20  6FC7               	movwf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),b
  2314  002A22  51C7               	movf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),w,b
  2315  002A24  0D02               	mullw	2
  2316  002A26  0E94               	movlw	low _tris_registers
  2317  002A28  24F3               	addwf	243,w,c
  2318  002A2A  6ED9               	movwf	fsr2l,c
  2319  002A2C  0E00               	movlw	high _tris_registers
  2320  002A2E  20F4               	addwfc	prodh,w,c
  2321  002A30  6EDA               	movwf	fsr2h,c
  2322  002A32  CFDE F0C8          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  2323  002A36  CFDD F0C9          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  2324  002A3A  C0C8  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  2325  002A3E  C0C9  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  2326  002A42  51C6               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  2327  002A44  16DF               	andwf	indf2,f,c
  2328                           
  2329                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  2330  002A46  EF75  F015         	goto	l8668
  2331  002A4A                     l8662:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  2335  002A4A  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2336  002A4E  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2337  002A52  50DF               	movf	indf2,w,c
  2338  002A54  0B07               	andlw	7
  2339  002A56  6FC4               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2340  002A58  0E01               	movlw	1
  2341  002A5A  6FC5               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  2342  002A5C  2BC4               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2343  002A5E  EF33  F015         	goto	u9244
  2344  002A62                     u9245:
  2345  002A62  90D8               	bcf	status,0,c
  2346  002A64  37C5               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  2347  002A66                     u9244:
  2348  002A66  2FC4               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  2349  002A68  EF31  F015         	goto	u9245
  2350  002A6C  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2351  002A70  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2352  002A74  30DF               	rrcf	indf2,w,c
  2353  002A76  32E8               	rrcf	wreg,f,c
  2354  002A78  32E8               	rrcf	wreg,f,c
  2355  002A7A  0B07               	andlw	7
  2356  002A7C  0100               	movlb	0	; () banked
  2357  002A7E  6FC6               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  2358  002A80  51C6               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  2359  002A82  0D02               	mullw	2
  2360  002A84  0E94               	movlw	low _tris_registers
  2361  002A86  24F3               	addwf	243,w,c
  2362  002A88  6ED9               	movwf	fsr2l,c
  2363  002A8A  0E00               	movlw	high _tris_registers
  2364  002A8C  20F4               	addwfc	prodh,w,c
  2365  002A8E  6EDA               	movwf	fsr2h,c
  2366  002A90  CFDE F0C7          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  2367  002A94  CFDD F0C8          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  2368  002A98  C0C7  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  2369  002A9C  C0C8  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  2370  002AA0  51C5               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  2371  002AA2  12DF               	iorwf	indf2,f,c
  2372                           
  2373                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  2374  002AA4  EF75  F015         	goto	l8668
  2375  002AA8                     l8666:
  2376                           
  2377                           ; BSR set to: 0
  2378  002AA8  C02A  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  2379  002AAC  C02B  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  2380  002AB0  BCDF               	btfsc	indf2,6,c
  2381  002AB2  EF5D  F015         	goto	u9251
  2382  002AB6  EF60  F015         	goto	u9250
  2383  002ABA                     u9251:
  2384  002ABA  0E01               	movlw	1
  2385  002ABC  EF61  F015         	goto	u9260
  2386  002AC0                     u9250:
  2387  002AC0  0E00               	movlw	0
  2388  002AC2                     u9260:
  2389  002AC2  6FC4               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  2390  002AC4  6BC5               	clrf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  2391                           
  2392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2393                           ; Switch size 1, requested type "simple"
  2394                           ; Number of cases is 1, Range of values is 0 to 0
  2395                           ; switch strategies available:
  2396                           ; Name         Instructions Cycles
  2397                           ; simple_byte            4     3 (average)
  2398                           ;	Chosen strategy is simple_byte
  2399  002AC6  51C5               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  2400  002AC8  0A00               	xorlw	0	; case 0
  2401  002ACA  B4D8               	btfsc	status,2,c
  2402  002ACC  EF6A  F015         	goto	l10404
  2403  002AD0  EFEF  F014         	goto	l8658
  2404  002AD4                     l10404:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ; Switch size 1, requested type "simple"
  2408                           ; Number of cases is 2, Range of values is 0 to 1
  2409                           ; switch strategies available:
  2410                           ; Name         Instructions Cycles
  2411                           ; simple_byte            7     4 (average)
  2412                           ;	Chosen strategy is simple_byte
  2413  002AD4  51C4               	movf	??_GPIO_Pin_Direction_Initialize& (0+255),w,b
  2414  002AD6  0A00               	xorlw	0	; case 0
  2415  002AD8  B4D8               	btfsc	status,2,c
  2416  002ADA  EFF3  F014         	goto	l8660
  2417  002ADE  0A01               	xorlw	1	; case 1
  2418  002AE0  B4D8               	btfsc	status,2,c
  2419  002AE2  EF25  F015         	goto	l8662
  2420  002AE6  EFEF  F014         	goto	l8658
  2421  002AEA                     l8668:
  2422                           
  2423                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  2424  002AEA  502C               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  2425  002AEC  0012               	return		;funcret
  2426  002AEE                     __end_of_GPIO_Pin_Direction_Initialize:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _EUSART_Async_Init *****************
  2430 ;; Defined at:
  2431 ;;		line 42 in file "MCAL/EUSART/mcal_EUSART.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  _eusart_obj     2   32[BANK1 ] PTR const struct .
  2434 ;;		 -> _uart_obj(12), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  ret_val         1   34[BANK1 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2446 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:   12
  2453 ;; This function calls:
  2454 ;;		_async_Rx_config
  2455 ;;		_async_Tx_config
  2456 ;;		_async_config_baud_rate_gen
  2457 ;; This function is called by:
  2458 ;;		_application_intialize
  2459 ;;		_Bluetooth_Init
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text5
  2464  003A82                     __ptext5:
  2465                           	callstack 0
  2466  003A82                     _EUSART_Async_Init:
  2467                           	callstack 17
  2468  003A82                     
  2469                           ;MCAL/EUSART/mcal_EUSART.c: 46:     if(((void*)0) == _eusart_obj)
  2470  003A82  0101               	movlb	1	; () banked
  2471  003A84  5120               	movf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  2472  003A86  1121               	iorwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  2473  003A88  A4D8               	btfss	status,2,c
  2474  003A8A  EF49  F01D         	goto	u10351
  2475  003A8E  EF4B  F01D         	goto	u10350
  2476  003A92                     u10351:
  2477  003A92  EF4D  F01D         	goto	l453
  2478  003A96                     u10350:
  2479  003A96                     
  2480                           ; BSR set to: 1
  2481                           ;MCAL/EUSART/mcal_EUSART.c: 49:     }
  2482  003A96  EF71  F01D         	goto	l455
  2483  003A9A                     l453:
  2484                           
  2485                           ; BSR set to: 1
  2486                           ;MCAL/EUSART/mcal_EUSART.c: 51:     {;MCAL/EUSART/mcal_EUSART.c: 53:         (RCSTAbits.
      +                          SPEN = 0 );
  2487  003A9A  9EAB               	bcf	171,7,c	;volatile
  2488  003A9C                     
  2489                           ; BSR set to: 1
  2490                           ;MCAL/EUSART/mcal_EUSART.c: 56:         ret_val = async_config_baud_rate_gen(_eusart_obj
      +                          );
  2491  003A9C  C120  F0E2         	movff	EUSART_Async_Init@_eusart_obj,async_config_baud_rate_gen@_eusart_obj
  2492  003AA0  C121  F0E3         	movff	EUSART_Async_Init@_eusart_obj+1,async_config_baud_rate_gen@_eusart_obj+1
  2493  003AA4  EC1A  F00F         	call	_async_config_baud_rate_gen	;wreg free
  2494  003AA8  0101               	movlb	1	; () banked
  2495  003AAA  6F22               	movwf	EUSART_Async_Init@ret_val& (0+255),b
  2496  003AAC                     
  2497                           ; BSR set to: 1
  2498                           ;MCAL/EUSART/mcal_EUSART.c: 59:         (TXSTA1bits.SYNC = 0);
  2499  003AAC  98AC               	bcf	172,4,c	;volatile
  2500  003AAE                     
  2501                           ; BSR set to: 1
  2502                           ;MCAL/EUSART/mcal_EUSART.c: 62:         TRISCbits.RC6 = GPIO_DIRECTION_INPUT ;
  2503  003AAE  8C94               	bsf	148,6,c	;volatile
  2504                           
  2505                           ;MCAL/EUSART/mcal_EUSART.c: 64:         ret_val &= async_Tx_config(&(_eusart_obj->tx_con
      +                          fig));
  2506  003AB0  0E02               	movlw	2
  2507  003AB2  2520               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  2508  003AB4  6E2A               	movwf	async_Tx_config@_tx_obj^0,c
  2509  003AB6  0E00               	movlw	0
  2510  003AB8  2121               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  2511  003ABA  6E2B               	movwf	(async_Tx_config@_tx_obj+1)^0,c
  2512  003ABC  EC5A  F01A         	call	_async_Tx_config	;wreg free
  2513  003AC0  0101               	movlb	1	; () banked
  2514  003AC2  1722               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  2515  003AC4                     
  2516                           ; BSR set to: 1
  2517                           ;MCAL/EUSART/mcal_EUSART.c: 67:         TRISCbits.RC7 = GPIO_DIRECTION_INPUT ;
  2518  003AC4  8E94               	bsf	148,7,c	;volatile
  2519                           
  2520                           ;MCAL/EUSART/mcal_EUSART.c: 69:         ret_val &= async_Rx_config(&(_eusart_obj->rx_con
      +                          fig));
  2521  003AC6  0E03               	movlw	3
  2522  003AC8  2520               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  2523  003ACA  0100               	movlb	0	; () banked
  2524  003ACC  6FC4               	movwf	async_Rx_config@_rx_obj& (0+255),b
  2525  003ACE  0E00               	movlw	0
  2526  003AD0  0101               	movlb	1	; () banked
  2527  003AD2  2121               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  2528  003AD4  0100               	movlb	0	; () banked
  2529  003AD6  6FC5               	movwf	(async_Rx_config@_rx_obj+1)& (0+255),b
  2530  003AD8  ECA8  F018         	call	_async_Rx_config	;wreg free
  2531  003ADC  0101               	movlb	1	; () banked
  2532  003ADE  1722               	andwf	EUSART_Async_Init@ret_val& (0+255),f,b
  2533  003AE0                     
  2534                           ; BSR set to: 1
  2535                           ;MCAL/EUSART/mcal_EUSART.c: 72:         (RCSTAbits.SPEN = 1 );
  2536  003AE0  8EAB               	bsf	171,7,c	;volatile
  2537  003AE2                     l455:
  2538                           
  2539                           ; BSR set to: 1
  2540  003AE2  0012               	return		;funcret
  2541  003AE4                     __end_of_EUSART_Async_Init:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _async_config_baud_rate_gen *****************
  2545 ;; Defined at:
  2546 ;;		line 564 in file "MCAL/EUSART/mcal_EUSART.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  _eusart_obj     2   30[BANK0 ] PTR const struct .
  2549 ;;		 -> _uart_obj(12), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  Baudrate_tem    4   24[BANK1 ] float 
  2552 ;;  ret_val         1   23[BANK1 ] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      unsigned char 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         0       2      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:       13 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:   11
  2569 ;; This function calls:
  2570 ;;		___fladd
  2571 ;;		___fldiv
  2572 ;;		___fltol
  2573 ;;		___xxtofl
  2574 ;; This function is called by:
  2575 ;;		_EUSART_Async_Init
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text6
  2580  001E34                     __ptext6:
  2581                           	callstack 0
  2582  001E34                     _async_config_baud_rate_gen:
  2583                           	callstack 17
  2584  001E34                     
  2585                           ;MCAL/EUSART/mcal_EUSART.c: 564: static __attribute__((inline)) Std_ReturnType async_con
      +                          fig_baud_rate_gen(const uart_config_st *_eusart_obj);MCAL/EUSART/mcal_EUSART.c: 565: {;M
      +                          CAL/EUSART/mcal_EUSART.c: 567:     Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  2586  001E34  0E01               	movlw	1
  2587  001E36  0101               	movlb	1	; () banked
  2588  001E38  6F17               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  2589  001E3A                     
  2590                           ; BSR set to: 1
  2591                           ;MCAL/EUSART/mcal_EUSART.c: 569:     if(((void*)0) == _eusart_obj)
  2592  001E3A  0100               	movlb	0	; () banked
  2593  001E3C  51E2               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  2594  001E3E  11E3               	iorwf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  2595  001E40  A4D8               	btfss	status,2,c
  2596  001E42  EF25  F00F         	goto	u10241
  2597  001E46  EF27  F00F         	goto	u10240
  2598  001E4A                     u10241:
  2599  001E4A  EF2C  F00F         	goto	l9218
  2600  001E4E                     u10240:
  2601  001E4E                     
  2602                           ; BSR set to: 0
  2603                           ;MCAL/EUSART/mcal_EUSART.c: 570:     {;MCAL/EUSART/mcal_EUSART.c: 571:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  2604  001E4E  0E00               	movlw	0
  2605  001E50  0101               	movlb	1	; () banked
  2606  001E52  6F17               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  2607                           
  2608                           ;MCAL/EUSART/mcal_EUSART.c: 572:     }
  2609  001E54  EFF7  F010         	goto	l9244
  2610  001E58                     l9218:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;MCAL/EUSART/mcal_EUSART.c: 574:     {;MCAL/EUSART/mcal_EUSART.c: 575:         float32 B
      +                          audrate_temp=0;
  2614  001E58  0E00               	movlw	0
  2615  001E5A  0101               	movlb	1	; () banked
  2616  001E5C  6F18               	movwf	async_config_baud_rate_gen@Baudrate_temp& (0+255),b
  2617  001E5E  0E00               	movlw	0
  2618  001E60  6F19               	movwf	(async_config_baud_rate_gen@Baudrate_temp+1)& (0+255),b
  2619  001E62  0E00               	movlw	0
  2620  001E64  6F1A               	movwf	(async_config_baud_rate_gen@Baudrate_temp+2)& (0+255),b
  2621  001E66  0E00               	movlw	0
  2622  001E68  6F1B               	movwf	(async_config_baud_rate_gen@Baudrate_temp+3)& (0+255),b
  2623                           
  2624                           ;MCAL/EUSART/mcal_EUSART.c: 576:         switch(_eusart_obj->baud_rate_config)
  2625  001E6A  EFB3  F010         	goto	l9240
  2626  001E6E                     l596:
  2627                           
  2628                           ; BSR set to: 1
  2629                           ;MCAL/EUSART/mcal_EUSART.c: 579:                 TXSTAbits.BRGH = 0 ;
  2630  001E6E  94AC               	bcf	172,2,c	;volatile
  2631                           
  2632                           ;MCAL/EUSART/mcal_EUSART.c: 580:                 BAUDCONbits.BRG16 = 0 ;
  2633  001E70  96B8               	bcf	184,3,c	;volatile
  2634  001E72                     
  2635                           ; BSR set to: 1
  2636                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  2637  001E72  C0E2  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  2638  001E76  C0E3  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  2639  001E7A  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  2640  001E7E  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  2641  001E82  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  2642  001E86  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  2643  001E8A  6A2C               	clrf	(___xxtofl@val+2)^0,c
  2644  001E8C  6A2D               	clrf	(___xxtofl@val+3)^0,c
  2645  001E8E  0E00               	movlw	0
  2646  001E90  ECF8  F013         	call	___xxtofl
  2647  001E94  C02A  F0D2         	movff	?___xxtofl,___fldiv@a
  2648  001E98  C02B  F0D3         	movff	?___xxtofl+1,___fldiv@a+1
  2649  001E9C  C02C  F0D4         	movff	?___xxtofl+2,___fldiv@a+2
  2650  001EA0  C02D  F0D5         	movff	?___xxtofl+3,___fldiv@a+3
  2651  001EA4  0E00               	movlw	0
  2652  001EA6  0100               	movlb	0	; () banked
  2653  001EA8  6FCE               	movwf	___fldiv@b& (0+255),b
  2654  001EAA  0E24               	movlw	36
  2655  001EAC  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  2656  001EAE  0EF4               	movlw	244
  2657  001EB0  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  2658  001EB2  0E4A               	movlw	74
  2659  001EB4  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  2660  001EB6  EC1F  F00B         	call	___fldiv	;wreg free
  2661  001EBA  C0CE  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4701
  2662  001EBE  C0CF  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4701+1
  2663  001EC2  C0D0  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4701+2
  2664  001EC6  C0D1  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4701+3
  2665  001ECA                     
  2666                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  2667  001ECA  0E00               	movlw	0
  2668  001ECC  0100               	movlb	0	; () banked
  2669  001ECE  6FD2               	movwf	___fldiv@a& (0+255),b
  2670  001ED0  0E00               	movlw	0
  2671  001ED2  6FD3               	movwf	(___fldiv@a+1)& (0+255),b
  2672  001ED4  0E80               	movlw	128
  2673  001ED6  6FD4               	movwf	(___fldiv@a+2)& (0+255),b
  2674  001ED8  0E42               	movlw	66
  2675  001EDA  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  2676  001EDC  C11C  F0CE         	movff	_async_config_baud_rate_gen$4701,___fldiv@b
  2677  001EE0  C11D  F0CF         	movff	_async_config_baud_rate_gen$4701+1,___fldiv@b+1
  2678  001EE4  C11E  F0D0         	movff	_async_config_baud_rate_gen$4701+2,___fldiv@b+2
  2679  001EE8  C11F  F0D1         	movff	_async_config_baud_rate_gen$4701+3,___fldiv@b+3
  2680  001EEC  EC1F  F00B         	call	___fldiv	;wreg free
  2681  001EF0  C0CE  F0DA         	movff	?___fldiv,___fladd@b
  2682  001EF4  C0CF  F0DB         	movff	?___fldiv+1,___fladd@b+1
  2683  001EF8  C0D0  F0DC         	movff	?___fldiv+2,___fladd@b+2
  2684  001EFC  C0D1  F0DD         	movff	?___fldiv+3,___fladd@b+3
  2685  001F00  0E00               	movlw	0
  2686  001F02  0100               	movlb	0	; () banked
  2687  001F04  6FDE               	movwf	___fladd@a& (0+255),b
  2688  001F06  0E00               	movlw	0
  2689  001F08  6FDF               	movwf	(___fladd@a+1)& (0+255),b
  2690  001F0A  0E80               	movlw	128
  2691  001F0C  6FE0               	movwf	(___fladd@a+2)& (0+255),b
  2692  001F0E  0EBF               	movlw	191
  2693  001F10  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  2694  001F12  EC70  F008         	call	___fladd	;wreg free
  2695  001F16  C0DA  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  2696  001F1A  C0DB  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  2697  001F1E  C0DC  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  2698  001F22  C0DD  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  2699                           
  2700                           ;MCAL/EUSART/mcal_EUSART.c: 582:                 break;
  2701  001F26  EFD8  F010         	goto	l9242
  2702  001F2A                     l598:
  2703                           
  2704                           ; BSR set to: 1
  2705                           ;MCAL/EUSART/mcal_EUSART.c: 584:                 TXSTAbits.BRGH = 1 ;
  2706  001F2A  84AC               	bsf	172,2,c	;volatile
  2707                           
  2708                           ;MCAL/EUSART/mcal_EUSART.c: 585:                 BAUDCONbits.BRG16 = 0 ;
  2709  001F2C  96B8               	bcf	184,3,c	;volatile
  2710  001F2E                     
  2711                           ; BSR set to: 1
  2712                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  2713  001F2E  C0E2  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  2714  001F32  C0E3  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  2715  001F36  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  2716  001F3A  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  2717  001F3E  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  2718  001F42  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  2719  001F46  6A2C               	clrf	(___xxtofl@val+2)^0,c
  2720  001F48  6A2D               	clrf	(___xxtofl@val+3)^0,c
  2721  001F4A  0E00               	movlw	0
  2722  001F4C  ECF8  F013         	call	___xxtofl
  2723  001F50  C02A  F0D2         	movff	?___xxtofl,___fldiv@a
  2724  001F54  C02B  F0D3         	movff	?___xxtofl+1,___fldiv@a+1
  2725  001F58  C02C  F0D4         	movff	?___xxtofl+2,___fldiv@a+2
  2726  001F5C  C02D  F0D5         	movff	?___xxtofl+3,___fldiv@a+3
  2727  001F60  0E00               	movlw	0
  2728  001F62  0100               	movlb	0	; () banked
  2729  001F64  6FCE               	movwf	___fldiv@b& (0+255),b
  2730  001F66  0E24               	movlw	36
  2731  001F68  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  2732  001F6A  0EF4               	movlw	244
  2733  001F6C  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  2734  001F6E  0E4A               	movlw	74
  2735  001F70  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  2736  001F72  EC1F  F00B         	call	___fldiv	;wreg free
  2737  001F76  C0CE  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4701
  2738  001F7A  C0CF  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4701+1
  2739  001F7E  C0D0  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4701+2
  2740  001F82  C0D1  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4701+3
  2741  001F86                     
  2742                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  2743  001F86  0E00               	movlw	0
  2744  001F88  0100               	movlb	0	; () banked
  2745  001F8A  6FD2               	movwf	___fldiv@a& (0+255),b
  2746  001F8C  0E00               	movlw	0
  2747  001F8E  6FD3               	movwf	(___fldiv@a+1)& (0+255),b
  2748  001F90  0E80               	movlw	128
  2749  001F92  6FD4               	movwf	(___fldiv@a+2)& (0+255),b
  2750  001F94  0E41               	movlw	65
  2751  001F96  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  2752  001F98  C11C  F0CE         	movff	_async_config_baud_rate_gen$4701,___fldiv@b
  2753  001F9C  C11D  F0CF         	movff	_async_config_baud_rate_gen$4701+1,___fldiv@b+1
  2754  001FA0  C11E  F0D0         	movff	_async_config_baud_rate_gen$4701+2,___fldiv@b+2
  2755  001FA4  C11F  F0D1         	movff	_async_config_baud_rate_gen$4701+3,___fldiv@b+3
  2756  001FA8  EC1F  F00B         	call	___fldiv	;wreg free
  2757  001FAC  C0CE  F0DA         	movff	?___fldiv,___fladd@b
  2758  001FB0  C0CF  F0DB         	movff	?___fldiv+1,___fladd@b+1
  2759  001FB4  C0D0  F0DC         	movff	?___fldiv+2,___fladd@b+2
  2760  001FB8  C0D1  F0DD         	movff	?___fldiv+3,___fladd@b+3
  2761  001FBC  0E00               	movlw	0
  2762  001FBE  0100               	movlb	0	; () banked
  2763  001FC0  6FDE               	movwf	___fladd@a& (0+255),b
  2764  001FC2  0E00               	movlw	0
  2765  001FC4  6FDF               	movwf	(___fladd@a+1)& (0+255),b
  2766  001FC6  0E80               	movlw	128
  2767  001FC8  6FE0               	movwf	(___fladd@a+2)& (0+255),b
  2768  001FCA  0EBF               	movlw	191
  2769  001FCC  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  2770  001FCE  EC70  F008         	call	___fladd	;wreg free
  2771  001FD2  C0DA  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  2772  001FD6  C0DB  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  2773  001FDA  C0DC  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  2774  001FDE  C0DD  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  2775                           
  2776                           ;MCAL/EUSART/mcal_EUSART.c: 587:                 break ;
  2777  001FE2  EFD8  F010         	goto	l9242
  2778  001FE6                     l599:
  2779                           
  2780                           ; BSR set to: 1
  2781                           ;MCAL/EUSART/mcal_EUSART.c: 589:                 TXSTAbits.BRGH = 0 ;
  2782  001FE6  94AC               	bcf	172,2,c	;volatile
  2783                           
  2784                           ;MCAL/EUSART/mcal_EUSART.c: 590:                 BAUDCONbits.BRG16 = 1 ;
  2785  001FE8  86B8               	bsf	184,3,c	;volatile
  2786  001FEA                     
  2787                           ; BSR set to: 1
  2788                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  2789  001FEA  C0E2  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  2790  001FEE  C0E3  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  2791  001FF2  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  2792  001FF6  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  2793  001FFA  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  2794  001FFE  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  2795  002002  6A2C               	clrf	(___xxtofl@val+2)^0,c
  2796  002004  6A2D               	clrf	(___xxtofl@val+3)^0,c
  2797  002006  0E00               	movlw	0
  2798  002008  ECF8  F013         	call	___xxtofl
  2799  00200C  C02A  F0D2         	movff	?___xxtofl,___fldiv@a
  2800  002010  C02B  F0D3         	movff	?___xxtofl+1,___fldiv@a+1
  2801  002014  C02C  F0D4         	movff	?___xxtofl+2,___fldiv@a+2
  2802  002018  C02D  F0D5         	movff	?___xxtofl+3,___fldiv@a+3
  2803  00201C  0E00               	movlw	0
  2804  00201E  0100               	movlb	0	; () banked
  2805  002020  6FCE               	movwf	___fldiv@b& (0+255),b
  2806  002022  0E24               	movlw	36
  2807  002024  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  2808  002026  0EF4               	movlw	244
  2809  002028  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  2810  00202A  0E4A               	movlw	74
  2811  00202C  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  2812  00202E  EC1F  F00B         	call	___fldiv	;wreg free
  2813  002032  C0CE  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4701
  2814  002036  C0CF  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4701+1
  2815  00203A  C0D0  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4701+2
  2816  00203E  C0D1  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4701+3
  2817  002042                     
  2818                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  2819  002042  0E00               	movlw	0
  2820  002044  0100               	movlb	0	; () banked
  2821  002046  6FD2               	movwf	___fldiv@a& (0+255),b
  2822  002048  0E00               	movlw	0
  2823  00204A  6FD3               	movwf	(___fldiv@a+1)& (0+255),b
  2824  00204C  0E80               	movlw	128
  2825  00204E  6FD4               	movwf	(___fldiv@a+2)& (0+255),b
  2826  002050  0E41               	movlw	65
  2827  002052  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  2828  002054  C11C  F0CE         	movff	_async_config_baud_rate_gen$4701,___fldiv@b
  2829  002058  C11D  F0CF         	movff	_async_config_baud_rate_gen$4701+1,___fldiv@b+1
  2830  00205C  C11E  F0D0         	movff	_async_config_baud_rate_gen$4701+2,___fldiv@b+2
  2831  002060  C11F  F0D1         	movff	_async_config_baud_rate_gen$4701+3,___fldiv@b+3
  2832  002064  EC1F  F00B         	call	___fldiv	;wreg free
  2833  002068  C0CE  F0DA         	movff	?___fldiv,___fladd@b
  2834  00206C  C0CF  F0DB         	movff	?___fldiv+1,___fladd@b+1
  2835  002070  C0D0  F0DC         	movff	?___fldiv+2,___fladd@b+2
  2836  002074  C0D1  F0DD         	movff	?___fldiv+3,___fladd@b+3
  2837  002078  0E00               	movlw	0
  2838  00207A  0100               	movlb	0	; () banked
  2839  00207C  6FDE               	movwf	___fladd@a& (0+255),b
  2840  00207E  0E00               	movlw	0
  2841  002080  6FDF               	movwf	(___fladd@a+1)& (0+255),b
  2842  002082  0E80               	movlw	128
  2843  002084  6FE0               	movwf	(___fladd@a+2)& (0+255),b
  2844  002086  0EBF               	movlw	191
  2845  002088  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  2846  00208A  EC70  F008         	call	___fladd	;wreg free
  2847  00208E  C0DA  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  2848  002092  C0DB  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  2849  002096  C0DC  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  2850  00209A  C0DD  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  2851                           
  2852                           ;MCAL/EUSART/mcal_EUSART.c: 592:                 break ;
  2853  00209E  EFD8  F010         	goto	l9242
  2854  0020A2                     l600:
  2855                           
  2856                           ; BSR set to: 1
  2857                           ;MCAL/EUSART/mcal_EUSART.c: 594:                 TXSTAbits.BRGH = 1 ;
  2858  0020A2  84AC               	bsf	172,2,c	;volatile
  2859                           
  2860                           ;MCAL/EUSART/mcal_EUSART.c: 595:                 BAUDCONbits.BRG16 = 1 ;
  2861  0020A4  86B8               	bsf	184,3,c	;volatile
  2862  0020A6                     
  2863                           ; BSR set to: 1
  2864                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  2865  0020A6  C0E2  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  2866  0020AA  C0E3  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  2867  0020AE  CFDE F115          	movff	postinc2,??_async_config_baud_rate_gen
  2868  0020B2  CFDD F116          	movff	postdec2,??_async_config_baud_rate_gen+1
  2869  0020B6  C115  F02A         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  2870  0020BA  C116  F02B         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  2871  0020BE  6A2C               	clrf	(___xxtofl@val+2)^0,c
  2872  0020C0  6A2D               	clrf	(___xxtofl@val+3)^0,c
  2873  0020C2  0E00               	movlw	0
  2874  0020C4  ECF8  F013         	call	___xxtofl
  2875  0020C8  C02A  F0D2         	movff	?___xxtofl,___fldiv@a
  2876  0020CC  C02B  F0D3         	movff	?___xxtofl+1,___fldiv@a+1
  2877  0020D0  C02C  F0D4         	movff	?___xxtofl+2,___fldiv@a+2
  2878  0020D4  C02D  F0D5         	movff	?___xxtofl+3,___fldiv@a+3
  2879  0020D8  0E00               	movlw	0
  2880  0020DA  0100               	movlb	0	; () banked
  2881  0020DC  6FCE               	movwf	___fldiv@b& (0+255),b
  2882  0020DE  0E24               	movlw	36
  2883  0020E0  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  2884  0020E2  0EF4               	movlw	244
  2885  0020E4  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  2886  0020E6  0E4A               	movlw	74
  2887  0020E8  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  2888  0020EA  EC1F  F00B         	call	___fldiv	;wreg free
  2889  0020EE  C0CE  F11C         	movff	?___fldiv,_async_config_baud_rate_gen$4701
  2890  0020F2  C0CF  F11D         	movff	?___fldiv+1,_async_config_baud_rate_gen$4701+1
  2891  0020F6  C0D0  F11E         	movff	?___fldiv+2,_async_config_baud_rate_gen$4701+2
  2892  0020FA  C0D1  F11F         	movff	?___fldiv+3,_async_config_baud_rate_gen$4701+3
  2893  0020FE                     
  2894                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  2895  0020FE  0E00               	movlw	0
  2896  002100  0100               	movlb	0	; () banked
  2897  002102  6FD2               	movwf	___fldiv@a& (0+255),b
  2898  002104  0E00               	movlw	0
  2899  002106  6FD3               	movwf	(___fldiv@a+1)& (0+255),b
  2900  002108  0E80               	movlw	128
  2901  00210A  6FD4               	movwf	(___fldiv@a+2)& (0+255),b
  2902  00210C  0E40               	movlw	64
  2903  00210E  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  2904  002110  C11C  F0CE         	movff	_async_config_baud_rate_gen$4701,___fldiv@b
  2905  002114  C11D  F0CF         	movff	_async_config_baud_rate_gen$4701+1,___fldiv@b+1
  2906  002118  C11E  F0D0         	movff	_async_config_baud_rate_gen$4701+2,___fldiv@b+2
  2907  00211C  C11F  F0D1         	movff	_async_config_baud_rate_gen$4701+3,___fldiv@b+3
  2908  002120  EC1F  F00B         	call	___fldiv	;wreg free
  2909  002124  C0CE  F0DA         	movff	?___fldiv,___fladd@b
  2910  002128  C0CF  F0DB         	movff	?___fldiv+1,___fladd@b+1
  2911  00212C  C0D0  F0DC         	movff	?___fldiv+2,___fladd@b+2
  2912  002130  C0D1  F0DD         	movff	?___fldiv+3,___fladd@b+3
  2913  002134  0E00               	movlw	0
  2914  002136  0100               	movlb	0	; () banked
  2915  002138  6FDE               	movwf	___fladd@a& (0+255),b
  2916  00213A  0E00               	movlw	0
  2917  00213C  6FDF               	movwf	(___fladd@a+1)& (0+255),b
  2918  00213E  0E80               	movlw	128
  2919  002140  6FE0               	movwf	(___fladd@a+2)& (0+255),b
  2920  002142  0EBF               	movlw	191
  2921  002144  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  2922  002146  EC70  F008         	call	___fladd	;wreg free
  2923  00214A  C0DA  F118         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  2924  00214E  C0DB  F119         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  2925  002152  C0DC  F11A         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  2926  002156  C0DD  F11B         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  2927                           
  2928                           ;MCAL/EUSART/mcal_EUSART.c: 597:                 break ;
  2929  00215A  EFD8  F010         	goto	l9242
  2930  00215E                     l9236:
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;MCAL/EUSART/mcal_EUSART.c: 599:                 ret_val = (Std_ReturnType) 0x00 ;
  2934  00215E  0E00               	movlw	0
  2935  002160  6F17               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  2936                           
  2937                           ;MCAL/EUSART/mcal_EUSART.c: 600:                 break ;
  2938  002162  EFD8  F010         	goto	l9242
  2939  002166                     l9240:
  2940                           
  2941                           ; BSR set to: 1
  2942  002166  0100               	movlb	0	; () banked
  2943  002168  EE20 F00B          	lfsr	2,11
  2944  00216C  51E2               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  2945  00216E  26D9               	addwf	fsr2l,f,c
  2946  002170  51E3               	movf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  2947  002172  22DA               	addwfc	fsr2h,f,c
  2948  002174  50DF               	movf	indf2,w,c
  2949  002176  0101               	movlb	1	; () banked
  2950  002178  6F15               	movwf	??_async_config_baud_rate_gen& (0+255),b
  2951  00217A  6B16               	clrf	(??_async_config_baud_rate_gen+1)& (0+255),b
  2952                           
  2953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2954                           ; Switch size 1, requested type "simple"
  2955                           ; Number of cases is 1, Range of values is 0 to 0
  2956                           ; switch strategies available:
  2957                           ; Name         Instructions Cycles
  2958                           ; simple_byte            4     3 (average)
  2959                           ;	Chosen strategy is simple_byte
  2960  00217C  5116               	movf	(??_async_config_baud_rate_gen+1)& (0+255),w,b
  2961  00217E  0A00               	xorlw	0	; case 0
  2962  002180  B4D8               	btfsc	status,2,c
  2963  002182  EFC5  F010         	goto	l10406
  2964  002186  EFAF  F010         	goto	l9236
  2965  00218A                     l10406:
  2966                           
  2967                           ; BSR set to: 1
  2968                           ; Switch size 1, requested type "simple"
  2969                           ; Number of cases is 4, Range of values is 0 to 3
  2970                           ; switch strategies available:
  2971                           ; Name         Instructions Cycles
  2972                           ; simple_byte           13     7 (average)
  2973                           ;	Chosen strategy is simple_byte
  2974  00218A  5115               	movf	??_async_config_baud_rate_gen& (0+255),w,b
  2975  00218C  0A00               	xorlw	0	; case 0
  2976  00218E  B4D8               	btfsc	status,2,c
  2977  002190  EF37  F00F         	goto	l596
  2978  002194  0A01               	xorlw	1	; case 1
  2979  002196  B4D8               	btfsc	status,2,c
  2980  002198  EF95  F00F         	goto	l598
  2981  00219C  0A03               	xorlw	3	; case 2
  2982  00219E  B4D8               	btfsc	status,2,c
  2983  0021A0  EFF3  F00F         	goto	l599
  2984  0021A4  0A01               	xorlw	1	; case 3
  2985  0021A6  B4D8               	btfsc	status,2,c
  2986  0021A8  EF51  F010         	goto	l600
  2987  0021AC  EFAF  F010         	goto	l9236
  2988  0021B0                     l9242:
  2989                           
  2990                           ;MCAL/EUSART/mcal_EUSART.c: 604:         SPBRG=(uint8)((uint32)Baudrate_temp);
  2991  0021B0  C118  F02A         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  2992  0021B4  C119  F02B         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  2993  0021B8  C11A  F02C         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  2994  0021BC  C11B  F02D         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  2995  0021C0  EC3F  F017         	call	___fltol	;wreg free
  2996  0021C4  502A               	movf	?___fltol^0,w,c
  2997  0021C6  6EAF               	movwf	175,c	;volatile
  2998                           
  2999                           ;MCAL/EUSART/mcal_EUSART.c: 605:         SPBRGH=(uint8)(((uint32)Baudrate_temp)>>8);
  3000  0021C8  C118  F02A         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  3001  0021CC  C119  F02B         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  3002  0021D0  C11A  F02C         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  3003  0021D4  C11B  F02D         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  3004  0021D8  EC3F  F017         	call	___fltol	;wreg free
  3005  0021DC  C02B  F02A         	movff	?___fltol+1,?___fltol
  3006  0021E0  C02C  F02B         	movff	?___fltol+2,?___fltol+1
  3007  0021E4  C02D  F02C         	movff	?___fltol+3,?___fltol+2
  3008  0021E8  6A2D               	clrf	(?___fltol+3)^0,c
  3009  0021EA  502A               	movf	?___fltol^0,w,c
  3010  0021EC  6EB0               	movwf	176,c	;volatile
  3011  0021EE                     l9244:
  3012                           
  3013                           ;MCAL/EUSART/mcal_EUSART.c: 608:     return ret_val ;
  3014  0021EE  0101               	movlb	1	; () banked
  3015  0021F0  5117               	movf	async_config_baud_rate_gen@ret_val& (0+255),w,b
  3016  0021F2                     
  3017                           ; BSR set to: 1
  3018  0021F2  0012               	return		;funcret
  3019  0021F4                     __end_of_async_config_baud_rate_gen:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function ___xxtofl *****************
  3023 ;; Defined at:
  3024 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  sign            1    wreg     unsigned char 
  3027 ;;  val             4   41[COMRAM] long 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  sign            1    4[BANK0 ] unsigned char 
  3030 ;;  arg             4    6[BANK0 ] unsigned long 
  3031 ;;  exp             1    5[BANK0 ] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  4   41[COMRAM] unsigned char 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:       14 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:   10
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_async_config_baud_rate_gen
  3052 ;;		_Servo_SetAngle
  3053 ;;		_CCP_PWM_Set_Duty
  3054 ;;		_CCP_PWM_Mode_Config
  3055 ;;		_I2C_Master_Mode_Clock_Configurations
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text7
  3060  0027F0                     __ptext7:
  3061                           	callstack 0
  3062  0027F0                     ___xxtofl:
  3063                           	callstack 17
  3064                           
  3065                           ; BSR set to: 1
  3066                           ;incstack = 0
  3067                           ;___xxtofl@sign stored from wreg
  3068  0027F0  0100               	movlb	0	; () banked
  3069  0027F2  6FC8               	movwf	___xxtofl@sign& (0+255),b
  3070  0027F4  0100               	movlb	0	; () banked
  3071  0027F6  51C8               	movf	___xxtofl@sign& (0+255),w,b
  3072  0027F8  B4D8               	btfsc	status,2,c
  3073  0027FA  EF01  F014         	goto	u9961
  3074  0027FE  EF03  F014         	goto	u9960
  3075  002802                     u9961:
  3076  002802  EF25  F014         	goto	l2249
  3077  002806                     u9960:
  3078  002806                     
  3079                           ; BSR set to: 0
  3080  002806  BE2D               	btfsc	(___xxtofl@val+3)^0,7,c
  3081  002808  EF0A  F014         	goto	u9970
  3082  00280C  EF08  F014         	goto	u9971
  3083  002810                     u9971:
  3084  002810  EF25  F014         	goto	l2249
  3085  002814                     u9970:
  3086  002814                     
  3087                           ; BSR set to: 0
  3088  002814  C02A  F0C4         	movff	___xxtofl@val,??___xxtofl
  3089  002818  C02B  F0C5         	movff	___xxtofl@val+1,??___xxtofl+1
  3090  00281C  C02C  F0C6         	movff	___xxtofl@val+2,??___xxtofl+2
  3091  002820  C02D  F0C7         	movff	___xxtofl@val+3,??___xxtofl+3
  3092  002824  1FC4               	comf	??___xxtofl& (0+255),f,b
  3093  002826  1FC5               	comf	(??___xxtofl+1)& (0+255),f,b
  3094  002828  1FC6               	comf	(??___xxtofl+2)& (0+255),f,b
  3095  00282A  1FC7               	comf	(??___xxtofl+3)& (0+255),f,b
  3096  00282C  2BC4               	incf	??___xxtofl& (0+255),f,b
  3097  00282E  0E00               	movlw	0
  3098  002830  23C5               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3099  002832  23C6               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3100  002834  23C7               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3101  002836  C0C4  F0CA         	movff	??___xxtofl,___xxtofl@arg
  3102  00283A  C0C5  F0CB         	movff	??___xxtofl+1,___xxtofl@arg+1
  3103  00283E  C0C6  F0CC         	movff	??___xxtofl+2,___xxtofl@arg+2
  3104  002842  C0C7  F0CD         	movff	??___xxtofl+3,___xxtofl@arg+3
  3105  002846  EF2D  F014         	goto	l9066
  3106  00284A                     l2249:
  3107                           
  3108                           ; BSR set to: 0
  3109  00284A  C02A  F0CA         	movff	___xxtofl@val,___xxtofl@arg
  3110  00284E  C02B  F0CB         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3111  002852  C02C  F0CC         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3112  002856  C02D  F0CD         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3113  00285A                     l9066:
  3114                           
  3115                           ; BSR set to: 0
  3116  00285A  502A               	movf	___xxtofl@val^0,w,c
  3117  00285C  102B               	iorwf	(___xxtofl@val+1)^0,w,c
  3118  00285E  102C               	iorwf	(___xxtofl@val+2)^0,w,c
  3119  002860  102D               	iorwf	(___xxtofl@val+3)^0,w,c
  3120  002862  A4D8               	btfss	status,2,c
  3121  002864  EF36  F014         	goto	u9981
  3122  002868  EF38  F014         	goto	u9980
  3123  00286C                     u9981:
  3124  00286C  EF42  F014         	goto	l9072
  3125  002870                     u9980:
  3126  002870                     
  3127                           ; BSR set to: 0
  3128  002870  0E00               	movlw	0
  3129  002872  6E2A               	movwf	?___xxtofl^0,c
  3130  002874  0E00               	movlw	0
  3131  002876  6E2B               	movwf	(?___xxtofl+1)^0,c
  3132  002878  0E00               	movlw	0
  3133  00287A  6E2C               	movwf	(?___xxtofl+2)^0,c
  3134  00287C  0E00               	movlw	0
  3135  00287E  6E2D               	movwf	(?___xxtofl+3)^0,c
  3136  002880  EFD3  F014         	goto	l2252
  3137  002884                     l9072:
  3138                           
  3139                           ; BSR set to: 0
  3140  002884  0E96               	movlw	150
  3141  002886  6FC9               	movwf	___xxtofl@exp& (0+255),b
  3142  002888  EF4C  F014         	goto	l9076
  3143  00288C                     l9074:
  3144                           
  3145                           ; BSR set to: 0
  3146  00288C  2BC9               	incf	___xxtofl@exp& (0+255),f,b
  3147  00288E  90D8               	bcf	status,0,c
  3148  002890  33CD               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3149  002892  33CC               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3150  002894  33CB               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3151  002896  33CA               	rrcf	___xxtofl@arg& (0+255),f,b
  3152  002898                     l9076:
  3153                           
  3154                           ; BSR set to: 0
  3155  002898  0E00               	movlw	0
  3156  00289A  15CA               	andwf	___xxtofl@arg& (0+255),w,b
  3157  00289C  6FC4               	movwf	??___xxtofl& (0+255),b
  3158  00289E  0E00               	movlw	0
  3159  0028A0  15CB               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3160  0028A2  6FC5               	movwf	(??___xxtofl+1)& (0+255),b
  3161  0028A4  0E00               	movlw	0
  3162  0028A6  15CC               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3163  0028A8  6FC6               	movwf	(??___xxtofl+2)& (0+255),b
  3164  0028AA  0EFE               	movlw	254
  3165  0028AC  15CD               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3166  0028AE  6FC7               	movwf	(??___xxtofl+3)& (0+255),b
  3167  0028B0  51C4               	movf	??___xxtofl& (0+255),w,b
  3168  0028B2  11C5               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3169  0028B4  11C6               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3170  0028B6  11C7               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3171  0028B8  A4D8               	btfss	status,2,c
  3172  0028BA  EF61  F014         	goto	u9991
  3173  0028BE  EF63  F014         	goto	u9990
  3174  0028C2                     u9991:
  3175  0028C2  EF46  F014         	goto	l9074
  3176  0028C6                     u9990:
  3177  0028C6  EF71  F014         	goto	l2256
  3178  0028CA                     l9078:
  3179                           
  3180                           ; BSR set to: 0
  3181  0028CA  2BC9               	incf	___xxtofl@exp& (0+255),f,b
  3182  0028CC                     
  3183                           ; BSR set to: 0
  3184  0028CC  0E01               	movlw	1
  3185  0028CE  27CA               	addwf	___xxtofl@arg& (0+255),f,b
  3186  0028D0  0E00               	movlw	0
  3187  0028D2  23CB               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3188  0028D4  23CC               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3189  0028D6  23CD               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3190  0028D8                     
  3191                           ; BSR set to: 0
  3192  0028D8  90D8               	bcf	status,0,c
  3193  0028DA  33CD               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3194  0028DC  33CC               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3195  0028DE  33CB               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3196  0028E0  33CA               	rrcf	___xxtofl@arg& (0+255),f,b
  3197  0028E2                     l2256:
  3198                           
  3199                           ; BSR set to: 0
  3200  0028E2  0E00               	movlw	0
  3201  0028E4  15CA               	andwf	___xxtofl@arg& (0+255),w,b
  3202  0028E6  6FC4               	movwf	??___xxtofl& (0+255),b
  3203  0028E8  0E00               	movlw	0
  3204  0028EA  15CB               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3205  0028EC  6FC5               	movwf	(??___xxtofl+1)& (0+255),b
  3206  0028EE  0E00               	movlw	0
  3207  0028F0  15CC               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3208  0028F2  6FC6               	movwf	(??___xxtofl+2)& (0+255),b
  3209  0028F4  0EFF               	movlw	255
  3210  0028F6  15CD               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3211  0028F8  6FC7               	movwf	(??___xxtofl+3)& (0+255),b
  3212  0028FA  51C4               	movf	??___xxtofl& (0+255),w,b
  3213  0028FC  11C5               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3214  0028FE  11C6               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3215  002900  11C7               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3216  002902  A4D8               	btfss	status,2,c
  3217  002904  EF86  F014         	goto	u10001
  3218  002908  EF88  F014         	goto	u10000
  3219  00290C                     u10001:
  3220  00290C  EF65  F014         	goto	l9078
  3221  002910                     u10000:
  3222  002910  EF90  F014         	goto	l9086
  3223  002914                     l9084:
  3224                           
  3225                           ; BSR set to: 0
  3226  002914  07C9               	decf	___xxtofl@exp& (0+255),f,b
  3227  002916  90D8               	bcf	status,0,c
  3228  002918  37CA               	rlcf	___xxtofl@arg& (0+255),f,b
  3229  00291A  37CB               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3230  00291C  37CC               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3231  00291E  37CD               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3232  002920                     l9086:
  3233                           
  3234                           ; BSR set to: 0
  3235  002920  BFCC               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3236  002922  EF95  F014         	goto	u10011
  3237  002926  EF97  F014         	goto	u10010
  3238  00292A                     u10011:
  3239  00292A  EF9F  F014         	goto	l2263
  3240  00292E                     u10010:
  3241  00292E                     
  3242                           ; BSR set to: 0
  3243  00292E  0E02               	movlw	2
  3244  002930  61C9               	cpfslt	___xxtofl@exp& (0+255),b
  3245  002932  EF9D  F014         	goto	u10021
  3246  002936  EF9F  F014         	goto	u10020
  3247  00293A                     u10021:
  3248  00293A  EF8A  F014         	goto	l9084
  3249  00293E                     u10020:
  3250  00293E                     l2263:
  3251                           
  3252                           ; BSR set to: 0
  3253  00293E  B1C9               	btfsc	___xxtofl@exp& (0+255),0,b
  3254  002940  EFA4  F014         	goto	u10031
  3255  002944  EFA6  F014         	goto	u10030
  3256  002948                     u10031:
  3257  002948  EFA7  F014         	goto	l9092
  3258  00294C                     u10030:
  3259  00294C                     
  3260                           ; BSR set to: 0
  3261  00294C  9FCC               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3262  00294E                     l9092:
  3263                           
  3264                           ; BSR set to: 0
  3265  00294E  90D8               	bcf	status,0,c
  3266  002950  33C9               	rrcf	___xxtofl@exp& (0+255),f,b
  3267  002952                     
  3268                           ; BSR set to: 0
  3269  002952  C0C9  F0C4         	movff	___xxtofl@exp,??___xxtofl
  3270  002956  6BC5               	clrf	(??___xxtofl+1)& (0+255),b
  3271  002958  6BC6               	clrf	(??___xxtofl+2)& (0+255),b
  3272  00295A  6BC7               	clrf	(??___xxtofl+3)& (0+255),b
  3273  00295C  C0C4  F0C7         	movff	??___xxtofl,??___xxtofl+3
  3274  002960  6BC6               	clrf	(??___xxtofl+2)& (0+255),b
  3275  002962  6BC5               	clrf	(??___xxtofl+1)& (0+255),b
  3276  002964  6BC4               	clrf	??___xxtofl& (0+255),b
  3277  002966  51C4               	movf	??___xxtofl& (0+255),w,b
  3278  002968  13CA               	iorwf	___xxtofl@arg& (0+255),f,b
  3279  00296A  51C5               	movf	(??___xxtofl+1)& (0+255),w,b
  3280  00296C  13CB               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3281  00296E  51C6               	movf	(??___xxtofl+2)& (0+255),w,b
  3282  002970  13CC               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3283  002972  51C7               	movf	(??___xxtofl+3)& (0+255),w,b
  3284  002974  13CD               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3285  002976                     
  3286                           ; BSR set to: 0
  3287  002976  51C8               	movf	___xxtofl@sign& (0+255),w,b
  3288  002978  B4D8               	btfsc	status,2,c
  3289  00297A  EFC1  F014         	goto	u10041
  3290  00297E  EFC3  F014         	goto	u10040
  3291  002982                     u10041:
  3292  002982  EFCB  F014         	goto	l9102
  3293  002986                     u10040:
  3294  002986                     
  3295                           ; BSR set to: 0
  3296  002986  BE2D               	btfsc	(___xxtofl@val+3)^0,7,c
  3297  002988  EFCA  F014         	goto	u10050
  3298  00298C  EFC8  F014         	goto	u10051
  3299  002990                     u10051:
  3300  002990  EFCB  F014         	goto	l9102
  3301  002994                     u10050:
  3302  002994                     
  3303                           ; BSR set to: 0
  3304  002994  8FCD               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3305  002996                     l9102:
  3306                           
  3307                           ; BSR set to: 0
  3308  002996  C0CA  F02A         	movff	___xxtofl@arg,?___xxtofl
  3309  00299A  C0CB  F02B         	movff	___xxtofl@arg+1,?___xxtofl+1
  3310  00299E  C0CC  F02C         	movff	___xxtofl@arg+2,?___xxtofl+2
  3311  0029A2  C0CD  F02D         	movff	___xxtofl@arg+3,?___xxtofl+3
  3312  0029A6                     l2252:
  3313                           
  3314                           ; BSR set to: 0
  3315  0029A6  0012               	return		;funcret
  3316  0029A8                     __end_of___xxtofl:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function ___fltol *****************
  3320 ;; Defined at:
  3321 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  f1              4   41[COMRAM] unsigned char 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  exp1            1    5[BANK0 ] unsigned char 
  3326 ;;  sign1           1    4[BANK0 ] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  4   41[COMRAM] long 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:       10 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:   10
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_async_config_baud_rate_gen
  3347 ;;		_Servo_SetAngle
  3348 ;;		_CCP_PWM_Set_Duty
  3349 ;;		_CCP_PWM_Mode_Config
  3350 ;;		_I2C_Master_Mode_Clock_Configurations
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text8
  3355  002E7E                     __ptext8:
  3356                           	callstack 0
  3357  002E7E                     ___fltol:
  3358                           	callstack 17
  3359  002E7E  342C               	rlcf	(___fltol@f1+2)^0,w,c
  3360  002E80  342D               	rlcf	(___fltol@f1+3)^0,w,c
  3361  002E82  0100               	movlb	0	; () banked
  3362  002E84  6FC9               	movwf	___fltol@exp1& (0+255),b
  3363  002E86  51C9               	movf	___fltol@exp1& (0+255),w,b
  3364  002E88  A4D8               	btfss	status,2,c
  3365  002E8A  EF49  F017         	goto	u9891
  3366  002E8E  EF4B  F017         	goto	u9890
  3367  002E92                     u9891:
  3368  002E92  EF55  F017         	goto	l9022
  3369  002E96                     u9890:
  3370  002E96                     l9018:
  3371                           
  3372                           ; BSR set to: 0
  3373  002E96  0E00               	movlw	0
  3374  002E98  6E2A               	movwf	?___fltol^0,c
  3375  002E9A  0E00               	movlw	0
  3376  002E9C  6E2B               	movwf	(?___fltol+1)^0,c
  3377  002E9E  0E00               	movlw	0
  3378  002EA0  6E2C               	movwf	(?___fltol+2)^0,c
  3379  002EA2  0E00               	movlw	0
  3380  002EA4  6E2D               	movwf	(?___fltol+3)^0,c
  3381  002EA6  EFC2  F017         	goto	l1891
  3382  002EAA                     l9022:
  3383                           
  3384                           ; BSR set to: 0
  3385  002EAA  C02A  F0C4         	movff	___fltol@f1,??___fltol
  3386  002EAE  C02B  F0C5         	movff	___fltol@f1+1,??___fltol+1
  3387  002EB2  C02C  F0C6         	movff	___fltol@f1+2,??___fltol+2
  3388  002EB6  C02D  F0C7         	movff	___fltol@f1+3,??___fltol+3
  3389  002EBA  0E20               	movlw	32
  3390  002EBC  EF65  F017         	goto	u9900
  3391  002EC0                     u9905:
  3392  002EC0  90D8               	bcf	status,0,c
  3393  002EC2  33C7               	rrcf	(??___fltol+3)& (0+255),f,b
  3394  002EC4  33C6               	rrcf	(??___fltol+2)& (0+255),f,b
  3395  002EC6  33C5               	rrcf	(??___fltol+1)& (0+255),f,b
  3396  002EC8  33C4               	rrcf	??___fltol& (0+255),f,b
  3397  002ECA                     u9900:
  3398  002ECA  2EE8               	decfsz	wreg,f,c
  3399  002ECC  EF60  F017         	goto	u9905
  3400  002ED0  51C4               	movf	??___fltol& (0+255),w,b
  3401  002ED2  6FC8               	movwf	___fltol@sign1& (0+255),b
  3402  002ED4                     
  3403                           ; BSR set to: 0
  3404  002ED4  8E2C               	bsf	(___fltol@f1+2)^0,7,c
  3405  002ED6                     
  3406                           ; BSR set to: 0
  3407  002ED6  0EFF               	movlw	255
  3408  002ED8  162A               	andwf	___fltol@f1^0,f,c
  3409  002EDA  0EFF               	movlw	255
  3410  002EDC  162B               	andwf	(___fltol@f1+1)^0,f,c
  3411  002EDE  0EFF               	movlw	255
  3412  002EE0  162C               	andwf	(___fltol@f1+2)^0,f,c
  3413  002EE2  0E00               	movlw	0
  3414  002EE4  162D               	andwf	(___fltol@f1+3)^0,f,c
  3415  002EE6                     
  3416                           ; BSR set to: 0
  3417  002EE6  0E96               	movlw	150
  3418  002EE8  5FC9               	subwf	___fltol@exp1& (0+255),f,b
  3419  002EEA                     
  3420                           ; BSR set to: 0
  3421  002EEA  BFC9               	btfsc	___fltol@exp1& (0+255),7,b
  3422  002EEC  EF7C  F017         	goto	u9910
  3423  002EF0  EF7A  F017         	goto	u9911
  3424  002EF4                     u9911:
  3425  002EF4  EF92  F017         	goto	l9042
  3426  002EF8                     u9910:
  3427  002EF8                     
  3428                           ; BSR set to: 0
  3429  002EF8  51C9               	movf	___fltol@exp1& (0+255),w,b
  3430  002EFA  0A80               	xorlw	128
  3431  002EFC  0F97               	addlw	151
  3432  002EFE  B0D8               	btfsc	status,0,c
  3433  002F00  EF84  F017         	goto	u9921
  3434  002F04  EF86  F017         	goto	u9920
  3435  002F08                     u9921:
  3436  002F08  EF88  F017         	goto	l9038
  3437  002F0C                     u9920:
  3438  002F0C  EF4B  F017         	goto	l9018
  3439  002F10                     l9038:
  3440                           
  3441                           ; BSR set to: 0
  3442  002F10  90D8               	bcf	status,0,c
  3443  002F12  322D               	rrcf	(___fltol@f1+3)^0,f,c
  3444  002F14  322C               	rrcf	(___fltol@f1+2)^0,f,c
  3445  002F16  322B               	rrcf	(___fltol@f1+1)^0,f,c
  3446  002F18  322A               	rrcf	___fltol@f1^0,f,c
  3447  002F1A                     
  3448                           ; BSR set to: 0
  3449  002F1A  3FC9               	incfsz	___fltol@exp1& (0+255),f,b
  3450  002F1C  EF88  F017         	goto	l9038
  3451  002F20  EFAA  F017         	goto	l9052
  3452  002F24                     l9042:
  3453                           
  3454                           ; BSR set to: 0
  3455  002F24  0E1F               	movlw	31
  3456  002F26  65C9               	cpfsgt	___fltol@exp1& (0+255),b
  3457  002F28  EF98  F017         	goto	u9931
  3458  002F2C  EF9A  F017         	goto	u9930
  3459  002F30                     u9931:
  3460  002F30  EFA2  F017         	goto	l9050
  3461  002F34                     u9930:
  3462  002F34  EF4B  F017         	goto	l9018
  3463  002F38                     l9048:
  3464                           
  3465                           ; BSR set to: 0
  3466  002F38  90D8               	bcf	status,0,c
  3467  002F3A  362A               	rlcf	___fltol@f1^0,f,c
  3468  002F3C  362B               	rlcf	(___fltol@f1+1)^0,f,c
  3469  002F3E  362C               	rlcf	(___fltol@f1+2)^0,f,c
  3470  002F40  362D               	rlcf	(___fltol@f1+3)^0,f,c
  3471  002F42  07C9               	decf	___fltol@exp1& (0+255),f,b
  3472  002F44                     l9050:
  3473                           
  3474                           ; BSR set to: 0
  3475  002F44  51C9               	movf	___fltol@exp1& (0+255),w,b
  3476  002F46  A4D8               	btfss	status,2,c
  3477  002F48  EFA8  F017         	goto	u9941
  3478  002F4C  EFAA  F017         	goto	u9940
  3479  002F50                     u9941:
  3480  002F50  EF9C  F017         	goto	l9048
  3481  002F54                     u9940:
  3482  002F54                     l9052:
  3483                           
  3484                           ; BSR set to: 0
  3485  002F54  51C8               	movf	___fltol@sign1& (0+255),w,b
  3486  002F56  B4D8               	btfsc	status,2,c
  3487  002F58  EFB0  F017         	goto	u9951
  3488  002F5C  EFB2  F017         	goto	u9950
  3489  002F60                     u9951:
  3490  002F60  EFBA  F017         	goto	l9056
  3491  002F64                     u9950:
  3492  002F64                     
  3493                           ; BSR set to: 0
  3494  002F64  1E2D               	comf	(___fltol@f1+3)^0,f,c
  3495  002F66  1E2C               	comf	(___fltol@f1+2)^0,f,c
  3496  002F68  1E2B               	comf	(___fltol@f1+1)^0,f,c
  3497  002F6A  6C2A               	negf	___fltol@f1^0,c
  3498  002F6C  0E00               	movlw	0
  3499  002F6E  222B               	addwfc	(___fltol@f1+1)^0,f,c
  3500  002F70  222C               	addwfc	(___fltol@f1+2)^0,f,c
  3501  002F72  222D               	addwfc	(___fltol@f1+3)^0,f,c
  3502  002F74                     l9056:
  3503                           
  3504                           ; BSR set to: 0
  3505  002F74  C02A  F02A         	movff	___fltol@f1,?___fltol
  3506  002F78  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
  3507  002F7C  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
  3508  002F80  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
  3509  002F84                     l1891:
  3510                           
  3511                           ; BSR set to: 0
  3512  002F84  0012               	return		;funcret
  3513  002F86                     __end_of___fltol:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function ___fldiv *****************
  3517 ;; Defined at:
  3518 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  b               4   10[BANK0 ] long 
  3521 ;;  a               4   14[BANK0 ] long 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  grs             4    7[BANK1 ] unsigned long 
  3524 ;;  rem             4    0[BANK1 ] unsigned long 
  3525 ;;  new_exp         2    5[BANK1 ] short 
  3526 ;;  aexp            1   12[BANK1 ] unsigned char 
  3527 ;;  bexp            1   11[BANK1 ] unsigned char 
  3528 ;;  sign            1    4[BANK1 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  4   10[BANK0 ] unsigned char 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         0      12      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:       25 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:   10
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_async_config_baud_rate_gen
  3549 ;;		_CCP_PWM_Set_Duty
  3550 ;;		_CCP_PWM_Mode_Config
  3551 ;;		_I2C_Master_Mode_Clock_Configurations
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text9
  3556  00163E                     __ptext9:
  3557                           	callstack 0
  3558  00163E                     ___fldiv:
  3559                           	callstack 17
  3560  00163E  0100               	movlb	0	; () banked
  3561  001640  51D1               	movf	(___fldiv@b+3)& (0+255),w,b
  3562  001642  0B80               	andlw	128
  3563  001644  0101               	movlb	1	; () banked
  3564  001646  6F04               	movwf	___fldiv@sign& (0+255),b
  3565  001648  0100               	movlb	0	; () banked
  3566  00164A  51D1               	movf	(___fldiv@b+3)& (0+255),w,b
  3567  00164C  25D1               	addwf	(___fldiv@b+3)& (0+255),w,b
  3568  00164E  0101               	movlb	1	; () banked
  3569  001650  6F0B               	movwf	___fldiv@bexp& (0+255),b
  3570  001652                     
  3571                           ; BSR set to: 1
  3572  001652  0100               	movlb	0	; () banked
  3573  001654  AFD0               	btfss	(___fldiv@b+2)& (0+255),7,b
  3574  001656  EF2F  F00B         	goto	u9661
  3575  00165A  EF31  F00B         	goto	u9660
  3576  00165E                     u9661:
  3577  00165E  EF33  F00B         	goto	l8884
  3578  001662                     u9660:
  3579  001662                     
  3580                           ; BSR set to: 0
  3581  001662  0101               	movlb	1	; () banked
  3582  001664  810B               	bsf	___fldiv@bexp& (0+255),0,b
  3583  001666                     l8884:
  3584  001666  0101               	movlb	1	; () banked
  3585  001668  510B               	movf	___fldiv@bexp& (0+255),w,b
  3586  00166A  B4D8               	btfsc	status,2,c
  3587  00166C  EF3A  F00B         	goto	u9671
  3588  001670  EF3C  F00B         	goto	u9670
  3589  001674                     u9671:
  3590  001674  EF53  F00B         	goto	l8894
  3591  001678                     u9670:
  3592  001678                     
  3593                           ; BSR set to: 1
  3594  001678  290B               	incf	___fldiv@bexp& (0+255),w,b
  3595  00167A  A4D8               	btfss	status,2,c
  3596  00167C  EF42  F00B         	goto	u9681
  3597  001680  EF44  F00B         	goto	u9680
  3598  001684                     u9681:
  3599  001684  EF4D  F00B         	goto	l8890
  3600  001688                     u9680:
  3601  001688                     
  3602                           ; BSR set to: 1
  3603  001688  0E00               	movlw	0
  3604  00168A  0100               	movlb	0	; () banked
  3605  00168C  6FCE               	movwf	___fldiv@b& (0+255),b
  3606  00168E  0E00               	movlw	0
  3607  001690  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  3608  001692  0E00               	movlw	0
  3609  001694  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  3610  001696  0E00               	movlw	0
  3611  001698  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  3612  00169A                     l8890:
  3613  00169A  0100               	movlb	0	; () banked
  3614  00169C  8FD0               	bsf	(___fldiv@b+2)& (0+255),7,b
  3615  00169E                     
  3616                           ; BSR set to: 0
  3617  00169E  0E00               	movlw	0
  3618  0016A0  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  3619  0016A2  EF5C  F00B         	goto	l8896
  3620  0016A6                     l8894:
  3621                           
  3622                           ; BSR set to: 1
  3623  0016A6  0E00               	movlw	0
  3624  0016A8  0100               	movlb	0	; () banked
  3625  0016AA  6FCE               	movwf	___fldiv@b& (0+255),b
  3626  0016AC  0E00               	movlw	0
  3627  0016AE  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  3628  0016B0  0E00               	movlw	0
  3629  0016B2  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  3630  0016B4  0E00               	movlw	0
  3631  0016B6  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  3632  0016B8                     l8896:
  3633                           
  3634                           ; BSR set to: 0
  3635  0016B8  51D5               	movf	(___fldiv@a+3)& (0+255),w,b
  3636  0016BA  0B80               	andlw	128
  3637  0016BC  0101               	movlb	1	; () banked
  3638  0016BE  1B04               	xorwf	___fldiv@sign& (0+255),f,b
  3639  0016C0                     
  3640                           ; BSR set to: 1
  3641  0016C0  0100               	movlb	0	; () banked
  3642  0016C2  51D5               	movf	(___fldiv@a+3)& (0+255),w,b
  3643  0016C4  25D5               	addwf	(___fldiv@a+3)& (0+255),w,b
  3644  0016C6  0101               	movlb	1	; () banked
  3645  0016C8  6F0C               	movwf	___fldiv@aexp& (0+255),b
  3646  0016CA                     
  3647                           ; BSR set to: 1
  3648  0016CA  0100               	movlb	0	; () banked
  3649  0016CC  AFD4               	btfss	(___fldiv@a+2)& (0+255),7,b
  3650  0016CE  EF6B  F00B         	goto	u9691
  3651  0016D2  EF6D  F00B         	goto	u9690
  3652  0016D6                     u9691:
  3653  0016D6  EF6F  F00B         	goto	l8904
  3654  0016DA                     u9690:
  3655  0016DA                     
  3656                           ; BSR set to: 0
  3657  0016DA  0101               	movlb	1	; () banked
  3658  0016DC  810C               	bsf	___fldiv@aexp& (0+255),0,b
  3659  0016DE                     l8904:
  3660  0016DE  0101               	movlb	1	; () banked
  3661  0016E0  510C               	movf	___fldiv@aexp& (0+255),w,b
  3662  0016E2  B4D8               	btfsc	status,2,c
  3663  0016E4  EF76  F00B         	goto	u9701
  3664  0016E8  EF78  F00B         	goto	u9700
  3665  0016EC                     u9701:
  3666  0016EC  EF8F  F00B         	goto	l8914
  3667  0016F0                     u9700:
  3668  0016F0                     
  3669                           ; BSR set to: 1
  3670  0016F0  290C               	incf	___fldiv@aexp& (0+255),w,b
  3671  0016F2  A4D8               	btfss	status,2,c
  3672  0016F4  EF7E  F00B         	goto	u9711
  3673  0016F8  EF80  F00B         	goto	u9710
  3674  0016FC                     u9711:
  3675  0016FC  EF89  F00B         	goto	l8910
  3676  001700                     u9710:
  3677  001700                     
  3678                           ; BSR set to: 1
  3679  001700  0E00               	movlw	0
  3680  001702  0100               	movlb	0	; () banked
  3681  001704  6FD2               	movwf	___fldiv@a& (0+255),b
  3682  001706  0E00               	movlw	0
  3683  001708  6FD3               	movwf	(___fldiv@a+1)& (0+255),b
  3684  00170A  0E00               	movlw	0
  3685  00170C  6FD4               	movwf	(___fldiv@a+2)& (0+255),b
  3686  00170E  0E00               	movlw	0
  3687  001710  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  3688  001712                     l8910:
  3689  001712  0100               	movlb	0	; () banked
  3690  001714  8FD4               	bsf	(___fldiv@a+2)& (0+255),7,b
  3691  001716                     
  3692                           ; BSR set to: 0
  3693  001716  0E00               	movlw	0
  3694  001718  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  3695  00171A  EF98  F00B         	goto	l8916
  3696  00171E                     l8914:
  3697                           
  3698                           ; BSR set to: 1
  3699  00171E  0E00               	movlw	0
  3700  001720  0100               	movlb	0	; () banked
  3701  001722  6FD2               	movwf	___fldiv@a& (0+255),b
  3702  001724  0E00               	movlw	0
  3703  001726  6FD3               	movwf	(___fldiv@a+1)& (0+255),b
  3704  001728  0E00               	movlw	0
  3705  00172A  6FD4               	movwf	(___fldiv@a+2)& (0+255),b
  3706  00172C  0E00               	movlw	0
  3707  00172E  6FD5               	movwf	(___fldiv@a+3)& (0+255),b
  3708  001730                     l8916:
  3709                           
  3710                           ; BSR set to: 0
  3711  001730  51D2               	movf	___fldiv@a& (0+255),w,b
  3712  001732  11D3               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3713  001734  11D4               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3714  001736  11D5               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3715  001738  A4D8               	btfss	status,2,c
  3716  00173A  EFA1  F00B         	goto	u9721
  3717  00173E  EFA3  F00B         	goto	u9720
  3718  001742                     u9721:
  3719  001742  EFBD  F00B         	goto	l8928
  3720  001746                     u9720:
  3721  001746                     
  3722                           ; BSR set to: 0
  3723  001746  0E00               	movlw	0
  3724  001748  6FCE               	movwf	___fldiv@b& (0+255),b
  3725  00174A  0E00               	movlw	0
  3726  00174C  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  3727  00174E  0E00               	movlw	0
  3728  001750  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  3729  001752  0E00               	movlw	0
  3730  001754  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  3731  001756                     
  3732                           ; BSR set to: 0
  3733  001756  0E80               	movlw	128
  3734  001758  13D0               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3735  00175A  0E7F               	movlw	127
  3736  00175C  13D1               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3737  00175E                     l8922:
  3738                           
  3739                           ; BSR set to: 0
  3740  00175E  0101               	movlb	1	; () banked
  3741  001760  5104               	movf	___fldiv@sign& (0+255),w,b
  3742  001762  0100               	movlb	0	; () banked
  3743  001764  13D1               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3744  001766                     
  3745                           ; BSR set to: 0
  3746  001766  C0CE  F0CE         	movff	___fldiv@b,?___fldiv
  3747  00176A  C0CF  F0CF         	movff	___fldiv@b+1,?___fldiv+1
  3748  00176E  C0D0  F0D0         	movff	___fldiv@b+2,?___fldiv+2
  3749  001772  C0D1  F0D1         	movff	___fldiv@b+3,?___fldiv+3
  3750  001776  EF35  F00D         	goto	l2176
  3751  00177A                     l8928:
  3752                           
  3753                           ; BSR set to: 0
  3754  00177A  0101               	movlb	1	; () banked
  3755  00177C  510B               	movf	___fldiv@bexp& (0+255),w,b
  3756  00177E  A4D8               	btfss	status,2,c
  3757  001780  EFC4  F00B         	goto	u9731
  3758  001784  EFC6  F00B         	goto	u9730
  3759  001788                     u9731:
  3760  001788  EFD1  F00B         	goto	l8936
  3761  00178C                     u9730:
  3762  00178C                     
  3763                           ; BSR set to: 1
  3764  00178C  0E00               	movlw	0
  3765  00178E  0100               	movlb	0	; () banked
  3766  001790  6FCE               	movwf	?___fldiv& (0+255),b
  3767  001792  0E00               	movlw	0
  3768  001794  6FCF               	movwf	(?___fldiv+1)& (0+255),b
  3769  001796  0E00               	movlw	0
  3770  001798  6FD0               	movwf	(?___fldiv+2)& (0+255),b
  3771  00179A  0E00               	movlw	0
  3772  00179C  6FD1               	movwf	(?___fldiv+3)& (0+255),b
  3773  00179E  EF35  F00D         	goto	l2176
  3774  0017A2                     l8936:
  3775                           
  3776                           ; BSR set to: 1
  3777  0017A2  510C               	movf	___fldiv@aexp& (0+255),w,b
  3778  0017A4  C10B  F0D6         	movff	___fldiv@bexp,??___fldiv
  3779  0017A8  0100               	movlb	0	; () banked
  3780  0017AA  6BD7               	clrf	(??___fldiv+1)& (0+255),b
  3781  0017AC  5FD6               	subwf	??___fldiv& (0+255),f,b
  3782  0017AE  0E00               	movlw	0
  3783  0017B0  5BD7               	subwfb	(??___fldiv+1)& (0+255),f,b
  3784  0017B2  0E7F               	movlw	127
  3785  0017B4  25D6               	addwf	??___fldiv& (0+255),w,b
  3786  0017B6  0101               	movlb	1	; () banked
  3787  0017B8  6F05               	movwf	___fldiv@new_exp& (0+255),b
  3788  0017BA  0E00               	movlw	0
  3789  0017BC  0100               	movlb	0	; () banked
  3790  0017BE  21D7               	addwfc	(??___fldiv+1)& (0+255),w,b
  3791  0017C0  0101               	movlb	1	; () banked
  3792  0017C2  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3793  0017C4                     
  3794                           ; BSR set to: 1
  3795  0017C4  C0CE  F100         	movff	___fldiv@b,___fldiv@rem
  3796  0017C8  C0CF  F101         	movff	___fldiv@b+1,___fldiv@rem+1
  3797  0017CC  C0D0  F102         	movff	___fldiv@b+2,___fldiv@rem+2
  3798  0017D0  C0D1  F103         	movff	___fldiv@b+3,___fldiv@rem+3
  3799  0017D4                     
  3800                           ; BSR set to: 1
  3801  0017D4  0E00               	movlw	0
  3802  0017D6  0100               	movlb	0	; () banked
  3803  0017D8  6FCE               	movwf	___fldiv@b& (0+255),b
  3804  0017DA  0E00               	movlw	0
  3805  0017DC  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  3806  0017DE  0E00               	movlw	0
  3807  0017E0  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  3808  0017E2  0E00               	movlw	0
  3809  0017E4  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  3810  0017E6                     
  3811                           ; BSR set to: 0
  3812  0017E6  0E00               	movlw	0
  3813  0017E8  0101               	movlb	1	; () banked
  3814  0017EA  6F07               	movwf	___fldiv@grs& (0+255),b
  3815  0017EC  0E00               	movlw	0
  3816  0017EE  6F08               	movwf	(___fldiv@grs+1)& (0+255),b
  3817  0017F0  0E00               	movlw	0
  3818  0017F2  6F09               	movwf	(___fldiv@grs+2)& (0+255),b
  3819  0017F4  0E00               	movlw	0
  3820  0017F6  6F0A               	movwf	(___fldiv@grs+3)& (0+255),b
  3821  0017F8                     
  3822                           ; BSR set to: 1
  3823  0017F8  0E00               	movlw	0
  3824  0017FA  6F0C               	movwf	___fldiv@aexp& (0+255),b
  3825  0017FC  EF4C  F00C         	goto	l2178
  3826  001800                     l8946:
  3827                           
  3828                           ; BSR set to: 1
  3829  001800  510C               	movf	___fldiv@aexp& (0+255),w,b
  3830  001802  B4D8               	btfsc	status,2,c
  3831  001804  EF06  F00C         	goto	u9741
  3832  001808  EF08  F00C         	goto	u9740
  3833  00180C                     u9741:
  3834  00180C  EF23  F00C         	goto	l8954
  3835  001810                     u9740:
  3836  001810                     
  3837                           ; BSR set to: 1
  3838  001810  90D8               	bcf	status,0,c
  3839  001812  3700               	rlcf	___fldiv@rem& (0+255),f,b
  3840  001814  3701               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3841  001816  3702               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3842  001818  3703               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3843  00181A  0100               	movlb	0	; () banked
  3844  00181C  90D8               	bcf	status,0,c
  3845  00181E  37CE               	rlcf	___fldiv@b& (0+255),f,b
  3846  001820  37CF               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3847  001822  37D0               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3848  001824  37D1               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3849  001826                     
  3850                           ; BSR set to: 0
  3851  001826  0101               	movlb	1	; () banked
  3852  001828  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3853  00182A  EF19  F00C         	goto	u9751
  3854  00182E  EF1B  F00C         	goto	u9750
  3855  001832                     u9751:
  3856  001832  EF1D  F00C         	goto	l2181
  3857  001836                     u9750:
  3858  001836                     
  3859                           ; BSR set to: 1
  3860  001836  0100               	movlb	0	; () banked
  3861  001838  81CE               	bsf	___fldiv@b& (0+255),0,b
  3862  00183A                     l2181:
  3863  00183A  0101               	movlb	1	; () banked
  3864  00183C  90D8               	bcf	status,0,c
  3865  00183E  3707               	rlcf	___fldiv@grs& (0+255),f,b
  3866  001840  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3867  001842  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3868  001844  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3869  001846                     l8954:
  3870                           
  3871                           ; BSR set to: 1
  3872  001846  0100               	movlb	0	; () banked
  3873  001848  51D2               	movf	___fldiv@a& (0+255),w,b
  3874  00184A  0101               	movlb	1	; () banked
  3875  00184C  5D00               	subwf	___fldiv@rem& (0+255),w,b
  3876  00184E  0100               	movlb	0	; () banked
  3877  001850  51D3               	movf	(___fldiv@a+1)& (0+255),w,b
  3878  001852  0101               	movlb	1	; () banked
  3879  001854  5901               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3880  001856  0100               	movlb	0	; () banked
  3881  001858  51D4               	movf	(___fldiv@a+2)& (0+255),w,b
  3882  00185A  0101               	movlb	1	; () banked
  3883  00185C  5902               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3884  00185E  0100               	movlb	0	; () banked
  3885  001860  51D5               	movf	(___fldiv@a+3)& (0+255),w,b
  3886  001862  0101               	movlb	1	; () banked
  3887  001864  5903               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3888  001866  A0D8               	btfss	status,0,c
  3889  001868  EF38  F00C         	goto	u9761
  3890  00186C  EF3A  F00C         	goto	u9760
  3891  001870                     u9761:
  3892  001870  EF4B  F00C         	goto	l8960
  3893  001874                     u9760:
  3894  001874                     
  3895                           ; BSR set to: 1
  3896  001874  8D0A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3897  001876                     
  3898                           ; BSR set to: 1
  3899  001876  0100               	movlb	0	; () banked
  3900  001878  51D2               	movf	___fldiv@a& (0+255),w,b
  3901  00187A  0101               	movlb	1	; () banked
  3902  00187C  5F00               	subwf	___fldiv@rem& (0+255),f,b
  3903  00187E  0100               	movlb	0	; () banked
  3904  001880  51D3               	movf	(___fldiv@a+1)& (0+255),w,b
  3905  001882  0101               	movlb	1	; () banked
  3906  001884  5B01               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3907  001886  0100               	movlb	0	; () banked
  3908  001888  51D4               	movf	(___fldiv@a+2)& (0+255),w,b
  3909  00188A  0101               	movlb	1	; () banked
  3910  00188C  5B02               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3911  00188E  0100               	movlb	0	; () banked
  3912  001890  51D5               	movf	(___fldiv@a+3)& (0+255),w,b
  3913  001892  0101               	movlb	1	; () banked
  3914  001894  5B03               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3915  001896                     l8960:
  3916                           
  3917                           ; BSR set to: 1
  3918  001896  2B0C               	incf	___fldiv@aexp& (0+255),f,b
  3919  001898                     l2178:
  3920                           
  3921                           ; BSR set to: 1
  3922  001898  0E19               	movlw	25
  3923  00189A  650C               	cpfsgt	___fldiv@aexp& (0+255),b
  3924  00189C  EF52  F00C         	goto	u9771
  3925  0018A0  EF54  F00C         	goto	u9770
  3926  0018A4                     u9771:
  3927  0018A4  EF00  F00C         	goto	l8946
  3928  0018A8                     u9770:
  3929  0018A8                     
  3930                           ; BSR set to: 1
  3931  0018A8  5100               	movf	___fldiv@rem& (0+255),w,b
  3932  0018AA  1101               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3933  0018AC  1102               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3934  0018AE  1103               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3935  0018B0  B4D8               	btfsc	status,2,c
  3936  0018B2  EF5D  F00C         	goto	u9781
  3937  0018B6  EF5F  F00C         	goto	u9780
  3938  0018BA                     u9781:
  3939  0018BA  EF7A  F00C         	goto	l8972
  3940  0018BE                     u9780:
  3941  0018BE                     
  3942                           ; BSR set to: 1
  3943  0018BE  8107               	bsf	___fldiv@grs& (0+255),0,b
  3944  0018C0  EF7A  F00C         	goto	l8972
  3945  0018C4                     l8966:
  3946                           
  3947                           ; BSR set to: 0
  3948  0018C4  90D8               	bcf	status,0,c
  3949  0018C6  37CE               	rlcf	___fldiv@b& (0+255),f,b
  3950  0018C8  37CF               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3951  0018CA  37D0               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3952  0018CC  37D1               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3953  0018CE                     
  3954                           ; BSR set to: 0
  3955  0018CE  0101               	movlb	1	; () banked
  3956  0018D0  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3957  0018D2  EF6D  F00C         	goto	u9791
  3958  0018D6  EF6F  F00C         	goto	u9790
  3959  0018DA                     u9791:
  3960  0018DA  EF71  F00C         	goto	l2187
  3961  0018DE                     u9790:
  3962  0018DE                     
  3963                           ; BSR set to: 1
  3964  0018DE  0100               	movlb	0	; () banked
  3965  0018E0  81CE               	bsf	___fldiv@b& (0+255),0,b
  3966  0018E2                     l2187:
  3967  0018E2  0101               	movlb	1	; () banked
  3968  0018E4  90D8               	bcf	status,0,c
  3969  0018E6  3707               	rlcf	___fldiv@grs& (0+255),f,b
  3970  0018E8  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3971  0018EA  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3972  0018EC  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3973  0018EE  0705               	decf	___fldiv@new_exp& (0+255),f,b
  3974  0018F0  A0D8               	btfss	status,0,c
  3975  0018F2  0706               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3976  0018F4                     l8972:
  3977                           
  3978                           ; BSR set to: 1
  3979  0018F4  0100               	movlb	0	; () banked
  3980  0018F6  AFD0               	btfss	(___fldiv@b+2)& (0+255),7,b
  3981  0018F8  EF80  F00C         	goto	u9801
  3982  0018FC  EF82  F00C         	goto	u9800
  3983  001900                     u9801:
  3984  001900  EF62  F00C         	goto	l8966
  3985  001904                     u9800:
  3986  001904                     
  3987                           ; BSR set to: 0
  3988  001904  0E00               	movlw	0
  3989  001906  0101               	movlb	1	; () banked
  3990  001908  6F0C               	movwf	___fldiv@aexp& (0+255),b
  3991  00190A                     
  3992                           ; BSR set to: 1
  3993  00190A  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3994  00190C  EF8A  F00C         	goto	u9811
  3995  001910  EF8C  F00C         	goto	u9810
  3996  001914                     u9811:
  3997  001914  EFB8  F00C         	goto	l2189
  3998  001918                     u9810:
  3999  001918                     
  4000                           ; BSR set to: 1
  4001  001918  0EFF               	movlw	255
  4002  00191A  1507               	andwf	___fldiv@grs& (0+255),w,b
  4003  00191C  0100               	movlb	0	; () banked
  4004  00191E  6FD6               	movwf	??___fldiv& (0+255),b
  4005  001920  0EFF               	movlw	255
  4006  001922  0101               	movlb	1	; () banked
  4007  001924  1508               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4008  001926  0100               	movlb	0	; () banked
  4009  001928  6FD7               	movwf	(??___fldiv+1)& (0+255),b
  4010  00192A  0EFF               	movlw	255
  4011  00192C  0101               	movlb	1	; () banked
  4012  00192E  1509               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4013  001930  0100               	movlb	0	; () banked
  4014  001932  6FD8               	movwf	(??___fldiv+2)& (0+255),b
  4015  001934  0E7F               	movlw	127
  4016  001936  0101               	movlb	1	; () banked
  4017  001938  150A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4018  00193A  0100               	movlb	0	; () banked
  4019  00193C  6FD9               	movwf	(??___fldiv+3)& (0+255),b
  4020  00193E  51D6               	movf	??___fldiv& (0+255),w,b
  4021  001940  11D7               	iorwf	(??___fldiv+1)& (0+255),w,b
  4022  001942  11D8               	iorwf	(??___fldiv+2)& (0+255),w,b
  4023  001944  11D9               	iorwf	(??___fldiv+3)& (0+255),w,b
  4024  001946  B4D8               	btfsc	status,2,c
  4025  001948  EFA8  F00C         	goto	u9821
  4026  00194C  EFAA  F00C         	goto	u9820
  4027  001950                     u9821:
  4028  001950  EFAF  F00C         	goto	l2190
  4029  001954                     u9820:
  4030  001954                     l8980:
  4031                           
  4032                           ; BSR set to: 0
  4033  001954  0E01               	movlw	1
  4034  001956  0101               	movlb	1	; () banked
  4035  001958  6F0C               	movwf	___fldiv@aexp& (0+255),b
  4036  00195A  EFB8  F00C         	goto	l2189
  4037  00195E                     l2190:
  4038                           
  4039                           ; BSR set to: 0
  4040  00195E  A1CE               	btfss	___fldiv@b& (0+255),0,b
  4041  001960  EFB4  F00C         	goto	u9831
  4042  001964  EFB6  F00C         	goto	u9830
  4043  001968                     u9831:
  4044  001968  EFB8  F00C         	goto	l2189
  4045  00196C                     u9830:
  4046  00196C  EFAA  F00C         	goto	l8980
  4047  001970                     l2189:
  4048  001970  0101               	movlb	1	; () banked
  4049  001972  510C               	movf	___fldiv@aexp& (0+255),w,b
  4050  001974  B4D8               	btfsc	status,2,c
  4051  001976  EFBF  F00C         	goto	u9841
  4052  00197A  EFC1  F00C         	goto	u9840
  4053  00197E                     u9841:
  4054  00197E  EFE7  F00C         	goto	l8992
  4055  001982                     u9840:
  4056  001982                     
  4057                           ; BSR set to: 1
  4058  001982  0E01               	movlw	1
  4059  001984  0100               	movlb	0	; () banked
  4060  001986  27CE               	addwf	___fldiv@b& (0+255),f,b
  4061  001988  0E00               	movlw	0
  4062  00198A  23CF               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4063  00198C  23D0               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4064  00198E  23D1               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4065  001990                     
  4066                           ; BSR set to: 0
  4067  001990  A1D1               	btfss	(___fldiv@b+3)& (0+255),0,b
  4068  001992  EFCD  F00C         	goto	u9851
  4069  001996  EFCF  F00C         	goto	u9850
  4070  00199A                     u9851:
  4071  00199A  EFE7  F00C         	goto	l8992
  4072  00199E                     u9850:
  4073  00199E                     
  4074                           ; BSR set to: 0
  4075  00199E  C0CE  F0D6         	movff	___fldiv@b,??___fldiv
  4076  0019A2  C0CF  F0D7         	movff	___fldiv@b+1,??___fldiv+1
  4077  0019A6  C0D0  F0D8         	movff	___fldiv@b+2,??___fldiv+2
  4078  0019AA  C0D1  F0D9         	movff	___fldiv@b+3,??___fldiv+3
  4079  0019AE  35D9               	rlcf	(??___fldiv+3)& (0+255),w,b
  4080  0019B0  33D9               	rrcf	(??___fldiv+3)& (0+255),f,b
  4081  0019B2  33D8               	rrcf	(??___fldiv+2)& (0+255),f,b
  4082  0019B4  33D7               	rrcf	(??___fldiv+1)& (0+255),f,b
  4083  0019B6  33D6               	rrcf	??___fldiv& (0+255),f,b
  4084  0019B8  C0D6  F0CE         	movff	??___fldiv,___fldiv@b
  4085  0019BC  C0D7  F0CF         	movff	??___fldiv+1,___fldiv@b+1
  4086  0019C0  C0D8  F0D0         	movff	??___fldiv+2,___fldiv@b+2
  4087  0019C4  C0D9  F0D1         	movff	??___fldiv+3,___fldiv@b+3
  4088  0019C8                     
  4089                           ; BSR set to: 0
  4090  0019C8  0101               	movlb	1	; () banked
  4091  0019CA  4B05               	infsnz	___fldiv@new_exp& (0+255),f,b
  4092  0019CC  2B06               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4093  0019CE                     l8992:
  4094  0019CE  0101               	movlb	1	; () banked
  4095  0019D0  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4096  0019D2  EFF3  F00C         	goto	u9861
  4097  0019D6  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4098  0019D8  E108               	bnz	u9860
  4099  0019DA  2905               	incf	___fldiv@new_exp& (0+255),w,b
  4100  0019DC  A0D8               	btfss	status,0,c
  4101  0019DE  EFF3  F00C         	goto	u9861
  4102  0019E2  EFF5  F00C         	goto	u9860
  4103  0019E6                     u9861:
  4104  0019E6  EF01  F00D         	goto	l8996
  4105  0019EA                     u9860:
  4106  0019EA                     
  4107                           ; BSR set to: 1
  4108  0019EA  0E00               	movlw	0
  4109  0019EC  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4110  0019EE  6905               	setf	___fldiv@new_exp& (0+255),b
  4111  0019F0  0E00               	movlw	0
  4112  0019F2  0100               	movlb	0	; () banked
  4113  0019F4  6FCE               	movwf	___fldiv@b& (0+255),b
  4114  0019F6  0E00               	movlw	0
  4115  0019F8  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  4116  0019FA  0E00               	movlw	0
  4117  0019FC  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  4118  0019FE  0E00               	movlw	0
  4119  001A00  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  4120  001A02                     l8996:
  4121  001A02  0101               	movlb	1	; () banked
  4122  001A04  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4123  001A06  EF0F  F00D         	goto	u9870
  4124  001A0A  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4125  001A0C  E106               	bnz	u9871
  4126  001A0E  0505               	decf	___fldiv@new_exp& (0+255),w,b
  4127  001A10  B0D8               	btfsc	status,0,c
  4128  001A12  EF0D  F00D         	goto	u9871
  4129  001A16  EF0F  F00D         	goto	u9870
  4130  001A1A                     u9871:
  4131  001A1A  EF1F  F00D         	goto	l9000
  4132  001A1E                     u9870:
  4133  001A1E                     
  4134                           ; BSR set to: 1
  4135  001A1E  0E00               	movlw	0
  4136  001A20  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4137  001A22  0E00               	movlw	0
  4138  001A24  6F05               	movwf	___fldiv@new_exp& (0+255),b
  4139  001A26  0E00               	movlw	0
  4140  001A28  0100               	movlb	0	; () banked
  4141  001A2A  6FCE               	movwf	___fldiv@b& (0+255),b
  4142  001A2C  0E00               	movlw	0
  4143  001A2E  6FCF               	movwf	(___fldiv@b+1)& (0+255),b
  4144  001A30  0E00               	movlw	0
  4145  001A32  6FD0               	movwf	(___fldiv@b+2)& (0+255),b
  4146  001A34  0E00               	movlw	0
  4147  001A36  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  4148  001A38  0E00               	movlw	0
  4149  001A3A  0101               	movlb	1	; () banked
  4150  001A3C  6F04               	movwf	___fldiv@sign& (0+255),b
  4151  001A3E                     l9000:
  4152                           
  4153                           ; BSR set to: 1
  4154  001A3E  C105  F10B         	movff	___fldiv@new_exp,___fldiv@bexp
  4155  001A42                     
  4156                           ; BSR set to: 1
  4157  001A42  A10B               	btfss	___fldiv@bexp& (0+255),0,b
  4158  001A44  EF26  F00D         	goto	u9881
  4159  001A48  EF28  F00D         	goto	u9880
  4160  001A4C                     u9881:
  4161  001A4C  EF2C  F00D         	goto	l9006
  4162  001A50                     u9880:
  4163  001A50                     
  4164                           ; BSR set to: 1
  4165  001A50  0100               	movlb	0	; () banked
  4166  001A52  8FD0               	bsf	(___fldiv@b+2)& (0+255),7,b
  4167  001A54  EF2E  F00D         	goto	l9008
  4168  001A58                     l9006:
  4169                           
  4170                           ; BSR set to: 1
  4171  001A58  0100               	movlb	0	; () banked
  4172  001A5A  9FD0               	bcf	(___fldiv@b+2)& (0+255),7,b
  4173  001A5C                     l9008:
  4174                           
  4175                           ; BSR set to: 0
  4176  001A5C  0101               	movlb	1	; () banked
  4177  001A5E  90D8               	bcf	status,0,c
  4178  001A60  310B               	rrcf	___fldiv@bexp& (0+255),w,b
  4179  001A62  0100               	movlb	0	; () banked
  4180  001A64  6FD1               	movwf	(___fldiv@b+3)& (0+255),b
  4181  001A66  EFAF  F00B         	goto	l8922
  4182  001A6A                     l2176:
  4183                           
  4184                           ; BSR set to: 0
  4185  001A6A  0012               	return		;funcret
  4186  001A6C                     __end_of___fldiv:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function ___fladd *****************
  4190 ;; Defined at:
  4191 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  b               4   22[BANK0 ] unsigned char 
  4194 ;;  a               4   26[BANK0 ] unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  grs             1   20[BANK1 ] unsigned char 
  4197 ;;  bexp            1   19[BANK1 ] unsigned char 
  4198 ;;  aexp            1   18[BANK1 ] unsigned char 
  4199 ;;  signs           1   17[BANK1 ] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  4   22[BANK0 ] unsigned char 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4209 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Totals:         0       8       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;Total ram usage:       16 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:   10
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_async_config_baud_rate_gen
  4220 ;;		_Servo_SetAngle
  4221 ;;		_CCP_PWM_Mode_Config
  4222 ;;		_I2C_Master_Mode_Clock_Configurations
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text10
  4227  0010E0                     __ptext10:
  4228                           	callstack 0
  4229  0010E0                     ___fladd:
  4230                           	callstack 17
  4231  0010E0  0100               	movlb	0	; () banked
  4232  0010E2  51DD               	movf	(___fladd@b+3)& (0+255),w,b
  4233  0010E4  0B80               	andlw	128
  4234  0010E6  0101               	movlb	1	; () banked
  4235  0010E8  6F11               	movwf	___fladd@signs& (0+255),b
  4236  0010EA  0100               	movlb	0	; () banked
  4237  0010EC  51DD               	movf	(___fladd@b+3)& (0+255),w,b
  4238  0010EE  25DD               	addwf	(___fladd@b+3)& (0+255),w,b
  4239  0010F0  0101               	movlb	1	; () banked
  4240  0010F2  6F13               	movwf	___fladd@bexp& (0+255),b
  4241  0010F4                     
  4242                           ; BSR set to: 1
  4243  0010F4  0100               	movlb	0	; () banked
  4244  0010F6  AFDC               	btfss	(___fladd@b+2)& (0+255),7,b
  4245  0010F8  EF80  F008         	goto	u9271
  4246  0010FC  EF82  F008         	goto	u9270
  4247  001100                     u9271:
  4248  001100  EF84  F008         	goto	l8682
  4249  001104                     u9270:
  4250  001104                     
  4251                           ; BSR set to: 0
  4252  001104  0101               	movlb	1	; () banked
  4253  001106  8113               	bsf	___fladd@bexp& (0+255),0,b
  4254  001108                     l8682:
  4255  001108  0101               	movlb	1	; () banked
  4256  00110A  5113               	movf	___fladd@bexp& (0+255),w,b
  4257  00110C  B4D8               	btfsc	status,2,c
  4258  00110E  EF8B  F008         	goto	u9281
  4259  001112  EF8D  F008         	goto	u9280
  4260  001116                     u9281:
  4261  001116  EFA4  F008         	goto	l8692
  4262  00111A                     u9280:
  4263  00111A                     
  4264                           ; BSR set to: 1
  4265  00111A  2913               	incf	___fladd@bexp& (0+255),w,b
  4266  00111C  A4D8               	btfss	status,2,c
  4267  00111E  EF93  F008         	goto	u9291
  4268  001122  EF95  F008         	goto	u9290
  4269  001126                     u9291:
  4270  001126  EF9E  F008         	goto	l8688
  4271  00112A                     u9290:
  4272  00112A                     
  4273                           ; BSR set to: 1
  4274  00112A  0E00               	movlw	0
  4275  00112C  0100               	movlb	0	; () banked
  4276  00112E  6FDA               	movwf	___fladd@b& (0+255),b
  4277  001130  0E00               	movlw	0
  4278  001132  6FDB               	movwf	(___fladd@b+1)& (0+255),b
  4279  001134  0E00               	movlw	0
  4280  001136  6FDC               	movwf	(___fladd@b+2)& (0+255),b
  4281  001138  0E00               	movlw	0
  4282  00113A  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  4283  00113C                     l8688:
  4284  00113C  0100               	movlb	0	; () banked
  4285  00113E  8FDC               	bsf	(___fladd@b+2)& (0+255),7,b
  4286  001140                     
  4287                           ; BSR set to: 0
  4288  001140  0E00               	movlw	0
  4289  001142  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  4290  001144  EFAD  F008         	goto	l8694
  4291  001148                     l8692:
  4292                           
  4293                           ; BSR set to: 1
  4294  001148  0E00               	movlw	0
  4295  00114A  0100               	movlb	0	; () banked
  4296  00114C  6FDA               	movwf	___fladd@b& (0+255),b
  4297  00114E  0E00               	movlw	0
  4298  001150  6FDB               	movwf	(___fladd@b+1)& (0+255),b
  4299  001152  0E00               	movlw	0
  4300  001154  6FDC               	movwf	(___fladd@b+2)& (0+255),b
  4301  001156  0E00               	movlw	0
  4302  001158  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  4303  00115A                     l8694:
  4304                           
  4305                           ; BSR set to: 0
  4306  00115A  51E1               	movf	(___fladd@a+3)& (0+255),w,b
  4307  00115C  0B80               	andlw	128
  4308  00115E  0101               	movlb	1	; () banked
  4309  001160  6F12               	movwf	___fladd@aexp& (0+255),b
  4310  001162                     
  4311                           ; BSR set to: 1
  4312  001162  5111               	movf	___fladd@signs& (0+255),w,b
  4313  001164  1912               	xorwf	___fladd@aexp& (0+255),w,b
  4314  001166  B4D8               	btfsc	status,2,c
  4315  001168  EFB8  F008         	goto	u9301
  4316  00116C  EFBA  F008         	goto	u9300
  4317  001170                     u9301:
  4318  001170  EFBB  F008         	goto	l8700
  4319  001174                     u9300:
  4320  001174                     
  4321                           ; BSR set to: 1
  4322  001174  8D11               	bsf	___fladd@signs& (0+255),6,b
  4323  001176                     l8700:
  4324                           
  4325                           ; BSR set to: 1
  4326  001176  0100               	movlb	0	; () banked
  4327  001178  51E1               	movf	(___fladd@a+3)& (0+255),w,b
  4328  00117A  25E1               	addwf	(___fladd@a+3)& (0+255),w,b
  4329  00117C  0101               	movlb	1	; () banked
  4330  00117E  6F12               	movwf	___fladd@aexp& (0+255),b
  4331  001180                     
  4332                           ; BSR set to: 1
  4333  001180  0100               	movlb	0	; () banked
  4334  001182  AFE0               	btfss	(___fladd@a+2)& (0+255),7,b
  4335  001184  EFC6  F008         	goto	u9311
  4336  001188  EFC8  F008         	goto	u9310
  4337  00118C                     u9311:
  4338  00118C  EFCA  F008         	goto	l8706
  4339  001190                     u9310:
  4340  001190                     
  4341                           ; BSR set to: 0
  4342  001190  0101               	movlb	1	; () banked
  4343  001192  8112               	bsf	___fladd@aexp& (0+255),0,b
  4344  001194                     l8706:
  4345  001194  0101               	movlb	1	; () banked
  4346  001196  5112               	movf	___fladd@aexp& (0+255),w,b
  4347  001198  B4D8               	btfsc	status,2,c
  4348  00119A  EFD1  F008         	goto	u9321
  4349  00119E  EFD3  F008         	goto	u9320
  4350  0011A2                     u9321:
  4351  0011A2  EFEA  F008         	goto	l8716
  4352  0011A6                     u9320:
  4353  0011A6                     
  4354                           ; BSR set to: 1
  4355  0011A6  2912               	incf	___fladd@aexp& (0+255),w,b
  4356  0011A8  A4D8               	btfss	status,2,c
  4357  0011AA  EFD9  F008         	goto	u9331
  4358  0011AE  EFDB  F008         	goto	u9330
  4359  0011B2                     u9331:
  4360  0011B2  EFE4  F008         	goto	l8712
  4361  0011B6                     u9330:
  4362  0011B6                     
  4363                           ; BSR set to: 1
  4364  0011B6  0E00               	movlw	0
  4365  0011B8  0100               	movlb	0	; () banked
  4366  0011BA  6FDE               	movwf	___fladd@a& (0+255),b
  4367  0011BC  0E00               	movlw	0
  4368  0011BE  6FDF               	movwf	(___fladd@a+1)& (0+255),b
  4369  0011C0  0E00               	movlw	0
  4370  0011C2  6FE0               	movwf	(___fladd@a+2)& (0+255),b
  4371  0011C4  0E00               	movlw	0
  4372  0011C6  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  4373  0011C8                     l8712:
  4374  0011C8  0100               	movlb	0	; () banked
  4375  0011CA  8FE0               	bsf	(___fladd@a+2)& (0+255),7,b
  4376  0011CC                     
  4377                           ; BSR set to: 0
  4378  0011CC  0E00               	movlw	0
  4379  0011CE  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  4380  0011D0  EFF3  F008         	goto	l8718
  4381  0011D4                     l8716:
  4382                           
  4383                           ; BSR set to: 1
  4384  0011D4  0E00               	movlw	0
  4385  0011D6  0100               	movlb	0	; () banked
  4386  0011D8  6FDE               	movwf	___fladd@a& (0+255),b
  4387  0011DA  0E00               	movlw	0
  4388  0011DC  6FDF               	movwf	(___fladd@a+1)& (0+255),b
  4389  0011DE  0E00               	movlw	0
  4390  0011E0  6FE0               	movwf	(___fladd@a+2)& (0+255),b
  4391  0011E2  0E00               	movlw	0
  4392  0011E4  6FE1               	movwf	(___fladd@a+3)& (0+255),b
  4393  0011E6                     l8718:
  4394                           
  4395                           ; BSR set to: 0
  4396  0011E6  0101               	movlb	1	; () banked
  4397  0011E8  5113               	movf	___fladd@bexp& (0+255),w,b
  4398  0011EA  5D12               	subwf	___fladd@aexp& (0+255),w,b
  4399  0011EC  B0D8               	btfsc	status,0,c
  4400  0011EE  EFFB  F008         	goto	u9341
  4401  0011F2  EFFD  F008         	goto	u9340
  4402  0011F6                     u9341:
  4403  0011F6  EF24  F009         	goto	l8754
  4404  0011FA                     u9340:
  4405  0011FA                     
  4406                           ; BSR set to: 1
  4407  0011FA  AD11               	btfss	___fladd@signs& (0+255),6,b
  4408  0011FC  EF02  F009         	goto	u9351
  4409  001200  EF04  F009         	goto	u9350
  4410  001204                     u9351:
  4411  001204  EF06  F009         	goto	l8724
  4412  001208                     u9350:
  4413  001208                     
  4414                           ; BSR set to: 1
  4415  001208  0E80               	movlw	128
  4416  00120A  1B11               	xorwf	___fladd@signs& (0+255),f,b
  4417  00120C                     l8724:
  4418                           
  4419                           ; BSR set to: 1
  4420  00120C  C113  F114         	movff	___fladd@bexp,___fladd@grs
  4421  001210                     
  4422                           ; BSR set to: 1
  4423  001210  C112  F113         	movff	___fladd@aexp,___fladd@bexp
  4424  001214                     
  4425                           ; BSR set to: 1
  4426  001214  C114  F112         	movff	___fladd@grs,___fladd@aexp
  4427  001218                     
  4428                           ; BSR set to: 1
  4429  001218  C0DA  F114         	movff	___fladd@b,___fladd@grs
  4430  00121C                     
  4431                           ; BSR set to: 1
  4432  00121C  C0DE  F0DA         	movff	___fladd@a,___fladd@b
  4433  001220                     
  4434                           ; BSR set to: 1
  4435  001220  C114  F0DE         	movff	___fladd@grs,___fladd@a
  4436  001224                     
  4437                           ; BSR set to: 1
  4438  001224  C0DB  F114         	movff	___fladd@b+1,___fladd@grs
  4439  001228                     
  4440                           ; BSR set to: 1
  4441  001228  C0DF  F0DB         	movff	___fladd@a+1,___fladd@b+1
  4442  00122C                     
  4443                           ; BSR set to: 1
  4444  00122C  C114  F0DF         	movff	___fladd@grs,___fladd@a+1
  4445  001230                     
  4446                           ; BSR set to: 1
  4447  001230  C0DC  F114         	movff	___fladd@b+2,___fladd@grs
  4448  001234                     
  4449                           ; BSR set to: 1
  4450  001234  C0E0  F0DC         	movff	___fladd@a+2,___fladd@b+2
  4451  001238                     
  4452                           ; BSR set to: 1
  4453  001238  C114  F0E0         	movff	___fladd@grs,___fladd@a+2
  4454  00123C                     
  4455                           ; BSR set to: 1
  4456  00123C  C0DD  F114         	movff	___fladd@b+3,___fladd@grs
  4457  001240                     
  4458                           ; BSR set to: 1
  4459  001240  C0E1  F0DD         	movff	___fladd@a+3,___fladd@b+3
  4460  001244                     
  4461                           ; BSR set to: 1
  4462  001244  C114  F0E1         	movff	___fladd@grs,___fladd@a+3
  4463  001248                     l8754:
  4464                           
  4465                           ; BSR set to: 1
  4466  001248  0E00               	movlw	0
  4467  00124A  6F14               	movwf	___fladd@grs& (0+255),b
  4468  00124C                     
  4469                           ; BSR set to: 1
  4470  00124C  5113               	movf	___fladd@bexp& (0+255),w,b
  4471  00124E  C112  F10D         	movff	___fladd@aexp,??___fladd
  4472  001252  6B0E               	clrf	(??___fladd+1)& (0+255),b
  4473  001254  5F0D               	subwf	??___fladd& (0+255),f,b
  4474  001256  0E00               	movlw	0
  4475  001258  5B0E               	subwfb	(??___fladd+1)& (0+255),f,b
  4476  00125A  BF0E               	btfsc	(??___fladd+1)& (0+255),7,b
  4477  00125C  EF39  F009         	goto	u9361
  4478  001260  510E               	movf	(??___fladd+1)& (0+255),w,b
  4479  001262  E109               	bnz	u9360
  4480  001264  0E1A               	movlw	26
  4481  001266  5D0D               	subwf	??___fladd& (0+255),w,b
  4482  001268  A0D8               	btfss	status,0,c
  4483  00126A  EF39  F009         	goto	u9361
  4484  00126E  EF3B  F009         	goto	u9360
  4485  001272                     u9361:
  4486  001272  EF79  F009         	goto	l2123
  4487  001276                     u9360:
  4488  001276                     
  4489                           ; BSR set to: 1
  4490  001276  0100               	movlb	0	; () banked
  4491  001278  51DA               	movf	___fladd@b& (0+255),w,b
  4492  00127A  11DB               	iorwf	(___fladd@b+1)& (0+255),w,b
  4493  00127C  11DC               	iorwf	(___fladd@b+2)& (0+255),w,b
  4494  00127E  11DD               	iorwf	(___fladd@b+3)& (0+255),w,b
  4495  001280  A4D8               	btfss	status,2,c
  4496  001282  EF45  F009         	goto	u9371
  4497  001286  EF48  F009         	goto	u9370
  4498  00128A                     u9371:
  4499  00128A  0E01               	movlw	1
  4500  00128C  EF49  F009         	goto	u9380
  4501  001290                     u9370:
  4502  001290  0E00               	movlw	0
  4503  001292                     u9380:
  4504  001292  0101               	movlb	1	; () banked
  4505  001294  6F14               	movwf	___fladd@grs& (0+255),b
  4506  001296                     
  4507                           ; BSR set to: 1
  4508  001296  0E00               	movlw	0
  4509  001298  0100               	movlb	0	; () banked
  4510  00129A  6FDA               	movwf	___fladd@b& (0+255),b
  4511  00129C  0E00               	movlw	0
  4512  00129E  6FDB               	movwf	(___fladd@b+1)& (0+255),b
  4513  0012A0  0E00               	movlw	0
  4514  0012A2  6FDC               	movwf	(___fladd@b+2)& (0+255),b
  4515  0012A4  0E00               	movlw	0
  4516  0012A6  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  4517  0012A8                     
  4518                           ; BSR set to: 0
  4519  0012A8  C112  F113         	movff	___fladd@aexp,___fladd@bexp
  4520  0012AC  EF82  F009         	goto	l2122
  4521  0012B0                     l2124:
  4522                           
  4523                           ; BSR set to: 1
  4524  0012B0  A114               	btfss	___fladd@grs& (0+255),0,b
  4525  0012B2  EF5D  F009         	goto	u9391
  4526  0012B6  EF5F  F009         	goto	u9390
  4527  0012BA                     u9391:
  4528  0012BA  EF65  F009         	goto	l8766
  4529  0012BE                     u9390:
  4530  0012BE                     
  4531                           ; BSR set to: 1
  4532  0012BE  90D8               	bcf	status,0,c
  4533  0012C0  3114               	rrcf	___fladd@grs& (0+255),w,b
  4534  0012C2  0901               	iorlw	1
  4535  0012C4  6F14               	movwf	___fladd@grs& (0+255),b
  4536  0012C6  EF67  F009         	goto	l8768
  4537  0012CA                     l8766:
  4538                           
  4539                           ; BSR set to: 1
  4540  0012CA  90D8               	bcf	status,0,c
  4541  0012CC  3314               	rrcf	___fladd@grs& (0+255),f,b
  4542  0012CE                     l8768:
  4543                           
  4544                           ; BSR set to: 1
  4545  0012CE  0100               	movlb	0	; () banked
  4546  0012D0  A1DA               	btfss	___fladd@b& (0+255),0,b
  4547  0012D2  EF6D  F009         	goto	u9401
  4548  0012D6  EF6F  F009         	goto	u9400
  4549  0012DA                     u9401:
  4550  0012DA  EF71  F009         	goto	l8772
  4551  0012DE                     u9400:
  4552  0012DE                     
  4553                           ; BSR set to: 0
  4554  0012DE  0101               	movlb	1	; () banked
  4555  0012E0  8F14               	bsf	___fladd@grs& (0+255),7,b
  4556  0012E2                     l8772:
  4557  0012E2  0100               	movlb	0	; () banked
  4558  0012E4  35DD               	rlcf	(___fladd@b+3)& (0+255),w,b
  4559  0012E6  33DD               	rrcf	(___fladd@b+3)& (0+255),f,b
  4560  0012E8  33DC               	rrcf	(___fladd@b+2)& (0+255),f,b
  4561  0012EA  33DB               	rrcf	(___fladd@b+1)& (0+255),f,b
  4562  0012EC  33DA               	rrcf	___fladd@b& (0+255),f,b
  4563  0012EE                     
  4564                           ; BSR set to: 0
  4565  0012EE  0101               	movlb	1	; () banked
  4566  0012F0  2B13               	incf	___fladd@bexp& (0+255),f,b
  4567  0012F2                     l2123:
  4568                           
  4569                           ; BSR set to: 1
  4570  0012F2  5112               	movf	___fladd@aexp& (0+255),w,b
  4571  0012F4  5D13               	subwf	___fladd@bexp& (0+255),w,b
  4572  0012F6  A0D8               	btfss	status,0,c
  4573  0012F8  EF80  F009         	goto	u9411
  4574  0012FC  EF82  F009         	goto	u9410
  4575  001300                     u9411:
  4576  001300  EF58  F009         	goto	l2124
  4577  001304                     u9410:
  4578  001304                     l2122:
  4579  001304  0101               	movlb	1	; () banked
  4580  001306  BD11               	btfsc	___fladd@signs& (0+255),6,b
  4581  001308  EF88  F009         	goto	u9421
  4582  00130C  EF8A  F009         	goto	u9420
  4583  001310                     u9421:
  4584  001310  EFD1  F009         	goto	l8800
  4585  001314                     u9420:
  4586  001314                     
  4587                           ; BSR set to: 1
  4588  001314  5113               	movf	___fladd@bexp& (0+255),w,b
  4589  001316  A4D8               	btfss	status,2,c
  4590  001318  EF90  F009         	goto	u9431
  4591  00131C  EF92  F009         	goto	u9430
  4592  001320                     u9431:
  4593  001320  EF9D  F009         	goto	l8782
  4594  001324                     u9430:
  4595  001324                     
  4596                           ; BSR set to: 1
  4597  001324  0E00               	movlw	0
  4598  001326  0100               	movlb	0	; () banked
  4599  001328  6FDA               	movwf	?___fladd& (0+255),b
  4600  00132A  0E00               	movlw	0
  4601  00132C  6FDB               	movwf	(?___fladd+1)& (0+255),b
  4602  00132E  0E00               	movlw	0
  4603  001330  6FDC               	movwf	(?___fladd+2)& (0+255),b
  4604  001332  0E00               	movlw	0
  4605  001334  6FDD               	movwf	(?___fladd+3)& (0+255),b
  4606  001336  EF1E  F00B         	goto	l2131
  4607  00133A                     l8782:
  4608                           
  4609                           ; BSR set to: 1
  4610  00133A  0100               	movlb	0	; () banked
  4611  00133C  51DE               	movf	___fladd@a& (0+255),w,b
  4612  00133E  27DA               	addwf	___fladd@b& (0+255),f,b
  4613  001340  51DF               	movf	(___fladd@a+1)& (0+255),w,b
  4614  001342  23DB               	addwfc	(___fladd@b+1)& (0+255),f,b
  4615  001344  51E0               	movf	(___fladd@a+2)& (0+255),w,b
  4616  001346  23DC               	addwfc	(___fladd@b+2)& (0+255),f,b
  4617  001348  51E1               	movf	(___fladd@a+3)& (0+255),w,b
  4618  00134A  23DD               	addwfc	(___fladd@b+3)& (0+255),f,b
  4619  00134C                     
  4620                           ; BSR set to: 0
  4621  00134C  A1DD               	btfss	(___fladd@b+3)& (0+255),0,b
  4622  00134E  EFAB  F009         	goto	u9441
  4623  001352  EFAD  F009         	goto	u9440
  4624  001356                     u9441:
  4625  001356  EF7B  F00A         	goto	l8836
  4626  00135A                     u9440:
  4627  00135A                     
  4628                           ; BSR set to: 0
  4629  00135A  0101               	movlb	1	; () banked
  4630  00135C  A114               	btfss	___fladd@grs& (0+255),0,b
  4631  00135E  EFB3  F009         	goto	u9451
  4632  001362  EFB5  F009         	goto	u9450
  4633  001366                     u9451:
  4634  001366  EFBB  F009         	goto	l8790
  4635  00136A                     u9450:
  4636  00136A                     
  4637                           ; BSR set to: 1
  4638  00136A  90D8               	bcf	status,0,c
  4639  00136C  3114               	rrcf	___fladd@grs& (0+255),w,b
  4640  00136E  0901               	iorlw	1
  4641  001370  6F14               	movwf	___fladd@grs& (0+255),b
  4642  001372  EFBD  F009         	goto	l8792
  4643  001376                     l8790:
  4644                           
  4645                           ; BSR set to: 1
  4646  001376  90D8               	bcf	status,0,c
  4647  001378  3314               	rrcf	___fladd@grs& (0+255),f,b
  4648  00137A                     l8792:
  4649                           
  4650                           ; BSR set to: 1
  4651  00137A  0100               	movlb	0	; () banked
  4652  00137C  A1DA               	btfss	___fladd@b& (0+255),0,b
  4653  00137E  EFC3  F009         	goto	u9461
  4654  001382  EFC5  F009         	goto	u9460
  4655  001386                     u9461:
  4656  001386  EFC7  F009         	goto	l8796
  4657  00138A                     u9460:
  4658  00138A                     
  4659                           ; BSR set to: 0
  4660  00138A  0101               	movlb	1	; () banked
  4661  00138C  8F14               	bsf	___fladd@grs& (0+255),7,b
  4662  00138E                     l8796:
  4663  00138E  0100               	movlb	0	; () banked
  4664  001390  35DD               	rlcf	(___fladd@b+3)& (0+255),w,b
  4665  001392  33DD               	rrcf	(___fladd@b+3)& (0+255),f,b
  4666  001394  33DC               	rrcf	(___fladd@b+2)& (0+255),f,b
  4667  001396  33DB               	rrcf	(___fladd@b+1)& (0+255),f,b
  4668  001398  33DA               	rrcf	___fladd@b& (0+255),f,b
  4669  00139A                     
  4670                           ; BSR set to: 0
  4671  00139A  0101               	movlb	1	; () banked
  4672  00139C  2B13               	incf	___fladd@bexp& (0+255),f,b
  4673  00139E  EF7B  F00A         	goto	l8836
  4674  0013A2                     l8800:
  4675                           
  4676                           ; BSR set to: 1
  4677  0013A2  0100               	movlb	0	; () banked
  4678  0013A4  51DE               	movf	___fladd@a& (0+255),w,b
  4679  0013A6  5DDA               	subwf	___fladd@b& (0+255),w,b
  4680  0013A8  51DF               	movf	(___fladd@a+1)& (0+255),w,b
  4681  0013AA  59DB               	subwfb	(___fladd@b+1)& (0+255),w,b
  4682  0013AC  51E0               	movf	(___fladd@a+2)& (0+255),w,b
  4683  0013AE  59DC               	subwfb	(___fladd@b+2)& (0+255),w,b
  4684  0013B0  51DD               	movf	(___fladd@b+3)& (0+255),w,b
  4685  0013B2  0A80               	xorlw	128
  4686  0013B4  0101               	movlb	1	; () banked
  4687  0013B6  6F0D               	movwf	??___fladd& (0+255),b
  4688  0013B8  0100               	movlb	0	; () banked
  4689  0013BA  51E1               	movf	(___fladd@a+3)& (0+255),w,b
  4690  0013BC  0A80               	xorlw	128
  4691  0013BE  0101               	movlb	1	; () banked
  4692  0013C0  590D               	subwfb	??___fladd& (0+255),w,b
  4693  0013C2  B0D8               	btfsc	status,0,c
  4694  0013C4  EFE6  F009         	goto	u9471
  4695  0013C8  EFE8  F009         	goto	u9470
  4696  0013CC                     u9471:
  4697  0013CC  EF24  F00A         	goto	l8810
  4698  0013D0                     u9470:
  4699  0013D0                     
  4700                           ; BSR set to: 1
  4701  0013D0  0100               	movlb	0	; () banked
  4702  0013D2  51DA               	movf	___fladd@b& (0+255),w,b
  4703  0013D4  5DDE               	subwf	___fladd@a& (0+255),w,b
  4704  0013D6  0101               	movlb	1	; () banked
  4705  0013D8  6F0D               	movwf	??___fladd& (0+255),b
  4706  0013DA  0100               	movlb	0	; () banked
  4707  0013DC  51DB               	movf	(___fladd@b+1)& (0+255),w,b
  4708  0013DE  59DF               	subwfb	(___fladd@a+1)& (0+255),w,b
  4709  0013E0  0101               	movlb	1	; () banked
  4710  0013E2  6F0E               	movwf	(??___fladd+1)& (0+255),b
  4711  0013E4  0100               	movlb	0	; () banked
  4712  0013E6  51DC               	movf	(___fladd@b+2)& (0+255),w,b
  4713  0013E8  59E0               	subwfb	(___fladd@a+2)& (0+255),w,b
  4714  0013EA  0101               	movlb	1	; () banked
  4715  0013EC  6F0F               	movwf	(??___fladd+2)& (0+255),b
  4716  0013EE  0100               	movlb	0	; () banked
  4717  0013F0  51DD               	movf	(___fladd@b+3)& (0+255),w,b
  4718  0013F2  59E1               	subwfb	(___fladd@a+3)& (0+255),w,b
  4719  0013F4  0101               	movlb	1	; () banked
  4720  0013F6  6F10               	movwf	(??___fladd+3)& (0+255),b
  4721  0013F8  0EFF               	movlw	255
  4722  0013FA  250D               	addwf	??___fladd& (0+255),w,b
  4723  0013FC  0100               	movlb	0	; () banked
  4724  0013FE  6FDA               	movwf	___fladd@b& (0+255),b
  4725  001400  0EFF               	movlw	255
  4726  001402  0101               	movlb	1	; () banked
  4727  001404  210E               	addwfc	(??___fladd+1)& (0+255),w,b
  4728  001406  0100               	movlb	0	; () banked
  4729  001408  6FDB               	movwf	(___fladd@b+1)& (0+255),b
  4730  00140A  0EFF               	movlw	255
  4731  00140C  0101               	movlb	1	; () banked
  4732  00140E  210F               	addwfc	(??___fladd+2)& (0+255),w,b
  4733  001410  0100               	movlb	0	; () banked
  4734  001412  6FDC               	movwf	(___fladd@b+2)& (0+255),b
  4735  001414  0EFF               	movlw	255
  4736  001416  0101               	movlb	1	; () banked
  4737  001418  2110               	addwfc	(??___fladd+3)& (0+255),w,b
  4738  00141A  0100               	movlb	0	; () banked
  4739  00141C  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  4740  00141E  0E80               	movlw	128
  4741  001420  0101               	movlb	1	; () banked
  4742  001422  1B11               	xorwf	___fladd@signs& (0+255),f,b
  4743  001424                     
  4744                           ; BSR set to: 1
  4745  001424  6D14               	negf	___fladd@grs& (0+255),b
  4746  001426                     
  4747                           ; BSR set to: 1
  4748  001426  5114               	movf	___fladd@grs& (0+255),w,b
  4749  001428  A4D8               	btfss	status,2,c
  4750  00142A  EF19  F00A         	goto	u9481
  4751  00142E  EF1B  F00A         	goto	u9480
  4752  001432                     u9481:
  4753  001432  EF2D  F00A         	goto	l2139
  4754  001436                     u9480:
  4755  001436                     
  4756                           ; BSR set to: 1
  4757  001436  0E01               	movlw	1
  4758  001438  0100               	movlb	0	; () banked
  4759  00143A  27DA               	addwf	___fladd@b& (0+255),f,b
  4760  00143C  0E00               	movlw	0
  4761  00143E  23DB               	addwfc	(___fladd@b+1)& (0+255),f,b
  4762  001440  23DC               	addwfc	(___fladd@b+2)& (0+255),f,b
  4763  001442  23DD               	addwfc	(___fladd@b+3)& (0+255),f,b
  4764  001444  EF2D  F00A         	goto	l2139
  4765  001448                     l8810:
  4766                           
  4767                           ; BSR set to: 1
  4768  001448  0100               	movlb	0	; () banked
  4769  00144A  51DE               	movf	___fladd@a& (0+255),w,b
  4770  00144C  5FDA               	subwf	___fladd@b& (0+255),f,b
  4771  00144E  51DF               	movf	(___fladd@a+1)& (0+255),w,b
  4772  001450  5BDB               	subwfb	(___fladd@b+1)& (0+255),f,b
  4773  001452  51E0               	movf	(___fladd@a+2)& (0+255),w,b
  4774  001454  5BDC               	subwfb	(___fladd@b+2)& (0+255),f,b
  4775  001456  51E1               	movf	(___fladd@a+3)& (0+255),w,b
  4776  001458  5BDD               	subwfb	(___fladd@b+3)& (0+255),f,b
  4777  00145A                     l2139:
  4778  00145A  0100               	movlb	0	; () banked
  4779  00145C  51DA               	movf	___fladd@b& (0+255),w,b
  4780  00145E  11DB               	iorwf	(___fladd@b+1)& (0+255),w,b
  4781  001460  11DC               	iorwf	(___fladd@b+2)& (0+255),w,b
  4782  001462  11DD               	iorwf	(___fladd@b+3)& (0+255),w,b
  4783  001464  A4D8               	btfss	status,2,c
  4784  001466  EF37  F00A         	goto	u9491
  4785  00146A  EF39  F00A         	goto	u9490
  4786  00146E                     u9491:
  4787  00146E  EF73  F00A         	goto	l8834
  4788  001472                     u9490:
  4789  001472                     
  4790                           ; BSR set to: 0
  4791  001472  0101               	movlb	1	; () banked
  4792  001474  5114               	movf	___fladd@grs& (0+255),w,b
  4793  001476  A4D8               	btfss	status,2,c
  4794  001478  EF40  F00A         	goto	u9501
  4795  00147C  EF42  F00A         	goto	u9500
  4796  001480                     u9501:
  4797  001480  EF73  F00A         	goto	l8834
  4798  001484                     u9500:
  4799  001484                     
  4800                           ; BSR set to: 1
  4801  001484  0E00               	movlw	0
  4802  001486  0100               	movlb	0	; () banked
  4803  001488  6FDA               	movwf	?___fladd& (0+255),b
  4804  00148A  0E00               	movlw	0
  4805  00148C  6FDB               	movwf	(?___fladd+1)& (0+255),b
  4806  00148E  0E00               	movlw	0
  4807  001490  6FDC               	movwf	(?___fladd+2)& (0+255),b
  4808  001492  0E00               	movlw	0
  4809  001494  6FDD               	movwf	(?___fladd+3)& (0+255),b
  4810  001496  EF1E  F00B         	goto	l2131
  4811  00149A                     l8818:
  4812                           
  4813                           ; BSR set to: 0
  4814  00149A  90D8               	bcf	status,0,c
  4815  00149C  37DA               	rlcf	___fladd@b& (0+255),f,b
  4816  00149E  37DB               	rlcf	(___fladd@b+1)& (0+255),f,b
  4817  0014A0  37DC               	rlcf	(___fladd@b+2)& (0+255),f,b
  4818  0014A2  37DD               	rlcf	(___fladd@b+3)& (0+255),f,b
  4819  0014A4                     
  4820                           ; BSR set to: 0
  4821  0014A4  0101               	movlb	1	; () banked
  4822  0014A6  AF14               	btfss	___fladd@grs& (0+255),7,b
  4823  0014A8  EF58  F00A         	goto	u9511
  4824  0014AC  EF5A  F00A         	goto	u9510
  4825  0014B0                     u9511:
  4826  0014B0  EF5C  F00A         	goto	l8824
  4827  0014B4                     u9510:
  4828  0014B4                     
  4829                           ; BSR set to: 1
  4830  0014B4  0100               	movlb	0	; () banked
  4831  0014B6  81DA               	bsf	___fladd@b& (0+255),0,b
  4832  0014B8                     l8824:
  4833  0014B8  0101               	movlb	1	; () banked
  4834  0014BA  A114               	btfss	___fladd@grs& (0+255),0,b
  4835  0014BC  EF62  F00A         	goto	u9521
  4836  0014C0  EF64  F00A         	goto	u9520
  4837  0014C4                     u9521:
  4838  0014C4  EF68  F00A         	goto	l8828
  4839  0014C8                     u9520:
  4840  0014C8                     
  4841                           ; BSR set to: 1
  4842  0014C8  80D8               	bsf	status,0,c
  4843  0014CA  3714               	rlcf	___fladd@grs& (0+255),f,b
  4844  0014CC  EF6A  F00A         	goto	l8830
  4845  0014D0                     l8828:
  4846                           
  4847                           ; BSR set to: 1
  4848  0014D0  90D8               	bcf	status,0,c
  4849  0014D2  3714               	rlcf	___fladd@grs& (0+255),f,b
  4850  0014D4                     l8830:
  4851                           
  4852                           ; BSR set to: 1
  4853  0014D4  5113               	movf	___fladd@bexp& (0+255),w,b
  4854  0014D6  B4D8               	btfsc	status,2,c
  4855  0014D8  EF70  F00A         	goto	u9531
  4856  0014DC  EF72  F00A         	goto	u9530
  4857  0014E0                     u9531:
  4858  0014E0  EF73  F00A         	goto	l8834
  4859  0014E4                     u9530:
  4860  0014E4                     
  4861                           ; BSR set to: 1
  4862  0014E4  0713               	decf	___fladd@bexp& (0+255),f,b
  4863  0014E6                     l8834:
  4864  0014E6  0100               	movlb	0	; () banked
  4865  0014E8  AFDC               	btfss	(___fladd@b+2)& (0+255),7,b
  4866  0014EA  EF79  F00A         	goto	u9541
  4867  0014EE  EF7B  F00A         	goto	u9540
  4868  0014F2                     u9541:
  4869  0014F2  EF4D  F00A         	goto	l8818
  4870  0014F6                     u9540:
  4871  0014F6                     l8836:
  4872  0014F6  0E00               	movlw	0
  4873  0014F8  0101               	movlb	1	; () banked
  4874  0014FA  6F12               	movwf	___fladd@aexp& (0+255),b
  4875  0014FC                     
  4876                           ; BSR set to: 1
  4877  0014FC  AF14               	btfss	___fladd@grs& (0+255),7,b
  4878  0014FE  EF83  F00A         	goto	u9551
  4879  001502  EF85  F00A         	goto	u9550
  4880  001506                     u9551:
  4881  001506  EF9F  F00A         	goto	l2148
  4882  00150A                     u9550:
  4883  00150A                     
  4884                           ; BSR set to: 1
  4885  00150A  C114  F10D         	movff	___fladd@grs,??___fladd
  4886  00150E  0E7F               	movlw	127
  4887  001510  170D               	andwf	??___fladd& (0+255),f,b
  4888  001512  B4D8               	btfsc	status,2,c
  4889  001514  EF8E  F00A         	goto	u9561
  4890  001518  EF90  F00A         	goto	u9560
  4891  00151C                     u9561:
  4892  00151C  EF95  F00A         	goto	l2149
  4893  001520                     u9560:
  4894  001520                     l8842:
  4895  001520  0E01               	movlw	1
  4896  001522  0101               	movlb	1	; () banked
  4897  001524  6F12               	movwf	___fladd@aexp& (0+255),b
  4898  001526  EF9F  F00A         	goto	l2148
  4899  00152A                     l2149:
  4900                           
  4901                           ; BSR set to: 1
  4902  00152A  0100               	movlb	0	; () banked
  4903  00152C  A1DA               	btfss	___fladd@b& (0+255),0,b
  4904  00152E  EF9B  F00A         	goto	u9571
  4905  001532  EF9D  F00A         	goto	u9570
  4906  001536                     u9571:
  4907  001536  EF9F  F00A         	goto	l2148
  4908  00153A                     u9570:
  4909  00153A  EF90  F00A         	goto	l8842
  4910  00153E                     l2148:
  4911  00153E  0101               	movlb	1	; () banked
  4912  001540  5112               	movf	___fladd@aexp& (0+255),w,b
  4913  001542  B4D8               	btfsc	status,2,c
  4914  001544  EFA6  F00A         	goto	u9581
  4915  001548  EFA8  F00A         	goto	u9580
  4916  00154C                     u9581:
  4917  00154C  EFD5  F00A         	goto	l8854
  4918  001550                     u9580:
  4919  001550                     
  4920                           ; BSR set to: 1
  4921  001550  0E01               	movlw	1
  4922  001552  0100               	movlb	0	; () banked
  4923  001554  27DA               	addwf	___fladd@b& (0+255),f,b
  4924  001556  0E00               	movlw	0
  4925  001558  23DB               	addwfc	(___fladd@b+1)& (0+255),f,b
  4926  00155A  23DC               	addwfc	(___fladd@b+2)& (0+255),f,b
  4927  00155C  23DD               	addwfc	(___fladd@b+3)& (0+255),f,b
  4928  00155E                     
  4929                           ; BSR set to: 0
  4930  00155E  A1DD               	btfss	(___fladd@b+3)& (0+255),0,b
  4931  001560  EFB4  F00A         	goto	u9591
  4932  001564  EFB6  F00A         	goto	u9590
  4933  001568                     u9591:
  4934  001568  EFD5  F00A         	goto	l8854
  4935  00156C                     u9590:
  4936  00156C                     
  4937                           ; BSR set to: 0
  4938  00156C  C0DA  F10D         	movff	___fladd@b,??___fladd
  4939  001570  C0DB  F10E         	movff	___fladd@b+1,??___fladd+1
  4940  001574  C0DC  F10F         	movff	___fladd@b+2,??___fladd+2
  4941  001578  C0DD  F110         	movff	___fladd@b+3,??___fladd+3
  4942  00157C  0101               	movlb	1	; () banked
  4943  00157E  3510               	rlcf	(??___fladd+3)& (0+255),w,b
  4944  001580  3310               	rrcf	(??___fladd+3)& (0+255),f,b
  4945  001582  330F               	rrcf	(??___fladd+2)& (0+255),f,b
  4946  001584  330E               	rrcf	(??___fladd+1)& (0+255),f,b
  4947  001586  330D               	rrcf	??___fladd& (0+255),f,b
  4948  001588  C10D  F0DA         	movff	??___fladd,___fladd@b
  4949  00158C  C10E  F0DB         	movff	??___fladd+1,___fladd@b+1
  4950  001590  C10F  F0DC         	movff	??___fladd+2,___fladd@b+2
  4951  001594  C110  F0DD         	movff	??___fladd+3,___fladd@b+3
  4952  001598  2913               	incf	___fladd@bexp& (0+255),w,b
  4953  00159A  B4D8               	btfsc	status,2,c
  4954  00159C  EFD2  F00A         	goto	u9601
  4955  0015A0  EFD4  F00A         	goto	u9600
  4956  0015A4                     u9601:
  4957  0015A4  EFD5  F00A         	goto	l8854
  4958  0015A8                     u9600:
  4959  0015A8                     
  4960                           ; BSR set to: 1
  4961  0015A8  2B13               	incf	___fladd@bexp& (0+255),f,b
  4962  0015AA                     l8854:
  4963  0015AA  0101               	movlb	1	; () banked
  4964  0015AC  2913               	incf	___fladd@bexp& (0+255),w,b
  4965  0015AE  B4D8               	btfsc	status,2,c
  4966  0015B0  EFDC  F00A         	goto	u9611
  4967  0015B4  EFDE  F00A         	goto	u9610
  4968  0015B8                     u9611:
  4969  0015B8  EFE6  F00A         	goto	l8858
  4970  0015BC                     u9610:
  4971  0015BC                     
  4972                           ; BSR set to: 1
  4973  0015BC  5113               	movf	___fladd@bexp& (0+255),w,b
  4974  0015BE  A4D8               	btfss	status,2,c
  4975  0015C0  EFE4  F00A         	goto	u9621
  4976  0015C4  EFE6  F00A         	goto	u9620
  4977  0015C8                     u9621:
  4978  0015C8  EFFA  F00A         	goto	l8862
  4979  0015CC                     u9620:
  4980  0015CC                     l8858:
  4981                           
  4982                           ; BSR set to: 1
  4983  0015CC  0E00               	movlw	0
  4984  0015CE  0100               	movlb	0	; () banked
  4985  0015D0  6FDA               	movwf	___fladd@b& (0+255),b
  4986  0015D2  0E00               	movlw	0
  4987  0015D4  6FDB               	movwf	(___fladd@b+1)& (0+255),b
  4988  0015D6  0E00               	movlw	0
  4989  0015D8  6FDC               	movwf	(___fladd@b+2)& (0+255),b
  4990  0015DA  0E00               	movlw	0
  4991  0015DC  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  4992  0015DE  0101               	movlb	1	; () banked
  4993  0015E0  5113               	movf	___fladd@bexp& (0+255),w,b
  4994  0015E2  A4D8               	btfss	status,2,c
  4995  0015E4  EFF6  F00A         	goto	u9631
  4996  0015E8  EFF8  F00A         	goto	u9630
  4997  0015EC                     u9631:
  4998  0015EC  EFFA  F00A         	goto	l8862
  4999  0015F0                     u9630:
  5000  0015F0                     
  5001                           ; BSR set to: 1
  5002  0015F0  0E00               	movlw	0
  5003  0015F2  6F11               	movwf	___fladd@signs& (0+255),b
  5004  0015F4                     l8862:
  5005                           
  5006                           ; BSR set to: 1
  5007  0015F4  A113               	btfss	___fladd@bexp& (0+255),0,b
  5008  0015F6  EFFF  F00A         	goto	u9641
  5009  0015FA  EF01  F00B         	goto	u9640
  5010  0015FE                     u9641:
  5011  0015FE  EF05  F00B         	goto	l8866
  5012  001602                     u9640:
  5013  001602                     
  5014                           ; BSR set to: 1
  5015  001602  0100               	movlb	0	; () banked
  5016  001604  8FDC               	bsf	(___fladd@b+2)& (0+255),7,b
  5017  001606  EF07  F00B         	goto	l8868
  5018  00160A                     l8866:
  5019                           
  5020                           ; BSR set to: 1
  5021  00160A  0100               	movlb	0	; () banked
  5022  00160C  9FDC               	bcf	(___fladd@b+2)& (0+255),7,b
  5023  00160E                     l8868:
  5024                           
  5025                           ; BSR set to: 0
  5026  00160E  0101               	movlb	1	; () banked
  5027  001610  90D8               	bcf	status,0,c
  5028  001612  3113               	rrcf	___fladd@bexp& (0+255),w,b
  5029  001614  0100               	movlb	0	; () banked
  5030  001616  6FDD               	movwf	(___fladd@b+3)& (0+255),b
  5031  001618                     
  5032                           ; BSR set to: 0
  5033  001618  0101               	movlb	1	; () banked
  5034  00161A  AF11               	btfss	___fladd@signs& (0+255),7,b
  5035  00161C  EF12  F00B         	goto	u9651
  5036  001620  EF14  F00B         	goto	u9650
  5037  001624                     u9651:
  5038  001624  EF16  F00B         	goto	l8874
  5039  001628                     u9650:
  5040  001628                     
  5041                           ; BSR set to: 1
  5042  001628  0100               	movlb	0	; () banked
  5043  00162A  8FDD               	bsf	(___fladd@b+3)& (0+255),7,b
  5044  00162C                     l8874:
  5045  00162C  C0DA  F0DA         	movff	___fladd@b,?___fladd
  5046  001630  C0DB  F0DB         	movff	___fladd@b+1,?___fladd+1
  5047  001634  C0DC  F0DC         	movff	___fladd@b+2,?___fladd+2
  5048  001638  C0DD  F0DD         	movff	___fladd@b+3,?___fladd+3
  5049  00163C                     l2131:
  5050  00163C  0012               	return		;funcret
  5051  00163E                     __end_of___fladd:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function _async_Tx_config *****************
  5055 ;; Defined at:
  5056 ;;		line 386 in file "MCAL/EUSART/mcal_EUSART.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  _tx_obj         2   41[COMRAM] PTR const struct .
  5059 ;;		 -> _uart_obj(12), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  ret_val         1   43[COMRAM] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      unsigned char 
  5064 ;; Registers used:
  5065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:        3 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:   10
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_EUSART_Async_Init
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text11
  5086  0034B4                     __ptext11:
  5087                           	callstack 0
  5088  0034B4                     _async_Tx_config:
  5089                           	callstack 18
  5090  0034B4                     
  5091                           ;MCAL/EUSART/mcal_EUSART.c: 386: static Std_ReturnType async_Tx_config(const uart_tx_con
      +                          fig_st *_tx_obj );MCAL/EUSART/mcal_EUSART.c: 387: {;MCAL/EUSART/mcal_EUSART.c: 388:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5092  0034B4  0E01               	movlw	1
  5093  0034B6  6E2C               	movwf	async_Tx_config@ret_val^0,c
  5094  0034B8                     
  5095                           ;MCAL/EUSART/mcal_EUSART.c: 390:     if(((void*)0) == _tx_obj)
  5096  0034B8  502A               	movf	async_Tx_config@_tx_obj^0,w,c
  5097  0034BA  102B               	iorwf	(async_Tx_config@_tx_obj+1)^0,w,c
  5098  0034BC  A4D8               	btfss	status,2,c
  5099  0034BE  EF63  F01A         	goto	u10251
  5100  0034C2  EF65  F01A         	goto	u10250
  5101  0034C6                     u10251:
  5102  0034C6  EF69  F01A         	goto	l9260
  5103  0034CA                     u10250:
  5104  0034CA                     
  5105                           ;MCAL/EUSART/mcal_EUSART.c: 391:     {;MCAL/EUSART/mcal_EUSART.c: 392:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5106  0034CA  0E00               	movlw	0
  5107  0034CC  6E2C               	movwf	async_Tx_config@ret_val^0,c
  5108                           
  5109                           ;MCAL/EUSART/mcal_EUSART.c: 393:     }
  5110  0034CE  EFA0  F01A         	goto	l9276
  5111  0034D2                     l9260:
  5112                           
  5113                           ;MCAL/EUSART/mcal_EUSART.c: 395:     {;MCAL/EUSART/mcal_EUSART.c: 396:         if(1 == _
      +                          tx_obj->tx_enable)
  5114  0034D2  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5115  0034D6  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5116  0034DA  A4DF               	btfss	indf2,2,c
  5117  0034DC  EF72  F01A         	goto	u10261
  5118  0034E0  EF74  F01A         	goto	u10260
  5119  0034E4                     u10261:
  5120  0034E4  EF92  F01A         	goto	l9272
  5121  0034E8                     u10260:
  5122  0034E8                     
  5123                           ;MCAL/EUSART/mcal_EUSART.c: 397:         {;MCAL/EUSART/mcal_EUSART.c: 400:             (
      +                          TXSTAbits.TXEN = 0);
  5124  0034E8  9AAC               	bcf	172,5,c	;volatile
  5125  0034EA                     
  5126                           ;MCAL/EUSART/mcal_EUSART.c: 406:             if(1 == _tx_obj->tx_9th_bit_en )
  5127  0034EA  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5128  0034EE  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5129  0034F2  A6DF               	btfss	indf2,3,c
  5130  0034F4  EF7E  F01A         	goto	u10271
  5131  0034F8  EF80  F01A         	goto	u10270
  5132  0034FC                     u10271:
  5133  0034FC  EF83  F01A         	goto	l9268
  5134  003500                     u10270:
  5135  003500                     
  5136                           ;MCAL/EUSART/mcal_EUSART.c: 407:             {;MCAL/EUSART/mcal_EUSART.c: 408:          
      +                                 TXSTAbits.TX9 = 1 ;
  5137  003500  8CAC               	bsf	172,6,c	;volatile
  5138                           
  5139                           ;MCAL/EUSART/mcal_EUSART.c: 409:             }
  5140  003502  EF8F  F01A         	goto	l557
  5141  003506                     l9268:
  5142  003506  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5143  00350A  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5144  00350E  B6DF               	btfsc	indf2,3,c
  5145  003510  EF8C  F01A         	goto	u10281
  5146  003514  EF8E  F01A         	goto	u10280
  5147  003518                     u10281:
  5148  003518  EF8F  F01A         	goto	l557
  5149  00351C                     u10280:
  5150  00351C                     
  5151                           ;MCAL/EUSART/mcal_EUSART.c: 411:             {;MCAL/EUSART/mcal_EUSART.c: 412:          
      +                                 TXSTAbits.TX9 = 0 ;
  5152  00351C  9CAC               	bcf	172,6,c	;volatile
  5153  00351E                     l557:
  5154                           
  5155                           ;MCAL/EUSART/mcal_EUSART.c: 417:             (TXSTAbits.TXEN = 1);
  5156  00351E  8AAC               	bsf	172,5,c	;volatile
  5157                           
  5158                           ;MCAL/EUSART/mcal_EUSART.c: 418:         }
  5159  003520  EFA0  F01A         	goto	l9276
  5160  003524                     l9272:
  5161  003524  C02A  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5162  003528  C02B  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5163  00352C  B4DF               	btfsc	indf2,2,c
  5164  00352E  EF9B  F01A         	goto	u10291
  5165  003532  EF9D  F01A         	goto	u10290
  5166  003536                     u10291:
  5167  003536  EFA0  F01A         	goto	l560
  5168  00353A                     u10290:
  5169  00353A                     
  5170                           ;MCAL/EUSART/mcal_EUSART.c: 420:         {;MCAL/EUSART/mcal_EUSART.c: 422:             (
      +                          TXSTAbits.TXEN = 0);
  5171  00353A  9AAC               	bcf	172,5,c	;volatile
  5172                           
  5173                           ;MCAL/EUSART/mcal_EUSART.c: 423:         }
  5174  00353C  EFA0  F01A         	goto	l9276
  5175  003540                     l560:
  5176  003540                     l9276:
  5177                           
  5178                           ;MCAL/EUSART/mcal_EUSART.c: 428:     return ret_val ;
  5179  003540  502C               	movf	async_Tx_config@ret_val^0,w,c
  5180  003542  0012               	return		;funcret
  5181  003544                     __end_of_async_Tx_config:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function _async_Rx_config *****************
  5185 ;; Defined at:
  5186 ;;		line 431 in file "MCAL/EUSART/mcal_EUSART.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  _rx_obj         2    0[BANK0 ] PTR const struct .
  5189 ;;		 -> _uart_obj(12), 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  ret_val         1   44[COMRAM] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;Total ram usage:        3 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:   11
  5208 ;; This function calls:
  5209 ;;		_Rx_config_interrupt
  5210 ;; This function is called by:
  5211 ;;		_EUSART_Async_Init
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text12
  5216  003150                     __ptext12:
  5217                           	callstack 0
  5218  003150                     _async_Rx_config:
  5219                           	callstack 17
  5220  003150                     
  5221                           ;MCAL/EUSART/mcal_EUSART.c: 431: static Std_ReturnType async_Rx_config(const uart_rx_con
      +                          fig_st *_rx_obj );MCAL/EUSART/mcal_EUSART.c: 432: {;MCAL/EUSART/mcal_EUSART.c: 433:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5222  003150  0E01               	movlw	1
  5223  003152  6E2D               	movwf	async_Rx_config@ret_val^0,c
  5224  003154                     
  5225                           ;MCAL/EUSART/mcal_EUSART.c: 435:     if(((void*)0) == _rx_obj)
  5226  003154  0100               	movlb	0	; () banked
  5227  003156  51C4               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5228  003158  11C5               	iorwf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5229  00315A  A4D8               	btfss	status,2,c
  5230  00315C  EFB2  F018         	goto	u10301
  5231  003160  EFB4  F018         	goto	u10300
  5232  003164                     u10301:
  5233  003164  EFB8  F018         	goto	l9286
  5234  003168                     u10300:
  5235  003168                     
  5236                           ; BSR set to: 0
  5237                           ;MCAL/EUSART/mcal_EUSART.c: 436:     {;MCAL/EUSART/mcal_EUSART.c: 437:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5238  003168  0E00               	movlw	0
  5239  00316A  6E2D               	movwf	async_Rx_config@ret_val^0,c
  5240                           
  5241                           ;MCAL/EUSART/mcal_EUSART.c: 438:     }
  5242  00316C  EFFF  F018         	goto	l9304
  5243  003170                     l9286:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;MCAL/EUSART/mcal_EUSART.c: 440:     {;MCAL/EUSART/mcal_EUSART.c: 441:         if(1 == _
      +                          rx_obj->rx_enable)
  5247  003170  EE20 F006          	lfsr	2,6
  5248  003174  51C4               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5249  003176  26D9               	addwf	fsr2l,f,c
  5250  003178  51C5               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5251  00317A  22DA               	addwfc	fsr2h,f,c
  5252  00317C  A6DF               	btfss	indf2,3,c
  5253  00317E  EFC3  F018         	goto	u10311
  5254  003182  EFC5  F018         	goto	u10310
  5255  003186                     u10311:
  5256  003186  EFEF  F018         	goto	l9300
  5257  00318A                     u10310:
  5258  00318A                     
  5259                           ; BSR set to: 0
  5260                           ;MCAL/EUSART/mcal_EUSART.c: 442:         {;MCAL/EUSART/mcal_EUSART.c: 444:             (
      +                          RCSTAbits.CREN = 0);
  5261  00318A  98AB               	bcf	171,4,c	;volatile
  5262  00318C                     
  5263                           ; BSR set to: 0
  5264                           ;MCAL/EUSART/mcal_EUSART.c: 447:             ret_val = Rx_config_interrupt(_rx_obj);
  5265  00318C  C0C4  F02A         	movff	async_Rx_config@_rx_obj,Rx_config_interrupt@_rx_obj
  5266  003190  C0C5  F02B         	movff	async_Rx_config@_rx_obj+1,Rx_config_interrupt@_rx_obj+1
  5267  003194  EC09  F01A         	call	_Rx_config_interrupt	;wreg free
  5268  003198  6E2D               	movwf	async_Rx_config@ret_val^0,c
  5269  00319A                     
  5270                           ;MCAL/EUSART/mcal_EUSART.c: 450:             if(1 == _rx_obj->rx_9th_bit_en )
  5271  00319A  0100               	movlb	0	; () banked
  5272  00319C  EE20 F006          	lfsr	2,6
  5273  0031A0  51C4               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5274  0031A2  26D9               	addwf	fsr2l,f,c
  5275  0031A4  51C5               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5276  0031A6  22DA               	addwfc	fsr2h,f,c
  5277  0031A8  A8DF               	btfss	indf2,4,c
  5278  0031AA  EFD9  F018         	goto	u10321
  5279  0031AE  EFDB  F018         	goto	u10320
  5280  0031B2                     u10321:
  5281  0031B2  EFDE  F018         	goto	l9296
  5282  0031B6                     u10320:
  5283  0031B6                     
  5284                           ; BSR set to: 0
  5285                           ;MCAL/EUSART/mcal_EUSART.c: 451:             {;MCAL/EUSART/mcal_EUSART.c: 452:          
      +                                 RCSTAbits.RX9 = 1 ;
  5286  0031B6  8CAB               	bsf	171,6,c	;volatile
  5287                           
  5288                           ;MCAL/EUSART/mcal_EUSART.c: 453:             }
  5289  0031B8  EFEC  F018         	goto	l570
  5290  0031BC                     l9296:
  5291                           
  5292                           ; BSR set to: 0
  5293  0031BC  EE20 F006          	lfsr	2,6
  5294  0031C0  51C4               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5295  0031C2  26D9               	addwf	fsr2l,f,c
  5296  0031C4  51C5               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5297  0031C6  22DA               	addwfc	fsr2h,f,c
  5298  0031C8  B8DF               	btfsc	indf2,4,c
  5299  0031CA  EFE9  F018         	goto	u10331
  5300  0031CE  EFEB  F018         	goto	u10330
  5301  0031D2                     u10331:
  5302  0031D2  EFEC  F018         	goto	l570
  5303  0031D6                     u10330:
  5304  0031D6                     
  5305                           ; BSR set to: 0
  5306                           ;MCAL/EUSART/mcal_EUSART.c: 455:             {;MCAL/EUSART/mcal_EUSART.c: 456:          
      +                                 RCSTAbits.RX9 = 0 ;
  5307  0031D6  9CAB               	bcf	171,6,c	;volatile
  5308  0031D8                     l570:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;MCAL/EUSART/mcal_EUSART.c: 461:             (RCSTAbits.CREN = 1);
  5312  0031D8  88AB               	bsf	171,4,c	;volatile
  5313                           
  5314                           ;MCAL/EUSART/mcal_EUSART.c: 462:         }
  5315  0031DA  EFFF  F018         	goto	l9304
  5316  0031DE                     l9300:
  5317                           
  5318                           ; BSR set to: 0
  5319  0031DE  EE20 F006          	lfsr	2,6
  5320  0031E2  51C4               	movf	async_Rx_config@_rx_obj& (0+255),w,b
  5321  0031E4  26D9               	addwf	fsr2l,f,c
  5322  0031E6  51C5               	movf	(async_Rx_config@_rx_obj+1)& (0+255),w,b
  5323  0031E8  22DA               	addwfc	fsr2h,f,c
  5324  0031EA  B6DF               	btfsc	indf2,3,c
  5325  0031EC  EFFA  F018         	goto	u10341
  5326  0031F0  EFFC  F018         	goto	u10340
  5327  0031F4                     u10341:
  5328  0031F4  EFFF  F018         	goto	l573
  5329  0031F8                     u10340:
  5330  0031F8                     
  5331                           ; BSR set to: 0
  5332                           ;MCAL/EUSART/mcal_EUSART.c: 464:         {;MCAL/EUSART/mcal_EUSART.c: 466:             (
      +                          RCSTAbits.CREN = 0);
  5333  0031F8  98AB               	bcf	171,4,c	;volatile
  5334                           
  5335                           ;MCAL/EUSART/mcal_EUSART.c: 467:         }
  5336  0031FA  EFFF  F018         	goto	l9304
  5337  0031FE                     l573:
  5338  0031FE                     l9304:
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;MCAL/EUSART/mcal_EUSART.c: 472:     return ret_val ;
  5342  0031FE  502D               	movf	async_Rx_config@ret_val^0,w,c
  5343  003200                     
  5344                           ; BSR set to: 0
  5345  003200  0012               	return		;funcret
  5346  003202                     __end_of_async_Rx_config:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _Rx_config_interrupt *****************
  5350 ;; Defined at:
  5351 ;;		line 518 in file "MCAL/EUSART/mcal_EUSART.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  _rx_obj         2   41[COMRAM] PTR const struct .
  5354 ;;		 -> _uart_obj(12), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  ret_val         1   43[COMRAM] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      unsigned char 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;Total ram usage:        3 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:   10
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_async_Rx_config
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text13
  5381  003412                     __ptext13:
  5382                           	callstack 0
  5383  003412                     _Rx_config_interrupt:
  5384                           	callstack 17
  5385  003412                     
  5386                           ;MCAL/EUSART/mcal_EUSART.c: 518: static __attribute__((inline)) Std_ReturnType Rx_config
      +                          _interrupt(const uart_rx_config_st *_rx_obj);MCAL/EUSART/mcal_EUSART.c: 519: {;MCAL/EUSA
      +                          RT/mcal_EUSART.c: 521:      Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5387  003412  0E01               	movlw	1
  5388  003414  6E2C               	movwf	Rx_config_interrupt@ret_val^0,c
  5389  003416                     
  5390                           ;MCAL/EUSART/mcal_EUSART.c: 523:     if(((void*)0) == _rx_obj)
  5391  003416  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5392  003418  102B               	iorwf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5393  00341A  A4D8               	btfss	status,2,c
  5394  00341C  EF12  F01A         	goto	u9181
  5395  003420  EF14  F01A         	goto	u9180
  5396  003424                     u9181:
  5397  003424  EF18  F01A         	goto	l584
  5398  003428                     u9180:
  5399  003428                     
  5400                           ;MCAL/EUSART/mcal_EUSART.c: 524:     {;MCAL/EUSART/mcal_EUSART.c: 525:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5401  003428  0E00               	movlw	0
  5402  00342A  6E2C               	movwf	Rx_config_interrupt@ret_val^0,c
  5403                           
  5404                           ;MCAL/EUSART/mcal_EUSART.c: 526:     }
  5405  00342C  EF58  F01A         	goto	l8648
  5406  003430                     l584:
  5407                           
  5408                           ;MCAL/EUSART/mcal_EUSART.c: 528:     {;MCAL/EUSART/mcal_EUSART.c: 530:         (PIE1bits
      +                          .RCIE = 0);
  5409  003430  9A9D               	bcf	157,5,c	;volatile
  5410  003432                     
  5411                           ;MCAL/EUSART/mcal_EUSART.c: 531:         eusart_Rx_InterruptHandler = _rx_obj->rx_Interr
      +                          uptHandler ;
  5412  003432  C02A  FFD9         	movff	Rx_config_interrupt@_rx_obj,fsr2l
  5413  003436  C02B  FFDA         	movff	Rx_config_interrupt@_rx_obj+1,fsr2h
  5414  00343A  CFDE F03C          	movff	postinc2,_eusart_Rx_InterruptHandler
  5415  00343E  CFDD F03D          	movff	postdec2,_eusart_Rx_InterruptHandler+1
  5416  003442                     
  5417                           ;MCAL/EUSART/mcal_EUSART.c: 532:         eusart_frameerr_CallBack = _rx_obj->ferr_Interr
      +                          uptHandler ;
  5418  003442  EE20 F004          	lfsr	2,4
  5419  003446  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5420  003448  26D9               	addwf	fsr2l,f,c
  5421  00344A  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5422  00344C  22DA               	addwfc	fsr2h,f,c
  5423  00344E  CFDE F0FC          	movff	postinc2,_eusart_frameerr_CallBack
  5424  003452  CFDD F0FD          	movff	postdec2,_eusart_frameerr_CallBack+1
  5425  003456                     
  5426                           ;MCAL/EUSART/mcal_EUSART.c: 533:         eusart_overrunerr_CallBack = _rx_obj->oerr_Inte
      +                          rruptHandler ;
  5427  003456  EE20 F002          	lfsr	2,2
  5428  00345A  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5429  00345C  26D9               	addwf	fsr2l,f,c
  5430  00345E  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5431  003460  22DA               	addwfc	fsr2h,f,c
  5432  003462  CFDE F0FE          	movff	postinc2,_eusart_overrunerr_CallBack
  5433  003466  CFDD F0FF          	movff	postdec2,_eusart_overrunerr_CallBack+1
  5434  00346A                     
  5435                           ;MCAL/EUSART/mcal_EUSART.c: 536:                 (RCONbits.IPEN = 1 );
  5436  00346A  8ED0               	bsf	208,7,c	;volatile
  5437  00346C                     
  5438                           ;MCAL/EUSART/mcal_EUSART.c: 537:                 if(1 == _rx_obj->uart_rx_priority)
  5439  00346C  EE20 F006          	lfsr	2,6
  5440  003470  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5441  003472  26D9               	addwf	fsr2l,f,c
  5442  003474  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5443  003476  22DA               	addwfc	fsr2h,f,c
  5444  003478  A0DF               	btfss	indf2,0,c
  5445  00347A  EF41  F01A         	goto	u9191
  5446  00347E  EF43  F01A         	goto	u9190
  5447  003482                     u9191:
  5448  003482  EF47  F01A         	goto	l8644
  5449  003486                     u9190:
  5450  003486                     
  5451                           ;MCAL/EUSART/mcal_EUSART.c: 538:                 {;MCAL/EUSART/mcal_EUSART.c: 539:      
      +                                         (IPR1bits.RCIP = 1);
  5452  003486  8A9F               	bsf	159,5,c	;volatile
  5453                           
  5454                           ;MCAL/EUSART/mcal_EUSART.c: 540:                     (INTCONbits.GIEH = 1);
  5455  003488  8EF2               	bsf	242,7,c	;volatile
  5456                           
  5457                           ;MCAL/EUSART/mcal_EUSART.c: 542:                 }
  5458  00348A  EF57  F01A         	goto	l587
  5459  00348E                     l8644:
  5460  00348E  EE20 F006          	lfsr	2,6
  5461  003492  502A               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5462  003494  26D9               	addwf	fsr2l,f,c
  5463  003496  502B               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5464  003498  22DA               	addwfc	fsr2h,f,c
  5465  00349A  B0DF               	btfsc	indf2,0,c
  5466  00349C  EF52  F01A         	goto	u9201
  5467  0034A0  EF54  F01A         	goto	u9200
  5468  0034A4                     u9201:
  5469  0034A4  EF57  F01A         	goto	l587
  5470  0034A8                     u9200:
  5471  0034A8                     
  5472                           ;MCAL/EUSART/mcal_EUSART.c: 544:                 {;MCAL/EUSART/mcal_EUSART.c: 545:      
      +                                         (IPR1bits.RCIP = 0);
  5473  0034A8  9A9F               	bcf	159,5,c	;volatile
  5474                           
  5475                           ;MCAL/EUSART/mcal_EUSART.c: 546:                     (INTCONbits.GIEH = 1);
  5476  0034AA  8EF2               	bsf	242,7,c	;volatile
  5477                           
  5478                           ;MCAL/EUSART/mcal_EUSART.c: 547:                     (INTCONbits.GIEL = 1);
  5479  0034AC  8CF2               	bsf	242,6,c	;volatile
  5480  0034AE                     l587:
  5481                           
  5482                           ;MCAL/EUSART/mcal_EUSART.c: 555:         (PIE1bits.RCIE = 1);
  5483  0034AE  8A9D               	bsf	157,5,c	;volatile
  5484  0034B0                     l8648:
  5485                           
  5486                           ;MCAL/EUSART/mcal_EUSART.c: 560:     return ret_val ;
  5487  0034B0  502C               	movf	Rx_config_interrupt@ret_val^0,w,c
  5488  0034B2  0012               	return		;funcret
  5489  0034B4                     __end_of_Rx_config_interrupt:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _GPS_Service *****************
  5493 ;; Defined at:
  5494 ;;		line 195 in file "application.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  key             1   30[BANK0 ] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;Total ram usage:        3 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:   15
  5515 ;; This function calls:
  5516 ;;		_EUSART_Async_Read_Data_Blocking
  5517 ;;		_GPIO_Pin_Write_Logic
  5518 ;;		_lcd_4bit_send_string_data_pos
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text14
  5525  00260E                     __ptext14:
  5526                           	callstack 0
  5527  00260E                     _GPS_Service:
  5528                           	callstack 15
  5529  00260E                     
  5530                           ;application.c: 197:     uint8 key=1;
  5531  00260E  0E01               	movlw	1
  5532  002610  0100               	movlb	0	; () banked
  5533  002612  6FE2               	movwf	GPS_Service@key& (0+255),b
  5534  002614                     
  5535                           ; BSR set to: 0
  5536                           ;application.c: 198:     (PIE1bits.RCIE = 0);
  5537  002614  9A9D               	bcf	157,5,c	;volatile
  5538  002616                     
  5539                           ; BSR set to: 0
  5540                           ;application.c: 199:     GPIO_Pin_Write_Logic(&selector,GPIO_HIGH);
  5541  002616  0E53               	movlw	low _selector
  5542  002618  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  5543  00261A  0E00               	movlw	high _selector
  5544  00261C  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  5545  00261E  0E01               	movlw	1
  5546  002620  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  5547  002622  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  5548                           
  5549                           ;application.c: 201:     while (key)
  5550  002626  EF9D  F013         	goto	l9638
  5551  00262A                     l9602:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;application.c: 202:     {;application.c: 203:         EUSART_Async_Read_Data_Blocking(&
      +                          _uart_obj,&gpstemp);
  5555  00262A  0E9E               	movlw	low __uart_obj
  5556  00262C  6FD4               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
  5557  00262E  0E00               	movlw	high __uart_obj
  5558  002630  6FD5               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
  5559  002632  0E41               	movlw	low _gpstemp
  5560  002634  6FD6               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
  5561  002636  0E00               	movlw	high _gpstemp
  5562  002638  6FD7               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
  5563  00263A  EC01  F01C         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
  5564  00263E                     
  5565                           ;application.c: 204:         if ('$'==gpstemp)
  5566  00263E  0E24               	movlw	36
  5567  002640  1841               	xorwf	_gpstemp^0,w,c
  5568  002642  A4D8               	btfss	status,2,c
  5569  002644  EF26  F013         	goto	u10751
  5570  002648  EF28  F013         	goto	u10750
  5571  00264C                     u10751:
  5572  00264C  EF9D  F013         	goto	l9638
  5573  002650                     u10750:
  5574  002650  EF94  F013         	goto	l1555
  5575  002654                     l9608:
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;application.c: 207:             {;application.c: 208:                     EUSART_Async_
      +                          Read_Data_Blocking(&_uart_obj,&gpstemp);
  5579  002654  0E9E               	movlw	low __uart_obj
  5580  002656  6FD4               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
  5581  002658  0E00               	movlw	high __uart_obj
  5582  00265A  6FD5               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
  5583  00265C  0E41               	movlw	low _gpstemp
  5584  00265E  6FD6               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
  5585  002660  0E00               	movlw	high _gpstemp
  5586  002662  6FD7               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
  5587  002664  EC01  F01C         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
  5588  002668                     
  5589                           ;application.c: 209:                     if (','==gpstemp)
  5590  002668  0E2C               	movlw	44
  5591  00266A  1841               	xorwf	_gpstemp^0,w,c
  5592  00266C  A4D8               	btfss	status,2,c
  5593  00266E  EF3B  F013         	goto	u10761
  5594  002672  EF3D  F013         	goto	u10760
  5595  002676                     u10761:
  5596  002676  EF94  F013         	goto	l1555
  5597  00267A                     u10760:
  5598  00267A                     
  5599                           ;application.c: 210:                     {;application.c: 211:                         c
      +                          ounter++;
  5600  00267A  2A3E               	incf	_counter^0,f,c
  5601  00267C                     
  5602                           ;application.c: 212:                         if (3==counter)
  5603  00267C  0E03               	movlw	3
  5604  00267E  183E               	xorwf	_counter^0,w,c
  5605  002680  A4D8               	btfss	status,2,c
  5606  002682  EF45  F013         	goto	u10771
  5607  002686  EF47  F013         	goto	u10770
  5608  00268A                     u10771:
  5609  00268A  EF69  F013         	goto	l9626
  5610  00268E                     u10770:
  5611  00268E                     
  5612                           ;application.c: 213:                         {;application.c: 214:                      
      +                                 i=0;
  5613  00268E  0E00               	movlw	0
  5614  002690  6E3F               	movwf	_i^0,c
  5615  002692                     l9618:
  5616                           
  5617                           ;application.c: 217:                             {;application.c: 218:                  
      +                                         EUSART_Async_Read_Data_Blocking(&_uart_obj,(latitude+i));
  5618  002692  0E9E               	movlw	low __uart_obj
  5619  002694  0100               	movlb	0	; () banked
  5620  002696  6FD4               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
  5621  002698  0E00               	movlw	high __uart_obj
  5622  00269A  6FD5               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
  5623  00269C  0E32               	movlw	low _latitude
  5624  00269E  243F               	addwf	_i^0,w,c
  5625  0026A0  6FD6               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
  5626  0026A2  6BD7               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
  5627  0026A4  0E01               	movlw	high _latitude
  5628  0026A6  23D7               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
  5629  0026A8  EC01  F01C         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
  5630  0026AC                     
  5631                           ;application.c: 219:                                 i++;
  5632  0026AC  2A3F               	incf	_i^0,f,c
  5633  0026AE                     
  5634                           ;application.c: 220:                             }while(','!=(latitude[i-1]));
  5635  0026AE  0E31               	movlw	low (_latitude+65535)
  5636  0026B0  243F               	addwf	_i^0,w,c
  5637  0026B2  6ED9               	movwf	fsr2l,c
  5638  0026B4  6ADA               	clrf	fsr2h,c
  5639  0026B6  0E01               	movlw	high (_latitude+65535)
  5640  0026B8  22DA               	addwfc	fsr2h,f,c
  5641  0026BA  0E2C               	movlw	44
  5642  0026BC  18DE               	xorwf	postinc2,w,c
  5643  0026BE  A4D8               	btfss	status,2,c
  5644  0026C0  EF64  F013         	goto	u10781
  5645  0026C4  EF66  F013         	goto	u10780
  5646  0026C8                     u10781:
  5647  0026C8  EF49  F013         	goto	l9618
  5648  0026CC                     u10780:
  5649  0026CC                     
  5650                           ;application.c: 221:                             counter++;
  5651  0026CC  2A3E               	incf	_counter^0,f,c
  5652                           
  5653                           ;application.c: 223:                         }
  5654  0026CE  EF94  F013         	goto	l1555
  5655  0026D2                     l9626:
  5656  0026D2  0E05               	movlw	5
  5657  0026D4  183E               	xorwf	_counter^0,w,c
  5658  0026D6  A4D8               	btfss	status,2,c
  5659  0026D8  EF70  F013         	goto	u10791
  5660  0026DC  EF72  F013         	goto	u10790
  5661  0026E0                     u10791:
  5662  0026E0  EF94  F013         	goto	l1555
  5663  0026E4                     u10790:
  5664  0026E4                     
  5665                           ;application.c: 225:                         {;application.c: 226:                      
      +                                 i=0;
  5666  0026E4  0E00               	movlw	0
  5667  0026E6  6E3F               	movwf	_i^0,c
  5668  0026E8                     l9630:
  5669                           
  5670                           ;application.c: 229:                                 EUSART_Async_Read_Data_Blocking(&_u
      +                          art_obj,(longtude+i));
  5671  0026E8  0E9E               	movlw	low __uart_obj
  5672  0026EA  0100               	movlb	0	; () banked
  5673  0026EC  6FD4               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
  5674  0026EE  0E00               	movlw	high __uart_obj
  5675  0026F0  6FD5               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
  5676  0026F2  0E25               	movlw	low _longtude
  5677  0026F4  243F               	addwf	_i^0,w,c
  5678  0026F6  6FD6               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
  5679  0026F8  6BD7               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
  5680  0026FA  0E01               	movlw	high _longtude
  5681  0026FC  23D7               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
  5682  0026FE  EC01  F01C         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
  5683  002702                     
  5684                           ;application.c: 230:                                 i++;
  5685  002702  2A3F               	incf	_i^0,f,c
  5686  002704                     
  5687                           ;application.c: 231:                             }while(','!=(longtude[i-1]));
  5688  002704  0E24               	movlw	low (_longtude+65535)
  5689  002706  243F               	addwf	_i^0,w,c
  5690  002708  6ED9               	movwf	fsr2l,c
  5691  00270A  6ADA               	clrf	fsr2h,c
  5692  00270C  0E01               	movlw	high (_longtude+65535)
  5693  00270E  22DA               	addwfc	fsr2h,f,c
  5694  002710  0E2C               	movlw	44
  5695  002712  18DE               	xorwf	postinc2,w,c
  5696  002714  A4D8               	btfss	status,2,c
  5697  002716  EF8F  F013         	goto	u10801
  5698  00271A  EF91  F013         	goto	u10800
  5699  00271E                     u10801:
  5700  00271E  EF74  F013         	goto	l9630
  5701  002722                     u10800:
  5702  002722                     
  5703                           ;application.c: 232:                             key=0;
  5704  002722  0E00               	movlw	0
  5705  002724  0100               	movlb	0	; () banked
  5706  002726  6FE2               	movwf	GPS_Service@key& (0+255),b
  5707  002728                     l1555:
  5708                           
  5709                           ;application.c: 206:             while (key)
  5710  002728  0100               	movlb	0	; () banked
  5711  00272A  51E2               	movf	GPS_Service@key& (0+255),w,b
  5712  00272C  A4D8               	btfss	status,2,c
  5713  00272E  EF9B  F013         	goto	u10811
  5714  002732  EF9D  F013         	goto	u10810
  5715  002736                     u10811:
  5716  002736  EF2A  F013         	goto	l9608
  5717  00273A                     u10810:
  5718  00273A                     l9638:
  5719                           
  5720                           ;application.c: 201:     while (key)
  5721  00273A  0100               	movlb	0	; () banked
  5722  00273C  51E2               	movf	GPS_Service@key& (0+255),w,b
  5723  00273E  A4D8               	btfss	status,2,c
  5724  002740  EFA4  F013         	goto	u10821
  5725  002744  EFA6  F013         	goto	u10820
  5726  002748                     u10821:
  5727  002748  EF15  F013         	goto	l9602
  5728  00274C                     u10820:
  5729  00274C                     
  5730                           ; BSR set to: 0
  5731                           ;application.c: 238:     lcd_4bit_send_string_data_pos(&lcd1,1,1,"-             ");
  5732  00274C  0E47               	movlw	low _lcd1
  5733  00274E  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  5734  002750  0E00               	movlw	high _lcd1
  5735  002752  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  5736  002754  0E01               	movlw	1
  5737  002756  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  5738  002758  0E01               	movlw	1
  5739  00275A  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  5740  00275C  0E44               	movlw	low STR_34
  5741  00275E  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  5742  002760  0E10               	movlw	high STR_34
  5743  002762  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  5744  002764  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  5745                           
  5746                           ;application.c: 239:     lcd_4bit_send_string_data_pos(&lcd1,2,1,"-             ");
  5747  002768  0E47               	movlw	low _lcd1
  5748  00276A  0100               	movlb	0	; () banked
  5749  00276C  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  5750  00276E  0E00               	movlw	high _lcd1
  5751  002770  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  5752  002772  0E02               	movlw	2
  5753  002774  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  5754  002776  0E01               	movlw	1
  5755  002778  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  5756  00277A  0E44               	movlw	low STR_34
  5757  00277C  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  5758  00277E  0E10               	movlw	high STR_34
  5759  002780  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  5760  002782  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  5761                           
  5762                           ;application.c: 240:     lcd_4bit_send_string_data_pos(&lcd1,1,1,latitude);
  5763  002786  0E47               	movlw	low _lcd1
  5764  002788  0100               	movlb	0	; () banked
  5765  00278A  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  5766  00278C  0E00               	movlw	high _lcd1
  5767  00278E  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  5768  002790  0E01               	movlw	1
  5769  002792  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  5770  002794  0E01               	movlw	1
  5771  002796  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  5772  002798  0E32               	movlw	low _latitude
  5773  00279A  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  5774  00279C  0E01               	movlw	high _latitude
  5775  00279E  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  5776  0027A0  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  5777                           
  5778                           ;application.c: 241:     lcd_4bit_send_string_data_pos(&lcd1,2,1,longtude);
  5779  0027A4  0E47               	movlw	low _lcd1
  5780  0027A6  0100               	movlb	0	; () banked
  5781  0027A8  6FD9               	movwf	lcd_4bit_send_string_data_pos@lcd& (0+255),b
  5782  0027AA  0E00               	movlw	high _lcd1
  5783  0027AC  6FDA               	movwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),b
  5784  0027AE  0E02               	movlw	2
  5785  0027B0  6FDB               	movwf	lcd_4bit_send_string_data_pos@row& (0+255),b
  5786  0027B2  0E01               	movlw	1
  5787  0027B4  6FDC               	movwf	lcd_4bit_send_string_data_pos@colum& (0+255),b
  5788  0027B6  0E25               	movlw	low _longtude
  5789  0027B8  6FDD               	movwf	lcd_4bit_send_string_data_pos@str& (0+255),b
  5790  0027BA  0E01               	movlw	high _longtude
  5791  0027BC  6FDE               	movwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),b
  5792  0027BE  ECB2  F019         	call	_lcd_4bit_send_string_data_pos	;wreg free
  5793  0027C2                     
  5794                           ;application.c: 242:     GPIO_Pin_Write_Logic(&selector,GPIO_LOW);
  5795  0027C2  0E53               	movlw	low _selector
  5796  0027C4  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  5797  0027C6  0E00               	movlw	high _selector
  5798  0027C8  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  5799  0027CA  0E00               	movlw	0
  5800  0027CC  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  5801  0027CE  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  5802  0027D2                     
  5803                           ;application.c: 243:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  5804  0027D2  0E15               	movlw	21
  5805  0027D4  0100               	movlb	0	; () banked
  5806  0027D6  6FE1               	movwf	(??_GPS_Service+1)& (0+255),b
  5807  0027D8  0E4B               	movlw	75
  5808  0027DA  6FE0               	movwf	??_GPS_Service& (0+255),b
  5809  0027DC  0EBE               	movlw	190
  5810  0027DE                     u11407:
  5811  0027DE  2EE8               	decfsz	wreg,f,c
  5812  0027E0  D7FE               	bra	u11407
  5813  0027E2  2FE0               	decfsz	??_GPS_Service& (0+255),f,b
  5814  0027E4  D7FC               	bra	u11407
  5815  0027E6  2FE1               	decfsz	(??_GPS_Service+1)& (0+255),f,b
  5816  0027E8  D7FA               	bra	u11407
  5817  0027EA  F000               	nop	
  5818  0027EC                     
  5819                           ;application.c: 244:     (PIE1bits.RCIE = 1) ;
  5820  0027EC  8A9D               	bsf	157,5,c	;volatile
  5821  0027EE  0012               	return		;funcret
  5822  0027F0                     __end_of_GPS_Service:
  5823                           	callstack 0
  5824                           
  5825 ;; *************** function _lcd_4bit_send_string_data_pos *****************
  5826 ;; Defined at:
  5827 ;;		line 163 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  lcd             2   21[BANK0 ] PTR const struct .
  5830 ;;		 -> lcd1(6), 
  5831 ;;  row             1   23[BANK0 ] unsigned char 
  5832 ;;  colum           1   24[BANK0 ] unsigned char 
  5833 ;;  str             2   25[BANK0 ] PTR unsigned char 
  5834 ;;		 -> STR_35(15), STR_34(15), longtude(13), latitude(13), 
  5835 ;;		 -> STR_33(13), STR_32(15), STR_31(4), STR_30(15), 
  5836 ;;		 -> STR_29(13), STR_28(15), STR_27(16), STR_26(15), 
  5837 ;;		 -> STR_25(10), STR_24(15), STR_23(15), STR_22(15), 
  5838 ;;		 -> STR_21(12), STR_20(15), STR_19(11), STR_18(15), 
  5839 ;;		 -> STR_17(15), STR_16(15), STR_15(10), STR_14(15), 
  5840 ;;		 -> STR_13(14), STR_12(15), STR_11(9), STR_10(15), 
  5841 ;;		 -> STR_9(4), 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  ERRORSTATUS     1    0        unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      unsigned char 
  5846 ;; Registers used:
  5847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5853 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;Total ram usage:        7 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:   14
  5860 ;; This function calls:
  5861 ;;		_lcd_4bit_send_char_data
  5862 ;;		_lcd_4bits_set_courser
  5863 ;; This function is called by:
  5864 ;;		_main
  5865 ;;		_GPS_Service
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text15
  5870  003364                     __ptext15:
  5871                           	callstack 0
  5872  003364                     _lcd_4bit_send_string_data_pos:
  5873                           	callstack 16
  5874  003364                     
  5875                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 166:     if (( ((void*)0)==lcd)||( ((void*)0)==str
      +                          ))
  5876  003364  0100               	movlb	0	; () banked
  5877  003366  51D9               	movf	lcd_4bit_send_string_data_pos@lcd& (0+255),w,b
  5878  003368  11DA               	iorwf	(lcd_4bit_send_string_data_pos@lcd+1)& (0+255),w,b
  5879  00336A  B4D8               	btfsc	status,2,c
  5880  00336C  EFBA  F019         	goto	u10431
  5881  003370  EFBC  F019         	goto	u10430
  5882  003374                     u10431:
  5883  003374  EFC5  F019         	goto	l9392
  5884  003378                     u10430:
  5885  003378                     
  5886                           ; BSR set to: 0
  5887  003378  51DD               	movf	lcd_4bit_send_string_data_pos@str& (0+255),w,b
  5888  00337A  11DE               	iorwf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),w,b
  5889  00337C  A4D8               	btfss	status,2,c
  5890  00337E  EFC3  F019         	goto	u10441
  5891  003382  EFC5  F019         	goto	u10440
  5892  003386                     u10441:
  5893  003386  EFC7  F019         	goto	l9394
  5894  00338A                     u10440:
  5895  00338A                     l9392:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 169:     }
  5899  00338A  EF08  F01A         	goto	l112
  5900  00338E                     l9394:
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 171:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 17
      +                          2:          lcd_4bits_set_courser(lcd,row,colum);
  5904  00338E  C0D9  F0D2         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bits_set_courser@lcd
  5905  003392  C0DA  F0D3         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bits_set_courser@lcd+1
  5906  003396  C0DB  F0D4         	movff	lcd_4bit_send_string_data_pos@row,lcd_4bits_set_courser@row
  5907  00339A  C0DC  F0D5         	movff	lcd_4bit_send_string_data_pos@colum,lcd_4bits_set_courser@colum
  5908  00339E  EC01  F019         	call	_lcd_4bits_set_courser	;wreg free
  5909                           
  5910                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  5911  0033A2  EFEF  F019         	goto	l9400
  5912  0033A6                     l9396:
  5913                           
  5914                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 174:         {;ECU/LCD_for_test_gps/ecu_char_lcd.c
      +                          : 175:            lcd_4bit_send_char_data(lcd,*str++) ;
  5915  0033A6  C0D9  F0CE         	movff	lcd_4bit_send_string_data_pos@lcd,lcd_4bit_send_char_data@lcd
  5916  0033AA  C0DA  F0CF         	movff	lcd_4bit_send_string_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  5917  0033AE  C0DD  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  5918  0033B2  C0DE  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  5919  0033B6  0E00               	movlw	low (__smallconst shr (0+16))
  5920  0033B8  6EF8               	movwf	tblptru,c
  5921  0033BA  0E0F               	movlw	(high __ramtop+-1)
  5922  0033BC  64F7               	cpfsgt	tblptrh,c
  5923  0033BE  D003               	bra	u10457
  5924  0033C0  0008               	tblrd		*
  5925  0033C2  50F5               	movf	tablat,w,c
  5926  0033C4  D005               	bra	u10450
  5927  0033C6                     u10457:
  5928  0033C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5929  0033CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5930  0033CE  50EF               	movf	indf0,w,c
  5931  0033D0                     u10450:
  5932  0033D0  0100               	movlb	0	; () banked
  5933  0033D2  6FD0               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  5934  0033D4  EC0E  F01D         	call	_lcd_4bit_send_char_data	;wreg free
  5935  0033D8  0100               	movlb	0	; () banked
  5936  0033DA  4BDD               	infsnz	lcd_4bit_send_string_data_pos@str& (0+255),f,b
  5937  0033DC  2BDE               	incf	(lcd_4bit_send_string_data_pos@str+1)& (0+255),f,b
  5938  0033DE                     l9400:
  5939                           
  5940                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 173:         while(*str)
  5941  0033DE  C0DD  FFF6         	movff	lcd_4bit_send_string_data_pos@str,tblptrl
  5942  0033E2  C0DE  FFF7         	movff	lcd_4bit_send_string_data_pos@str+1,tblptrh
  5943  0033E6  0E00               	movlw	low (__smallconst shr (0+16))
  5944  0033E8  6EF8               	movwf	tblptru,c
  5945  0033EA  0E0F               	movlw	(high __ramtop+-1)
  5946  0033EC  64F7               	cpfsgt	tblptrh,c
  5947  0033EE  D003               	bra	u10467
  5948  0033F0  0008               	tblrd		*
  5949  0033F2  50F5               	movf	tablat,w,c
  5950  0033F4  D005               	bra	u10460
  5951  0033F6                     u10467:
  5952  0033F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5953  0033FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5954  0033FE  50EF               	movf	indf0,w,c
  5955  003400                     u10460:
  5956  003400  0900               	iorlw	0
  5957  003402  A4D8               	btfss	status,2,c
  5958  003404  EF06  F01A         	goto	u10471
  5959  003408  EF08  F01A         	goto	u10470
  5960  00340C                     u10471:
  5961  00340C  EFD3  F019         	goto	l9396
  5962  003410                     u10470:
  5963  003410                     l112:
  5964  003410  0012               	return		;funcret
  5965  003412                     __end_of_lcd_4bit_send_string_data_pos:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _lcd_4bits_set_courser *****************
  5969 ;; Defined at:
  5970 ;;		line 567 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  lcd             2   14[BANK0 ] PTR const struct .
  5973 ;;		 -> lcd1(6), 
  5974 ;;  row             1   16[BANK0 ] unsigned char 
  5975 ;;  colum           1   17[BANK0 ] unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  ERRORSTATUS     1    0        unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      unsigned char 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5987 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;Total ram usage:        7 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:   13
  5994 ;; This function calls:
  5995 ;;		_lcd_4bit_send_command
  5996 ;; This function is called by:
  5997 ;;		_lcd_4bit_send_string_data_pos
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text16
  6002  003202                     __ptext16:
  6003                           	callstack 0
  6004  003202                     _lcd_4bits_set_courser:
  6005                           	callstack 16
  6006  003202                     
  6007                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 570:         if ( ((void*)0)==lcd)
  6008  003202  0100               	movlb	0	; () banked
  6009  003204  51D2               	movf	lcd_4bits_set_courser@lcd& (0+255),w,b
  6010  003206  11D3               	iorwf	(lcd_4bits_set_courser@lcd+1)& (0+255),w,b
  6011  003208  A4D8               	btfss	status,2,c
  6012  00320A  EF09  F019         	goto	u10231
  6013  00320E  EF0B  F019         	goto	u10230
  6014  003212                     u10231:
  6015  003212  EF0D  F019         	goto	l9194
  6016  003216                     u10230:
  6017  003216                     
  6018                           ; BSR set to: 0
  6019                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 573:     }
  6020  003216  EF59  F019         	goto	l228
  6021  00321A                     l9194:
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 575:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 57
      +                          6:             colum--;
  6025  00321A  07D5               	decf	lcd_4bits_set_courser@colum& (0+255),f,b
  6026                           
  6027                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 577:             switch (row)
  6028  00321C  EF3C  F019         	goto	l9206
  6029  003220                     l9196:
  6030                           
  6031                           ; BSR set to: 0
  6032  003220  C0D2  F0CE         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  6033  003224  C0D3  F0CF         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  6034  003228  51D5               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  6035  00322A  0F80               	addlw	128
  6036  00322C  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  6037  00322E  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  6038  003232  EF59  F019         	goto	l228
  6039  003236                     l9198:
  6040                           
  6041                           ; BSR set to: 0
  6042  003236  C0D2  F0CE         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  6043  00323A  C0D3  F0CF         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  6044  00323E  51D5               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  6045  003240  0FC0               	addlw	192
  6046  003242  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  6047  003244  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  6048  003248  EF59  F019         	goto	l228
  6049  00324C                     l9200:
  6050                           
  6051                           ; BSR set to: 0
  6052  00324C  C0D2  F0CE         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  6053  003250  C0D3  F0CF         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  6054  003254  51D5               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  6055  003256  0F94               	addlw	148
  6056  003258  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  6057  00325A  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  6058  00325E  EF59  F019         	goto	l228
  6059  003262                     l9202:
  6060                           
  6061                           ; BSR set to: 0
  6062  003262  C0D2  F0CE         	movff	lcd_4bits_set_courser@lcd,lcd_4bit_send_command@lcd
  6063  003266  C0D3  F0CF         	movff	lcd_4bits_set_courser@lcd+1,lcd_4bit_send_command@lcd+1
  6064  00326A  51D5               	movf	lcd_4bits_set_courser@colum& (0+255),w,b
  6065  00326C  0FD4               	addlw	212
  6066  00326E  6FD0               	movwf	lcd_4bit_send_command@command& (0+255),b
  6067  003270  EC5A  F01B         	call	_lcd_4bit_send_command	;wreg free
  6068  003274  EF59  F019         	goto	l228
  6069  003278                     l9206:
  6070                           
  6071                           ; BSR set to: 0
  6072  003278  51D4               	movf	lcd_4bits_set_courser@row& (0+255),w,b
  6073  00327A  6FD6               	movwf	??_lcd_4bits_set_courser& (0+255),b
  6074  00327C  6BD7               	clrf	(??_lcd_4bits_set_courser+1)& (0+255),b
  6075                           
  6076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6077                           ; Switch size 1, requested type "simple"
  6078                           ; Number of cases is 1, Range of values is 0 to 0
  6079                           ; switch strategies available:
  6080                           ; Name         Instructions Cycles
  6081                           ; simple_byte            4     3 (average)
  6082                           ;	Chosen strategy is simple_byte
  6083  00327E  51D7               	movf	(??_lcd_4bits_set_courser+1)& (0+255),w,b
  6084  003280  0A00               	xorlw	0	; case 0
  6085  003282  B4D8               	btfsc	status,2,c
  6086  003284  EF46  F019         	goto	l10408
  6087  003288  EF59  F019         	goto	l228
  6088  00328C                     l10408:
  6089                           
  6090                           ; BSR set to: 0
  6091                           ; Switch size 1, requested type "simple"
  6092                           ; Number of cases is 4, Range of values is 1 to 4
  6093                           ; switch strategies available:
  6094                           ; Name         Instructions Cycles
  6095                           ; simple_byte           13     7 (average)
  6096                           ;	Chosen strategy is simple_byte
  6097  00328C  51D6               	movf	??_lcd_4bits_set_courser& (0+255),w,b
  6098  00328E  0A01               	xorlw	1	; case 1
  6099  003290  B4D8               	btfsc	status,2,c
  6100  003292  EF10  F019         	goto	l9196
  6101  003296  0A03               	xorlw	3	; case 2
  6102  003298  B4D8               	btfsc	status,2,c
  6103  00329A  EF1B  F019         	goto	l9198
  6104  00329E  0A01               	xorlw	1	; case 3
  6105  0032A0  B4D8               	btfsc	status,2,c
  6106  0032A2  EF26  F019         	goto	l9200
  6107  0032A6  0A07               	xorlw	7	; case 4
  6108  0032A8  B4D8               	btfsc	status,2,c
  6109  0032AA  EF31  F019         	goto	l9202
  6110  0032AE  EF59  F019         	goto	l228
  6111  0032B2                     l228:
  6112  0032B2  0012               	return		;funcret
  6113  0032B4                     __end_of_lcd_4bits_set_courser:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _lcd_4bit_send_command *****************
  6117 ;; Defined at:
  6118 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  lcd             2   10[BANK0 ] PTR const struct .
  6121 ;;		 -> lcd1(6), 
  6122 ;;  command         1   12[BANK0 ] unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  ERRORSTATUS     1   13[BANK0 ] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      unsigned char 
  6127 ;; Registers used:
  6128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6134 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;Total ram usage:        4 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:   12
  6141 ;; This function calls:
  6142 ;;		_GPIO_Pin_Write_Logic
  6143 ;;		_lcd_4bits_send_enable_signal
  6144 ;;		_lcd_send_4bits
  6145 ;; This function is called by:
  6146 ;;		_lcd_4bit_initialize
  6147 ;;		_lcd_4bits_set_courser
  6148 ;;		_lcd_4bit_send_custom_char
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text17
  6153  0036B4                     __ptext17:
  6154                           	callstack 0
  6155  0036B4                     _lcd_4bit_send_command:
  6156                           	callstack 16
  6157  0036B4                     
  6158                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  6159  0036B4  0100               	movlb	0	; () banked
  6160  0036B6  51CE               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  6161  0036B8  11CF               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  6162  0036BA  A4D8               	btfss	status,2,c
  6163  0036BC  EF62  F01B         	goto	u9091
  6164  0036C0  EF64  F01B         	goto	u9090
  6165  0036C4                     u9091:
  6166  0036C4  EF68  F01B         	goto	l8572
  6167  0036C8                     u9090:
  6168  0036C8                     
  6169                           ; BSR set to: 0
  6170                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 69:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 70:
      +                                   ERRORSTATUS=(Std_ReturnType) 0x00;
  6171  0036C8  0E00               	movlw	0
  6172  0036CA  6FD1               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
  6173                           
  6174                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  6175  0036CC  EF8F  F01B         	goto	l8574
  6176  0036D0                     l8572:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 73:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 74:
      +                                ERRORSTATUS= GPIO_Pin_Write_Logic(&(lcd->lcd_rs_pin),GPIO_LOW);
  6180  0036D0  C0CE  F02A         	movff	lcd_4bit_send_command@lcd,GPIO_Pin_Write_Logic@_pin_config
  6181  0036D4  C0CF  F02B         	movff	lcd_4bit_send_command@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  6182  0036D8  0E00               	movlw	0
  6183  0036DA  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6184  0036DC  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6185  0036E0  0100               	movlb	0	; () banked
  6186  0036E2  6FD1               	movwf	lcd_4bit_send_command@ERRORSTATUS& (0+255),b
  6187                           
  6188                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  6189  0036E4  C0CE  F0CA         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  6190  0036E8  C0CF  F0CB         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  6191  0036EC  39D0               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  6192  0036EE  0B0F               	andlw	15
  6193  0036F0  6FCC               	movwf	lcd_send_4bits@data_command& (0+255),b
  6194  0036F2  ECA2  F01A         	call	_lcd_send_4bits	;wreg free
  6195                           
  6196                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  6197  0036F6  C0CE  F0CA         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  6198  0036FA  C0CF  F0CB         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  6199  0036FE  ECFC  F01D         	call	_lcd_4bits_send_enable_signal	;wreg free
  6200                           
  6201                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  6202  003702  C0CE  F0CA         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  6203  003706  C0CF  F0CB         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  6204  00370A  C0D0  F0CC         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  6205  00370E  ECA2  F01A         	call	_lcd_send_4bits	;wreg free
  6206                           
  6207                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  6208  003712  C0CE  F0CA         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  6209  003716  C0CF  F0CB         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  6210  00371A  ECFC  F01D         	call	_lcd_4bits_send_enable_signal	;wreg free
  6211  00371E                     l8574:
  6212                           
  6213                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 82:     return ERRORSTATUS;
  6214  00371E  0100               	movlb	0	; () banked
  6215  003720  51D1               	movf	lcd_4bit_send_command@ERRORSTATUS& (0+255),w,b
  6216  003722                     
  6217                           ; BSR set to: 0
  6218  003722  0012               	return		;funcret
  6219  003724                     __end_of_lcd_4bit_send_command:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _lcd_4bit_send_char_data *****************
  6223 ;; Defined at:
  6224 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  lcd             2   10[BANK0 ] PTR const struct .
  6227 ;;		 -> lcd1(6), 
  6228 ;;  data            1   12[BANK0 ] unsigned char 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  ERRORSTATUS     1    0        unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      unsigned char 
  6233 ;; Registers used:
  6234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6240 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;Total ram usage:        4 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:   12
  6247 ;; This function calls:
  6248 ;;		_GPIO_Pin_Write_Logic
  6249 ;;		_lcd_4bits_send_enable_signal
  6250 ;;		_lcd_send_4bits
  6251 ;; This function is called by:
  6252 ;;		_lcd_4bit_send_string_data_pos
  6253 ;;		_lcd_4bit_send_string_data
  6254 ;;		_lcd_4bit_send_custom_char
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text18
  6259  003A1C                     __ptext18:
  6260                           	callstack 0
  6261  003A1C                     _lcd_4bit_send_char_data:
  6262                           	callstack 17
  6263  003A1C                     
  6264                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  6265  003A1C  0100               	movlb	0	; () banked
  6266  003A1E  51CE               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  6267  003A20  11CF               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  6268  003A22  A4D8               	btfss	status,2,c
  6269  003A24  EF16  F01D         	goto	u10221
  6270  003A28  EF18  F01D         	goto	u10220
  6271  003A2C                     u10221:
  6272  003A2C  EF1A  F01D         	goto	l9184
  6273  003A30                     u10220:
  6274  003A30                     
  6275                           ; BSR set to: 0
  6276                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  6277  003A30  EF40  F01D         	goto	l87
  6278  003A34                     l9184:
  6279                           
  6280                           ; BSR set to: 0
  6281  003A34  C0CE  F02A         	movff	lcd_4bit_send_char_data@lcd,GPIO_Pin_Write_Logic@_pin_config
  6282  003A38  C0CF  F02B         	movff	lcd_4bit_send_char_data@lcd+1,GPIO_Pin_Write_Logic@_pin_config+1
  6283  003A3C  0E01               	movlw	1
  6284  003A3E  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6285  003A40  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6286                           
  6287                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  6288  003A44  C0CE  F0CA         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  6289  003A48  C0CF  F0CB         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  6290  003A4C  0100               	movlb	0	; () banked
  6291  003A4E  39D0               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  6292  003A50  0B0F               	andlw	15
  6293  003A52  6FCC               	movwf	lcd_send_4bits@data_command& (0+255),b
  6294  003A54  ECA2  F01A         	call	_lcd_send_4bits	;wreg free
  6295                           
  6296                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  6297  003A58  C0CE  F0CA         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  6298  003A5C  C0CF  F0CB         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  6299  003A60  ECFC  F01D         	call	_lcd_4bits_send_enable_signal	;wreg free
  6300                           
  6301                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  6302  003A64  C0CE  F0CA         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  6303  003A68  C0CF  F0CB         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  6304  003A6C  C0D0  F0CC         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  6305  003A70  ECA2  F01A         	call	_lcd_send_4bits	;wreg free
  6306                           
  6307                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  6308  003A74  C0CE  F0CA         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  6309  003A78  C0CF  F0CB         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  6310  003A7C  ECFC  F01D         	call	_lcd_4bits_send_enable_signal	;wreg free
  6311  003A80                     l87:
  6312  003A80  0012               	return		;funcret
  6313  003A82                     __end_of_lcd_4bit_send_char_data:
  6314                           	callstack 0
  6315                           
  6316 ;; *************** function _lcd_send_4bits *****************
  6317 ;; Defined at:
  6318 ;;		line 505 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  lcd             2    6[BANK0 ] PTR const struct .
  6321 ;;		 -> lcd1(6), 
  6322 ;;  data_command    1    8[BANK0 ] unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  ERRORSTATUS     1    0        unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      unsigned char 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6334 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;Total ram usage:        4 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:   11
  6341 ;; This function calls:
  6342 ;;		_GPIO_Pin_Write_Logic
  6343 ;; This function is called by:
  6344 ;;		_lcd_4bit_send_command
  6345 ;;		_lcd_4bit_send_char_data
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text19
  6350  003544                     __ptext19:
  6351                           	callstack 0
  6352  003544                     _lcd_send_4bits:
  6353                           	callstack 16
  6354  003544                     
  6355                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 508:         if ( ((void*)0)==lcd)
  6356  003544  0100               	movlb	0	; () banked
  6357  003546  51CA               	movf	lcd_send_4bits@lcd& (0+255),w,b
  6358  003548  11CB               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  6359  00354A  A4D8               	btfss	status,2,c
  6360  00354C  EFAA  F01A         	goto	u9071
  6361  003550  EFAC  F01A         	goto	u9070
  6362  003554                     u9071:
  6363  003554  EFAE  F01A         	goto	l8548
  6364  003558                     u9070:
  6365  003558                     
  6366                           ; BSR set to: 0
  6367                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 511:     }
  6368  003558  EFE2  F01A         	goto	l199
  6369  00355C                     l8548:
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 513:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 51
      +                          4:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  6373  00355C  0E02               	movlw	2
  6374  00355E  25CA               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  6375  003560  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  6376  003562  0E00               	movlw	0
  6377  003564  21CB               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  6378  003566  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6379  003568  51CC               	movf	lcd_send_4bits@data_command& (0+255),w,b
  6380  00356A  0B01               	andlw	1
  6381  00356C  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6382  00356E  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6383                           
  6384                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  6385  003572  0E03               	movlw	3
  6386  003574  0100               	movlb	0	; () banked
  6387  003576  25CA               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  6388  003578  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  6389  00357A  0E00               	movlw	0
  6390  00357C  21CB               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  6391  00357E  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6392  003580  90D8               	bcf	status,0,c
  6393  003582  31CC               	rrcf	lcd_send_4bits@data_command& (0+255),w,b
  6394  003584  0B01               	andlw	1
  6395  003586  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6396  003588  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6397                           
  6398                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 516:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  6399  00358C  0E04               	movlw	4
  6400  00358E  0100               	movlb	0	; () banked
  6401  003590  25CA               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  6402  003592  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  6403  003594  0E00               	movlw	0
  6404  003596  21CB               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  6405  003598  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6406  00359A  41CC               	rrncf	lcd_send_4bits@data_command& (0+255),w,b
  6407  00359C  42E8               	rrncf	wreg,f,c
  6408  00359E  0B3F               	andlw	63
  6409  0035A0  0B01               	andlw	1
  6410  0035A2  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6411  0035A4  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6412                           
  6413                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 517:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  6414  0035A8  0E05               	movlw	5
  6415  0035AA  0100               	movlb	0	; () banked
  6416  0035AC  25CA               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  6417  0035AE  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  6418  0035B0  0E00               	movlw	0
  6419  0035B2  21CB               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  6420  0035B4  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6421  0035B6  39CC               	swapf	lcd_send_4bits@data_command& (0+255),w,b
  6422  0035B8  46E8               	rlncf	wreg,f,c
  6423  0035BA  0B1F               	andlw	31
  6424  0035BC  0B01               	andlw	1
  6425  0035BE  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6426  0035C0  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6427  0035C4                     l199:
  6428  0035C4  0012               	return		;funcret
  6429  0035C6                     __end_of_lcd_send_4bits:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function _lcd_4bits_send_enable_signal *****************
  6433 ;; Defined at:
  6434 ;;		line 488 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  lcd             2    6[BANK0 ] PTR const struct .
  6437 ;;		 -> lcd1(6), 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  ERRORSTATUS     1    0        unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        3 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:   11
  6456 ;; This function calls:
  6457 ;;		_GPIO_Pin_Write_Logic
  6458 ;; This function is called by:
  6459 ;;		_lcd_4bit_send_command
  6460 ;;		_lcd_4bit_send_char_data
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text20
  6465  003BF8                     __ptext20:
  6466                           	callstack 0
  6467  003BF8                     _lcd_4bits_send_enable_signal:
  6468                           	callstack 16
  6469  003BF8                     
  6470                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 491:         if ( ((void*)0)==lcd)
  6471  003BF8  0100               	movlb	0	; () banked
  6472  003BFA  51CA               	movf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
  6473  003BFC  11CB               	iorwf	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
  6474  003BFE  A4D8               	btfss	status,2,c
  6475  003C00  EF04  F01E         	goto	u9081
  6476  003C04  EF06  F01E         	goto	u9080
  6477  003C08                     u9081:
  6478  003C08  EF08  F01E         	goto	l8558
  6479  003C0C                     u9080:
  6480  003C0C                     
  6481                           ; BSR set to: 0
  6482                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 494:     }
  6483  003C0C  EF21  F01E         	goto	l194
  6484  003C10                     l8558:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 496:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 49
      +                          7:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  6488  003C10  0E01               	movlw	1
  6489  003C12  25CA               	addwf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
  6490  003C14  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  6491  003C16  0E00               	movlw	0
  6492  003C18  21CB               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
  6493  003C1A  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6494  003C1C  0E01               	movlw	1
  6495  003C1E  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6496  003C20  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6497  003C24                     
  6498                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 498:             _delay((unsigned long)((5)*(80000
      +                          00/4000000.0)));
  6499  003C24  0E03               	movlw	3
  6500  003C26                     u11417:
  6501  003C26  2EE8               	decfsz	wreg,f,c
  6502  003C28  D7FE               	bra	u11417
  6503  003C2A  F000               	nop	
  6504  003C2C                     
  6505                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 499:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  6506  003C2C  0E01               	movlw	1
  6507  003C2E  0100               	movlb	0	; () banked
  6508  003C30  25CA               	addwf	lcd_4bits_send_enable_signal@lcd& (0+255),w,b
  6509  003C32  6E2A               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  6510  003C34  0E00               	movlw	0
  6511  003C36  21CB               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)& (0+255),w,b
  6512  003C38  6E2B               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  6513  003C3A  0E00               	movlw	0
  6514  003C3C  6E2C               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6515  003C3E  EC14  F016         	call	_GPIO_Pin_Write_Logic	;wreg free
  6516  003C42                     l194:
  6517  003C42  0012               	return		;funcret
  6518  003C44                     __end_of_lcd_4bits_send_enable_signal:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _GPIO_Pin_Write_Logic *****************
  6522 ;; Defined at:
  6523 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  _pin_config     2   41[COMRAM] PTR const struct .
  6526 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  6527 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  6528 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  6529 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  6530 ;;  logic           1   43[COMRAM] enum E2958
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  ERRORSTATUS     1   44[COMRAM] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      unsigned char 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6542 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;Total ram usage:       10 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:   10
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_lcd_4bit_send_command
  6553 ;;		_lcd_4bit_send_char_data
  6554 ;;		_lcd_4bits_send_enable_signal
  6555 ;;		_lcd_send_4bits
  6556 ;;		_GPIO_Pin_Initialize
  6557 ;;		_GPS_Service
  6558 ;;		_lcd_8bit_send_command
  6559 ;;		_lcd_8bit_send_char_data
  6560 ;;		_lcd_8bits_send_enable_signal
  6561 ;;		_ECU_DC_Motor_Run_Left
  6562 ;;		_ECU_DC_Motor_Run_Right
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text21
  6567  002C28                     __ptext21:
  6568                           	callstack 0
  6569  002C28                     _GPIO_Pin_Write_Logic:
  6570                           	callstack 16
  6571  002C28                     
  6572                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  6573  002C28  0E01               	movlw	1
  6574  002C2A  6E2D               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  6575  002C2C                     
  6576                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  6577  002C2C  502A               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
  6578  002C2E  102B               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  6579  002C30  B4D8               	btfsc	status,2,c
  6580  002C32  EF1D  F016         	goto	u9031
  6581  002C36  EF1F  F016         	goto	u9030
  6582  002C3A                     u9031:
  6583  002C3A  EF2F  F016         	goto	l8524
  6584  002C3E                     u9030:
  6585  002C3E  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  6586  002C42  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  6587  002C46  50DF               	movf	indf2,w,c
  6588  002C48  0B07               	andlw	7
  6589  002C4A  0100               	movlb	0	; () banked
  6590  002C4C  6FC4               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  6591  002C4E  0E07               	movlw	7
  6592  002C50  65C4               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
  6593  002C52  EF2D  F016         	goto	u9041
  6594  002C56  EF2F  F016         	goto	u9040
  6595  002C5A                     u9041:
  6596  002C5A  EF94  F016         	goto	l8532
  6597  002C5E                     u9040:
  6598  002C5E                     l8524:
  6599                           
  6600                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  6601  002C5E  0E00               	movlw	0
  6602  002C60  6E2D               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  6603                           
  6604                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  6605  002C62  EFA9  F016         	goto	l8534
  6606  002C66                     l8526:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  6610  002C66  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  6611  002C6A  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  6612  002C6E  50DF               	movf	indf2,w,c
  6613  002C70  0B07               	andlw	7
  6614  002C72  6FC4               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  6615  002C74  0E01               	movlw	1
  6616  002C76  6FC5               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  6617  002C78  2BC4               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
  6618  002C7A  EF41  F016         	goto	u9054
  6619  002C7E                     u9055:
  6620  002C7E  90D8               	bcf	status,0,c
  6621  002C80  37C5               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
  6622  002C82                     u9054:
  6623  002C82  2FC4               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
  6624  002C84  EF3F  F016         	goto	u9055
  6625  002C88  0100               	movlb	0	; () banked
  6626  002C8A  51C5               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  6627  002C8C  0AFF               	xorlw	255
  6628  002C8E  6FC6               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
  6629  002C90  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  6630  002C94  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  6631  002C98  30DF               	rrcf	indf2,w,c
  6632  002C9A  32E8               	rrcf	wreg,f,c
  6633  002C9C  32E8               	rrcf	wreg,f,c
  6634  002C9E  0B07               	andlw	7
  6635  002CA0  6FC7               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
  6636  002CA2  51C7               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
  6637  002CA4  0D02               	mullw	2
  6638  002CA6  0E8A               	movlw	low _lat_registers
  6639  002CA8  24F3               	addwf	243,w,c
  6640  002CAA  6ED9               	movwf	fsr2l,c
  6641  002CAC  0E00               	movlw	high _lat_registers
  6642  002CAE  20F4               	addwfc	prodh,w,c
  6643  002CB0  6EDA               	movwf	fsr2h,c
  6644  002CB2  CFDE F0C8          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
  6645  002CB6  CFDD F0C9          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
  6646  002CBA  C0C8  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
  6647  002CBE  C0C9  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
  6648  002CC2  51C6               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
  6649  002CC4  16DF               	andwf	indf2,f,c
  6650                           
  6651                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  6652  002CC6  EFA9  F016         	goto	l8534
  6653  002CCA                     l8528:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  6657  002CCA  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  6658  002CCE  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  6659  002CD2  50DF               	movf	indf2,w,c
  6660  002CD4  0B07               	andlw	7
  6661  002CD6  6FC4               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  6662  002CD8  0E01               	movlw	1
  6663  002CDA  6FC5               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  6664  002CDC  2BC4               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
  6665  002CDE  EF73  F016         	goto	u9064
  6666  002CE2                     u9065:
  6667  002CE2  90D8               	bcf	status,0,c
  6668  002CE4  37C5               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
  6669  002CE6                     u9064:
  6670  002CE6  2FC4               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
  6671  002CE8  EF71  F016         	goto	u9065
  6672  002CEC  C02A  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
  6673  002CF0  C02B  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  6674  002CF4  30DF               	rrcf	indf2,w,c
  6675  002CF6  32E8               	rrcf	wreg,f,c
  6676  002CF8  32E8               	rrcf	wreg,f,c
  6677  002CFA  0B07               	andlw	7
  6678  002CFC  0100               	movlb	0	; () banked
  6679  002CFE  6FC6               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
  6680  002D00  51C6               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
  6681  002D02  0D02               	mullw	2
  6682  002D04  0E8A               	movlw	low _lat_registers
  6683  002D06  24F3               	addwf	243,w,c
  6684  002D08  6ED9               	movwf	fsr2l,c
  6685  002D0A  0E00               	movlw	high _lat_registers
  6686  002D0C  20F4               	addwfc	prodh,w,c
  6687  002D0E  6EDA               	movwf	fsr2h,c
  6688  002D10  CFDE F0C7          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
  6689  002D14  CFDD F0C8          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
  6690  002D18  C0C7  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
  6691  002D1C  C0C8  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
  6692  002D20  51C5               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  6693  002D22  12DF               	iorwf	indf2,f,c
  6694                           
  6695                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  6696  002D24  EFA9  F016         	goto	l8534
  6697  002D28                     l8532:
  6698                           
  6699                           ; BSR set to: 0
  6700  002D28  502C               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
  6701  002D2A  6FC4               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
  6702  002D2C  6BC5               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
  6703                           
  6704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6705                           ; Switch size 1, requested type "simple"
  6706                           ; Number of cases is 1, Range of values is 0 to 0
  6707                           ; switch strategies available:
  6708                           ; Name         Instructions Cycles
  6709                           ; simple_byte            4     3 (average)
  6710                           ;	Chosen strategy is simple_byte
  6711  002D2E  51C5               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
  6712  002D30  0A00               	xorlw	0	; case 0
  6713  002D32  B4D8               	btfsc	status,2,c
  6714  002D34  EF9E  F016         	goto	l10410
  6715  002D38  EF2F  F016         	goto	l8524
  6716  002D3C                     l10410:
  6717                           
  6718                           ; BSR set to: 0
  6719                           ; Switch size 1, requested type "simple"
  6720                           ; Number of cases is 2, Range of values is 0 to 1
  6721                           ; switch strategies available:
  6722                           ; Name         Instructions Cycles
  6723                           ; simple_byte            7     4 (average)
  6724                           ;	Chosen strategy is simple_byte
  6725  002D3C  51C4               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
  6726  002D3E  0A00               	xorlw	0	; case 0
  6727  002D40  B4D8               	btfsc	status,2,c
  6728  002D42  EF33  F016         	goto	l8526
  6729  002D46  0A01               	xorlw	1	; case 1
  6730  002D48  B4D8               	btfsc	status,2,c
  6731  002D4A  EF65  F016         	goto	l8528
  6732  002D4E  EF2F  F016         	goto	l8524
  6733  002D52                     l8534:
  6734                           
  6735                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  6736  002D52  502D               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  6737  002D54  0012               	return		;funcret
  6738  002D56                     __end_of_GPIO_Pin_Write_Logic:
  6739                           	callstack 0
  6740                           
  6741 ;; *************** function _EUSART_Async_Read_Data_Blocking *****************
  6742 ;; Defined at:
  6743 ;;		line 337 in file "MCAL/EUSART/mcal_EUSART.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  _eusart_obj     2   16[BANK0 ] PTR const struct .
  6746 ;;		 -> _uart_obj(12), 
  6747 ;;  data            2   18[BANK0 ] PTR unsigned short 
  6748 ;;		 -> longtude(13), latitude(13), gpstemp(1), 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  ret_val         1    0        unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;Total ram usage:        5 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:   12
  6767 ;; This function calls:
  6768 ;;		_EUSART_Async_Read_Data
  6769 ;; This function is called by:
  6770 ;;		_GPS_Service
  6771 ;;		_Bluetooth_Recieve_Data_Blocking
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text22
  6776  003802                     __ptext22:
  6777                           	callstack 0
  6778  003802                     _EUSART_Async_Read_Data_Blocking:
  6779                           	callstack 17
  6780  003802                     
  6781                           ;MCAL/EUSART/mcal_EUSART.c: 341:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
  6782  003802  0100               	movlb	0	; () banked
  6783  003804  51D4               	movf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),w,b
  6784  003806  11D5               	iorwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),w,b
  6785  003808  B4D8               	btfsc	status,2,c
  6786  00380A  EF09  F01C         	goto	u10361
  6787  00380E  EF0B  F01C         	goto	u10360
  6788  003812                     u10361:
  6789  003812  EF14  F01C         	goto	l9332
  6790  003816                     u10360:
  6791  003816                     
  6792                           ; BSR set to: 0
  6793  003816  51D6               	movf	EUSART_Async_Read_Data_Blocking@data& (0+255),w,b
  6794  003818  11D7               	iorwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),w,b
  6795  00381A  A4D8               	btfss	status,2,c
  6796  00381C  EF12  F01C         	goto	u10371
  6797  003820  EF14  F01C         	goto	u10370
  6798  003824                     u10371:
  6799  003824  EF16  F01C         	goto	l534
  6800  003828                     u10370:
  6801  003828                     l9332:
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;MCAL/EUSART/mcal_EUSART.c: 344:     }
  6805  003828  EF27  F01C         	goto	l9336
  6806  00382C                     l534:
  6807  00382C  AA9E               	btfss	158,5,c	;volatile
  6808  00382E  EF1B  F01C         	goto	u10381
  6809  003832  EF1D  F01C         	goto	u10380
  6810  003836                     u10381:
  6811  003836  EF16  F01C         	goto	l534
  6812  00383A                     u10380:
  6813  00383A                     
  6814                           ;MCAL/EUSART/mcal_EUSART.c: 348:         EUSART_Async_Read_Data(_eusart_obj , data);
  6815  00383A  C0D4  F0C7         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj,EUSART_Async_Read_Data@_eusart_obj
  6816  00383E  C0D5  F0C8         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj+1,EUSART_Async_Read_Data@_eusart_obj+
      +                          1
  6817  003842  C0D6  F0C9         	movff	EUSART_Async_Read_Data_Blocking@data,EUSART_Async_Read_Data@data
  6818  003846  C0D7  F0CA         	movff	EUSART_Async_Read_Data_Blocking@data+1,EUSART_Async_Read_Data@data+1
  6819  00384A  ECFA  F010         	call	_EUSART_Async_Read_Data	;wreg free
  6820  00384E                     l9336:
  6821                           
  6822                           ;MCAL/EUSART/mcal_EUSART.c: 351:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
  6823  00384E  B2AB               	btfsc	171,1,c	;volatile
  6824  003850  EF2C  F01C         	goto	u10391
  6825  003854  EF2E  F01C         	goto	u10390
  6826  003858                     u10391:
  6827  003858  EF35  F01C         	goto	l539
  6828  00385C                     u10390:
  6829  00385C  A4AB               	btfss	171,2,c	;volatile
  6830  00385E  EF33  F01C         	goto	u10401
  6831  003862  EF35  F01C         	goto	u10400
  6832  003866                     u10401:
  6833  003866  EF37  F01C         	goto	l540
  6834  00386A                     u10400:
  6835  00386A                     l539:
  6836                           
  6837                           ;MCAL/EUSART/mcal_EUSART.c: 352:     {;MCAL/EUSART/mcal_EUSART.c: 354:         RCSTA1bit
      +                          s.CREN=0;
  6838  00386A  98AB               	bcf	171,4,c	;volatile
  6839                           
  6840                           ;MCAL/EUSART/mcal_EUSART.c: 355:         RCSTA1bits.CREN=1;
  6841  00386C  88AB               	bsf	171,4,c	;volatile
  6842  00386E                     l540:
  6843  00386E  0012               	return		;funcret
  6844  003870                     __end_of_EUSART_Async_Read_Data_Blocking:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _EUSART_Async_Read_Data *****************
  6848 ;; Defined at:
  6849 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  _eusart_obj     2    3[BANK0 ] PTR const struct .
  6852 ;;		 -> _uart_obj(12), 
  6853 ;;  data            2    5[BANK0 ] PTR unsigned short 
  6854 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  l_temp_data     2   14[BANK0 ] unsigned short 
  6857 ;;  ret_val         1    0        unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;Total ram usage:       15 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:   11
  6874 ;; This function calls:
  6875 ;;		_calc_parity_even
  6876 ;;		_calc_parity_odd
  6877 ;; This function is called by:
  6878 ;;		_EUSART_Async_Read_Data_Blocking
  6879 ;;		_Bluetooth_Recieve_Data_Non_Blocking
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text23
  6884  0021F4                     __ptext23:
  6885                           	callstack 0
  6886  0021F4                     _EUSART_Async_Read_Data:
  6887                           	callstack 17
  6888  0021F4                     
  6889                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
  6890  0021F4  0E00               	movlw	0
  6891  0021F6  0100               	movlb	0	; () banked
  6892  0021F8  6FD3               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
  6893  0021FA  0E00               	movlw	0
  6894  0021FC  6FD2               	movwf	EUSART_Async_Read_Data@l_temp_data& (0+255),b
  6895  0021FE                     
  6896                           ; BSR set to: 0
  6897                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
  6898  0021FE  51C7               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
  6899  002200  11C8               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
  6900  002202  B4D8               	btfsc	status,2,c
  6901  002204  EF06  F011         	goto	u10061
  6902  002208  EF08  F011         	goto	u10060
  6903  00220C                     u10061:
  6904  00220C  EF11  F011         	goto	l9112
  6905  002210                     u10060:
  6906  002210                     
  6907                           ; BSR set to: 0
  6908  002210  51C9               	movf	EUSART_Async_Read_Data@data& (0+255),w,b
  6909  002212  11CA               	iorwf	(EUSART_Async_Read_Data@data+1)& (0+255),w,b
  6910  002214  A4D8               	btfss	status,2,c
  6911  002216  EF0F  F011         	goto	u10071
  6912  00221A  EF11  F011         	goto	u10070
  6913  00221E                     u10071:
  6914  00221E  EF13  F011         	goto	l474
  6915  002222                     u10070:
  6916  002222                     l9112:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
  6920  002222  EFF1  F011         	goto	l9162
  6921  002226                     l474:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
  6925  002226  AA9E               	btfss	158,5,c	;volatile
  6926  002228  EF18  F011         	goto	u10081
  6927  00222C  EF1A  F011         	goto	u10080
  6928  002230                     u10081:
  6929  002230  EF11  F011         	goto	l9112
  6930  002234                     u10080:
  6931  002234                     
  6932                           ; BSR set to: 0
  6933                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
  6934  002234  EE20 F009          	lfsr	2,9
  6935  002238  51C7               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
  6936  00223A  26D9               	addwf	fsr2l,f,c
  6937  00223C  51C8               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
  6938  00223E  22DA               	addwfc	fsr2h,f,c
  6939  002240  B8DF               	btfsc	indf2,4,c
  6940  002242  EF25  F011         	goto	u10091
  6941  002246  EF27  F011         	goto	u10090
  6942  00224A                     u10091:
  6943  00224A  EF34  F011         	goto	l9118
  6944  00224E                     u10090:
  6945  00224E                     
  6946                           ; BSR set to: 0
  6947                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
  6948  00224E  50AE               	movf	174,w,c	;volatile
  6949  002250  6E2C               	movwf	??_EUSART_Async_Read_Data^0,c
  6950  002252  6A2D               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
  6951  002254  C0C9  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
  6952  002258  C0CA  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
  6953  00225C  C02C  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
  6954  002260  C02D  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
  6955                           
  6956                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
  6957  002264  EFF1  F011         	goto	l9162
  6958  002268                     l9118:
  6959                           
  6960                           ; BSR set to: 0
  6961  002268  EE20 F009          	lfsr	2,9
  6962  00226C  51C7               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
  6963  00226E  26D9               	addwf	fsr2l,f,c
  6964  002270  51C8               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
  6965  002272  22DA               	addwfc	fsr2h,f,c
  6966  002274  A8DF               	btfss	indf2,4,c
  6967  002276  EF3F  F011         	goto	u10101
  6968  00227A  EF41  F011         	goto	u10100
  6969  00227E                     u10101:
  6970  00227E  EFF1  F011         	goto	l487
  6971  002282                     u10100:
  6972  002282                     
  6973                           ; BSR set to: 0
  6974                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
  6975  002282  EE20 F009          	lfsr	2,9
  6976  002286  51C7               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
  6977  002288  26D9               	addwf	fsr2l,f,c
  6978  00228A  51C8               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
  6979  00228C  22DA               	addwfc	fsr2h,f,c
  6980  00228E  30DF               	rrcf	223,w,c
  6981  002290  0B03               	andlw	3
  6982  002292  0900               	iorlw	0
  6983  002294  A4D8               	btfss	status,2,c
  6984  002296  EF4F  F011         	goto	u10111
  6985  00229A  EF51  F011         	goto	u10110
  6986  00229E                     u10111:
  6987  00229E  EF73  F011         	goto	l9132
  6988  0022A2                     u10110:
  6989  0022A2                     
  6990                           ; BSR set to: 0
  6991                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
  6992  0022A2  CFAE F0D2          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
  6993  0022A6  6BD3               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
  6994                           
  6995                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
  6996  0022A8  B0AB               	btfsc	4011,0,c	;volatile
  6997  0022AA  EF59  F011         	goto	u10121
  6998  0022AE  EF5B  F011         	goto	u10120
  6999  0022B2                     u10121:
  7000  0022B2  EF61  F011         	goto	l9126
  7001  0022B6                     u10120:
  7002  0022B6                     
  7003                           ; BSR set to: 0
  7004  0022B6  0E00               	movlw	0
  7005  0022B8  6FCD               	movwf	(_EUSART_Async_Read_Data$1571+1)& (0+255),b
  7006  0022BA  0E00               	movlw	0
  7007  0022BC  6FCC               	movwf	_EUSART_Async_Read_Data$1571& (0+255),b
  7008  0022BE  EF65  F011         	goto	l9128
  7009  0022C2                     l9126:
  7010                           
  7011                           ; BSR set to: 0
  7012  0022C2  0E01               	movlw	1
  7013  0022C4  6FCD               	movwf	(_EUSART_Async_Read_Data$1571+1)& (0+255),b
  7014  0022C6  0E00               	movlw	0
  7015  0022C8  6FCC               	movwf	_EUSART_Async_Read_Data$1571& (0+255),b
  7016  0022CA                     l9128:
  7017                           
  7018                           ; BSR set to: 0
  7019  0022CA  51CC               	movf	_EUSART_Async_Read_Data$1571& (0+255),w,b
  7020  0022CC  27D2               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
  7021  0022CE  51CD               	movf	(_EUSART_Async_Read_Data$1571+1)& (0+255),w,b
  7022  0022D0  23D3               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
  7023  0022D2                     
  7024                           ; BSR set to: 0
  7025                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
  7026  0022D2  C0C9  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
  7027  0022D6  C0CA  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
  7028  0022DA  C0D2  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
  7029  0022DE  C0D3  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
  7030                           
  7031                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
  7032  0022E2  EFF1  F011         	goto	l9162
  7033  0022E6                     l9132:
  7034                           
  7035                           ; BSR set to: 0
  7036  0022E6  EE20 F009          	lfsr	2,9
  7037  0022EA  51C7               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
  7038  0022EC  26D9               	addwf	fsr2l,f,c
  7039  0022EE  51C8               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
  7040  0022F0  22DA               	addwfc	fsr2h,f,c
  7041  0022F2  30DF               	rrcf	223,w,c
  7042  0022F4  0B03               	andlw	3
  7043  0022F6  06E8               	decf	wreg,f,c
  7044  0022F8  A4D8               	btfss	status,2,c
  7045  0022FA  EF81  F011         	goto	u10131
  7046  0022FE  EF83  F011         	goto	u10130
  7047  002302                     u10131:
  7048  002302  EFB9  F011         	goto	l9146
  7049  002306                     u10130:
  7050  002306                     
  7051                           ; BSR set to: 0
  7052                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
  7053  002306  CFAE F0D2          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
  7054  00230A  6BD3               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
  7055                           
  7056                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
  7057  00230C  B0AB               	btfsc	171,0,c	;volatile
  7058  00230E  EF8B  F011         	goto	u10141
  7059  002312  EF8D  F011         	goto	u10140
  7060  002316                     u10141:
  7061  002316  EF93  F011         	goto	l9138
  7062  00231A                     u10140:
  7063  00231A                     
  7064                           ; BSR set to: 0
  7065  00231A  0E00               	movlw	0
  7066  00231C  6FCF               	movwf	(_EUSART_Async_Read_Data$1572+1)& (0+255),b
  7067  00231E  0E00               	movlw	0
  7068  002320  6FCE               	movwf	_EUSART_Async_Read_Data$1572& (0+255),b
  7069  002322  EF97  F011         	goto	l9140
  7070  002326                     l9138:
  7071                           
  7072                           ; BSR set to: 0
  7073  002326  0E01               	movlw	1
  7074  002328  6FCF               	movwf	(_EUSART_Async_Read_Data$1572+1)& (0+255),b
  7075  00232A  0E00               	movlw	0
  7076  00232C  6FCE               	movwf	_EUSART_Async_Read_Data$1572& (0+255),b
  7077  00232E                     l9140:
  7078                           
  7079                           ; BSR set to: 0
  7080  00232E  51CE               	movf	_EUSART_Async_Read_Data$1572& (0+255),w,b
  7081  002330  27D2               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
  7082  002332  51CF               	movf	(_EUSART_Async_Read_Data$1572+1)& (0+255),w,b
  7083  002334  23D3               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
  7084  002336                     
  7085                           ; BSR set to: 0
  7086                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
  7087  002336  51D2               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
  7088  002338  EC6F  F01C         	call	_calc_parity_even
  7089  00233C  6E2C               	movwf	??_EUSART_Async_Read_Data^0,c
  7090  00233E  0100               	movlb	0	; () banked
  7091  002340  51D3               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
  7092  002342  182C               	xorwf	??_EUSART_Async_Read_Data^0,w,c
  7093  002344  A4D8               	btfss	status,2,c
  7094  002346  EFA7  F011         	goto	u10151
  7095  00234A  EFA9  F011         	goto	u10150
  7096  00234E                     u10151:
  7097  00234E  EFF1  F011         	goto	l487
  7098  002352                     u10150:
  7099  002352                     l9144:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
  7103  002352  0EFF               	movlw	255
  7104  002354  15D2               	andwf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
  7105  002356  6E2C               	movwf	??_EUSART_Async_Read_Data^0,c
  7106  002358  0E00               	movlw	0
  7107  00235A  15D3               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
  7108  00235C  6E2D               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
  7109  00235E  C0C9  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
  7110  002362  C0CA  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
  7111  002366  C02C  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
  7112  00236A  C02D  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
  7113                           
  7114                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
  7115  00236E  EFF1  F011         	goto	l9162
  7116  002372                     l9146:
  7117                           
  7118                           ; BSR set to: 0
  7119  002372  EE20 F009          	lfsr	2,9
  7120  002376  51C7               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
  7121  002378  26D9               	addwf	fsr2l,f,c
  7122  00237A  51C8               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
  7123  00237C  22DA               	addwfc	fsr2h,f,c
  7124  00237E  30DF               	rrcf	223,w,c
  7125  002380  0B03               	andlw	3
  7126  002382  0A02               	xorlw	2
  7127  002384  A4D8               	btfss	status,2,c
  7128  002386  EFC7  F011         	goto	u10161
  7129  00238A  EFC9  F011         	goto	u10160
  7130  00238E                     u10161:
  7131  00238E  EFF1  F011         	goto	l487
  7132  002392                     u10160:
  7133  002392                     
  7134                           ; BSR set to: 0
  7135                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
  7136  002392  CFAE F0D2          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
  7137  002396  6BD3               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
  7138                           
  7139                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
  7140  002398  B0AB               	btfsc	171,0,c	;volatile
  7141  00239A  EFD1  F011         	goto	u10171
  7142  00239E  EFD3  F011         	goto	u10170
  7143  0023A2                     u10171:
  7144  0023A2  EFD9  F011         	goto	l9152
  7145  0023A6                     u10170:
  7146  0023A6                     
  7147                           ; BSR set to: 0
  7148  0023A6  0E00               	movlw	0
  7149  0023A8  6FD1               	movwf	(_EUSART_Async_Read_Data$1573+1)& (0+255),b
  7150  0023AA  0E00               	movlw	0
  7151  0023AC  6FD0               	movwf	_EUSART_Async_Read_Data$1573& (0+255),b
  7152  0023AE  EFDD  F011         	goto	l9154
  7153  0023B2                     l9152:
  7154                           
  7155                           ; BSR set to: 0
  7156  0023B2  0E01               	movlw	1
  7157  0023B4  6FD1               	movwf	(_EUSART_Async_Read_Data$1573+1)& (0+255),b
  7158  0023B6  0E00               	movlw	0
  7159  0023B8  6FD0               	movwf	_EUSART_Async_Read_Data$1573& (0+255),b
  7160  0023BA                     l9154:
  7161                           
  7162                           ; BSR set to: 0
  7163  0023BA  51D0               	movf	_EUSART_Async_Read_Data$1573& (0+255),w,b
  7164  0023BC  27D2               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
  7165  0023BE  51D1               	movf	(_EUSART_Async_Read_Data$1573+1)& (0+255),w,b
  7166  0023C0  23D3               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
  7167  0023C2                     
  7168                           ; BSR set to: 0
  7169                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
  7170  0023C2  51D2               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
  7171  0023C4  EC38  F01C         	call	_calc_parity_odd
  7172  0023C8  6E2C               	movwf	??_EUSART_Async_Read_Data^0,c
  7173  0023CA  0100               	movlb	0	; () banked
  7174  0023CC  51D3               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
  7175  0023CE  182C               	xorwf	??_EUSART_Async_Read_Data^0,w,c
  7176  0023D0  A4D8               	btfss	status,2,c
  7177  0023D2  EFED  F011         	goto	u10181
  7178  0023D6  EFEF  F011         	goto	u10180
  7179  0023DA                     u10181:
  7180  0023DA  EFF1  F011         	goto	l487
  7181  0023DE                     u10180:
  7182  0023DE  EFA9  F011         	goto	l9144
  7183  0023E2                     l487:
  7184  0023E2                     l9162:
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
  7188  0023E2  B2AB               	btfsc	171,1,c	;volatile
  7189  0023E4  EFF6  F011         	goto	u10191
  7190  0023E8  EFF8  F011         	goto	u10190
  7191  0023EC                     u10191:
  7192  0023EC  EFFF  F011         	goto	l508
  7193  0023F0                     u10190:
  7194  0023F0                     
  7195                           ; BSR set to: 0
  7196  0023F0  A4AB               	btfss	171,2,c	;volatile
  7197  0023F2  EFFD  F011         	goto	u10201
  7198  0023F6  EFFF  F011         	goto	u10200
  7199  0023FA                     u10201:
  7200  0023FA  EF01  F012         	goto	l509
  7201  0023FE                     u10200:
  7202  0023FE                     l508:
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
  7206  0023FE  98AB               	bcf	171,4,c	;volatile
  7207                           
  7208                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
  7209  002400  88AB               	bsf	171,4,c	;volatile
  7210  002402                     l509:
  7211                           
  7212                           ; BSR set to: 0
  7213  002402  0012               	return		;funcret
  7214  002404                     __end_of_EUSART_Async_Read_Data:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _calc_parity_odd *****************
  7218 ;; Defined at:
  7219 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  data            1    wreg     unsigned char 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  data            1    0[BANK0 ] unsigned char 
  7224 ;;  l_counter       1    2[BANK0 ] unsigned char 
  7225 ;;  number_of_on    1    1[BANK0 ] unsigned char 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      unsigned char 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;Total ram usage:        5 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:   10
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_EUSART_Async_Read_Data
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text24
  7250  003870                     __ptext24:
  7251                           	callstack 0
  7252  003870                     _calc_parity_odd:
  7253                           	callstack 17
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;incstack = 0
  7257                           ;calc_parity_odd@data stored from wreg
  7258  003870  0100               	movlb	0	; () banked
  7259  003872  6FC4               	movwf	calc_parity_odd@data& (0+255),b
  7260  003874                     
  7261                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
  7262  003874  0E00               	movlw	0
  7263  003876  0100               	movlb	0	; () banked
  7264  003878  6FC5               	movwf	calc_parity_odd@number_of_ones& (0+255),b
  7265                           
  7266                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
  7267  00387A  0E00               	movlw	0
  7268  00387C  6FC6               	movwf	calc_parity_odd@l_counter& (0+255),b
  7269                           
  7270                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
  7271  00387E  0E00               	movlw	0
  7272  003880  6FC6               	movwf	calc_parity_odd@l_counter& (0+255),b
  7273  003882                     l8608:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
  7277  003882  C0C6  F02A         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
  7278  003886  0E01               	movlw	1
  7279  003888  6E2B               	movwf	(??_calc_parity_odd+1)^0,c
  7280  00388A  2A2A               	incf	??_calc_parity_odd^0,f,c
  7281  00388C  EF4A  F01C         	goto	u9144
  7282  003890                     u9145:
  7283  003890  90D8               	bcf	status,0,c
  7284  003892  362B               	rlcf	(??_calc_parity_odd+1)^0,f,c
  7285  003894                     u9144:
  7286  003894  2E2A               	decfsz	??_calc_parity_odd^0,f,c
  7287  003896  EF48  F01C         	goto	u9145
  7288  00389A  502B               	movf	(??_calc_parity_odd+1)^0,w,c
  7289  00389C  0100               	movlb	0	; () banked
  7290  00389E  15C4               	andwf	calc_parity_odd@data& (0+255),w,b
  7291  0038A0  0900               	iorlw	0
  7292  0038A2  B4D8               	btfsc	status,2,c
  7293  0038A4  EF56  F01C         	goto	u9151
  7294  0038A8  EF58  F01C         	goto	u9150
  7295  0038AC                     u9151:
  7296  0038AC  EF59  F01C         	goto	l607
  7297  0038B0                     u9150:
  7298  0038B0                     
  7299                           ; BSR set to: 0
  7300                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
  7301  0038B0  2BC5               	incf	calc_parity_odd@number_of_ones& (0+255),f,b
  7302  0038B2                     l607:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
  7306  0038B2  2BC6               	incf	calc_parity_odd@l_counter& (0+255),f,b
  7307  0038B4                     
  7308                           ; BSR set to: 0
  7309  0038B4  0E07               	movlw	7
  7310  0038B6  65C6               	cpfsgt	calc_parity_odd@l_counter& (0+255),b
  7311  0038B8  EF60  F01C         	goto	u9161
  7312  0038BC  EF62  F01C         	goto	u9160
  7313  0038C0                     u9161:
  7314  0038C0  EF41  F01C         	goto	l8608
  7315  0038C4                     u9160:
  7316  0038C4                     
  7317                           ; BSR set to: 0
  7318                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
  7319  0038C4  2BC5               	incf	calc_parity_odd@number_of_ones& (0+255),f,b
  7320  0038C6                     
  7321                           ; BSR set to: 0
  7322                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
  7323  0038C6  B1C5               	btfsc	calc_parity_odd@number_of_ones& (0+255),0,b
  7324  0038C8  EF68  F01C         	goto	u9171
  7325  0038CC  EF6A  F01C         	goto	u9170
  7326  0038D0                     u9171:
  7327  0038D0  EF6D  F01C         	goto	l8622
  7328  0038D4                     u9170:
  7329  0038D4                     
  7330                           ; BSR set to: 0
  7331                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
  7332  0038D4  0E01               	movlw	1
  7333  0038D6  EF6E  F01C         	goto	l609
  7334  0038DA                     l8622:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
  7338  0038DA  0E00               	movlw	0
  7339  0038DC                     l609:
  7340                           
  7341                           ; BSR set to: 0
  7342  0038DC  0012               	return		;funcret
  7343  0038DE                     __end_of_calc_parity_odd:
  7344                           	callstack 0
  7345                           
  7346 ;; *************** function _calc_parity_even *****************
  7347 ;; Defined at:
  7348 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  data            1    wreg     unsigned char 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  data            1    0[BANK0 ] unsigned char 
  7353 ;;  l_counter       1    2[BANK0 ] unsigned char 
  7354 ;;  number_of_on    1    1[BANK0 ] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      unsigned char 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;Total ram usage:        5 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:   10
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_EUSART_Async_Read_Data
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text25
  7379  0038DE                     __ptext25:
  7380                           	callstack 0
  7381  0038DE                     _calc_parity_even:
  7382                           	callstack 17
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;incstack = 0
  7386                           ;calc_parity_even@data stored from wreg
  7387  0038DE  0100               	movlb	0	; () banked
  7388  0038E0  6FC4               	movwf	calc_parity_even@data& (0+255),b
  7389  0038E2                     
  7390                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
  7391  0038E2  0E00               	movlw	0
  7392  0038E4  0100               	movlb	0	; () banked
  7393  0038E6  6FC5               	movwf	calc_parity_even@number_of_ones& (0+255),b
  7394                           
  7395                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
  7396  0038E8  0E00               	movlw	0
  7397  0038EA  6FC6               	movwf	calc_parity_even@l_counter& (0+255),b
  7398                           
  7399                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
  7400  0038EC  0E00               	movlw	0
  7401  0038EE  6FC6               	movwf	calc_parity_even@l_counter& (0+255),b
  7402  0038F0                     l8584:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
  7406  0038F0  C0C6  F02A         	movff	calc_parity_even@l_counter,??_calc_parity_even
  7407  0038F4  0E01               	movlw	1
  7408  0038F6  6E2B               	movwf	(??_calc_parity_even+1)^0,c
  7409  0038F8  2A2A               	incf	??_calc_parity_even^0,f,c
  7410  0038FA  EF81  F01C         	goto	u9104
  7411  0038FE                     u9105:
  7412  0038FE  90D8               	bcf	status,0,c
  7413  003900  362B               	rlcf	(??_calc_parity_even+1)^0,f,c
  7414  003902                     u9104:
  7415  003902  2E2A               	decfsz	??_calc_parity_even^0,f,c
  7416  003904  EF7F  F01C         	goto	u9105
  7417  003908  502B               	movf	(??_calc_parity_even+1)^0,w,c
  7418  00390A  0100               	movlb	0	; () banked
  7419  00390C  15C4               	andwf	calc_parity_even@data& (0+255),w,b
  7420  00390E  0900               	iorlw	0
  7421  003910  B4D8               	btfsc	status,2,c
  7422  003912  EF8D  F01C         	goto	u9111
  7423  003916  EF8F  F01C         	goto	u9110
  7424  00391A                     u9111:
  7425  00391A  EF90  F01C         	goto	l614
  7426  00391E                     u9110:
  7427  00391E                     
  7428                           ; BSR set to: 0
  7429                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
  7430  00391E  2BC5               	incf	calc_parity_even@number_of_ones& (0+255),f,b
  7431  003920                     l614:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
  7435  003920  2BC6               	incf	calc_parity_even@l_counter& (0+255),f,b
  7436  003922                     
  7437                           ; BSR set to: 0
  7438  003922  0E07               	movlw	7
  7439  003924  65C6               	cpfsgt	calc_parity_even@l_counter& (0+255),b
  7440  003926  EF97  F01C         	goto	u9121
  7441  00392A  EF99  F01C         	goto	u9120
  7442  00392E                     u9121:
  7443  00392E  EF78  F01C         	goto	l8584
  7444  003932                     u9120:
  7445  003932                     
  7446                           ; BSR set to: 0
  7447                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
  7448  003932  2BC5               	incf	calc_parity_even@number_of_ones& (0+255),f,b
  7449  003934                     
  7450                           ; BSR set to: 0
  7451                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
  7452  003934  A1C5               	btfss	calc_parity_even@number_of_ones& (0+255),0,b
  7453  003936  EF9F  F01C         	goto	u9131
  7454  00393A  EFA1  F01C         	goto	u9130
  7455  00393E                     u9131:
  7456  00393E  EFA4  F01C         	goto	l8598
  7457  003942                     u9130:
  7458  003942                     
  7459                           ; BSR set to: 0
  7460                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
  7461  003942  0E01               	movlw	1
  7462  003944  EFA5  F01C         	goto	l616
  7463  003948                     l8598:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
  7467  003948  0E00               	movlw	0
  7468  00394A                     l616:
  7469                           
  7470                           ; BSR set to: 0
  7471  00394A  0012               	return		;funcret
  7472  00394C                     __end_of_calc_parity_even:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
  7476 ;; Defined at:
  7477 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  _pin_config     2   41[COMRAM] PTR const struct .
  7480 ;;		 -> pind2(1), pind1(1), 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  ERRORSTATUS     1    0        unsigned char 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      unsigned char 
  7485 ;; Registers used:
  7486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;Total ram usage:        8 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:   10
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_main
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text26
  7507  003640                     __ptext26:
  7508                           	callstack 0
  7509  003640                     _GPIO_Pin_Toggle_Logic:
  7510                           	callstack 20
  7511  003640                     
  7512                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  7513  003640  502A               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  7514  003642  102B               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  7515  003644  A4D8               	btfss	status,2,c
  7516  003646  EF27  F01B         	goto	u10731
  7517  00364A  EF29  F01B         	goto	u10730
  7518  00364E                     u10731:
  7519  00364E  EF2B  F01B         	goto	l9586
  7520  003652                     u10730:
  7521  003652                     
  7522                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  7523  003652  EF59  F01B         	goto	l702
  7524  003656                     l9586:
  7525                           
  7526                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  7527  003656  C02A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  7528  00365A  C02B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  7529  00365E  50DF               	movf	indf2,w,c
  7530  003660  0B07               	andlw	7
  7531  003662  0100               	movlb	0	; () banked
  7532  003664  6FC4               	movwf	??_GPIO_Pin_Toggle_Logic& (0+255),b
  7533  003666  0E01               	movlw	1
  7534  003668  6FC5               	movwf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),b
  7535  00366A  2BC4               	incf	??_GPIO_Pin_Toggle_Logic& (0+255),f,b
  7536  00366C  EF3A  F01B         	goto	u10744
  7537  003670                     u10745:
  7538  003670  90D8               	bcf	status,0,c
  7539  003672  37C5               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),f,b
  7540  003674                     u10744:
  7541  003674  2FC4               	decfsz	??_GPIO_Pin_Toggle_Logic& (0+255),f,b
  7542  003676  EF38  F01B         	goto	u10745
  7543  00367A  C02A  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  7544  00367E  C02B  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  7545  003682  30DF               	rrcf	indf2,w,c
  7546  003684  32E8               	rrcf	wreg,f,c
  7547  003686  32E8               	rrcf	wreg,f,c
  7548  003688  0B07               	andlw	7
  7549  00368A  0100               	movlb	0	; () banked
  7550  00368C  6FC6               	movwf	(??_GPIO_Pin_Toggle_Logic+2)& (0+255),b
  7551  00368E  51C6               	movf	(??_GPIO_Pin_Toggle_Logic+2)& (0+255),w,b
  7552  003690  0D02               	mullw	2
  7553  003692  0E8A               	movlw	low _lat_registers
  7554  003694  24F3               	addwf	243,w,c
  7555  003696  6ED9               	movwf	fsr2l,c
  7556  003698  0E00               	movlw	high _lat_registers
  7557  00369A  20F4               	addwfc	prodh,w,c
  7558  00369C  6EDA               	movwf	fsr2h,c
  7559  00369E  CFDE F0C7          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
  7560  0036A2  CFDD F0C8          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
  7561  0036A6  C0C7  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
  7562  0036AA  C0C8  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
  7563  0036AE  51C5               	movf	(??_GPIO_Pin_Toggle_Logic+1)& (0+255),w,b
  7564  0036B0  1ADF               	xorwf	indf2,f,c
  7565  0036B2                     l702:
  7566  0036B2  0012               	return		;funcret
  7567  0036B4                     __end_of_GPIO_Pin_Toggle_Logic:
  7568                           	callstack 0
  7569                           
  7570 ;; *************** function _InterruptManagerLow *****************
  7571 ;; Defined at:
  7572 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;		None
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;		None
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  1    wreg      void 
  7579 ;; Registers used:
  7580 ;;		wreg, status,2, cstack
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;Total ram usage:        3 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:    9
  7593 ;; This function calls:
  7594 ;;		_INT1_ISR
  7595 ;;		_RB4_ISR
  7596 ;;		_RB5_ISR
  7597 ;;		_RB6_ISR
  7598 ;;		_RB7_ISR
  7599 ;; This function is called by:
  7600 ;;		Interrupt level 1
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           	psect	intcodelo
  7605  000018                     __pintcodelo:
  7606                           	callstack 0
  7607  000018                     _InterruptManagerLow:
  7608                           	callstack 15
  7609                           
  7610                           ;incstack = 0
  7611  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7612  00001A  CFD8 F027          	movff	status,??_InterruptManagerLow
  7613  00001E  CFE8 F028          	movff	wreg,??_InterruptManagerLow+1
  7614  000022  CFE0 F029          	movff	bsr,??_InterruptManagerLow+2
  7615  000026                     
  7616                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
  7617  000026  A6F0               	btfss	240,3,c	;volatile
  7618  000028  EF18  F000         	goto	i1u820_21
  7619  00002C  EF1A  F000         	goto	i1u820_20
  7620  000030                     i1u820_21:
  7621  000030  EF23  F000         	goto	i1l969
  7622  000034                     i1u820_20:
  7623  000034  A0F0               	btfss	240,0,c	;volatile
  7624  000036  EF1F  F000         	goto	i1u821_21
  7625  00003A  EF21  F000         	goto	i1u821_20
  7626  00003E                     i1u821_21:
  7627  00003E  EF23  F000         	goto	i1l969
  7628  000042                     i1u821_20:
  7629  000042                     
  7630                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
  7631  000042  EC8E  F01F         	call	_INT1_ISR	;wreg free
  7632  000046                     i1l969:
  7633                           
  7634                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7635  000046  A6F2               	btfss	242,3,c	;volatile
  7636  000048  EF28  F000         	goto	i1u822_21
  7637  00004C  EF2A  F000         	goto	i1u822_20
  7638  000050                     i1u822_21:
  7639  000050  EF43  F000         	goto	i1l971
  7640  000054                     i1u822_20:
  7641  000054  A0F2               	btfss	242,0,c	;volatile
  7642  000056  EF2F  F000         	goto	i1u823_21
  7643  00005A  EF31  F000         	goto	i1u823_20
  7644  00005E                     i1u823_21:
  7645  00005E  EF43  F000         	goto	i1l971
  7646  000062                     i1u823_20:
  7647  000062  A881               	btfss	129,4,c	;volatile
  7648  000064  EF36  F000         	goto	i1u824_21
  7649  000068  EF38  F000         	goto	i1u824_20
  7650  00006C                     i1u824_21:
  7651  00006C  EF43  F000         	goto	i1l971
  7652  000070                     i1u824_20:
  7653  000070  A046               	btfss	_flags^0,0,c	;volatile
  7654  000072  EF3D  F000         	goto	i1u825_21
  7655  000076  EF3F  F000         	goto	i1u825_20
  7656  00007A                     i1u825_21:
  7657  00007A  EF43  F000         	goto	i1l971
  7658  00007E                     i1u825_20:
  7659  00007E                     
  7660                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
  7661  00007E  9046               	bcf	_flags^0,0,c	;volatile
  7662  000080                     
  7663                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
  7664  000080  0E01               	movlw	1
  7665  000082  EC77  F01F         	call	_RB4_ISR
  7666  000086                     i1l971:
  7667                           
  7668                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7669  000086  A6F2               	btfss	242,3,c	;volatile
  7670  000088  EF48  F000         	goto	i1u826_21
  7671  00008C  EF4A  F000         	goto	i1u826_20
  7672  000090                     i1u826_21:
  7673  000090  EF63  F000         	goto	i1l973
  7674  000094                     i1u826_20:
  7675  000094  A0F2               	btfss	242,0,c	;volatile
  7676  000096  EF4F  F000         	goto	i1u827_21
  7677  00009A  EF51  F000         	goto	i1u827_20
  7678  00009E                     i1u827_21:
  7679  00009E  EF63  F000         	goto	i1l973
  7680  0000A2                     i1u827_20:
  7681  0000A2  B881               	btfsc	129,4,c	;volatile
  7682  0000A4  EF56  F000         	goto	i1u828_21
  7683  0000A8  EF58  F000         	goto	i1u828_20
  7684  0000AC                     i1u828_21:
  7685  0000AC  EF63  F000         	goto	i1l973
  7686  0000B0                     i1u828_20:
  7687  0000B0  B046               	btfsc	_flags^0,0,c	;volatile
  7688  0000B2  EF5D  F000         	goto	i1u829_21
  7689  0000B6  EF5F  F000         	goto	i1u829_20
  7690  0000BA                     i1u829_21:
  7691  0000BA  EF63  F000         	goto	i1l973
  7692  0000BE                     i1u829_20:
  7693  0000BE                     
  7694                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
  7695  0000BE  8046               	bsf	_flags^0,0,c	;volatile
  7696  0000C0                     
  7697                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
  7698  0000C0  0E00               	movlw	0
  7699  0000C2  EC77  F01F         	call	_RB4_ISR
  7700  0000C6                     i1l973:
  7701                           
  7702                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7703  0000C6  A6F2               	btfss	242,3,c	;volatile
  7704  0000C8  EF68  F000         	goto	i1u830_21
  7705  0000CC  EF6A  F000         	goto	i1u830_20
  7706  0000D0                     i1u830_21:
  7707  0000D0  EF83  F000         	goto	i1l975
  7708  0000D4                     i1u830_20:
  7709  0000D4  A0F2               	btfss	242,0,c	;volatile
  7710  0000D6  EF6F  F000         	goto	i1u831_21
  7711  0000DA  EF71  F000         	goto	i1u831_20
  7712  0000DE                     i1u831_21:
  7713  0000DE  EF83  F000         	goto	i1l975
  7714  0000E2                     i1u831_20:
  7715  0000E2  AA81               	btfss	129,5,c	;volatile
  7716  0000E4  EF76  F000         	goto	i1u832_21
  7717  0000E8  EF78  F000         	goto	i1u832_20
  7718  0000EC                     i1u832_21:
  7719  0000EC  EF83  F000         	goto	i1l975
  7720  0000F0                     i1u832_20:
  7721  0000F0  A246               	btfss	_flags^0,1,c	;volatile
  7722  0000F2  EF7D  F000         	goto	i1u833_21
  7723  0000F6  EF7F  F000         	goto	i1u833_20
  7724  0000FA                     i1u833_21:
  7725  0000FA  EF83  F000         	goto	i1l975
  7726  0000FE                     i1u833_20:
  7727  0000FE                     
  7728                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
  7729  0000FE  9246               	bcf	_flags^0,1,c	;volatile
  7730  000100                     
  7731                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
  7732  000100  0E01               	movlw	1
  7733  000102  EC6A  F01F         	call	_RB5_ISR
  7734  000106                     i1l975:
  7735                           
  7736                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7737  000106  A6F2               	btfss	242,3,c	;volatile
  7738  000108  EF88  F000         	goto	i1u834_21
  7739  00010C  EF8A  F000         	goto	i1u834_20
  7740  000110                     i1u834_21:
  7741  000110  EFA3  F000         	goto	i1l977
  7742  000114                     i1u834_20:
  7743  000114  A0F2               	btfss	242,0,c	;volatile
  7744  000116  EF8F  F000         	goto	i1u835_21
  7745  00011A  EF91  F000         	goto	i1u835_20
  7746  00011E                     i1u835_21:
  7747  00011E  EFA3  F000         	goto	i1l977
  7748  000122                     i1u835_20:
  7749  000122  BA81               	btfsc	129,5,c	;volatile
  7750  000124  EF96  F000         	goto	i1u836_21
  7751  000128  EF98  F000         	goto	i1u836_20
  7752  00012C                     i1u836_21:
  7753  00012C  EFA3  F000         	goto	i1l977
  7754  000130                     i1u836_20:
  7755  000130  B246               	btfsc	_flags^0,1,c	;volatile
  7756  000132  EF9D  F000         	goto	i1u837_21
  7757  000136  EF9F  F000         	goto	i1u837_20
  7758  00013A                     i1u837_21:
  7759  00013A  EFA3  F000         	goto	i1l977
  7760  00013E                     i1u837_20:
  7761  00013E                     
  7762                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
  7763  00013E  8246               	bsf	_flags^0,1,c	;volatile
  7764  000140                     
  7765                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
  7766  000140  0E00               	movlw	0
  7767  000142  EC6A  F01F         	call	_RB5_ISR
  7768  000146                     i1l977:
  7769                           
  7770                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7771  000146  A6F2               	btfss	242,3,c	;volatile
  7772  000148  EFA8  F000         	goto	i1u838_21
  7773  00014C  EFAA  F000         	goto	i1u838_20
  7774  000150                     i1u838_21:
  7775  000150  EFC3  F000         	goto	i1l979
  7776  000154                     i1u838_20:
  7777  000154  A0F2               	btfss	242,0,c	;volatile
  7778  000156  EFAF  F000         	goto	i1u839_21
  7779  00015A  EFB1  F000         	goto	i1u839_20
  7780  00015E                     i1u839_21:
  7781  00015E  EFC3  F000         	goto	i1l979
  7782  000162                     i1u839_20:
  7783  000162  AC81               	btfss	129,6,c	;volatile
  7784  000164  EFB6  F000         	goto	i1u840_21
  7785  000168  EFB8  F000         	goto	i1u840_20
  7786  00016C                     i1u840_21:
  7787  00016C  EFC3  F000         	goto	i1l979
  7788  000170                     i1u840_20:
  7789  000170  A446               	btfss	_flags^0,2,c	;volatile
  7790  000172  EFBD  F000         	goto	i1u841_21
  7791  000176  EFBF  F000         	goto	i1u841_20
  7792  00017A                     i1u841_21:
  7793  00017A  EFC3  F000         	goto	i1l979
  7794  00017E                     i1u841_20:
  7795  00017E                     
  7796                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
  7797  00017E  9446               	bcf	_flags^0,2,c	;volatile
  7798  000180                     
  7799                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
  7800  000180  0E01               	movlw	1
  7801  000182  EC5D  F01F         	call	_RB6_ISR
  7802  000186                     i1l979:
  7803                           
  7804                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7805  000186  A6F2               	btfss	242,3,c	;volatile
  7806  000188  EFC8  F000         	goto	i1u842_21
  7807  00018C  EFCA  F000         	goto	i1u842_20
  7808  000190                     i1u842_21:
  7809  000190  EFE3  F000         	goto	i1l981
  7810  000194                     i1u842_20:
  7811  000194  A0F2               	btfss	242,0,c	;volatile
  7812  000196  EFCF  F000         	goto	i1u843_21
  7813  00019A  EFD1  F000         	goto	i1u843_20
  7814  00019E                     i1u843_21:
  7815  00019E  EFE3  F000         	goto	i1l981
  7816  0001A2                     i1u843_20:
  7817  0001A2  BC81               	btfsc	129,6,c	;volatile
  7818  0001A4  EFD6  F000         	goto	i1u844_21
  7819  0001A8  EFD8  F000         	goto	i1u844_20
  7820  0001AC                     i1u844_21:
  7821  0001AC  EFE3  F000         	goto	i1l981
  7822  0001B0                     i1u844_20:
  7823  0001B0  B446               	btfsc	_flags^0,2,c	;volatile
  7824  0001B2  EFDD  F000         	goto	i1u845_21
  7825  0001B6  EFDF  F000         	goto	i1u845_20
  7826  0001BA                     i1u845_21:
  7827  0001BA  EFE3  F000         	goto	i1l981
  7828  0001BE                     i1u845_20:
  7829  0001BE                     
  7830                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
  7831  0001BE  8446               	bsf	_flags^0,2,c	;volatile
  7832  0001C0                     
  7833                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
  7834  0001C0  0E00               	movlw	0
  7835  0001C2  EC5D  F01F         	call	_RB6_ISR
  7836  0001C6                     i1l981:
  7837                           
  7838                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7839  0001C6  A6F2               	btfss	242,3,c	;volatile
  7840  0001C8  EFE8  F000         	goto	i1u846_21
  7841  0001CC  EFEA  F000         	goto	i1u846_20
  7842  0001D0                     i1u846_21:
  7843  0001D0  EF03  F001         	goto	i1l983
  7844  0001D4                     i1u846_20:
  7845  0001D4  A0F2               	btfss	242,0,c	;volatile
  7846  0001D6  EFEF  F000         	goto	i1u847_21
  7847  0001DA  EFF1  F000         	goto	i1u847_20
  7848  0001DE                     i1u847_21:
  7849  0001DE  EF03  F001         	goto	i1l983
  7850  0001E2                     i1u847_20:
  7851  0001E2  AE81               	btfss	129,7,c	;volatile
  7852  0001E4  EFF6  F000         	goto	i1u848_21
  7853  0001E8  EFF8  F000         	goto	i1u848_20
  7854  0001EC                     i1u848_21:
  7855  0001EC  EF03  F001         	goto	i1l983
  7856  0001F0                     i1u848_20:
  7857  0001F0  A646               	btfss	_flags^0,3,c	;volatile
  7858  0001F2  EFFD  F000         	goto	i1u849_21
  7859  0001F6  EFFF  F000         	goto	i1u849_20
  7860  0001FA                     i1u849_21:
  7861  0001FA  EF03  F001         	goto	i1l983
  7862  0001FE                     i1u849_20:
  7863  0001FE                     
  7864                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
  7865  0001FE  9646               	bcf	_flags^0,3,c	;volatile
  7866  000200                     
  7867                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
  7868  000200  0E01               	movlw	1
  7869  000202  EC50  F01F         	call	_RB7_ISR
  7870  000206                     i1l983:
  7871                           
  7872                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
  7873  000206  A6F2               	btfss	242,3,c	;volatile
  7874  000208  EF08  F001         	goto	i1u850_21
  7875  00020C  EF0A  F001         	goto	i1u850_20
  7876  000210                     i1u850_21:
  7877  000210  EF23  F001         	goto	i1l985
  7878  000214                     i1u850_20:
  7879  000214  A0F2               	btfss	242,0,c	;volatile
  7880  000216  EF0F  F001         	goto	i1u851_21
  7881  00021A  EF11  F001         	goto	i1u851_20
  7882  00021E                     i1u851_21:
  7883  00021E  EF23  F001         	goto	i1l985
  7884  000222                     i1u851_20:
  7885  000222  BE81               	btfsc	129,7,c	;volatile
  7886  000224  EF16  F001         	goto	i1u852_21
  7887  000228  EF18  F001         	goto	i1u852_20
  7888  00022C                     i1u852_21:
  7889  00022C  EF23  F001         	goto	i1l985
  7890  000230                     i1u852_20:
  7891  000230  B646               	btfsc	_flags^0,3,c	;volatile
  7892  000232  EF1D  F001         	goto	i1u853_21
  7893  000236  EF1F  F001         	goto	i1u853_20
  7894  00023A                     i1u853_21:
  7895  00023A  EF23  F001         	goto	i1l985
  7896  00023E                     i1u853_20:
  7897  00023E                     
  7898                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
  7899  00023E  8646               	bsf	_flags^0,3,c	;volatile
  7900  000240                     
  7901                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
  7902  000240  0E00               	movlw	0
  7903  000242  EC50  F01F         	call	_RB7_ISR
  7904  000246                     i1l985:
  7905                           
  7906                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
  7907  000246  AC9D               	btfss	157,6,c	;volatile
  7908  000248  EF28  F001         	goto	i1u854_21
  7909  00024C  EF2A  F001         	goto	i1u854_20
  7910  000250                     i1u854_21:
  7911  000250  EF2B  F001         	goto	i1l987
  7912  000254                     i1u854_20:
  7913  000254  509E               	movf	158,w,c	;volatile
  7914  000256                     i1l987:
  7915                           
  7916                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
  7917  000256  A09D               	btfss	157,0,c	;volatile
  7918  000258  EF30  F001         	goto	i1u855_21
  7919  00025C  EF32  F001         	goto	i1u855_20
  7920  000260                     i1u855_21:
  7921  000260  EF33  F001         	goto	i1l990
  7922  000264                     i1u855_20:
  7923  000264  509E               	movf	158,w,c	;volatile
  7924  000266                     i1l990:
  7925  000266  C029  FFE0         	movff	??_InterruptManagerLow+2,bsr
  7926  00026A  C028  FFE8         	movff	??_InterruptManagerLow+1,wreg
  7927  00026E  C027  FFD8         	movff	??_InterruptManagerLow,status
  7928  000272  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7929  000274  0010               	retfie	
  7930  000276                     __end_of_InterruptManagerLow:
  7931                           	callstack 0
  7932                           
  7933 ;; *************** function _RB7_ISR *****************
  7934 ;; Defined at:
  7935 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  Handler_Sele    1    wreg     unsigned char 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;Total ram usage:        1 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    8
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_InterruptManagerLow
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text28
  7964  003EA0                     __ptext28:
  7965                           	callstack 0
  7966  003EA0                     _RB7_ISR:
  7967                           	callstack 15
  7968                           
  7969                           ;incstack = 0
  7970                           ;RB7_ISR@Handler_Select stored from wreg
  7971  003EA0  6E26               	movwf	RB7_ISR@Handler_Select^0,c
  7972  003EA2                     
  7973                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
  7974  003EA2  90F2               	bcf	242,0,c	;volatile
  7975  003EA4                     
  7976                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
  7977  003EA4  5026               	movf	RB7_ISR@Handler_Select^0,w,c
  7978  003EA6  B4D8               	btfsc	status,2,c
  7979  003EA8  EF58  F01F         	goto	i1u719_21
  7980  003EAC  EF5A  F01F         	goto	i1u719_20
  7981  003EB0                     i1u719_21:
  7982  003EB0  EF5C  F01F         	goto	i1l7050
  7983  003EB4                     i1u719_20:
  7984  003EB4  EF5C  F01F         	goto	i1l1096
  7985  003EB8                     i1l7050:
  7986  003EB8                     i1l1096:
  7987  003EB8  0012               	return		;funcret
  7988  003EBA                     __end_of_RB7_ISR:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _RB6_ISR *****************
  7992 ;; Defined at:
  7993 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  Handler_Sele    1    wreg     unsigned char 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;Total ram usage:        1 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    8
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_InterruptManagerLow
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text29
  8022  003EBA                     __ptext29:
  8023                           	callstack 0
  8024  003EBA                     _RB6_ISR:
  8025                           	callstack 15
  8026                           
  8027                           ;incstack = 0
  8028                           ;RB6_ISR@Handler_Select stored from wreg
  8029  003EBA  6E26               	movwf	RB6_ISR@Handler_Select^0,c
  8030  003EBC                     
  8031                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
  8032  003EBC  90F2               	bcf	242,0,c	;volatile
  8033  003EBE                     
  8034                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
  8035  003EBE  5026               	movf	RB6_ISR@Handler_Select^0,w,c
  8036  003EC0  B4D8               	btfsc	status,2,c
  8037  003EC2  EF65  F01F         	goto	i1u718_21
  8038  003EC6  EF67  F01F         	goto	i1u718_20
  8039  003ECA                     i1u718_21:
  8040  003ECA  EF69  F01F         	goto	i1l7040
  8041  003ECE                     i1u718_20:
  8042  003ECE  EF69  F01F         	goto	i1l1087
  8043  003ED2                     i1l7040:
  8044  003ED2                     i1l1087:
  8045  003ED2  0012               	return		;funcret
  8046  003ED4                     __end_of_RB6_ISR:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function _RB5_ISR *****************
  8050 ;; Defined at:
  8051 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  Handler_Sele    1    wreg     unsigned char 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;Total ram usage:        1 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    8
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_InterruptManagerLow
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text30
  8080  003ED4                     __ptext30:
  8081                           	callstack 0
  8082  003ED4                     _RB5_ISR:
  8083                           	callstack 15
  8084                           
  8085                           ;incstack = 0
  8086                           ;RB5_ISR@Handler_Select stored from wreg
  8087  003ED4  6E26               	movwf	RB5_ISR@Handler_Select^0,c
  8088  003ED6                     
  8089                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
  8090  003ED6  90F2               	bcf	242,0,c	;volatile
  8091  003ED8                     
  8092                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
  8093  003ED8  5026               	movf	RB5_ISR@Handler_Select^0,w,c
  8094  003EDA  B4D8               	btfsc	status,2,c
  8095  003EDC  EF72  F01F         	goto	i1u245_21
  8096  003EE0  EF74  F01F         	goto	i1u245_20
  8097  003EE4                     i1u245_21:
  8098  003EE4  EF76  F01F         	goto	i1l3848
  8099  003EE8                     i1u245_20:
  8100  003EE8  EF76  F01F         	goto	i1l1078
  8101  003EEC                     i1l3848:
  8102  003EEC                     i1l1078:
  8103  003EEC  0012               	return		;funcret
  8104  003EEE                     __end_of_RB5_ISR:
  8105                           	callstack 0
  8106                           
  8107 ;; *************** function _RB4_ISR *****************
  8108 ;; Defined at:
  8109 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  Handler_Sele    1    wreg     unsigned char 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  Handler_Sele    1   37[COMRAM] unsigned char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;Total ram usage:        1 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    8
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_InterruptManagerLow
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text31
  8138  003EEE                     __ptext31:
  8139                           	callstack 0
  8140  003EEE                     _RB4_ISR:
  8141                           	callstack 15
  8142                           
  8143                           ;incstack = 0
  8144                           ;RB4_ISR@Handler_Select stored from wreg
  8145  003EEE  6E26               	movwf	RB4_ISR@Handler_Select^0,c
  8146  003EF0                     
  8147                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
  8148  003EF0  90F2               	bcf	242,0,c	;volatile
  8149  003EF2                     
  8150                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
  8151  003EF2  5026               	movf	RB4_ISR@Handler_Select^0,w,c
  8152  003EF4  B4D8               	btfsc	status,2,c
  8153  003EF6  EF7F  F01F         	goto	i1u244_21
  8154  003EFA  EF81  F01F         	goto	i1u244_20
  8155  003EFE                     i1u244_21:
  8156  003EFE  EF83  F01F         	goto	i1l3838
  8157  003F02                     i1u244_20:
  8158  003F02  EF83  F01F         	goto	i1l1069
  8159  003F06                     i1l3838:
  8160  003F06                     i1l1069:
  8161  003F06  0012               	return		;funcret
  8162  003F08                     __end_of_RB4_ISR:
  8163                           	callstack 0
  8164                           
  8165 ;; *************** function _INT1_ISR *****************
  8166 ;; Defined at:
  8167 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;		None
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		None
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;Total ram usage:        0 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    8
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_InterruptManagerLow
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text32
  8196  003F1C                     __ptext32:
  8197                           	callstack 0
  8198  003F1C                     _INT1_ISR:
  8199                           	callstack 15
  8200  003F1C                     
  8201                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
  8202  003F1C  90F0               	bcf	240,0,c	;volatile
  8203  003F1E  0012               	return		;funcret
  8204  003F20                     __end_of_INT1_ISR:
  8205                           	callstack 0
  8206                           
  8207 ;; *************** function _InterruptManagerHigh *****************
  8208 ;; Defined at:
  8209 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;Total ram usage:        6 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    7
  8230 ;; This function calls:
  8231 ;;		_EUSART_Rx_ISR
  8232 ;;		_EUSART_Tx_ISR
  8233 ;;		_TMR0_ISR
  8234 ;; This function is called by:
  8235 ;;		Interrupt level 2
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	intcode
  8240  000008                     __pintcode:
  8241                           	callstack 0
  8242  000008                     _InterruptManagerHigh:
  8243                           	callstack 15
  8244                           
  8245                           ;incstack = 0
  8246  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8247  00000A  EDC3  F017         	call	int_func,f	;refresh shadow registers
  8248                           
  8249                           	psect	intcode_body
  8250  002F86                     __pintcode_body:
  8251                           	callstack 15
  8252  002F86                     int_func:
  8253                           	callstack 15
  8254  002F86  0006               	pop		; remove dummy address from shadow register refresh
  8255  002F88  CFFA F020          	movff	pclath,??_InterruptManagerHigh
  8256  002F8C  CFFB F021          	movff	pclatu,??_InterruptManagerHigh+1
  8257  002F90  CFD9 F022          	movff	fsr2l,??_InterruptManagerHigh+2
  8258  002F94  CFDA F023          	movff	fsr2h,??_InterruptManagerHigh+3
  8259  002F98  CFF3 F024          	movff	prodl,??_InterruptManagerHigh+4
  8260  002F9C  CFF4 F025          	movff	prodh,??_InterruptManagerHigh+5
  8261  002FA0                     
  8262                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
  8263  002FA0  AAF2               	btfss	242,5,c	;volatile
  8264  002FA2  EFD5  F017         	goto	i2u809_41
  8265  002FA6  EFD7  F017         	goto	i2u809_40
  8266  002FAA                     i2u809_41:
  8267  002FAA  EFE0  F017         	goto	i2l948
  8268  002FAE                     i2u809_40:
  8269  002FAE  A4F2               	btfss	242,2,c	;volatile
  8270  002FB0  EFDC  F017         	goto	i2u810_41
  8271  002FB4  EFDE  F017         	goto	i2u810_40
  8272  002FB8                     i2u810_41:
  8273  002FB8  EFE0  F017         	goto	i2l948
  8274  002FBC                     i2u810_40:
  8275  002FBC                     
  8276                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
  8277  002FBC  EC22  F01E         	call	_TMR0_ISR	;wreg free
  8278  002FC0                     i2l948:
  8279                           
  8280                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
  8281  002FC0  A29D               	btfss	157,1,c	;volatile
  8282  002FC2  EFE5  F017         	goto	i2u811_41
  8283  002FC6  EFE7  F017         	goto	i2u811_40
  8284  002FCA                     i2u811_41:
  8285  002FCA  EFE8  F017         	goto	i2l950
  8286  002FCE                     i2u811_40:
  8287  002FCE  509E               	movf	158,w,c	;volatile
  8288  002FD0                     i2l950:
  8289                           
  8290                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
  8291  002FD0  A2A0               	btfss	160,1,c	;volatile
  8292  002FD2  EFED  F017         	goto	i2u812_41
  8293  002FD6  EFEF  F017         	goto	i2u812_40
  8294  002FDA                     i2u812_41:
  8295  002FDA  EFF0  F017         	goto	i2l952
  8296  002FDE                     i2u812_40:
  8297  002FDE  50A1               	movf	161,w,c	;volatile
  8298  002FE0                     i2l952:
  8299                           
  8300                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
  8301  002FE0  A0A0               	btfss	160,0,c	;volatile
  8302  002FE2  EFF5  F017         	goto	i2u813_41
  8303  002FE6  EFF7  F017         	goto	i2u813_40
  8304  002FEA                     i2u813_41:
  8305  002FEA  EFF8  F017         	goto	i2l954
  8306  002FEE                     i2u813_40:
  8307  002FEE  50A1               	movf	161,w,c	;volatile
  8308  002FF0                     i2l954:
  8309                           
  8310                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
  8311  002FF0  AA9D               	btfss	157,5,c	;volatile
  8312  002FF2  EFFD  F017         	goto	i2u814_41
  8313  002FF6  EFFF  F017         	goto	i2u814_40
  8314  002FFA                     i2u814_41:
  8315  002FFA  EF08  F018         	goto	i2l956
  8316  002FFE                     i2u814_40:
  8317  002FFE  AA9E               	btfss	158,5,c	;volatile
  8318  003000  EF04  F018         	goto	i2u815_41
  8319  003004  EF06  F018         	goto	i2u815_40
  8320  003008                     i2u815_41:
  8321  003008  EF08  F018         	goto	i2l956
  8322  00300C                     i2u815_40:
  8323  00300C                     
  8324                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
  8325  00300C  EC12  F01F         	call	_EUSART_Rx_ISR	;wreg free
  8326  003010                     i2l956:
  8327                           
  8328                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
  8329  003010  A89D               	btfss	157,4,c	;volatile
  8330  003012  EF0D  F018         	goto	i2u816_41
  8331  003016  EF0F  F018         	goto	i2u816_40
  8332  00301A                     i2u816_41:
  8333  00301A  EF18  F018         	goto	i2l958
  8334  00301E                     i2u816_40:
  8335  00301E  A89E               	btfss	158,4,c	;volatile
  8336  003020  EF14  F018         	goto	i2u817_41
  8337  003024  EF16  F018         	goto	i2u817_40
  8338  003028                     i2u817_41:
  8339  003028  EF18  F018         	goto	i2l958
  8340  00302C                     i2u817_40:
  8341  00302C                     
  8342                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
  8343  00302C  EC90  F01F         	call	_EUSART_Tx_ISR	;wreg free
  8344  003030                     i2l958:
  8345                           
  8346                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
  8347  003030  A6A0               	btfss	160,3,c	;volatile
  8348  003032  EF1D  F018         	goto	i2u818_41
  8349  003036  EF1F  F018         	goto	i2u818_40
  8350  00303A                     i2u818_41:
  8351  00303A  EF20  F018         	goto	i2l960
  8352  00303E                     i2u818_40:
  8353  00303E  50A1               	movf	161,w,c	;volatile
  8354  003040                     i2l960:
  8355                           
  8356                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
  8357  003040  A69D               	btfss	157,3,c	;volatile
  8358  003042  EF25  F018         	goto	i2u819_41
  8359  003046  EF27  F018         	goto	i2u819_40
  8360  00304A                     i2u819_41:
  8361  00304A  EF28  F018         	goto	i2l963
  8362  00304E                     i2u819_40:
  8363  00304E  509E               	movf	158,w,c	;volatile
  8364  003050                     i2l963:
  8365  003050  C025  FFF4         	movff	??_InterruptManagerHigh+5,prodh
  8366  003054  C024  FFF3         	movff	??_InterruptManagerHigh+4,prodl
  8367  003058  C023  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  8368  00305C  C022  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  8369  003060  C021  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  8370  003064  C020  FFFA         	movff	??_InterruptManagerHigh,pclath
  8371  003068  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8372  00306A  0011               	retfie		f
  8373  00306C                     __end_of_InterruptManagerHigh:
  8374                           	callstack 0
  8375                           
  8376 ;; *************** function _TMR0_ISR *****************
  8377 ;; Defined at:
  8378 ;;		line 217 in file "MCAL/Timer0/hal_timer0.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;Total ram usage:        2 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    3
  8399 ;; This function calls:
  8400 ;;		Absolute function
  8401 ;;		_Timer0_Handler
  8402 ;; This function is called by:
  8403 ;;		_InterruptManagerHigh
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text34
  8408  003C44                     __ptext34:
  8409                           	callstack 0
  8410  003C44                     _TMR0_ISR:
  8411                           	callstack 18
  8412  003C44                     
  8413                           ;MCAL/Timer0/hal_timer0.c: 220:     (INTCONbits.TMR0IF = 0);
  8414  003C44  94F2               	bcf	242,2,c	;volatile
  8415  003C46                     
  8416                           ;MCAL/Timer0/hal_timer0.c: 228:     TMR0H = (uint8_t) (( (preloaded_val + 2) >> 8));
  8417  003C46  0E02               	movlw	2
  8418  003C48  242E               	addwf	_preloaded_val^0,w,c
  8419  003C4A  6E0E               	movwf	??_TMR0_ISR^0,c
  8420  003C4C  0E00               	movlw	0
  8421  003C4E  202F               	addwfc	(_preloaded_val+1)^0,w,c
  8422  003C50  6E0F               	movwf	(??_TMR0_ISR+1)^0,c
  8423  003C52  C00F  F00E         	movff	??_TMR0_ISR+1,??_TMR0_ISR
  8424  003C56  6A0F               	clrf	(??_TMR0_ISR+1)^0,c
  8425  003C58  500E               	movf	??_TMR0_ISR^0,w,c
  8426  003C5A  6ED7               	movwf	215,c	;volatile
  8427                           
  8428                           ;MCAL/Timer0/hal_timer0.c: 229:     TMR0L = (uint8_t) ((preloaded_val + 2) & 0x00ff);
  8429  003C5C  502E               	movf	_preloaded_val^0,w,c
  8430  003C5E  0F02               	addlw	2
  8431  003C60  6ED6               	movwf	214,c	;volatile
  8432                           
  8433                           ;MCAL/Timer0/hal_timer0.c: 231:     if(tmr0_InterruptHandler)
  8434  003C62  5030               	movf	_tmr0_InterruptHandler^0,w,c
  8435  003C64  1031               	iorwf	(_tmr0_InterruptHandler+1)^0,w,c
  8436  003C66  B4D8               	btfsc	status,2,c
  8437  003C68  EF38  F01E         	goto	i2u716_41
  8438  003C6C  EF3A  F01E         	goto	i2u716_40
  8439  003C70                     i2u716_41:
  8440  003C70  EF46  F01E         	goto	i2l1363
  8441  003C74                     i2u716_40:
  8442  003C74                     
  8443                           ;MCAL/Timer0/hal_timer0.c: 232:     {;MCAL/Timer0/hal_timer0.c: 233:         tmr0_Interr
      +                          uptHandler();
  8444  003C74  D802               	call	i2u717_48
  8445  003C76  EF46  F01E         	goto	i2u717_49
  8446  003C7A                     i2u717_48:
  8447  003C7A  0005               	push	
  8448  003C7C  6EFA               	movwf	pclath,c
  8449  003C7E  5030               	movf	_tmr0_InterruptHandler^0,w,c
  8450  003C80  6EFD               	movwf	tosl,c
  8451  003C82  5031               	movf	(_tmr0_InterruptHandler+1)^0,w,c
  8452  003C84  6EFE               	movwf	tosh,c
  8453  003C86  6AFF               	clrf	tosu,c
  8454  003C88  50FA               	movf	pclath,w,c
  8455  003C8A  0012               	return		;indir
  8456  003C8C                     i2u717_49:
  8457  003C8C                     i2l1363:
  8458  003C8C  0012               	return		;funcret
  8459  003C8E                     __end_of_TMR0_ISR:
  8460                           	callstack 0
  8461                           
  8462 ;; *************** function _Timer0_Handler *****************
  8463 ;; Defined at:
  8464 ;;		line 249 in file "Robot/Navigation/robot_navigation.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;		None
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8482 ;;Total ram usage:        0 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    2
  8485 ;; This function calls:
  8486 ;;		_ECU_DC_Motor_Stop
  8487 ;; This function is called by:
  8488 ;;		_TMR0_ISR
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text35
  8493  003E7A                     __ptext35:
  8494                           	callstack 0
  8495  003E7A                     _Timer0_Handler:
  8496                           	callstack 18
  8497  003E7A                     
  8498                           ;Robot/Navigation/robot_navigation.c: 251:     ECU_DC_Motor_Stop(&W1_W5_W2_W6_Motor_Cont
      +                          rol);
  8499  003E7A  0E51               	movlw	low _W1_W5_W2_W6_Motor_Control
  8500  003E7C  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  8501  003E7E  0E00               	movlw	high _W1_W5_W2_W6_Motor_Control
  8502  003E80  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  8503  003E82  ECD6  F01E         	call	_ECU_DC_Motor_Stop	;wreg free
  8504                           
  8505                           ;Robot/Navigation/robot_navigation.c: 252:     ECU_DC_Motor_Stop(&W3_Motor_Control);
  8506  003E86  0E4F               	movlw	low _W3_Motor_Control
  8507  003E88  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  8508  003E8A  0E00               	movlw	high _W3_Motor_Control
  8509  003E8C  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  8510  003E8E  ECD6  F01E         	call	_ECU_DC_Motor_Stop	;wreg free
  8511                           
  8512                           ;Robot/Navigation/robot_navigation.c: 253:     ECU_DC_Motor_Stop(&W4_Motor_Control);
  8513  003E92  0E4D               	movlw	low _W4_Motor_Control
  8514  003E94  6E0B               	movwf	ECU_DC_Motor_Stop@dc_motor^0,c
  8515  003E96  0E00               	movlw	high _W4_Motor_Control
  8516  003E98  6E0C               	movwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,c
  8517  003E9A  ECD6  F01E         	call	_ECU_DC_Motor_Stop	;wreg free
  8518  003E9E  0012               	return		;funcret
  8519  003EA0                     __end_of_Timer0_Handler:
  8520                           	callstack 0
  8521                           
  8522 ;; *************** function _ECU_DC_Motor_Stop *****************
  8523 ;; Defined at:
  8524 ;;		line 82 in file "ECU/DC_Motor/ecu_dc_motor.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  dc_motor        2   10[COMRAM] PTR const struct .
  8527 ;;		 -> W4_Motor_Control(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control(2), 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  ret_value       1    0        unsigned char 
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      unsigned char 
  8532 ;; Registers used:
  8533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;Total ram usage:        3 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    1
  8546 ;; This function calls:
  8547 ;;		i2_GPIO_Pin_Write_Logic
  8548 ;; This function is called by:
  8549 ;;		_Timer0_Handler
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text36
  8554  003DAC                     __ptext36:
  8555                           	callstack 0
  8556  003DAC                     _ECU_DC_Motor_Stop:
  8557                           	callstack 18
  8558  003DAC                     
  8559                           ;ECU/DC_Motor/ecu_dc_motor.c: 85:     if(((void*)0) == dc_motor)
  8560  003DAC  500B               	movf	ECU_DC_Motor_Stop@dc_motor^0,w,c
  8561  003DAE  100C               	iorwf	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
  8562  003DB0  A4D8               	btfss	status,2,c
  8563  003DB2  EFDD  F01E         	goto	i2u647_41
  8564  003DB6  EFDF  F01E         	goto	i2u647_40
  8565  003DBA                     i2u647_41:
  8566  003DBA  EFE1  F01E         	goto	i2l6520
  8567  003DBE                     i2u647_40:
  8568  003DBE                     
  8569                           ;ECU/DC_Motor/ecu_dc_motor.c: 88:     }
  8570  003DBE  EFF3  F01E         	goto	i2l1591
  8571  003DC2                     i2l6520:
  8572                           
  8573                           ;ECU/DC_Motor/ecu_dc_motor.c: 90:     {;ECU/DC_Motor/ecu_dc_motor.c: 91:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor[0x01U]) , GPIO_LOW );
  8574  003DC2  0E01               	movlw	1
  8575  003DC4  240B               	addwf	ECU_DC_Motor_Stop@dc_motor^0,w,c
  8576  003DC6  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  8577  003DC8  0E00               	movlw	0
  8578  003DCA  200C               	addwfc	(ECU_DC_Motor_Stop@dc_motor+1)^0,w,c
  8579  003DCC  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  8580  003DCE  0E00               	movlw	0
  8581  003DD0  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  8582  003DD2  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  8583                           
  8584                           ;ECU/DC_Motor/ecu_dc_motor.c: 92:         GPIO_Pin_Write_Logic(&(dc_motor->dc_motor[0x00
      +                          U]) , GPIO_LOW );
  8585  003DD6  C00B  F001         	movff	ECU_DC_Motor_Stop@dc_motor,i2GPIO_Pin_Write_Logic@_pin_config
  8586  003DDA  C00C  F002         	movff	ECU_DC_Motor_Stop@dc_motor+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  8587  003DDE  0E00               	movlw	0
  8588  003DE0  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  8589  003DE2  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  8590  003DE6                     i2l1591:
  8591  003DE6  0012               	return		;funcret
  8592  003DE8                     __end_of_ECU_DC_Motor_Stop:
  8593                           	callstack 0
  8594                           
  8595 ;; *************** function _EUSART_Tx_ISR *****************
  8596 ;; Defined at:
  8597 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		None
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;Total ram usage:        0 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		_InterruptManagerHigh
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text37
  8625  003F20                     __ptext37:
  8626                           	callstack 0
  8627  003F20                     _EUSART_Tx_ISR:
  8628                           	callstack 21
  8629  003F20  0012               	return		;funcret
  8630  003F22                     __end_of_EUSART_Tx_ISR:
  8631                           	callstack 0
  8632                           
  8633 ;; *************** function _EUSART_Rx_ISR *****************
  8634 ;; Defined at:
  8635 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    6
  8656 ;; This function calls:
  8657 ;;		Absolute function
  8658 ;;		_usart_isr
  8659 ;; This function is called by:
  8660 ;;		_InterruptManagerHigh
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text38
  8665  003E24                     __ptext38:
  8666                           	callstack 0
  8667  003E24                     _EUSART_Rx_ISR:
  8668                           	callstack 15
  8669  003E24                     
  8670                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
  8671  003E24  503C               	movf	_eusart_Rx_InterruptHandler^0,w,c
  8672  003E26  103D               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
  8673  003E28  B4D8               	btfsc	status,2,c
  8674  003E2A  EF19  F01F         	goto	i2u712_41
  8675  003E2E  EF1B  F01F         	goto	i2u712_40
  8676  003E32                     i2u712_41:
  8677  003E32  EF27  F01F         	goto	i2l623
  8678  003E36                     i2u712_40:
  8679  003E36                     
  8680                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
  8681  003E36  D802               	call	i2u713_48
  8682  003E38  EF27  F01F         	goto	i2u713_49
  8683  003E3C                     i2u713_48:
  8684  003E3C  0005               	push	
  8685  003E3E  6EFA               	movwf	pclath,c
  8686  003E40  503C               	movf	_eusart_Rx_InterruptHandler^0,w,c
  8687  003E42  6EFD               	movwf	tosl,c
  8688  003E44  503D               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
  8689  003E46  6EFE               	movwf	tosh,c
  8690  003E48  6AFF               	clrf	tosu,c
  8691  003E4A  50FA               	movf	pclath,w,c
  8692  003E4C  0012               	return		;indir
  8693  003E4E                     i2u713_49:
  8694  003E4E                     i2l623:
  8695  003E4E  0012               	return		;funcret
  8696  003E50                     __end_of_EUSART_Rx_ISR:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function _usart_isr *****************
  8700 ;; Defined at:
  8701 ;;		line 188 in file "application.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;		None
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;Total ram usage:        0 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    5
  8722 ;; This function calls:
  8723 ;;		_Bluetooth_Send_Data_Non_Blocking
  8724 ;;		_lcd_4bit_send_char_data_pos
  8725 ;;		i2_EUSART_Async_Read_Data
  8726 ;;		i2_GPIO_Pin_Toggle_Logic
  8727 ;; This function is called by:
  8728 ;;		_EUSART_Rx_ISR
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text39
  8733  003C8E                     __ptext39:
  8734                           	callstack 0
  8735  003C8E                     _usart_isr:
  8736                           	callstack 15
  8737  003C8E                     
  8738                           ;application.c: 190:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
  8739  003C8E  0E9E               	movlw	low __uart_obj
  8740  003C90  6E06               	movwf	i2EUSART_Async_Read_Data@_eusart_obj^0,c
  8741  003C92  0E00               	movlw	high __uart_obj
  8742  003C94  6E07               	movwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,c
  8743  003C96  0E42               	movlw	low _datarecive
  8744  003C98  6E08               	movwf	i2EUSART_Async_Read_Data@data^0,c
  8745  003C9A  0E00               	movlw	high _datarecive
  8746  003C9C  6E09               	movwf	(i2EUSART_Async_Read_Data@data+1)^0,c
  8747  003C9E  EC02  F012         	call	i2_EUSART_Async_Read_Data	;wreg free
  8748                           
  8749                           ;application.c: 191:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
  8750  003CA2  0E9E               	movlw	low __uart_obj
  8751  003CA4  6E0D               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
  8752  003CA6  0E00               	movlw	high __uart_obj
  8753  003CA8  6E0E               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
  8754  003CAA  C045  F00F         	movff	_datasend,Bluetooth_Send_Data_Non_Blocking@data
  8755  003CAE  EC28  F01F         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
  8756  003CB2                     
  8757                           ;application.c: 192:     lcd_4bit_send_char_data_pos(&lcd1,2,4,datarecive);
  8758  003CB2  0E47               	movlw	low _lcd1
  8759  003CB4  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  8760  003CB6  0E00               	movlw	high _lcd1
  8761  003CB8  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  8762  003CBA  0E02               	movlw	2
  8763  003CBC  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  8764  003CBE  0E04               	movlw	4
  8765  003CC0  6E1D               	movwf	lcd_4bit_send_char_data_pos@colum^0,c
  8766  003CC2  C042  F01E         	movff	_datarecive,lcd_4bit_send_char_data_pos@data
  8767  003CC6  ECF4  F01E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  8768  003CCA                     
  8769                           ;application.c: 193:     GPIO_Pin_Toggle_Logic(&pind2);
  8770  003CCA  0E55               	movlw	low _pind2
  8771  003CCC  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
  8772  003CCE  0E00               	movlw	high _pind2
  8773  003CD0  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  8774  003CD2  EC92  F01B         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
  8775  003CD6  0012               	return		;funcret
  8776  003CD8                     __end_of_usart_isr:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
  8780 ;; Defined at:
  8781 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  8784 ;;		 -> pind2(1), pind1(1), 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  ERRORSTATUS     1    0        unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      unsigned char 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        8 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_usart_isr
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text40
  8810  003724                     __ptext40:
  8811                           	callstack 0
  8812  003724                     i2_GPIO_Pin_Toggle_Logic:
  8813                           	callstack 19
  8814  003724                     
  8815                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
  8816  003724  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
  8817  003726  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
  8818  003728  A4D8               	btfss	status,2,c
  8819  00372A  EF99  F01B         	goto	i2u663_41
  8820  00372E  EF9B  F01B         	goto	i2u663_40
  8821  003732                     i2u663_41:
  8822  003732  EF9D  F01B         	goto	i2l6590
  8823  003736                     i2u663_40:
  8824  003736                     
  8825                           ;MCAL/GPIO/hal_gpio.c: 141:     }
  8826  003736  EFC9  F01B         	goto	i2l702
  8827  00373A                     i2l6590:
  8828                           
  8829                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
  8830  00373A  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  8831  00373E  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  8832  003742  50DF               	movf	indf2,w,c
  8833  003744  0B07               	andlw	7
  8834  003746  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
  8835  003748  0E01               	movlw	1
  8836  00374A  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
  8837  00374C  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
  8838  00374E  EFAB  F01B         	goto	i2u664_44
  8839  003752                     i2u664_45:
  8840  003752  90D8               	bcf	status,0,c
  8841  003754  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
  8842  003756                     i2u664_44:
  8843  003756  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
  8844  003758  EFA9  F01B         	goto	i2u664_45
  8845  00375C  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
  8846  003760  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
  8847  003764  30DF               	rrcf	indf2,w,c
  8848  003766  32E8               	rrcf	wreg,f,c
  8849  003768  32E8               	rrcf	wreg,f,c
  8850  00376A  0B07               	andlw	7
  8851  00376C  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
  8852  00376E  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
  8853  003770  0D02               	mullw	2
  8854  003772  0E8A               	movlw	low _lat_registers
  8855  003774  24F3               	addwf	243,w,c
  8856  003776  6ED9               	movwf	fsr2l,c
  8857  003778  0E00               	movlw	high _lat_registers
  8858  00377A  20F4               	addwfc	prodh,w,c
  8859  00377C  6EDA               	movwf	fsr2h,c
  8860  00377E  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
  8861  003782  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
  8862  003786  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
  8863  00378A  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
  8864  00378E  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
  8865  003790  1ADF               	xorwf	indf2,f,c
  8866  003792                     i2l702:
  8867  003792  0012               	return		;funcret
  8868  003794                     __end_ofi2_GPIO_Pin_Toggle_Logic:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function i2_EUSART_Async_Read_Data *****************
  8872 ;; Defined at:
  8873 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
  8876 ;;		 -> _uart_obj(12), 
  8877 ;;  data            2    7[COMRAM] PTR unsigned short 
  8878 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  l_temp_data     2   18[COMRAM] unsigned short 
  8881 ;;  ret_val         1    0        unsigned char 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  1    wreg      unsigned char 
  8884 ;; Registers used:
  8885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8894 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8895 ;;Total ram usage:       15 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    1
  8898 ;; This function calls:
  8899 ;;		i2_calc_parity_even
  8900 ;;		i2_calc_parity_odd
  8901 ;; This function is called by:
  8902 ;;		_usart_isr
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           	psect	text41
  8907  002404                     __ptext41:
  8908                           	callstack 0
  8909  002404                     i2_EUSART_Async_Read_Data:
  8910                           	callstack 18
  8911  002404                     
  8912                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
  8913  002404  0E00               	movlw	0
  8914  002406  6E14               	movwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
  8915  002408  0E00               	movlw	0
  8916  00240A  6E13               	movwf	i2EUSART_Async_Read_Data@l_temp_data^0,c
  8917  00240C                     
  8918                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
  8919  00240C  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8920  00240E  1007               	iorwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8921  002410  B4D8               	btfsc	status,2,c
  8922  002412  EF0D  F012         	goto	i2u648_41
  8923  002416  EF0F  F012         	goto	i2u648_40
  8924  00241A                     i2u648_41:
  8925  00241A  EF18  F012         	goto	i2l6530
  8926  00241E                     i2u648_40:
  8927  00241E  5008               	movf	i2EUSART_Async_Read_Data@data^0,w,c
  8928  002420  1009               	iorwf	(i2EUSART_Async_Read_Data@data+1)^0,w,c
  8929  002422  A4D8               	btfss	status,2,c
  8930  002424  EF16  F012         	goto	i2u649_41
  8931  002428  EF18  F012         	goto	i2u649_40
  8932  00242C                     i2u649_41:
  8933  00242C  EF1A  F012         	goto	i2l474
  8934  002430                     i2u649_40:
  8935  002430                     i2l6530:
  8936                           
  8937                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
  8938  002430  EFF6  F012         	goto	i2l6580
  8939  002434                     i2l474:
  8940                           
  8941                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
  8942  002434  AA9E               	btfss	158,5,c	;volatile
  8943  002436  EF1F  F012         	goto	i2u650_41
  8944  00243A  EF21  F012         	goto	i2u650_40
  8945  00243E                     i2u650_41:
  8946  00243E  EF18  F012         	goto	i2l6530
  8947  002442                     i2u650_40:
  8948  002442                     
  8949                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
  8950  002442  EE20 F009          	lfsr	2,9
  8951  002446  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8952  002448  26D9               	addwf	fsr2l,f,c
  8953  00244A  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8954  00244C  22DA               	addwfc	fsr2h,f,c
  8955  00244E  B8DF               	btfsc	indf2,4,c
  8956  002450  EF2C  F012         	goto	i2u651_41
  8957  002454  EF2E  F012         	goto	i2u651_40
  8958  002458                     i2u651_41:
  8959  002458  EF3B  F012         	goto	i2l6536
  8960  00245C                     i2u651_40:
  8961  00245C                     
  8962                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
  8963  00245C  50AE               	movf	174,w,c	;volatile
  8964  00245E  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
  8965  002460  6A0B               	clrf	(??i2_EUSART_Async_Read_Data+1)^0,c
  8966  002462  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
  8967  002466  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
  8968  00246A  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
  8969  00246E  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
  8970                           
  8971                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
  8972  002472  EFF6  F012         	goto	i2l6580
  8973  002476                     i2l6536:
  8974  002476  EE20 F009          	lfsr	2,9
  8975  00247A  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8976  00247C  26D9               	addwf	fsr2l,f,c
  8977  00247E  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8978  002480  22DA               	addwfc	fsr2h,f,c
  8979  002482  A8DF               	btfss	indf2,4,c
  8980  002484  EF46  F012         	goto	i2u652_41
  8981  002488  EF48  F012         	goto	i2u652_40
  8982  00248C                     i2u652_41:
  8983  00248C  EFF6  F012         	goto	i2l487
  8984  002490                     i2u652_40:
  8985  002490                     
  8986                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
  8987  002490  EE20 F009          	lfsr	2,9
  8988  002494  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
  8989  002496  26D9               	addwf	fsr2l,f,c
  8990  002498  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  8991  00249A  22DA               	addwfc	fsr2h,f,c
  8992  00249C  30DF               	rrcf	indf2,w,c
  8993  00249E  0B03               	andlw	3
  8994  0024A0  0900               	iorlw	0
  8995  0024A2  A4D8               	btfss	status,2,c
  8996  0024A4  EF56  F012         	goto	i2u653_41
  8997  0024A8  EF58  F012         	goto	i2u653_40
  8998  0024AC                     i2u653_41:
  8999  0024AC  EF7A  F012         	goto	i2l6550
  9000  0024B0                     i2u653_40:
  9001  0024B0                     
  9002                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
  9003  0024B0  CFAE F013          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
  9004  0024B4  6A14               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
  9005                           
  9006                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
  9007  0024B6  B0AB               	btfsc	4011,0,c	;volatile
  9008  0024B8  EF60  F012         	goto	i2u654_41
  9009  0024BC  EF62  F012         	goto	i2u654_40
  9010  0024C0                     i2u654_41:
  9011  0024C0  EF68  F012         	goto	i2l6544
  9012  0024C4                     i2u654_40:
  9013  0024C4  0E00               	movlw	0
  9014  0024C6  6E0E               	movwf	(i2_EUSART_Async_Read_Data$1571+1)^0,c
  9015  0024C8  0E00               	movlw	0
  9016  0024CA  6E0D               	movwf	i2_EUSART_Async_Read_Data$1571^0,c
  9017  0024CC  EF6C  F012         	goto	i2l6546
  9018  0024D0                     i2l6544:
  9019  0024D0  0E01               	movlw	1
  9020  0024D2  6E0E               	movwf	(i2_EUSART_Async_Read_Data$1571+1)^0,c
  9021  0024D4  0E00               	movlw	0
  9022  0024D6  6E0D               	movwf	i2_EUSART_Async_Read_Data$1571^0,c
  9023  0024D8                     i2l6546:
  9024  0024D8  500D               	movf	i2_EUSART_Async_Read_Data$1571^0,w,c
  9025  0024DA  2613               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
  9026  0024DC  500E               	movf	(i2_EUSART_Async_Read_Data$1571+1)^0,w,c
  9027  0024DE  2214               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
  9028  0024E0                     
  9029                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
  9030  0024E0  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
  9031  0024E4  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
  9032  0024E8  C013  FFDE         	movff	i2EUSART_Async_Read_Data@l_temp_data,postinc2
  9033  0024EC  C014  FFDD         	movff	i2EUSART_Async_Read_Data@l_temp_data+1,postdec2
  9034                           
  9035                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
  9036  0024F0  EFF6  F012         	goto	i2l6580
  9037  0024F4                     i2l6550:
  9038  0024F4  EE20 F009          	lfsr	2,9
  9039  0024F8  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
  9040  0024FA  26D9               	addwf	fsr2l,f,c
  9041  0024FC  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  9042  0024FE  22DA               	addwfc	fsr2h,f,c
  9043  002500  30DF               	rrcf	indf2,w,c
  9044  002502  0B03               	andlw	3
  9045  002504  06E8               	decf	wreg,f,c
  9046  002506  A4D8               	btfss	status,2,c
  9047  002508  EF88  F012         	goto	i2u655_41
  9048  00250C  EF8A  F012         	goto	i2u655_40
  9049  002510                     i2u655_41:
  9050  002510  EFBF  F012         	goto	i2l6564
  9051  002514                     i2u655_40:
  9052  002514                     
  9053                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
  9054  002514  CFAE F013          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
  9055  002518  6A14               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
  9056                           
  9057                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
  9058  00251A  B0AB               	btfsc	171,0,c	;volatile
  9059  00251C  EF92  F012         	goto	i2u656_41
  9060  002520  EF94  F012         	goto	i2u656_40
  9061  002524                     i2u656_41:
  9062  002524  EF9A  F012         	goto	i2l6556
  9063  002528                     i2u656_40:
  9064  002528  0E00               	movlw	0
  9065  00252A  6E10               	movwf	(i2_EUSART_Async_Read_Data$1572+1)^0,c
  9066  00252C  0E00               	movlw	0
  9067  00252E  6E0F               	movwf	i2_EUSART_Async_Read_Data$1572^0,c
  9068  002530  EF9E  F012         	goto	i2l6558
  9069  002534                     i2l6556:
  9070  002534  0E01               	movlw	1
  9071  002536  6E10               	movwf	(i2_EUSART_Async_Read_Data$1572+1)^0,c
  9072  002538  0E00               	movlw	0
  9073  00253A  6E0F               	movwf	i2_EUSART_Async_Read_Data$1572^0,c
  9074  00253C                     i2l6558:
  9075  00253C  500F               	movf	i2_EUSART_Async_Read_Data$1572^0,w,c
  9076  00253E  2613               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
  9077  002540  5010               	movf	(i2_EUSART_Async_Read_Data$1572+1)^0,w,c
  9078  002542  2214               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
  9079  002544                     
  9080                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
  9081  002544  5013               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
  9082  002546  ECDA  F01C         	call	i2_calc_parity_even
  9083  00254A  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
  9084  00254C  5014               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
  9085  00254E  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
  9086  002550  A4D8               	btfss	status,2,c
  9087  002552  EFAD  F012         	goto	i2u657_41
  9088  002556  EFAF  F012         	goto	i2u657_40
  9089  00255A                     i2u657_41:
  9090  00255A  EFF6  F012         	goto	i2l487
  9091  00255E                     i2u657_40:
  9092  00255E                     i2l6562:
  9093                           
  9094                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
  9095  00255E  0EFF               	movlw	255
  9096  002560  1413               	andwf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
  9097  002562  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
  9098  002564  0E00               	movlw	0
  9099  002566  1414               	andwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
  9100  002568  6E0B               	movwf	(??i2_EUSART_Async_Read_Data+1)^0,c
  9101  00256A  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
  9102  00256E  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
  9103  002572  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
  9104  002576  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
  9105                           
  9106                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
  9107  00257A  EFF6  F012         	goto	i2l6580
  9108  00257E                     i2l6564:
  9109  00257E  EE20 F009          	lfsr	2,9
  9110  002582  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
  9111  002584  26D9               	addwf	fsr2l,f,c
  9112  002586  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
  9113  002588  22DA               	addwfc	fsr2h,f,c
  9114  00258A  30DF               	rrcf	indf2,w,c
  9115  00258C  0B03               	andlw	3
  9116  00258E  0A02               	xorlw	2
  9117  002590  A4D8               	btfss	status,2,c
  9118  002592  EFCD  F012         	goto	i2u658_41
  9119  002596  EFCF  F012         	goto	i2u658_40
  9120  00259A                     i2u658_41:
  9121  00259A  EFF6  F012         	goto	i2l487
  9122  00259E                     i2u658_40:
  9123  00259E                     
  9124                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
  9125  00259E  CFAE F013          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
  9126  0025A2  6A14               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
  9127                           
  9128                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
  9129  0025A4  B0AB               	btfsc	171,0,c	;volatile
  9130  0025A6  EFD7  F012         	goto	i2u659_41
  9131  0025AA  EFD9  F012         	goto	i2u659_40
  9132  0025AE                     i2u659_41:
  9133  0025AE  EFDF  F012         	goto	i2l6570
  9134  0025B2                     i2u659_40:
  9135  0025B2  0E00               	movlw	0
  9136  0025B4  6E12               	movwf	(i2_EUSART_Async_Read_Data$1573+1)^0,c
  9137  0025B6  0E00               	movlw	0
  9138  0025B8  6E11               	movwf	i2_EUSART_Async_Read_Data$1573^0,c
  9139  0025BA  EFE3  F012         	goto	i2l6572
  9140  0025BE                     i2l6570:
  9141  0025BE  0E01               	movlw	1
  9142  0025C0  6E12               	movwf	(i2_EUSART_Async_Read_Data$1573+1)^0,c
  9143  0025C2  0E00               	movlw	0
  9144  0025C4  6E11               	movwf	i2_EUSART_Async_Read_Data$1573^0,c
  9145  0025C6                     i2l6572:
  9146  0025C6  5011               	movf	i2_EUSART_Async_Read_Data$1573^0,w,c
  9147  0025C8  2613               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
  9148  0025CA  5012               	movf	(i2_EUSART_Async_Read_Data$1573+1)^0,w,c
  9149  0025CC  2214               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
  9150  0025CE                     
  9151                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
  9152  0025CE  5013               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
  9153  0025D0  ECA6  F01C         	call	i2_calc_parity_odd
  9154  0025D4  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
  9155  0025D6  5014               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
  9156  0025D8  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
  9157  0025DA  A4D8               	btfss	status,2,c
  9158  0025DC  EFF2  F012         	goto	i2u660_41
  9159  0025E0  EFF4  F012         	goto	i2u660_40
  9160  0025E4                     i2u660_41:
  9161  0025E4  EFF6  F012         	goto	i2l487
  9162  0025E8                     i2u660_40:
  9163  0025E8  EFAF  F012         	goto	i2l6562
  9164  0025EC                     i2l487:
  9165  0025EC                     i2l6580:
  9166                           
  9167                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
  9168  0025EC  B2AB               	btfsc	171,1,c	;volatile
  9169  0025EE  EFFB  F012         	goto	i2u661_41
  9170  0025F2  EFFD  F012         	goto	i2u661_40
  9171  0025F6                     i2u661_41:
  9172  0025F6  EF04  F013         	goto	i2l508
  9173  0025FA                     i2u661_40:
  9174  0025FA  A4AB               	btfss	171,2,c	;volatile
  9175  0025FC  EF02  F013         	goto	i2u662_41
  9176  002600  EF04  F013         	goto	i2u662_40
  9177  002604                     i2u662_41:
  9178  002604  EF06  F013         	goto	i2l509
  9179  002608                     i2u662_40:
  9180  002608                     i2l508:
  9181                           
  9182                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
  9183  002608  98AB               	bcf	171,4,c	;volatile
  9184                           
  9185                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
  9186  00260A  88AB               	bsf	171,4,c	;volatile
  9187  00260C                     i2l509:
  9188  00260C  0012               	return		;funcret
  9189  00260E                     __end_ofi2_EUSART_Async_Read_Data:
  9190                           	callstack 0
  9191                           
  9192 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  9193 ;; Defined at:
  9194 ;;		line 117 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  lcd             2   25[COMRAM] PTR const struct .
  9197 ;;		 -> lcd1(6), 
  9198 ;;  row             1   27[COMRAM] unsigned char 
  9199 ;;  colum           1   28[COMRAM] unsigned char 
  9200 ;;  data            1   29[COMRAM] unsigned char 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  ERRORSTATUS     1    0        unsigned char 
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  1    wreg      unsigned char 
  9205 ;; Registers used:
  9206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9212 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;Total ram usage:        6 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:    4
  9219 ;; This function calls:
  9220 ;;		i2_lcd_4bit_send_char_data
  9221 ;;		i2_lcd_4bits_set_courser
  9222 ;; This function is called by:
  9223 ;;		_usart_isr
  9224 ;;		_lcd_4bit_send_custom_char
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text42
  9229  003DE8                     __ptext42:
  9230                           	callstack 0
  9231  003DE8                     _lcd_4bit_send_char_data_pos:
  9232                           	callstack 15
  9233  003DE8                     
  9234                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 120:     if ( ((void*)0)==lcd)
  9235  003DE8  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  9236  003DEA  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  9237  003DEC  A4D8               	btfss	status,2,c
  9238  003DEE  EFFB  F01E         	goto	i2u621_41
  9239  003DF2  EFFD  F01E         	goto	i2u621_40
  9240  003DF6                     i2u621_41:
  9241  003DF6  EFFF  F01E         	goto	i2l6340
  9242  003DFA                     i2u621_40:
  9243  003DFA                     
  9244                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 123:     }
  9245  003DFA  EF11  F01F         	goto	i2l92
  9246  003DFE                     i2l6340:
  9247                           
  9248                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 125:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 12
      +                          6:        lcd_4bits_set_courser(lcd,row,colum);
  9249  003DFE  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,i2lcd_4bits_set_courser@lcd
  9250  003E02  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,i2lcd_4bits_set_courser@lcd+1
  9251  003E06  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,i2lcd_4bits_set_courser@row
  9252  003E0A  C01D  F016         	movff	lcd_4bit_send_char_data_pos@colum,i2lcd_4bits_set_courser@colum
  9253  003E0E  EC5A  F019         	call	i2_lcd_4bits_set_courser	;wreg free
  9254                           
  9255                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 127:        lcd_4bit_send_char_data(lcd,data);
  9256  003E12  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,i2lcd_4bit_send_char_data@lcd
  9257  003E16  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,i2lcd_4bit_send_char_data@lcd+1
  9258  003E1A  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,i2lcd_4bit_send_char_data@data
  9259  003E1E  ECA3  F01D         	call	i2_lcd_4bit_send_char_data	;wreg free
  9260  003E22                     i2l92:
  9261  003E22  0012               	return		;funcret
  9262  003E24                     __end_of_lcd_4bit_send_char_data_pos:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function i2_lcd_4bits_set_courser *****************
  9266 ;; Defined at:
  9267 ;;		line 567 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  lcd             2   18[COMRAM] PTR const struct .
  9270 ;;		 -> lcd1(6), 
  9271 ;;  row             1   20[COMRAM] unsigned char 
  9272 ;;  colum           1   21[COMRAM] unsigned char 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  ERRORSTATUS     1    0        unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      unsigned char 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;Total ram usage:        7 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    3
  9291 ;; This function calls:
  9292 ;;		i2_lcd_4bit_send_command
  9293 ;; This function is called by:
  9294 ;;		_lcd_4bit_send_char_data_pos
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text43
  9299  0032B4                     __ptext43:
  9300                           	callstack 0
  9301  0032B4                     i2_lcd_4bits_set_courser:
  9302                           	callstack 15
  9303  0032B4                     
  9304                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 570:         if ( ((void*)0)==lcd)
  9305  0032B4  5013               	movf	i2lcd_4bits_set_courser@lcd^0,w,c
  9306  0032B6  1014               	iorwf	(i2lcd_4bits_set_courser@lcd+1)^0,w,c
  9307  0032B8  A4D8               	btfss	status,2,c
  9308  0032BA  EF61  F019         	goto	i2u602_41
  9309  0032BE  EF63  F019         	goto	i2u602_40
  9310  0032C2                     i2u602_41:
  9311  0032C2  EF65  F019         	goto	i2l6224
  9312  0032C6                     i2u602_40:
  9313  0032C6                     
  9314                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 573:     }
  9315  0032C6  EFB1  F019         	goto	i2l228
  9316  0032CA                     i2l6224:
  9317                           
  9318                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 575:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 57
      +                          6:             colum--;
  9319  0032CA  0616               	decf	i2lcd_4bits_set_courser@colum^0,f,c
  9320                           
  9321                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 577:             switch (row)
  9322  0032CC  EF94  F019         	goto	i2l6236
  9323  0032D0                     i2l6226:
  9324  0032D0  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  9325  0032D4  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  9326  0032D8  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  9327  0032DA  0F80               	addlw	128
  9328  0032DC  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  9329  0032DE  EC72  F01D         	call	i2_lcd_4bit_send_command	;wreg free
  9330  0032E2  EFB1  F019         	goto	i2l228
  9331  0032E6                     i2l6228:
  9332  0032E6  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  9333  0032EA  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  9334  0032EE  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  9335  0032F0  0FC0               	addlw	192
  9336  0032F2  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  9337  0032F4  EC72  F01D         	call	i2_lcd_4bit_send_command	;wreg free
  9338  0032F8  EFB1  F019         	goto	i2l228
  9339  0032FC                     i2l6230:
  9340  0032FC  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  9341  003300  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  9342  003304  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  9343  003306  0F94               	addlw	148
  9344  003308  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  9345  00330A  EC72  F01D         	call	i2_lcd_4bit_send_command	;wreg free
  9346  00330E  EFB1  F019         	goto	i2l228
  9347  003312                     i2l6232:
  9348  003312  C013  F00F         	movff	i2lcd_4bits_set_courser@lcd,i2lcd_4bit_send_command@lcd
  9349  003316  C014  F010         	movff	i2lcd_4bits_set_courser@lcd+1,i2lcd_4bit_send_command@lcd+1
  9350  00331A  5016               	movf	i2lcd_4bits_set_courser@colum^0,w,c
  9351  00331C  0FD4               	addlw	212
  9352  00331E  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  9353  003320  EC72  F01D         	call	i2_lcd_4bit_send_command	;wreg free
  9354  003324  EFB1  F019         	goto	i2l228
  9355  003328                     i2l6236:
  9356  003328  5015               	movf	i2lcd_4bits_set_courser@row^0,w,c
  9357  00332A  6E17               	movwf	??i2_lcd_4bits_set_courser^0,c
  9358  00332C  6A18               	clrf	(??i2_lcd_4bits_set_courser+1)^0,c
  9359                           
  9360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9361                           ; Switch size 1, requested type "simple"
  9362                           ; Number of cases is 1, Range of values is 0 to 0
  9363                           ; switch strategies available:
  9364                           ; Name         Instructions Cycles
  9365                           ; simple_byte            4     3 (average)
  9366                           ;	Chosen strategy is simple_byte
  9367  00332E  5018               	movf	(??i2_lcd_4bits_set_courser+1)^0,w,c
  9368  003330  0A00               	xorlw	0	; case 0
  9369  003332  B4D8               	btfsc	status,2,c
  9370  003334  EF9E  F019         	goto	i2l10412
  9371  003338  EFB1  F019         	goto	i2l228
  9372  00333C                     i2l10412:
  9373                           
  9374                           ; Switch size 1, requested type "simple"
  9375                           ; Number of cases is 4, Range of values is 1 to 4
  9376                           ; switch strategies available:
  9377                           ; Name         Instructions Cycles
  9378                           ; simple_byte           13     7 (average)
  9379                           ;	Chosen strategy is simple_byte
  9380  00333C  5017               	movf	??i2_lcd_4bits_set_courser^0,w,c
  9381  00333E  0A01               	xorlw	1	; case 1
  9382  003340  B4D8               	btfsc	status,2,c
  9383  003342  EF68  F019         	goto	i2l6226
  9384  003346  0A03               	xorlw	3	; case 2
  9385  003348  B4D8               	btfsc	status,2,c
  9386  00334A  EF73  F019         	goto	i2l6228
  9387  00334E  0A01               	xorlw	1	; case 3
  9388  003350  B4D8               	btfsc	status,2,c
  9389  003352  EF7E  F019         	goto	i2l6230
  9390  003356  0A07               	xorlw	7	; case 4
  9391  003358  B4D8               	btfsc	status,2,c
  9392  00335A  EF89  F019         	goto	i2l6232
  9393  00335E  EFB1  F019         	goto	i2l228
  9394  003362                     i2l228:
  9395  003362  0012               	return		;funcret
  9396  003364                     __end_ofi2_lcd_4bits_set_courser:
  9397                           	callstack 0
  9398                           
  9399 ;; *************** function i2_lcd_4bit_send_command *****************
  9400 ;; Defined at:
  9401 ;;		line 65 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  lcd             2   14[COMRAM] PTR const struct .
  9404 ;;		 -> lcd1(6), 
  9405 ;;  command         1   16[COMRAM] unsigned char 
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  ERRORSTATUS     1    0        unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      unsigned char 
  9410 ;; Registers used:
  9411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9417 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9421 ;;Total ram usage:        4 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:    2
  9424 ;; This function calls:
  9425 ;;		i2_GPIO_Pin_Write_Logic
  9426 ;;		i2_lcd_4bits_send_enable_signal
  9427 ;;		i2_lcd_send_4bits
  9428 ;; This function is called by:
  9429 ;;		i2_lcd_4bits_set_courser
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text44
  9434  003AE4                     __ptext44:
  9435                           	callstack 0
  9436  003AE4                     i2_lcd_4bit_send_command:
  9437                           	callstack 15
  9438  003AE4                     
  9439                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 68:     if ( ((void*)0)==lcd)
  9440  003AE4  500F               	movf	i2lcd_4bit_send_command@lcd^0,w,c
  9441  003AE6  1010               	iorwf	(i2lcd_4bit_send_command@lcd+1)^0,w,c
  9442  003AE8  A4D8               	btfss	status,2,c
  9443  003AEA  EF79  F01D         	goto	i2u487_41
  9444  003AEE  EF7B  F01D         	goto	i2u487_40
  9445  003AF2                     i2u487_41:
  9446  003AF2  EF7D  F01D         	goto	i2l5592
  9447  003AF6                     i2u487_40:
  9448  003AF6                     
  9449                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 71:     }
  9450  003AF6  EFA2  F01D         	goto	i2l82
  9451  003AFA                     i2l5592:
  9452  003AFA  C00F  F001         	movff	i2lcd_4bit_send_command@lcd,i2GPIO_Pin_Write_Logic@_pin_config
  9453  003AFE  C010  F002         	movff	i2lcd_4bit_send_command@lcd+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  9454  003B02  0E00               	movlw	0
  9455  003B04  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9456  003B06  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9457                           
  9458                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 75:     lcd_send_4bits(lcd,(command>>4));
  9459  003B0A  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
  9460  003B0E  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
  9461  003B12  3811               	swapf	i2lcd_4bit_send_command@command^0,w,c
  9462  003B14  0B0F               	andlw	15
  9463  003B16  6E0D               	movwf	i2lcd_send_4bits@data_command^0,c
  9464  003B18  ECE3  F01A         	call	i2_lcd_send_4bits	;wreg free
  9465                           
  9466                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 76:     lcd_4bits_send_enable_signal(lcd);
  9467  003B1C  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bits_send_enable_signal@lcd
  9468  003B20  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  9469  003B24  EC90  F01E         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  9470                           
  9471                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 77:     lcd_send_4bits(lcd,command);
  9472  003B28  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
  9473  003B2C  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
  9474  003B30  C011  F00D         	movff	i2lcd_4bit_send_command@command,i2lcd_send_4bits@data_command
  9475  003B34  ECE3  F01A         	call	i2_lcd_send_4bits	;wreg free
  9476                           
  9477                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 78:     lcd_4bits_send_enable_signal(lcd);
  9478  003B38  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bits_send_enable_signal@lcd
  9479  003B3C  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  9480  003B40  EC90  F01E         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  9481  003B44                     i2l82:
  9482  003B44  0012               	return		;funcret
  9483  003B46                     __end_ofi2_lcd_4bit_send_command:
  9484                           	callstack 0
  9485                           
  9486 ;; *************** function i2_lcd_4bit_send_char_data *****************
  9487 ;; Defined at:
  9488 ;;		line 90 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  lcd             2   14[COMRAM] PTR const struct .
  9491 ;;		 -> lcd1(6), 
  9492 ;;  data            1   16[COMRAM] unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  ERRORSTATUS     1    0        unsigned char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      unsigned char 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9504 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;Total ram usage:        4 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    2
  9511 ;; This function calls:
  9512 ;;		i2_GPIO_Pin_Write_Logic
  9513 ;;		i2_lcd_4bits_send_enable_signal
  9514 ;;		i2_lcd_send_4bits
  9515 ;; This function is called by:
  9516 ;;		_lcd_4bit_send_char_data_pos
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text45
  9521  003B46                     __ptext45:
  9522                           	callstack 0
  9523  003B46                     i2_lcd_4bit_send_char_data:
  9524                           	callstack 16
  9525  003B46                     
  9526                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 93:     if ( ((void*)0)==lcd)
  9527  003B46  500F               	movf	i2lcd_4bit_send_char_data@lcd^0,w,c
  9528  003B48  1010               	iorwf	(i2lcd_4bit_send_char_data@lcd+1)^0,w,c
  9529  003B4A  A4D8               	btfss	status,2,c
  9530  003B4C  EFAA  F01D         	goto	i2u601_41
  9531  003B50  EFAC  F01D         	goto	i2u601_40
  9532  003B54                     i2u601_41:
  9533  003B54  EFAE  F01D         	goto	i2l6214
  9534  003B58                     i2u601_40:
  9535  003B58                     
  9536                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 96:     }
  9537  003B58  EFD3  F01D         	goto	i2l87
  9538  003B5C                     i2l6214:
  9539  003B5C  C00F  F001         	movff	i2lcd_4bit_send_char_data@lcd,i2GPIO_Pin_Write_Logic@_pin_config
  9540  003B60  C010  F002         	movff	i2lcd_4bit_send_char_data@lcd+1,i2GPIO_Pin_Write_Logic@_pin_config+1
  9541  003B64  0E01               	movlw	1
  9542  003B66  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9543  003B68  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9544                           
  9545                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 100:     lcd_send_4bits(lcd,(data>>4));
  9546  003B6C  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
  9547  003B70  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
  9548  003B74  3811               	swapf	i2lcd_4bit_send_char_data@data^0,w,c
  9549  003B76  0B0F               	andlw	15
  9550  003B78  6E0D               	movwf	i2lcd_send_4bits@data_command^0,c
  9551  003B7A  ECE3  F01A         	call	i2_lcd_send_4bits	;wreg free
  9552                           
  9553                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 101:     lcd_4bits_send_enable_signal(lcd);
  9554  003B7E  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bits_send_enable_signal@lcd
  9555  003B82  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  9556  003B86  EC90  F01E         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  9557                           
  9558                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 102:     lcd_send_4bits(lcd,data);
  9559  003B8A  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
  9560  003B8E  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
  9561  003B92  C011  F00D         	movff	i2lcd_4bit_send_char_data@data,i2lcd_send_4bits@data_command
  9562  003B96  ECE3  F01A         	call	i2_lcd_send_4bits	;wreg free
  9563                           
  9564                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 103:     lcd_4bits_send_enable_signal(lcd);
  9565  003B9A  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bits_send_enable_signal@lcd
  9566  003B9E  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bits_send_enable_signal@lcd+1
  9567  003BA2  EC90  F01E         	call	i2_lcd_4bits_send_enable_signal	;wreg free
  9568  003BA6                     i2l87:
  9569  003BA6  0012               	return		;funcret
  9570  003BA8                     __end_ofi2_lcd_4bit_send_char_data:
  9571                           	callstack 0
  9572                           
  9573 ;; *************** function i2_lcd_send_4bits *****************
  9574 ;; Defined at:
  9575 ;;		line 505 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  lcd             2   10[COMRAM] PTR const struct .
  9578 ;;		 -> lcd1(6), 
  9579 ;;  data_command    1   12[COMRAM] unsigned char 
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;  ERRORSTATUS     1    0        unsigned char 
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      unsigned char 
  9584 ;; Registers used:
  9585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9591 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;Total ram usage:        4 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; Hardware stack levels required when called:    1
  9598 ;; This function calls:
  9599 ;;		i2_GPIO_Pin_Write_Logic
  9600 ;; This function is called by:
  9601 ;;		i2_lcd_4bit_send_command
  9602 ;;		i2_lcd_4bit_send_char_data
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text46
  9607  0035C6                     __ptext46:
  9608                           	callstack 0
  9609  0035C6                     i2_lcd_send_4bits:
  9610                           	callstack 15
  9611  0035C6                     
  9612                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 508:         if ( ((void*)0)==lcd)
  9613  0035C6  500B               	movf	i2lcd_send_4bits@lcd^0,w,c
  9614  0035C8  100C               	iorwf	(i2lcd_send_4bits@lcd+1)^0,w,c
  9615  0035CA  A4D8               	btfss	status,2,c
  9616  0035CC  EFEA  F01A         	goto	i2u484_41
  9617  0035D0  EFEC  F01A         	goto	i2u484_40
  9618  0035D4                     i2u484_41:
  9619  0035D4  EFEE  F01A         	goto	i2l5558
  9620  0035D8                     i2u484_40:
  9621  0035D8                     
  9622                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 511:     }
  9623  0035D8  EF1F  F01B         	goto	i2l199
  9624  0035DC                     i2l5558:
  9625                           
  9626                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 513:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 51
      +                          4:             GPIO_Pin_Write_Logic(&(lcd->lcd_data_pins[0]),((data_command>>0)&(uint8)0
      +                          x01));
  9627  0035DC  0E02               	movlw	2
  9628  0035DE  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  9629  0035E0  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  9630  0035E2  0E00               	movlw	0
  9631  0035E4  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  9632  0035E6  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9633  0035E8  500D               	movf	i2lcd_send_4bits@data_command^0,w,c
  9634  0035EA  0B01               	andlw	1
  9635  0035EC  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9636  0035EE  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9637                           
  9638                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 515:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[1]),((data_command>>1)&(uint8)0x01));
  9639  0035F2  0E03               	movlw	3
  9640  0035F4  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  9641  0035F6  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  9642  0035F8  0E00               	movlw	0
  9643  0035FA  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  9644  0035FC  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9645  0035FE  90D8               	bcf	status,0,c
  9646  003600  300D               	rrcf	i2lcd_send_4bits@data_command^0,w,c
  9647  003602  0B01               	andlw	1
  9648  003604  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9649  003606  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9650                           
  9651                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 516:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[2]),((data_command>>2)&(uint8)0x01));
  9652  00360A  0E04               	movlw	4
  9653  00360C  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  9654  00360E  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  9655  003610  0E00               	movlw	0
  9656  003612  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  9657  003614  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9658  003616  400D               	rrncf	i2lcd_send_4bits@data_command^0,w,c
  9659  003618  42E8               	rrncf	wreg,f,c
  9660  00361A  0B3F               	andlw	63
  9661  00361C  0B01               	andlw	1
  9662  00361E  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9663  003620  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9664                           
  9665                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 517:             GPIO_Pin_Write_Logic(&(lcd->lcd_d
      +                          ata_pins[3]),((data_command>>3)&(uint8)0x01));
  9666  003624  0E05               	movlw	5
  9667  003626  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  9668  003628  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  9669  00362A  0E00               	movlw	0
  9670  00362C  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  9671  00362E  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9672  003630  380D               	swapf	i2lcd_send_4bits@data_command^0,w,c
  9673  003632  46E8               	rlncf	wreg,f,c
  9674  003634  0B1F               	andlw	31
  9675  003636  0B01               	andlw	1
  9676  003638  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9677  00363A  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9678  00363E                     i2l199:
  9679  00363E  0012               	return		;funcret
  9680  003640                     __end_ofi2_lcd_send_4bits:
  9681                           	callstack 0
  9682                           
  9683 ;; *************** function i2_lcd_4bits_send_enable_signal *****************
  9684 ;; Defined at:
  9685 ;;		line 488 in file "ECU/LCD_for_test_gps/ecu_char_lcd.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  lcd             2   10[COMRAM] PTR const struct .
  9688 ;;		 -> lcd1(6), 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;  ERRORSTATUS     1    0        unsigned char 
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      unsigned char 
  9693 ;; Registers used:
  9694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9703 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;Total ram usage:        3 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; Hardware stack levels required when called:    1
  9707 ;; This function calls:
  9708 ;;		i2_GPIO_Pin_Write_Logic
  9709 ;; This function is called by:
  9710 ;;		i2_lcd_4bit_send_command
  9711 ;;		i2_lcd_4bit_send_char_data
  9712 ;; This function uses a non-reentrant model
  9713 ;;
  9714                           
  9715                           	psect	text47
  9716  003D20                     __ptext47:
  9717                           	callstack 0
  9718  003D20                     i2_lcd_4bits_send_enable_signal:
  9719                           	callstack 15
  9720  003D20                     
  9721                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 491:         if ( ((void*)0)==lcd)
  9722  003D20  500B               	movf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
  9723  003D22  100C               	iorwf	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  9724  003D24  A4D8               	btfss	status,2,c
  9725  003D26  EF97  F01E         	goto	i2u483_41
  9726  003D2A  EF99  F01E         	goto	i2u483_40
  9727  003D2E                     i2u483_41:
  9728  003D2E  EF9B  F01E         	goto	i2l5544
  9729  003D32                     i2u483_40:
  9730  003D32                     
  9731                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 494:     }
  9732  003D32  EFB3  F01E         	goto	i2l194
  9733  003D36                     i2l5544:
  9734                           
  9735                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 496:     {;ECU/LCD_for_test_gps/ecu_char_lcd.c: 49
      +                          7:             GPIO_Pin_Write_Logic(&(lcd->lcd_enable_pin),GPIO_HIGH);
  9736  003D36  0E01               	movlw	1
  9737  003D38  240B               	addwf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
  9738  003D3A  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  9739  003D3C  0E00               	movlw	0
  9740  003D3E  200C               	addwfc	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  9741  003D40  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9742  003D42  0E01               	movlw	1
  9743  003D44  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9744  003D46  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9745  003D4A                     
  9746                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 498:             _delay((unsigned long)((5)*(80000
      +                          00/4000000.0)));
  9747  003D4A  0E03               	movlw	3
  9748  003D4C                     i2u1142_47:
  9749  003D4C  2EE8               	decfsz	wreg,f,c
  9750  003D4E  D7FE               	bra	i2u1142_47
  9751  003D50  F000               	nop	
  9752  003D52                     
  9753                           ;ECU/LCD_for_test_gps/ecu_char_lcd.c: 499:              GPIO_Pin_Write_Logic(&(lcd->lcd_
      +                          enable_pin),GPIO_LOW);
  9754  003D52  0E01               	movlw	1
  9755  003D54  240B               	addwf	i2lcd_4bits_send_enable_signal@lcd^0,w,c
  9756  003D56  6E01               	movwf	i2GPIO_Pin_Write_Logic@_pin_config^0,c
  9757  003D58  0E00               	movlw	0
  9758  003D5A  200C               	addwfc	(i2lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  9759  003D5C  6E02               	movwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  9760  003D5E  0E00               	movlw	0
  9761  003D60  6E03               	movwf	i2GPIO_Pin_Write_Logic@logic^0,c
  9762  003D62  ECAB  F016         	call	i2_GPIO_Pin_Write_Logic	;wreg free
  9763  003D66                     i2l194:
  9764  003D66  0012               	return		;funcret
  9765  003D68                     __end_ofi2_lcd_4bits_send_enable_signal:
  9766                           	callstack 0
  9767                           
  9768 ;; *************** function i2_GPIO_Pin_Write_Logic *****************
  9769 ;; Defined at:
  9770 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  9773 ;;		 -> selector(1), pind2(1), pind1(1), lcd1.lcd_data_pins(4), 
  9774 ;;		 -> lcd1(6), CCP2_Obj(10), CCP1_Obj(10), W4_Motor_Control.dc_motor(2), 
  9775 ;;		 -> W4_Motor_Control(2), W3_Motor_Control.dc_motor(2), W3_Motor_Control(2), W1_W5_W2_W6_Motor_Control.dc_motor(2), 
  9776 ;;		 -> W1_W5_W2_W6_Motor_Control(2), 
  9777 ;;  logic           1    2[COMRAM] enum E2958
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  ERRORSTATUS     1    9[COMRAM] unsigned char 
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      unsigned char 
  9782 ;; Registers used:
  9783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9789 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9793 ;;Total ram usage:       10 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_ECU_DC_Motor_Stop
  9799 ;;		i2_lcd_4bit_send_command
  9800 ;;		i2_lcd_4bit_send_char_data
  9801 ;;		i2_lcd_4bits_send_enable_signal
  9802 ;;		i2_lcd_send_4bits
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text48
  9807  002D56                     __ptext48:
  9808                           	callstack 0
  9809  002D56                     i2_GPIO_Pin_Write_Logic:
  9810                           	callstack 18
  9811  002D56                     
  9812                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
  9813  002D56  0E01               	movlw	1
  9814  002D58  6E0A               	movwf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  9815  002D5A                     
  9816                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  9817  002D5A  5001               	movf	i2GPIO_Pin_Write_Logic@_pin_config^0,w,c
  9818  002D5C  1002               	iorwf	(i2GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
  9819  002D5E  B4D8               	btfsc	status,2,c
  9820  002D60  EFB4  F016         	goto	i2u475_41
  9821  002D64  EFB6  F016         	goto	i2u475_40
  9822  002D68                     i2u475_41:
  9823  002D68  EFC5  F016         	goto	i2l5496
  9824  002D6C                     i2u475_40:
  9825  002D6C  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  9826  002D70  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  9827  002D74  50DF               	movf	indf2,w,c
  9828  002D76  0B07               	andlw	7
  9829  002D78  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  9830  002D7A  0E07               	movlw	7
  9831  002D7C  6404               	cpfsgt	??i2_GPIO_Pin_Write_Logic^0,c
  9832  002D7E  EFC3  F016         	goto	i2u476_41
  9833  002D82  EFC5  F016         	goto	i2u476_40
  9834  002D86                     i2u476_41:
  9835  002D86  EF28  F017         	goto	i2l5504
  9836  002D8A                     i2u476_40:
  9837  002D8A                     i2l5496:
  9838                           
  9839                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  9840  002D8A  0E00               	movlw	0
  9841  002D8C  6E0A               	movwf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
  9842                           
  9843                           ;MCAL/GPIO/hal_gpio.c: 88:     }
  9844  002D8E  EF3D  F017         	goto	i2l5506
  9845  002D92                     i2l5498:
  9846                           
  9847                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
  9848  002D92  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  9849  002D96  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  9850  002D9A  50DF               	movf	indf2,w,c
  9851  002D9C  0B07               	andlw	7
  9852  002D9E  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  9853  002DA0  0E01               	movlw	1
  9854  002DA2  6E05               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  9855  002DA4  2A04               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
  9856  002DA6  EFD7  F016         	goto	i2u477_44
  9857  002DAA                     i2u477_45:
  9858  002DAA  90D8               	bcf	status,0,c
  9859  002DAC  3605               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
  9860  002DAE                     i2u477_44:
  9861  002DAE  2E04               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
  9862  002DB0  EFD5  F016         	goto	i2u477_45
  9863  002DB4  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  9864  002DB6  0AFF               	xorlw	255
  9865  002DB8  6E06               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
  9866  002DBA  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  9867  002DBE  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  9868  002DC2  30DF               	rrcf	indf2,w,c
  9869  002DC4  32E8               	rrcf	wreg,f,c
  9870  002DC6  32E8               	rrcf	wreg,f,c
  9871  002DC8  0B07               	andlw	7
  9872  002DCA  6E07               	movwf	(??i2_GPIO_Pin_Write_Logic+3)^0,c
  9873  002DCC  5007               	movf	(??i2_GPIO_Pin_Write_Logic+3)^0,w,c
  9874  002DCE  0D02               	mullw	2
  9875  002DD0  0E8A               	movlw	low _lat_registers
  9876  002DD2  24F3               	addwf	243,w,c
  9877  002DD4  6ED9               	movwf	fsr2l,c
  9878  002DD6  0E00               	movlw	high _lat_registers
  9879  002DD8  20F4               	addwfc	prodh,w,c
  9880  002DDA  6EDA               	movwf	fsr2h,c
  9881  002DDC  CFDE F008          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+4
  9882  002DE0  CFDD F009          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+5
  9883  002DE4  C008  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2l
  9884  002DE8  C009  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+5,fsr2h
  9885  002DEC  5006               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
  9886  002DEE  16DF               	andwf	indf2,f,c
  9887                           
  9888                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
  9889  002DF0  EF3D  F017         	goto	i2l5506
  9890  002DF4                     i2l5500:
  9891                           
  9892                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
  9893  002DF4  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  9894  002DF8  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  9895  002DFC  50DF               	movf	indf2,w,c
  9896  002DFE  0B07               	andlw	7
  9897  002E00  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  9898  002E02  0E01               	movlw	1
  9899  002E04  6E05               	movwf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  9900  002E06  2A04               	incf	??i2_GPIO_Pin_Write_Logic^0,f,c
  9901  002E08  EF08  F017         	goto	i2u478_44
  9902  002E0C                     i2u478_45:
  9903  002E0C  90D8               	bcf	status,0,c
  9904  002E0E  3605               	rlcf	(??i2_GPIO_Pin_Write_Logic+1)^0,f,c
  9905  002E10                     i2u478_44:
  9906  002E10  2E04               	decfsz	??i2_GPIO_Pin_Write_Logic^0,f,c
  9907  002E12  EF06  F017         	goto	i2u478_45
  9908  002E16  C001  FFD9         	movff	i2GPIO_Pin_Write_Logic@_pin_config,fsr2l
  9909  002E1A  C002  FFDA         	movff	i2GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
  9910  002E1E  30DF               	rrcf	indf2,w,c
  9911  002E20  32E8               	rrcf	wreg,f,c
  9912  002E22  32E8               	rrcf	wreg,f,c
  9913  002E24  0B07               	andlw	7
  9914  002E26  6E06               	movwf	(??i2_GPIO_Pin_Write_Logic+2)^0,c
  9915  002E28  5006               	movf	(??i2_GPIO_Pin_Write_Logic+2)^0,w,c
  9916  002E2A  0D02               	mullw	2
  9917  002E2C  0E8A               	movlw	low _lat_registers
  9918  002E2E  24F3               	addwf	243,w,c
  9919  002E30  6ED9               	movwf	fsr2l,c
  9920  002E32  0E00               	movlw	high _lat_registers
  9921  002E34  20F4               	addwfc	prodh,w,c
  9922  002E36  6EDA               	movwf	fsr2h,c
  9923  002E38  CFDE F007          	movff	postinc2,??i2_GPIO_Pin_Write_Logic+3
  9924  002E3C  CFDD F008          	movff	postdec2,??i2_GPIO_Pin_Write_Logic+4
  9925  002E40  C007  FFD9         	movff	??i2_GPIO_Pin_Write_Logic+3,fsr2l
  9926  002E44  C008  FFDA         	movff	??i2_GPIO_Pin_Write_Logic+4,fsr2h
  9927  002E48  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  9928  002E4A  12DF               	iorwf	indf2,f,c
  9929                           
  9930                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
  9931  002E4C  EF3D  F017         	goto	i2l5506
  9932  002E50                     i2l5504:
  9933  002E50  5003               	movf	i2GPIO_Pin_Write_Logic@logic^0,w,c
  9934  002E52  6E04               	movwf	??i2_GPIO_Pin_Write_Logic^0,c
  9935  002E54  6A05               	clrf	(??i2_GPIO_Pin_Write_Logic+1)^0,c
  9936                           
  9937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9938                           ; Switch size 1, requested type "simple"
  9939                           ; Number of cases is 1, Range of values is 0 to 0
  9940                           ; switch strategies available:
  9941                           ; Name         Instructions Cycles
  9942                           ; simple_byte            4     3 (average)
  9943                           ;	Chosen strategy is simple_byte
  9944  002E56  5005               	movf	(??i2_GPIO_Pin_Write_Logic+1)^0,w,c
  9945  002E58  0A00               	xorlw	0	; case 0
  9946  002E5A  B4D8               	btfsc	status,2,c
  9947  002E5C  EF32  F017         	goto	i2l10414
  9948  002E60  EFC5  F016         	goto	i2l5496
  9949  002E64                     i2l10414:
  9950                           
  9951                           ; Switch size 1, requested type "simple"
  9952                           ; Number of cases is 2, Range of values is 0 to 1
  9953                           ; switch strategies available:
  9954                           ; Name         Instructions Cycles
  9955                           ; simple_byte            7     4 (average)
  9956                           ;	Chosen strategy is simple_byte
  9957  002E64  5004               	movf	??i2_GPIO_Pin_Write_Logic^0,w,c
  9958  002E66  0A00               	xorlw	0	; case 0
  9959  002E68  B4D8               	btfsc	status,2,c
  9960  002E6A  EFC9  F016         	goto	i2l5498
  9961  002E6E  0A01               	xorlw	1	; case 1
  9962  002E70  B4D8               	btfsc	status,2,c
  9963  002E72  EFFA  F016         	goto	i2l5500
  9964  002E76  EFC5  F016         	goto	i2l5496
  9965  002E7A                     i2l5506:
  9966                           
  9967                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
  9968  002E7A  500A               	movf	i2GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
  9969  002E7C  0012               	return		;funcret
  9970  002E7E                     __end_ofi2_GPIO_Pin_Write_Logic:
  9971                           	callstack 0
  9972                           
  9973 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
  9974 ;; Defined at:
  9975 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  _uart_obj       2   12[COMRAM] PTR const struct .
  9978 ;;		 -> _uart_obj(12), 
  9979 ;;  data            1   14[COMRAM] unsigned char 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  ret_val         1    0        unsigned char 
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      unsigned char 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9991 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;Total ram usage:        4 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    2
  9998 ;; This function calls:
  9999 ;;		_EUSART_Async_Transmit_Data
 10000 ;; This function is called by:
 10001 ;;		_usart_isr
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text49
 10006  003E50                     __ptext49:
 10007                           	callstack 0
 10008  003E50                     _Bluetooth_Send_Data_Non_Blocking:
 10009                           	callstack 17
 10010  003E50                     
 10011                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 10012  003E50  500D               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
 10013  003E52  100E               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
 10014  003E54  A4D8               	btfss	status,2,c
 10015  003E56  EF2F  F01F         	goto	i2u603_41
 10016  003E5A  EF31  F01F         	goto	i2u603_40
 10017  003E5E                     i2u603_41:
 10018  003E5E  EF33  F01F         	goto	i2l6248
 10019  003E62                     i2u603_40:
 10020  003E62                     
 10021                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 10022  003E62  EF3C  F01F         	goto	i2l32
 10023  003E66                     i2l6248:
 10024                           
 10025                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 10026  003E66  C00D  F006         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
 10027  003E6A  C00E  F007         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
 10028  003E6E  C00F  F008         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
 10029  003E72  6A09               	clrf	(EUSART_Async_Transmit_Data@data+1)^0,c
 10030  003E74  EC36  F018         	call	_EUSART_Async_Transmit_Data	;wreg free
 10031  003E78                     i2l32:
 10032  003E78  0012               	return		;funcret
 10033  003E7A                     __end_of_Bluetooth_Send_Data_Non_Blocking:
 10034                           	callstack 0
 10035                           
 10036 ;; *************** function _EUSART_Async_Transmit_Data *****************
 10037 ;; Defined at:
 10038 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 10041 ;;		 -> _uart_obj(12), 
 10042 ;;  data            2    7[COMRAM] unsigned short 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  ret_val         1    0        unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      unsigned char 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;Total ram usage:        7 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    1
 10061 ;; This function calls:
 10062 ;;		i2_calc_parity_even
 10063 ;;		i2_calc_parity_odd
 10064 ;; This function is called by:
 10065 ;;		_Bluetooth_Send_Data_Non_Blocking
 10066 ;;		_EUSART_Async_Transmit_Data_Blocking
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text50
 10071  00306C                     __ptext50:
 10072                           	callstack 0
 10073  00306C                     _EUSART_Async_Transmit_Data:
 10074                           	callstack 17
 10075  00306C                     
 10076                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 10077  00306C  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 10078  00306E  1007               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 10079  003070  A4D8               	btfss	status,2,c
 10080  003072  EF3D  F018         	goto	i2u496_41
 10081  003076  EF3F  F018         	goto	i2u496_40
 10082  00307A                     i2u496_41:
 10083  00307A  EF41  F018         	goto	i2l5650
 10084  00307E                     i2u496_40:
 10085  00307E                     
 10086                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 10087  00307E  EFA7  F018         	goto	i2l471
 10088  003082                     i2l5650:
 10089                           
 10090                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 10091  003082  EE20 F002          	lfsr	2,2
 10092  003086  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 10093  003088  26D9               	addwf	fsr2l,f,c
 10094  00308A  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 10095  00308C  22DA               	addwfc	fsr2h,f,c
 10096  00308E  A6DF               	btfss	indf2,3,c
 10097  003090  EF4C  F018         	goto	i2u497_41
 10098  003094  EF4E  F018         	goto	i2u497_40
 10099  003098                     i2u497_41:
 10100  003098  EFA5  F018         	goto	i2l5664
 10101  00309C                     i2u497_40:
 10102  00309C                     
 10103                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 10104  00309C  EE20 F002          	lfsr	2,2
 10105  0030A0  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 10106  0030A2  26D9               	addwf	fsr2l,f,c
 10107  0030A4  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 10108  0030A6  22DA               	addwfc	fsr2h,f,c
 10109  0030A8  50DF               	movf	indf2,w,c
 10110  0030AA  0B03               	andlw	3
 10111  0030AC  0900               	iorlw	0
 10112  0030AE  A4D8               	btfss	status,2,c
 10113  0030B0  EF5C  F018         	goto	i2u498_41
 10114  0030B4  EF5E  F018         	goto	i2u498_40
 10115  0030B8                     i2u498_41:
 10116  0030B8  EF6D  F018         	goto	i2l5656
 10117  0030BC                     i2u498_40:
 10118  0030BC                     
 10119                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 10120  0030BC  C008  F00A         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
 10121  0030C0  C009  F00B         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
 10122  0030C4  C00B  F00A         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
 10123  0030C8  6A0B               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
 10124  0030CA  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 10125  0030CC  A0D8               	btfss	status,0,c
 10126  0030CE  D002               	bra	i2u499_45
 10127  0030D0  80AC               	bsf	172,0,c	;volatile
 10128  0030D2  D001               	bra	i2u499_47
 10129  0030D4                     i2u499_45:
 10130  0030D4  90AC               	bcf	172,0,c	;volatile
 10131  0030D6                     i2u499_47:
 10132                           
 10133                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 10134  0030D6  EFA5  F018         	goto	i2l5664
 10135  0030DA                     i2l5656:
 10136  0030DA  EE20 F002          	lfsr	2,2
 10137  0030DE  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 10138  0030E0  26D9               	addwf	fsr2l,f,c
 10139  0030E2  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 10140  0030E4  22DA               	addwfc	fsr2h,f,c
 10141  0030E6  50DF               	movf	indf2,w,c
 10142  0030E8  0B03               	andlw	3
 10143  0030EA  06E8               	decf	wreg,f,c
 10144  0030EC  A4D8               	btfss	status,2,c
 10145  0030EE  EF7B  F018         	goto	i2u500_41
 10146  0030F2  EF7D  F018         	goto	i2u500_40
 10147  0030F6                     i2u500_41:
 10148  0030F6  EF89  F018         	goto	i2l5660
 10149  0030FA                     i2u500_40:
 10150  0030FA                     
 10151                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 10152  0030FA  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 10153  0030FC  ECDA  F01C         	call	i2_calc_parity_even
 10154  003100  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 10155  003102  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 10156  003104  A0D8               	btfss	status,0,c
 10157  003106  D002               	bra	i2u501_45
 10158  003108  80AC               	bsf	172,0,c	;volatile
 10159  00310A  D001               	bra	i2u501_47
 10160  00310C                     i2u501_45:
 10161  00310C  90AC               	bcf	172,0,c	;volatile
 10162  00310E                     i2u501_47:
 10163                           
 10164                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 10165  00310E  EFA5  F018         	goto	i2l5664
 10166  003112                     i2l5660:
 10167  003112  EE20 F002          	lfsr	2,2
 10168  003116  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 10169  003118  26D9               	addwf	fsr2l,f,c
 10170  00311A  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 10171  00311C  22DA               	addwfc	fsr2h,f,c
 10172  00311E  50DF               	movf	indf2,w,c
 10173  003120  0B03               	andlw	3
 10174  003122  0A02               	xorlw	2
 10175  003124  A4D8               	btfss	status,2,c
 10176  003126  EF97  F018         	goto	i2u502_41
 10177  00312A  EF99  F018         	goto	i2u502_40
 10178  00312E                     i2u502_41:
 10179  00312E  EFA5  F018         	goto	i2l467
 10180  003132                     i2u502_40:
 10181  003132                     
 10182                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 10183  003132  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 10184  003134  ECA6  F01C         	call	i2_calc_parity_odd
 10185  003138  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 10186  00313A  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 10187  00313C  A0D8               	btfss	status,0,c
 10188  00313E  D002               	bra	i2u503_45
 10189  003140  80AC               	bsf	172,0,c	;volatile
 10190  003142  D001               	bra	i2u503_47
 10191  003144                     i2u503_45:
 10192  003144  90AC               	bcf	172,0,c	;volatile
 10193  003146                     i2u503_47:
 10194  003146  EFA5  F018         	goto	i2l5664
 10195  00314A                     i2l467:
 10196  00314A                     i2l5664:
 10197                           
 10198                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 10199  00314A  C008  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
 10200  00314E                     i2l471:
 10201  00314E  0012               	return		;funcret
 10202  003150                     __end_of_EUSART_Async_Transmit_Data:
 10203                           	callstack 0
 10204                           
 10205 ;; *************** function i2_calc_parity_odd *****************
 10206 ;; Defined at:
 10207 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  data            1    wreg     unsigned char 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  data            1    2[COMRAM] unsigned char 
 10212 ;;  l_counter       1    4[COMRAM] unsigned char 
 10213 ;;  number_of_on    1    3[COMRAM] unsigned char 
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      unsigned char 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10227 ;;Total ram usage:        5 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; This function calls:
 10230 ;;		Nothing
 10231 ;; This function is called by:
 10232 ;;		_EUSART_Async_Transmit_Data
 10233 ;;		i2_EUSART_Async_Read_Data
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text51
 10238  00394C                     __ptext51:
 10239                           	callstack 0
 10240  00394C                     i2_calc_parity_odd:
 10241                           	callstack 18
 10242                           
 10243                           ;incstack = 0
 10244                           ;i2calc_parity_odd@data stored from wreg
 10245  00394C  6E03               	movwf	i2calc_parity_odd@data^0,c
 10246  00394E                     
 10247                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 10248  00394E  0E00               	movlw	0
 10249  003950  6E04               	movwf	i2calc_parity_odd@number_of_ones^0,c
 10250                           
 10251                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 10252  003952  0E00               	movlw	0
 10253  003954  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 10254                           
 10255                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 10256  003956  0E00               	movlw	0
 10257  003958  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 10258  00395A                     i2l5602:
 10259                           
 10260                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 10261  00395A  C005  F001         	movff	i2calc_parity_odd@l_counter,??i2_calc_parity_odd
 10262  00395E  0E01               	movlw	1
 10263  003960  6E02               	movwf	(??i2_calc_parity_odd+1)^0,c
 10264  003962  2A01               	incf	??i2_calc_parity_odd^0,f,c
 10265  003964  EFB6  F01C         	goto	i2u488_44
 10266  003968                     i2u488_45:
 10267  003968  90D8               	bcf	status,0,c
 10268  00396A  3602               	rlcf	(??i2_calc_parity_odd+1)^0,f,c
 10269  00396C                     i2u488_44:
 10270  00396C  2E01               	decfsz	??i2_calc_parity_odd^0,f,c
 10271  00396E  EFB4  F01C         	goto	i2u488_45
 10272  003972  5002               	movf	(??i2_calc_parity_odd+1)^0,w,c
 10273  003974  1403               	andwf	i2calc_parity_odd@data^0,w,c
 10274  003976  0900               	iorlw	0
 10275  003978  B4D8               	btfsc	status,2,c
 10276  00397A  EFC1  F01C         	goto	i2u489_41
 10277  00397E  EFC3  F01C         	goto	i2u489_40
 10278  003982                     i2u489_41:
 10279  003982  EFC4  F01C         	goto	i2l607
 10280  003986                     i2u489_40:
 10281  003986                     
 10282                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 10283  003986  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 10284  003988                     i2l607:
 10285                           
 10286                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 10287  003988  2A05               	incf	i2calc_parity_odd@l_counter^0,f,c
 10288  00398A  0E07               	movlw	7
 10289  00398C  6405               	cpfsgt	i2calc_parity_odd@l_counter^0,c
 10290  00398E  EFCB  F01C         	goto	i2u490_41
 10291  003992  EFCD  F01C         	goto	i2u490_40
 10292  003996                     i2u490_41:
 10293  003996  EFAD  F01C         	goto	i2l5602
 10294  00399A                     i2u490_40:
 10295  00399A                     
 10296                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 10297  00399A  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 10298  00399C                     
 10299                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 10300  00399C  B004               	btfsc	i2calc_parity_odd@number_of_ones^0,0,c
 10301  00399E  EFD3  F01C         	goto	i2u491_41
 10302  0039A2  EFD5  F01C         	goto	i2u491_40
 10303  0039A6                     i2u491_41:
 10304  0039A6  EFD8  F01C         	goto	i2l5616
 10305  0039AA                     i2u491_40:
 10306  0039AA                     
 10307                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 10308  0039AA  0E01               	movlw	1
 10309  0039AC  EFD9  F01C         	goto	i2l609
 10310  0039B0                     i2l5616:
 10311                           
 10312                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 10313  0039B0  0E00               	movlw	0
 10314  0039B2                     i2l609:
 10315  0039B2  0012               	return		;funcret
 10316  0039B4                     __end_ofi2_calc_parity_odd:
 10317                           	callstack 0
 10318                           
 10319 ;; *************** function i2_calc_parity_even *****************
 10320 ;; Defined at:
 10321 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  data            1    wreg     unsigned char 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  data            1    2[COMRAM] unsigned char 
 10326 ;;  l_counter       1    4[COMRAM] unsigned char 
 10327 ;;  number_of_on    1    3[COMRAM] unsigned char 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      unsigned char 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10341 ;;Total ram usage:        5 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_EUSART_Async_Transmit_Data
 10347 ;;		i2_EUSART_Async_Read_Data
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text52
 10352  0039B4                     __ptext52:
 10353                           	callstack 0
 10354  0039B4                     i2_calc_parity_even:
 10355                           	callstack 18
 10356                           
 10357                           ;incstack = 0
 10358                           ;i2calc_parity_even@data stored from wreg
 10359  0039B4  6E03               	movwf	i2calc_parity_even@data^0,c
 10360  0039B6                     
 10361                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 10362  0039B6  0E00               	movlw	0
 10363  0039B8  6E04               	movwf	i2calc_parity_even@number_of_ones^0,c
 10364                           
 10365                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 10366  0039BA  0E00               	movlw	0
 10367  0039BC  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 10368                           
 10369                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 10370  0039BE  0E00               	movlw	0
 10371  0039C0  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 10372  0039C2                     i2l5626:
 10373                           
 10374                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 10375  0039C2  C005  F001         	movff	i2calc_parity_even@l_counter,??i2_calc_parity_even
 10376  0039C6  0E01               	movlw	1
 10377  0039C8  6E02               	movwf	(??i2_calc_parity_even+1)^0,c
 10378  0039CA  2A01               	incf	??i2_calc_parity_even^0,f,c
 10379  0039CC  EFEA  F01C         	goto	i2u492_44
 10380  0039D0                     i2u492_45:
 10381  0039D0  90D8               	bcf	status,0,c
 10382  0039D2  3602               	rlcf	(??i2_calc_parity_even+1)^0,f,c
 10383  0039D4                     i2u492_44:
 10384  0039D4  2E01               	decfsz	??i2_calc_parity_even^0,f,c
 10385  0039D6  EFE8  F01C         	goto	i2u492_45
 10386  0039DA  5002               	movf	(??i2_calc_parity_even+1)^0,w,c
 10387  0039DC  1403               	andwf	i2calc_parity_even@data^0,w,c
 10388  0039DE  0900               	iorlw	0
 10389  0039E0  B4D8               	btfsc	status,2,c
 10390  0039E2  EFF5  F01C         	goto	i2u493_41
 10391  0039E6  EFF7  F01C         	goto	i2u493_40
 10392  0039EA                     i2u493_41:
 10393  0039EA  EFF8  F01C         	goto	i2l614
 10394  0039EE                     i2u493_40:
 10395  0039EE                     
 10396                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 10397  0039EE  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 10398  0039F0                     i2l614:
 10399                           
 10400                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 10401  0039F0  2A05               	incf	i2calc_parity_even@l_counter^0,f,c
 10402  0039F2  0E07               	movlw	7
 10403  0039F4  6405               	cpfsgt	i2calc_parity_even@l_counter^0,c
 10404  0039F6  EFFF  F01C         	goto	i2u494_41
 10405  0039FA  EF01  F01D         	goto	i2u494_40
 10406  0039FE                     i2u494_41:
 10407  0039FE  EFE1  F01C         	goto	i2l5626
 10408  003A02                     i2u494_40:
 10409  003A02                     
 10410                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 10411  003A02  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 10412  003A04                     
 10413                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 10414  003A04  A004               	btfss	i2calc_parity_even@number_of_ones^0,0,c
 10415  003A06  EF07  F01D         	goto	i2u495_41
 10416  003A0A  EF09  F01D         	goto	i2u495_40
 10417  003A0E                     i2u495_41:
 10418  003A0E  EF0C  F01D         	goto	i2l5640
 10419  003A12                     i2u495_40:
 10420  003A12                     
 10421                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 10422  003A12  0E01               	movlw	1
 10423  003A14  EF0D  F01D         	goto	i2l616
 10424  003A18                     i2l5640:
 10425                           
 10426                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 10427  003A18  0E00               	movlw	0
 10428  003A1A                     i2l616:
 10429  003A1A  0012               	return		;funcret
 10430  003A1C                     __end_ofi2_calc_parity_even:
 10431                           	callstack 0
 10432                           
 10433                           	psect	text53
 10434  000000                     __ptext53:
 10435                           	callstack 0
 10436  000000                     
 10437                           	psect	rparam
 10438  0000                     
 10439                           	psect	temp
 10440  000056                     btemp:
 10441                           	callstack 0
 10442  000056                     	ds	1
 10443  0000                     int$flags	set	btemp
 10444  0000                     wtemp8	set	btemp+1
 10445  0000                     ttemp5	set	btemp+1
 10446  0000                     ttemp6	set	btemp+4
 10447  0000                     ttemp7	set	btemp+8
 10448                           
 10449                           	psect	idloc
 10450                           
 10451                           ;Config register IDLOC0 @ 0x200000
 10452                           ;	unspecified, using default values
 10453  200000                     	org	2097152
 10454  200000  FF                 	db	255
 10455                           
 10456                           ;Config register IDLOC1 @ 0x200001
 10457                           ;	unspecified, using default values
 10458  200001                     	org	2097153
 10459  200001  FF                 	db	255
 10460                           
 10461                           ;Config register IDLOC2 @ 0x200002
 10462                           ;	unspecified, using default values
 10463  200002                     	org	2097154
 10464  200002  FF                 	db	255
 10465                           
 10466                           ;Config register IDLOC3 @ 0x200003
 10467                           ;	unspecified, using default values
 10468  200003                     	org	2097155
 10469  200003  FF                 	db	255
 10470                           
 10471                           ;Config register IDLOC4 @ 0x200004
 10472                           ;	unspecified, using default values
 10473  200004                     	org	2097156
 10474  200004  FF                 	db	255
 10475                           
 10476                           ;Config register IDLOC5 @ 0x200005
 10477                           ;	unspecified, using default values
 10478  200005                     	org	2097157
 10479  200005  FF                 	db	255
 10480                           
 10481                           ;Config register IDLOC6 @ 0x200006
 10482                           ;	unspecified, using default values
 10483  200006                     	org	2097158
 10484  200006  FF                 	db	255
 10485                           
 10486                           ;Config register IDLOC7 @ 0x200007
 10487                           ;	unspecified, using default values
 10488  200007                     	org	2097159
 10489  200007  FF                 	db	255
 10490                           
 10491                           	psect	config
 10492                           
 10493                           ; Padding undefined space
 10494  300000                     	org	3145728
 10495  300000  FF                 	db	255
 10496                           
 10497                           ;Config register CONFIG1H @ 0x300001
 10498                           ;	Oscillator Selection bits
 10499                           ;	OSC = HS, HS oscillator
 10500                           ;	Fail-Safe Clock Monitor Enable bit
 10501                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10502                           ;	Internal/External Oscillator Switchover bit
 10503                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10504  300001                     	org	3145729
 10505  300001  02                 	db	2
 10506                           
 10507                           ;Config register CONFIG2L @ 0x300002
 10508                           ;	Power-up Timer Enable bit
 10509                           ;	PWRT = OFF, PWRT disabled
 10510                           ;	Brown-out Reset Enable bits
 10511                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10512                           ;	Brown Out Reset Voltage bits
 10513                           ;	BORV = 1, 
 10514  300002                     	org	3145730
 10515  300002  09                 	db	9
 10516                           
 10517                           ;Config register CONFIG2H @ 0x300003
 10518                           ;	Watchdog Timer Enable bit
 10519                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10520                           ;	Watchdog Timer Postscale Select bits
 10521                           ;	WDTPS = 32768, 1:32768
 10522  300003                     	org	3145731
 10523  300003  1E                 	db	30
 10524                           
 10525                           ; Padding undefined space
 10526  300004                     	org	3145732
 10527  300004  FF                 	db	255
 10528                           
 10529                           ;Config register CONFIG3H @ 0x300005
 10530                           ;	CCP2 MUX bit
 10531                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10532                           ;	PORTB A/D Enable bit
 10533                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10534                           ;	Low-Power Timer1 Oscillator Enable bit
 10535                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10536                           ;	MCLR Pin Enable bit
 10537                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10538  300005                     	org	3145733
 10539  300005  81                 	db	129
 10540                           
 10541                           ;Config register CONFIG4L @ 0x300006
 10542                           ;	Stack Full/Underflow Reset Enable bit
 10543                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10544                           ;	Single-Supply ICSP Enable bit
 10545                           ;	LVP = OFF, Single-Supply ICSP disabled
 10546                           ;	Extended Instruction Set Enable bit
 10547                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10548                           ;	Background Debugger Enable bit
 10549                           ;	DEBUG = 0x1, unprogrammed default
 10550  300006                     	org	3145734
 10551  300006  81                 	db	129
 10552                           
 10553                           ; Padding undefined space
 10554  300007                     	org	3145735
 10555  300007  FF                 	db	255
 10556                           
 10557                           ;Config register CONFIG5L @ 0x300008
 10558                           ;	Code Protection bit
 10559                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10560                           ;	Code Protection bit
 10561                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10562                           ;	Code Protection bit
 10563                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10564                           ;	Code Protection bit
 10565                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10566  300008                     	org	3145736
 10567  300008  0F                 	db	15
 10568                           
 10569                           ;Config register CONFIG5H @ 0x300009
 10570                           ;	Boot Block Code Protection bit
 10571                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10572                           ;	Data EEPROM Code Protection bit
 10573                           ;	CPD = OFF, Data EEPROM not code-protected
 10574  300009                     	org	3145737
 10575  300009  C0                 	db	192
 10576                           
 10577                           ;Config register CONFIG6L @ 0x30000A
 10578                           ;	Write Protection bit
 10579                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10580                           ;	Write Protection bit
 10581                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10582                           ;	Write Protection bit
 10583                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10584                           ;	Write Protection bit
 10585                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10586  30000A                     	org	3145738
 10587  30000A  0F                 	db	15
 10588                           
 10589                           ;Config register CONFIG6H @ 0x30000B
 10590                           ;	Configuration Register Write Protection bit
 10591                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10592                           ;	Boot Block Write Protection bit
 10593                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10594                           ;	Data EEPROM Write Protection bit
 10595                           ;	WRTD = OFF, Data EEPROM not write-protected
 10596  30000B                     	org	3145739
 10597  30000B  E0                 	db	224
 10598                           
 10599                           ;Config register CONFIG7L @ 0x30000C
 10600                           ;	Table Read Protection bit
 10601                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10602                           ;	Table Read Protection bit
 10603                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10604                           ;	Table Read Protection bit
 10605                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10606                           ;	Table Read Protection bit
 10607                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10608  30000C                     	org	3145740
 10609  30000C  0F                 	db	15
 10610                           
 10611                           ;Config register CONFIG7H @ 0x30000D
 10612                           ;	Boot Block Table Read Protection bit
 10613                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10614  30000D                     	org	3145741
 10615  30000D  40                 	db	64
 10616                           tosu	equ	0xFFF
 10617                           tosh	equ	0xFFE
 10618                           tosl	equ	0xFFD
 10619                           stkptr	equ	0xFFC
 10620                           pclatu	equ	0xFFB
 10621                           pclath	equ	0xFFA
 10622                           pcl	equ	0xFF9
 10623                           tblptru	equ	0xFF8
 10624                           tblptrh	equ	0xFF7
 10625                           tblptrl	equ	0xFF6
 10626                           tablat	equ	0xFF5
 10627                           prodh	equ	0xFF4
 10628                           prodl	equ	0xFF3
 10629                           indf0	equ	0xFEF
 10630                           postinc0	equ	0xFEE
 10631                           postdec0	equ	0xFED
 10632                           preinc0	equ	0xFEC
 10633                           plusw0	equ	0xFEB
 10634                           fsr0h	equ	0xFEA
 10635                           fsr0l	equ	0xFE9
 10636                           wreg	equ	0xFE8
 10637                           indf1	equ	0xFE7
 10638                           postinc1	equ	0xFE6
 10639                           postdec1	equ	0xFE5
 10640                           preinc1	equ	0xFE4
 10641                           plusw1	equ	0xFE3
 10642                           fsr1h	equ	0xFE2
 10643                           fsr1l	equ	0xFE1
 10644                           bsr	equ	0xFE0
 10645                           indf2	equ	0xFDF
 10646                           postinc2	equ	0xFDE
 10647                           postdec2	equ	0xFDD
 10648                           preinc2	equ	0xFDC
 10649                           plusw2	equ	0xFDB
 10650                           fsr2h	equ	0xFDA
 10651                           fsr2l	equ	0xFD9
 10652                           status	equ	0xFD8

Data Sizes:
    Strings     222
    Constant    0
    Data        87
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      85
    BANK0           128     32     128
    BANK1           256     37      63
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    _uart_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> usart_isr(), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S4306_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@temp_string(COMRAM[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@temp_string(COMRAM[6]), 

    ECU_DC_Motor_Stop@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Timer0.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Write_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Read_Val@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    tmr0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), Absolute function(), 

    S3212$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    HAL_Timer0_Init@_tmr0_config.timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Handler(), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S2817$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S2817$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2770$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S453$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S453$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S453$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind2(COMRAM[1]), pind1(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), 
		 -> lcd1(COMRAM[6]), CCP2_Obj(BANK0[10]), CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> pind2(COMRAM[1]), pind1(COMRAM[1]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind2(COMRAM[1]), pind1(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), 
		 -> lcd1(COMRAM[6]), CCP2_Obj(BANK0[10]), CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> selector(COMRAM[1]), pind2(COMRAM[1]), pind1(COMRAM[1]), lcd1.lcd_data_pins(COMRAM[4]), 
		 -> lcd1(COMRAM[6]), CCP2_Obj(BANK0[10]), CCP1_Obj(BANK0[10]), W4_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W4_Motor_Control(COMRAM[2]), W3_Motor_Control.dc_motor(COMRAM[2]), W3_Motor_Control(COMRAM[2]), W1_W5_W2_W6_Motor_Control.dc_motor(COMRAM[2]), 
		 -> W1_W5_W2_W6_Motor_Control(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_config_baud_rate_gen@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    Rx_config_interrupt@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_Rx_config@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    async_Tx_config@_tx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    EUSART_Async_Read_Data_Blocking@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), 

    EUSART_Async_Read_Data_Blocking@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(COMRAM[1]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Init@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    lcd_4bits_set_courser@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_35(CODE[15]), STR_34(CODE[15]), longtude(BANK1[13]), latitude(BANK1[13]), 
		 -> STR_33(CODE[13]), STR_32(CODE[15]), STR_31(CODE[4]), STR_30(CODE[15]), 
		 -> STR_29(CODE[13]), STR_28(CODE[15]), STR_27(CODE[16]), STR_26(CODE[15]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[15]), STR_19(CODE[11]), STR_18(CODE[15]), 
		 -> STR_17(CODE[15]), STR_16(CODE[15]), STR_15(CODE[10]), STR_14(CODE[15]), 
		 -> STR_13(CODE[14]), STR_12(CODE[15]), STR_11(CODE[9]), STR_10(CODE[15]), 
		 -> STR_9(CODE[4]), 

    lcd_4bit_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK0[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_Rx_config
    _async_config_baud_rate_gen->___fltol
    _async_config_baud_rate_gen->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _async_Rx_config->_Rx_config_interrupt
    _GPS_Service->_GPIO_Pin_Write_Logic
    _lcd_4bit_send_command->_GPIO_Pin_Write_Logic
    _lcd_4bit_send_char_data->_GPIO_Pin_Write_Logic
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _Timer0_Handler->_ECU_DC_Motor_Stop
    _ECU_DC_Motor_Stop->i2_GPIO_Pin_Write_Logic
    _usart_isr->_lcd_4bit_send_char_data_pos
    i2_EUSART_Async_Read_Data->i2_calc_parity_even
    i2_EUSART_Async_Read_Data->i2_calc_parity_odd
    _lcd_4bit_send_char_data_pos->i2_lcd_4bits_set_courser
    i2_lcd_4bits_set_courser->i2_lcd_4bit_send_command
    i2_lcd_4bit_send_command->i2_lcd_send_4bits
    i2_lcd_4bit_send_char_data->i2_lcd_send_4bits
    i2_lcd_send_4bits->i2_GPIO_Pin_Write_Logic
    i2_lcd_4bits_send_enable_signal->i2_GPIO_Pin_Write_Logic
    _Bluetooth_Send_Data_Non_Blocking->_EUSART_Async_Transmit_Data
    _EUSART_Async_Transmit_Data->i2_calc_parity_even
    _EUSART_Async_Transmit_Data->i2_calc_parity_odd

Critical Paths under _main in BANK0

    _lcd_4bit_initialize->_lcd_4bit_send_command
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _GPS_Service->_lcd_4bit_send_string_data_pos
    _lcd_4bit_send_string_data_pos->_lcd_4bits_set_courser
    _lcd_4bits_set_courser->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_Pin_Write_Logic
    _lcd_4bits_send_enable_signal->_GPIO_Pin_Write_Logic
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _application_intialize->_EUSART_Async_Init
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fladd
    ___fladd->___fldiv

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  135282
                                             35 BANK1      2     2      0
              _GPIO_Pin_Toggle_Logic
                        _GPS_Service
              _application_intialize
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   40777
                  _EUSART_Async_Init
                _GPIO_Pin_Initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   23642
                                             14 BANK0      6     4      2
                _GPIO_Pin_Initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    5941
                                              6 BANK0      3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     437
                                             41 COMRAM     3     1      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Init                                    3     1      2   11194
                                             32 BANK1      3     1      2
                    _async_Rx_config
                    _async_Tx_config
         _async_config_baud_rate_gen
 ---------------------------------------------------------------------------------
 (3) _async_config_baud_rate_gen                          13    11      2    9867
                                             30 BANK0      2     0      2
                                             21 BANK1     11    11      0
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1171
                                             41 COMRAM     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     822
                                             41 COMRAM     4     0      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3213
                                             10 BANK0     12     4      8
                                              0 BANK1     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4132
                                             22 BANK0      8     0      8
                                             13 BANK1      8     8      0
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _async_Tx_config                                      3     1      2     282
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _async_Rx_config                                      3     1      2     629
                                             44 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                _Rx_config_interrupt
 ---------------------------------------------------------------------------------
 (4) _Rx_config_interrupt                                  3     1      2     313
                                             41 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _GPS_Service                                          3     3      0   50569
                                             28 BANK0      3     3      0
    _EUSART_Async_Read_Data_Blocking
               _GPIO_Pin_Write_Logic
      _lcd_4bit_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_data_pos                        7     1      6   43685
                                             21 BANK0      7     1      6
            _lcd_4bit_send_char_data
              _lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_courser                                7     3      4   17818
                                             14 BANK0      7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   17057
                                             10 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   15163
                                             10 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5269
                                              6 BANK0      4     1      3
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    4723
                                              6 BANK0      3     1      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_Pin_Write_Logic                                10     7      3    4257
                                             41 COMRAM     4     1      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Read_Data_Blocking                      5     1      4    2559
                                             16 BANK0      5     1      4
             _EUSART_Async_Read_Data
 ---------------------------------------------------------------------------------
 (3) _EUSART_Async_Read_Data                              15    11      4    1522
                                             43 COMRAM     2     2      0
                                              3 BANK0     13     9      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (4) _calc_parity_odd                                      5     5      0     173
                                             41 COMRAM     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _calc_parity_even                                     5     5      0     173
                                             41 COMRAM     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     251
                                             41 COMRAM     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  3     3      0     148
                                             38 COMRAM     3     3      0
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 6     6      0    9900
                                             31 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            2     2      0    1001
                                             13 COMRAM     2     2      0
                   Absolute function *
                     _Timer0_Handler *
 ---------------------------------------------------------------------------------
 (11) _Timer0_Handler                                      0     0      0    1001
                  _ECU_DC_Motor_Stop
 ---------------------------------------------------------------------------------
 (12) _ECU_DC_Motor_Stop                                   3     1      2    1001
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (10) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Rx_ISR                                       0     0      0    8899
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (11) _usart_isr                                           0     0      0    8899
   _Bluetooth_Send_Data_Non_Blocking
        _lcd_4bit_send_char_data_pos
           i2_EUSART_Async_Read_Data
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Async_Read_Data                           15    11      4     768
                                              5 COMRAM    15    11      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (12) _lcd_4bit_send_char_data_pos                         6     1      5    7063
                                             25 COMRAM     6     1      5
          i2_lcd_4bit_send_char_data
            i2_lcd_4bits_set_courser
 ---------------------------------------------------------------------------------
 (13) i2_lcd_4bits_set_courser                             7     3      4    3389
                                             18 COMRAM     7     3      4
            i2_lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (14) i2_lcd_4bit_send_command                             4     1      3    3082
                                             14 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
     i2_lcd_4bits_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (13) i2_lcd_4bit_send_char_data                           4     1      3    2926
                                             14 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
     i2_lcd_4bits_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (15) i2_lcd_send_4bits                                    4     1      3    1113
                                             10 COMRAM     4     1      3
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (15) i2_lcd_4bits_send_enable_signal                      3     1      2     877
                                             10 COMRAM     3     1      2
             i2_GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (13) i2_GPIO_Pin_Write_Logic                             10     7      3     699
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (12) _Bluetooth_Send_Data_Non_Blocking                    4     1      3     968
                                             12 COMRAM     4     1      3
         _EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (13) _EUSART_Async_Transmit_Data                          7     3      4     742
                                              5 COMRAM     7     3      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_odd                                   5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_even                                  5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPS_Service
     _EUSART_Async_Read_Data_Blocking
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
     _GPIO_Pin_Write_Logic
     _lcd_4bit_send_string_data_pos
       _lcd_4bit_send_char_data
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
       _lcd_4bits_set_courser
         _lcd_4bit_send_command
           _GPIO_Pin_Write_Logic
           _lcd_4bits_send_enable_signal
             _GPIO_Pin_Write_Logic
           _lcd_send_4bits
             _GPIO_Pin_Write_Logic
   _application_intialize
     _EUSART_Async_Init
       _async_Rx_config
         _Rx_config_interrupt
       _async_Tx_config
       _async_config_baud_rate_gen
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _GPIO_Pin_Initialize
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Write_Logic
     _lcd_4bit_initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic
   _lcd_4bit_send_string_data_pos
     _lcd_4bit_send_char_data
       _GPIO_Pin_Write_Logic
       _lcd_4bits_send_enable_signal
         _GPIO_Pin_Write_Logic
       _lcd_send_4bits
         _GPIO_Pin_Write_Logic
     _lcd_4bits_set_courser
       _lcd_4bit_send_command
         _GPIO_Pin_Write_Logic
         _lcd_4bits_send_enable_signal
           _GPIO_Pin_Write_Logic
         _lcd_send_4bits
           _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       _Bluetooth_Send_Data_Non_Blocking
         _EUSART_Async_Transmit_Data
           i2_calc_parity_even
           i2_calc_parity_odd
       _lcd_4bit_send_char_data_pos
         i2_lcd_4bit_send_char_data
           i2_GPIO_Pin_Write_Logic
           i2_lcd_4bits_send_enable_signal
             i2_GPIO_Pin_Write_Logic
           i2_lcd_send_4bits
             i2_GPIO_Pin_Write_Logic
         i2_lcd_4bits_set_courser
           i2_lcd_4bit_send_command
             i2_GPIO_Pin_Write_Logic
             i2_lcd_4bits_send_enable_signal
               i2_GPIO_Pin_Write_Logic
             i2_lcd_send_4bits
               i2_GPIO_Pin_Write_Logic
       i2_EUSART_Async_Read_Data
         i2_calc_parity_even
         i2_calc_parity_odd
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _Timer0_Handler *
       _ECU_DC_Motor_Stop
         i2_GPIO_Pin_Write_Logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     25      3F       7       24.6%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     20      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2D      55       1       67.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      34        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 08 22:08:37 2022

                              ___fldiv@aexp 010C                                ___fldiv@bexp 010B  
                                         _i 003F                                ___fldiv@sign 0104  
                           ?_lcd_send_4bits 00CA            lcd_4bit_send_command@ERRORSTATUS 00D1  
                               _SSPSTATbits 000FC7                                          l82 3722  
                                        l77 2C26                                          l87 3A80  
                                        bsr 000FE0                       ??_InterruptManagerLow 0027  
                i2lcd_4bit_send_command@lcd 000F          __end_of_async_config_baud_rate_gen 21F4  
                _async_config_baud_rate_gen 1E34                                         l112 3410  
                                       l228 32B2                                         l600 20A2  
                                       l194 3C42                                         l602 21F2  
                                       l508 23FE                                         l540 386E  
                                       l509 2402                                         l453 3A9A  
                                       l702 36B2                                         l614 3920  
                                       l534 382C                                         l607 38B2  
                                       l199 35C4                                         l455 3AE2  
                                       l616 394A                                         l560 3540  
                                       l609 38DC                                         l474 2226  
                                       l570 31D8                                         l539 386A  
                                       l563 3542                                         l707 3BF6  
                                       l573 31FE                                         l557 351E  
                                       l590 34B2                                         l487 23E2  
                                       l671 2AEC                                         l584 3430  
                                       l576 3200                                         l690 2D54  
                                       l587 34AE                                         l596 1E6E  
                                       l598 1F2A                                         l599 1FE6  
                                       _PR2 000FCB        __end_of_lcd_4bits_send_enable_signal 3C44  
     __size_of_lcd_4bits_send_enable_signal 004C            ??i2_lcd_4bits_send_enable_signal 000D  
           ?i2_lcd_4bits_send_enable_signal 000B                _lcd_4bits_send_enable_signal 3BF8  
                          _calc_parity_even 38DE                      ??_InterruptManagerHigh 0020  
                                       _gps 0044                   _RB5_InterruptHandler_HIGH 0034  
          lcd_4bit_send_char_data_pos@colum 001D    GPIO_Pin_Direction_Initialize@ERRORSTATUS 002C  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                                  _TXSTA1bits 000FAC  
                    ??_GPIO_Pin_Write_Logic 00C4                  __size_of_ECU_DC_Motor_Stop 003C  
                           __end_of_RB4_ISR 3F08                             __end_of_RB5_ISR 3EEE  
                           __end_of_RB6_ISR 3ED4                             __end_of_RB7_ISR 3EBA  
              i2lcd_4bits_set_courser@colum 0016                                ___fltol@exp1 00C9  
                                      l2122 1304                                        l2131 163C  
                                      l2123 12F2                                        l2124 12B0  
                                      l2139 145A                                        l2148 153E  
                                      l2252 29A6                                        l2149 152A  
                                      l2181 183A                                        l2190 195E  
                                      l2263 293E                                        l2176 1A6A  
                                      l2256 28E2                                        l2249 284A  
                                      l2178 1898                                        l1546 3D1E  
                                      l1555 2728                                        l2187 18E2  
                                      l2189 1970                                        l1567 27EE  
                                      l1891 2F84                                        l9000 1A3E  
                                      l9002 1A42                                        l9004 1A50  
                                      l9100 2994                                        l9110 2210  
                                      l9006 1A58                                        l9030 2EEA  
                                      l9022 2EAA                                        l9102 2996  
                                      l9120 2282                                        l9112 2222  
                                      l9200 324C                                        l9008 1A5C  
                                      l9040 2F1A                                        l9032 2EF8  
                                      l9024 2ED4                                        l9016 2E7E  
                                      l9130 22D2                                        l9122 22A2  
                                      l9114 2234                                        l9106 21F4  
                                      l9202 3262                                        l9050 2F44  
                                      l9042 2F24                                        l9026 2ED6  
                                      l9018 2E96                                        l9140 232E  
                                      l9124 22B6                                        l9132 22E6  
                                      l9116 224E                                        l9108 21FE  
                                      l9300 31DE                                        l9052 2F54  
                                      l9028 2EE6                                        l9060 27F4  
                                      l9220 1E72                                        l9212 1E34  
                                      l9150 23A6                                        l9142 2336  
                                      l9134 2306                                        l9126 22C2  
                                      l9118 2268                                        l9206 3278  
                                      l9302 31F8                                        l9054 2F64  
                                      l9038 2F10                                        l9062 2806  
                                      l9230 2042                                        l9222 1ECA  
                                      l9214 1E3A                                        l9310 3A82  
                                      l9152 23B2                                        l9144 2352  
                                      l9136 231A                                        l9128 22CA  
                                      l8520 2C2C                                        l9400 33DE  
                                      l9304 31FE                                        l9056 2F74  
                                      l9048 2F38                                        l9080 28CC  
                                      l9072 2884                                        l9064 2814  
                                      l9232 20A6                                        l9224 1F2E  
                                      l9240 2166                                        l9216 1E4E  
                                      l9320 3AC4                                        l9312 3A96  
                                      l8610 38B0                                        l8602 3874  
                                      l9154 23BA                                        l9138 2326  
                                      l9146 2372                                        l9162 23E2  
                                      l9330 3816                                        l8522 2C3E  
                                      l9090 294C                                        l9082 28D8  
                                      l9074 288C                                        l9066 285A  
                                      l9234 20FE                                        l9226 1F86  
                                      l9242 21B0                                        l9218 1E58  
                                      l9322 3AE0                                        l9314 3A9C  
                                      l9170 3BBC                                        l8612 38B4  
                                      l9164 23F0                                        l9156 23C2  
                                      l9148 2392                                        l9332 3828  
                                      l8532 2D28                                        l8524 2C5E  
                                      l9180 3A1C                                        l9260 34D2  
                                      l8700 1176                                        l9092 294E  
                                      l9084 2914                                        l9076 2898  
                                      l9068 2870                                        l9236 215E  
                                      l9228 1FEA                                        l9244 21EE  
                                      l9316 3AAC                                        l9308 3A82  
                                      l9172 3BC4                                        l9340 2AEE  
                                      l8622 38DA                                        l8614 38C4  
                                      l9334 383A                                        l9326 3802  
                                      l8526 2C66                                        l8534 2D52  
                                      l8518 2C28                                        l8542 3544  
                                      l9182 3A30                                        l9190 3202  
                                      l8630 3428                                        l9270 351C  
                                      l9262 34E8                                        l9254 34B4  
                                      l8710 11B6                                        l8702 1180  
                                      l9094 2952                                        l9086 2920  
                                      l9078 28CA                                        l9318 3AAE  
                                      l9174 3BF4                                        l9166 3BA8  
                                      l9350 2B12                                        l9342 2AEE  
                                      l8616 38C6                                        l8608 3882  
                                      l9336 384E                                        l9328 3802  
                                      l8528 2CCA                                        l8560 3C24  
                                      l8552 3BF8                                        l8544 3544  
                                      l9184 3A34                                        l9192 3216  
                                      l9600 2616                                        l8640 346C  
                                      l8632 3432                                        l9280 3150  
                                      l9264 34EA                                        l9272 3524  
                                      l9256 34B8                                        l8800 13A2  
                                      l8720 11FA                                        l8712 11C8  
                                      l8704 1190                                        l9096 2976  
                                      l9088 292E                                        l9168 3BA8  
                                      l9360 2B4A                                        l9344 2B02  
                                      l8618 38D4                                        l9338 385C  
                                      l8562 3C2C                                        l8554 3BF8  
                                      l8546 3558                                        l9178 3A1C  
                                      l8570 36C8                                        l9194 321A  
                                      l9610 2668                                        l9602 262A  
                                      l8642 3486                                        l8634 3442  
                                      l8626 3412                                        l9290 318C  
                                      l9282 3154                                        l9274 353A  
                                      l9266 3500                                        l9258 34CA  
                                      l8802 13D0                                        l8810 1448  
                                      l8730 1218                                        l8722 1208  
                                      l8714 11CC                                        l8706 1194  
                                      l9098 2986                                        l9370 2BA8  
                                      l9362 2B5A                                        l9346 2B06  
                                      l8556 3C0C                                        l8548 355C  
                                      l8572 36D0                                        l9196 3220  
                                      l9188 3202                                        l9620 26AC  
                                      l9612 267A                                        l9604 263E  
                                      l8644 348E                                        l8636 3456  
                                      l8628 3416                                        l9292 319A  
                                      l9284 3168                                        l9268 3506  
                                      l9276 3540                                        l8820 14A4  
                                      l8812 1472                                        l8804 1424  
                                      l8740 122C                                        l8732 121C  
                                      l8724 120C                                        l8708 11A6  
                                      l8716 11D4                                        l8900 16CA  
                                      l8660 29E6                                        l8652 29A8  
                                      l9380 2C02                                        l9372 2BBA  
                                      l9364 2B6C                                        l9356 2B2A  
                                      l9348 2B06                                        l8590 3932  
                                      l8558 3C10                                        l8574 371E  
                                      l8566 36B4                                        l9198 3236  
                                      l9390 3378                                        l9630 26E8  
                                      l9622 26AE                                        l9614 267C  
                                      l8646 34A8                                        l8638 346A  
                                      l9294 31B6                                        l9286 3170  
                                      l8830 14D4                                        l8822 14B4  
                                      l8814 1484                                        l8806 1426  
                                      l8750 1240                                        l8742 1230  
                                      l8734 1220                                        l8726 1210  
                                      l8718 11E6                                        l8910 1712  
                                      l8902 16DA                                        l8662 2A4A  
                                      l8654 29AC                                        l9382 2C14  
                                      l9374 2BCC                                        l9366 2B7E  
                                      l9358 2B46                                        l8592 3934  
                                      l8584 38F0                                        l8568 36B4  
                                      l9392 338A                                        l9640 274C  
                                      l9632 2702                                        l9624 26CC  
                                      l9616 268E                                        l9608 2654  
                                      l8648 34B0                                        l9296 31BC  
                                      l9288 318A                                        l8840 150A  
                                      l8832 14E4                                        l8824 14B8  
                                      l8808 1436                                        l8760 1296  
                                      l8752 1244                                        l8744 1234  
                                      l8736 1224                                        l8728 1214  
                                      l8680 1104                                        l8920 1756  
                                      l8912 1716                                        l8904 16DE  
                                      l8656 29BE                                        l9376 2BDE  
                                      l9368 2BA2                                        l8594 3942  
                                      l8586 391E                                        l8578 38E2  
                                      l9394 338E                                        l9386 3364  
                                      l9642 27C2                                        l9634 2704  
                                      l9618 2692                                        l9626 26D2  
                                      l9298 31D6                                        l8850 156C  
                                      l8842 1520                                        l8826 14C8  
                                      l8818 149A                                        l8834 14E6  
                                      l8770 12DE                                        l8762 12A8  
                                      l8746 1238                                        l8738 1228  
                                      l8754 1248                                        l8690 1140  
                                      l8682 1108                                        l8930 178C  
                                      l8922 175E                                        l8906 16F0  
                                      l8914 171E                                        l8666 2AA8  
                                      l8658 29DE                                        l9378 2BF0  
                                      l9580 3640                                        l8588 3922  
                                      l9396 33A6                                        l9388 3364  
                                      l9644 27D2                                        l9636 2722  
                                      l9628 26E4                                        l8860 15F0  
                                      l8852 15A8                                        l8828 14D0  
                                      l8836 14F6                                        l8772 12E2  
                                      l8764 12BE                                        l8756 124C  
                                      l8748 123C                                        l8684 111A  
                                      l8692 1148                                        l8676 10E0  
                                      l8940 17D4                                        l8932 178C  
                                      l8924 1766                                        l8916 1730  
                                      l8908 1700                                        l8668 2AEA  
                                      l9582 3640                                        l8598 3948  
                                      l9398 33D8                                        l9646 27EC  
                                      l9638 273A                                        l8870 1618  
                                      l8862 15F4                                        l8846 1550  
                                      l8854 15AA                                        l8838 14FC  
                                      l8790 1376                                        l8782 133A  
                                      l8774 12EE                                        l8766 12CA  
                                      l8758 1276                                        l8694 115A  
                                      l8686 112A                                        l8678 10F4  
                                      l8950 1826                                        l8942 17E6  
                                      l8918 1746                                        l9590 3CD8  
                                      l9584 3652                                        l8872 1628  
                                      l8864 1602                                        l8856 15BC  
                                      l8848 155E                                        l8792 137A  
                                      l8784 134C                                        l8776 1314  
                                      l8768 12CE                                        l8696 1162  
                                      l8688 113C                                        l8960 1896  
                                      l8952 1836                                        l8944 17F8  
                                      l8936 17A2                                        l8928 177A  
                                      l8880 1652                                        l9592 3D02  
                                      l9586 3656                                        l8874 162C  
                                      l8866 160A                                        l8858 15CC  
                                      l8794 138A                                        l8786 135A  
                                      l8778 1324                                        l8698 1174  
                                      l8970 18DE                                        l8962 18A8  
                                      l8954 1846                                        l8946 1800  
                                      l8938 17C4                                        l8890 169A  
                                      l8882 1662                                        l9594 3D10  
                                      l9596 260E                                        l8868 160E  
                                      l8796 138E                                        l8788 136A  
                                      l8980 1954                                        l8964 18BE  
                                      l8972 18F4                                        l8956 1874  
                                      l8948 1810                                        l8892 169E  
                                      l8884 1666                                        l9598 2614  
                                      l8798 139A                                        l8990 19C8  
                                      l8974 1904                                        l8966 18C4  
                                      l8958 1876                                        l8886 1678  
                                      l8894 16A6                                        l8878 163E  
                                      STR_1 1014                                        l8984 1982  
                                      l8992 19CE                                        l8976 190A  
                                      l8968 18CE                                        l8896 16B8  
                                      l8888 1688                                        STR_2 10B4  
                                      STR_3 1071                                        l8994 19EA  
                                      l8986 1990                                        l8978 1918  
                                      l8898 16C0                                        STR_4 1001  
                                      STR_5 10DC                                        l8996 1A02  
                                      l8988 199E                                        l8998 1A1E  
                                      STR_9 10D4                                        _LATA 000F89  
                                      _LATB 000F8A                                        _LATC 000F8B  
                                      _LATD 000F8C                                        _LATE 000F8D  
                                      i2l32 3E78                                        u9110 391E  
                                      u9030 2C3E                                        u9111 391A  
                                      u9031 2C3A                                        u9120 3932  
                                      u9104 3902                                        u9040 2C5E  
                                      u9200 34A8                                        u9121 392E  
                                      u9105 38FE                                        u9041 2C5A  
                                      u9201 34A4                                        i2l82 3B44  
                                      u9130 3942                                        u9210 29BE  
                                      u9131 393E                                        u9211 29BA  
                                      i2l92 3E22                                        u9300 1174  
                                      u9220 29DE                                        u9301 1170  
                                      u9221 29DA                                        u9150 38B0  
                                      u9054 2C82                                        u9070 3558  
                                      u9310 1190                                        i2l87 3BA6  
                                      u9151 38AC                                        u9055 2C7E  
                                      u9071 3554                                        u9311 118C  
                                      u9160 38C4                                        u9144 3894  
                                      u9064 2CE6                                        u9080 3C0C  
                                      u9400 12DE                                        u9320 11A6  
                                      u9161 38C0                                        u9145 3890  
                                      u9065 2CE2                                        u9081 3C08  
                                      u9401 12DA                                        u9321 11A2  
                                      u9170 38D4                                        u9090 36C8  
                                      u9410 1304                                        u9330 11B6  
                                      u9250 2AC0                                        u9234 2A02  
                                      u9171 38D0                                        u9091 36C4  
                                      u9411 1300                                        u9331 11B2  
                                      u9251 2ABA                                        u9235 29FE  
                                      u9180 3428                                        u9500 1484  
                                      u9420 1314                                        u9340 11FA  
                                      u9260 2AC2                                        u9244 2A66  
                                      u9181 3424                                        u9501 1480  
                                      u9421 1310                                        u9341 11F6  
                                      u9245 2A62                                        u9190 3486  
                                      u9510 14B4                                        u9430 1324  
                                      u9350 1208                                        u9270 1104  
                                      u9191 3482                                        u9511 14B0  
                                      u9431 1320                                        u9351 1204  
                                      u9271 1100                                        u9600 15A8  
                                      u9520 14C8                                        u9440 135A  
                                      u9360 1276                                        u9280 111A  
                                      u9601 15A4                                        u9521 14C4  
                                      u9441 1356                                        u9361 1272  
                                      u9281 1116                                        u9610 15BC  
                                      u9530 14E4                                        u9450 136A  
                                      u9370 1290                                        u9290 112A  
                                      u9611 15B8                                        u9531 14E0  
                                      u9451 1366                                        u9371 128A  
                                      u9291 1126                                        u9620 15CC  
                                      u9540 14F6                                        u9460 138A  
                                      u9380 1292                                        u9700 16F0  
                                      u9621 15C8                                        u9541 14F2  
                                      u9461 1386                                        u9701 16EC  
                                      u9630 15F0                                        u9550 150A  
                                      u9470 13D0                                        u9390 12BE  
                                      u9710 1700                                        u9631 15EC  
                                      u9551 1506                                        u9471 13CC  
                                      u9391 12BA                                        u9711 16FC  
                                      u9640 1602                                        u9560 1520  
                                      u9480 1436                                        u9800 1904  
                                      u9720 1746                                        u9641 15FE  
                                      u9561 151C                                        u9481 1432  
                                      u9801 1900                                        u9721 1742  
                                      u9650 1628                                        u9570 153A  
                                      u9490 1472                                        u9810 1918  
                                      u9730 178C                                        u9651 1624  
                                      u9571 1536                                        u9491 146E  
                                      u9811 1914                                        u9731 1788  
                                      u9580 1550                                        u9820 1954  
                                      u9740 1810                                        u9660 1662  
                                      u9900 2ECA                                        u9581 154C  
                                      u9821 1950                                        u9741 180C  
                                      u9661 165E                                        u9590 156C  
                                      u9830 196C                                        u9750 1836  
                                      u9670 1678                                        u9910 2EF8  
                                      u9591 1568                                        u9831 1968  
                                      u9751 1832                                        u9671 1674  
                                      u9911 2EF4                                        u9840 1982  
                                      u9760 1874                                        u9680 1688  
                                      u9920 2F0C                                        u9841 197E  
                                      u9761 1870                                        u9681 1684  
                                      u9921 2F08                                        u9905 2EC0  
                                      u9850 199E                                        u9770 18A8  
                                      u9690 16DA                                        u9930 2F34  
                                      u9851 199A                                        u9771 18A4  
                                      u9691 16D6                                        u9931 2F30  
                                      u9860 19EA                                        u9780 18BE  
                                      u9940 2F54                                        u9861 19E6  
                                      u9781 18BA                                        u9941 2F50  
                                      u9870 1A1E                                        u9790 18DE  
                                      u9950 2F64                                        _RX9D 007D58  
                                      u9871 1A1A                                        u9791 18DA  
                                      u9951 2F60                                        u9880 1A50  
                                      u9960 2806                                        u9881 1A4C  
                                      u9961 2802                                        u9890 2E96  
                                      u9970 2814                                        u9891 2E92  
                                      u9971 2810                                        u9980 2870  
                                      u9981 286C                                        u9990 28C6  
                                      u9991 28C2                     ??_application_intialize 002E  
          __end_ofi2_EUSART_Async_Read_Data 260E                    _RB4_InterruptHandler_LOW 0036  
                                      _lcd1 0047                                        _blue 0043  
                                      _main 1A6C                    _RB7_InterruptHandler_LOW 00EA  
                                      fsr0h 000FEA                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      fsr2l 000FD9                                        btemp 0056  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0276            GPIO_Pin_Toggle_Logic@_pin_config 002A  
        i2GPIO_Pin_Toggle_Logic@_pin_config 0001                             ___fldiv@new_exp 0105  
                   ?_EUSART_Async_Read_Data 00C7        Bluetooth_Send_Data_Non_Blocking@data 000F  
                              ___param_bank 000000                                fp__usart_isr 0000  
          __size_of_lcd_4bit_send_char_data 0066            __size_ofi2_lcd_4bit_send_command 0062  
                     _lcd_4bit_send_command 36B4                            __end_of_INT1_ISR 3F20  
                __end_ofi2_calc_parity_even 3A1C                                       l10200 1A6C  
                                     l10210 1AF8                                       l10202 1A70  
                                     l10220 1C38                                       l10212 1B38  
                                     l10204 1A8E                                       l10230 1D7C  
                                     l10222 1C78                                       l10214 1B78  
                                     l10206 1A9A                                       l10224 1CB8  
                                     l10216 1BB8                                       l10208 1AB8  
                                     l10410 2D3C                                       l10402 1DD2  
                                     l10226 1CF8                                       l10218 1BF8  
                                     l10234 1DBC                                       l10404 2AD4  
                                     l10228 1D38                                       l10406 218A  
                                     l10408 328C                               ___fltol@sign1 00C8  
                           __end_of___fladd 163E                                       ?_main 0001  
                           __end_of___fldiv 1A6C                                       STR_10 1035  
                                     STR_11 10CB                                       STR_20 1035  
                                     STR_12 1035                                       STR_21 10A8  
                                     STR_13 1080                                       STR_30 1035  
                                     STR_22 1035                                       STR_14 1035  
                                     STR_15 1084                                       STR_31 10D8  
                                     STR_23 1053                                       STR_32 1035  
                                     STR_24 1035                                       STR_16 1035  
                                     STR_25 1058                                       STR_33 109B  
                                     STR_17 1062                                       STR_26 1035  
                                     STR_18 1035                                       STR_34 1044  
                                     STR_35 1044                                       STR_19 10C0  
                                     STR_27 1025                                       STR_28 1035  
                                     STR_29 108E                             __end_of___fltol 2F86  
                                     u10000 2910                                       u10001 290C  
                                     u10010 292E                                       u10011 292A  
                                     u10100 2282                                       u10020 293E  
                                     u10101 227E                                       u10021 293A  
                                     u10110 22A2                                       u10030 294C  
                                     u10111 229E                                       u10031 2948  
                                     u10200 23FE                                       u10120 22B6  
                                     u10040 2986                                       u10201 23FA  
                                     u10121 22B2                                       u10041 2982  
                                     u10130 2306                                       u10050 2994  
                                     u10210 3BBC                                       u10131 2302  
                                     u10051 2990                                       u10211 3BB8  
                                     u10140 231A                                       u10060 2210  
                                     u10220 3A30                                       u10300 3168  
                                     u10141 2316                                       u10061 220C  
                                     u10221 3A2C                                       u10301 3164  
                                     u10150 2352                                       u10070 2222  
                                     u10230 3216                                       u10310 318A  
                                     u10151 234E                                       u10071 221E  
                                     u10231 3212                                       u10311 3186  
                                     u10160 2392                                       u10080 2234  
                                     u10400 386A                                       u10320 31B6  
                                     u10240 1E4E                                       u10161 238E  
                                     u10081 2230                                       u10401 3866  
                                     u10321 31B2                                       u10241 1E4A  
                                     u10170 23A6                                       u10090 224E  
                                     u10330 31D6                                       u10250 34CA  
                                     u10410 2B02                                       u10171 23A2  
                                     u10091 224A                                       u10331 31D2  
                                     u10251 34C6                                       u10411 2AFE  
                                     u10180 23DE                                       u10340 31F8  
                                     u10260 34E8                                       u10420 2B5A  
                                     u10181 23DA                                       u10341 31F4  
                                     u10261 34E4                                       u10421 2B56  
                                     u10190 23F0                                       u10430 3378  
                                     u10270 3500                                       u10350 3A96  
                                     u10191 23EC                                       u10431 3374  
                                     u10271 34FC                                       u10351 3A92  
                                     u10360 3816                                       u10440 338A  
                                     u10280 351C                                       u10361 3812  
                                     u10441 3386                                       u10281 3518  
                                     u10370 3828                                       u10450 33D0  
                                     u10290 353A                                       u10371 3824  
                                     u10291 3536                                       u10380 383A  
                                     u10460 3400                                       u10381 3836  
                                     u10390 385C                                       u10470 3410  
                                     u10391 3858                                       u10471 340C  
                                     u11407 27DE                                       u10800 2722  
                                     u11417 3C26                                       u10457 33C6  
                                     u10801 271E                                       u10730 3652  
                                     u10810 273A                                       u10731 364E  
                                     u10467 33F6                                       u10811 2736  
                                     u10820 274C                                       u10821 2748  
                                     u10750 2650                                       u10751 264C  
                                     u11367 1AA6                                       u10744 3674  
                                     u10760 267A                                       u10745 3670  
                                     u10761 2676                                       u11377 2B62  
                                     u10770 268E                                       u10771 268A  
                                     u11387 2B86                                       u10780 26CC  
                                     u10781 26C8                                       u11397 2BA4  
                                     u10790 26E4                                       u10791 26E0  
                                     i2l228 3362                                       i2l194 3D66  
                                     i2l508 2608                                       i2l509 260C  
                                     i2l614 39F0                                       i2l702 3792  
                                     i2l607 3988                                       i2l471 314E  
                                     i2l199 363E                                       i2l623 3E4E  
                                     i2l616 3A1A                                       i2l609 39B2  
                                     i2l474 2434                                       i2l467 314A  
                                     i2l619 3F20                                       i1l971 0086  
                                     i1l981 01C6                                       i1l973 00C6  
                                     i1l990 0266                                       i2l487 25EC  
                                     i1l983 0206                                       i1l975 0106  
                                     i1l985 0246                                       i1l977 0146  
                                     i1l969 0046                                       i2l690 2E7C  
                                     i1l987 0256                                       i1l979 0186  
                                     i2l950 2FD0                                       i2l960 3040  
                                     i2l952 2FE0                                       i2l954 2FF0  
                                     i2l963 3050                                       i2l956 3010  
                                     i2l948 2FC0                                       i2l958 3030  
                                     _RCREG 000FAE                                       _TMR0H 000FD7  
                                     _TMR0L 000FD6                                       _SPBRG 000FAF  
                                     _PORTA 000F80                                       _PORTB 000F81  
                                     _PORTC 000F82                                       _PORTD 000F83  
                                     _PORTE 000F84                               _EUSART_Rx_ISR 3E24  
                                     _TRISA 000F92                                       _TRISB 000F93  
                                     _TRISC 000F94                                       _TRISD 000F95  
                                     _TRISE 000F96                               _EUSART_Tx_ISR 3F20  
                                     _TXREG 000FAD               ?_lcd_4bits_send_enable_signal 00CA  
                          __end_of_TMR0_ISR 3C8E     async_config_baud_rate_gen@Baudrate_temp 0118  
                            GPS_Service@key 00E2                                       _flags 0046  
                                     _pind1 0054                                       _pind2 0055  
                    ?_lcd_4bits_set_courser 00D2                                       pclath 000FFA  
                              ?_GPS_Service 0001                                       tablat 000FF5  
                lcd_4bits_set_courser@colum 00D5                    __size_of_calc_parity_odd 006E  
                  __size_of_async_Rx_config 00B2       __end_of_lcd_4bit_send_string_data_pos 3412  
    __size_of_lcd_4bit_send_string_data_pos 00AE               _lcd_4bit_send_string_data_pos 3364  
                                     ttemp5 0057                                       ttemp6 005A  
                                     ttemp7 005E                                       status 000FD8  
                                     wtemp8 0057              __end_of_EUSART_Async_Read_Data 2404  
                  __size_of_async_Tx_config 0090       async_config_baud_rate_gen@_eusart_obj 00E2  
               _I2C_DefaultInterruptHandler 00FA                             __initialization 3794  
                       _Rx_config_interrupt 3412                                __end_of_main 1E34  
                _eusart_Rx_InterruptHandler 003C              __size_of_GPIO_Pin_Toggle_Logic 0074  
                       i2lcd_send_4bits@lcd 000B               __end_of_GPIO_Pin_Toggle_Logic 36B4  
                             _lat_registers 008A                                      ??_main 0123  
                             __activetblptr 000003                              ?_EUSART_Rx_ISR 0001  
                            ?_EUSART_Tx_ISR 0001                                   ??_RB4_ISR 0026  
                                 ??_RB5_ISR 0026                                   ??_RB6_ISR 0026  
                                 ??_RB7_ISR 0026                              _Timer0_Handler 3E7A  
                     RB5_ISR@Handler_Select 0026                        ?_Rx_config_interrupt 002A  
                                    _CCPR1L 000FBE                                      _CCPR2L 000FBB  
                   i2_lcd_4bits_set_courser 32B4                                      i1l1056 3F1E  
                                    i1l1069 3F06                                      i1l1078 3EEC  
                                    i1l1087 3ED2                                      i1l1096 3EB8  
                                    i1l3832 3EF0                                      i1l7040 3ED2  
                                    i1l3834 3EF2                                      i1l3842 3ED6  
                                    i1l7034 3EBC                                      i1l7050 3EB8  
                                    i2l1363 3C8C                                      i1l3828 3F1C  
                                    i1l3844 3ED8                                      i1l7036 3EBE  
                                    i1l7044 3EA2                                      i1l3838 3F06  
                                    i1l7046 3EA4                                      i2l1463 3E9E  
                                    i1l3848 3EEC                                      i2l1549 3CD6  
                                    i2l1591 3DE6                                      i1l7800 01B0  
                                    i2l6210 3B46                                      i1l7810 01F0  
                                    i1l7802 01BE                                      i2l5500 2DF4  
                                    i2l6212 3B58                                      i2l6220 32B4  
                                    i1l7820 0230                                      i1l7812 01FE  
                                    i1l7804 01C0                                      i1l7740 0026  
                                    i2l6214 3B5C                                      i2l6230 32FC  
                                    i2l6222 32C6                                      i2l7014 3E24  
                                    i2l7030 3C46                                      i1l7830 0264  
                                    i1l7822 023E                                      i1l7814 0200  
                                    i1l7806 01D4                                      i1l7750 0070  
                                    i1l7742 0034                                      i2l5504 2E50  
                                    i2l6208 3B46                                      i2l6232 3312  
                                    i2l6224 32CA                                      i2l7016 3E36  
                                    i2l7032 3C74                                      i1l7824 0240  
                                    i1l7816 0214                                      i1l7808 01E2  
                                    i1l7760 00B0                                      i1l7752 007E  
                                    i1l7744 0042                                      i2l5610 399C  
                                    i2l5602 395A                                      i2l6242 3E50  
                                    i2l5506 2E7A                                      i2l6226 32D0  
                                    i2l6218 32B4                                      i1l7826 0254  
                                    i1l7818 0222                                      i1l7770 00F0  
                                    i1l7762 00BE                                      i1l7754 0080  
                                    i1l7746 0054                                      i2l5620 39B6  
                                    i2l5612 39AA                                      i2l5604 3986  
                                    i2l6244 3E50                                      i2l5540 3D20  
                                    i2l6228 32E6                                      i2l6236 3328  
                                    i2l6340 3DFE                                      i2l7028 3C44  
                                    i1l7780 0130                                      i1l7772 00FE  
                                    i1l7764 00C0                                      i1l7756 0094  
                                    i1l7748 0062                                      i2l5630 39F2  
                                    i2l5606 398A                                      i2l6246 3E62  
                                    i2l5542 3D32                                      i2l6334 3DE8  
                                    i1l7790 0170                                      i1l7782 013E  
                                    i1l7774 0100                                      i1l7766 00D4  
                                    i1l7758 00A2                                      i2l5640 3A18  
                                    i2l5632 3A02                                      i2l5616 39B0  
                                    i2l5608 399A                                      i2l6248 3E66  
                                    i2l5544 3D36                                      i2l5552 35C6  
                                    i2l6336 3DE8                                      i2l6520 3DC2  
                                    i1l7792 017E                                      i1l7784 0140  
                                    i1l7776 0114                                      i1l7768 00E2  
                                    i2l5634 3A04                                      i2l5626 39C2  
                                    i2l5650 3082                                      i2l5490 2D56  
                                    i2l5546 3D4A                                      i2l5538 3D20  
                                    i2l5554 35C6                                      i2l6338 3DFA  
                                    i2l6530 2430                                      i2l6514 3DAC  
                                    i1l7794 0180                                      i1l7786 0154  
                                    i1l7778 0122                                      i2l5636 3A12  
                                    i2l5628 39EE                                      i2l5660 3112  
                                    i2l5652 309C                                      i2l5644 306C  
                                    i2l5492 2D5A                                      i2l5548 3D52  
                                    i2l5556 35D8                                      i2l6540 24B0  
                                    i2l6532 2442                                      i2l6524 2404  
                                    i2l6516 3DAC                                      i1l7796 0194  
                                    i1l7788 0162                                      i2l5662 3132  
                                    i2l5654 30BC                                      i2l5646 306C  
                                    i2l5494 2D6C                                      i2l5558 35DC  
                                    i2l5590 3AF6                                      i2l6542 24C4  
                                    i2l6550 24F4                                      i2l6534 245C  
                                    i2l6526 240C                                      i2l6518 3DBE  
                                    i1l7798 01A2                                      i2l5656 30DA  
                                    i2l5664 314A                                      i2l5648 307E  
                                    i2l5496 2D8A                                      i2l5592 3AFA  
                                    i2l6560 2544                                      i2l6552 2514  
                                    i2l6544 24D0                                      i2l6536 2476  
                                    i2l6528 241E                                      i2l5658 30FA  
                                    i2l5498 2D92                                      i2l5586 3AE4  
                                    i2l6570 25BE                                      i2l6562 255E  
                                    i2l6554 2528                                      i2l6546 24D8  
                                    i2l6538 2490                                      i2l5596 394E  
                                    i2l5588 3AE4                                      i2l6572 25C6  
                                    i2l6556 2534                                      i2l6564 257E  
                                    i2l6548 24E0                                      i2l6580 25EC  
                                    i2l6582 25FA                                      i2l6574 25CE  
                                    i2l6566 259E                                      i2l6558 253C  
                                    i2l6590 373A                                      i2l7710 2FBC  
                                    i2l6568 25B2                                      i2l6584 3724  
                                    i2l7720 2FEE                                      i2l7712 2FCE  
                                    i2l6586 3724                                      i2l7730 302C  
                                    i2l7706 2FA0                                      i2l6588 3736  
                                    i2l6860 3CCA                                      i2l7732 303E  
                                    i2l7724 2FFE                                      i2l7716 2FDE  
                                    i2l7708 2FAE                                      i2l6854 3E7A  
                                    i2l7726 300C                                      i2l6856 3C8E  
                                    i2l7736 304E                                      i2l7728 301E  
                                    i2l6858 3CB2                              _Movement_State 0040  
                                    _SPBRGH 000FB0                                      _SSPADD 000FC8  
                                    _SSPBUF 000FC9                           i2_calc_parity_odd 394C  
                  calc_parity_odd@l_counter 00C6                            __end_of___xxtofl 29A8  
                  ?i2_GPIO_Pin_Toggle_Logic 0001          lcd_4bit_send_string_data_pos@colum 00DC  
                        ?i2_calc_parity_odd 0001                    i2_EUSART_Async_Read_Data 2404  
                                    _Timer0 00BE                      ?_lcd_4bit_send_command 00CE  
           ??_GPIO_Pin_Direction_Initialize 00C4                                   ??___fladd 010D  
                                 ??___fldiv 00D6                    ??i2_GPIO_Pin_Write_Logic 0004  
                                 ??___fltol 00C4                 __end_of_GPIO_Pin_Initialize 3BF8  
                       ??i2_calc_parity_odd 0001                                      clear_0 37DA  
                                    clear_1 37E6                                      clear_2 37F2  
               ?_EUSART_Async_Transmit_Data 0006                           ?i2_lcd_send_4bits 000B  
                    __end_of_Timer0_Handler 3EA0                                __pdataCOMRAM 0043  
                              __mediumconst 0000                          ??i2_lcd_send_4bits 000E  
     EUSART_Async_Transmit_Data@_eusart_obj 0006                                      tblptrh 000FF7  
                     ??_Rx_config_interrupt 002C                                      tblptrl 000FF6  
                                    tblptru 000FF8                   __end_ofi2_calc_parity_odd 39B4  
                              ___xxtofl@arg 00CA                                ___xxtofl@exp 00C9  
                              ___xxtofl@val 002A                __size_of_lcd_4bit_initialize 013A  
                                __accesstop 0080                     __end_of__initialization 37F8  
  __end_of_Bluetooth_Send_Data_Non_Blocking 3E7A   __size_of_Bluetooth_Send_Data_Non_Blocking 002A  
        ??_Bluetooth_Send_Data_Non_Blocking 0010           ?_Bluetooth_Send_Data_Non_Blocking 000D  
          _Bluetooth_Send_Data_Non_Blocking 3E50                                   ?_INT1_ISR 0001  
                             ___rparam_used 000001                    __end_of_calc_parity_even 394C  
                                ___fltol@f1 002A                            ??_lcd_send_4bits 002E  
                _I2C_Report_Write_Collision 00F6                  ?i2_lcd_4bit_send_char_data 000F  
                   _lcd_4bit_send_char_data 3A1C              ?_lcd_4bit_send_string_data_pos 00D9  
                   i2_lcd_4bit_send_command 3AE4                           ??_calc_parity_odd 002A  
                            __pcstackCOMRAM 0001                           ??_async_Rx_config 002D  
                              __pidataBANK0 3D68                                   ?_TMR0_ISR 0001  
                         ??_async_Tx_config 002C                 i2GPIO_Pin_Write_Logic@logic 0003  
                           ??_EUSART_Rx_ISR 0020  EUSART_Async_Read_Data_Blocking@_eusart_obj 00D4  
                           ??_EUSART_Tx_ISR 0001                    lcd_4bit_send_command@lcd 00CE  
               ?_async_config_baud_rate_gen 00E2                             ?_Timer0_Handler 0001  
                 ??i2_lcd_4bits_set_courser 0017                   calc_parity_even@l_counter 00C6  
              ?_lcd_4bit_send_char_data_pos 001A             __end_ofi2_GPIO_Pin_Toggle_Logic 3794  
                                __pbssBANK0 00E4                                  __pbssBANK1 0125  
                     _INT0_InterruptHandler 00F4                                  ??_INT1_ISR 0026  
         i2lcd_4bits_send_enable_signal@lcd 000B             lcd_4bits_send_enable_signal@lcd 00CA  
            __size_of_application_intialize 0048               __end_of_application_intialize 3D20  
                      __size_of_GPS_Service 01E2                    _eusart_frameerr_CallBack 00FC  
                                _datarecive 0042                 __end_of_InterruptManagerLow 0276  
                      calc_parity_even@data 00C4           __end_ofi2_lcd_4bit_send_char_data 3BA8  
        lcd_4bit_initialize@pin_lcd_counter 00D6                                  ??_TMR0_ISR 000E  
           __size_ofi2_GPIO_Pin_Write_Logic 0128       __end_of_GPIO_Pin_Direction_Initialize 2AEE  
    __size_of_GPIO_Pin_Direction_Initialize 0146               _GPIO_Pin_Direction_Initialize 29A8  
                     _tmr0_InterruptHandler 0030                                     i2l10412 333C  
                                   i2l10414 2E64                                     _RB4_ISR 3EEE  
                                   _RB5_ISR 3ED4                                     _RB6_ISR 3EBA  
                                   _RB7_ISR 3EA0                                   ?___xxtofl 002A  
                 _RB6_InterruptHandler_HIGH 00F0                     ??_lcd_4bits_set_courser 00D6  
             __size_of_InterruptManagerHigh 3064                          i2_calc_parity_even 39B4  
                 ECU_DC_Motor_Stop@dc_motor 000B               __size_of_GPIO_Pin_Write_Logic 012E  
                __size_ofi2_calc_parity_odd 0068              EUSART_Async_Transmit_Data@data 0008  
                        __size_of_usart_isr 004A                              _tris_registers 0094  
                  _RB6_InterruptHandler_LOW 00EE                   ??_lcd_4bit_send_char_data 002E  
                 ??i2_lcd_4bit_send_command 0012                         ?i2_calc_parity_even 0001  
                                   __Hparam 0000                  _eusart_overrunerr_CallBack 00FE  
                                   __Lparam 0000                                     ___fladd 10E0  
                                   ___fldiv 163E                                     ___fltol 2E7E  
                              __psmallconst 1000                                     __pcinit 3794  
                                   __ramtop 1000                                     __ptext0 1A6C  
                                   __ptext1 3CD8                                     __ptext2 2AEE  
                                   __ptext3 3BA8                                     __ptext4 29A8  
                                   __ptext5 3A82                                     __ptext6 1E34  
                                   __ptext7 27F0                                     __ptext8 2E7E  
                                   __ptext9 163E                i2lcd_4bit_send_char_data@lcd 000F  
                                 _T0CONbits 000FD5                        ??i2_calc_parity_even 0001  
                                   _counter 003E                                  ??___xxtofl 00C4  
                                 _T3CONbits 000FB1                                     _gpstemp 0041  
                         _EUSART_Async_Init 3A82                          ?_EUSART_Async_Init 0120  
                    i2_GPIO_Pin_Write_Logic 2D56                  ??i2_EUSART_Async_Read_Data 000A  
                            __pintcode_body 2F86                        end_of_initialization 37F8  
                         lcd_send_4bits@lcd 00CA            i2calc_parity_even@number_of_ones 0004  
            calc_parity_even@number_of_ones 00C5                                     int_func 2F86  
                       ??_EUSART_Async_Init 002E                     ??_lcd_4bit_send_command 002E  
                                 i2u1142_47 3D4C           async_config_baud_rate_gen@ret_val 0117  
                     i2calc_parity_odd@data 0003                i2EUSART_Async_Read_Data@data 0008  
                                 _RCSTAbits 000FAB                            _W3_Motor_Control 004F  
                                   postdec1 000FE5                                     postdec2 000FDD  
      __size_of_lcd_4bit_send_char_data_pos 003C                                     postinc0 000FEE  
                                   postinc2 000FDE                         _lcd_4bit_initialize 2AEE  
                         __end_of_usart_isr 3CD8            __size_ofi2_GPIO_Pin_Toggle_Logic 0070  
           __end_of_lcd_4bit_send_char_data 3A82                       _INT1_InterruptHandler 003A  
                                 _PORTBbits 000F81                       _GPIO_Pin_Toggle_Logic 3640  
                 __end_of_EUSART_Async_Init 3AE4                                 ___fladd@grs 0114  
                lcd_4bit_send_char_data@lcd 00CE              ?_GPIO_Pin_Direction_Initialize 002A  
                             ___xxtofl@sign 00C8                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                       RB4_ISR@Handler_Select 0026  
                     RB7_ISR@Handler_Select 0026                                 ___fldiv@grs 0107  
                               ___fldiv@rem 0100         EUSART_Async_Read_Data_Blocking@data 00D6  
                           _calc_parity_odd 3870                             _async_Rx_config 3150  
           lcd_4bit_send_char_data_pos@data 001E                        ?_lcd_4bit_initialize 00D2  
                               _CCP1CONbits 000FBD                   __size_ofi2_lcd_send_4bits 007A  
                           _async_Tx_config 34B4                                 _CCP2CONbits 000FBA  
                                 _TXSTAbits 000FAC                           ?_calc_parity_even 0001  
                         __size_of_INT1_ISR 0004                 ??i2_lcd_4bit_send_char_data 0012  
                EUSART_Async_Read_Data@data 00C9                          ??_calc_parity_even 002A  
                    async_Rx_config@_rx_obj 00C4               convert_uint16_to_string@F3203 00E4  
                          ??_Timer0_Handler 000E                                 _BAUDCONbits 000FB8  
                             __pidataCOMRAM 3F08                           __size_of_TMR0_ISR 004A  
               __end_of_Rx_config_interrupt 34B4                      async_Rx_config@ret_val 002D  
              __size_of_GPIO_Pin_Initialize 0050                    EUSART_Async_Init@ret_val 0122  
                       start_initialization 3794         i2EUSART_Async_Read_Data@_eusart_obj 0006  
         EUSART_Async_Read_Data@_eusart_obj 00C7                  i2lcd_4bits_set_courser@lcd 0013  
                i2lcd_4bits_set_courser@row 0015             GPIO_Pin_Write_Logic@_pin_config 002A  
         i2GPIO_Pin_Write_Logic@_pin_config 0001                    ??_EUSART_Async_Read_Data 002C  
                     ??_lcd_4bit_initialize 00D4              GPIO_Pin_Initialize@_pin_config 00CA  
                               __pdataBANK0 0080                      ?_GPIO_Pin_Toggle_Logic 002A  
              lcd_4bit_send_command@command 00D0                       __end_of_EUSART_Rx_ISR 3E50  
                                 ___fladd@a 00DE                                   ___fladd@b 00DA  
                __size_of_EUSART_Async_Init 0062                       __end_of_EUSART_Tx_ISR 3F22  
                                 ___fldiv@a 00D2                                   ___fldiv@b 00CE  
                                  ?_RB4_ISR 0001                                    ?_RB5_ISR 0001  
                                  ?_RB6_ISR 0001                                    ?_RB7_ISR 0001  
                               __pbssCOMRAM 002E                     __end_of_calc_parity_odd 38DE  
                 i2_lcd_4bit_send_char_data 3B46                     __end_of_async_Rx_config 3202  
                             __pcstackBANK0 00C4                               __pcstackBANK1 0100  
             i2_EUSART_Async_Read_Data$1571 000D               i2_EUSART_Async_Read_Data$1572 000F  
             i2_EUSART_Async_Read_Data$1573 0011                           __size_of___xxtofl 01B8  
            __size_of_lcd_4bits_set_courser 00B2                     __end_of_async_Tx_config 3544  
             __end_of_lcd_4bits_set_courser 32B4                               ??_GPS_Service 00E0  
              i2lcd_send_4bits@data_command 000D                       _INT2_InterruptHandler 00F2  
            ??_lcd_4bits_send_enable_signal 002E                         calc_parity_odd@data 00C4  
              __end_of_InterruptManagerHigh 306C                   _W1_W5_W2_W6_Motor_Control 0051  
                     _application_intialize 3CD8                                   __pintcode 0008  
              __end_of_GPIO_Pin_Write_Logic 2D56                                    ?___fladd 00DA  
                                  ?___fldiv 00CE                                   __uart_obj 009E  
           GPIO_Pin_Write_Logic@ERRORSTATUS 002D           i2GPIO_Pin_Write_Logic@ERRORSTATUS 000A  
                                  ?___fltol 002A                  Rx_config_interrupt@_rx_obj 002A  
                   i2_GPIO_Pin_Toggle_Logic 3724                                 __pintcodelo 0018  
              __size_of_InterruptManagerLow 025E                     __size_of_lcd_send_4bits 0082  
                  ?i2_lcd_4bits_set_courser 0013                                 __smallconst 1000  
                 _RB4_InterruptHandler_HIGH 0038                  Rx_config_interrupt@ret_val 002C  
                                  _CCP1_Obj 00B4                                    _CCP2_Obj 00AA  
                   ?i2_GPIO_Pin_Write_Logic 0001                   _RB7_InterruptHandler_HIGH 00EC  
       i2EUSART_Async_Read_Data@l_temp_data 0013           EUSART_Async_Read_Data@l_temp_data 00D2  
                    async_Tx_config@_tx_obj 002A              GPIO_Pin_Initialize@ERRORSTATUS 00CC  
           __size_of_EUSART_Async_Read_Data 0210                    _RB5_InterruptHandler_LOW 0032  
                                  _INT1_ISR 3F1C                            i2_lcd_send_4bits 35C6  
                    async_Tx_config@ret_val 002C                  lcd_send_4bits@data_command 00CC  
                                  _IPR1bits 000F9F                                    _IPR2bits 000FA2  
                                  _PIE1bits 000F9D                                    _PIE2bits 000FA0  
    __end_ofi2_lcd_4bits_send_enable_signal 3D68     __size_ofi2_lcd_4bits_send_enable_signal 0048  
            i2_lcd_4bits_send_enable_signal 3D20              __size_of_lcd_4bit_send_command 0070  
                                  i1u244_20 3F02                                    i1u244_21 3EFE  
                                  i1u245_20 3EE8                                    i1u245_21 3EE4  
                       __end_of_GPS_Service 27F0               __end_of_lcd_4bit_send_command 3724  
                                  i1u820_20 0034                                    i1u820_21 0030  
                                  i2u500_40 30FA                                    i2u500_41 30F6  
                                  i1u821_20 0042                                    i1u821_21 003E  
                                  i1u718_20 3ECE                                    i1u830_20 00D4  
                                  i1u822_20 0054                                    i2u501_45 310C  
                                  i1u718_21 3ECA                                    i1u830_21 00D0  
                                  i1u822_21 0050                                    i2u501_47 310E  
                                  i2u502_40 3132                                    i2u502_41 312E  
                                  i1u719_20 3EB4                                    i1u831_20 00E2  
                                  i1u823_20 0062                                    i1u719_21 3EB0  
                                  i1u831_21 00DE                                    i1u823_21 005E  
                                  i1u840_20 0170                                    i1u832_20 00F0  
                                  i1u824_20 0070                                    i2u503_45 3144  
                                  i1u840_21 016C                                    i1u832_21 00EC  
                                  i1u824_21 006C                                    i2u503_47 3146  
                                  i1u841_20 017E                                    i1u833_20 00FE  
                                  i1u825_20 007E                                    i1u841_21 017A  
                                  i1u833_21 00FA                                    i1u825_21 007A  
                                  i2u601_40 3B58                                    i2u601_41 3B54  
                                  _PIR1bits 000F9E                                    i1u850_20 0214  
                                  i1u842_20 0194                                    i1u834_20 0114  
                                  i1u826_20 0094                                    i1u850_21 0210  
                                  i1u842_21 0190                                    i1u834_21 0110  
                                  i1u826_21 0090                                    i2u602_40 32C6  
                                  i2u602_41 32C2                                    i1u851_20 0222  
                                  i1u843_20 01A2                                    i1u835_20 0122  
                                  i1u827_20 00A2                                    i1u851_21 021E  
                                  i1u843_21 019E                                    i1u835_21 011E  
                                  i1u827_21 009E                                    i2u603_40 3E62  
                                  i2u603_41 3E5E                                    _PIR2bits 000FA1  
                                  i1u852_20 0230                                    i1u844_20 01B0  
                                  i1u836_20 0130                                    i1u828_20 00B0  
                                  i1u852_21 022C                                    i1u844_21 01AC  
                                  i1u836_21 012C                                    i1u828_21 00AC  
                                  i1u853_20 023E                                    i1u845_20 01BE  
                                  i1u837_20 013E                                    i1u829_20 00BE  
                                  i1u853_21 023A                                    i1u845_21 01BA  
                                  i1u837_21 013A                                    i1u829_21 00BA  
                                  i2u621_40 3DFA                                    i2u621_41 3DF6  
                                  i1u854_20 0254                                    i1u846_20 01D4  
                                  i1u838_20 0154                                    i1u854_21 0250  
                                  i1u846_21 01D0                                    i1u838_21 0150  
                                  i1u855_20 0264                                    i1u847_20 01E2  
                                  i1u839_20 0162                                    i1u855_21 0260  
                                  i1u847_21 01DE                                    i1u839_21 015E  
                                  i1u848_20 01F0                                    i1u848_21 01EC  
                                  i2u712_40 3E36                                    i2u712_41 3E32  
                                  i1u849_20 01FE                                    i1u849_21 01FA  
                                  i2u490_40 399A                                    i2u650_40 2442  
                                  i2u713_48 3E3C                                    i2u810_40 2FBC  
                                  i2u490_41 3996                                    i2u650_41 243E  
                                  i2u713_49 3E4E                                    i2u810_41 2FB8  
                                  i2u491_40 39AA                                    i2u475_40 2D6C  
                                  i2u483_40 3D32                                    i2u651_40 245C  
                                  i2u811_40 2FCE                                    i2u491_41 39A6  
                                  i2u475_41 2D68                                    i2u483_41 3D2E  
                                  i2u651_41 2458                                    i2u811_41 2FCA  
                                  i2u476_40 2D8A                                    i2u484_40 35D8  
                                  i2u660_40 25E8                                    i2u652_40 2490  
                                  i2u716_40 3C74                                    i2u812_40 2FDE  
                                  i2u476_41 2D86                                    i2u484_41 35D4  
                                  i2u660_41 25E4                                    i2u652_41 248C  
                                  i2u716_41 3C70                                    i2u812_41 2FDA  
                                  i2u492_44 39D4                                    i2u492_45 39D0  
                                  i2u493_40 39EE                                    i2u661_40 25FA  
                                  i2u653_40 24B0                                    i2u813_40 2FEE  
                                  i2u493_41 39EA                                    i2u661_41 25F6  
                                  i2u653_41 24AC                                    i2u813_41 2FEA  
                                  i2u477_44 2DAE                                    i2u477_45 2DAA  
                                  i2u494_40 3A02                                    i2u662_40 2608  
                                  i2u654_40 24C4                                    i2u717_48 3C7A  
                                  i2u814_40 2FFE                                    i2u494_41 39FE  
                                  i2u662_41 2604                                    i2u654_41 24C0  
                                  i2u717_49 3C8C                                    i2u814_41 2FFA  
                                  i2u478_44 2E10                                    i2u478_45 2E0C  
                                  i2u495_40 3A12                                    i2u487_40 3AF6  
                                  i2u655_40 2514                                    i2u663_40 3736  
                                  i2u647_40 3DBE                                    i2u815_40 300C  
                                  i2u495_41 3A0E                                    i2u487_41 3AF2  
                                  i2u655_41 2510                                    i2u663_41 3732  
                                  i2u647_41 3DBA                                    i2u815_41 3008  
                                  i2u496_40 307E                                    i2u656_40 2528  
                                  i2u648_40 241E                                    i2u816_40 301E  
                                  i2u496_41 307A                                    i2u656_41 2524  
                                  i2u648_41 241A                                    i2u816_41 301A  
                                  i2u488_44 396C                                    i2u664_44 3756  
                                  i2u488_45 3968                                    i2u664_45 3752  
                                  i2u489_40 3986                                    i2u497_40 309C  
                                  i2u657_40 255E                                    i2u649_40 2430  
                                  i2u817_40 302C                                    i2u809_40 2FAE  
                                  i2u489_41 3982                                    i2u497_41 3098  
                                  i2u657_41 255A                                    i2u649_41 242C  
                                  i2u817_41 3028                                    i2u809_41 2FAA  
                                  i2u498_40 30BC                                    i2u658_40 259E  
                                  i2u818_40 303E                                    i2u498_41 30B8  
                                  i2u658_41 259A                                    i2u818_41 303A  
                                  i2u659_40 25B2                                    i2u819_40 304E  
                                  i2u659_41 25AE                                    i2u819_41 304A  
                                  i2u499_45 30D4                                    i2u499_47 30D6  
                                  _RCONbits 000FD0                                    _TMR0_ISR 3C44  
                          _W4_Motor_Control 004D                 _I2C_Report_Receive_Overflow 00F8  
              ??_EUSART_Async_Transmit_Data 000A              __end_ofi2_GPIO_Pin_Write_Logic 2E7E  
            lcd_4bit_send_char_data_pos@lcd 001A                 __size_ofi2_calc_parity_even 0068  
            lcd_4bit_send_char_data_pos@row 001C                                   _usart_isr 3C8E  
                          ?_calc_parity_odd 0001                            __size_of_RB4_ISR 001A  
                          __size_of_RB5_ISR 001A                            __size_of_RB6_ISR 001A  
                          ?_async_Rx_config 00C4                            __size_of_RB7_ISR 001A  
               i2calc_parity_even@l_counter 0005         __end_of_lcd_4bit_send_char_data_pos 3E24  
               _lcd_4bit_send_char_data_pos 3DE8                            ?_async_Tx_config 002A  
                               _INTCON2bits 000FF1                                 _INTCON3bits 000FF0  
                  ?_lcd_4bit_send_char_data 00CE                                   copy_data0 37A8  
                                 copy_data1 37C8                    ?i2_lcd_4bit_send_command 000F  
               _EUSART_Async_Read_Data$1571 00CC                 _EUSART_Async_Read_Data$1572 00CE  
               _EUSART_Async_Read_Data$1573 00D0               ??_lcd_4bit_send_char_data_pos 001F  
                    ?_application_intialize 0001                         _GPIO_Pin_Initialize 3BA8  
                                  __Hrparam 0000            lcd_4bit_send_string_data_pos@lcd 00D9  
          lcd_4bit_send_string_data_pos@row 00DB         __size_of_EUSART_Async_Transmit_Data 00E4  
          lcd_4bit_send_string_data_pos@str 00DD                                    __Lrparam 0000  
                 ??i2_GPIO_Pin_Toggle_Logic 0003           __size_ofi2_EUSART_Async_Read_Data 020A  
           __end_ofi2_lcd_4bits_set_courser 3364                   ?i2_EUSART_Async_Read_Data 0006  
                    _EUSART_Async_Read_Data 21F4                            __size_of___fladd 055E  
                          __size_of___fldiv 042E                            __size_of___fltol 0108  
                 GPIO_Pin_Write_Logic@logic 002C                               _preloaded_val 002E  
              ??_async_config_baud_rate_gen 0115                   __size_of_calc_parity_even 006E  
                      ?_GPIO_Pin_Initialize 00CA                                    ___xxtofl 27F0  
                                ?_usart_isr 0001                                    _datasend 0045  
                     RB6_ISR@Handler_Select 0026                        _InterruptManagerHigh 0008  
                  lcd_4bits_set_courser@lcd 00D2             _async_config_baud_rate_gen$4701 011C  
                  lcd_4bits_set_courser@row 00D4                                    __ptext10 10E0  
                                  __ptext11 34B4                                    __ptext20 3BF8  
                                  __ptext12 3150                                    __ptext21 2C28  
                                  __ptext13 3412                                    __ptext30 3ED4  
                                  __ptext22 3802                                    __ptext14 260E  
                                  __ptext31 3EEE                                    __ptext23 21F4  
                                  __ptext15 3364                                    __ptext40 3724  
                                  __ptext32 3F1C                                    __ptext24 3870  
                                  __ptext16 3202                                    __ptext41 2404  
                                  __ptext25 38DE                                    __ptext17 36B4  
                                  __ptext50 306C                                    __ptext42 3DE8  
                                  __ptext34 3C44                                    __ptext26 3640  
                                  __ptext18 3A1C                                    __ptext51 394C  
                                  __ptext43 32B4                                    __ptext35 3E7A  
                                  __ptext19 3544                                    __ptext52 39B4  
                                  __ptext44 3AE4                                    __ptext36 3DAC  
                                  __ptext28 3EA0                                    __ptext53 0000  
                                  __ptext45 3B46                                    __ptext37 3F20  
                                  __ptext29 3EBA                                    __ptext46 35C6  
                                  __ptext38 3E24                                    __ptext47 3D20  
                                  __ptext39 3C8E                                    __ptext48 2D56  
                                  __ptext49 3E50   Bluetooth_Send_Data_Non_Blocking@_uart_obj 000D  
             i2lcd_4bit_send_char_data@data 0011                        _GPIO_Pin_Write_Logic 2C28  
                         _ECU_DC_Motor_Stop 3DAC                                 _GPS_Service 260E  
        __size_ofi2_lcd_4bit_send_char_data 0062                                    _latitude 0132  
                             __size_of_main 03C8                          ?_ECU_DC_Motor_Stop 000B  
                                  _longtude 0125                                    _selector 0053  
       __size_of_async_config_baud_rate_gen 03C0     __end_of_EUSART_Async_Read_Data_Blocking 3870  
  __size_of_EUSART_Async_Read_Data_Blocking 006E           ??_EUSART_Async_Read_Data_Blocking 002E  
          ?_EUSART_Async_Read_Data_Blocking 00D4             _EUSART_Async_Read_Data_Blocking 3802  
                   ??_GPIO_Pin_Toggle_Logic 00C4                         ??_ECU_DC_Motor_Stop 000D  
                                  int$flags 0056                              _lcd_send_4bits 3544  
                     ??_GPIO_Pin_Initialize 002E                                  _INTCONbits 000FF2  
           i2calc_parity_odd@number_of_ones 0004               calc_parity_odd@number_of_ones 00C5  
               __end_of_lcd_4bit_initialize 2C28             __end_ofi2_lcd_4bit_send_command 3B46  
                     ?_InterruptManagerHigh 0001                __size_of_Rx_config_interrupt 00A2  
                 __end_of_ECU_DC_Motor_Stop 3DE8                       ?_GPIO_Pin_Write_Logic 002A  
                                  intlevel1 0000                                    intlevel2 0000  
            i2lcd_4bit_send_command@command 0011                         _InterruptManagerLow 0018  
                i2calc_parity_odd@l_counter 0005    GPIO_Pin_Direction_Initialize@_pin_config 002A  
                                _RCSTA1bits 000FAB                      i2calc_parity_even@data 0003  
                    __end_of_lcd_send_4bits 35C6          __end_of_EUSART_Async_Transmit_Data 3150  
                _EUSART_Async_Transmit_Data 306C                        ?_InterruptManagerLow 0001  
                  __end_ofi2_lcd_send_4bits 3640                              _port_registers 0080  
                               ??_usart_isr 0020                                 _SSPCON1bits 000FC6  
                               _SSPCON2bits 000FC5                     __size_of_Timer0_Handler 0026  
                         fp__Timer0_Handler 0000             ??_lcd_4bit_send_string_data_pos 002E  
                             ___fladd@signs 0111            __size_ofi2_lcd_4bits_set_courser 00B0  
                     _lcd_4bits_set_courser 3202                                ___fladd@aexp 0112  
                              ___fladd@bexp 0113                EUSART_Async_Init@_eusart_obj 0120  
               lcd_4bit_send_char_data@data 00D0                      __size_of_EUSART_Rx_ISR 002C  
                    __size_of_EUSART_Tx_ISR 0002                      lcd_4bit_initialize@lcd 00D2  
