

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 26 01:22:53 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110  0000                     
   111                           ; Version 2.20
   112                           ; Generated 05/05/2020 GMT
   113                           ; 
   114                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F46K20 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     
   146                           	psect	idataCOMRAM
   147  004FAA                     __pidataCOMRAM:
   148                           	callstack 0
   149                           
   150                           ;initializer for _datasend
   151  004FAA  77                 	db	119
   152                           
   153                           ;initializer for _blue
   154  004FAB  01                 	db	1
   155                           
   156                           ;initializer for _gps
   157  004FAC  01                 	db	1
   158                           
   159                           ;initializer for _flags
   160  004FAD  0F                 	db	15
   161                           
   162                           ;initializer for _stepper_base
   163  004FAE  1B                 	db	27
   164  004FAF  1A                 	db	26
   165                           
   166                           ;initializer for _selector
   167  004FB0  1C                 	db	28
   168                           
   169                           ;initializer for _TEST_PIN
   170  004FB1  10                 	db	16
   171                           
   172                           	psect	idataBANK0
   173  004D5E                     __pidataBANK0:
   174                           	callstack 0
   175                           
   176                           ;initializer for _port_registers
   177  004D5E  80                 	db	128
   178  004D5F  0F                 	db	15
   179  004D60  81                 	db	129
   180  004D61  0F                 	db	15
   181  004D62  82                 	db	130
   182  004D63  0F                 	db	15
   183  004D64  83                 	db	131
   184  004D65  0F                 	db	15
   185  004D66  84                 	db	132
   186  004D67  0F                 	db	15
   187                           
   188                           ;initializer for _lat_registers
   189  004D68  89                 	db	137
   190  004D69  0F                 	db	15
   191  004D6A  8A                 	db	138
   192  004D6B  0F                 	db	15
   193  004D6C  8B                 	db	139
   194  004D6D  0F                 	db	15
   195  004D6E  8C                 	db	140
   196  004D6F  0F                 	db	15
   197  004D70  8D                 	db	141
   198  004D71  0F                 	db	15
   199                           
   200                           ;initializer for _tris_registers
   201  004D72  92                 	db	146
   202  004D73  0F                 	db	15
   203  004D74  93                 	db	147
   204  004D75  0F                 	db	15
   205  004D76  94                 	db	148
   206  004D77  0F                 	db	15
   207  004D78  95                 	db	149
   208  004D79  0F                 	db	15
   209  004D7A  96                 	db	150
   210  004D7B  0F                 	db	15
   211                           
   212                           ;initializer for _i2c_obj
   213  004D7C  86A0               	dw	34464
   214  004D7E  0001               	dw	1
   215  004D80  08                 	db	8
   216  004D81  00                 	db	0
   217  004D82  03                 	db	3
   218                           
   219                           ;initializer for _servo_driver_obj
   220  004D83  80                 	db	128
   221  004D84  79                 	db	121
   222  004D85  21                 	db	33
   223  004D86  04                 	db	4
   224                           
   225                           ;initializer for _ultrasonic
   226  004D87  0B                 	db	11
   227  004D88  4A                 	db	74
   228                           
   229                           ;initializer for _W2_W4_W6_Motor_Control
   230  004D89  19                 	db	25
   231                           
   232                           ;initializer for _W1_W3_W5_Motor_Control
   233  004D8A  18                 	db	24
   234                           
   235                           	psect	idataBANK1
   236  004F00                     __pidataBANK1:
   237                           	callstack 0
   238                           
   239                           ;initializer for __uart_obj
   240  004F00  2580               	dw	9600
   241  004F02  04                 	db	4
   242  004F03  2C                 	db	low _usart_isr
   243  004F04  4D                 	db	high _usart_isr
   244  004F05  00                 	db	0
   245  004F06  00                 	db	0
   246  004F07  00                 	db	0
   247  004F08  00                 	db	0
   248  004F09  09                 	db	9
   249  004F0A  00                 	db	0
   250  004F0B  00                 	db	0
   251                           
   252                           ;initializer for _CCP2_Obj
   253  004F0C  01                 	db	1
   254  004F0D  02                 	db	2
   255  004F0E  00                 	db	0
   256  004F0F  11                 	db	17
   257  004F10  00                 	db	0
   258  004F11  01F4               	dw	500
   259  004F13  0000               	dw	0
   260  004F15  F9                 	db	249
   261  004F16  00                 	db	0
   262  004F17  0F                 	db	15
   263                           
   264                           ;initializer for _CCP1_Obj
   265  004F18  00                 	db	0
   266  004F19  02                 	db	2
   267  004F1A  00                 	db	0
   268  004F1B  12                 	db	18
   269  004F1C  00                 	db	0
   270  004F1D  01F4               	dw	500
   271  004F1F  0000               	dw	0
   272  004F21  F9                 	db	249
   273  004F22  00                 	db	0
   274  004F23  0F                 	db	15
   275  0000                     _TMR2	set	4044
   276  0000                     _T2CONbits	set	4042
   277  0000                     _TMR1L	set	4046
   278  0000                     _TMR1H	set	4047
   279  0000                     _T1CONbits	set	4045
   280  0000                     _INTCON2bits	set	4081
   281  0000                     _SSPBUF	set	4041
   282  0000                     _SSPSTATbits	set	4039
   283  0000                     _SSPADD	set	4040
   284  0000                     _SSPCON2bits	set	4037
   285  0000                     _SSPCON1bits	set	4038
   286  0000                     _SPBRGH	set	4016
   287  0000                     _SPBRG	set	4015
   288  0000                     _RCONbits	set	4048
   289  0000                     _RCREG	set	4014
   290  0000                     _TXREG	set	4013
   291  0000                     _TRISCbits	set	3988
   292  0000                     _TXSTA1bits	set	4012
   293  0000                     _PR2	set	4043
   294  0000                     _ADCON1bits	set	4033
   295  0000                     _ADRESL	set	4035
   296  0000                     _ADRESH	set	4036
   297  0000                     _TRISD	set	3989
   298  0000                     _TRISB	set	3987
   299  0000                     _TRISE	set	3990
   300  0000                     _PORTDbits	set	3971
   301  0000                     _LATDbits	set	3980
   302  0000                     _TRISDbits	set	3989
   303  0000                     _TRISBbits	set	3987
   304  0000                     _PORTBbits	set	3969
   305  0000                     _RCSTA1bits	set	4011
   306  0000                     _TXSTAbits	set	4012
   307  0000                     _TRISC	set	3988
   308  0000                     _RX9D	set	32088
   309  0000                     _ADCON2bits	set	4032
   310  0000                     _ADCON0bits	set	4034
   311  0000                     _PORTA	set	3968
   312  0000                     _LATA	set	3977
   313  0000                     _TRISA	set	3986
   314  0000                     _PIE1bits	set	3997
   315  0000                     _RCSTAbits	set	4011
   316  0000                     _T3CONbits	set	4017
   317  0000                     _CCP2CONbits	set	4026
   318  0000                     _CCP1CONbits	set	4029
   319  0000                     _CCPR1L	set	4030
   320  0000                     _CCPR2L	set	4027
   321  0000                     _BAUDCONbits	set	4024
   322  0000                     _PIR2bits	set	4001
   323  0000                     _PIE2bits	set	4000
   324  0000                     _IPR1bits	set	3999
   325  0000                     _PIR1bits	set	3998
   326  0000                     _WDTCONbits	set	4049
   327  0000                     _T0CONbits	set	4053
   328  0000                     _INTCON3bits	set	4080
   329  0000                     _INTCONbits	set	4082
   330  0000                     _LATE	set	3981
   331  0000                     _LATD	set	3980
   332  0000                     _LATC	set	3979
   333  0000                     _LATB	set	3978
   334  0000                     _PORTE	set	3972
   335  0000                     _PORTD	set	3971
   336  0000                     _PORTC	set	3970
   337  0000                     _PORTB	set	3969
   338  0000                     _TMR0H	set	4055
   339  0000                     _TMR0L	set	4054
   340                           
   341                           	psect	smallconst
   342  001000                     __psmallconst:
   343                           	callstack 0
   344  001000  00                 	db	0
   345  001001  41                 	db	65	;'A'
   346  001002  54                 	db	84	;'T'
   347  001003  2B                 	db	43
   348  001004  55                 	db	85	;'U'
   349  001005  41                 	db	65	;'A'
   350  001006  52                 	db	82	;'R'
   351  001007  54                 	db	84	;'T'
   352  001008  3A                 	db	58	;':'
   353  001009  39                 	db	57	;'9'
   354  00100A  36                 	db	54	;'6'
   355  00100B  30                 	db	48	;'0'
   356  00100C  30                 	db	48	;'0'
   357  00100D  2C                 	db	44
   358  00100E  30                 	db	48	;'0'
   359  00100F  2C                 	db	44
   360  001010  30                 	db	48	;'0'
   361  001011  0D                 	db	13
   362  001012  0A                 	db	10
   363  001013  00                 	db	0
   364  001014  41                 	db	65	;'A'
   365  001015  54                 	db	84	;'T'
   366  001016  2B                 	db	43
   367  001017  52                 	db	82	;'R'
   368  001018  4E                 	db	78	;'N'
   369  001019  41                 	db	65	;'A'
   370  00101A  4D                 	db	77	;'M'
   371  00101B  45                 	db	69	;'E'
   372  00101C  3A                 	db	58	;':'
   373  00101D  52                 	db	82	;'R'
   374  00101E  6F                 	db	111	;'o'
   375  00101F  62                 	db	98	;'b'
   376  001020  6F                 	db	111	;'o'
   377  001021  74                 	db	116	;'t'
   378  001022  0D                 	db	13
   379  001023  0A                 	db	10
   380  001024  00                 	db	0
   381  001025  41                 	db	65	;'A'
   382  001026  54                 	db	84	;'T'
   383  001027  2B                 	db	43
   384  001028  50                 	db	80	;'P'
   385  001029  53                 	db	83	;'S'
   386  00102A  57                 	db	87	;'W'
   387  00102B  44                 	db	68	;'D'
   388  00102C  3A                 	db	58	;':'
   389  00102D  31                 	db	49	;'1'
   390  00102E  32                 	db	50	;'2'
   391  00102F  33                 	db	51	;'3'
   392  001030  34                 	db	52	;'4'
   393  001031  0D                 	db	13
   394  001032  0A                 	db	10
   395  001033  00                 	db	0
   396  001034  41                 	db	65	;'A'
   397  001035  54                 	db	84	;'T'
   398  001036  2B                 	db	43
   399  001037  52                 	db	82	;'R'
   400  001038  4F                 	db	79	;'O'
   401  001039  4C                 	db	76	;'L'
   402  00103A  45                 	db	69	;'E'
   403  00103B  3A                 	db	58	;':'
   404  00103C  30                 	db	48	;'0'
   405  00103D  0D                 	db	13
   406  00103E  0A                 	db	10
   407  00103F  00                 	db	0
   408  001040                     STR_9:
   409  001040  25                 	db	37
   410  001041  66                 	db	102	;'f'
   411  001042  00                 	db	0
   412  001043                     STR_5:
   413  001043  25                 	db	37
   414  001044  69                 	db	105	;'i'
   415  001045  00                 	db	0
   416  001046  00                 	db	0	; dummy byte at the end
   417  0000                     
   418                           ; #config settings
   419                           
   420                           	psect	cinit
   421  004378                     __pcinit:
   422                           	callstack 0
   423  004378                     start_initialization:
   424                           	callstack 0
   425  004378                     __initialization:
   426                           	callstack 0
   427                           
   428                           ; Initialize objects allocated to BANK1 (36 bytes)
   429                           ; load TBLPTR registers with __pidataBANK1
   430  004378  0E00               	movlw	low __pidataBANK1
   431  00437A  6EF6               	movwf	tblptrl,c
   432  00437C  0E4F               	movlw	high __pidataBANK1
   433  00437E  6EF7               	movwf	tblptrh,c
   434  004380  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   435  004382  6EF8               	movwf	tblptru,c
   436  004384  EE01  F029         	lfsr	0,__pdataBANK1
   437  004388  EE10 F024          	lfsr	1,36
   438  00438C                     copy_data0:
   439  00438C  0009               	tblrd		*+
   440  00438E  CFF5 FFEE          	movff	tablat,postinc0
   441  004392  50E5               	movf	postdec1,w,c
   442  004394  50E1               	movf	fsr1l,w,c
   443  004396  E1FA               	bnz	copy_data0
   444                           
   445                           ; Initialize objects allocated to BANK0 (45 bytes)
   446                           ; load TBLPTR registers with __pidataBANK0
   447  004398  0E5E               	movlw	low __pidataBANK0
   448  00439A  6EF6               	movwf	tblptrl,c
   449  00439C  0E4D               	movlw	high __pidataBANK0
   450  00439E  6EF7               	movwf	tblptrh,c
   451  0043A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   452  0043A2  6EF8               	movwf	tblptru,c
   453  0043A4  EE00  F0A8         	lfsr	0,__pdataBANK0
   454  0043A8  EE10 F02D          	lfsr	1,45
   455  0043AC                     copy_data1:
   456  0043AC  0009               	tblrd		*+
   457  0043AE  CFF5 FFEE          	movff	tablat,postinc0
   458  0043B2  50E5               	movf	postdec1,w,c
   459  0043B4  50E1               	movf	fsr1l,w,c
   460  0043B6  E1FA               	bnz	copy_data1
   461                           
   462                           ; Initialize objects allocated to COMRAM (8 bytes)
   463                           ; load TBLPTR registers with __pidataCOMRAM
   464  0043B8  0EAA               	movlw	low __pidataCOMRAM
   465  0043BA  6EF6               	movwf	tblptrl,c
   466  0043BC  0E4F               	movlw	high __pidataCOMRAM
   467  0043BE  6EF7               	movwf	tblptrh,c
   468  0043C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   469  0043C2  6EF8               	movwf	tblptru,c
   470  0043C4  EE00  F03A         	lfsr	0,__pdataCOMRAM
   471  0043C8  EE10 F008          	lfsr	1,8
   472  0043CC                     copy_data2:
   473  0043CC  0009               	tblrd		*+
   474  0043CE  CFF5 FFEE          	movff	tablat,postinc0
   475  0043D2  50E5               	movf	postdec1,w,c
   476  0043D4  50E1               	movf	fsr1l,w,c
   477  0043D6  E1FA               	bnz	copy_data2
   478                           
   479                           ; Clear objects allocated to BANK1 (41 bytes)
   480  0043D8  EE01  F000         	lfsr	0,__pbssBANK1
   481  0043DC  0E29               	movlw	41
   482  0043DE                     clear_0:
   483  0043DE  6AEE               	clrf	postinc0,c
   484  0043E0  06E8               	decf	wreg,f,c
   485  0043E2  E1FD               	bnz	clear_0
   486                           
   487                           ; Clear objects allocated to BANK0 (43 bytes)
   488  0043E4  EE00  F0D5         	lfsr	0,__pbssBANK0
   489  0043E8  0E2B               	movlw	43
   490  0043EA                     clear_1:
   491  0043EA  6AEE               	clrf	postinc0,c
   492  0043EC  06E8               	decf	wreg,f,c
   493  0043EE  E1FD               	bnz	clear_1
   494                           
   495                           ; Clear objects allocated to COMRAM (21 bytes)
   496  0043F0  EE00  F025         	lfsr	0,__pbssCOMRAM
   497  0043F4  0E15               	movlw	21
   498  0043F6                     clear_2:
   499  0043F6  6AEE               	clrf	postinc0,c
   500  0043F8  06E8               	decf	wreg,f,c
   501  0043FA  E1FD               	bnz	clear_2
   502  0043FC                     end_of_initialization:
   503                           	callstack 0
   504  0043FC                     __end_of__initialization:
   505                           	callstack 0
   506  0043FC  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   507  0043FE  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   508  004400  0100               	movlb	0
   509  004402  EF81  F010         	goto	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMRAM
   512  000025                     __pbssCOMRAM:
   513                           	callstack 0
   514  000025                     _Timer1_PreLoaded_Value_Store:
   515                           	callstack 0
   516  000025                     	ds	2
   517  000027                     _INT1_InterruptHandler:
   518                           	callstack 0
   519  000027                     	ds	2
   520  000029                     _eusart_Rx_InterruptHandler:
   521                           	callstack 0
   522  000029                     	ds	2
   523  00002B                     _Timer2_PreLoaded_Value_Store:
   524                           	callstack 0
   525  00002B                     	ds	1
   526  00002C                     _i:
   527                           	callstack 0
   528  00002C                     	ds	1
   529  00002D                     _counter:
   530                           	callstack 0
   531  00002D                     	ds	1
   532  00002E                     _stepper_pos:
   533                           	callstack 0
   534  00002E                     	ds	1
   535  00002F                     _servo4Pos:
   536                           	callstack 0
   537  00002F                     	ds	1
   538  000030                     _servo3Pos:
   539                           	callstack 0
   540  000030                     	ds	1
   541  000031                     _servo2Pos:
   542                           	callstack 0
   543  000031                     	ds	1
   544  000032                     _servo1Pos:
   545                           	callstack 0
   546  000032                     	ds	1
   547  000033                     _Checksum:
   548                           	callstack 0
   549  000033                     	ds	1
   550  000034                     _T_Integral:
   551                           	callstack 0
   552  000034                     	ds	1
   553  000035                     _T_Decimal:
   554                           	callstack 0
   555  000035                     	ds	1
   556  000036                     _RH_Integral:
   557                           	callstack 0
   558  000036                     	ds	1
   559  000037                     _RH_Decimal:
   560                           	callstack 0
   561  000037                     	ds	1
   562  000038                     _datarecive:
   563                           	callstack 0
   564  000038                     	ds	1
   565  000039                     _gpstemp:
   566                           	callstack 0
   567  000039                     	ds	1
   568                           
   569                           	psect	dataCOMRAM
   570  00003A                     __pdataCOMRAM:
   571                           	callstack 0
   572  00003A                     _datasend:
   573                           	callstack 0
   574  00003A                     	ds	1
   575  00003B                     _blue:
   576                           	callstack 0
   577  00003B                     	ds	1
   578  00003C                     _gps:
   579                           	callstack 0
   580  00003C                     	ds	1
   581  00003D                     _flags:
   582                           	callstack 0
   583  00003D                     	ds	1
   584  00003E                     _stepper_base:
   585                           	callstack 0
   586  00003E                     	ds	2
   587  000040                     _selector:
   588                           	callstack 0
   589  000040                     	ds	1
   590  000041                     _TEST_PIN:
   591                           	callstack 0
   592  000041                     	ds	1
   593                           
   594                           	psect	bssBANK0
   595  0000D5                     __pbssBANK0:
   596                           	callstack 0
   597  0000D5                     _Timer1_Interrupt_Handler:
   598                           	callstack 0
   599  0000D5                     	ds	2
   600  0000D7                     _preloaded_val:
   601                           	callstack 0
   602  0000D7                     	ds	2
   603  0000D9                     _RB7_InterruptHandler_LOW:
   604                           	callstack 0
   605  0000D9                     	ds	2
   606  0000DB                     _RB7_InterruptHandler_HIGH:
   607                           	callstack 0
   608  0000DB                     	ds	2
   609  0000DD                     _RB6_InterruptHandler_LOW:
   610                           	callstack 0
   611  0000DD                     	ds	2
   612  0000DF                     _RB6_InterruptHandler_HIGH:
   613                           	callstack 0
   614  0000DF                     	ds	2
   615  0000E1                     _RB5_InterruptHandler_LOW:
   616                           	callstack 0
   617  0000E1                     	ds	2
   618  0000E3                     _RB5_InterruptHandler_HIGH:
   619                           	callstack 0
   620  0000E3                     	ds	2
   621  0000E5                     _RB4_InterruptHandler_LOW:
   622                           	callstack 0
   623  0000E5                     	ds	2
   624  0000E7                     _RB4_InterruptHandler_HIGH:
   625                           	callstack 0
   626  0000E7                     	ds	2
   627  0000E9                     _INT2_InterruptHandler:
   628                           	callstack 0
   629  0000E9                     	ds	2
   630  0000EB                     _INT0_InterruptHandler:
   631                           	callstack 0
   632  0000EB                     	ds	2
   633  0000ED                     	ds	2
   634  0000EF                     	ds	2
   635  0000F1                     	ds	2
   636  0000F3                     _eusart_frameerr_CallBack:
   637                           	callstack 0
   638  0000F3                     	ds	2
   639  0000F5                     _eusart_overrunerr_CallBack:
   640                           	callstack 0
   641  0000F5                     	ds	2
   642  0000F7                     _Movement_State:
   643                           	callstack 0
   644  0000F7                     	ds	1
   645  0000F8                     _timer0:
   646                           	callstack 0
   647  0000F8                     	ds	4
   648  0000FC                     _distance:
   649                           	callstack 0
   650  0000FC                     	ds	4
   651                           
   652                           	psect	dataBANK0
   653  0000A8                     __pdataBANK0:
   654                           	callstack 0
   655  0000A8                     _port_registers:
   656                           	callstack 0
   657  0000A8                     	ds	10
   658  0000B2                     _lat_registers:
   659                           	callstack 0
   660  0000B2                     	ds	10
   661  0000BC                     _tris_registers:
   662                           	callstack 0
   663  0000BC                     	ds	10
   664  0000C6                     _i2c_obj:
   665                           	callstack 0
   666  0000C6                     	ds	7
   667  0000CD                     _servo_driver_obj:
   668                           	callstack 0
   669  0000CD                     	ds	4
   670  0000D1                     _ultrasonic:
   671                           	callstack 0
   672  0000D1                     	ds	2
   673  0000D3                     _W2_W4_W6_Motor_Control:
   674                           	callstack 0
   675  0000D3                     	ds	1
   676  0000D4                     _W1_W3_W5_Motor_Control:
   677                           	callstack 0
   678  0000D4                     	ds	1
   679                           
   680                           	psect	bssBANK1
   681  000100                     __pbssBANK1:
   682                           	callstack 0
   683  000100                     	ds	9
   684  000109                     	ds	6
   685  00010F                     _longtude:
   686                           	callstack 0
   687  00010F                     	ds	13
   688  00011C                     _latitude:
   689                           	callstack 0
   690  00011C                     	ds	13
   691                           
   692                           	psect	dataBANK1
   693  000129                     __pdataBANK1:
   694                           	callstack 0
   695  000129                     __uart_obj:
   696                           	callstack 0
   697  000129                     	ds	12
   698  000135                     _CCP2_Obj:
   699                           	callstack 0
   700  000135                     	ds	12
   701  000141                     _CCP1_Obj:
   702                           	callstack 0
   703  000141                     	ds	12
   704                           
   705                           	psect	cstackBANK1
   706  00014D                     __pcstackBANK1:
   707                           	callstack 0
   708  00014D                     ___fladd@signs:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x0
   712  00014D                     	ds	1
   713  00014E                     ___fladd@aexp:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x1
   717  00014E                     	ds	1
   718  00014F                     ___fladd@bexp:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x2
   722  00014F                     	ds	1
   723  000150                     ___fladd@grs:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x3
   727  000150                     	ds	1
   728  000151                     ?___fltol:
   729                           	callstack 0
   730  000151                     ___fltol@f1:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x4
   734  000151                     	ds	4
   735  000155                     ??___fltol:
   736                           
   737                           ; 1 bytes @ 0x8
   738  000155                     	ds	4
   739  000159                     Servo_SetAngle@i2c_obj:
   740                           	callstack 0
   741  000159                     CCP_PWM_Set_Duty@_ccp_obj:
   742                           	callstack 0
   743  000159                     async_config_baud_rate_gen@_eusart_obj:
   744                           	callstack 0
   745  000159                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0xC
   749  000159                     	ds	2
   750  00015B                     ??_async_config_baud_rate_gen:
   751  00015B                     CCP_PWM_Set_Duty@_duty:
   752                           	callstack 0
   753  00015B                     Servo_SetAngle@servo_driver_obj:
   754                           	callstack 0
   755  00015B                     MSSP_I2C_Init@i2c_obj:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xE
   759  00015B                     	ds	1
   760  00015C                     ??_CCP_PWM_Set_Duty:
   761                           
   762                           ; 1 bytes @ 0xF
   763  00015C                     	ds	1
   764  00015D                     Servo_SetAngle@servo_no:
   765                           	callstack 0
   766  00015D                     async_config_baud_rate_gen@ret_val:
   767                           	callstack 0
   768  00015D                     ServoDriver_Init@i2c_obj:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x10
   772  00015D                     	ds	1
   773  00015E                     Servo_SetAngle@angle:
   774                           	callstack 0
   775  00015E                     async_config_baud_rate_gen@Baudrate_temp:
   776                           	callstack 0
   777  00015E                     _CCP_PWM_Set_Duty$5750:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x11
   781  00015E                     	ds	1
   782  00015F                     ServoDriver_Init@servo_driver_obj:
   783                           	callstack 0
   784  00015F                     Servo_SetAngle@angle_in_reg:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x12
   788  00015F                     	ds	2
   789  000161                     Servo_SetAngle@reg_addrees:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x14
   793  000161                     	ds	1
   794  000162                     CCP_PWM_Set_Duty@l_duty_temp:
   795                           	callstack 0
   796  000162                     _async_config_baud_rate_gen$5751:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x15
   800  000162                     	ds	4
   801  000166                     EUSART_Async_Init@_eusart_obj:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x19
   805  000166                     	ds	2
   806  000168                     ??_main:
   807                           
   808                           ; 1 bytes @ 0x1B
   809  000168                     	ds	2
   810                           
   811                           	psect	cstackBANK0
   812  000060                     __pcstackBANK0:
   813                           	callstack 0
   814  000060                     ??_GPIO_Pin_Write_Logic:
   815  000060                     ??_GPIO_Pin_Read_Logic:
   816  000060                     ??_GPIO_Pin_Direction_Initialize:
   817  000060                     ??_HAL_Timer0_Init:
   818  000060                     ??_HAL_Timer0_Read_Val:
   819  000060                     ??___xxtofl:
   820  000060                     CCP_Capture_Mode_Config@ret:
   821                           	callstack 0
   822  000060                     CCP_Compare_Mode_Config@ret:
   823                           	callstack 0
   824  000060                     PCA_Write_Reg@i2c_obj:
   825                           	callstack 0
   826  000060                     EUSART_Async_Read_Data@_eusart_obj:
   827                           	callstack 0
   828  000060                     Get_Temp_HUM@RH_Decimal:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x0
   832  000060                     	ds	2
   833  000062                     PCA_Write_Reg@slave_address:
   834                           	callstack 0
   835  000062                     EUSART_Async_Read_Data@data:
   836                           	callstack 0
   837  000062                     Get_Temp_HUM@RH_Integral:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x2
   841  000062                     	ds	1
   842  000063                     PCA_Write_Reg@reg_address:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x3
   846  000063                     	ds	1
   847  000064                     PCA_Write_Reg@data:
   848                           	callstack 0
   849  000064                     ___xxtofl@sign:
   850                           	callstack 0
   851  000064                     _EUSART_Async_Read_Data$2031:
   852                           	callstack 0
   853  000064                     Get_Temp_HUM@T_Decimal:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x4
   857  000064                     	ds	1
   858  000065                     ___xxtofl@exp:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x5
   862  000065                     	ds	1
   863  000066                     ??_Ecu_Stepper_Step:
   864  000066                     ECU_DC_Motor_Init@dc_motor:
   865                           	callstack 0
   866  000066                     Ecu_Stepper_Init@stepper:
   867                           	callstack 0
   868  000066                     CCP_Init@_ccp_obj:
   869                           	callstack 0
   870  000066                     _EUSART_Async_Read_Data$2032:
   871                           	callstack 0
   872  000066                     Get_Temp_HUM@T_Integral:
   873                           	callstack 0
   874  000066                     Ultra_Sonic_Init@ultrasonic_object:
   875                           	callstack 0
   876  000066                     ___xxtofl@arg:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x6
   880  000066                     	ds	2
   881  000068                     stepper_move_one_deg_cw@stepper:
   882                           	callstack 0
   883  000068                     stepper_move_one_deg_ccw@stepper:
   884                           	callstack 0
   885  000068                     _EUSART_Async_Read_Data$2033:
   886                           	callstack 0
   887  000068                     Get_Temp_HUM@Checksum:
   888                           	callstack 0
   889  000068                     Ultra_Sonic_Init@_tmr0_config:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x8
   893  000068                     	ds	2
   894  00006A                     ?___fldiv:
   895                           	callstack 0
   896  00006A                     stepper_move_one_deg_cw@i:
   897                           	callstack 0
   898  00006A                     stepper_move_one_deg_ccw@i:
   899                           	callstack 0
   900  00006A                     EUSART_Async_Read_Data@l_temp_data:
   901                           	callstack 0
   902  00006A                     ___fldiv@b:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0xA
   906  00006A                     	ds	2
   907  00006C                     EUSART_Async_Read_Data_Blocking@_eusart_obj:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0xC
   911  00006C                     	ds	2
   912  00006E                     EUSART_Async_Read_Data_Blocking@data:
   913                           	callstack 0
   914  00006E                     ___fldiv@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0xE
   918  00006E                     	ds	2
   919  000070                     ??_GPS_Service:
   920                           
   921                           ; 1 bytes @ 0x10
   922  000070                     	ds	2
   923  000072                     ??___fldiv:
   924  000072                     GPS_Service@key:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x12
   928  000072                     	ds	4
   929  000076                     ___fldiv@rem:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x16
   933  000076                     	ds	4
   934  00007A                     ___fldiv@sign:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x1A
   938  00007A                     	ds	1
   939  00007B                     ___fldiv@new_exp:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x1B
   943  00007B                     	ds	2
   944  00007D                     ___fldiv@grs:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x1D
   948  00007D                     	ds	4
   949  000081                     ___fldiv@bexp:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x21
   953  000081                     	ds	1
   954  000082                     ___fldiv@aexp:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x22
   958  000082                     	ds	1
   959  000083                     ?___flmul:
   960                           	callstack 0
   961  000083                     Get_Distance@ultrasonic_object:
   962                           	callstack 0
   963  000083                     ___flmul@b:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x23
   967  000083                     	ds	2
   968  000085                     Get_Distance@_tmr0_config:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x25
   972  000085                     	ds	2
   973  000087                     Get_Distance@distance:
   974                           	callstack 0
   975  000087                     ___flmul@a:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x27
   979  000087                     	ds	2
   980  000089                     Get_Distance@timer_val:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x29
   984  000089                     	ds	2
   985  00008B                     ??___flmul:
   986  00008B                     Get_Distance@logic:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x2B
   990  00008B                     	ds	4
   991  00008F                     ___flmul@sign:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x2F
   995  00008F                     	ds	1
   996  000090                     ___flmul@aexp:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x30
  1000  000090                     	ds	1
  1001  000091                     ___flmul@grs:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x31
  1005  000091                     	ds	4
  1006  000095                     ___flmul@bexp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x35
  1010  000095                     	ds	1
  1011  000096                     ___flmul@prod:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x36
  1015  000096                     	ds	4
  1016  00009A                     ___flmul@temp:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x3A
  1020  00009A                     	ds	2
  1021  00009C                     ?___fladd:
  1022                           	callstack 0
  1023  00009C                     ___fladd@b:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x3C
  1027  00009C                     	ds	4
  1028  0000A0                     ___fladd@a:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x40
  1032  0000A0                     	ds	4
  1033  0000A4                     ??___fladd:
  1034                           
  1035                           ; 1 bytes @ 0x44
  1036  0000A4                     	ds	4
  1037                           
  1038                           	psect	cstackCOMRAM
  1039  000001                     __pcstackCOMRAM:
  1040                           	callstack 0
  1041  000001                     ??i2_calc_parity_odd:
  1042  000001                     ??i2_calc_parity_even:
  1043  000001                     i2GPIO_Pin_Toggle_Logic@_pin_config:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x0
  1047  000001                     	ds	2
  1048  000003                     ??i2_GPIO_Pin_Toggle_Logic:
  1049  000003                     i2calc_parity_odd@data:
  1050                           	callstack 0
  1051  000003                     i2calc_parity_even@data:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x2
  1055  000003                     	ds	1
  1056  000004                     i2calc_parity_odd@number_of_ones:
  1057                           	callstack 0
  1058  000004                     i2calc_parity_even@number_of_ones:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x3
  1062  000004                     	ds	1
  1063  000005                     i2calc_parity_odd@l_counter:
  1064                           	callstack 0
  1065  000005                     i2calc_parity_even@l_counter:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x4
  1069  000005                     	ds	1
  1070  000006                     EUSART_Async_Transmit_Data@_eusart_obj:
  1071                           	callstack 0
  1072  000006                     i2EUSART_Async_Read_Data@_eusart_obj:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x5
  1076  000006                     	ds	2
  1077  000008                     EUSART_Async_Transmit_Data@data:
  1078                           	callstack 0
  1079  000008                     i2EUSART_Async_Read_Data@data:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x7
  1083  000008                     	ds	2
  1084  00000A                     ??_EUSART_Async_Transmit_Data:
  1085  00000A                     ??i2_EUSART_Async_Read_Data:
  1086                           
  1087                           ; 1 bytes @ 0x9
  1088  00000A                     	ds	2
  1089  00000C                     Bluetooth_Send_Data_Non_Blocking@_uart_obj:
  1090                           	callstack 0
  1091  00000C                     i2_EUSART_Async_Read_Data$2031:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0xB
  1095  00000C                     	ds	2
  1096  00000E                     Bluetooth_Send_Data_Non_Blocking@data:
  1097                           	callstack 0
  1098  00000E                     i2_EUSART_Async_Read_Data$2032:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0xD
  1102  00000E                     	ds	1
  1103  00000F                     
  1104                           ; 1 bytes @ 0xE
  1105  00000F                     	ds	1
  1106  000010                     i2_EUSART_Async_Read_Data$2033:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xF
  1110  000010                     	ds	2
  1111  000012                     i2EUSART_Async_Read_Data@l_temp_data:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x11
  1115  000012                     	ds	2
  1116  000014                     ??_InterruptManagerHigh:
  1117                           
  1118                           ; 1 bytes @ 0x13
  1119  000014                     	ds	6
  1120  00001A                     RB4_ISR@Handler_Select:
  1121                           	callstack 0
  1122  00001A                     RB5_ISR@Handler_Select:
  1123                           	callstack 0
  1124  00001A                     RB6_ISR@Handler_Select:
  1125                           	callstack 0
  1126  00001A                     RB7_ISR@Handler_Select:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x19
  1130  00001A                     	ds	1
  1131  00001B                     ??_InterruptManagerLow:
  1132                           
  1133                           ; 1 bytes @ 0x1A
  1134  00001B                     	ds	3
  1135  00001E                     ??_calc_parity_even:
  1136  00001E                     ??_calc_parity_odd:
  1137  00001E                     ??_DHT11_Start:
  1138  00001E                     ?___xxtofl:
  1139                           	callstack 0
  1140  00001E                     CCP_PWM_Start@_ccp_obj:
  1141                           	callstack 0
  1142  00001E                     CCP_Interrupt_Config@_ccp_obj:
  1143                           	callstack 0
  1144  00001E                     CCP_Mode_Timer_Select@_ccp_obj:
  1145                           	callstack 0
  1146  00001E                     async_Tx_config@_tx_obj:
  1147                           	callstack 0
  1148  00001E                     Rx_config_interrupt@_rx_obj:
  1149                           	callstack 0
  1150  00001E                     GPIO_Pin_Direction_Initialize@_pin_config:
  1151                           	callstack 0
  1152  00001E                     GPIO_Pin_Write_Logic@_pin_config:
  1153                           	callstack 0
  1154  00001E                     GPIO_Pin_Read_Logic@_pin_config:
  1155                           	callstack 0
  1156  00001E                     GPIO_Pin_Toggle_Logic@_pin_config:
  1157                           	callstack 0
  1158  00001E                     MSSP_I2C_Master_Send_Start@i2c_obj:
  1159                           	callstack 0
  1160  00001E                     MSSP_I2C_Master_Send_Stop@i2c_obj:
  1161                           	callstack 0
  1162  00001E                     MSSP_I2C_Master_Write_Blocking@i2c_obj:
  1163                           	callstack 0
  1164  00001E                     I2C_Slave_Mode_Clock_Configurations@i2c_obj:
  1165                           	callstack 0
  1166  00001E                     HAL_Timer0_Read_Val@_tmr0_config:
  1167                           	callstack 0
  1168  00001E                     HAL_Timer0_Write_Val@_tmr0_config:
  1169                           	callstack 0
  1170  00001E                     DHT11_Read_Data@data:
  1171                           	callstack 0
  1172  00001E                     Timer2_Init@_timer2:
  1173                           	callstack 0
  1174  00001E                     ___xxtofl@val:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x1D
  1178  00001E                     	ds	2
  1179  000020                     ??_Timer2_Init:
  1180  000020                     ??_I2C_Slave_Mode_Clock_Configurations:
  1181  000020                     ??_DHT11_Read_Data:
  1182  000020                     ??_GPIO_Pin_Toggle_Logic:
  1183  000020                     async_Tx_config@ret_val:
  1184                           	callstack 0
  1185  000020                     Rx_config_interrupt@ret_val:
  1186                           	callstack 0
  1187  000020                     calc_parity_odd@data:
  1188                           	callstack 0
  1189  000020                     calc_parity_even@data:
  1190                           	callstack 0
  1191  000020                     GPIO_Pin_Direction_Initialize@ERRORSTATUS:
  1192                           	callstack 0
  1193  000020                     GPIO_Pin_Write_Logic@logic:
  1194                           	callstack 0
  1195  000020                     MSSP_I2C_Master_Write_Blocking@i2c_data:
  1196                           	callstack 0
  1197  000020                     GPIO_Pin_Read_Logic@logic:
  1198                           	callstack 0
  1199  000020                     HAL_Timer0_Read_Val@result:
  1200                           	callstack 0
  1201  000020                     HAL_Timer0_Write_Val@val:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x1F
  1205  000020                     	ds	1
  1206  000021                     calc_parity_odd@number_of_ones:
  1207                           	callstack 0
  1208  000021                     calc_parity_even@number_of_ones:
  1209                           	callstack 0
  1210  000021                     GPIO_Pin_Write_Logic@ERRORSTATUS:
  1211                           	callstack 0
  1212  000021                     DHT11_Read_Data@i:
  1213                           	callstack 0
  1214  000021                     CCP_PWM_Mode_Config@_ccp_obj:
  1215                           	callstack 0
  1216  000021                     CCP_Capture_Mode_Config@_ccp_obj:
  1217                           	callstack 0
  1218  000021                     CCP_Compare_Mode_Config@_ccp_obj:
  1219                           	callstack 0
  1220  000021                     async_Rx_config@_rx_obj:
  1221                           	callstack 0
  1222  000021                     MSSP_I2C_Master_Write_Blocking@_ack:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x20
  1226  000021                     	ds	1
  1227  000022                     calc_parity_odd@l_counter:
  1228                           	callstack 0
  1229  000022                     calc_parity_even@l_counter:
  1230                           	callstack 0
  1231  000022                     HAL_Timer0_Read_Val@l_high_byte:
  1232                           	callstack 0
  1233  000022                     HAL_Timer0_Write_Val@ret_value:
  1234                           	callstack 0
  1235  000022                     ___fltol@sign1:
  1236                           	callstack 0
  1237  000022                     ECU_DC_Motor_Run_Left@dc_motor:
  1238                           	callstack 0
  1239  000022                     ECU_DC_Motor_Run_Right@dc_motor:
  1240                           	callstack 0
  1241  000022                     Ecu_Stepper_Step@stepper:
  1242                           	callstack 0
  1243  000022                     GPIO_Pin_Initialize@_pin_config:
  1244                           	callstack 0
  1245  000022                     send_trig_pulse@ultrasonic_object:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x21
  1249  000022                     	ds	1
  1250  000023                     ??_EUSART_Async_Read_Data:
  1251  000023                     ??_CCP_Capture_Mode_Config:
  1252  000023                     ??_CCP_Compare_Mode_Config:
  1253  000023                     PCA_Write_Reg@ack:
  1254                           	callstack 0
  1255  000023                     async_Rx_config@ret_val:
  1256                           	callstack 0
  1257  000023                     HAL_Timer0_Read_Val@l_low_byte:
  1258                           	callstack 0
  1259  000023                     ___fltol@exp1:
  1260                           	callstack 0
  1261  000023                     HAL_Timer0_Init@_tmr0_config:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x22
  1265  000023                     	ds	1
  1266  000024                     ??_I2C_Master_Mode_Clock_Configurations:
  1267  000024                     EUSART_Async_Init@ret_val:
  1268                           	callstack 0
  1269  000024                     GPIO_Pin_Initialize@ERRORSTATUS:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x23
  1273  000024                     	ds	1
  1274  000025                     
  1275                           ; 1 bytes @ 0x24
  1276 ;;
  1277 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1278 ;;
  1279 ;; *************** function _main *****************
  1280 ;; Defined at:
  1281 ;;		line 212 in file "application.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  2  1895[None  ] int 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;Total ram usage:        2 bytes
  1300 ;; Hardware stack levels required when called: 14
  1301 ;; This function calls:
  1302 ;;		_GPIO_Pin_Toggle_Logic
  1303 ;;		_GPS_Service
  1304 ;;		_Get_Distance
  1305 ;;		_Get_Temp_HUM
  1306 ;;		_Robot_Move_Backward
  1307 ;;		_Robot_Move_Forward
  1308 ;;		_Robot_Steer_Left_Backward
  1309 ;;		_Robot_Steer_Left_Forward
  1310 ;;		_Robot_Steer_Right_Backward
  1311 ;;		_Robot_Steer_Right_Forward
  1312 ;;		_Robot_Steer_Stop
  1313 ;;		_Servo_SetAngle
  1314 ;;		_application_intialize
  1315 ;;		_stepper_move_one_deg_ccw
  1316 ;;		_stepper_move_one_deg_cw
  1317 ;; This function is called by:
  1318 ;;		Startup code after reset
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text0
  1323  002102                     __ptext0:
  1324                           	callstack 0
  1325  002102                     _main:
  1326                           	callstack 17
  1327  002102                     
  1328                           ;application.c: 214:     application_intialize();
  1329  002102  ECF8  F025         	call	_application_intialize	;wreg free
  1330                           
  1331                           ;application.c: 215:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
  1332  002106  0E41               	movlw	low _TEST_PIN
  1333  002108  6E1E               	movwf	GPIO_Pin_Toggle_Logic@_pin_config^0,c
  1334  00210A  0E00               	movlw	high _TEST_PIN
  1335  00210C  6E1F               	movwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
  1336  00210E  ECF7  F022         	call	_GPIO_Pin_Toggle_Logic	;wreg free
  1337  002112  EF87  F011         	goto	l11866
  1338  002116                     l11776:
  1339                           
  1340                           ; BSR set to: 1
  1341                           ;application.c: 222:                 Robot_Steer_Stop();
  1342  002116  EC6D  F027         	call	_Robot_Steer_Stop	;wreg free
  1343                           
  1344                           ;application.c: 223:                 break;
  1345  00211A  EF87  F011         	goto	l11866
  1346  00211E                     l11778:
  1347                           
  1348                           ; BSR set to: 1
  1349                           ;application.c: 226:                 Robot_Steer_Left_Forward();
  1350  00211E  ECB3  F01D         	call	_Robot_Steer_Left_Forward	;wreg free
  1351                           
  1352                           ;application.c: 227:                 break;
  1353  002122  EF87  F011         	goto	l11866
  1354  002126                     l11780:
  1355                           
  1356                           ; BSR set to: 1
  1357                           ;application.c: 230:                 Robot_Move_Forward();
  1358  002126  EC13  F01E         	call	_Robot_Move_Forward	;wreg free
  1359                           
  1360                           ;application.c: 231:                 break;
  1361  00212A  EF87  F011         	goto	l11866
  1362  00212E                     l11782:
  1363                           
  1364                           ; BSR set to: 1
  1365                           ;application.c: 234:                 Robot_Steer_Right_Forward();
  1366  00212E  EC53  F01D         	call	_Robot_Steer_Right_Forward	;wreg free
  1367                           
  1368                           ;application.c: 235:                 break;
  1369  002132  EF87  F011         	goto	l11866
  1370  002136                     l11784:
  1371                           
  1372                           ; BSR set to: 1
  1373                           ;application.c: 244:                 Robot_Steer_Left_Backward();
  1374  002136  ECE0  F027         	call	_Robot_Steer_Left_Backward	;wreg free
  1375                           
  1376                           ;application.c: 245:                 break;
  1377  00213A  EF87  F011         	goto	l11866
  1378  00213E                     l11786:
  1379                           
  1380                           ; BSR set to: 1
  1381                           ;application.c: 248:                 Robot_Move_Backward();
  1382  00213E  EC73  F01E         	call	_Robot_Move_Backward	;wreg free
  1383                           
  1384                           ;application.c: 249:                 break;
  1385  002142  EF87  F011         	goto	l11866
  1386  002146                     l11788:
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;application.c: 252:                 Robot_Steer_Right_Backward();
  1390  002146  ECDF  F027         	call	_Robot_Steer_Right_Backward	;wreg free
  1391                           
  1392                           ;application.c: 253:                 break;
  1393  00214A  EF87  F011         	goto	l11866
  1394  00214E                     l11790:
  1395                           
  1396                           ; BSR set to: 1
  1397                           ;application.c: 263:                  stepper_move_one_deg_cw(&stepper_base);
  1398  00214E  0E3E               	movlw	low _stepper_base
  1399  002150  0100               	movlb	0	; () banked
  1400  002152  6F68               	movwf	stepper_move_one_deg_cw@stepper& (0+255),b
  1401  002154  0E00               	movlw	high _stepper_base
  1402  002156  6F69               	movwf	(stepper_move_one_deg_cw@stepper+1)& (0+255),b
  1403  002158  ECD9  F024         	call	_stepper_move_one_deg_cw	;wreg free
  1404                           
  1405                           ;application.c: 264:                  break;
  1406  00215C  EF87  F011         	goto	l11866
  1407  002160                     l11792:
  1408                           
  1409                           ; BSR set to: 1
  1410                           ;application.c: 268:                 stepper_move_one_deg_ccw(&stepper_base);
  1411  002160  0E3E               	movlw	low _stepper_base
  1412  002162  0100               	movlb	0	; () banked
  1413  002164  6F68               	movwf	stepper_move_one_deg_ccw@stepper& (0+255),b
  1414  002166  0E00               	movlw	high _stepper_base
  1415  002168  6F69               	movwf	(stepper_move_one_deg_ccw@stepper+1)& (0+255),b
  1416  00216A  EC0C  F025         	call	_stepper_move_one_deg_ccw	;wreg free
  1417                           
  1418                           ;application.c: 269:                 break;
  1419  00216E  EF87  F011         	goto	l11866
  1420  002172                     l11794:
  1421                           
  1422                           ; BSR set to: 1
  1423                           ;application.c: 273:                   servo1Pos--;
  1424  002172  0632               	decf	_servo1Pos^0,f,c
  1425  002174                     
  1426                           ; BSR set to: 1
  1427                           ;application.c: 274:                   if(servo1Pos<1)
  1428  002174  5032               	movf	_servo1Pos^0,w,c
  1429  002176  A4D8               	btfss	status,2,c
  1430  002178  EFC0  F010         	goto	u12591
  1431  00217C  EFC2  F010         	goto	u12590
  1432  002180                     u12591:
  1433  002180  EFC4  F010         	goto	l11800
  1434  002184                     u12590:
  1435  002184                     
  1436                           ; BSR set to: 1
  1437                           ;application.c: 275:                   {;application.c: 276:                     servo1P
      +                          os=1;
  1438  002184  0E01               	movlw	1
  1439  002186  6E32               	movwf	_servo1Pos^0,c
  1440  002188                     l11800:
  1441                           
  1442                           ; BSR set to: 1
  1443                           ;application.c: 278:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_9 , servo1Pos );
  1444  002188  0EC6               	movlw	low _i2c_obj
  1445  00218A  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1446  00218C  0E00               	movlw	high _i2c_obj
  1447  00218E  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1448  002190  0ECD               	movlw	low _servo_driver_obj
  1449  002192  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1450  002194  0E00               	movlw	high _servo_driver_obj
  1451  002196  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1452  002198  0E08               	movlw	8
  1453  00219A  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1454  00219C  C032  F15E         	movff	_servo1Pos,Servo_SetAngle@angle
  1455  0021A0  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  1456                           
  1457                           ;application.c: 280:                   break;
  1458  0021A4  EF87  F011         	goto	l11866
  1459  0021A8                     l11802:
  1460                           
  1461                           ; BSR set to: 1
  1462                           ;application.c: 284:                  servo1Pos++;
  1463  0021A8  2A32               	incf	_servo1Pos^0,f,c
  1464  0021AA                     
  1465                           ; BSR set to: 1
  1466                           ;application.c: 285:                  if(servo1Pos>180)
  1467  0021AA  0EB4               	movlw	180
  1468  0021AC  6432               	cpfsgt	_servo1Pos^0,c
  1469  0021AE  EFDB  F010         	goto	u12601
  1470  0021B2  EFDD  F010         	goto	u12600
  1471  0021B6                     u12601:
  1472  0021B6  EFC4  F010         	goto	l11800
  1473  0021BA                     u12600:
  1474  0021BA                     
  1475                           ; BSR set to: 1
  1476                           ;application.c: 286:                  {;application.c: 287:                    servo1Pos
      +                          =180;
  1477  0021BA  0EB4               	movlw	180
  1478  0021BC  6E32               	movwf	_servo1Pos^0,c
  1479  0021BE  EFC4  F010         	goto	l11800
  1480  0021C2                     l11810:
  1481                           
  1482                           ; BSR set to: 1
  1483                           ;application.c: 294:                   servo2Pos--;
  1484  0021C2  0631               	decf	_servo2Pos^0,f,c
  1485  0021C4                     
  1486                           ; BSR set to: 1
  1487                           ;application.c: 295:                   if(servo2Pos<1)
  1488  0021C4  5031               	movf	_servo2Pos^0,w,c
  1489  0021C6  A4D8               	btfss	status,2,c
  1490  0021C8  EFE8  F010         	goto	u12611
  1491  0021CC  EFEA  F010         	goto	u12610
  1492  0021D0                     u12611:
  1493  0021D0  EFEC  F010         	goto	l11816
  1494  0021D4                     u12610:
  1495  0021D4                     
  1496                           ; BSR set to: 1
  1497                           ;application.c: 296:                   {;application.c: 297:                     servo2P
      +                          os=1;
  1498  0021D4  0E01               	movlw	1
  1499  0021D6  6E31               	movwf	_servo2Pos^0,c
  1500  0021D8                     l11816:
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;application.c: 299:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_10 , servo2Pos );
  1504  0021D8  0EC6               	movlw	low _i2c_obj
  1505  0021DA  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1506  0021DC  0E00               	movlw	high _i2c_obj
  1507  0021DE  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1508  0021E0  0ECD               	movlw	low _servo_driver_obj
  1509  0021E2  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1510  0021E4  0E00               	movlw	high _servo_driver_obj
  1511  0021E6  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1512  0021E8  0E09               	movlw	9
  1513  0021EA  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1514  0021EC  C031  F15E         	movff	_servo2Pos,Servo_SetAngle@angle
  1515  0021F0  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  1516                           
  1517                           ;application.c: 300:                   break;
  1518  0021F4  EF87  F011         	goto	l11866
  1519  0021F8                     l11818:
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;application.c: 304:                   servo2Pos++;
  1523  0021F8  2A31               	incf	_servo2Pos^0,f,c
  1524  0021FA                     
  1525                           ; BSR set to: 1
  1526                           ;application.c: 305:                   if(servo2Pos>180)
  1527  0021FA  0EB4               	movlw	180
  1528  0021FC  6431               	cpfsgt	_servo2Pos^0,c
  1529  0021FE  EF03  F011         	goto	u12621
  1530  002202  EF05  F011         	goto	u12620
  1531  002206                     u12621:
  1532  002206  EFEC  F010         	goto	l11816
  1533  00220A                     u12620:
  1534  00220A                     
  1535                           ; BSR set to: 1
  1536                           ;application.c: 306:                   {;application.c: 307:                     servo2P
      +                          os=180;
  1537  00220A  0EB4               	movlw	180
  1538  00220C  6E31               	movwf	_servo2Pos^0,c
  1539  00220E  EFEC  F010         	goto	l11816
  1540  002212                     l11826:
  1541                           
  1542                           ; BSR set to: 1
  1543                           ;application.c: 314:                   servo3Pos--;
  1544  002212  0630               	decf	_servo3Pos^0,f,c
  1545  002214                     
  1546                           ; BSR set to: 1
  1547                           ;application.c: 315:                   if(servo3Pos<1)
  1548  002214  5030               	movf	_servo3Pos^0,w,c
  1549  002216  A4D8               	btfss	status,2,c
  1550  002218  EF10  F011         	goto	u12631
  1551  00221C  EF12  F011         	goto	u12630
  1552  002220                     u12631:
  1553  002220  EF14  F011         	goto	l11832
  1554  002224                     u12630:
  1555  002224                     
  1556                           ; BSR set to: 1
  1557                           ;application.c: 316:                   {;application.c: 317:                     servo3P
      +                          os=1;
  1558  002224  0E01               	movlw	1
  1559  002226  6E30               	movwf	_servo3Pos^0,c
  1560  002228                     l11832:
  1561                           
  1562                           ; BSR set to: 1
  1563                           ;application.c: 319:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_11 , servo3Pos );
  1564  002228  0EC6               	movlw	low _i2c_obj
  1565  00222A  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1566  00222C  0E00               	movlw	high _i2c_obj
  1567  00222E  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1568  002230  0ECD               	movlw	low _servo_driver_obj
  1569  002232  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1570  002234  0E00               	movlw	high _servo_driver_obj
  1571  002236  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1572  002238  0E0A               	movlw	10
  1573  00223A  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1574  00223C  C030  F15E         	movff	_servo3Pos,Servo_SetAngle@angle
  1575  002240  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  1576                           
  1577                           ;application.c: 320:                   break;
  1578  002244  EF87  F011         	goto	l11866
  1579  002248                     l11834:
  1580                           
  1581                           ; BSR set to: 1
  1582                           ;application.c: 324:                   servo3Pos++;
  1583  002248  2A30               	incf	_servo3Pos^0,f,c
  1584  00224A                     
  1585                           ; BSR set to: 1
  1586                           ;application.c: 325:                   if(servo3Pos>180)
  1587  00224A  0EB4               	movlw	180
  1588  00224C  6430               	cpfsgt	_servo3Pos^0,c
  1589  00224E  EF2B  F011         	goto	u12641
  1590  002252  EF2D  F011         	goto	u12640
  1591  002256                     u12641:
  1592  002256  EF14  F011         	goto	l11832
  1593  00225A                     u12640:
  1594  00225A                     
  1595                           ; BSR set to: 1
  1596                           ;application.c: 326:                   {;application.c: 327:                     servo3P
      +                          os=180;
  1597  00225A  0EB4               	movlw	180
  1598  00225C  6E30               	movwf	_servo3Pos^0,c
  1599  00225E  EF14  F011         	goto	l11832
  1600  002262                     l11842:
  1601                           
  1602                           ; BSR set to: 1
  1603                           ;application.c: 334:                   servo4Pos--;
  1604  002262  062F               	decf	_servo4Pos^0,f,c
  1605  002264                     
  1606                           ; BSR set to: 1
  1607                           ;application.c: 335:                   if(servo4Pos<1)
  1608  002264  502F               	movf	_servo4Pos^0,w,c
  1609  002266  A4D8               	btfss	status,2,c
  1610  002268  EF38  F011         	goto	u12651
  1611  00226C  EF3A  F011         	goto	u12650
  1612  002270                     u12651:
  1613  002270  EF3C  F011         	goto	l11848
  1614  002274                     u12650:
  1615  002274                     
  1616                           ; BSR set to: 1
  1617                           ;application.c: 336:                   {;application.c: 337:                     servo4P
      +                          os=1;
  1618  002274  0E01               	movlw	1
  1619  002276  6E2F               	movwf	_servo4Pos^0,c
  1620  002278                     l11848:
  1621                           
  1622                           ; BSR set to: 1
  1623                           ;application.c: 339:                   Servo_SetAngle(&i2c_obj , &servo_driver_obj , ser
      +                          vo_index_12 , servo4Pos );
  1624  002278  0EC6               	movlw	low _i2c_obj
  1625  00227A  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  1626  00227C  0E00               	movlw	high _i2c_obj
  1627  00227E  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  1628  002280  0ECD               	movlw	low _servo_driver_obj
  1629  002282  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  1630  002284  0E00               	movlw	high _servo_driver_obj
  1631  002286  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  1632  002288  0E0B               	movlw	11
  1633  00228A  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  1634  00228C  C02F  F15E         	movff	_servo4Pos,Servo_SetAngle@angle
  1635  002290  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  1636                           
  1637                           ;application.c: 340:                   break;
  1638  002294  EF87  F011         	goto	l11866
  1639  002298                     l11850:
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;application.c: 344:                   servo4Pos++;
  1643  002298  2A2F               	incf	_servo4Pos^0,f,c
  1644  00229A                     
  1645                           ; BSR set to: 1
  1646                           ;application.c: 345:                   if(servo4Pos>180)
  1647  00229A  0EB4               	movlw	180
  1648  00229C  642F               	cpfsgt	_servo4Pos^0,c
  1649  00229E  EF53  F011         	goto	u12661
  1650  0022A2  EF55  F011         	goto	u12660
  1651  0022A6                     u12661:
  1652  0022A6  EF3C  F011         	goto	l11848
  1653  0022AA                     u12660:
  1654  0022AA                     
  1655                           ; BSR set to: 1
  1656                           ;application.c: 346:                   {;application.c: 347:                     servo4P
      +                          os=180;
  1657  0022AA  0EB4               	movlw	180
  1658  0022AC  6E2F               	movwf	_servo4Pos^0,c
  1659  0022AE  EF3C  F011         	goto	l11848
  1660  0022B2                     l11858:
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;application.c: 354:                  Get_Temp_HUM(&RH_Decimal, &RH_Integral, &T_Decimal
      +                          , &T_Integral, &Checksum);
  1664  0022B2  0E37               	movlw	low _RH_Decimal
  1665  0022B4  0100               	movlb	0	; () banked
  1666  0022B6  6F60               	movwf	Get_Temp_HUM@RH_Decimal& (0+255),b
  1667  0022B8  0E00               	movlw	high _RH_Decimal
  1668  0022BA  6F61               	movwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),b
  1669  0022BC  0E36               	movlw	low _RH_Integral
  1670  0022BE  6F62               	movwf	Get_Temp_HUM@RH_Integral& (0+255),b
  1671  0022C0  0E00               	movlw	high _RH_Integral
  1672  0022C2  6F63               	movwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),b
  1673  0022C4  0E35               	movlw	low _T_Decimal
  1674  0022C6  6F64               	movwf	Get_Temp_HUM@T_Decimal& (0+255),b
  1675  0022C8  0E00               	movlw	high _T_Decimal
  1676  0022CA  6F65               	movwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),b
  1677  0022CC  0E34               	movlw	low _T_Integral
  1678  0022CE  6F66               	movwf	Get_Temp_HUM@T_Integral& (0+255),b
  1679  0022D0  0E00               	movlw	high _T_Integral
  1680  0022D2  6F67               	movwf	(Get_Temp_HUM@T_Integral+1)& (0+255),b
  1681  0022D4  0E33               	movlw	low _Checksum
  1682  0022D6  6F68               	movwf	Get_Temp_HUM@Checksum& (0+255),b
  1683  0022D8  0E00               	movlw	high _Checksum
  1684  0022DA  6F69               	movwf	(Get_Temp_HUM@Checksum+1)& (0+255),b
  1685  0022DC  EC37  F020         	call	_Get_Temp_HUM	;wreg free
  1686                           
  1687                           ;application.c: 355:                  break;
  1688  0022E0  EF87  F011         	goto	l11866
  1689  0022E4                     l11860:
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;application.c: 358:                  Get_Distance(&ultrasonic,&timer0,&distance);
  1693  0022E4  0ED1               	movlw	low _ultrasonic
  1694  0022E6  0100               	movlb	0	; () banked
  1695  0022E8  6F83               	movwf	Get_Distance@ultrasonic_object& (0+255),b
  1696  0022EA  0E00               	movlw	high _ultrasonic
  1697  0022EC  6F84               	movwf	(Get_Distance@ultrasonic_object+1)& (0+255),b
  1698  0022EE  0EF8               	movlw	low _timer0
  1699  0022F0  6F85               	movwf	Get_Distance@_tmr0_config& (0+255),b
  1700  0022F2  0E00               	movlw	high _timer0
  1701  0022F4  6F86               	movwf	(Get_Distance@_tmr0_config+1)& (0+255),b
  1702  0022F6  0EFC               	movlw	low _distance
  1703  0022F8  6F87               	movwf	Get_Distance@distance& (0+255),b
  1704  0022FA  0E00               	movlw	high _distance
  1705  0022FC  6F88               	movwf	(Get_Distance@distance+1)& (0+255),b
  1706  0022FE  EC8B  F019         	call	_Get_Distance	;wreg free
  1707                           
  1708                           ;application.c: 359:                  break;
  1709  002302  EF87  F011         	goto	l11866
  1710  002306                     l11862:
  1711                           
  1712                           ; BSR set to: 1
  1713                           ;application.c: 362:                  GPS_Service();
  1714  002306  EC5A  F016         	call	_GPS_Service	;wreg free
  1715                           
  1716                           ;application.c: 363:                  break;
  1717  00230A  EF87  F011         	goto	l11866
  1718  00230E                     l1897:
  1719  00230E                     l11866:
  1720  00230E  5038               	movf	_datarecive^0,w,c
  1721  002310  0101               	movlb	1	; () banked
  1722  002312  6F68               	movwf	??_main& (0+255),b
  1723  002314  6B69               	clrf	(??_main+1)& (0+255),b
  1724                           
  1725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1726                           ; Switch size 1, requested type "simple"
  1727                           ; Number of cases is 1, Range of values is 0 to 0
  1728                           ; switch strategies available:
  1729                           ; Name         Instructions Cycles
  1730                           ; simple_byte            4     3 (average)
  1731                           ;	Chosen strategy is simple_byte
  1732  002316  5169               	movf	(??_main+1)& (0+255),w,b
  1733  002318  0A00               	xorlw	0	; case 0
  1734  00231A  B4D8               	btfsc	status,2,c
  1735  00231C  EF92  F011         	goto	l12094
  1736  002320  EF87  F011         	goto	l1897
  1737  002324                     l12094:
  1738                           
  1739                           ; BSR set to: 1
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 24, Range of values is 0 to 79
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte           73    37 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746  002324  5168               	movf	??_main& (0+255),w,b
  1747  002326  0A00               	xorlw	0	; case 0
  1748  002328  B4D8               	btfsc	status,2,c
  1749  00232A  EF8B  F010         	goto	l11776
  1750  00232E  0A01               	xorlw	1	; case 1
  1751  002330  B4D8               	btfsc	status,2,c
  1752  002332  EF8F  F010         	goto	l11778
  1753  002336  0A03               	xorlw	3	; case 2
  1754  002338  B4D8               	btfsc	status,2,c
  1755  00233A  EF93  F010         	goto	l11780
  1756  00233E  0A01               	xorlw	1	; case 3
  1757  002340  B4D8               	btfsc	status,2,c
  1758  002342  EF97  F010         	goto	l11782
  1759  002346  0A07               	xorlw	7	; case 4
  1760  002348  B4D8               	btfsc	status,2,c
  1761  00234A  EF87  F011         	goto	l1897
  1762  00234E  0A01               	xorlw	1	; case 5
  1763  002350  B4D8               	btfsc	status,2,c
  1764  002352  EF87  F011         	goto	l1897
  1765  002356  0A03               	xorlw	3	; case 6
  1766  002358  B4D8               	btfsc	status,2,c
  1767  00235A  EF9B  F010         	goto	l11784
  1768  00235E  0A01               	xorlw	1	; case 7
  1769  002360  B4D8               	btfsc	status,2,c
  1770  002362  EF9F  F010         	goto	l11786
  1771  002366  0A0F               	xorlw	15	; case 8
  1772  002368  B4D8               	btfsc	status,2,c
  1773  00236A  EFA3  F010         	goto	l11788
  1774  00236E  0A01               	xorlw	1	; case 9
  1775  002370  B4D8               	btfsc	status,2,c
  1776  002372  EF87  F011         	goto	l1897
  1777  002376  0A03               	xorlw	3	; case 10
  1778  002378  B4D8               	btfsc	status,2,c
  1779  00237A  EF87  F011         	goto	l1897
  1780  00237E  0A1A               	xorlw	26	; case 16
  1781  002380  B4D8               	btfsc	status,2,c
  1782  002382  EFA7  F010         	goto	l11790
  1783  002386  0A01               	xorlw	1	; case 17
  1784  002388  B4D8               	btfsc	status,2,c
  1785  00238A  EFB0  F010         	goto	l11792
  1786  00238E  0A03               	xorlw	3	; case 18
  1787  002390  B4D8               	btfsc	status,2,c
  1788  002392  EFB9  F010         	goto	l11794
  1789  002396  0A01               	xorlw	1	; case 19
  1790  002398  B4D8               	btfsc	status,2,c
  1791  00239A  EFD4  F010         	goto	l11802
  1792  00239E  0A07               	xorlw	7	; case 20
  1793  0023A0  B4D8               	btfsc	status,2,c
  1794  0023A2  EFE1  F010         	goto	l11810
  1795  0023A6  0A01               	xorlw	1	; case 21
  1796  0023A8  B4D8               	btfsc	status,2,c
  1797  0023AA  EFFC  F010         	goto	l11818
  1798  0023AE  0A03               	xorlw	3	; case 22
  1799  0023B0  B4D8               	btfsc	status,2,c
  1800  0023B2  EF09  F011         	goto	l11826
  1801  0023B6  0A01               	xorlw	1	; case 23
  1802  0023B8  B4D8               	btfsc	status,2,c
  1803  0023BA  EF24  F011         	goto	l11834
  1804  0023BE  0A0F               	xorlw	15	; case 24
  1805  0023C0  B4D8               	btfsc	status,2,c
  1806  0023C2  EF31  F011         	goto	l11842
  1807  0023C6  0A01               	xorlw	1	; case 25
  1808  0023C8  B4D8               	btfsc	status,2,c
  1809  0023CA  EF4C  F011         	goto	l11850
  1810  0023CE  0A54               	xorlw	84	; case 77
  1811  0023D0  B4D8               	btfsc	status,2,c
  1812  0023D2  EF59  F011         	goto	l11858
  1813  0023D6  0A03               	xorlw	3	; case 78
  1814  0023D8  B4D8               	btfsc	status,2,c
  1815  0023DA  EF72  F011         	goto	l11860
  1816  0023DE  0A01               	xorlw	1	; case 79
  1817  0023E0  B4D8               	btfsc	status,2,c
  1818  0023E2  EF83  F011         	goto	l11862
  1819  0023E6  EF87  F011         	goto	l1897
  1820  0023EA  EF43  F001         	goto	start
  1821  0023EE                     __end_of_main:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _stepper_move_one_deg_cw *****************
  1825 ;; Defined at:
  1826 ;;		line 61 in file "ECU/stepper/ecu_stepper.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  stepper         2    8[BANK0 ] PTR struct .
  1829 ;;		 -> stepper_base(2), 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  i               2   10[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      unsigned char 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 10
  1848 ;; This function calls:
  1849 ;;		_Ecu_Stepper_Step
  1850 ;;		_GPIO_Pin_Write_Logic
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text1
  1857  0049B2                     __ptext1:
  1858                           	callstack 0
  1859  0049B2                     _stepper_move_one_deg_cw:
  1860                           	callstack 20
  1861  0049B2                     
  1862                           ;ECU/stepper/ecu_stepper.c: 61: Std_ReturnType stepper_move_one_deg_cw(stepper_config_st
      +                           *stepper);ECU/stepper/ecu_stepper.c: 62: {;ECU/stepper/ecu_stepper.c: 63:     if(((void
      +                          *)0) == stepper)
  1863  0049B2  0100               	movlb	0	; () banked
  1864  0049B4  5168               	movf	stepper_move_one_deg_cw@stepper& (0+255),w,b
  1865  0049B6  1169               	iorwf	(stepper_move_one_deg_cw@stepper+1)& (0+255),w,b
  1866  0049B8  A4D8               	btfss	status,2,c
  1867  0049BA  EFE1  F024         	goto	u12111
  1868  0049BE  EFE3  F024         	goto	u12110
  1869  0049C2                     u12111:
  1870  0049C2  EFE5  F024         	goto	l11216
  1871  0049C6                     u12110:
  1872  0049C6  EF0B  F025         	goto	l342
  1873  0049CA                     l11216:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;ECU/stepper/ecu_stepper.c: 68:     {;ECU/stepper/ecu_stepper.c: 69:        GPIO_Pin_Wri
      +                          te_Logic(&(stepper->dir_pin) , GPIO_HIGH);
  1877  0049CA  0E01               	movlw	1
  1878  0049CC  2568               	addwf	stepper_move_one_deg_cw@stepper& (0+255),w,b
  1879  0049CE  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1880  0049D0  0E00               	movlw	0
  1881  0049D2  2169               	addwfc	(stepper_move_one_deg_cw@stepper+1)& (0+255),w,b
  1882  0049D4  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1883  0049D6  0E01               	movlw	1
  1884  0049D8  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1885  0049DA  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  1886  0049DE                     
  1887                           ;ECU/stepper/ecu_stepper.c: 70:         for(int i=0; i<= 9; i++)
  1888  0049DE  0E00               	movlw	0
  1889  0049E0  0100               	movlb	0	; () banked
  1890  0049E2  6F6B               	movwf	(stepper_move_one_deg_cw@i+1)& (0+255),b
  1891  0049E4  0E00               	movlw	0
  1892  0049E6  6F6A               	movwf	stepper_move_one_deg_cw@i& (0+255),b
  1893  0049E8                     l11224:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;ECU/stepper/ecu_stepper.c: 71:         {;ECU/stepper/ecu_stepper.c: 72:             Ecu
      +                          _Stepper_Step(stepper);
  1897  0049E8  C068  F022         	movff	stepper_move_one_deg_cw@stepper,Ecu_Stepper_Step@stepper
  1898  0049EC  C069  F023         	movff	stepper_move_one_deg_cw@stepper+1,Ecu_Stepper_Step@stepper+1
  1899  0049F0  EC87  F022         	call	_Ecu_Stepper_Step	;wreg free
  1900  0049F4                     
  1901                           ;ECU/stepper/ecu_stepper.c: 73:         }
  1902  0049F4  0100               	movlb	0	; () banked
  1903  0049F6  4B6A               	infsnz	stepper_move_one_deg_cw@i& (0+255),f,b
  1904  0049F8  2B6B               	incf	(stepper_move_one_deg_cw@i+1)& (0+255),f,b
  1905  0049FA                     
  1906                           ; BSR set to: 0
  1907  0049FA  BF6B               	btfsc	(stepper_move_one_deg_cw@i+1)& (0+255),7,b
  1908  0049FC  EF09  F025         	goto	u12121
  1909  004A00  516B               	movf	(stepper_move_one_deg_cw@i+1)& (0+255),w,b
  1910  004A02  E109               	bnz	u12120
  1911  004A04  0E0A               	movlw	10
  1912  004A06  5D6A               	subwf	stepper_move_one_deg_cw@i& (0+255),w,b
  1913  004A08  A0D8               	btfss	status,0,c
  1914  004A0A  EF09  F025         	goto	u12121
  1915  004A0E  EF0B  F025         	goto	u12120
  1916  004A12                     u12121:
  1917  004A12  EFF4  F024         	goto	l11224
  1918  004A16                     u12120:
  1919  004A16                     l342:
  1920                           
  1921                           ; BSR set to: 0
  1922  004A16  0012               	return		;funcret
  1923  004A18                     __end_of_stepper_move_one_deg_cw:
  1924                           	callstack 0
  1925                           
  1926 ;; *************** function _stepper_move_one_deg_ccw *****************
  1927 ;; Defined at:
  1928 ;;		line 77 in file "ECU/stepper/ecu_stepper.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  stepper         2    8[BANK0 ] PTR struct .
  1931 ;;		 -> stepper_base(2), 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  i               2   10[BANK0 ] int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      unsigned char 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        4 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 10
  1950 ;; This function calls:
  1951 ;;		_Ecu_Stepper_Step
  1952 ;;		_GPIO_Pin_Write_Logic
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text2
  1959  004A18                     __ptext2:
  1960                           	callstack 0
  1961  004A18                     _stepper_move_one_deg_ccw:
  1962                           	callstack 20
  1963  004A18                     
  1964                           ;ECU/stepper/ecu_stepper.c: 77: Std_ReturnType stepper_move_one_deg_ccw(stepper_config_s
      +                          t *stepper);ECU/stepper/ecu_stepper.c: 78: {;ECU/stepper/ecu_stepper.c: 79:     if(((voi
      +                          d*)0) == stepper)
  1965  004A18  0100               	movlb	0	; () banked
  1966  004A1A  5168               	movf	stepper_move_one_deg_ccw@stepper& (0+255),w,b
  1967  004A1C  1169               	iorwf	(stepper_move_one_deg_ccw@stepper+1)& (0+255),w,b
  1968  004A1E  A4D8               	btfss	status,2,c
  1969  004A20  EF14  F025         	goto	u12131
  1970  004A24  EF16  F025         	goto	u12130
  1971  004A28                     u12131:
  1972  004A28  EF18  F025         	goto	l11236
  1973  004A2C                     u12130:
  1974  004A2C  EF3E  F025         	goto	l349
  1975  004A30                     l11236:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;ECU/stepper/ecu_stepper.c: 84:     {;ECU/stepper/ecu_stepper.c: 85:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->dir_pin) , GPIO_LOW);
  1979  004A30  0E01               	movlw	1
  1980  004A32  2568               	addwf	stepper_move_one_deg_ccw@stepper& (0+255),w,b
  1981  004A34  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  1982  004A36  0E00               	movlw	0
  1983  004A38  2169               	addwfc	(stepper_move_one_deg_ccw@stepper+1)& (0+255),w,b
  1984  004A3A  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  1985  004A3C  0E00               	movlw	0
  1986  004A3E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  1987  004A40  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  1988  004A44                     
  1989                           ;ECU/stepper/ecu_stepper.c: 86:         for(int i=0; i<= 9; i++)
  1990  004A44  0E00               	movlw	0
  1991  004A46  0100               	movlb	0	; () banked
  1992  004A48  6F6B               	movwf	(stepper_move_one_deg_ccw@i+1)& (0+255),b
  1993  004A4A  0E00               	movlw	0
  1994  004A4C  6F6A               	movwf	stepper_move_one_deg_ccw@i& (0+255),b
  1995  004A4E                     l11244:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;ECU/stepper/ecu_stepper.c: 87:         {;ECU/stepper/ecu_stepper.c: 88:             Ecu
      +                          _Stepper_Step(stepper);
  1999  004A4E  C068  F022         	movff	stepper_move_one_deg_ccw@stepper,Ecu_Stepper_Step@stepper
  2000  004A52  C069  F023         	movff	stepper_move_one_deg_ccw@stepper+1,Ecu_Stepper_Step@stepper+1
  2001  004A56  EC87  F022         	call	_Ecu_Stepper_Step	;wreg free
  2002  004A5A                     
  2003                           ;ECU/stepper/ecu_stepper.c: 89:         }
  2004  004A5A  0100               	movlb	0	; () banked
  2005  004A5C  4B6A               	infsnz	stepper_move_one_deg_ccw@i& (0+255),f,b
  2006  004A5E  2B6B               	incf	(stepper_move_one_deg_ccw@i+1)& (0+255),f,b
  2007  004A60                     
  2008                           ; BSR set to: 0
  2009  004A60  BF6B               	btfsc	(stepper_move_one_deg_ccw@i+1)& (0+255),7,b
  2010  004A62  EF3C  F025         	goto	u12141
  2011  004A66  516B               	movf	(stepper_move_one_deg_ccw@i+1)& (0+255),w,b
  2012  004A68  E109               	bnz	u12140
  2013  004A6A  0E0A               	movlw	10
  2014  004A6C  5D6A               	subwf	stepper_move_one_deg_ccw@i& (0+255),w,b
  2015  004A6E  A0D8               	btfss	status,0,c
  2016  004A70  EF3C  F025         	goto	u12141
  2017  004A74  EF3E  F025         	goto	u12140
  2018  004A78                     u12141:
  2019  004A78  EF27  F025         	goto	l11244
  2020  004A7C                     u12140:
  2021  004A7C                     l349:
  2022                           
  2023                           ; BSR set to: 0
  2024  004A7C  0012               	return		;funcret
  2025  004A7E                     __end_of_stepper_move_one_deg_ccw:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _Ecu_Stepper_Step *****************
  2029 ;; Defined at:
  2030 ;;		line 26 in file "ECU/stepper/ecu_stepper.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  stepper         2   33[COMRAM] PTR struct .
  2033 ;;		 -> stepper_base(2), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      unsigned char 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 9
  2052 ;; This function calls:
  2053 ;;		_GPIO_Pin_Write_Logic
  2054 ;; This function is called by:
  2055 ;;		_stepper_move_one_deg_cw
  2056 ;;		_stepper_move_one_deg_ccw
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text3
  2061  00450E                     __ptext3:
  2062                           	callstack 0
  2063  00450E                     _Ecu_Stepper_Step:
  2064                           	callstack 20
  2065  00450E                     
  2066                           ;ECU/stepper/ecu_stepper.c: 26: Std_ReturnType Ecu_Stepper_Step(stepper_config_st *stepp
      +                          er);ECU/stepper/ecu_stepper.c: 27: {;ECU/stepper/ecu_stepper.c: 28:     if(((void*)0) ==
      +                           stepper)
  2067  00450E  5022               	movf	Ecu_Stepper_Step@stepper^0,w,c
  2068  004510  1023               	iorwf	(Ecu_Stepper_Step@stepper+1)^0,w,c
  2069  004512  A4D8               	btfss	status,2,c
  2070  004514  EF8E  F022         	goto	u11951
  2071  004518  EF90  F022         	goto	u11950
  2072  00451C                     u11951:
  2073  00451C  EF92  F022         	goto	l11054
  2074  004520                     u11950:
  2075  004520  EFBE  F022         	goto	l330
  2076  004524                     l11054:
  2077                           
  2078                           ;ECU/stepper/ecu_stepper.c: 33:     {;ECU/stepper/ecu_stepper.c: 34:         GPIO_Pin_Wr
      +                          ite_Logic(&(stepper->step_pin) , 1);
  2079  004524  C022  F01E         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  2080  004528  C023  F01F         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2081  00452C  0E01               	movlw	1
  2082  00452E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2083  004530  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  2084  004534                     
  2085                           ;ECU/stepper/ecu_stepper.c: 35:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2086  004534  0E06               	movlw	6
  2087  004536  0100               	movlb	0	; () banked
  2088  004538  6F67               	movwf	(??_Ecu_Stepper_Step+1)& (0+255),b
  2089  00453A  0E13               	movlw	19
  2090  00453C  6F66               	movwf	??_Ecu_Stepper_Step& (0+255),b
  2091  00453E  0EAD               	movlw	173
  2092  004540                     u12677:
  2093  004540  2EE8               	decfsz	wreg,f,c
  2094  004542  D7FE               	bra	u12677
  2095  004544  2F66               	decfsz	??_Ecu_Stepper_Step& (0+255),f,b
  2096  004546  D7FC               	bra	u12677
  2097  004548  2F67               	decfsz	(??_Ecu_Stepper_Step+1)& (0+255),f,b
  2098  00454A  D7FA               	bra	u12677
  2099  00454C  F000 F000          	nop2	
  2100  004550                     
  2101                           ;ECU/stepper/ecu_stepper.c: 36:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , 0);
  2102  004550  C022  F01E         	movff	Ecu_Stepper_Step@stepper,GPIO_Pin_Write_Logic@_pin_config
  2103  004554  C023  F01F         	movff	Ecu_Stepper_Step@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  2104  004558  0E00               	movlw	0
  2105  00455A  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  2106  00455C  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  2107                           
  2108                           ;ECU/stepper/ecu_stepper.c: 37:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2109  004560  0E06               	movlw	6
  2110  004562  0100               	movlb	0	; () banked
  2111  004564  6F67               	movwf	(??_Ecu_Stepper_Step+1)& (0+255),b
  2112  004566  0E13               	movlw	19
  2113  004568  6F66               	movwf	??_Ecu_Stepper_Step& (0+255),b
  2114  00456A  0EAD               	movlw	173
  2115  00456C                     u12687:
  2116  00456C  2EE8               	decfsz	wreg,f,c
  2117  00456E  D7FE               	bra	u12687
  2118  004570  2F66               	decfsz	??_Ecu_Stepper_Step& (0+255),f,b
  2119  004572  D7FC               	bra	u12687
  2120  004574  2F67               	decfsz	(??_Ecu_Stepper_Step+1)& (0+255),f,b
  2121  004576  D7FA               	bra	u12687
  2122  004578  F000 F000          	nop2	
  2123  00457C                     l330:
  2124  00457C  0012               	return		;funcret
  2125  00457E                     __end_of_Ecu_Stepper_Step:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _application_intialize *****************
  2129 ;; Defined at:
  2130 ;;		line 371 in file "application.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 13
  2151 ;; This function calls:
  2152 ;;		_EUSART_Async_Init
  2153 ;;		_Ecu_Stepper_Init
  2154 ;;		_GPIO_Pin_Initialize
  2155 ;;		_Robot_Nav_Init
  2156 ;;		_Ultra_Sonic_Init
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text4
  2163  004BF0                     __ptext4:
  2164                           	callstack 0
  2165  004BF0                     _application_intialize:
  2166                           	callstack 17
  2167  004BF0                     
  2168                           ;application.c: 373:     GPIO_Pin_Initialize(&TEST_PIN);
  2169  004BF0  0E41               	movlw	low _TEST_PIN
  2170  004BF2  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  2171  004BF4  0E00               	movlw	high _TEST_PIN
  2172  004BF6  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  2173  004BF8  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  2174                           
  2175                           ;application.c: 374:     GPIO_Pin_Initialize(&selector);
  2176  004BFC  0E40               	movlw	low _selector
  2177  004BFE  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  2178  004C00  0E00               	movlw	high _selector
  2179  004C02  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  2180  004C04  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  2181                           
  2182                           ;application.c: 375:     Robot_Nav_Init();
  2183  004C08  EC03  F022         	call	_Robot_Nav_Init	;wreg free
  2184                           
  2185                           ;application.c: 376:     Ecu_Stepper_Init(&stepper_base);
  2186  004C0C  0E3E               	movlw	low _stepper_base
  2187  004C0E  0100               	movlb	0	; () banked
  2188  004C10  6F66               	movwf	Ecu_Stepper_Init@stepper& (0+255),b
  2189  004C12  0E00               	movlw	high _stepper_base
  2190  004C14  6F67               	movwf	(Ecu_Stepper_Init@stepper+1)& (0+255),b
  2191  004C16  EC49  F022         	call	_Ecu_Stepper_Init	;wreg free
  2192                           
  2193                           ;application.c: 377:     Ultra_Sonic_Init(&ultrasonic,&timer0);
  2194  004C1A  0ED1               	movlw	low _ultrasonic
  2195  004C1C  0100               	movlb	0	; () banked
  2196  004C1E  6F66               	movwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),b
  2197  004C20  0E00               	movlw	high _ultrasonic
  2198  004C22  6F67               	movwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),b
  2199  004C24  0EF8               	movlw	low _timer0
  2200  004C26  6F68               	movwf	Ultra_Sonic_Init@_tmr0_config& (0+255),b
  2201  004C28  0E00               	movlw	high _timer0
  2202  004C2A  6F69               	movwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),b
  2203  004C2C  ECCD  F025         	call	_Ultra_Sonic_Init	;wreg free
  2204  004C30                     
  2205                           ;application.c: 378:     EUSART_Async_Init(&_uart_obj);
  2206  004C30  0E29               	movlw	low __uart_obj
  2207  004C32  0101               	movlb	1	; () banked
  2208  004C34  6F66               	movwf	EUSART_Async_Init@_eusart_obj& (0+255),b
  2209  004C36  0E01               	movlw	high __uart_obj
  2210  004C38  6F67               	movwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),b
  2211  004C3A  ECA0  F025         	call	_EUSART_Async_Init	;wreg free
  2212  004C3E  0012               	return		;funcret
  2213  004C40                     __end_of_application_intialize:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _Ultra_Sonic_Init *****************
  2217 ;; Defined at:
  2218 ;;		line 9 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  ultrasonic_o    2    6[BANK0 ] PTR const struct .
  2221 ;;		 -> ultrasonic(2), 
  2222 ;;  _tmr0_config    2    8[BANK0 ] PTR const struct .
  2223 ;;		 -> timer0(4), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  ERRORSTATUS     1    0        unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        4 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 10
  2242 ;; This function calls:
  2243 ;;		_GPIO_Pin_Initialize
  2244 ;;		_HAL_Timer0_Init
  2245 ;; This function is called by:
  2246 ;;		_application_intialize
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text5
  2251  004B9A                     __ptext5:
  2252                           	callstack 0
  2253  004B9A                     _Ultra_Sonic_Init:
  2254                           	callstack 19
  2255  004B9A                     
  2256                           ;Robot/sensors/ultrasonic/ultrasonic.c: 12:     if ( ((void*)0)==ultrasonic_object||((vo
      +                          id*)0)==_tmr0_config)
  2257  004B9A  0100               	movlb	0	; () banked
  2258  004B9C  5166               	movf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  2259  004B9E  1167               	iorwf	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  2260  004BA0  B4D8               	btfsc	status,2,c
  2261  004BA2  EFD5  F025         	goto	u12001
  2262  004BA6  EFD7  F025         	goto	u12000
  2263  004BAA                     u12001:
  2264  004BAA  EFE0  F025         	goto	l11122
  2265  004BAE                     u12000:
  2266  004BAE                     
  2267                           ; BSR set to: 0
  2268  004BAE  5168               	movf	Ultra_Sonic_Init@_tmr0_config& (0+255),w,b
  2269  004BB0  1169               	iorwf	(Ultra_Sonic_Init@_tmr0_config+1)& (0+255),w,b
  2270  004BB2  A4D8               	btfss	status,2,c
  2271  004BB4  EFDE  F025         	goto	u12011
  2272  004BB8  EFE0  F025         	goto	u12010
  2273  004BBC                     u12011:
  2274  004BBC  EFE2  F025         	goto	l11124
  2275  004BC0                     u12010:
  2276  004BC0                     l11122:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;Robot/sensors/ultrasonic/ultrasonic.c: 15:     }
  2280  004BC0  EFF7  F025         	goto	l1761
  2281  004BC4                     l11124:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;Robot/sensors/ultrasonic/ultrasonic.c: 17:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           18:         GPIO_Pin_Initialize(&(ultrasonic_object->trig_pin));
  2285  004BC4  C066  F022         	movff	Ultra_Sonic_Init@ultrasonic_object,GPIO_Pin_Initialize@_pin_config
  2286  004BC8  C067  F023         	movff	Ultra_Sonic_Init@ultrasonic_object+1,GPIO_Pin_Initialize@_pin_config+1
  2287  004BCC  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  2288                           
  2289                           ;Robot/sensors/ultrasonic/ultrasonic.c: 19:         GPIO_Pin_Initialize(&(ultrasonic_obj
      +                          ect->echo_pin));
  2290  004BD0  0E01               	movlw	1
  2291  004BD2  0100               	movlb	0	; () banked
  2292  004BD4  2566               	addwf	Ultra_Sonic_Init@ultrasonic_object& (0+255),w,b
  2293  004BD6  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  2294  004BD8  0E00               	movlw	0
  2295  004BDA  2167               	addwfc	(Ultra_Sonic_Init@ultrasonic_object+1)& (0+255),w,b
  2296  004BDC  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  2297  004BDE  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  2298  004BE2                     
  2299                           ;Robot/sensors/ultrasonic/ultrasonic.c: 20:         HAL_Timer0_Init(_tmr0_config);
  2300  004BE2  C068  F023         	movff	Ultra_Sonic_Init@_tmr0_config,HAL_Timer0_Init@_tmr0_config
  2301  004BE6  C069  F024         	movff	Ultra_Sonic_Init@_tmr0_config+1,HAL_Timer0_Init@_tmr0_config+1
  2302  004BEA  EC96  F01A         	call	_HAL_Timer0_Init	;wreg free
  2303  004BEE                     l1761:
  2304  004BEE  0012               	return		;funcret
  2305  004BF0                     __end_of_Ultra_Sonic_Init:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _HAL_Timer0_Init *****************
  2309 ;; Defined at:
  2310 ;;		line 25 in file "MCAL/Timer0/hal_timer0.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  _tmr0_config    2   34[COMRAM] PTR const struct .
  2313 ;;		 -> timer0(4), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  ret_value       1    0        unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      unsigned char 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;Total ram usage:        3 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 9
  2332 ;; This function calls:
  2333 ;;		_HAL_Timer0_Write_Val
  2334 ;; This function is called by:
  2335 ;;		_Ultra_Sonic_Init
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text6
  2340  00352C                     __ptext6:
  2341                           	callstack 0
  2342  00352C                     _HAL_Timer0_Init:
  2343                           	callstack 19
  2344  00352C                     
  2345                           ;MCAL/Timer0/hal_timer0.c: 29:     if(((void*)0) == _tmr0_config)
  2346  00352C  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2347  00352E  1024               	iorwf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2348  003530  A4D8               	btfss	status,2,c
  2349  003532  EF9D  F01A         	goto	u11671
  2350  003536  EF9F  F01A         	goto	u11670
  2351  00353A                     u11671:
  2352  00353A  EFA1  F01A         	goto	l1510
  2353  00353E                     u11670:
  2354  00353E                     
  2355                           ;MCAL/Timer0/hal_timer0.c: 32:     }
  2356  00353E  EF16  F01B         	goto	l1517
  2357  003542                     l1510:
  2358                           
  2359                           ;MCAL/Timer0/hal_timer0.c: 34:     {;MCAL/Timer0/hal_timer0.c: 36:         (T0CONbits.TM
      +                          R0ON = 0 );
  2360  003542  9ED5               	bcf	213,7,c	;volatile
  2361  003544                     
  2362                           ;MCAL/Timer0/hal_timer0.c: 38:         (T0CONbits.T08BIT = _tmr0_config->reg_bit_size);
  2363  003544  EE20 F003          	lfsr	2,3
  2364  003548  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2365  00354A  26D9               	addwf	fsr2l,f,c
  2366  00354C  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2367  00354E  22DA               	addwfc	fsr2h,f,c
  2368  003550  A2DF               	btfss	indf2,1,c
  2369  003552  D002               	bra	u11685
  2370  003554  8CD5               	bsf	213,6,c	;volatile
  2371  003556  D001               	bra	u11687
  2372  003558                     u11685:
  2373  003558  9CD5               	bcf	213,6,c	;volatile
  2374  00355A                     u11687:
  2375                           
  2376                           ;MCAL/Timer0/hal_timer0.c: 40:         if(0x00U == _tmr0_config->prescaler_enable )
  2377  00355A  EE20 F003          	lfsr	2,3
  2378  00355E  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2379  003560  26D9               	addwf	fsr2l,f,c
  2380  003562  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2381  003564  22DA               	addwfc	fsr2h,f,c
  2382  003566  B4DF               	btfsc	indf2,2,c
  2383  003568  EFB8  F01A         	goto	u11691
  2384  00356C  EFBA  F01A         	goto	u11690
  2385  003570                     u11691:
  2386  003570  EFC9  F01A         	goto	l10860
  2387  003574                     u11690:
  2388  003574                     
  2389                           ;MCAL/Timer0/hal_timer0.c: 41:         {;MCAL/Timer0/hal_timer0.c: 42:             (T0CO
      +                          Nbits.T0PS = _tmr0_config->prescalar_value );
  2390  003574  C023  FFD9         	movff	HAL_Timer0_Init@_tmr0_config,fsr2l
  2391  003578  C024  FFDA         	movff	HAL_Timer0_Init@_tmr0_config+1,fsr2h
  2392  00357C  50DF               	movf	indf2,w,c
  2393  00357E  0100               	movlb	0	; () banked
  2394  003580  6F60               	movwf	??_HAL_Timer0_Init& (0+255),b
  2395  003582  50D5               	movf	213,w,c	;volatile
  2396  003584  1960               	xorwf	??_HAL_Timer0_Init& (0+255),w,b
  2397  003586  0BF8               	andlw	-8
  2398  003588  1960               	xorwf	??_HAL_Timer0_Init& (0+255),w,b
  2399  00358A  6ED5               	movwf	213,c	;volatile
  2400  00358C                     
  2401                           ; BSR set to: 0
  2402                           ;MCAL/Timer0/hal_timer0.c: 43:             (T0CONbits.PSA = 0 );
  2403  00358C  96D5               	bcf	213,3,c	;volatile
  2404                           
  2405                           ;MCAL/Timer0/hal_timer0.c: 44:         }
  2406  00358E  EFD7  F01A         	goto	l10864
  2407  003592                     l10860:
  2408  003592  EE20 F003          	lfsr	2,3
  2409  003596  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2410  003598  26D9               	addwf	fsr2l,f,c
  2411  00359A  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2412  00359C  22DA               	addwfc	fsr2h,f,c
  2413  00359E  A4DF               	btfss	indf2,2,c
  2414  0035A0  EFD4  F01A         	goto	u11701
  2415  0035A4  EFD6  F01A         	goto	u11700
  2416  0035A8                     u11701:
  2417  0035A8  EFD7  F01A         	goto	l10864
  2418  0035AC                     u11700:
  2419  0035AC                     
  2420                           ;MCAL/Timer0/hal_timer0.c: 46:         {;MCAL/Timer0/hal_timer0.c: 47:             (T0CO
      +                          Nbits.PSA = 1 );
  2421  0035AC  86D5               	bsf	213,3,c	;volatile
  2422  0035AE                     l10864:
  2423                           
  2424                           ;MCAL/Timer0/hal_timer0.c: 52:         if( 0x01U == _tmr0_config->timer_mode)
  2425  0035AE  EE20 F003          	lfsr	2,3
  2426  0035B2  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2427  0035B4  26D9               	addwf	fsr2l,f,c
  2428  0035B6  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2429  0035B8  22DA               	addwfc	fsr2h,f,c
  2430  0035BA  A0DF               	btfss	indf2,0,c
  2431  0035BC  EFE2  F01A         	goto	u11711
  2432  0035C0  EFE4  F01A         	goto	u11710
  2433  0035C4                     u11711:
  2434  0035C4  EFF0  F01A         	goto	l10870
  2435  0035C8                     u11710:
  2436  0035C8                     
  2437                           ;MCAL/Timer0/hal_timer0.c: 53:         {;MCAL/Timer0/hal_timer0.c: 55:              (T0C
      +                          ONbits.T0SE = _tmr0_config->edge);
  2438  0035C8  EE20 F003          	lfsr	2,3
  2439  0035CC  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2440  0035CE  26D9               	addwf	fsr2l,f,c
  2441  0035D0  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2442  0035D2  22DA               	addwfc	fsr2h,f,c
  2443  0035D4  A6DF               	btfss	indf2,3,c
  2444  0035D6  D002               	bra	u11725
  2445  0035D8  88D5               	bsf	213,4,c	;volatile
  2446  0035DA  D001               	bra	u11727
  2447  0035DC                     u11725:
  2448  0035DC  98D5               	bcf	213,4,c	;volatile
  2449  0035DE                     u11727:
  2450  0035DE                     
  2451                           ;MCAL/Timer0/hal_timer0.c: 58:             (TRISA|=( (uint8)1<<GPIO_PIN4 ));
  2452  0035DE  8892               	bsf	146,4,c	;volatile
  2453  0035E0                     l10870:
  2454                           
  2455                           ;MCAL/Timer0/hal_timer0.c: 60:         (T0CONbits.T0CS = _tmr0_config->timer_mode);
  2456  0035E0  EE20 F003          	lfsr	2,3
  2457  0035E4  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2458  0035E6  26D9               	addwf	fsr2l,f,c
  2459  0035E8  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2460  0035EA  22DA               	addwfc	fsr2h,f,c
  2461  0035EC  A0DF               	btfss	indf2,0,c
  2462  0035EE  D002               	bra	u11735
  2463  0035F0  8AD5               	bsf	213,5,c	;volatile
  2464  0035F2  D001               	bra	u11737
  2465  0035F4                     u11735:
  2466  0035F4  9AD5               	bcf	213,5,c	;volatile
  2467  0035F6                     u11737:
  2468  0035F6  C023  F01E         	movff	HAL_Timer0_Init@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
  2469  0035FA  C024  F01F         	movff	HAL_Timer0_Init@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
  2470  0035FE  EE20 F001          	lfsr	2,1
  2471  003602  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2472  003604  26D9               	addwf	fsr2l,f,c
  2473  003606  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2474  003608  22DA               	addwfc	fsr2h,f,c
  2475  00360A  CFDE F020          	movff	postinc2,HAL_Timer0_Write_Val@val
  2476  00360E  CFDD F021          	movff	postdec2,HAL_Timer0_Write_Val@val+1
  2477  003612  EC08  F027         	call	_HAL_Timer0_Write_Val	;wreg free
  2478  003616                     
  2479                           ;MCAL/Timer0/hal_timer0.c: 64:         preloaded_val = _tmr0_config->preloaded_value ;
  2480  003616  EE20 F001          	lfsr	2,1
  2481  00361A  5023               	movf	HAL_Timer0_Init@_tmr0_config^0,w,c
  2482  00361C  26D9               	addwf	fsr2l,f,c
  2483  00361E  5024               	movf	(HAL_Timer0_Init@_tmr0_config+1)^0,w,c
  2484  003620  22DA               	addwfc	fsr2h,f,c
  2485  003622  CFDE F0D7          	movff	postinc2,_preloaded_val
  2486  003626  CFDD F0D8          	movff	postdec2,_preloaded_val+1
  2487  00362A                     
  2488                           ;MCAL/Timer0/hal_timer0.c: 97:         (T0CONbits.TMR0ON = 1 );
  2489  00362A  8ED5               	bsf	213,7,c	;volatile
  2490  00362C                     l1517:
  2491  00362C  0012               	return		;funcret
  2492  00362E                     __end_of_HAL_Timer0_Init:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _Robot_Nav_Init *****************
  2496 ;; Defined at:
  2497 ;;		line 38 in file "Robot/Navigation/robot_navigation.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  ret_val         1    0        unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      unsigned char 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;Total ram usage:        0 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; Hardware stack levels required when called: 12
  2518 ;; This function calls:
  2519 ;;		_CCP_Init
  2520 ;;		_CCP_PWM_Set_Duty
  2521 ;;		_CCP_PWM_Start
  2522 ;;		_ECU_DC_Motor_Init
  2523 ;;		_ServoDriver_Init
  2524 ;; This function is called by:
  2525 ;;		_application_intialize
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text7
  2530  004406                     __ptext7:
  2531                           	callstack 0
  2532  004406                     _Robot_Nav_Init:
  2533                           	callstack 17
  2534  004406                     
  2535                           ;Robot/Navigation/robot_navigation.c: 44:         ECU_DC_Motor_Init(&W1_W3_W5_Motor_Cont
      +                          rol);
  2536  004406  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  2537  004408  0100               	movlb	0	; () banked
  2538  00440A  6F66               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  2539  00440C  0E00               	movlw	high _W1_W3_W5_Motor_Control
  2540  00440E  6F67               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  2541  004410  EC5A  F027         	call	_ECU_DC_Motor_Init	;wreg free
  2542  004414                     
  2543                           ;Robot/Navigation/robot_navigation.c: 45:         ECU_DC_Motor_Init(&W2_W4_W6_Motor_Cont
      +                          rol);
  2544  004414  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  2545  004416  0100               	movlb	0	; () banked
  2546  004418  6F66               	movwf	ECU_DC_Motor_Init@dc_motor& (0+255),b
  2547  00441A  0E00               	movlw	high _W2_W4_W6_Motor_Control
  2548  00441C  6F67               	movwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),b
  2549  00441E  EC5A  F027         	call	_ECU_DC_Motor_Init	;wreg free
  2550  004422                     
  2551                           ;Robot/Navigation/robot_navigation.c: 48:         CCP_Init(&CCP1_Obj);
  2552  004422  0E41               	movlw	low _CCP1_Obj
  2553  004424  0100               	movlb	0	; () banked
  2554  004426  6F66               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2555  004428  0E01               	movlw	high _CCP1_Obj
  2556  00442A  6F67               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2557  00442C  EC17  F01B         	call	_CCP_Init	;wreg free
  2558  004430                     
  2559                           ;Robot/Navigation/robot_navigation.c: 49:         CCP_Init(&CCP2_Obj);
  2560  004430  0E35               	movlw	low _CCP2_Obj
  2561  004432  0100               	movlb	0	; () banked
  2562  004434  6F66               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2563  004436  0E01               	movlw	high _CCP2_Obj
  2564  004438  6F67               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2565  00443A  EC17  F01B         	call	_CCP_Init	;wreg free
  2566  00443E                     
  2567                           ;Robot/Navigation/robot_navigation.c: 50:         CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  2568  00443E  0E41               	movlw	low _CCP1_Obj
  2569  004440  0101               	movlb	1	; () banked
  2570  004442  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  2571  004444  0E01               	movlw	high _CCP1_Obj
  2572  004446  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  2573  004448  0E5F               	movlw	95
  2574  00444A  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  2575  00444C  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  2576  004450                     
  2577                           ;Robot/Navigation/robot_navigation.c: 51:         CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  2578  004450  0E35               	movlw	low _CCP2_Obj
  2579  004452  0101               	movlb	1	; () banked
  2580  004454  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  2581  004456  0E01               	movlw	high _CCP2_Obj
  2582  004458  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  2583  00445A  0E5F               	movlw	95
  2584  00445C  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  2585  00445E  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  2586  004462                     
  2587                           ;Robot/Navigation/robot_navigation.c: 52:         CCP_PWM_Start(&CCP1_Obj);
  2588  004462  0E41               	movlw	low _CCP1_Obj
  2589  004464  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  2590  004466  0E01               	movlw	high _CCP1_Obj
  2591  004468  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  2592  00446A  EC72  F025         	call	_CCP_PWM_Start	;wreg free
  2593  00446E                     
  2594                           ;Robot/Navigation/robot_navigation.c: 53:         CCP_PWM_Start(&CCP2_Obj);
  2595  00446E  0E35               	movlw	low _CCP2_Obj
  2596  004470  6E1E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  2597  004472  0E01               	movlw	high _CCP2_Obj
  2598  004474  6E1F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  2599  004476  EC72  F025         	call	_CCP_PWM_Start	;wreg free
  2600  00447A                     
  2601                           ;Robot/Navigation/robot_navigation.c: 57:         ServoDriver_Init(&i2c_obj,&servo_drive
      +                          r_obj);
  2602  00447A  0EC6               	movlw	low _i2c_obj
  2603  00447C  0101               	movlb	1	; () banked
  2604  00447E  6F5D               	movwf	ServoDriver_Init@i2c_obj& (0+255),b
  2605  004480  0E00               	movlw	high _i2c_obj
  2606  004482  6F5E               	movwf	(ServoDriver_Init@i2c_obj+1)& (0+255),b
  2607  004484  0ECD               	movlw	low _servo_driver_obj
  2608  004486  6F5F               	movwf	ServoDriver_Init@servo_driver_obj& (0+255),b
  2609  004488  0E00               	movlw	high _servo_driver_obj
  2610  00448A  6F60               	movwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),b
  2611  00448C  ECEC  F01C         	call	_ServoDriver_Init	;wreg free
  2612  004490  0012               	return		;funcret
  2613  004492                     __end_of_Robot_Nav_Init:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _ServoDriver_Init *****************
  2617 ;; Defined at:
  2618 ;;		line 13 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  i2c_obj         2   16[BANK1 ] PTR const struct .
  2621 ;;		 -> i2c_obj(7), 
  2622 ;;  servo_driver    2   18[BANK1 ] PTR const struct .
  2623 ;;		 -> servo_driver_obj(4), 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  ERRORSTATUS     1    0        unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        4 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 11
  2642 ;; This function calls:
  2643 ;;		_MSSP_I2C_Init
  2644 ;;		_PCA_Write_Reg
  2645 ;; This function is called by:
  2646 ;;		_Robot_Nav_Init
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text8
  2651  0039D8                     __ptext8:
  2652                           	callstack 0
  2653  0039D8                     _ServoDriver_Init:
  2654                           	callstack 17
  2655  0039D8                     
  2656                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 16:     if ((((void*)0)==i2c_obj)
      +                          ||(((void*)0)==servo_driver_obj))
  2657  0039D8  0101               	movlb	1	; () banked
  2658  0039DA  515D               	movf	ServoDriver_Init@i2c_obj& (0+255),w,b
  2659  0039DC  115E               	iorwf	(ServoDriver_Init@i2c_obj+1)& (0+255),w,b
  2660  0039DE  B4D8               	btfsc	status,2,c
  2661  0039E0  EFF4  F01C         	goto	u11451
  2662  0039E4  EFF6  F01C         	goto	u11450
  2663  0039E8                     u11451:
  2664  0039E8  EFFF  F01C         	goto	l10692
  2665  0039EC                     u11450:
  2666  0039EC                     
  2667                           ; BSR set to: 1
  2668  0039EC  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2669  0039EE  1160               	iorwf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2670  0039F0  A4D8               	btfss	status,2,c
  2671  0039F2  EFFD  F01C         	goto	u11461
  2672  0039F6  EFFF  F01C         	goto	u11460
  2673  0039FA                     u11461:
  2674  0039FA  EF01  F01D         	goto	l10694
  2675  0039FE                     u11460:
  2676  0039FE                     l10692:
  2677                           
  2678                           ; BSR set to: 1
  2679                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 19:     }
  2680  0039FE  EF52  F01D         	goto	l300
  2681  003A02                     l10694:
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 21:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 22:      MSSP_I2C_Init(i2c_obj);
  2685  003A02  C15D  F15B         	movff	ServoDriver_Init@i2c_obj,MSSP_I2C_Init@i2c_obj
  2686  003A06  C15E  F15C         	movff	ServoDriver_Init@i2c_obj+1,MSSP_I2C_Init@i2c_obj+1
  2687  003A0A  EC55  F018         	call	_MSSP_I2C_Init	;wreg free
  2688                           
  2689                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 23:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0xFE,servo_driver_obj->frequancy);
  2690  003A0E  C15D  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2691  003A12  C15E  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2692  003A16  C15F  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2693  003A1A  C160  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2694  003A1E  50DF               	movf	indf2,w,c
  2695  003A20  0100               	movlb	0	; () banked
  2696  003A22  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2697  003A24  0EFE               	movlw	254
  2698  003A26  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2699  003A28  0101               	movlb	1	; () banked
  2700  003A2A  EE20 F001          	lfsr	2,1
  2701  003A2E  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2702  003A30  26D9               	addwf	fsr2l,f,c
  2703  003A32  5160               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2704  003A34  22DA               	addwfc	fsr2h,f,c
  2705  003A36  50DF               	movf	indf2,w,c
  2706  003A38  0100               	movlb	0	; () banked
  2707  003A3A  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2708  003A3C  EC3F  F025         	call	_PCA_Write_Reg	;wreg free
  2709                           
  2710                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 24:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x00,servo_driver_obj->mode_1_cfg);
  2711  003A40  C15D  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2712  003A44  C15E  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2713  003A48  C15F  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2714  003A4C  C160  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2715  003A50  50DF               	movf	indf2,w,c
  2716  003A52  0100               	movlb	0	; () banked
  2717  003A54  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2718  003A56  0E00               	movlw	0
  2719  003A58  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2720  003A5A  0101               	movlb	1	; () banked
  2721  003A5C  EE20 F002          	lfsr	2,2
  2722  003A60  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2723  003A62  26D9               	addwf	fsr2l,f,c
  2724  003A64  5160               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2725  003A66  22DA               	addwfc	fsr2h,f,c
  2726  003A68  50DF               	movf	indf2,w,c
  2727  003A6A  0100               	movlb	0	; () banked
  2728  003A6C  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2729  003A6E  EC3F  F025         	call	_PCA_Write_Reg	;wreg free
  2730                           
  2731                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 25:      PCA_Write_Reg(i2c_obj,se
      +                          rvo_driver_obj->slave_address,0x01,servo_driver_obj->mode_2_cfg);
  2732  003A72  C15D  F060         	movff	ServoDriver_Init@i2c_obj,PCA_Write_Reg@i2c_obj
  2733  003A76  C15E  F061         	movff	ServoDriver_Init@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  2734  003A7A  C15F  FFD9         	movff	ServoDriver_Init@servo_driver_obj,fsr2l
  2735  003A7E  C160  FFDA         	movff	ServoDriver_Init@servo_driver_obj+1,fsr2h
  2736  003A82  50DF               	movf	indf2,w,c
  2737  003A84  0100               	movlb	0	; () banked
  2738  003A86  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  2739  003A88  0E01               	movlw	1
  2740  003A8A  6F63               	movwf	PCA_Write_Reg@reg_address& (0+255),b
  2741  003A8C  0101               	movlb	1	; () banked
  2742  003A8E  EE20 F003          	lfsr	2,3
  2743  003A92  515F               	movf	ServoDriver_Init@servo_driver_obj& (0+255),w,b
  2744  003A94  26D9               	addwf	fsr2l,f,c
  2745  003A96  5160               	movf	(ServoDriver_Init@servo_driver_obj+1)& (0+255),w,b
  2746  003A98  22DA               	addwfc	fsr2h,f,c
  2747  003A9A  50DF               	movf	indf2,w,c
  2748  003A9C  0100               	movlb	0	; () banked
  2749  003A9E  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  2750  003AA0  EC3F  F025         	call	_PCA_Write_Reg	;wreg free
  2751  003AA4                     l300:
  2752  003AA4  0012               	return		;funcret
  2753  003AA6                     __end_of_ServoDriver_Init:
  2754                           	callstack 0
  2755                           
  2756 ;; *************** function _MSSP_I2C_Init *****************
  2757 ;; Defined at:
  2758 ;;		line 23 in file "MCAL/I2C/mcal_i2c.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  i2c_obj         2   14[BANK1 ] PTR const struct .
  2761 ;;		 -> i2c_obj(7), 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  ERRORSTATUS     1    0        unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      unsigned char 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2773 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;Total ram usage:        2 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 10
  2780 ;; This function calls:
  2781 ;;		_I2C_Master_Mode_Clock_Configurations
  2782 ;;		_I2C_Pin_Configurations
  2783 ;;		_I2C_Slave_Mode_Clock_Configurations
  2784 ;; This function is called by:
  2785 ;;		_ServoDriver_Init
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text9
  2790  0030AA                     __ptext9:
  2791                           	callstack 0
  2792  0030AA                     _MSSP_I2C_Init:
  2793                           	callstack 17
  2794  0030AA                     
  2795                           ;MCAL/I2C/mcal_i2c.c: 26:     if (((void*)0)==i2c_obj)
  2796  0030AA  0101               	movlb	1	; () banked
  2797  0030AC  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2798  0030AE  115C               	iorwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2799  0030B0  A4D8               	btfss	status,2,c
  2800  0030B2  EF5D  F018         	goto	u10851
  2801  0030B6  EF5F  F018         	goto	u10850
  2802  0030BA                     u10851:
  2803  0030BA  EF61  F018         	goto	l984
  2804  0030BE                     u10850:
  2805  0030BE                     
  2806                           ; BSR set to: 1
  2807                           ;MCAL/I2C/mcal_i2c.c: 29:     }
  2808  0030BE  EFF3  F018         	goto	l1002
  2809  0030C2                     l984:
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;MCAL/I2C/mcal_i2c.c: 31:     {;MCAL/I2C/mcal_i2c.c: 33:         (SSPCON1bits.SSPEN = 0)
      +                          ;
  2813  0030C2  9AC6               	bcf	198,5,c	;volatile
  2814  0030C4                     
  2815                           ; BSR set to: 1
  2816                           ;MCAL/I2C/mcal_i2c.c: 35:         if(1==i2c_obj->i2c_cfg.i2c_mode)
  2817  0030C4  EE20 F006          	lfsr	2,6
  2818  0030C8  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2819  0030CA  26D9               	addwf	fsr2l,f,c
  2820  0030CC  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2821  0030CE  22DA               	addwfc	fsr2h,f,c
  2822  0030D0  A0DF               	btfss	indf2,0,c
  2823  0030D2  EF6D  F018         	goto	u10861
  2824  0030D6  EF6F  F018         	goto	u10860
  2825  0030DA                     u10861:
  2826  0030DA  EF77  F018         	goto	l10248
  2827  0030DE                     u10860:
  2828  0030DE                     
  2829                           ; BSR set to: 1
  2830                           ;MCAL/I2C/mcal_i2c.c: 36:         {;MCAL/I2C/mcal_i2c.c: 38:            I2C_Master_Mode_
      +                          Clock_Configurations(i2c_obj);
  2831  0030DE  C15B  F159         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  2832  0030E2  C15C  F15A         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  2833  0030E6  ECD3  F01E         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  2834                           
  2835                           ;MCAL/I2C/mcal_i2c.c: 39:         }
  2836  0030EA  EFB3  F018         	goto	l10262
  2837  0030EE                     l10248:
  2838                           
  2839                           ; BSR set to: 1
  2840  0030EE  EE20 F006          	lfsr	2,6
  2841  0030F2  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2842  0030F4  26D9               	addwf	fsr2l,f,c
  2843  0030F6  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2844  0030F8  22DA               	addwfc	fsr2h,f,c
  2845  0030FA  B0DF               	btfsc	indf2,0,c
  2846  0030FC  EF82  F018         	goto	u10871
  2847  003100  EF84  F018         	goto	u10870
  2848  003104                     u10871:
  2849  003104  EFB3  F018         	goto	l10262
  2850  003108                     u10870:
  2851  003108                     
  2852                           ; BSR set to: 1
  2853                           ;MCAL/I2C/mcal_i2c.c: 41:         {;MCAL/I2C/mcal_i2c.c: 43:             if(1==i2c_obj->
      +                          i2c_cfg.i2c_general_call)
  2854  003108  EE20 F006          	lfsr	2,6
  2855  00310C  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2856  00310E  26D9               	addwf	fsr2l,f,c
  2857  003110  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2858  003112  22DA               	addwfc	fsr2h,f,c
  2859  003114  A6DF               	btfss	indf2,3,c
  2860  003116  EF8F  F018         	goto	u10881
  2861  00311A  EF91  F018         	goto	u10880
  2862  00311E                     u10881:
  2863  00311E  EF94  F018         	goto	l10254
  2864  003122                     u10880:
  2865  003122                     
  2866                           ; BSR set to: 1
  2867                           ;MCAL/I2C/mcal_i2c.c: 44:             {;MCAL/I2C/mcal_i2c.c: 45:                 (SSPCON
      +                          2bits.GCEN = 1);
  2868  003122  8EC5               	bsf	197,7,c	;volatile
  2869                           
  2870                           ;MCAL/I2C/mcal_i2c.c: 46:             }
  2871  003124  EFA2  F018         	goto	l990
  2872  003128                     l10254:
  2873                           
  2874                           ; BSR set to: 1
  2875  003128  EE20 F006          	lfsr	2,6
  2876  00312C  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2877  00312E  26D9               	addwf	fsr2l,f,c
  2878  003130  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2879  003132  22DA               	addwfc	fsr2h,f,c
  2880  003134  B6DF               	btfsc	indf2,3,c
  2881  003136  EF9F  F018         	goto	u10891
  2882  00313A  EFA1  F018         	goto	u10890
  2883  00313E                     u10891:
  2884  00313E  EFA2  F018         	goto	l990
  2885  003142                     u10890:
  2886  003142                     
  2887                           ; BSR set to: 1
  2888                           ;MCAL/I2C/mcal_i2c.c: 48:             {;MCAL/I2C/mcal_i2c.c: 49:                 (SSPCON
      +                          2bits.GCEN = 0);
  2889  003142  9EC5               	bcf	197,7,c	;volatile
  2890  003144                     l990:
  2891                           
  2892                           ; BSR set to: 1
  2893                           ;MCAL/I2C/mcal_i2c.c: 53:              SSPCON1bits.WCOL=0;
  2894  003144  9EC6               	bcf	198,7,c	;volatile
  2895                           
  2896                           ;MCAL/I2C/mcal_i2c.c: 55:              SSPCON1bits.SSPOV=0;
  2897  003146  9CC6               	bcf	198,6,c	;volatile
  2898                           
  2899                           ;MCAL/I2C/mcal_i2c.c: 57:              SSPCON1bits.CKP=1;
  2900  003148  88C6               	bsf	198,4,c	;volatile
  2901  00314A                     
  2902                           ; BSR set to: 1
  2903                           ;MCAL/I2C/mcal_i2c.c: 59:              SSPADD=i2c_obj->i2c_cfg.i2c_slave_address;
  2904  00314A  EE20 F005          	lfsr	2,5
  2905  00314E  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2906  003150  26D9               	addwf	fsr2l,f,c
  2907  003152  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2908  003154  22DA               	addwfc	fsr2h,f,c
  2909  003156  50DF               	movf	indf2,w,c
  2910  003158  6EC8               	movwf	200,c	;volatile
  2911  00315A                     
  2912                           ; BSR set to: 1
  2913                           ;MCAL/I2C/mcal_i2c.c: 61:              I2C_Slave_Mode_Clock_Configurations(i2c_obj);
  2914  00315A  C15B  F01E         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Clock_Configurations@i2c_obj
  2915  00315E  C15C  F01F         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Clock_Configurations@i2c_obj+1
  2916  003162  EC7D  F026         	call	_I2C_Slave_Mode_Clock_Configurations	;wreg free
  2917  003166                     l10262:
  2918                           
  2919                           ;MCAL/I2C/mcal_i2c.c: 65:         I2C_Pin_Configurations();
  2920  003166  ECD9  F027         	call	_I2C_Pin_Configurations	;wreg free
  2921  00316A                     
  2922                           ;MCAL/I2C/mcal_i2c.c: 67:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  2923  00316A  0101               	movlb	1	; () banked
  2924  00316C  EE20 F006          	lfsr	2,6
  2925  003170  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2926  003172  26D9               	addwf	fsr2l,f,c
  2927  003174  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2928  003176  22DA               	addwfc	fsr2h,f,c
  2929  003178  A2DF               	btfss	indf2,1,c
  2930  00317A  EFC1  F018         	goto	u10901
  2931  00317E  EFC3  F018         	goto	u10900
  2932  003182                     u10901:
  2933  003182  EFC6  F018         	goto	l10268
  2934  003186                     u10900:
  2935  003186                     
  2936                           ; BSR set to: 1
  2937                           ;MCAL/I2C/mcal_i2c.c: 68:             (SSPSTATbits.SMP = 1);
  2938  003186  8EC7               	bsf	199,7,c	;volatile
  2939                           
  2940                           ;MCAL/I2C/mcal_i2c.c: 69:         }
  2941  003188  EFD4  F018         	goto	l10272
  2942  00318C                     l10268:
  2943                           
  2944                           ; BSR set to: 1
  2945  00318C  EE20 F006          	lfsr	2,6
  2946  003190  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2947  003192  26D9               	addwf	fsr2l,f,c
  2948  003194  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2949  003196  22DA               	addwfc	fsr2h,f,c
  2950  003198  B2DF               	btfsc	indf2,1,c
  2951  00319A  EFD1  F018         	goto	u10911
  2952  00319E  EFD3  F018         	goto	u10910
  2953  0031A2                     u10911:
  2954  0031A2  EFD4  F018         	goto	l10272
  2955  0031A6                     u10910:
  2956  0031A6                     
  2957                           ; BSR set to: 1
  2958                           ;MCAL/I2C/mcal_i2c.c: 71:             (SSPSTATbits.SMP = 0);
  2959  0031A6  9EC7               	bcf	199,7,c	;volatile
  2960  0031A8                     l10272:
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;MCAL/I2C/mcal_i2c.c: 75:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  2964  0031A8  EE20 F006          	lfsr	2,6
  2965  0031AC  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2966  0031AE  26D9               	addwf	fsr2l,f,c
  2967  0031B0  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2968  0031B2  22DA               	addwfc	fsr2h,f,c
  2969  0031B4  A4DF               	btfss	indf2,2,c
  2970  0031B6  EFDF  F018         	goto	u10921
  2971  0031BA  EFE1  F018         	goto	u10920
  2972  0031BE                     u10921:
  2973  0031BE  EFE4  F018         	goto	l10276
  2974  0031C2                     u10920:
  2975  0031C2                     
  2976                           ; BSR set to: 1
  2977                           ;MCAL/I2C/mcal_i2c.c: 76:             (SSPSTATbits.CKE = 1);
  2978  0031C2  8CC7               	bsf	199,6,c	;volatile
  2979                           
  2980                           ;MCAL/I2C/mcal_i2c.c: 77:         }
  2981  0031C4  EFF2  F018         	goto	l999
  2982  0031C8                     l10276:
  2983                           
  2984                           ; BSR set to: 1
  2985  0031C8  EE20 F006          	lfsr	2,6
  2986  0031CC  515B               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  2987  0031CE  26D9               	addwf	fsr2l,f,c
  2988  0031D0  515C               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  2989  0031D2  22DA               	addwfc	fsr2h,f,c
  2990  0031D4  B4DF               	btfsc	indf2,2,c
  2991  0031D6  EFEF  F018         	goto	u10931
  2992  0031DA  EFF1  F018         	goto	u10930
  2993  0031DE                     u10931:
  2994  0031DE  EFF2  F018         	goto	l999
  2995  0031E2                     u10930:
  2996  0031E2                     
  2997                           ; BSR set to: 1
  2998                           ;MCAL/I2C/mcal_i2c.c: 79:             (SSPSTATbits.CKE = 0);
  2999  0031E2  9CC7               	bcf	199,6,c	;volatile
  3000  0031E4                     l999:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;MCAL/I2C/mcal_i2c.c: 89:         (SSPCON1bits.SSPEN = 1);
  3004  0031E4  8AC6               	bsf	198,5,c	;volatile
  3005  0031E6                     l1002:
  3006                           
  3007                           ; BSR set to: 1
  3008  0031E6  0012               	return		;funcret
  3009  0031E8                     __end_of_MSSP_I2C_Init:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _I2C_Slave_Mode_Clock_Configurations *****************
  3013 ;; Defined at:
  3014 ;;		line 325 in file "MCAL/I2C/mcal_i2c.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  3017 ;;		 -> i2c_obj(7), 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  ERRORSTATUS     1    0        unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        3 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 8
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_MSSP_I2C_Init
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text10
  3044  004CFA                     __ptext10:
  3045                           	callstack 0
  3046  004CFA                     _I2C_Slave_Mode_Clock_Configurations:
  3047                           	callstack 18
  3048  004CFA                     
  3049                           ;MCAL/I2C/mcal_i2c.c: 328:     if (((void*)0)==i2c_obj)
  3050  004CFA  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  3051  004CFC  101F               	iorwf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  3052  004CFE  A4D8               	btfss	status,2,c
  3053  004D00  EF84  F026         	goto	u6391
  3054  004D04  EF86  F026         	goto	u6390
  3055  004D08                     u6391:
  3056  004D08  EF88  F026         	goto	l7046
  3057  004D0C                     u6390:
  3058  004D0C                     
  3059                           ;MCAL/I2C/mcal_i2c.c: 331:     }
  3060  004D0C  EF95  F026         	goto	l1097
  3061  004D10                     l7046:
  3062                           
  3063                           ;MCAL/I2C/mcal_i2c.c: 333:     {;MCAL/I2C/mcal_i2c.c: 335:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  3064  004D10  EE20 F004          	lfsr	2,4
  3065  004D14  501E               	movf	I2C_Slave_Mode_Clock_Configurations@i2c_obj^0,w,c
  3066  004D16  26D9               	addwf	fsr2l,f,c
  3067  004D18  501F               	movf	(I2C_Slave_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  3068  004D1A  22DA               	addwfc	fsr2h,f,c
  3069  004D1C  50DF               	movf	indf2,w,c
  3070  004D1E  6E20               	movwf	??_I2C_Slave_Mode_Clock_Configurations^0,c
  3071  004D20  50C6               	movf	198,w,c	;volatile
  3072  004D22  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  3073  004D24  0BF0               	andlw	-16
  3074  004D26  1820               	xorwf	??_I2C_Slave_Mode_Clock_Configurations^0,w,c
  3075  004D28  6EC6               	movwf	198,c	;volatile
  3076  004D2A                     l1097:
  3077  004D2A  0012               	return		;funcret
  3078  004D2C                     __end_of_I2C_Slave_Mode_Clock_Configurations:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _I2C_Pin_Configurations *****************
  3082 ;; Defined at:
  3083 ;;		line 339 in file "MCAL/I2C/mcal_i2c.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		None
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 8
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_MSSP_I2C_Init
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text11
  3112  004FB2                     __ptext11:
  3113                           	callstack 0
  3114  004FB2                     _I2C_Pin_Configurations:
  3115                           	callstack 18
  3116  004FB2                     
  3117                           ;MCAL/I2C/mcal_i2c.c: 341:     TRISCbits.RC3=1;
  3118  004FB2  8694               	bsf	148,3,c	;volatile
  3119                           
  3120                           ;MCAL/I2C/mcal_i2c.c: 342:     TRISCbits.RC4=1;
  3121  004FB4  8894               	bsf	148,4,c	;volatile
  3122  004FB6  0012               	return		;funcret
  3123  004FB8                     __end_of_I2C_Pin_Configurations:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  3127 ;; Defined at:
  3128 ;;		line 310 in file "MCAL/I2C/mcal_i2c.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  i2c_obj         2   12[BANK1 ] PTR const struct .
  3131 ;;		 -> i2c_obj(7), 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  ERRORSTATUS     1    0        unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         1       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:        3 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 9
  3150 ;; This function calls:
  3151 ;;		___fladd
  3152 ;;		___fldiv
  3153 ;;		___fltol
  3154 ;;		___xxtofl
  3155 ;; This function is called by:
  3156 ;;		_MSSP_I2C_Init
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text12
  3161  003DA6                     __ptext12:
  3162                           	callstack 0
  3163  003DA6                     _I2C_Master_Mode_Clock_Configurations:
  3164                           	callstack 17
  3165  003DA6                     
  3166                           ;MCAL/I2C/mcal_i2c.c: 313:     if (((void*)0)==i2c_obj)
  3167  003DA6  0101               	movlb	1	; () banked
  3168  003DA8  5159               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  3169  003DAA  115A               	iorwf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  3170  003DAC  A4D8               	btfss	status,2,c
  3171  003DAE  EFDB  F01E         	goto	u10831
  3172  003DB2  EFDD  F01E         	goto	u10830
  3173  003DB6                     u10831:
  3174  003DB6  EFDF  F01E         	goto	l10222
  3175  003DBA                     u10830:
  3176  003DBA                     
  3177                           ; BSR set to: 1
  3178                           ;MCAL/I2C/mcal_i2c.c: 316:     }
  3179  003DBA  EF2E  F01F         	goto	l1092
  3180  003DBE                     l10222:
  3181                           
  3182                           ; BSR set to: 1
  3183                           ;MCAL/I2C/mcal_i2c.c: 318:     {;MCAL/I2C/mcal_i2c.c: 320:         SSPCON1bits.SSPM=i2c_
      +                          obj->i2c_cfg.i2c_mode_cfg;
  3184  003DBE  EE20 F004          	lfsr	2,4
  3185  003DC2  5159               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  3186  003DC4  26D9               	addwf	fsr2l,f,c
  3187  003DC6  515A               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  3188  003DC8  22DA               	addwfc	fsr2h,f,c
  3189  003DCA  50DF               	movf	indf2,w,c
  3190  003DCC  6E24               	movwf	??_I2C_Master_Mode_Clock_Configurations^0,c
  3191  003DCE  50C6               	movf	198,w,c	;volatile
  3192  003DD0  1824               	xorwf	??_I2C_Master_Mode_Clock_Configurations^0,w,c
  3193  003DD2  0BF0               	andlw	-16
  3194  003DD4  1824               	xorwf	??_I2C_Master_Mode_Clock_Configurations^0,w,c
  3195  003DD6  6EC6               	movwf	198,c	;volatile
  3196  003DD8                     
  3197                           ; BSR set to: 1
  3198                           ;MCAL/I2C/mcal_i2c.c: 321:         SSPADD=(uint8)(((8000000/4.0)/i2c_obj->i2c_clock)-1);
  3199  003DD8  0E00               	movlw	0
  3200  003DDA  0100               	movlb	0	; () banked
  3201  003DDC  6FA0               	movwf	___fladd@a& (0+255),b
  3202  003DDE  0E00               	movlw	0
  3203  003DE0  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  3204  003DE2  0E80               	movlw	128
  3205  003DE4  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  3206  003DE6  0EBF               	movlw	191
  3207  003DE8  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  3208  003DEA  C159  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  3209  003DEE  C15A  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  3210  003DF2  CFDE F01E          	movff	postinc2,___xxtofl@val
  3211  003DF6  CFDE F01F          	movff	postinc2,___xxtofl@val+1
  3212  003DFA  CFDE F020          	movff	postinc2,___xxtofl@val+2
  3213  003DFE  CFDE F021          	movff	postinc2,___xxtofl@val+3
  3214  003E02  0E00               	movlw	0
  3215  003E04  EC04  F014         	call	___xxtofl
  3216  003E08  C01E  F06E         	movff	?___xxtofl,___fldiv@a
  3217  003E0C  C01F  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  3218  003E10  C020  F070         	movff	?___xxtofl+2,___fldiv@a+2
  3219  003E14  C021  F071         	movff	?___xxtofl+3,___fldiv@a+3
  3220  003E18  0E00               	movlw	0
  3221  003E1A  0100               	movlb	0	; () banked
  3222  003E1C  6F6A               	movwf	___fldiv@b& (0+255),b
  3223  003E1E  0E24               	movlw	36
  3224  003E20  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  3225  003E22  0EF4               	movlw	244
  3226  003E24  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  3227  003E26  0E49               	movlw	73
  3228  003E28  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  3229  003E2A  ECB3  F00E         	call	___fldiv	;wreg free
  3230  003E2E  C06A  F09C         	movff	?___fldiv,___fladd@b
  3231  003E32  C06B  F09D         	movff	?___fldiv+1,___fladd@b+1
  3232  003E36  C06C  F09E         	movff	?___fldiv+2,___fladd@b+2
  3233  003E3A  C06D  F09F         	movff	?___fldiv+3,___fladd@b+3
  3234  003E3E  EC24  F008         	call	___fladd	;wreg free
  3235  003E42  C09C  F151         	movff	?___fladd,___fltol@f1
  3236  003E46  C09D  F152         	movff	?___fladd+1,___fltol@f1+1
  3237  003E4A  C09E  F153         	movff	?___fladd+2,___fltol@f1+2
  3238  003E4E  C09F  F154         	movff	?___fladd+3,___fltol@f1+3
  3239  003E52  EC12  F01A         	call	___fltol	;wreg free
  3240  003E56  0101               	movlb	1	; () banked
  3241  003E58  5151               	movf	?___fltol& (0+255),w,b
  3242  003E5A  6EC8               	movwf	200,c	;volatile
  3243  003E5C                     l1092:
  3244                           
  3245                           ; BSR set to: 1
  3246  003E5C  0012               	return		;funcret
  3247  003E5E                     __end_of_I2C_Master_Mode_Clock_Configurations:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function _ECU_DC_Motor_Init *****************
  3251 ;; Defined at:
  3252 ;;		line 19 in file "ECU/DC_Motor/ecu_dc_motor.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  dc_motor        2    6[BANK0 ] PTR const struct .
  3255 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  ret_value       1    0        unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      unsigned char 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 10
  3274 ;; This function calls:
  3275 ;;		_GPIO_Pin_Initialize
  3276 ;; This function is called by:
  3277 ;;		_Robot_Nav_Init
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text13
  3282  004EB4                     __ptext13:
  3283                           	callstack 0
  3284  004EB4                     _ECU_DC_Motor_Init:
  3285                           	callstack 18
  3286  004EB4                     
  3287                           ;ECU/DC_Motor/ecu_dc_motor.c: 22:     if(((void*)0) == dc_motor)
  3288  004EB4  0100               	movlb	0	; () banked
  3289  004EB6  5166               	movf	ECU_DC_Motor_Init@dc_motor& (0+255),w,b
  3290  004EB8  1167               	iorwf	(ECU_DC_Motor_Init@dc_motor+1)& (0+255),w,b
  3291  004EBA  A4D8               	btfss	status,2,c
  3292  004EBC  EF62  F027         	goto	u11441
  3293  004EC0  EF64  F027         	goto	u11440
  3294  004EC4                     u11441:
  3295  004EC4  EF66  F027         	goto	l10682
  3296  004EC8                     u11440:
  3297  004EC8                     
  3298                           ; BSR set to: 0
  3299                           ;ECU/DC_Motor/ecu_dc_motor.c: 25:     }
  3300  004EC8  EF6C  F027         	goto	l55
  3301  004ECC                     l10682:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;ECU/DC_Motor/ecu_dc_motor.c: 27:     {;ECU/DC_Motor/ecu_dc_motor.c: 28:         GPIO_Pi
      +                          n_Initialize(&(dc_motor->dc_motor));
  3305  004ECC  C066  F022         	movff	ECU_DC_Motor_Init@dc_motor,GPIO_Pin_Initialize@_pin_config
  3306  004ED0  C067  F023         	movff	ECU_DC_Motor_Init@dc_motor+1,GPIO_Pin_Initialize@_pin_config+1
  3307  004ED4  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  3308  004ED8                     l55:
  3309  004ED8  0012               	return		;funcret
  3310  004EDA                     __end_of_ECU_DC_Motor_Init:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _CCP_PWM_Start *****************
  3314 ;; Defined at:
  3315 ;;		line 202 in file "MCAL/CCP/hal_ccp.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  3318 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  ret             1    0        unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      unsigned char 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;Total ram usage:        3 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 8
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_Robot_Nav_Init
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text14
  3345  004AE4                     __ptext14:
  3346                           	callstack 0
  3347  004AE4                     _CCP_PWM_Start:
  3348                           	callstack 20
  3349  004AE4                     
  3350                           ;MCAL/CCP/hal_ccp.c: 205:     if(((void*)0) == _ccp_obj){
  3351  004AE4  501E               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  3352  004AE6  101F               	iorwf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  3353  004AE8  A4D8               	btfss	status,2,c
  3354  004AEA  EF79  F025         	goto	u7331
  3355  004AEE  EF7B  F025         	goto	u7330
  3356  004AF2                     u7331:
  3357  004AF2  EF7D  F025         	goto	l7672
  3358  004AF6                     u7330:
  3359  004AF6                     
  3360                           ;MCAL/CCP/hal_ccp.c: 207:     }
  3361  004AF6  EF9F  F025         	goto	l543
  3362  004AFA                     l7672:
  3363                           
  3364                           ;MCAL/CCP/hal_ccp.c: 209:         if(CCP1_INST == _ccp_obj->ccp_inst){
  3365  004AFA  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  3366  004AFE  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  3367  004B02  50DF               	movf	indf2,w,c
  3368  004B04  A4D8               	btfss	status,2,c
  3369  004B06  EF87  F025         	goto	u7341
  3370  004B0A  EF89  F025         	goto	u7340
  3371  004B0E                     u7341:
  3372  004B0E  EF8F  F025         	goto	l7676
  3373  004B12                     u7340:
  3374  004B12                     
  3375                           ;MCAL/CCP/hal_ccp.c: 210:             CCP1CONbits.CCP1M = ((uint8)0x0C);
  3376  004B12  50BD               	movf	189,w,c	;volatile
  3377  004B14  0BF0               	andlw	-16
  3378  004B16  090C               	iorlw	12
  3379  004B18  6EBD               	movwf	189,c	;volatile
  3380                           
  3381                           ;MCAL/CCP/hal_ccp.c: 211:         }
  3382  004B1A  EF9F  F025         	goto	l7680
  3383  004B1E                     l7676:
  3384  004B1E  C01E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  3385  004B22  C01F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  3386  004B26  04DE               	decf	postinc2,w,c
  3387  004B28  A4D8               	btfss	status,2,c
  3388  004B2A  EF99  F025         	goto	u7351
  3389  004B2E  EF9B  F025         	goto	u7350
  3390  004B32                     u7351:
  3391  004B32  EF9F  F025         	goto	l7680
  3392  004B36                     u7350:
  3393  004B36                     
  3394                           ;MCAL/CCP/hal_ccp.c: 213:             CCP2CONbits.CCP2M = ((uint8)0x0C);
  3395  004B36  50BA               	movf	186,w,c	;volatile
  3396  004B38  0BF0               	andlw	-16
  3397  004B3A  090C               	iorlw	12
  3398  004B3C  6EBA               	movwf	186,c	;volatile
  3399  004B3E                     l7680:
  3400  004B3E                     l543:
  3401  004B3E  0012               	return		;funcret
  3402  004B40                     __end_of_CCP_PWM_Start:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _CCP_Init *****************
  3406 ;; Defined at:
  3407 ;;		line 24 in file "MCAL/CCP/hal_ccp.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  _ccp_obj        2    6[BANK0 ] PTR const struct .
  3410 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  ret             1    0        unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      unsigned char 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        3 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 10
  3429 ;; This function calls:
  3430 ;;		_CCP_Capture_Mode_Config
  3431 ;;		_CCP_Compare_Mode_Config
  3432 ;;		_CCP_Interrupt_Config
  3433 ;;		_CCP_PWM_Mode_Config
  3434 ;;		_GPIO_Pin_Initialize
  3435 ;; This function is called by:
  3436 ;;		_Robot_Nav_Init
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text15
  3441  00362E                     __ptext15:
  3442                           	callstack 0
  3443  00362E                     _CCP_Init:
  3444                           	callstack 18
  3445  00362E                     
  3446                           ;MCAL/CCP/hal_ccp.c: 26:     if(((void*)0) == _ccp_obj){
  3447  00362E  0100               	movlb	0	; () banked
  3448  003630  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3449  003632  1167               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3450  003634  A4D8               	btfss	status,2,c
  3451  003636  EF1F  F01B         	goto	u11471
  3452  00363A  EF21  F01B         	goto	u11470
  3453  00363E                     u11471:
  3454  00363E  EF23  F01B         	goto	l10704
  3455  003642                     u11470:
  3456  003642                     
  3457                           ; BSR set to: 0
  3458                           ;MCAL/CCP/hal_ccp.c: 28:     }
  3459  003642  EF93  F01B         	goto	l516
  3460  003646                     l10704:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;MCAL/CCP/hal_ccp.c: 31:         if(CCP1_INST == _ccp_obj->ccp_inst){
  3464  003646  C066  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  3465  00364A  C067  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  3466  00364E  50DF               	movf	indf2,w,c
  3467  003650  A4D8               	btfss	status,2,c
  3468  003652  EF2D  F01B         	goto	u11481
  3469  003656  EF2F  F01B         	goto	u11480
  3470  00365A                     u11481:
  3471  00365A  EF33  F01B         	goto	l10708
  3472  00365E                     u11480:
  3473  00365E                     
  3474                           ; BSR set to: 0
  3475                           ;MCAL/CCP/hal_ccp.c: 32:             (CCP1CONbits.CCP1M = ((uint8)0x00));
  3476  00365E  0EF0               	movlw	-16
  3477  003660  16BD               	andwf	189,f,c	;volatile
  3478                           
  3479                           ;MCAL/CCP/hal_ccp.c: 33:         }
  3480  003662  EF41  F01B         	goto	l10712
  3481  003666                     l10708:
  3482                           
  3483                           ; BSR set to: 0
  3484  003666  C066  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  3485  00366A  C067  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  3486  00366E  04DE               	decf	postinc2,w,c
  3487  003670  A4D8               	btfss	status,2,c
  3488  003672  EF3D  F01B         	goto	u11491
  3489  003676  EF3F  F01B         	goto	u11490
  3490  00367A                     u11491:
  3491  00367A  EF41  F01B         	goto	l10712
  3492  00367E                     u11490:
  3493  00367E                     
  3494                           ; BSR set to: 0
  3495                           ;MCAL/CCP/hal_ccp.c: 35:             (CCP2CONbits.CCP2M = ((uint8)0x00));
  3496  00367E  0EF0               	movlw	-16
  3497  003680  16BA               	andwf	186,f,c	;volatile
  3498  003682                     l10712:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;MCAL/CCP/hal_ccp.c: 40:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mode){
  3502  003682  EE20 F001          	lfsr	2,1
  3503  003686  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3504  003688  26D9               	addwf	fsr2l,f,c
  3505  00368A  5167               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3506  00368C  22DA               	addwfc	fsr2h,f,c
  3507  00368E  50DF               	movf	indf2,w,c
  3508  003690  A4D8               	btfss	status,2,c
  3509  003692  EF4D  F01B         	goto	u11501
  3510  003696  EF4F  F01B         	goto	u11500
  3511  00369A                     u11501:
  3512  00369A  EF57  F01B         	goto	l10716
  3513  00369E                     u11500:
  3514  00369E                     
  3515                           ; BSR set to: 0
  3516  00369E  C066  F021         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Config@_ccp_obj
  3517  0036A2  C067  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Config@_ccp_obj+1
  3518  0036A6  ECB3  F017         	call	_CCP_Capture_Mode_Config	;wreg free
  3519                           
  3520                           ;MCAL/CCP/hal_ccp.c: 42:         }
  3521  0036AA  EF84  F01B         	goto	l10724
  3522  0036AE                     l10716:
  3523                           
  3524                           ; BSR set to: 0
  3525  0036AE  EE20 F001          	lfsr	2,1
  3526  0036B2  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3527  0036B4  26D9               	addwf	fsr2l,f,c
  3528  0036B6  5167               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3529  0036B8  22DA               	addwfc	fsr2h,f,c
  3530  0036BA  04DE               	decf	postinc2,w,c
  3531  0036BC  A4D8               	btfss	status,2,c
  3532  0036BE  EF63  F01B         	goto	u11511
  3533  0036C2  EF65  F01B         	goto	u11510
  3534  0036C6                     u11511:
  3535  0036C6  EF6D  F01B         	goto	l10720
  3536  0036CA                     u11510:
  3537  0036CA                     
  3538                           ; BSR set to: 0
  3539  0036CA  C066  F021         	movff	CCP_Init@_ccp_obj,CCP_Compare_Mode_Config@_ccp_obj
  3540  0036CE  C067  F022         	movff	CCP_Init@_ccp_obj+1,CCP_Compare_Mode_Config@_ccp_obj+1
  3541  0036D2  ECA4  F015         	call	_CCP_Compare_Mode_Config	;wreg free
  3542                           
  3543                           ;MCAL/CCP/hal_ccp.c: 46:         }
  3544  0036D6  EF84  F01B         	goto	l10724
  3545  0036DA                     l10720:
  3546                           
  3547                           ; BSR set to: 0
  3548  0036DA  EE20 F001          	lfsr	2,1
  3549  0036DE  5166               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  3550  0036E0  26D9               	addwf	fsr2l,f,c
  3551  0036E2  5167               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3552  0036E4  22DA               	addwfc	fsr2h,f,c
  3553  0036E6  0E02               	movlw	2
  3554  0036E8  18DE               	xorwf	postinc2,w,c
  3555  0036EA  A4D8               	btfss	status,2,c
  3556  0036EC  EF7A  F01B         	goto	u11521
  3557  0036F0  EF7C  F01B         	goto	u11520
  3558  0036F4                     u11521:
  3559  0036F4  EF84  F01B         	goto	l513
  3560  0036F8                     u11520:
  3561  0036F8                     
  3562                           ; BSR set to: 0
  3563                           ;MCAL/CCP/hal_ccp.c: 50:             CCP_PWM_Mode_Config(_ccp_obj);
  3564  0036F8  C066  F021         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Config@_ccp_obj
  3565  0036FC  C067  F022         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Config@_ccp_obj+1
  3566  003700  EC8A  F020         	call	_CCP_PWM_Mode_Config	;wreg free
  3567                           
  3568                           ;MCAL/CCP/hal_ccp.c: 51:         }
  3569  003704  EF84  F01B         	goto	l10724
  3570  003708                     l513:
  3571  003708                     l10724:
  3572  003708  0E03               	movlw	3
  3573  00370A  0100               	movlb	0	; () banked
  3574  00370C  2566               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  3575  00370E  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  3576  003710  0E00               	movlw	0
  3577  003712  2167               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  3578  003714  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  3579  003716  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  3580  00371A                     
  3581                           ;MCAL/CCP/hal_ccp.c: 58:         CCP_Interrupt_Config(_ccp_obj);
  3582  00371A  C066  F01E         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Config@_ccp_obj
  3583  00371E  C067  F01F         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Config@_ccp_obj+1
  3584  003722  ECDE  F027         	call	_CCP_Interrupt_Config	;wreg free
  3585  003726                     l516:
  3586  003726  0012               	return		;funcret
  3587  003728                     __end_of_CCP_Init:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function _CCP_PWM_Mode_Config *****************
  3591 ;; Defined at:
  3592 ;;		line 264 in file "MCAL/CCP/hal_ccp.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  3595 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:        3 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 9
  3614 ;; This function calls:
  3615 ;;		_Timer2_Init
  3616 ;; This function is called by:
  3617 ;;		_CCP_Init
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text16
  3622  004114                     __ptext16:
  3623                           	callstack 0
  3624  004114                     _CCP_PWM_Mode_Config:
  3625                           	callstack 18
  3626  004114                     
  3627                           ;MCAL/CCP/hal_ccp.c: 269:     PR2 = _ccp_obj->timer2.timer2_preload_value ;
  3628  004114  EE20 F009          	lfsr	2,9
  3629  004118  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3630  00411A  26D9               	addwf	fsr2l,f,c
  3631  00411C  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3632  00411E  22DA               	addwfc	fsr2h,f,c
  3633  004120  50DF               	movf	indf2,w,c
  3634  004122  6ECB               	movwf	203,c	;volatile
  3635  004124                     
  3636                           ;MCAL/CCP/hal_ccp.c: 270:     Timer2_Init(&(_ccp_obj->timer2));
  3637  004124  0E09               	movlw	9
  3638  004126  2421               	addwf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3639  004128  6E1E               	movwf	Timer2_Init@_timer2^0,c
  3640  00412A  0E00               	movlw	0
  3641  00412C  2022               	addwfc	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3642  00412E  6E1F               	movwf	(Timer2_Init@_timer2+1)^0,c
  3643  004130  EC67  F023         	call	_Timer2_Init	;wreg free
  3644  004134                     
  3645                           ;MCAL/CCP/hal_ccp.c: 271:     if(CCP1_INST == _ccp_obj->ccp_inst){
  3646  004134  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  3647  004138  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  3648  00413C  50DF               	movf	indf2,w,c
  3649  00413E  A4D8               	btfss	status,2,c
  3650  004140  EFA4  F020         	goto	u6701
  3651  004144  EFA6  F020         	goto	u6700
  3652  004148                     u6701:
  3653  004148  EFBB  F020         	goto	l7298
  3654  00414C                     u6700:
  3655  00414C                     
  3656                           ;MCAL/CCP/hal_ccp.c: 272:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  3657  00414C  EE20 F002          	lfsr	2,2
  3658  004150  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3659  004152  26D9               	addwf	fsr2l,f,c
  3660  004154  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3661  004156  22DA               	addwfc	fsr2h,f,c
  3662  004158  0E0C               	movlw	12
  3663  00415A  18DE               	xorwf	postinc2,w,c
  3664  00415C  A4D8               	btfss	status,2,c
  3665  00415E  EFB3  F020         	goto	u6711
  3666  004162  EFB5  F020         	goto	u6710
  3667  004166                     u6711:
  3668  004166  EFDA  F020         	goto	l563
  3669  00416A                     u6710:
  3670  00416A                     
  3671                           ;MCAL/CCP/hal_ccp.c: 273:             (CCP1CONbits.CCP1M = ((uint8)0x0C));
  3672  00416A  50BD               	movf	189,w,c	;volatile
  3673  00416C  0BF0               	andlw	-16
  3674  00416E  090C               	iorlw	12
  3675  004170  6EBD               	movwf	189,c	;volatile
  3676                           
  3677                           ;MCAL/CCP/hal_ccp.c: 274:         }
  3678  004172  EFDA  F020         	goto	l563
  3679  004176                     l7298:
  3680  004176  C021  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  3681  00417A  C022  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  3682  00417E  04DE               	decf	postinc2,w,c
  3683  004180  A4D8               	btfss	status,2,c
  3684  004182  EFC5  F020         	goto	u6721
  3685  004186  EFC7  F020         	goto	u6720
  3686  00418A                     u6721:
  3687  00418A  EFDA  F020         	goto	l563
  3688  00418E                     u6720:
  3689  00418E                     
  3690                           ;MCAL/CCP/hal_ccp.c: 278:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  3691  00418E  EE20 F002          	lfsr	2,2
  3692  004192  5021               	movf	CCP_PWM_Mode_Config@_ccp_obj^0,w,c
  3693  004194  26D9               	addwf	fsr2l,f,c
  3694  004196  5022               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)^0,w,c
  3695  004198  22DA               	addwfc	fsr2h,f,c
  3696  00419A  0E0C               	movlw	12
  3697  00419C  18DE               	xorwf	postinc2,w,c
  3698  00419E  A4D8               	btfss	status,2,c
  3699  0041A0  EFD4  F020         	goto	u6731
  3700  0041A4  EFD6  F020         	goto	u6730
  3701  0041A8                     u6731:
  3702  0041A8  EFDA  F020         	goto	l563
  3703  0041AC                     u6730:
  3704  0041AC                     
  3705                           ;MCAL/CCP/hal_ccp.c: 279:             (CCP2CONbits.CCP2M = ((uint8)0x0C));
  3706  0041AC  50BA               	movf	186,w,c	;volatile
  3707  0041AE  0BF0               	andlw	-16
  3708  0041B0  090C               	iorlw	12
  3709  0041B2  6EBA               	movwf	186,c	;volatile
  3710  0041B4                     l563:
  3711  0041B4  0012               	return		;funcret
  3712  0041B6                     __end_of_CCP_PWM_Mode_Config:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _Timer2_Init *****************
  3716 ;; Defined at:
  3717 ;;		line 15 in file "MCAL/TIMER2/mcal_timer2.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  _timer2         2   29[COMRAM] PTR const struct .
  3720 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  ERRORSTATUS     1    0        unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      unsigned char 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:        3 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; Hardware stack levels required when called: 8
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_CCP_PWM_Mode_Config
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text17
  3747  0046CE                     __ptext17:
  3748                           	callstack 0
  3749  0046CE                     _Timer2_Init:
  3750                           	callstack 18
  3751  0046CE                     
  3752                           ;MCAL/TIMER2/mcal_timer2.c: 17:   if (((void*)0) == _timer2) {
  3753  0046CE  501E               	movf	Timer2_Init@_timer2^0,w,c
  3754  0046D0  101F               	iorwf	(Timer2_Init@_timer2+1)^0,w,c
  3755  0046D2  A4D8               	btfss	status,2,c
  3756  0046D4  EF6E  F023         	goto	u6341
  3757  0046D8  EF70  F023         	goto	u6340
  3758  0046DC                     u6341:
  3759  0046DC  EF72  F023         	goto	l1967
  3760  0046E0                     u6340:
  3761  0046E0                     
  3762                           ;MCAL/TIMER2/mcal_timer2.c: 19:   } else {
  3763  0046E0  EF9D  F023         	goto	l1969
  3764  0046E4                     l1967:
  3765                           
  3766                           ;MCAL/TIMER2/mcal_timer2.c: 21:     (T2CONbits.TMR2ON=0);
  3767  0046E4  94CA               	bcf	202,2,c	;volatile
  3768  0046E6                     
  3769                           ;MCAL/TIMER2/mcal_timer2.c: 23:     (T2CONbits.T2CKPS=_timer2->timer2_prescaler_value);
  3770  0046E6  EE20 F001          	lfsr	2,1
  3771  0046EA  501E               	movf	Timer2_Init@_timer2^0,w,c
  3772  0046EC  26D9               	addwf	fsr2l,f,c
  3773  0046EE  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  3774  0046F0  22DA               	addwfc	fsr2h,f,c
  3775  0046F2  50DF               	movf	indf2,w,c
  3776  0046F4  6E20               	movwf	??_Timer2_Init^0,c
  3777  0046F6  50CA               	movf	202,w,c	;volatile
  3778  0046F8  1820               	xorwf	??_Timer2_Init^0,w,c
  3779  0046FA  0BFC               	andlw	-4
  3780  0046FC  1820               	xorwf	??_Timer2_Init^0,w,c
  3781  0046FE  6ECA               	movwf	202,c	;volatile
  3782                           
  3783                           ;MCAL/TIMER2/mcal_timer2.c: 25:     (T2CONbits.T2OUTPS=_timer2->timer2_postscaler_value)
      +                          ;
  3784  004700  EE20 F002          	lfsr	2,2
  3785  004704  501E               	movf	Timer2_Init@_timer2^0,w,c
  3786  004706  26D9               	addwf	fsr2l,f,c
  3787  004708  501F               	movf	(Timer2_Init@_timer2+1)^0,w,c
  3788  00470A  22DA               	addwfc	fsr2h,f,c
  3789  00470C  50DF               	movf	indf2,w,c
  3790  00470E  6E20               	movwf	??_Timer2_Init^0,c
  3791  004710  4620               	rlncf	??_Timer2_Init^0,f,c
  3792  004712  4620               	rlncf	??_Timer2_Init^0,f,c
  3793  004714  4620               	rlncf	??_Timer2_Init^0,f,c
  3794  004716  50CA               	movf	202,w,c	;volatile
  3795  004718  1820               	xorwf	??_Timer2_Init^0,w,c
  3796  00471A  0B87               	andlw	-121
  3797  00471C  1820               	xorwf	??_Timer2_Init^0,w,c
  3798  00471E  6ECA               	movwf	202,c	;volatile
  3799  004720                     
  3800                           ;MCAL/TIMER2/mcal_timer2.c: 27:     TMR2 = _timer2->timer2_preload_value;
  3801  004720  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  3802  004724  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  3803  004728  50DF               	movf	indf2,w,c
  3804  00472A  6ECC               	movwf	204,c	;volatile
  3805  00472C                     
  3806                           ;MCAL/TIMER2/mcal_timer2.c: 28:     Timer2_PreLoaded_Value_Store = _timer2->timer2_prelo
      +                          ad_value;
  3807  00472C  C01E  FFD9         	movff	Timer2_Init@_timer2,fsr2l
  3808  004730  C01F  FFDA         	movff	Timer2_Init@_timer2+1,fsr2h
  3809  004734  50DF               	movf	indf2,w,c
  3810  004736  6E2B               	movwf	_Timer2_PreLoaded_Value_Store^0,c
  3811  004738                     
  3812                           ;MCAL/TIMER2/mcal_timer2.c: 53:     (T2CONbits.TMR2ON=1);
  3813  004738  84CA               	bsf	202,2,c	;volatile
  3814  00473A                     l1969:
  3815  00473A  0012               	return		;funcret
  3816  00473C                     __end_of_Timer2_Init:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _CCP_Interrupt_Config *****************
  3820 ;; Defined at:
  3821 ;;		line 287 in file "MCAL/CCP/hal_ccp.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  3824 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		None
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 8
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_CCP_Init
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text18
  3851  004FBC                     __ptext18:
  3852                           	callstack 0
  3853  004FBC                     _CCP_Interrupt_Config:
  3854                           	callstack 19
  3855  004FBC  0012               	return		;funcret
  3856  004FBE                     __end_of_CCP_Interrupt_Config:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _CCP_Compare_Mode_Config *****************
  3860 ;; Defined at:
  3861 ;;		line 406 in file "MCAL/CCP/hal_ccp.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  3864 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  ret             1    0[BANK0 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      unsigned char 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        5 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 9
  3883 ;; This function calls:
  3884 ;;		_CCP_Mode_Timer_Select
  3885 ;; This function is called by:
  3886 ;;		_CCP_Init
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text19
  3891  002B48                     __ptext19:
  3892                           	callstack 0
  3893  002B48                     _CCP_Compare_Mode_Config:
  3894                           	callstack 18
  3895  002B48                     
  3896                           ;MCAL/CCP/hal_ccp.c: 407:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  3897  002B48  0E01               	movlw	1
  3898  002B4A  0100               	movlb	0	; () banked
  3899  002B4C  6F60               	movwf	CCP_Compare_Mode_Config@ret& (0+255),b
  3900  002B4E                     
  3901                           ; BSR set to: 0
  3902                           ;MCAL/CCP/hal_ccp.c: 409:     if(CCP1_INST == _ccp_obj->ccp_inst){
  3903  002B4E  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  3904  002B52  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  3905  002B56  50DF               	movf	indf2,w,c
  3906  002B58  A4D8               	btfss	status,2,c
  3907  002B5A  EFB1  F015         	goto	u10961
  3908  002B5E  EFB3  F015         	goto	u10960
  3909  002B62                     u10961:
  3910  002B62  EFFE  F015         	goto	l10364
  3911  002B66                     u10960:
  3912  002B66  EFD7  F015         	goto	l10362
  3913  002B6A                     l10350:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;MCAL/CCP/hal_ccp.c: 413:                 (CCP1CONbits.CCP1M = ((uint8)0x08));
  3917  002B6A  50BD               	movf	189,w,c	;volatile
  3918  002B6C  0BF0               	andlw	-16
  3919  002B6E  0908               	iorlw	8
  3920  002B70  6EBD               	movwf	189,c	;volatile
  3921                           
  3922                           ;MCAL/CCP/hal_ccp.c: 414:                 break;
  3923  002B72  EF51  F016         	goto	l10382
  3924  002B76                     l10352:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;MCAL/CCP/hal_ccp.c: 416:                 (CCP1CONbits.CCP1M = ((uint8)0x09));
  3928  002B76  50BD               	movf	189,w,c	;volatile
  3929  002B78  0BF0               	andlw	-16
  3930  002B7A  0909               	iorlw	9
  3931  002B7C  6EBD               	movwf	189,c	;volatile
  3932                           
  3933                           ;MCAL/CCP/hal_ccp.c: 417:                 break;
  3934  002B7E  EF51  F016         	goto	l10382
  3935  002B82                     l10354:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;MCAL/CCP/hal_ccp.c: 419:                 (CCP1CONbits.CCP1M = ((uint8)0x02));
  3939  002B82  50BD               	movf	189,w,c	;volatile
  3940  002B84  0BF0               	andlw	-16
  3941  002B86  0902               	iorlw	2
  3942  002B88  6EBD               	movwf	189,c	;volatile
  3943                           
  3944                           ;MCAL/CCP/hal_ccp.c: 420:                 break;
  3945  002B8A  EF51  F016         	goto	l10382
  3946  002B8E                     l10356:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;MCAL/CCP/hal_ccp.c: 422:                 (CCP1CONbits.CCP1M = ((uint8)0x0A));
  3950  002B8E  50BD               	movf	189,w,c	;volatile
  3951  002B90  0BF0               	andlw	-16
  3952  002B92  090A               	iorlw	10
  3953  002B94  6EBD               	movwf	189,c	;volatile
  3954                           
  3955                           ;MCAL/CCP/hal_ccp.c: 423:                 break;
  3956  002B96  EF51  F016         	goto	l10382
  3957  002B9A                     l10358:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;MCAL/CCP/hal_ccp.c: 425:                 (CCP1CONbits.CCP1M = ((uint8)0x0B));
  3961  002B9A  50BD               	movf	189,w,c	;volatile
  3962  002B9C  0BF0               	andlw	-16
  3963  002B9E  090B               	iorlw	11
  3964  002BA0  6EBD               	movwf	189,c	;volatile
  3965                           
  3966                           ;MCAL/CCP/hal_ccp.c: 426:                 break;
  3967  002BA2  EF51  F016         	goto	l10382
  3968  002BA6                     l10360:
  3969                           
  3970                           ; BSR set to: 0
  3971  002BA6  0E00               	movlw	0
  3972  002BA8  6F60               	movwf	CCP_Compare_Mode_Config@ret& (0+255),b
  3973                           
  3974                           ;MCAL/CCP/hal_ccp.c: 428:         }
  3975  002BAA  EF51  F016         	goto	l10382
  3976  002BAE                     l10362:
  3977                           
  3978                           ; BSR set to: 0
  3979  002BAE  EE20 F002          	lfsr	2,2
  3980  002BB2  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  3981  002BB4  26D9               	addwf	fsr2l,f,c
  3982  002BB6  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  3983  002BB8  22DA               	addwfc	fsr2h,f,c
  3984  002BBA  50DF               	movf	indf2,w,c
  3985  002BBC  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  3986  002BBE  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  3987                           
  3988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 1, Range of values is 0 to 0
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte            4     3 (average)
  3994                           ;	Chosen strategy is simple_byte
  3995  002BC0  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  3996  002BC2  0A00               	xorlw	0	; case 0
  3997  002BC4  B4D8               	btfsc	status,2,c
  3998  002BC6  EFE7  F015         	goto	l12096
  3999  002BCA  EFD3  F015         	goto	l10360
  4000  002BCE                     l12096:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ; Switch size 1, requested type "simple"
  4004                           ; Number of cases is 5, Range of values is 2 to 11
  4005                           ; switch strategies available:
  4006                           ; Name         Instructions Cycles
  4007                           ; simple_byte           16     9 (average)
  4008                           ;	Chosen strategy is simple_byte
  4009  002BCE  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  4010  002BD0  0A02               	xorlw	2	; case 2
  4011  002BD2  B4D8               	btfsc	status,2,c
  4012  002BD4  EFC1  F015         	goto	l10354
  4013  002BD8  0A0A               	xorlw	10	; case 8
  4014  002BDA  B4D8               	btfsc	status,2,c
  4015  002BDC  EFB5  F015         	goto	l10350
  4016  002BE0  0A01               	xorlw	1	; case 9
  4017  002BE2  B4D8               	btfsc	status,2,c
  4018  002BE4  EFBB  F015         	goto	l10352
  4019  002BE8  0A03               	xorlw	3	; case 10
  4020  002BEA  B4D8               	btfsc	status,2,c
  4021  002BEC  EFC7  F015         	goto	l10356
  4022  002BF0  0A01               	xorlw	1	; case 11
  4023  002BF2  B4D8               	btfsc	status,2,c
  4024  002BF4  EFCD  F015         	goto	l10358
  4025  002BF8  EFD3  F015         	goto	l10360
  4026  002BFC                     l10364:
  4027                           
  4028                           ; BSR set to: 0
  4029  002BFC  C021  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  4030  002C00  C022  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  4031  002C04  04DE               	decf	postinc2,w,c
  4032  002C06  A4D8               	btfss	status,2,c
  4033  002C08  EF08  F016         	goto	u10971
  4034  002C0C  EF0A  F016         	goto	u10970
  4035  002C10                     u10971:
  4036  002C10  EF51  F016         	goto	l10382
  4037  002C14                     u10970:
  4038  002C14  EF2A  F016         	goto	l10380
  4039  002C18                     l10368:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;MCAL/CCP/hal_ccp.c: 434:                 (CCP2CONbits.CCP2M = ((uint8)0x08));
  4043  002C18  50BA               	movf	186,w,c	;volatile
  4044  002C1A  0BF0               	andlw	-16
  4045  002C1C  0908               	iorlw	8
  4046  002C1E  6EBA               	movwf	186,c	;volatile
  4047                           
  4048                           ;MCAL/CCP/hal_ccp.c: 435:                 break;
  4049  002C20  EF51  F016         	goto	l10382
  4050  002C24                     l10370:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;MCAL/CCP/hal_ccp.c: 437:                 (CCP2CONbits.CCP2M = ((uint8)0x09));
  4054  002C24  50BA               	movf	186,w,c	;volatile
  4055  002C26  0BF0               	andlw	-16
  4056  002C28  0909               	iorlw	9
  4057  002C2A  6EBA               	movwf	186,c	;volatile
  4058                           
  4059                           ;MCAL/CCP/hal_ccp.c: 438:                 break;
  4060  002C2C  EF51  F016         	goto	l10382
  4061  002C30                     l10372:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;MCAL/CCP/hal_ccp.c: 440:                 (CCP2CONbits.CCP2M = ((uint8)0x02));
  4065  002C30  50BA               	movf	186,w,c	;volatile
  4066  002C32  0BF0               	andlw	-16
  4067  002C34  0902               	iorlw	2
  4068  002C36  6EBA               	movwf	186,c	;volatile
  4069                           
  4070                           ;MCAL/CCP/hal_ccp.c: 441:                 break;
  4071  002C38  EF51  F016         	goto	l10382
  4072  002C3C                     l10374:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;MCAL/CCP/hal_ccp.c: 443:                 (CCP2CONbits.CCP2M = ((uint8)0x0A));
  4076  002C3C  50BA               	movf	186,w,c	;volatile
  4077  002C3E  0BF0               	andlw	-16
  4078  002C40  090A               	iorlw	10
  4079  002C42  6EBA               	movwf	186,c	;volatile
  4080                           
  4081                           ;MCAL/CCP/hal_ccp.c: 444:                 break;
  4082  002C44  EF51  F016         	goto	l10382
  4083  002C48                     l10376:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;MCAL/CCP/hal_ccp.c: 446:                 (CCP2CONbits.CCP2M = ((uint8)0x0B));
  4087  002C48  50BA               	movf	186,w,c	;volatile
  4088  002C4A  0BF0               	andlw	-16
  4089  002C4C  090B               	iorlw	11
  4090  002C4E  6EBA               	movwf	186,c	;volatile
  4091                           
  4092                           ;MCAL/CCP/hal_ccp.c: 447:                 break;
  4093  002C50  EF51  F016         	goto	l10382
  4094  002C54                     l10380:
  4095                           
  4096                           ; BSR set to: 0
  4097  002C54  EE20 F002          	lfsr	2,2
  4098  002C58  5021               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  4099  002C5A  26D9               	addwf	fsr2l,f,c
  4100  002C5C  5022               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  4101  002C5E  22DA               	addwfc	fsr2h,f,c
  4102  002C60  50DF               	movf	indf2,w,c
  4103  002C62  6E23               	movwf	??_CCP_Compare_Mode_Config^0,c
  4104  002C64  6A24               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  4105                           
  4106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4107                           ; Switch size 1, requested type "simple"
  4108                           ; Number of cases is 1, Range of values is 0 to 0
  4109                           ; switch strategies available:
  4110                           ; Name         Instructions Cycles
  4111                           ; simple_byte            4     3 (average)
  4112                           ;	Chosen strategy is simple_byte
  4113  002C66  5024               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  4114  002C68  0A00               	xorlw	0	; case 0
  4115  002C6A  B4D8               	btfsc	status,2,c
  4116  002C6C  EF3A  F016         	goto	l12098
  4117  002C70  EFD3  F015         	goto	l10360
  4118  002C74                     l12098:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ; Switch size 1, requested type "simple"
  4122                           ; Number of cases is 5, Range of values is 2 to 11
  4123                           ; switch strategies available:
  4124                           ; Name         Instructions Cycles
  4125                           ; simple_byte           16     9 (average)
  4126                           ;	Chosen strategy is simple_byte
  4127  002C74  5023               	movf	??_CCP_Compare_Mode_Config^0,w,c
  4128  002C76  0A02               	xorlw	2	; case 2
  4129  002C78  B4D8               	btfsc	status,2,c
  4130  002C7A  EF18  F016         	goto	l10372
  4131  002C7E  0A0A               	xorlw	10	; case 8
  4132  002C80  B4D8               	btfsc	status,2,c
  4133  002C82  EF0C  F016         	goto	l10368
  4134  002C86  0A01               	xorlw	1	; case 9
  4135  002C88  B4D8               	btfsc	status,2,c
  4136  002C8A  EF12  F016         	goto	l10370
  4137  002C8E  0A03               	xorlw	3	; case 10
  4138  002C90  B4D8               	btfsc	status,2,c
  4139  002C92  EF1E  F016         	goto	l10374
  4140  002C96  0A01               	xorlw	1	; case 11
  4141  002C98  B4D8               	btfsc	status,2,c
  4142  002C9A  EF24  F016         	goto	l10376
  4143  002C9E  EFD3  F015         	goto	l10360
  4144  002CA2                     l10382:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;MCAL/CCP/hal_ccp.c: 453:     CCP_Mode_Timer_Select(_ccp_obj);
  4148  002CA2  C021  F01E         	movff	CCP_Compare_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  4149  002CA6  C022  F01F         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  4150  002CAA  ECBF  F022         	call	_CCP_Mode_Timer_Select	;wreg free
  4151  002CAE                     
  4152                           ;MCAL/CCP/hal_ccp.c: 455:     return ret;
  4153  002CAE  0100               	movlb	0	; () banked
  4154  002CB0  5160               	movf	CCP_Compare_Mode_Config@ret& (0+255),w,b
  4155  002CB2                     
  4156                           ; BSR set to: 0
  4157  002CB2  0012               	return		;funcret
  4158  002CB4                     __end_of_CCP_Compare_Mode_Config:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _CCP_Capture_Mode_Config *****************
  4162 ;; Defined at:
  4163 ;;		line 359 in file "MCAL/CCP/hal_ccp.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  _ccp_obj        2   32[COMRAM] PTR const struct .
  4166 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  ret             1    0[BANK0 ] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        5 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 9
  4185 ;; This function calls:
  4186 ;;		_CCP_Mode_Timer_Select
  4187 ;; This function is called by:
  4188 ;;		_CCP_Init
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text20
  4193  002F66                     __ptext20:
  4194                           	callstack 0
  4195  002F66                     _CCP_Capture_Mode_Config:
  4196                           	callstack 18
  4197  002F66                     
  4198                           ;MCAL/CCP/hal_ccp.c: 360:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  4199  002F66  0E01               	movlw	1
  4200  002F68  0100               	movlb	0	; () banked
  4201  002F6A  6F60               	movwf	CCP_Capture_Mode_Config@ret& (0+255),b
  4202  002F6C                     
  4203                           ; BSR set to: 0
  4204                           ;MCAL/CCP/hal_ccp.c: 362:     if(CCP1_INST == _ccp_obj->ccp_inst){
  4205  002F6C  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  4206  002F70  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  4207  002F74  50DF               	movf	indf2,w,c
  4208  002F76  A4D8               	btfss	status,2,c
  4209  002F78  EFC0  F017         	goto	u10941
  4210  002F7C  EFC2  F017         	goto	u10940
  4211  002F80                     u10941:
  4212  002F80  EF03  F018         	goto	l10310
  4213  002F84                     u10940:
  4214  002F84  EFE0  F017         	goto	l10308
  4215  002F88                     l10298:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;MCAL/CCP/hal_ccp.c: 366:                 (CCP1CONbits.CCP1M = ((uint8)0x04));
  4219  002F88  50BD               	movf	189,w,c	;volatile
  4220  002F8A  0BF0               	andlw	-16
  4221  002F8C  0904               	iorlw	4
  4222  002F8E  6EBD               	movwf	189,c	;volatile
  4223                           
  4224                           ;MCAL/CCP/hal_ccp.c: 367:                 break;
  4225  002F90  EF4C  F018         	goto	l10326
  4226  002F94                     l10300:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;MCAL/CCP/hal_ccp.c: 369:                 (CCP1CONbits.CCP1M = ((uint8)0x05));
  4230  002F94  50BD               	movf	189,w,c	;volatile
  4231  002F96  0BF0               	andlw	-16
  4232  002F98  0905               	iorlw	5
  4233  002F9A  6EBD               	movwf	189,c	;volatile
  4234                           
  4235                           ;MCAL/CCP/hal_ccp.c: 370:                 break;
  4236  002F9C  EF4C  F018         	goto	l10326
  4237  002FA0                     l10302:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;MCAL/CCP/hal_ccp.c: 372:                 (CCP1CONbits.CCP1M = ((uint8)0x06));
  4241  002FA0  50BD               	movf	189,w,c	;volatile
  4242  002FA2  0BF0               	andlw	-16
  4243  002FA4  0906               	iorlw	6
  4244  002FA6  6EBD               	movwf	189,c	;volatile
  4245                           
  4246                           ;MCAL/CCP/hal_ccp.c: 373:                 break;
  4247  002FA8  EF4C  F018         	goto	l10326
  4248  002FAC                     l10304:
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;MCAL/CCP/hal_ccp.c: 375:                 (CCP1CONbits.CCP1M = ((uint8)0x07));
  4252  002FAC  50BD               	movf	189,w,c	;volatile
  4253  002FAE  0BF0               	andlw	-16
  4254  002FB0  0907               	iorlw	7
  4255  002FB2  6EBD               	movwf	189,c	;volatile
  4256                           
  4257                           ;MCAL/CCP/hal_ccp.c: 376:                 break;
  4258  002FB4  EF4C  F018         	goto	l10326
  4259  002FB8                     l10306:
  4260                           
  4261                           ; BSR set to: 0
  4262  002FB8  0E00               	movlw	0
  4263  002FBA  6F60               	movwf	CCP_Capture_Mode_Config@ret& (0+255),b
  4264                           
  4265                           ;MCAL/CCP/hal_ccp.c: 378:         }
  4266  002FBC  EF4C  F018         	goto	l10326
  4267  002FC0                     l10308:
  4268                           
  4269                           ; BSR set to: 0
  4270  002FC0  EE20 F002          	lfsr	2,2
  4271  002FC4  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  4272  002FC6  26D9               	addwf	fsr2l,f,c
  4273  002FC8  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  4274  002FCA  22DA               	addwfc	fsr2h,f,c
  4275  002FCC  50DF               	movf	indf2,w,c
  4276  002FCE  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  4277  002FD0  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  4278                           
  4279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4280                           ; Switch size 1, requested type "simple"
  4281                           ; Number of cases is 1, Range of values is 0 to 0
  4282                           ; switch strategies available:
  4283                           ; Name         Instructions Cycles
  4284                           ; simple_byte            4     3 (average)
  4285                           ;	Chosen strategy is simple_byte
  4286  002FD2  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  4287  002FD4  0A00               	xorlw	0	; case 0
  4288  002FD6  B4D8               	btfsc	status,2,c
  4289  002FD8  EFF0  F017         	goto	l12100
  4290  002FDC  EFDC  F017         	goto	l10306
  4291  002FE0                     l12100:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ; Switch size 1, requested type "simple"
  4295                           ; Number of cases is 4, Range of values is 4 to 7
  4296                           ; switch strategies available:
  4297                           ; Name         Instructions Cycles
  4298                           ; simple_byte           13     7 (average)
  4299                           ;	Chosen strategy is simple_byte
  4300  002FE0  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  4301  002FE2  0A04               	xorlw	4	; case 4
  4302  002FE4  B4D8               	btfsc	status,2,c
  4303  002FE6  EFC4  F017         	goto	l10298
  4304  002FEA  0A01               	xorlw	1	; case 5
  4305  002FEC  B4D8               	btfsc	status,2,c
  4306  002FEE  EFCA  F017         	goto	l10300
  4307  002FF2  0A03               	xorlw	3	; case 6
  4308  002FF4  B4D8               	btfsc	status,2,c
  4309  002FF6  EFD0  F017         	goto	l10302
  4310  002FFA  0A01               	xorlw	1	; case 7
  4311  002FFC  B4D8               	btfsc	status,2,c
  4312  002FFE  EFD6  F017         	goto	l10304
  4313  003002  EFDC  F017         	goto	l10306
  4314  003006                     l10310:
  4315                           
  4316                           ; BSR set to: 0
  4317  003006  C021  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  4318  00300A  C022  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  4319  00300E  04DE               	decf	postinc2,w,c
  4320  003010  A4D8               	btfss	status,2,c
  4321  003012  EF0D  F018         	goto	u10951
  4322  003016  EF0F  F018         	goto	u10950
  4323  00301A                     u10951:
  4324  00301A  EF4C  F018         	goto	l10326
  4325  00301E                     u10950:
  4326  00301E  EF29  F018         	goto	l10324
  4327  003022                     l10314:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;MCAL/CCP/hal_ccp.c: 384:                 (CCP2CONbits.CCP2M = ((uint8)0x04));
  4331  003022  50BA               	movf	186,w,c	;volatile
  4332  003024  0BF0               	andlw	-16
  4333  003026  0904               	iorlw	4
  4334  003028  6EBA               	movwf	186,c	;volatile
  4335                           
  4336                           ;MCAL/CCP/hal_ccp.c: 385:             break;
  4337  00302A  EF4C  F018         	goto	l10326
  4338  00302E                     l10316:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;MCAL/CCP/hal_ccp.c: 387:                 (CCP2CONbits.CCP2M = ((uint8)0x05));
  4342  00302E  50BA               	movf	186,w,c	;volatile
  4343  003030  0BF0               	andlw	-16
  4344  003032  0905               	iorlw	5
  4345  003034  6EBA               	movwf	186,c	;volatile
  4346                           
  4347                           ;MCAL/CCP/hal_ccp.c: 388:                 break;
  4348  003036  EF4C  F018         	goto	l10326
  4349  00303A                     l10318:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;MCAL/CCP/hal_ccp.c: 390:                 (CCP2CONbits.CCP2M = ((uint8)0x06));
  4353  00303A  50BA               	movf	186,w,c	;volatile
  4354  00303C  0BF0               	andlw	-16
  4355  00303E  0906               	iorlw	6
  4356  003040  6EBA               	movwf	186,c	;volatile
  4357                           
  4358                           ;MCAL/CCP/hal_ccp.c: 391:                 break;
  4359  003042  EF4C  F018         	goto	l10326
  4360  003046                     l10320:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;MCAL/CCP/hal_ccp.c: 393:                 (CCP2CONbits.CCP2M = ((uint8)0x07));
  4364  003046  50BA               	movf	186,w,c	;volatile
  4365  003048  0BF0               	andlw	-16
  4366  00304A  0907               	iorlw	7
  4367  00304C  6EBA               	movwf	186,c	;volatile
  4368                           
  4369                           ;MCAL/CCP/hal_ccp.c: 394:                 break;
  4370  00304E  EF4C  F018         	goto	l10326
  4371  003052                     l10324:
  4372                           
  4373                           ; BSR set to: 0
  4374  003052  EE20 F002          	lfsr	2,2
  4375  003056  5021               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  4376  003058  26D9               	addwf	fsr2l,f,c
  4377  00305A  5022               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  4378  00305C  22DA               	addwfc	fsr2h,f,c
  4379  00305E  50DF               	movf	indf2,w,c
  4380  003060  6E23               	movwf	??_CCP_Capture_Mode_Config^0,c
  4381  003062  6A24               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  4382                           
  4383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4384                           ; Switch size 1, requested type "simple"
  4385                           ; Number of cases is 1, Range of values is 0 to 0
  4386                           ; switch strategies available:
  4387                           ; Name         Instructions Cycles
  4388                           ; simple_byte            4     3 (average)
  4389                           ;	Chosen strategy is simple_byte
  4390  003064  5024               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  4391  003066  0A00               	xorlw	0	; case 0
  4392  003068  B4D8               	btfsc	status,2,c
  4393  00306A  EF39  F018         	goto	l12102
  4394  00306E  EFDC  F017         	goto	l10306
  4395  003072                     l12102:
  4396                           
  4397                           ; BSR set to: 0
  4398                           ; Switch size 1, requested type "simple"
  4399                           ; Number of cases is 4, Range of values is 4 to 7
  4400                           ; switch strategies available:
  4401                           ; Name         Instructions Cycles
  4402                           ; simple_byte           13     7 (average)
  4403                           ;	Chosen strategy is simple_byte
  4404  003072  5023               	movf	??_CCP_Capture_Mode_Config^0,w,c
  4405  003074  0A04               	xorlw	4	; case 4
  4406  003076  B4D8               	btfsc	status,2,c
  4407  003078  EF11  F018         	goto	l10314
  4408  00307C  0A01               	xorlw	1	; case 5
  4409  00307E  B4D8               	btfsc	status,2,c
  4410  003080  EF17  F018         	goto	l10316
  4411  003084  0A03               	xorlw	3	; case 6
  4412  003086  B4D8               	btfsc	status,2,c
  4413  003088  EF1D  F018         	goto	l10318
  4414  00308C  0A01               	xorlw	1	; case 7
  4415  00308E  B4D8               	btfsc	status,2,c
  4416  003090  EF23  F018         	goto	l10320
  4417  003094  EFDC  F017         	goto	l10306
  4418  003098                     l10326:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;MCAL/CCP/hal_ccp.c: 401:     CCP_Mode_Timer_Select(_ccp_obj);
  4422  003098  C021  F01E         	movff	CCP_Capture_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  4423  00309C  C022  F01F         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  4424  0030A0  ECBF  F022         	call	_CCP_Mode_Timer_Select	;wreg free
  4425  0030A4                     
  4426                           ;MCAL/CCP/hal_ccp.c: 403:     return ret;
  4427  0030A4  0100               	movlb	0	; () banked
  4428  0030A6  5160               	movf	CCP_Capture_Mode_Config@ret& (0+255),w,b
  4429  0030A8                     
  4430                           ; BSR set to: 0
  4431  0030A8  0012               	return		;funcret
  4432  0030AA                     __end_of_CCP_Capture_Mode_Config:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _CCP_Mode_Timer_Select *****************
  4436 ;; Defined at:
  4437 ;;		line 339 in file "MCAL/CCP/hal_ccp.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  _ccp_obj        2   29[COMRAM] PTR const struct .
  4440 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        3 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 8
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_CCP_Capture_Mode_Config
  4463 ;;		_CCP_Compare_Mode_Config
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text21
  4468  00457E                     __ptext21:
  4469                           	callstack 0
  4470  00457E                     _CCP_Mode_Timer_Select:
  4471                           	callstack 18
  4472  00457E                     
  4473                           ;MCAL/CCP/hal_ccp.c: 340:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
  4474  00457E  EE20 F004          	lfsr	2,4
  4475  004582  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4476  004584  26D9               	addwf	fsr2l,f,c
  4477  004586  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4478  004588  22DA               	addwfc	fsr2h,f,c
  4479  00458A  50DF               	movf	indf2,w,c
  4480  00458C  A4D8               	btfss	status,2,c
  4481  00458E  EFCB  F022         	goto	u10801
  4482  004592  EFCD  F022         	goto	u10800
  4483  004596                     u10801:
  4484  004596  EFD1  F022         	goto	l10208
  4485  00459A                     u10800:
  4486  00459A                     
  4487                           ;MCAL/CCP/hal_ccp.c: 342:         T3CONbits.T3CCP1 = 0;
  4488  00459A  96B1               	bcf	177,3,c	;volatile
  4489                           
  4490                           ;MCAL/CCP/hal_ccp.c: 343:         T3CONbits.T3CCP2 = 1;
  4491  00459C  8CB1               	bsf	177,6,c	;volatile
  4492                           
  4493                           ;MCAL/CCP/hal_ccp.c: 344:     }
  4494  00459E  EFF6  F022         	goto	l575
  4495  0045A2                     l10208:
  4496  0045A2  EE20 F004          	lfsr	2,4
  4497  0045A6  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4498  0045A8  26D9               	addwf	fsr2l,f,c
  4499  0045AA  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4500  0045AC  22DA               	addwfc	fsr2h,f,c
  4501  0045AE  04DE               	decf	postinc2,w,c
  4502  0045B0  A4D8               	btfss	status,2,c
  4503  0045B2  EFDD  F022         	goto	u10811
  4504  0045B6  EFDF  F022         	goto	u10810
  4505  0045BA                     u10811:
  4506  0045BA  EFE3  F022         	goto	l10212
  4507  0045BE                     u10810:
  4508  0045BE                     
  4509                           ;MCAL/CCP/hal_ccp.c: 348:         T3CONbits.T3CCP1 = 1;
  4510  0045BE  86B1               	bsf	177,3,c	;volatile
  4511                           
  4512                           ;MCAL/CCP/hal_ccp.c: 349:         T3CONbits.T3CCP2 = 0;
  4513  0045C0  9CB1               	bcf	177,6,c	;volatile
  4514                           
  4515                           ;MCAL/CCP/hal_ccp.c: 350:     }
  4516  0045C2  EFF6  F022         	goto	l575
  4517  0045C6                     l10212:
  4518  0045C6  EE20 F004          	lfsr	2,4
  4519  0045CA  501E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  4520  0045CC  26D9               	addwf	fsr2l,f,c
  4521  0045CE  501F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  4522  0045D0  22DA               	addwfc	fsr2h,f,c
  4523  0045D2  0E02               	movlw	2
  4524  0045D4  18DE               	xorwf	postinc2,w,c
  4525  0045D6  A4D8               	btfss	status,2,c
  4526  0045D8  EFF0  F022         	goto	u10821
  4527  0045DC  EFF2  F022         	goto	u10820
  4528  0045E0                     u10821:
  4529  0045E0  EFF6  F022         	goto	l572
  4530  0045E4                     u10820:
  4531  0045E4                     
  4532                           ;MCAL/CCP/hal_ccp.c: 353:         T3CONbits.T3CCP1 = 0;
  4533  0045E4  96B1               	bcf	177,3,c	;volatile
  4534                           
  4535                           ;MCAL/CCP/hal_ccp.c: 354:         T3CONbits.T3CCP2 = 0;
  4536  0045E6  9CB1               	bcf	177,6,c	;volatile
  4537                           
  4538                           ;MCAL/CCP/hal_ccp.c: 355:     }
  4539  0045E8  EFF6  F022         	goto	l575
  4540  0045EC                     l572:
  4541  0045EC                     l575:
  4542  0045EC  0012               	return		;funcret
  4543  0045EE                     __end_of_CCP_Mode_Timer_Select:
  4544                           	callstack 0
  4545                           
  4546 ;; *************** function _Ecu_Stepper_Init *****************
  4547 ;; Defined at:
  4548 ;;		line 9 in file "ECU/stepper/ecu_stepper.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  stepper         2    6[BANK0 ] PTR struct .
  4551 ;;		 -> stepper_base(2), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        2 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 10
  4570 ;; This function calls:
  4571 ;;		_GPIO_Pin_Direction_Initialize
  4572 ;;		_GPIO_Pin_Initialize
  4573 ;;		_GPIO_Pin_Write_Logic
  4574 ;; This function is called by:
  4575 ;;		_application_intialize
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text22
  4580  004492                     __ptext22:
  4581                           	callstack 0
  4582  004492                     _Ecu_Stepper_Init:
  4583                           	callstack 19
  4584  004492                     
  4585                           ;ECU/stepper/ecu_stepper.c: 9: Std_ReturnType Ecu_Stepper_Init(stepper_config_st *steppe
      +                          r);ECU/stepper/ecu_stepper.c: 10: {;ECU/stepper/ecu_stepper.c: 11:     if(((void*)0) == 
      +                          stepper)
  4586  004492  0100               	movlb	0	; () banked
  4587  004494  5166               	movf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4588  004496  1167               	iorwf	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4589  004498  A4D8               	btfss	status,2,c
  4590  00449A  EF51  F022         	goto	u11941
  4591  00449E  EF53  F022         	goto	u11940
  4592  0044A2                     u11941:
  4593  0044A2  EF55  F022         	goto	l11044
  4594  0044A6                     u11940:
  4595  0044A6  EF86  F022         	goto	l325
  4596  0044AA                     l11044:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;ECU/stepper/ecu_stepper.c: 16:     {;ECU/stepper/ecu_stepper.c: 17:         GPIO_Pin_In
      +                          itialize(&(stepper->step_pin));
  4600  0044AA  C066  F022         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Initialize@_pin_config
  4601  0044AE  C067  F023         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Initialize@_pin_config+1
  4602  0044B2  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  4603                           
  4604                           ;ECU/stepper/ecu_stepper.c: 18:         GPIO_Pin_Initialize(&(stepper->dir_pin));
  4605  0044B6  0E01               	movlw	1
  4606  0044B8  0100               	movlb	0	; () banked
  4607  0044BA  2566               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4608  0044BC  6E22               	movwf	GPIO_Pin_Initialize@_pin_config^0,c
  4609  0044BE  0E00               	movlw	0
  4610  0044C0  2167               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4611  0044C2  6E23               	movwf	(GPIO_Pin_Initialize@_pin_config+1)^0,c
  4612  0044C4  EC20  F026         	call	_GPIO_Pin_Initialize	;wreg free
  4613                           
  4614                           ;ECU/stepper/ecu_stepper.c: 19:         GPIO_Pin_Direction_Initialize(&(stepper->dir_pin
      +                          ));
  4615  0044C8  0E01               	movlw	1
  4616  0044CA  0100               	movlb	0	; () banked
  4617  0044CC  2566               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4618  0044CE  6E1E               	movwf	GPIO_Pin_Direction_Initialize@_pin_config^0,c
  4619  0044D0  0E00               	movlw	0
  4620  0044D2  2167               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4621  0044D4  6E1F               	movwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,c
  4622  0044D6  EC10  F017         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4623                           
  4624                           ;ECU/stepper/ecu_stepper.c: 20:         GPIO_Pin_Direction_Initialize(&(stepper->step_pi
      +                          n));
  4625  0044DA  C066  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Direction_Initialize@_pin_config
  4626  0044DE  C067  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  4627  0044E2  EC10  F017         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4628                           
  4629                           ;ECU/stepper/ecu_stepper.c: 21:         GPIO_Pin_Write_Logic(&(stepper->step_pin) , GPIO
      +                          _LOW);
  4630  0044E6  C066  F01E         	movff	Ecu_Stepper_Init@stepper,GPIO_Pin_Write_Logic@_pin_config
  4631  0044EA  C067  F01F         	movff	Ecu_Stepper_Init@stepper+1,GPIO_Pin_Write_Logic@_pin_config+1
  4632  0044EE  0E00               	movlw	0
  4633  0044F0  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4634  0044F2  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  4635                           
  4636                           ;ECU/stepper/ecu_stepper.c: 22:         GPIO_Pin_Write_Logic(&(stepper->dir_pin) , GPIO_
      +                          LOW);
  4637  0044F6  0E01               	movlw	1
  4638  0044F8  0100               	movlb	0	; () banked
  4639  0044FA  2566               	addwf	Ecu_Stepper_Init@stepper& (0+255),w,b
  4640  0044FC  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
  4641  0044FE  0E00               	movlw	0
  4642  004500  2167               	addwfc	(Ecu_Stepper_Init@stepper+1)& (0+255),w,b
  4643  004502  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
  4644  004504  0E00               	movlw	0
  4645  004506  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4646  004508  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  4647  00450C                     l325:
  4648  00450C  0012               	return		;funcret
  4649  00450E                     __end_of_Ecu_Stepper_Init:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _GPIO_Pin_Initialize *****************
  4653 ;; Defined at:
  4654 ;;		line 158 in file "MCAL/GPIO/hal_gpio.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  _pin_config     2   33[COMRAM] PTR const struct .
  4657 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
  4658 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
  4659 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  ERRORSTATUS     1   35[COMRAM] unsigned char 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      unsigned char 
  4664 ;; Registers used:
  4665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;Total ram usage:        3 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 9
  4678 ;; This function calls:
  4679 ;;		_GPIO_Pin_Direction_Initialize
  4680 ;;		_GPIO_Pin_Write_Logic
  4681 ;; This function is called by:
  4682 ;;		_ECU_DC_Motor_Init
  4683 ;;		_Ecu_Stepper_Init
  4684 ;;		_CCP_Init
  4685 ;;		_Ultra_Sonic_Init
  4686 ;;		_application_intialize
  4687 ;;		_IR_Sensor_Init
  4688 ;;		_lcd_4bit_initialize
  4689 ;;		_lcd_8bit_initialize
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text23
  4694  004C40                     __ptext23:
  4695                           	callstack 0
  4696  004C40                     _GPIO_Pin_Initialize:
  4697                           	callstack 19
  4698  004C40                     
  4699                           ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
  4700  004C40  5022               	movf	GPIO_Pin_Initialize@_pin_config^0,w,c
  4701  004C42  1023               	iorwf	(GPIO_Pin_Initialize@_pin_config+1)^0,w,c
  4702  004C44  A4D8               	btfss	status,2,c
  4703  004C46  EF27  F026         	goto	u10841
  4704  004C4A  EF29  F026         	goto	u10840
  4705  004C4E                     u10841:
  4706  004C4E  EF2D  F026         	goto	l10232
  4707  004C52                     u10840:
  4708  004C52                     
  4709                           ;MCAL/GPIO/hal_gpio.c: 162:     {;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_Re
      +                          turnType) 0x00;
  4710  004C52  0E00               	movlw	0
  4711  004C54  6E24               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  4712                           
  4713                           ;MCAL/GPIO/hal_gpio.c: 164:     }
  4714  004C56  EF43  F026         	goto	l10234
  4715  004C5A                     l10232:
  4716                           
  4717                           ;MCAL/GPIO/hal_gpio.c: 166:     {;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_P
      +                          in_Direction_Initialize(_pin_config);
  4718  004C5A  C022  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Direction_Initialize@_pin_config
  4719  004C5E  C023  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Direction_Initialize@_pin_config+1
  4720  004C62  EC10  F017         	call	_GPIO_Pin_Direction_Initialize	;wreg free
  4721  004C66  6E24               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  4722                           
  4723                           ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_c
      +                          onfig->logic);
  4724  004C68  C022  F01E         	movff	GPIO_Pin_Initialize@_pin_config,GPIO_Pin_Write_Logic@_pin_config
  4725  004C6C  C023  F01F         	movff	GPIO_Pin_Initialize@_pin_config+1,GPIO_Pin_Write_Logic@_pin_config+1
  4726  004C70  C022  FFD9         	movff	GPIO_Pin_Initialize@_pin_config,fsr2l
  4727  004C74  C023  FFDA         	movff	GPIO_Pin_Initialize@_pin_config+1,fsr2h
  4728  004C78  0E00               	movlw	0
  4729  004C7A  BEDF               	btfsc	indf2,7,c
  4730  004C7C  0E01               	movlw	1
  4731  004C7E  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  4732  004C80  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  4733  004C84  6E24               	movwf	GPIO_Pin_Initialize@ERRORSTATUS^0,c
  4734  004C86                     l10234:
  4735                           
  4736                           ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
  4737  004C86  5024               	movf	GPIO_Pin_Initialize@ERRORSTATUS^0,w,c
  4738  004C88  0012               	return		;funcret
  4739  004C8A                     __end_of_GPIO_Pin_Initialize:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _GPIO_Pin_Direction_Initialize *****************
  4743 ;; Defined at:
  4744 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  _pin_config     2   29[COMRAM] PTR const struct .
  4747 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
  4748 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
  4749 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  ERRORSTATUS     1   31[COMRAM] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      unsigned char 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;Total ram usage:        9 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 8
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_Ecu_Stepper_Init
  4772 ;;		_GPIO_Pin_Initialize
  4773 ;;		_interrupt_RBx_pin_init
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text24
  4778  002E20                     __ptext24:
  4779                           	callstack 0
  4780  002E20                     _GPIO_Pin_Direction_Initialize:
  4781                           	callstack 19
  4782  002E20                     
  4783                           ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_confi
      +                          g_st * _pin_config);MCAL/GPIO/hal_gpio.c: 26: {;MCAL/GPIO/hal_gpio.c: 27:     Std_Return
      +                          Type ERRORSTATUS =(Std_ReturnType) 0x01;
  4784  002E20  0E01               	movlw	1
  4785  002E22  6E20               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  4786  002E24                     
  4787                           ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
  4788  002E24  501E               	movf	GPIO_Pin_Direction_Initialize@_pin_config^0,w,c
  4789  002E26  101F               	iorwf	(GPIO_Pin_Direction_Initialize@_pin_config+1)^0,w,c
  4790  002E28  B4D8               	btfsc	status,2,c
  4791  002E2A  EF19  F017         	goto	u10741
  4792  002E2E  EF1B  F017         	goto	u10740
  4793  002E32                     u10741:
  4794  002E32  EF2B  F017         	goto	l10186
  4795  002E36                     u10740:
  4796  002E36  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4797  002E3A  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4798  002E3E  50DF               	movf	223,w,c
  4799  002E40  0B07               	andlw	7
  4800  002E42  0100               	movlb	0	; () banked
  4801  002E44  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4802  002E46  0E07               	movlw	7
  4803  002E48  6560               	cpfsgt	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4804  002E4A  EF29  F017         	goto	u10751
  4805  002E4E  EF2B  F017         	goto	u10750
  4806  002E52                     u10751:
  4807  002E52  EF90  F017         	goto	l10194
  4808  002E56                     u10750:
  4809  002E56                     l10186:
  4810                           
  4811                           ;MCAL/GPIO/hal_gpio.c: 29:     {;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
  4812  002E56  0E00               	movlw	0
  4813  002E58  6E20               	movwf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,c
  4814                           
  4815                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  4816  002E5A  EFB1  F017         	goto	l10196
  4817  002E5E                     l10188:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_p
      +                          in_config->pin ));
  4821  002E5E  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4822  002E62  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4823  002E66  50DF               	movf	223,w,c
  4824  002E68  0B07               	andlw	7
  4825  002E6A  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4826  002E6C  0E01               	movlw	1
  4827  002E6E  6F61               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  4828  002E70  2B60               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4829  002E72  EF3D  F017         	goto	u10764
  4830  002E76                     u10765:
  4831  002E76  90D8               	bcf	status,0,c
  4832  002E78  3761               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  4833  002E7A                     u10764:
  4834  002E7A  2F60               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4835  002E7C  EF3B  F017         	goto	u10765
  4836  002E80  0100               	movlb	0	; () banked
  4837  002E82  5161               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  4838  002E84  0AFF               	xorlw	255
  4839  002E86  6F62               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  4840  002E88  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4841  002E8C  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4842  002E90  30DF               	rrcf	223,w,c
  4843  002E92  32E8               	rrcf	wreg,f,c
  4844  002E94  32E8               	rrcf	wreg,f,c
  4845  002E96  0B07               	andlw	7
  4846  002E98  6F63               	movwf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),b
  4847  002E9A  5163               	movf	(??_GPIO_Pin_Direction_Initialize+3)& (0+255),w,b
  4848  002E9C  0D02               	mullw	2
  4849  002E9E  0EBC               	movlw	low _tris_registers
  4850  002EA0  24F3               	addwf	243,w,c
  4851  002EA2  6ED9               	movwf	fsr2l,c
  4852  002EA4  0E00               	movlw	high _tris_registers
  4853  002EA6  20F4               	addwfc	prodh,w,c
  4854  002EA8  6EDA               	movwf	fsr2h,c
  4855  002EAA  CFDE F064          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+4
  4856  002EAE  CFDD F065          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+5
  4857  002EB2  C064  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2l
  4858  002EB6  C065  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+5,fsr2h
  4859  002EBA  5162               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  4860  002EBC  16DF               	andwf	indf2,f,c
  4861                           
  4862                           ;MCAL/GPIO/hal_gpio.c: 38:             break;
  4863  002EBE  EFB1  F017         	goto	l10196
  4864  002EC2                     l10190:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_p
      +                          in_config->pin ));
  4868  002EC2  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4869  002EC6  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4870  002ECA  50DF               	movf	223,w,c
  4871  002ECC  0B07               	andlw	7
  4872  002ECE  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4873  002ED0  0E01               	movlw	1
  4874  002ED2  6F61               	movwf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  4875  002ED4  2B60               	incf	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4876  002ED6  EF6F  F017         	goto	u10774
  4877  002EDA                     u10775:
  4878  002EDA  90D8               	bcf	status,0,c
  4879  002EDC  3761               	rlcf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),f,b
  4880  002EDE                     u10774:
  4881  002EDE  2F60               	decfsz	??_GPIO_Pin_Direction_Initialize& (0+255),f,b
  4882  002EE0  EF6D  F017         	goto	u10775
  4883  002EE4  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4884  002EE8  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4885  002EEC  30DF               	rrcf	223,w,c
  4886  002EEE  32E8               	rrcf	wreg,f,c
  4887  002EF0  32E8               	rrcf	wreg,f,c
  4888  002EF2  0B07               	andlw	7
  4889  002EF4  0100               	movlb	0	; () banked
  4890  002EF6  6F62               	movwf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),b
  4891  002EF8  5162               	movf	(??_GPIO_Pin_Direction_Initialize+2)& (0+255),w,b
  4892  002EFA  0D02               	mullw	2
  4893  002EFC  0EBC               	movlw	low _tris_registers
  4894  002EFE  24F3               	addwf	243,w,c
  4895  002F00  6ED9               	movwf	fsr2l,c
  4896  002F02  0E00               	movlw	high _tris_registers
  4897  002F04  20F4               	addwfc	prodh,w,c
  4898  002F06  6EDA               	movwf	fsr2h,c
  4899  002F08  CFDE F063          	movff	postinc2,??_GPIO_Pin_Direction_Initialize+3
  4900  002F0C  CFDD F064          	movff	postdec2,??_GPIO_Pin_Direction_Initialize+4
  4901  002F10  C063  FFD9         	movff	??_GPIO_Pin_Direction_Initialize+3,fsr2l
  4902  002F14  C064  FFDA         	movff	??_GPIO_Pin_Direction_Initialize+4,fsr2h
  4903  002F18  5161               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  4904  002F1A  12DF               	iorwf	indf2,f,c
  4905                           
  4906                           ;MCAL/GPIO/hal_gpio.c: 41:             break;
  4907  002F1C  EFB1  F017         	goto	l10196
  4908  002F20                     l10194:
  4909                           
  4910                           ; BSR set to: 0
  4911  002F20  C01E  FFD9         	movff	GPIO_Pin_Direction_Initialize@_pin_config,fsr2l
  4912  002F24  C01F  FFDA         	movff	GPIO_Pin_Direction_Initialize@_pin_config+1,fsr2h
  4913  002F28  BCDF               	btfsc	indf2,6,c
  4914  002F2A  EF99  F017         	goto	u10781
  4915  002F2E  EF9C  F017         	goto	u10780
  4916  002F32                     u10781:
  4917  002F32  0E01               	movlw	1
  4918  002F34  EF9D  F017         	goto	u10790
  4919  002F38                     u10780:
  4920  002F38  0E00               	movlw	0
  4921  002F3A                     u10790:
  4922  002F3A  6F60               	movwf	??_GPIO_Pin_Direction_Initialize& (0+255),b
  4923  002F3C  6B61               	clrf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),b
  4924                           
  4925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4926                           ; Switch size 1, requested type "simple"
  4927                           ; Number of cases is 1, Range of values is 0 to 0
  4928                           ; switch strategies available:
  4929                           ; Name         Instructions Cycles
  4930                           ; simple_byte            4     3 (average)
  4931                           ;	Chosen strategy is simple_byte
  4932  002F3E  5161               	movf	(??_GPIO_Pin_Direction_Initialize+1)& (0+255),w,b
  4933  002F40  0A00               	xorlw	0	; case 0
  4934  002F42  B4D8               	btfsc	status,2,c
  4935  002F44  EFA6  F017         	goto	l12104
  4936  002F48  EF2B  F017         	goto	l10186
  4937  002F4C                     l12104:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ; Switch size 1, requested type "simple"
  4941                           ; Number of cases is 2, Range of values is 0 to 1
  4942                           ; switch strategies available:
  4943                           ; Name         Instructions Cycles
  4944                           ; simple_byte            7     4 (average)
  4945                           ;	Chosen strategy is simple_byte
  4946  002F4C  5160               	movf	??_GPIO_Pin_Direction_Initialize& (0+255),w,b
  4947  002F4E  0A00               	xorlw	0	; case 0
  4948  002F50  B4D8               	btfsc	status,2,c
  4949  002F52  EF2F  F017         	goto	l10188
  4950  002F56  0A01               	xorlw	1	; case 1
  4951  002F58  B4D8               	btfsc	status,2,c
  4952  002F5A  EF61  F017         	goto	l10190
  4953  002F5E  EF2B  F017         	goto	l10186
  4954  002F62                     l10196:
  4955                           
  4956                           ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
  4957  002F62  5020               	movf	GPIO_Pin_Direction_Initialize@ERRORSTATUS^0,w,c
  4958  002F64  0012               	return		;funcret
  4959  002F66                     __end_of_GPIO_Pin_Direction_Initialize:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _EUSART_Async_Init *****************
  4963 ;; Defined at:
  4964 ;;		line 42 in file "MCAL/EUSART/mcal_EUSART.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  _eusart_obj     2   25[BANK1 ] PTR const struct .
  4967 ;;		 -> _uart_obj(12), 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  ret_val         1   35[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         1       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        3 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 10
  4986 ;; This function calls:
  4987 ;;		_async_Rx_config
  4988 ;;		_async_Tx_config
  4989 ;;		_async_config_baud_rate_gen
  4990 ;; This function is called by:
  4991 ;;		_application_intialize
  4992 ;;		_Bluetooth_Init
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text25
  4997  004B40                     __ptext25:
  4998                           	callstack 0
  4999  004B40                     _EUSART_Async_Init:
  5000                           	callstack 19
  5001  004B40                     
  5002                           ;MCAL/EUSART/mcal_EUSART.c: 46:     if(((void*)0) == _eusart_obj)
  5003  004B40  0101               	movlb	1	; () banked
  5004  004B42  5166               	movf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  5005  004B44  1167               	iorwf	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  5006  004B46  A4D8               	btfss	status,2,c
  5007  004B48  EFA8  F025         	goto	u11741
  5008  004B4C  EFAA  F025         	goto	u11740
  5009  004B50                     u11741:
  5010  004B50  EFAC  F025         	goto	l672
  5011  004B54                     u11740:
  5012  004B54                     
  5013                           ; BSR set to: 1
  5014                           ;MCAL/EUSART/mcal_EUSART.c: 49:     }
  5015  004B54  EFCC  F025         	goto	l674
  5016  004B58                     l672:
  5017                           
  5018                           ; BSR set to: 1
  5019                           ;MCAL/EUSART/mcal_EUSART.c: 51:     {;MCAL/EUSART/mcal_EUSART.c: 53:         (RCSTAbits.
      +                          SPEN = 0 );
  5020  004B58  9EAB               	bcf	171,7,c	;volatile
  5021  004B5A                     
  5022                           ; BSR set to: 1
  5023                           ;MCAL/EUSART/mcal_EUSART.c: 56:         ret_val = async_config_baud_rate_gen(_eusart_obj
      +                          );
  5024  004B5A  C166  F159         	movff	EUSART_Async_Init@_eusart_obj,async_config_baud_rate_gen@_eusart_obj
  5025  004B5E  C167  F15A         	movff	EUSART_Async_Init@_eusart_obj+1,async_config_baud_rate_gen@_eusart_obj+1
  5026  004B62  ECD7  F00C         	call	_async_config_baud_rate_gen	;wreg free
  5027  004B66  6E24               	movwf	EUSART_Async_Init@ret_val^0,c
  5028  004B68                     
  5029                           ;MCAL/EUSART/mcal_EUSART.c: 59:         (TXSTA1bits.SYNC = 0);
  5030  004B68  98AC               	bcf	172,4,c	;volatile
  5031  004B6A                     
  5032                           ;MCAL/EUSART/mcal_EUSART.c: 62:         TRISCbits.RC6 = GPIO_DIRECTION_INPUT ;
  5033  004B6A  8C94               	bsf	148,6,c	;volatile
  5034                           
  5035                           ;MCAL/EUSART/mcal_EUSART.c: 64:         ret_val &= async_Tx_config(&(_eusart_obj->tx_con
      +                          fig));
  5036  004B6C  0E02               	movlw	2
  5037  004B6E  0101               	movlb	1	; () banked
  5038  004B70  2566               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  5039  004B72  6E1E               	movwf	async_Tx_config@_tx_obj^0,c
  5040  004B74  0E00               	movlw	0
  5041  004B76  2167               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  5042  004B78  6E1F               	movwf	(async_Tx_config@_tx_obj+1)^0,c
  5043  004B7A  EC2C  F021         	call	_async_Tx_config	;wreg free
  5044  004B7E  1624               	andwf	EUSART_Async_Init@ret_val^0,f,c
  5045  004B80                     
  5046                           ;MCAL/EUSART/mcal_EUSART.c: 67:         TRISCbits.RC7 = GPIO_DIRECTION_INPUT ;
  5047  004B80  8E94               	bsf	148,7,c	;volatile
  5048                           
  5049                           ;MCAL/EUSART/mcal_EUSART.c: 69:         ret_val &= async_Rx_config(&(_eusart_obj->rx_con
      +                          fig));
  5050  004B82  0E03               	movlw	3
  5051  004B84  0101               	movlb	1	; () banked
  5052  004B86  2566               	addwf	EUSART_Async_Init@_eusart_obj& (0+255),w,b
  5053  004B88  6E21               	movwf	async_Rx_config@_rx_obj^0,c
  5054  004B8A  0E00               	movlw	0
  5055  004B8C  2167               	addwfc	(EUSART_Async_Init@_eusart_obj+1)& (0+255),w,b
  5056  004B8E  6E22               	movwf	(async_Rx_config@_rx_obj+1)^0,c
  5057  004B90  EC89  F01F         	call	_async_Rx_config	;wreg free
  5058  004B94  1624               	andwf	EUSART_Async_Init@ret_val^0,f,c
  5059  004B96                     
  5060                           ;MCAL/EUSART/mcal_EUSART.c: 72:         (RCSTAbits.SPEN = 1 );
  5061  004B96  8EAB               	bsf	171,7,c	;volatile
  5062  004B98                     l674:
  5063  004B98  0012               	return		;funcret
  5064  004B9A                     __end_of_EUSART_Async_Init:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _async_config_baud_rate_gen *****************
  5068 ;; Defined at:
  5069 ;;		line 564 in file "MCAL/EUSART/mcal_EUSART.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  _eusart_obj     2   12[BANK1 ] PTR const struct .
  5072 ;;		 -> _uart_obj(12), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  Baudrate_tem    4   17[BANK1 ] float 
  5075 ;;  ret_val         1   16[BANK1 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;Total ram usage:       13 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 9
  5092 ;; This function calls:
  5093 ;;		___fladd
  5094 ;;		___fldiv
  5095 ;;		___fltol
  5096 ;;		___xxtofl
  5097 ;; This function is called by:
  5098 ;;		_EUSART_Async_Init
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text26
  5103  0019AE                     __ptext26:
  5104                           	callstack 0
  5105  0019AE                     _async_config_baud_rate_gen:
  5106                           	callstack 19
  5107  0019AE                     
  5108                           ;MCAL/EUSART/mcal_EUSART.c: 564: static __attribute__((inline)) Std_ReturnType async_con
      +                          fig_baud_rate_gen(const uart_config_st *_eusart_obj);MCAL/EUSART/mcal_EUSART.c: 565: {;M
      +                          CAL/EUSART/mcal_EUSART.c: 567:     Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5109  0019AE  0E01               	movlw	1
  5110  0019B0  0101               	movlb	1	; () banked
  5111  0019B2  6F5D               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  5112  0019B4                     
  5113                           ; BSR set to: 1
  5114                           ;MCAL/EUSART/mcal_EUSART.c: 569:     if(((void*)0) == _eusart_obj)
  5115  0019B4  5159               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  5116  0019B6  115A               	iorwf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  5117  0019B8  A4D8               	btfss	status,2,c
  5118  0019BA  EFE1  F00C         	goto	u11561
  5119  0019BE  EFE3  F00C         	goto	u11560
  5120  0019C2                     u11561:
  5121  0019C2  EFE7  F00C         	goto	l10758
  5122  0019C6                     u11560:
  5123  0019C6                     
  5124                           ; BSR set to: 1
  5125                           ;MCAL/EUSART/mcal_EUSART.c: 570:     {;MCAL/EUSART/mcal_EUSART.c: 571:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5126  0019C6  0E00               	movlw	0
  5127  0019C8  6F5D               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  5128                           
  5129                           ;MCAL/EUSART/mcal_EUSART.c: 572:     }
  5130  0019CA  EFB1  F00E         	goto	l10784
  5131  0019CE                     l10758:
  5132                           
  5133                           ; BSR set to: 1
  5134                           ;MCAL/EUSART/mcal_EUSART.c: 574:     {;MCAL/EUSART/mcal_EUSART.c: 575:         float32 B
      +                          audrate_temp=0;
  5135  0019CE  0E00               	movlw	0
  5136  0019D0  6F5E               	movwf	async_config_baud_rate_gen@Baudrate_temp& (0+255),b
  5137  0019D2  0E00               	movlw	0
  5138  0019D4  6F5F               	movwf	(async_config_baud_rate_gen@Baudrate_temp+1)& (0+255),b
  5139  0019D6  0E00               	movlw	0
  5140  0019D8  6F60               	movwf	(async_config_baud_rate_gen@Baudrate_temp+2)& (0+255),b
  5141  0019DA  0E00               	movlw	0
  5142  0019DC  6F61               	movwf	(async_config_baud_rate_gen@Baudrate_temp+3)& (0+255),b
  5143                           
  5144                           ;MCAL/EUSART/mcal_EUSART.c: 576:         switch(_eusart_obj->baud_rate_config)
  5145  0019DE  EF6D  F00E         	goto	l10780
  5146  0019E2                     l815:
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;MCAL/EUSART/mcal_EUSART.c: 579:                 TXSTAbits.BRGH = 0 ;
  5150  0019E2  94AC               	bcf	172,2,c	;volatile
  5151                           
  5152                           ;MCAL/EUSART/mcal_EUSART.c: 580:                 BAUDCONbits.BRG16 = 0 ;
  5153  0019E4  96B8               	bcf	184,3,c	;volatile
  5154  0019E6                     
  5155                           ; BSR set to: 1
  5156                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  5157  0019E6  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5158  0019EA  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5159  0019EE  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5160  0019F2  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5161  0019F6  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5162  0019FA  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5163  0019FE  6A20               	clrf	(___xxtofl@val+2)^0,c
  5164  001A00  6A21               	clrf	(___xxtofl@val+3)^0,c
  5165  001A02  0E00               	movlw	0
  5166  001A04  EC04  F014         	call	___xxtofl
  5167  001A08  C01E  F06E         	movff	?___xxtofl,___fldiv@a
  5168  001A0C  C01F  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  5169  001A10  C020  F070         	movff	?___xxtofl+2,___fldiv@a+2
  5170  001A14  C021  F071         	movff	?___xxtofl+3,___fldiv@a+3
  5171  001A18  0E00               	movlw	0
  5172  001A1A  0100               	movlb	0	; () banked
  5173  001A1C  6F6A               	movwf	___fldiv@b& (0+255),b
  5174  001A1E  0E24               	movlw	36
  5175  001A20  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  5176  001A22  0EF4               	movlw	244
  5177  001A24  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  5178  001A26  0E4A               	movlw	74
  5179  001A28  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  5180  001A2A  ECB3  F00E         	call	___fldiv	;wreg free
  5181  001A2E  C06A  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5751
  5182  001A32  C06B  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5751+1
  5183  001A36  C06C  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5751+2
  5184  001A3A  C06D  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5751+3
  5185  001A3E                     
  5186                           ;MCAL/EUSART/mcal_EUSART.c: 581:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/64)-1;
  5187  001A3E  0E00               	movlw	0
  5188  001A40  0100               	movlb	0	; () banked
  5189  001A42  6F6E               	movwf	___fldiv@a& (0+255),b
  5190  001A44  0E00               	movlw	0
  5191  001A46  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  5192  001A48  0E80               	movlw	128
  5193  001A4A  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  5194  001A4C  0E42               	movlw	66
  5195  001A4E  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  5196  001A50  C162  F06A         	movff	_async_config_baud_rate_gen$5751,___fldiv@b
  5197  001A54  C163  F06B         	movff	_async_config_baud_rate_gen$5751+1,___fldiv@b+1
  5198  001A58  C164  F06C         	movff	_async_config_baud_rate_gen$5751+2,___fldiv@b+2
  5199  001A5C  C165  F06D         	movff	_async_config_baud_rate_gen$5751+3,___fldiv@b+3
  5200  001A60  ECB3  F00E         	call	___fldiv	;wreg free
  5201  001A64  C06A  F09C         	movff	?___fldiv,___fladd@b
  5202  001A68  C06B  F09D         	movff	?___fldiv+1,___fladd@b+1
  5203  001A6C  C06C  F09E         	movff	?___fldiv+2,___fladd@b+2
  5204  001A70  C06D  F09F         	movff	?___fldiv+3,___fladd@b+3
  5205  001A74  0E00               	movlw	0
  5206  001A76  0100               	movlb	0	; () banked
  5207  001A78  6FA0               	movwf	___fladd@a& (0+255),b
  5208  001A7A  0E00               	movlw	0
  5209  001A7C  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  5210  001A7E  0E80               	movlw	128
  5211  001A80  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  5212  001A82  0EBF               	movlw	191
  5213  001A84  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  5214  001A86  EC24  F008         	call	___fladd	;wreg free
  5215  001A8A  C09C  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5216  001A8E  C09D  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5217  001A92  C09E  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5218  001A96  C09F  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5219                           
  5220                           ;MCAL/EUSART/mcal_EUSART.c: 582:                 break;
  5221  001A9A  EF90  F00E         	goto	l10782
  5222  001A9E                     l817:
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;MCAL/EUSART/mcal_EUSART.c: 584:                 TXSTAbits.BRGH = 1 ;
  5226  001A9E  84AC               	bsf	172,2,c	;volatile
  5227                           
  5228                           ;MCAL/EUSART/mcal_EUSART.c: 585:                 BAUDCONbits.BRG16 = 0 ;
  5229  001AA0  96B8               	bcf	184,3,c	;volatile
  5230  001AA2                     
  5231                           ; BSR set to: 1
  5232                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5233  001AA2  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5234  001AA6  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5235  001AAA  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5236  001AAE  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5237  001AB2  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5238  001AB6  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5239  001ABA  6A20               	clrf	(___xxtofl@val+2)^0,c
  5240  001ABC  6A21               	clrf	(___xxtofl@val+3)^0,c
  5241  001ABE  0E00               	movlw	0
  5242  001AC0  EC04  F014         	call	___xxtofl
  5243  001AC4  C01E  F06E         	movff	?___xxtofl,___fldiv@a
  5244  001AC8  C01F  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  5245  001ACC  C020  F070         	movff	?___xxtofl+2,___fldiv@a+2
  5246  001AD0  C021  F071         	movff	?___xxtofl+3,___fldiv@a+3
  5247  001AD4  0E00               	movlw	0
  5248  001AD6  0100               	movlb	0	; () banked
  5249  001AD8  6F6A               	movwf	___fldiv@b& (0+255),b
  5250  001ADA  0E24               	movlw	36
  5251  001ADC  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  5252  001ADE  0EF4               	movlw	244
  5253  001AE0  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  5254  001AE2  0E4A               	movlw	74
  5255  001AE4  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  5256  001AE6  ECB3  F00E         	call	___fldiv	;wreg free
  5257  001AEA  C06A  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5751
  5258  001AEE  C06B  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5751+1
  5259  001AF2  C06C  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5751+2
  5260  001AF6  C06D  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5751+3
  5261  001AFA                     
  5262                           ;MCAL/EUSART/mcal_EUSART.c: 586:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5263  001AFA  0E00               	movlw	0
  5264  001AFC  0100               	movlb	0	; () banked
  5265  001AFE  6F6E               	movwf	___fldiv@a& (0+255),b
  5266  001B00  0E00               	movlw	0
  5267  001B02  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  5268  001B04  0E80               	movlw	128
  5269  001B06  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  5270  001B08  0E41               	movlw	65
  5271  001B0A  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  5272  001B0C  C162  F06A         	movff	_async_config_baud_rate_gen$5751,___fldiv@b
  5273  001B10  C163  F06B         	movff	_async_config_baud_rate_gen$5751+1,___fldiv@b+1
  5274  001B14  C164  F06C         	movff	_async_config_baud_rate_gen$5751+2,___fldiv@b+2
  5275  001B18  C165  F06D         	movff	_async_config_baud_rate_gen$5751+3,___fldiv@b+3
  5276  001B1C  ECB3  F00E         	call	___fldiv	;wreg free
  5277  001B20  C06A  F09C         	movff	?___fldiv,___fladd@b
  5278  001B24  C06B  F09D         	movff	?___fldiv+1,___fladd@b+1
  5279  001B28  C06C  F09E         	movff	?___fldiv+2,___fladd@b+2
  5280  001B2C  C06D  F09F         	movff	?___fldiv+3,___fladd@b+3
  5281  001B30  0E00               	movlw	0
  5282  001B32  0100               	movlb	0	; () banked
  5283  001B34  6FA0               	movwf	___fladd@a& (0+255),b
  5284  001B36  0E00               	movlw	0
  5285  001B38  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  5286  001B3A  0E80               	movlw	128
  5287  001B3C  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  5288  001B3E  0EBF               	movlw	191
  5289  001B40  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  5290  001B42  EC24  F008         	call	___fladd	;wreg free
  5291  001B46  C09C  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5292  001B4A  C09D  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5293  001B4E  C09E  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5294  001B52  C09F  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5295                           
  5296                           ;MCAL/EUSART/mcal_EUSART.c: 587:                 break ;
  5297  001B56  EF90  F00E         	goto	l10782
  5298  001B5A                     l818:
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;MCAL/EUSART/mcal_EUSART.c: 589:                 TXSTAbits.BRGH = 0 ;
  5302  001B5A  94AC               	bcf	172,2,c	;volatile
  5303                           
  5304                           ;MCAL/EUSART/mcal_EUSART.c: 590:                 BAUDCONbits.BRG16 = 1 ;
  5305  001B5C  86B8               	bsf	184,3,c	;volatile
  5306  001B5E                     
  5307                           ; BSR set to: 1
  5308                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5309  001B5E  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5310  001B62  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5311  001B66  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5312  001B6A  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5313  001B6E  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5314  001B72  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5315  001B76  6A20               	clrf	(___xxtofl@val+2)^0,c
  5316  001B78  6A21               	clrf	(___xxtofl@val+3)^0,c
  5317  001B7A  0E00               	movlw	0
  5318  001B7C  EC04  F014         	call	___xxtofl
  5319  001B80  C01E  F06E         	movff	?___xxtofl,___fldiv@a
  5320  001B84  C01F  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  5321  001B88  C020  F070         	movff	?___xxtofl+2,___fldiv@a+2
  5322  001B8C  C021  F071         	movff	?___xxtofl+3,___fldiv@a+3
  5323  001B90  0E00               	movlw	0
  5324  001B92  0100               	movlb	0	; () banked
  5325  001B94  6F6A               	movwf	___fldiv@b& (0+255),b
  5326  001B96  0E24               	movlw	36
  5327  001B98  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  5328  001B9A  0EF4               	movlw	244
  5329  001B9C  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  5330  001B9E  0E4A               	movlw	74
  5331  001BA0  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  5332  001BA2  ECB3  F00E         	call	___fldiv	;wreg free
  5333  001BA6  C06A  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5751
  5334  001BAA  C06B  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5751+1
  5335  001BAE  C06C  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5751+2
  5336  001BB2  C06D  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5751+3
  5337  001BB6                     
  5338                           ;MCAL/EUSART/mcal_EUSART.c: 591:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/16)-1;
  5339  001BB6  0E00               	movlw	0
  5340  001BB8  0100               	movlb	0	; () banked
  5341  001BBA  6F6E               	movwf	___fldiv@a& (0+255),b
  5342  001BBC  0E00               	movlw	0
  5343  001BBE  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  5344  001BC0  0E80               	movlw	128
  5345  001BC2  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  5346  001BC4  0E41               	movlw	65
  5347  001BC6  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  5348  001BC8  C162  F06A         	movff	_async_config_baud_rate_gen$5751,___fldiv@b
  5349  001BCC  C163  F06B         	movff	_async_config_baud_rate_gen$5751+1,___fldiv@b+1
  5350  001BD0  C164  F06C         	movff	_async_config_baud_rate_gen$5751+2,___fldiv@b+2
  5351  001BD4  C165  F06D         	movff	_async_config_baud_rate_gen$5751+3,___fldiv@b+3
  5352  001BD8  ECB3  F00E         	call	___fldiv	;wreg free
  5353  001BDC  C06A  F09C         	movff	?___fldiv,___fladd@b
  5354  001BE0  C06B  F09D         	movff	?___fldiv+1,___fladd@b+1
  5355  001BE4  C06C  F09E         	movff	?___fldiv+2,___fladd@b+2
  5356  001BE8  C06D  F09F         	movff	?___fldiv+3,___fladd@b+3
  5357  001BEC  0E00               	movlw	0
  5358  001BEE  0100               	movlb	0	; () banked
  5359  001BF0  6FA0               	movwf	___fladd@a& (0+255),b
  5360  001BF2  0E00               	movlw	0
  5361  001BF4  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  5362  001BF6  0E80               	movlw	128
  5363  001BF8  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  5364  001BFA  0EBF               	movlw	191
  5365  001BFC  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  5366  001BFE  EC24  F008         	call	___fladd	;wreg free
  5367  001C02  C09C  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5368  001C06  C09D  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5369  001C0A  C09E  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5370  001C0E  C09F  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5371                           
  5372                           ;MCAL/EUSART/mcal_EUSART.c: 592:                 break ;
  5373  001C12  EF90  F00E         	goto	l10782
  5374  001C16                     l819:
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;MCAL/EUSART/mcal_EUSART.c: 594:                 TXSTAbits.BRGH = 1 ;
  5378  001C16  84AC               	bsf	172,2,c	;volatile
  5379                           
  5380                           ;MCAL/EUSART/mcal_EUSART.c: 595:                 BAUDCONbits.BRG16 = 1 ;
  5381  001C18  86B8               	bsf	184,3,c	;volatile
  5382  001C1A                     
  5383                           ; BSR set to: 1
  5384                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  5385  001C1A  C159  FFD9         	movff	async_config_baud_rate_gen@_eusart_obj,fsr2l
  5386  001C1E  C15A  FFDA         	movff	async_config_baud_rate_gen@_eusart_obj+1,fsr2h
  5387  001C22  CFDE F15B          	movff	postinc2,??_async_config_baud_rate_gen
  5388  001C26  CFDD F15C          	movff	postdec2,??_async_config_baud_rate_gen+1
  5389  001C2A  C15B  F01E         	movff	??_async_config_baud_rate_gen,___xxtofl@val
  5390  001C2E  C15C  F01F         	movff	??_async_config_baud_rate_gen+1,___xxtofl@val+1
  5391  001C32  6A20               	clrf	(___xxtofl@val+2)^0,c
  5392  001C34  6A21               	clrf	(___xxtofl@val+3)^0,c
  5393  001C36  0E00               	movlw	0
  5394  001C38  EC04  F014         	call	___xxtofl
  5395  001C3C  C01E  F06E         	movff	?___xxtofl,___fldiv@a
  5396  001C40  C01F  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  5397  001C44  C020  F070         	movff	?___xxtofl+2,___fldiv@a+2
  5398  001C48  C021  F071         	movff	?___xxtofl+3,___fldiv@a+3
  5399  001C4C  0E00               	movlw	0
  5400  001C4E  0100               	movlb	0	; () banked
  5401  001C50  6F6A               	movwf	___fldiv@b& (0+255),b
  5402  001C52  0E24               	movlw	36
  5403  001C54  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  5404  001C56  0EF4               	movlw	244
  5405  001C58  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  5406  001C5A  0E4A               	movlw	74
  5407  001C5C  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  5408  001C5E  ECB3  F00E         	call	___fldiv	;wreg free
  5409  001C62  C06A  F162         	movff	?___fldiv,_async_config_baud_rate_gen$5751
  5410  001C66  C06B  F163         	movff	?___fldiv+1,_async_config_baud_rate_gen$5751+1
  5411  001C6A  C06C  F164         	movff	?___fldiv+2,_async_config_baud_rate_gen$5751+2
  5412  001C6E  C06D  F165         	movff	?___fldiv+3,_async_config_baud_rate_gen$5751+3
  5413  001C72                     
  5414                           ;MCAL/EUSART/mcal_EUSART.c: 596:                 Baudrate_temp= ((8000000/((float32)_eus
      +                          art_obj->uart_baud_rate_value))/4)-1;
  5415  001C72  0E00               	movlw	0
  5416  001C74  0100               	movlb	0	; () banked
  5417  001C76  6F6E               	movwf	___fldiv@a& (0+255),b
  5418  001C78  0E00               	movlw	0
  5419  001C7A  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  5420  001C7C  0E80               	movlw	128
  5421  001C7E  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  5422  001C80  0E40               	movlw	64
  5423  001C82  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  5424  001C84  C162  F06A         	movff	_async_config_baud_rate_gen$5751,___fldiv@b
  5425  001C88  C163  F06B         	movff	_async_config_baud_rate_gen$5751+1,___fldiv@b+1
  5426  001C8C  C164  F06C         	movff	_async_config_baud_rate_gen$5751+2,___fldiv@b+2
  5427  001C90  C165  F06D         	movff	_async_config_baud_rate_gen$5751+3,___fldiv@b+3
  5428  001C94  ECB3  F00E         	call	___fldiv	;wreg free
  5429  001C98  C06A  F09C         	movff	?___fldiv,___fladd@b
  5430  001C9C  C06B  F09D         	movff	?___fldiv+1,___fladd@b+1
  5431  001CA0  C06C  F09E         	movff	?___fldiv+2,___fladd@b+2
  5432  001CA4  C06D  F09F         	movff	?___fldiv+3,___fladd@b+3
  5433  001CA8  0E00               	movlw	0
  5434  001CAA  0100               	movlb	0	; () banked
  5435  001CAC  6FA0               	movwf	___fladd@a& (0+255),b
  5436  001CAE  0E00               	movlw	0
  5437  001CB0  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  5438  001CB2  0E80               	movlw	128
  5439  001CB4  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  5440  001CB6  0EBF               	movlw	191
  5441  001CB8  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  5442  001CBA  EC24  F008         	call	___fladd	;wreg free
  5443  001CBE  C09C  F15E         	movff	?___fladd,async_config_baud_rate_gen@Baudrate_temp
  5444  001CC2  C09D  F15F         	movff	?___fladd+1,async_config_baud_rate_gen@Baudrate_temp+1
  5445  001CC6  C09E  F160         	movff	?___fladd+2,async_config_baud_rate_gen@Baudrate_temp+2
  5446  001CCA  C09F  F161         	movff	?___fladd+3,async_config_baud_rate_gen@Baudrate_temp+3
  5447                           
  5448                           ;MCAL/EUSART/mcal_EUSART.c: 597:                 break ;
  5449  001CCE  EF90  F00E         	goto	l10782
  5450  001CD2                     l10776:
  5451                           
  5452                           ; BSR set to: 1
  5453                           ;MCAL/EUSART/mcal_EUSART.c: 599:                 ret_val = (Std_ReturnType) 0x00 ;
  5454  001CD2  0E00               	movlw	0
  5455  001CD4  6F5D               	movwf	async_config_baud_rate_gen@ret_val& (0+255),b
  5456                           
  5457                           ;MCAL/EUSART/mcal_EUSART.c: 600:                 break ;
  5458  001CD6  EF90  F00E         	goto	l10782
  5459  001CDA                     l10780:
  5460                           
  5461                           ; BSR set to: 1
  5462  001CDA  EE20 F00B          	lfsr	2,11
  5463  001CDE  5159               	movf	async_config_baud_rate_gen@_eusart_obj& (0+255),w,b
  5464  001CE0  26D9               	addwf	fsr2l,f,c
  5465  001CE2  515A               	movf	(async_config_baud_rate_gen@_eusart_obj+1)& (0+255),w,b
  5466  001CE4  22DA               	addwfc	fsr2h,f,c
  5467  001CE6  50DF               	movf	indf2,w,c
  5468  001CE8  6F5B               	movwf	??_async_config_baud_rate_gen& (0+255),b
  5469  001CEA  6B5C               	clrf	(??_async_config_baud_rate_gen+1)& (0+255),b
  5470                           
  5471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5472                           ; Switch size 1, requested type "simple"
  5473                           ; Number of cases is 1, Range of values is 0 to 0
  5474                           ; switch strategies available:
  5475                           ; Name         Instructions Cycles
  5476                           ; simple_byte            4     3 (average)
  5477                           ;	Chosen strategy is simple_byte
  5478  001CEC  515C               	movf	(??_async_config_baud_rate_gen+1)& (0+255),w,b
  5479  001CEE  0A00               	xorlw	0	; case 0
  5480  001CF0  B4D8               	btfsc	status,2,c
  5481  001CF2  EF7D  F00E         	goto	l12106
  5482  001CF6  EF69  F00E         	goto	l10776
  5483  001CFA                     l12106:
  5484                           
  5485                           ; BSR set to: 1
  5486                           ; Switch size 1, requested type "simple"
  5487                           ; Number of cases is 4, Range of values is 0 to 3
  5488                           ; switch strategies available:
  5489                           ; Name         Instructions Cycles
  5490                           ; simple_byte           13     7 (average)
  5491                           ;	Chosen strategy is simple_byte
  5492  001CFA  515B               	movf	??_async_config_baud_rate_gen& (0+255),w,b
  5493  001CFC  0A00               	xorlw	0	; case 0
  5494  001CFE  B4D8               	btfsc	status,2,c
  5495  001D00  EFF1  F00C         	goto	l815
  5496  001D04  0A01               	xorlw	1	; case 1
  5497  001D06  B4D8               	btfsc	status,2,c
  5498  001D08  EF4F  F00D         	goto	l817
  5499  001D0C  0A03               	xorlw	3	; case 2
  5500  001D0E  B4D8               	btfsc	status,2,c
  5501  001D10  EFAD  F00D         	goto	l818
  5502  001D14  0A01               	xorlw	1	; case 3
  5503  001D16  B4D8               	btfsc	status,2,c
  5504  001D18  EF0B  F00E         	goto	l819
  5505  001D1C  EF69  F00E         	goto	l10776
  5506  001D20                     l10782:
  5507                           
  5508                           ;MCAL/EUSART/mcal_EUSART.c: 604:         SPBRG=(uint8)((uint32)Baudrate_temp);
  5509  001D20  C15E  F151         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  5510  001D24  C15F  F152         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  5511  001D28  C160  F153         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  5512  001D2C  C161  F154         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  5513  001D30  EC12  F01A         	call	___fltol	;wreg free
  5514  001D34  0101               	movlb	1	; () banked
  5515  001D36  5151               	movf	?___fltol& (0+255),w,b
  5516  001D38  6EAF               	movwf	175,c	;volatile
  5517                           
  5518                           ;MCAL/EUSART/mcal_EUSART.c: 605:         SPBRGH=(uint8)(((uint32)Baudrate_temp)>>8);
  5519  001D3A  C15E  F151         	movff	async_config_baud_rate_gen@Baudrate_temp,___fltol@f1
  5520  001D3E  C15F  F152         	movff	async_config_baud_rate_gen@Baudrate_temp+1,___fltol@f1+1
  5521  001D42  C160  F153         	movff	async_config_baud_rate_gen@Baudrate_temp+2,___fltol@f1+2
  5522  001D46  C161  F154         	movff	async_config_baud_rate_gen@Baudrate_temp+3,___fltol@f1+3
  5523  001D4A  EC12  F01A         	call	___fltol	;wreg free
  5524  001D4E  0101               	movlb	1	; () banked
  5525  001D50  C152  F151         	movff	?___fltol+1,?___fltol
  5526  001D54  C153  F152         	movff	?___fltol+2,?___fltol+1
  5527  001D58  C154  F153         	movff	?___fltol+3,?___fltol+2
  5528  001D5C  6B54               	clrf	(?___fltol+3)& (0+255),b
  5529  001D5E  5151               	movf	?___fltol& (0+255),w,b
  5530  001D60  6EB0               	movwf	176,c	;volatile
  5531  001D62                     l10784:
  5532                           
  5533                           ; BSR set to: 1
  5534                           ;MCAL/EUSART/mcal_EUSART.c: 608:     return ret_val ;
  5535  001D62  515D               	movf	async_config_baud_rate_gen@ret_val& (0+255),w,b
  5536  001D64                     
  5537                           ; BSR set to: 1
  5538  001D64  0012               	return		;funcret
  5539  001D66                     __end_of_async_config_baud_rate_gen:
  5540                           	callstack 0
  5541                           
  5542 ;; *************** function _async_Tx_config *****************
  5543 ;; Defined at:
  5544 ;;		line 386 in file "MCAL/EUSART/mcal_EUSART.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  _tx_obj         2   29[COMRAM] PTR const struct .
  5547 ;;		 -> _uart_obj(12), 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  ret_val         1   31[COMRAM] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      unsigned char 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:        3 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; Hardware stack levels required when called: 8
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_EUSART_Async_Init
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text27
  5574  004258                     __ptext27:
  5575                           	callstack 0
  5576  004258                     _async_Tx_config:
  5577                           	callstack 20
  5578  004258                     
  5579                           ;MCAL/EUSART/mcal_EUSART.c: 386: static Std_ReturnType async_Tx_config(const uart_tx_con
      +                          fig_st *_tx_obj );MCAL/EUSART/mcal_EUSART.c: 387: {;MCAL/EUSART/mcal_EUSART.c: 388:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5580  004258  0E01               	movlw	1
  5581  00425A  6E20               	movwf	async_Tx_config@ret_val^0,c
  5582  00425C                     
  5583                           ;MCAL/EUSART/mcal_EUSART.c: 390:     if(((void*)0) == _tx_obj)
  5584  00425C  501E               	movf	async_Tx_config@_tx_obj^0,w,c
  5585  00425E  101F               	iorwf	(async_Tx_config@_tx_obj+1)^0,w,c
  5586  004260  A4D8               	btfss	status,2,c
  5587  004262  EF35  F021         	goto	u11571
  5588  004266  EF37  F021         	goto	u11570
  5589  00426A                     u11571:
  5590  00426A  EF3B  F021         	goto	l10800
  5591  00426E                     u11570:
  5592  00426E                     
  5593                           ;MCAL/EUSART/mcal_EUSART.c: 391:     {;MCAL/EUSART/mcal_EUSART.c: 392:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5594  00426E  0E00               	movlw	0
  5595  004270  6E20               	movwf	async_Tx_config@ret_val^0,c
  5596                           
  5597                           ;MCAL/EUSART/mcal_EUSART.c: 393:     }
  5598  004272  EF72  F021         	goto	l10816
  5599  004276                     l10800:
  5600                           
  5601                           ;MCAL/EUSART/mcal_EUSART.c: 395:     {;MCAL/EUSART/mcal_EUSART.c: 396:         if(1 == _
      +                          tx_obj->tx_enable)
  5602  004276  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5603  00427A  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5604  00427E  A4DF               	btfss	indf2,2,c
  5605  004280  EF44  F021         	goto	u11581
  5606  004284  EF46  F021         	goto	u11580
  5607  004288                     u11581:
  5608  004288  EF64  F021         	goto	l10812
  5609  00428C                     u11580:
  5610  00428C                     
  5611                           ;MCAL/EUSART/mcal_EUSART.c: 397:         {;MCAL/EUSART/mcal_EUSART.c: 400:             (
      +                          TXSTAbits.TXEN = 0);
  5612  00428C  9AAC               	bcf	172,5,c	;volatile
  5613  00428E                     
  5614                           ;MCAL/EUSART/mcal_EUSART.c: 406:             if(1 == _tx_obj->tx_9th_bit_en )
  5615  00428E  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5616  004292  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5617  004296  A6DF               	btfss	indf2,3,c
  5618  004298  EF50  F021         	goto	u11591
  5619  00429C  EF52  F021         	goto	u11590
  5620  0042A0                     u11591:
  5621  0042A0  EF55  F021         	goto	l10808
  5622  0042A4                     u11590:
  5623  0042A4                     
  5624                           ;MCAL/EUSART/mcal_EUSART.c: 407:             {;MCAL/EUSART/mcal_EUSART.c: 408:          
      +                                 TXSTAbits.TX9 = 1 ;
  5625  0042A4  8CAC               	bsf	172,6,c	;volatile
  5626                           
  5627                           ;MCAL/EUSART/mcal_EUSART.c: 409:             }
  5628  0042A6  EF61  F021         	goto	l776
  5629  0042AA                     l10808:
  5630  0042AA  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5631  0042AE  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5632  0042B2  B6DF               	btfsc	indf2,3,c
  5633  0042B4  EF5E  F021         	goto	u11601
  5634  0042B8  EF60  F021         	goto	u11600
  5635  0042BC                     u11601:
  5636  0042BC  EF61  F021         	goto	l776
  5637  0042C0                     u11600:
  5638  0042C0                     
  5639                           ;MCAL/EUSART/mcal_EUSART.c: 411:             {;MCAL/EUSART/mcal_EUSART.c: 412:          
      +                                 TXSTAbits.TX9 = 0 ;
  5640  0042C0  9CAC               	bcf	172,6,c	;volatile
  5641  0042C2                     l776:
  5642                           
  5643                           ;MCAL/EUSART/mcal_EUSART.c: 417:             (TXSTAbits.TXEN = 1);
  5644  0042C2  8AAC               	bsf	172,5,c	;volatile
  5645                           
  5646                           ;MCAL/EUSART/mcal_EUSART.c: 418:         }
  5647  0042C4  EF72  F021         	goto	l10816
  5648  0042C8                     l10812:
  5649  0042C8  C01E  FFD9         	movff	async_Tx_config@_tx_obj,fsr2l
  5650  0042CC  C01F  FFDA         	movff	async_Tx_config@_tx_obj+1,fsr2h
  5651  0042D0  B4DF               	btfsc	indf2,2,c
  5652  0042D2  EF6D  F021         	goto	u11611
  5653  0042D6  EF6F  F021         	goto	u11610
  5654  0042DA                     u11611:
  5655  0042DA  EF72  F021         	goto	l779
  5656  0042DE                     u11610:
  5657  0042DE                     
  5658                           ;MCAL/EUSART/mcal_EUSART.c: 420:         {;MCAL/EUSART/mcal_EUSART.c: 422:             (
      +                          TXSTAbits.TXEN = 0);
  5659  0042DE  9AAC               	bcf	172,5,c	;volatile
  5660                           
  5661                           ;MCAL/EUSART/mcal_EUSART.c: 423:         }
  5662  0042E0  EF72  F021         	goto	l10816
  5663  0042E4                     l779:
  5664  0042E4                     l10816:
  5665                           
  5666                           ;MCAL/EUSART/mcal_EUSART.c: 428:     return ret_val ;
  5667  0042E4  5020               	movf	async_Tx_config@ret_val^0,w,c
  5668  0042E6  0012               	return		;funcret
  5669  0042E8                     __end_of_async_Tx_config:
  5670                           	callstack 0
  5671                           
  5672 ;; *************** function _async_Rx_config *****************
  5673 ;; Defined at:
  5674 ;;		line 431 in file "MCAL/EUSART/mcal_EUSART.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  _rx_obj         2   32[COMRAM] PTR const struct .
  5677 ;;		 -> _uart_obj(12), 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  ret_val         1   34[COMRAM] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      unsigned char 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;Total ram usage:        3 bytes
  5694 ;; Hardware stack levels used: 1
  5695 ;; Hardware stack levels required when called: 9
  5696 ;; This function calls:
  5697 ;;		_Rx_config_interrupt
  5698 ;; This function is called by:
  5699 ;;		_EUSART_Async_Init
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text28
  5704  003F12                     __ptext28:
  5705                           	callstack 0
  5706  003F12                     _async_Rx_config:
  5707                           	callstack 19
  5708  003F12                     
  5709                           ;MCAL/EUSART/mcal_EUSART.c: 431: static Std_ReturnType async_Rx_config(const uart_rx_con
      +                          fig_st *_rx_obj );MCAL/EUSART/mcal_EUSART.c: 432: {;MCAL/EUSART/mcal_EUSART.c: 433:     
      +                          Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5710  003F12  0E01               	movlw	1
  5711  003F14  6E23               	movwf	async_Rx_config@ret_val^0,c
  5712  003F16                     
  5713                           ;MCAL/EUSART/mcal_EUSART.c: 435:     if(((void*)0) == _rx_obj)
  5714  003F16  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5715  003F18  1022               	iorwf	(async_Rx_config@_rx_obj+1)^0,w,c
  5716  003F1A  A4D8               	btfss	status,2,c
  5717  003F1C  EF92  F01F         	goto	u11621
  5718  003F20  EF94  F01F         	goto	u11620
  5719  003F24                     u11621:
  5720  003F24  EF98  F01F         	goto	l10826
  5721  003F28                     u11620:
  5722  003F28                     
  5723                           ;MCAL/EUSART/mcal_EUSART.c: 436:     {;MCAL/EUSART/mcal_EUSART.c: 437:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5724  003F28  0E00               	movlw	0
  5725  003F2A  6E23               	movwf	async_Rx_config@ret_val^0,c
  5726                           
  5727                           ;MCAL/EUSART/mcal_EUSART.c: 438:     }
  5728  003F2C  EFDE  F01F         	goto	l10844
  5729  003F30                     l10826:
  5730                           
  5731                           ;MCAL/EUSART/mcal_EUSART.c: 440:     {;MCAL/EUSART/mcal_EUSART.c: 441:         if(1 == _
      +                          rx_obj->rx_enable)
  5732  003F30  EE20 F006          	lfsr	2,6
  5733  003F34  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5734  003F36  26D9               	addwf	fsr2l,f,c
  5735  003F38  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5736  003F3A  22DA               	addwfc	fsr2h,f,c
  5737  003F3C  A6DF               	btfss	indf2,3,c
  5738  003F3E  EFA3  F01F         	goto	u11631
  5739  003F42  EFA5  F01F         	goto	u11630
  5740  003F46                     u11631:
  5741  003F46  EFCE  F01F         	goto	l10840
  5742  003F4A                     u11630:
  5743  003F4A                     
  5744                           ;MCAL/EUSART/mcal_EUSART.c: 442:         {;MCAL/EUSART/mcal_EUSART.c: 444:             (
      +                          RCSTAbits.CREN = 0);
  5745  003F4A  98AB               	bcf	171,4,c	;volatile
  5746  003F4C                     
  5747                           ;MCAL/EUSART/mcal_EUSART.c: 447:             ret_val = Rx_config_interrupt(_rx_obj);
  5748  003F4C  C021  F01E         	movff	async_Rx_config@_rx_obj,Rx_config_interrupt@_rx_obj
  5749  003F50  C022  F01F         	movff	async_Rx_config@_rx_obj+1,Rx_config_interrupt@_rx_obj+1
  5750  003F54  ECDB  F020         	call	_Rx_config_interrupt	;wreg free
  5751  003F58  6E23               	movwf	async_Rx_config@ret_val^0,c
  5752  003F5A                     
  5753                           ;MCAL/EUSART/mcal_EUSART.c: 450:             if(1 == _rx_obj->rx_9th_bit_en )
  5754  003F5A  EE20 F006          	lfsr	2,6
  5755  003F5E  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5756  003F60  26D9               	addwf	fsr2l,f,c
  5757  003F62  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5758  003F64  22DA               	addwfc	fsr2h,f,c
  5759  003F66  A8DF               	btfss	indf2,4,c
  5760  003F68  EFB8  F01F         	goto	u11641
  5761  003F6C  EFBA  F01F         	goto	u11640
  5762  003F70                     u11641:
  5763  003F70  EFBD  F01F         	goto	l10836
  5764  003F74                     u11640:
  5765  003F74                     
  5766                           ;MCAL/EUSART/mcal_EUSART.c: 451:             {;MCAL/EUSART/mcal_EUSART.c: 452:          
      +                                 RCSTAbits.RX9 = 1 ;
  5767  003F74  8CAB               	bsf	171,6,c	;volatile
  5768                           
  5769                           ;MCAL/EUSART/mcal_EUSART.c: 453:             }
  5770  003F76  EFCB  F01F         	goto	l789
  5771  003F7A                     l10836:
  5772  003F7A  EE20 F006          	lfsr	2,6
  5773  003F7E  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5774  003F80  26D9               	addwf	fsr2l,f,c
  5775  003F82  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5776  003F84  22DA               	addwfc	fsr2h,f,c
  5777  003F86  B8DF               	btfsc	indf2,4,c
  5778  003F88  EFC8  F01F         	goto	u11651
  5779  003F8C  EFCA  F01F         	goto	u11650
  5780  003F90                     u11651:
  5781  003F90  EFCB  F01F         	goto	l789
  5782  003F94                     u11650:
  5783  003F94                     
  5784                           ;MCAL/EUSART/mcal_EUSART.c: 455:             {;MCAL/EUSART/mcal_EUSART.c: 456:          
      +                                 RCSTAbits.RX9 = 0 ;
  5785  003F94  9CAB               	bcf	171,6,c	;volatile
  5786  003F96                     l789:
  5787                           
  5788                           ;MCAL/EUSART/mcal_EUSART.c: 461:             (RCSTAbits.CREN = 1);
  5789  003F96  88AB               	bsf	171,4,c	;volatile
  5790                           
  5791                           ;MCAL/EUSART/mcal_EUSART.c: 462:         }
  5792  003F98  EFDE  F01F         	goto	l10844
  5793  003F9C                     l10840:
  5794  003F9C  EE20 F006          	lfsr	2,6
  5795  003FA0  5021               	movf	async_Rx_config@_rx_obj^0,w,c
  5796  003FA2  26D9               	addwf	fsr2l,f,c
  5797  003FA4  5022               	movf	(async_Rx_config@_rx_obj+1)^0,w,c
  5798  003FA6  22DA               	addwfc	fsr2h,f,c
  5799  003FA8  B6DF               	btfsc	indf2,3,c
  5800  003FAA  EFD9  F01F         	goto	u11661
  5801  003FAE  EFDB  F01F         	goto	u11660
  5802  003FB2                     u11661:
  5803  003FB2  EFDE  F01F         	goto	l792
  5804  003FB6                     u11660:
  5805  003FB6                     
  5806                           ;MCAL/EUSART/mcal_EUSART.c: 464:         {;MCAL/EUSART/mcal_EUSART.c: 466:             (
      +                          RCSTAbits.CREN = 0);
  5807  003FB6  98AB               	bcf	171,4,c	;volatile
  5808                           
  5809                           ;MCAL/EUSART/mcal_EUSART.c: 467:         }
  5810  003FB8  EFDE  F01F         	goto	l10844
  5811  003FBC                     l792:
  5812  003FBC                     l10844:
  5813                           
  5814                           ;MCAL/EUSART/mcal_EUSART.c: 472:     return ret_val ;
  5815  003FBC  5023               	movf	async_Rx_config@ret_val^0,w,c
  5816  003FBE  0012               	return		;funcret
  5817  003FC0                     __end_of_async_Rx_config:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function _Rx_config_interrupt *****************
  5821 ;; Defined at:
  5822 ;;		line 518 in file "MCAL/EUSART/mcal_EUSART.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  _rx_obj         2   29[COMRAM] PTR const struct .
  5825 ;;		 -> _uart_obj(12), 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  ret_val         1   31[COMRAM] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      unsigned char 
  5830 ;; Registers used:
  5831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;Total ram usage:        3 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; Hardware stack levels required when called: 8
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_async_Rx_config
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text29
  5852  0041B6                     __ptext29:
  5853                           	callstack 0
  5854  0041B6                     _Rx_config_interrupt:
  5855                           	callstack 19
  5856  0041B6                     
  5857                           ;MCAL/EUSART/mcal_EUSART.c: 518: static __attribute__((inline)) Std_ReturnType Rx_config
      +                          _interrupt(const uart_rx_config_st *_rx_obj);MCAL/EUSART/mcal_EUSART.c: 519: {;MCAL/EUSA
      +                          RT/mcal_EUSART.c: 521:      Std_ReturnType ret_val = (Std_ReturnType) 0x01 ;
  5858  0041B6  0E01               	movlw	1
  5859  0041B8  6E20               	movwf	Rx_config_interrupt@ret_val^0,c
  5860  0041BA                     
  5861                           ;MCAL/EUSART/mcal_EUSART.c: 523:     if(((void*)0) == _rx_obj)
  5862  0041BA  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5863  0041BC  101F               	iorwf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5864  0041BE  A4D8               	btfss	status,2,c
  5865  0041C0  EFE4  F020         	goto	u11061
  5866  0041C4  EFE6  F020         	goto	u11060
  5867  0041C8                     u11061:
  5868  0041C8  EFEA  F020         	goto	l803
  5869  0041CC                     u11060:
  5870  0041CC                     
  5871                           ;MCAL/EUSART/mcal_EUSART.c: 524:     {;MCAL/EUSART/mcal_EUSART.c: 525:         ret_val =
      +                           (Std_ReturnType) 0x00 ;
  5872  0041CC  0E00               	movlw	0
  5873  0041CE  6E20               	movwf	Rx_config_interrupt@ret_val^0,c
  5874                           
  5875                           ;MCAL/EUSART/mcal_EUSART.c: 526:     }
  5876  0041D0  EF2A  F021         	goto	l10470
  5877  0041D4                     l803:
  5878                           
  5879                           ;MCAL/EUSART/mcal_EUSART.c: 528:     {;MCAL/EUSART/mcal_EUSART.c: 530:         (PIE1bits
      +                          .RCIE = 0);
  5880  0041D4  9A9D               	bcf	157,5,c	;volatile
  5881  0041D6                     
  5882                           ;MCAL/EUSART/mcal_EUSART.c: 531:         eusart_Rx_InterruptHandler = _rx_obj->rx_Interr
      +                          uptHandler ;
  5883  0041D6  C01E  FFD9         	movff	Rx_config_interrupt@_rx_obj,fsr2l
  5884  0041DA  C01F  FFDA         	movff	Rx_config_interrupt@_rx_obj+1,fsr2h
  5885  0041DE  CFDE F029          	movff	postinc2,_eusart_Rx_InterruptHandler
  5886  0041E2  CFDD F02A          	movff	postdec2,_eusart_Rx_InterruptHandler+1
  5887  0041E6                     
  5888                           ;MCAL/EUSART/mcal_EUSART.c: 532:         eusart_frameerr_CallBack = _rx_obj->ferr_Interr
      +                          uptHandler ;
  5889  0041E6  EE20 F004          	lfsr	2,4
  5890  0041EA  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5891  0041EC  26D9               	addwf	fsr2l,f,c
  5892  0041EE  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5893  0041F0  22DA               	addwfc	fsr2h,f,c
  5894  0041F2  CFDE F0F3          	movff	postinc2,_eusart_frameerr_CallBack
  5895  0041F6  CFDD F0F4          	movff	postdec2,_eusart_frameerr_CallBack+1
  5896  0041FA                     
  5897                           ;MCAL/EUSART/mcal_EUSART.c: 533:         eusart_overrunerr_CallBack = _rx_obj->oerr_Inte
      +                          rruptHandler ;
  5898  0041FA  EE20 F002          	lfsr	2,2
  5899  0041FE  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5900  004200  26D9               	addwf	fsr2l,f,c
  5901  004202  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5902  004204  22DA               	addwfc	fsr2h,f,c
  5903  004206  CFDE F0F5          	movff	postinc2,_eusart_overrunerr_CallBack
  5904  00420A  CFDD F0F6          	movff	postdec2,_eusart_overrunerr_CallBack+1
  5905  00420E                     
  5906                           ;MCAL/EUSART/mcal_EUSART.c: 536:                 (RCONbits.IPEN = 1 );
  5907  00420E  8ED0               	bsf	208,7,c	;volatile
  5908  004210                     
  5909                           ;MCAL/EUSART/mcal_EUSART.c: 537:                 if(1 == _rx_obj->uart_rx_priority)
  5910  004210  EE20 F006          	lfsr	2,6
  5911  004214  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5912  004216  26D9               	addwf	fsr2l,f,c
  5913  004218  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5914  00421A  22DA               	addwfc	fsr2h,f,c
  5915  00421C  A0DF               	btfss	indf2,0,c
  5916  00421E  EF13  F021         	goto	u11071
  5917  004222  EF15  F021         	goto	u11070
  5918  004226                     u11071:
  5919  004226  EF19  F021         	goto	l10466
  5920  00422A                     u11070:
  5921  00422A                     
  5922                           ;MCAL/EUSART/mcal_EUSART.c: 538:                 {;MCAL/EUSART/mcal_EUSART.c: 539:      
      +                                         (IPR1bits.RCIP = 1);
  5923  00422A  8A9F               	bsf	159,5,c	;volatile
  5924                           
  5925                           ;MCAL/EUSART/mcal_EUSART.c: 540:                     (INTCONbits.GIEH = 1);
  5926  00422C  8EF2               	bsf	242,7,c	;volatile
  5927                           
  5928                           ;MCAL/EUSART/mcal_EUSART.c: 542:                 }
  5929  00422E  EF29  F021         	goto	l806
  5930  004232                     l10466:
  5931  004232  EE20 F006          	lfsr	2,6
  5932  004236  501E               	movf	Rx_config_interrupt@_rx_obj^0,w,c
  5933  004238  26D9               	addwf	fsr2l,f,c
  5934  00423A  501F               	movf	(Rx_config_interrupt@_rx_obj+1)^0,w,c
  5935  00423C  22DA               	addwfc	fsr2h,f,c
  5936  00423E  B0DF               	btfsc	indf2,0,c
  5937  004240  EF24  F021         	goto	u11081
  5938  004244  EF26  F021         	goto	u11080
  5939  004248                     u11081:
  5940  004248  EF29  F021         	goto	l806
  5941  00424C                     u11080:
  5942  00424C                     
  5943                           ;MCAL/EUSART/mcal_EUSART.c: 544:                 {;MCAL/EUSART/mcal_EUSART.c: 545:      
      +                                         (IPR1bits.RCIP = 0);
  5944  00424C  9A9F               	bcf	159,5,c	;volatile
  5945                           
  5946                           ;MCAL/EUSART/mcal_EUSART.c: 546:                     (INTCONbits.GIEH = 1);
  5947  00424E  8EF2               	bsf	242,7,c	;volatile
  5948                           
  5949                           ;MCAL/EUSART/mcal_EUSART.c: 547:                     (INTCONbits.GIEL = 1);
  5950  004250  8CF2               	bsf	242,6,c	;volatile
  5951  004252                     l806:
  5952                           
  5953                           ;MCAL/EUSART/mcal_EUSART.c: 555:         (PIE1bits.RCIE = 1);
  5954  004252  8A9D               	bsf	157,5,c	;volatile
  5955  004254                     l10470:
  5956                           
  5957                           ;MCAL/EUSART/mcal_EUSART.c: 560:     return ret_val ;
  5958  004254  5020               	movf	Rx_config_interrupt@ret_val^0,w,c
  5959  004256  0012               	return		;funcret
  5960  004258                     __end_of_Rx_config_interrupt:
  5961                           	callstack 0
  5962                           
  5963 ;; *************** function _Robot_Steer_Right_Forward *****************
  5964 ;; Defined at:
  5965 ;;		line 108 in file "Robot/Navigation/robot_navigation.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  ret_val         1    0        unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      unsigned char 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5983 ;;Total ram usage:        0 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 11
  5986 ;; This function calls:
  5987 ;;		_CCP_PWM_Set_Duty
  5988 ;;		_ECU_DC_Motor_Run_Right
  5989 ;;		_Robot_Steer_Stop
  5990 ;;		_Servo_SetAngle
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text30
  5997  003AA6                     __ptext30:
  5998                           	callstack 0
  5999  003AA6                     _Robot_Steer_Right_Forward:
  6000                           	callstack 19
  6001  003AA6                     
  6002                           ;Robot/Navigation/robot_navigation.c: 113:       Movement_State = NAV_MOV_FORW_STEER_RIG
      +                          HT ;
  6003  003AA6  0E02               	movlw	2
  6004  003AA8  0100               	movlb	0	; () banked
  6005  003AAA  6FF7               	movwf	_Movement_State& (0+255),b
  6006  003AAC                     
  6007                           ; BSR set to: 0
  6008                           ;Robot/Navigation/robot_navigation.c: 115:       Robot_Steer_Stop();
  6009  003AAC  EC6D  F027         	call	_Robot_Steer_Stop	;wreg free
  6010  003AB0                     
  6011                           ;Robot/Navigation/robot_navigation.c: 117:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_1 , 45 );
  6012  003AB0  0EC6               	movlw	low _i2c_obj
  6013  003AB2  0101               	movlb	1	; () banked
  6014  003AB4  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6015  003AB6  0E00               	movlw	high _i2c_obj
  6016  003AB8  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6017  003ABA  0ECD               	movlw	low _servo_driver_obj
  6018  003ABC  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6019  003ABE  0E00               	movlw	high _servo_driver_obj
  6020  003AC0  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6021  003AC2  0E00               	movlw	0
  6022  003AC4  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6023  003AC6  0E2D               	movlw	45
  6024  003AC8  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6025  003ACA  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6026  003ACE                     
  6027                           ;Robot/Navigation/robot_navigation.c: 118:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_2 , 25 );
  6028  003ACE  0EC6               	movlw	low _i2c_obj
  6029  003AD0  0101               	movlb	1	; () banked
  6030  003AD2  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6031  003AD4  0E00               	movlw	high _i2c_obj
  6032  003AD6  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6033  003AD8  0ECD               	movlw	low _servo_driver_obj
  6034  003ADA  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6035  003ADC  0E00               	movlw	high _servo_driver_obj
  6036  003ADE  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6037  003AE0  0E01               	movlw	1
  6038  003AE2  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6039  003AE4  0E19               	movlw	25
  6040  003AE6  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6041  003AE8  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6042  003AEC                     
  6043                           ;Robot/Navigation/robot_navigation.c: 119:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_3 , 135 );
  6044  003AEC  0EC6               	movlw	low _i2c_obj
  6045  003AEE  0101               	movlb	1	; () banked
  6046  003AF0  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6047  003AF2  0E00               	movlw	high _i2c_obj
  6048  003AF4  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6049  003AF6  0ECD               	movlw	low _servo_driver_obj
  6050  003AF8  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6051  003AFA  0E00               	movlw	high _servo_driver_obj
  6052  003AFC  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6053  003AFE  0E02               	movlw	2
  6054  003B00  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6055  003B02  0E87               	movlw	135
  6056  003B04  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6057  003B06  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6058  003B0A                     
  6059                           ;Robot/Navigation/robot_navigation.c: 120:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_4 , 115 );
  6060  003B0A  0EC6               	movlw	low _i2c_obj
  6061  003B0C  0101               	movlb	1	; () banked
  6062  003B0E  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6063  003B10  0E00               	movlw	high _i2c_obj
  6064  003B12  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6065  003B14  0ECD               	movlw	low _servo_driver_obj
  6066  003B16  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6067  003B18  0E00               	movlw	high _servo_driver_obj
  6068  003B1A  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6069  003B1C  0E03               	movlw	3
  6070  003B1E  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6071  003B20  0E73               	movlw	115
  6072  003B22  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6073  003B24  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6074  003B28                     
  6075                           ;Robot/Navigation/robot_navigation.c: 122:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  6076  003B28  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  6077  003B2A  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6078  003B2C  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6079  003B2E  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6080  003B30  EC32  F027         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6081  003B34                     
  6082                           ;Robot/Navigation/robot_navigation.c: 123:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  6083  003B34  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  6084  003B36  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6085  003B38  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6086  003B3A  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6087  003B3C  EC32  F027         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6088  003B40                     
  6089                           ;Robot/Navigation/robot_navigation.c: 125:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6090  003B40  0E41               	movlw	low _CCP1_Obj
  6091  003B42  0101               	movlb	1	; () banked
  6092  003B44  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6093  003B46  0E01               	movlw	high _CCP1_Obj
  6094  003B48  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6095  003B4A  0E5F               	movlw	95
  6096  003B4C  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6097  003B4E  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6098  003B52                     
  6099                           ;Robot/Navigation/robot_navigation.c: 126:       CCP_PWM_Set_Duty(&CCP2_Obj , 85);
  6100  003B52  0E35               	movlw	low _CCP2_Obj
  6101  003B54  0101               	movlb	1	; () banked
  6102  003B56  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6103  003B58  0E01               	movlw	high _CCP2_Obj
  6104  003B5A  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6105  003B5C  0E55               	movlw	85
  6106  003B5E  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6107  003B60  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6108  003B64  0012               	return		;funcret
  6109  003B66                     __end_of_Robot_Steer_Right_Forward:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _Robot_Steer_Right_Backward *****************
  6113 ;; Defined at:
  6114 ;;		line 151 in file "Robot/Navigation/robot_navigation.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      unsigned char 
  6121 ;; Registers used:
  6122 ;;		None
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 8
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text31
  6143  004FBE                     __ptext31:
  6144                           	callstack 0
  6145  004FBE                     _Robot_Steer_Right_Backward:
  6146                           	callstack 22
  6147  004FBE  0012               	return		;funcret
  6148  004FC0                     __end_of_Robot_Steer_Right_Backward:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _Robot_Steer_Left_Forward *****************
  6152 ;; Defined at:
  6153 ;;		line 130 in file "Robot/Navigation/robot_navigation.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  ret_val         1    0        unsigned char 
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      unsigned char 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used: 1
  6173 ;; Hardware stack levels required when called: 11
  6174 ;; This function calls:
  6175 ;;		_CCP_PWM_Set_Duty
  6176 ;;		_ECU_DC_Motor_Run_Right
  6177 ;;		_Robot_Steer_Stop
  6178 ;;		_Servo_SetAngle
  6179 ;; This function is called by:
  6180 ;;		_main
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text32
  6185  003B66                     __ptext32:
  6186                           	callstack 0
  6187  003B66                     _Robot_Steer_Left_Forward:
  6188                           	callstack 19
  6189  003B66                     
  6190                           ;Robot/Navigation/robot_navigation.c: 133:             Movement_State = NAV_MOV_FORW_STE
      +                          ER_LEFT ;
  6191  003B66  0E03               	movlw	3
  6192  003B68  0100               	movlb	0	; () banked
  6193  003B6A  6FF7               	movwf	_Movement_State& (0+255),b
  6194  003B6C                     
  6195                           ; BSR set to: 0
  6196                           ;Robot/Navigation/robot_navigation.c: 135:       Robot_Steer_Stop();
  6197  003B6C  EC6D  F027         	call	_Robot_Steer_Stop	;wreg free
  6198  003B70                     
  6199                           ;Robot/Navigation/robot_navigation.c: 137:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_1 , 115 );
  6200  003B70  0EC6               	movlw	low _i2c_obj
  6201  003B72  0101               	movlb	1	; () banked
  6202  003B74  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6203  003B76  0E00               	movlw	high _i2c_obj
  6204  003B78  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6205  003B7A  0ECD               	movlw	low _servo_driver_obj
  6206  003B7C  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6207  003B7E  0E00               	movlw	high _servo_driver_obj
  6208  003B80  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6209  003B82  0E00               	movlw	0
  6210  003B84  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6211  003B86  0E73               	movlw	115
  6212  003B88  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6213  003B8A  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6214  003B8E                     
  6215                           ;Robot/Navigation/robot_navigation.c: 138:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_2 , 135 );
  6216  003B8E  0EC6               	movlw	low _i2c_obj
  6217  003B90  0101               	movlb	1	; () banked
  6218  003B92  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6219  003B94  0E00               	movlw	high _i2c_obj
  6220  003B96  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6221  003B98  0ECD               	movlw	low _servo_driver_obj
  6222  003B9A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6223  003B9C  0E00               	movlw	high _servo_driver_obj
  6224  003B9E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6225  003BA0  0E01               	movlw	1
  6226  003BA2  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6227  003BA4  0E87               	movlw	135
  6228  003BA6  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6229  003BA8  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6230  003BAC                     
  6231                           ;Robot/Navigation/robot_navigation.c: 139:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_3 , 25 );
  6232  003BAC  0EC6               	movlw	low _i2c_obj
  6233  003BAE  0101               	movlb	1	; () banked
  6234  003BB0  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6235  003BB2  0E00               	movlw	high _i2c_obj
  6236  003BB4  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6237  003BB6  0ECD               	movlw	low _servo_driver_obj
  6238  003BB8  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6239  003BBA  0E00               	movlw	high _servo_driver_obj
  6240  003BBC  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6241  003BBE  0E02               	movlw	2
  6242  003BC0  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6243  003BC2  0E19               	movlw	25
  6244  003BC4  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6245  003BC6  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6246  003BCA                     
  6247                           ;Robot/Navigation/robot_navigation.c: 140:       Servo_SetAngle(&i2c_obj , &servo_driver
      +                          _obj , servo_index_4 , 45 );
  6248  003BCA  0EC6               	movlw	low _i2c_obj
  6249  003BCC  0101               	movlb	1	; () banked
  6250  003BCE  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6251  003BD0  0E00               	movlw	high _i2c_obj
  6252  003BD2  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6253  003BD4  0ECD               	movlw	low _servo_driver_obj
  6254  003BD6  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6255  003BD8  0E00               	movlw	high _servo_driver_obj
  6256  003BDA  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6257  003BDC  0E03               	movlw	3
  6258  003BDE  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6259  003BE0  0E2D               	movlw	45
  6260  003BE2  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6261  003BE4  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6262  003BE8                     
  6263                           ;Robot/Navigation/robot_navigation.c: 142:       ECU_DC_Motor_Run_Right(&W1_W3_W5_Motor_
      +                          Control);
  6264  003BE8  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  6265  003BEA  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6266  003BEC  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6267  003BEE  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6268  003BF0  EC32  F027         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6269  003BF4                     
  6270                           ;Robot/Navigation/robot_navigation.c: 143:       ECU_DC_Motor_Run_Right(&W2_W4_W6_Motor_
      +                          Control);
  6271  003BF4  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  6272  003BF6  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6273  003BF8  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6274  003BFA  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6275  003BFC  EC32  F027         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6276  003C00                     
  6277                           ;Robot/Navigation/robot_navigation.c: 145:       CCP_PWM_Set_Duty(&CCP1_Obj , 85);
  6278  003C00  0E41               	movlw	low _CCP1_Obj
  6279  003C02  0101               	movlb	1	; () banked
  6280  003C04  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6281  003C06  0E01               	movlw	high _CCP1_Obj
  6282  003C08  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6283  003C0A  0E55               	movlw	85
  6284  003C0C  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6285  003C0E  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6286  003C12                     
  6287                           ;Robot/Navigation/robot_navigation.c: 146:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6288  003C12  0E35               	movlw	low _CCP2_Obj
  6289  003C14  0101               	movlb	1	; () banked
  6290  003C16  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6291  003C18  0E01               	movlw	high _CCP2_Obj
  6292  003C1A  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6293  003C1C  0E5F               	movlw	95
  6294  003C1E  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6295  003C20  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6296  003C24  0012               	return		;funcret
  6297  003C26                     __end_of_Robot_Steer_Left_Forward:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function _Robot_Steer_Left_Backward *****************
  6301 ;; Defined at:
  6302 ;;		line 155 in file "Robot/Navigation/robot_navigation.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;		None
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      unsigned char 
  6309 ;; Registers used:
  6310 ;;		None
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;Total ram usage:        0 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 8
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_main
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text33
  6331  004FC0                     __ptext33:
  6332                           	callstack 0
  6333  004FC0                     _Robot_Steer_Left_Backward:
  6334                           	callstack 22
  6335  004FC0  0012               	return		;funcret
  6336  004FC2                     __end_of_Robot_Steer_Left_Backward:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function _Robot_Move_Forward *****************
  6340 ;; Defined at:
  6341 ;;		line 62 in file "Robot/Navigation/robot_navigation.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  ret_val         1    0        unsigned char 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      unsigned char 
  6348 ;; Registers used:
  6349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 11
  6362 ;; This function calls:
  6363 ;;		_CCP_PWM_Set_Duty
  6364 ;;		_ECU_DC_Motor_Run_Right
  6365 ;;		_Robot_Steer_Stop
  6366 ;;		_Servo_SetAngle
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text34
  6373  003C26                     __ptext34:
  6374                           	callstack 0
  6375  003C26                     _Robot_Move_Forward:
  6376                           	callstack 19
  6377  003C26                     
  6378                           ;Robot/Navigation/robot_navigation.c: 67:             Movement_State = NAV_MOV_FORW ;
  6379  003C26  0E01               	movlw	1
  6380  003C28  0100               	movlb	0	; () banked
  6381  003C2A  6FF7               	movwf	_Movement_State& (0+255),b
  6382  003C2C                     
  6383                           ; BSR set to: 0
  6384                           ;Robot/Navigation/robot_navigation.c: 69:             Robot_Steer_Stop();
  6385  003C2C  EC6D  F027         	call	_Robot_Steer_Stop	;wreg free
  6386  003C30                     
  6387                           ;Robot/Navigation/robot_navigation.c: 71:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_1 , 90 );
  6388  003C30  0EC6               	movlw	low _i2c_obj
  6389  003C32  0101               	movlb	1	; () banked
  6390  003C34  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6391  003C36  0E00               	movlw	high _i2c_obj
  6392  003C38  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6393  003C3A  0ECD               	movlw	low _servo_driver_obj
  6394  003C3C  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6395  003C3E  0E00               	movlw	high _servo_driver_obj
  6396  003C40  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6397  003C42  0E00               	movlw	0
  6398  003C44  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6399  003C46  0E5A               	movlw	90
  6400  003C48  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6401  003C4A  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6402  003C4E                     
  6403                           ;Robot/Navigation/robot_navigation.c: 72:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_2 , 90 );
  6404  003C4E  0EC6               	movlw	low _i2c_obj
  6405  003C50  0101               	movlb	1	; () banked
  6406  003C52  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6407  003C54  0E00               	movlw	high _i2c_obj
  6408  003C56  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6409  003C58  0ECD               	movlw	low _servo_driver_obj
  6410  003C5A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6411  003C5C  0E00               	movlw	high _servo_driver_obj
  6412  003C5E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6413  003C60  0E01               	movlw	1
  6414  003C62  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6415  003C64  0E5A               	movlw	90
  6416  003C66  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6417  003C68  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6418  003C6C                     
  6419                           ;Robot/Navigation/robot_navigation.c: 73:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_3 , 90 );
  6420  003C6C  0EC6               	movlw	low _i2c_obj
  6421  003C6E  0101               	movlb	1	; () banked
  6422  003C70  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6423  003C72  0E00               	movlw	high _i2c_obj
  6424  003C74  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6425  003C76  0ECD               	movlw	low _servo_driver_obj
  6426  003C78  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6427  003C7A  0E00               	movlw	high _servo_driver_obj
  6428  003C7C  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6429  003C7E  0E02               	movlw	2
  6430  003C80  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6431  003C82  0E5A               	movlw	90
  6432  003C84  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6433  003C86  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6434  003C8A                     
  6435                           ;Robot/Navigation/robot_navigation.c: 74:             Servo_SetAngle(&i2c_obj , &servo_d
      +                          river_obj , servo_index_4 , 90 );
  6436  003C8A  0EC6               	movlw	low _i2c_obj
  6437  003C8C  0101               	movlb	1	; () banked
  6438  003C8E  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6439  003C90  0E00               	movlw	high _i2c_obj
  6440  003C92  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6441  003C94  0ECD               	movlw	low _servo_driver_obj
  6442  003C96  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6443  003C98  0E00               	movlw	high _servo_driver_obj
  6444  003C9A  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6445  003C9C  0E03               	movlw	3
  6446  003C9E  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6447  003CA0  0E5A               	movlw	90
  6448  003CA2  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6449  003CA4  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6450  003CA8                     
  6451                           ;Robot/Navigation/robot_navigation.c: 76:             ECU_DC_Motor_Run_Right(&W1_W3_W5_M
      +                          otor_Control);
  6452  003CA8  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  6453  003CAA  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6454  003CAC  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6455  003CAE  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6456  003CB0  EC32  F027         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6457  003CB4                     
  6458                           ;Robot/Navigation/robot_navigation.c: 77:             ECU_DC_Motor_Run_Right(&W2_W4_W6_M
      +                          otor_Control);
  6459  003CB4  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  6460  003CB6  6E22               	movwf	ECU_DC_Motor_Run_Right@dc_motor^0,c
  6461  003CB8  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6462  003CBA  6E23               	movwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,c
  6463  003CBC  EC32  F027         	call	_ECU_DC_Motor_Run_Right	;wreg free
  6464  003CC0                     
  6465                           ;Robot/Navigation/robot_navigation.c: 79:             CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6466  003CC0  0E41               	movlw	low _CCP1_Obj
  6467  003CC2  0101               	movlb	1	; () banked
  6468  003CC4  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6469  003CC6  0E01               	movlw	high _CCP1_Obj
  6470  003CC8  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6471  003CCA  0E5F               	movlw	95
  6472  003CCC  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6473  003CCE  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6474  003CD2                     
  6475                           ;Robot/Navigation/robot_navigation.c: 80:             CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6476  003CD2  0E35               	movlw	low _CCP2_Obj
  6477  003CD4  0101               	movlb	1	; () banked
  6478  003CD6  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6479  003CD8  0E01               	movlw	high _CCP2_Obj
  6480  003CDA  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6481  003CDC  0E5F               	movlw	95
  6482  003CDE  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6483  003CE0  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6484  003CE4  0012               	return		;funcret
  6485  003CE6                     __end_of_Robot_Move_Forward:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function _ECU_DC_Motor_Run_Right *****************
  6489 ;; Defined at:
  6490 ;;		line 59 in file "ECU/DC_Motor/ecu_dc_motor.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  6493 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  ret_value       1    0        unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      unsigned char 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        2 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 9
  6512 ;; This function calls:
  6513 ;;		_GPIO_Pin_Write_Logic
  6514 ;; This function is called by:
  6515 ;;		_Robot_Move_Forward
  6516 ;;		_Robot_Steer_Right_Forward
  6517 ;;		_Robot_Steer_Left_Forward
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text35
  6522  004E64                     __ptext35:
  6523                           	callstack 0
  6524  004E64                     _ECU_DC_Motor_Run_Right:
  6525                           	callstack 20
  6526  004E64                     
  6527                           ;ECU/DC_Motor/ecu_dc_motor.c: 62:     if(((void*)0) == dc_motor)
  6528  004E64  5022               	movf	ECU_DC_Motor_Run_Right@dc_motor^0,w,c
  6529  004E66  1023               	iorwf	(ECU_DC_Motor_Run_Right@dc_motor+1)^0,w,c
  6530  004E68  A4D8               	btfss	status,2,c
  6531  004E6A  EF39  F027         	goto	u11811
  6532  004E6E  EF3B  F027         	goto	u11810
  6533  004E72                     u11811:
  6534  004E72  EF3D  F027         	goto	l10928
  6535  004E76                     u11810:
  6536  004E76                     
  6537                           ;ECU/DC_Motor/ecu_dc_motor.c: 65:     }
  6538  004E76  EF45  F027         	goto	l65
  6539  004E7A                     l10928:
  6540                           
  6541                           ;ECU/DC_Motor/ecu_dc_motor.c: 67:     {;ECU/DC_Motor/ecu_dc_motor.c: 68:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_LOW );
  6542  004E7A  C022  F01E         	movff	ECU_DC_Motor_Run_Right@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  6543  004E7E  C023  F01F         	movff	ECU_DC_Motor_Run_Right@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  6544  004E82  0E00               	movlw	0
  6545  004E84  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  6546  004E86  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  6547  004E8A                     l65:
  6548  004E8A  0012               	return		;funcret
  6549  004E8C                     __end_of_ECU_DC_Motor_Run_Right:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _Robot_Move_Backward *****************
  6553 ;; Defined at:
  6554 ;;		line 86 in file "Robot/Navigation/robot_navigation.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  ret_val         1    0        unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      unsigned char 
  6561 ;; Registers used:
  6562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 11
  6575 ;; This function calls:
  6576 ;;		_CCP_PWM_Set_Duty
  6577 ;;		_ECU_DC_Motor_Run_Left
  6578 ;;		_Robot_Steer_Stop
  6579 ;;		_Servo_SetAngle
  6580 ;; This function is called by:
  6581 ;;		_main
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text36
  6586  003CE6                     __ptext36:
  6587                           	callstack 0
  6588  003CE6                     _Robot_Move_Backward:
  6589                           	callstack 19
  6590  003CE6                     
  6591                           ;Robot/Navigation/robot_navigation.c: 89:       Movement_State = NAV_MOV_BACKW ;
  6592  003CE6  0E04               	movlw	4
  6593  003CE8  0100               	movlb	0	; () banked
  6594  003CEA  6FF7               	movwf	_Movement_State& (0+255),b
  6595  003CEC                     
  6596                           ; BSR set to: 0
  6597                           ;Robot/Navigation/robot_navigation.c: 91:       Robot_Steer_Stop();
  6598  003CEC  EC6D  F027         	call	_Robot_Steer_Stop	;wreg free
  6599  003CF0                     
  6600                           ;Robot/Navigation/robot_navigation.c: 93:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_1 , 90 );
  6601  003CF0  0EC6               	movlw	low _i2c_obj
  6602  003CF2  0101               	movlb	1	; () banked
  6603  003CF4  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6604  003CF6  0E00               	movlw	high _i2c_obj
  6605  003CF8  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6606  003CFA  0ECD               	movlw	low _servo_driver_obj
  6607  003CFC  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6608  003CFE  0E00               	movlw	high _servo_driver_obj
  6609  003D00  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6610  003D02  0E00               	movlw	0
  6611  003D04  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6612  003D06  0E5A               	movlw	90
  6613  003D08  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6614  003D0A  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6615  003D0E                     
  6616                           ;Robot/Navigation/robot_navigation.c: 94:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_2 , 90 );
  6617  003D0E  0EC6               	movlw	low _i2c_obj
  6618  003D10  0101               	movlb	1	; () banked
  6619  003D12  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6620  003D14  0E00               	movlw	high _i2c_obj
  6621  003D16  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6622  003D18  0ECD               	movlw	low _servo_driver_obj
  6623  003D1A  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6624  003D1C  0E00               	movlw	high _servo_driver_obj
  6625  003D1E  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6626  003D20  0E01               	movlw	1
  6627  003D22  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6628  003D24  0E5A               	movlw	90
  6629  003D26  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6630  003D28  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6631  003D2C                     
  6632                           ;Robot/Navigation/robot_navigation.c: 95:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_3 , 90 );
  6633  003D2C  0EC6               	movlw	low _i2c_obj
  6634  003D2E  0101               	movlb	1	; () banked
  6635  003D30  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6636  003D32  0E00               	movlw	high _i2c_obj
  6637  003D34  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6638  003D36  0ECD               	movlw	low _servo_driver_obj
  6639  003D38  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6640  003D3A  0E00               	movlw	high _servo_driver_obj
  6641  003D3C  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6642  003D3E  0E02               	movlw	2
  6643  003D40  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6644  003D42  0E5A               	movlw	90
  6645  003D44  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6646  003D46  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6647  003D4A                     
  6648                           ;Robot/Navigation/robot_navigation.c: 96:       Servo_SetAngle(&i2c_obj , &servo_driver_
      +                          obj , servo_index_4 , 90 );
  6649  003D4A  0EC6               	movlw	low _i2c_obj
  6650  003D4C  0101               	movlb	1	; () banked
  6651  003D4E  6F59               	movwf	Servo_SetAngle@i2c_obj& (0+255),b
  6652  003D50  0E00               	movlw	high _i2c_obj
  6653  003D52  6F5A               	movwf	(Servo_SetAngle@i2c_obj+1)& (0+255),b
  6654  003D54  0ECD               	movlw	low _servo_driver_obj
  6655  003D56  6F5B               	movwf	Servo_SetAngle@servo_driver_obj& (0+255),b
  6656  003D58  0E00               	movlw	high _servo_driver_obj
  6657  003D5A  6F5C               	movwf	(Servo_SetAngle@servo_driver_obj+1)& (0+255),b
  6658  003D5C  0E03               	movlw	3
  6659  003D5E  6F5D               	movwf	Servo_SetAngle@servo_no& (0+255),b
  6660  003D60  0E5A               	movlw	90
  6661  003D62  6F5E               	movwf	Servo_SetAngle@angle& (0+255),b
  6662  003D64  EC94  F01B         	call	_Servo_SetAngle	;wreg free
  6663  003D68                     
  6664                           ;Robot/Navigation/robot_navigation.c: 98:       ECU_DC_Motor_Run_Left(&W1_W3_W5_Motor_Co
      +                          ntrol);
  6665  003D68  0ED4               	movlw	low _W1_W3_W5_Motor_Control
  6666  003D6A  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6667  003D6C  0E00               	movlw	high _W1_W3_W5_Motor_Control
  6668  003D6E  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6669  003D70  EC46  F027         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6670  003D74                     
  6671                           ;Robot/Navigation/robot_navigation.c: 99:       ECU_DC_Motor_Run_Left(&W2_W4_W6_Motor_Co
      +                          ntrol);
  6672  003D74  0ED3               	movlw	low _W2_W4_W6_Motor_Control
  6673  003D76  6E22               	movwf	ECU_DC_Motor_Run_Left@dc_motor^0,c
  6674  003D78  0E00               	movlw	high _W2_W4_W6_Motor_Control
  6675  003D7A  6E23               	movwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,c
  6676  003D7C  EC46  F027         	call	_ECU_DC_Motor_Run_Left	;wreg free
  6677  003D80                     
  6678                           ;Robot/Navigation/robot_navigation.c: 101:       CCP_PWM_Set_Duty(&CCP1_Obj , 95);
  6679  003D80  0E41               	movlw	low _CCP1_Obj
  6680  003D82  0101               	movlb	1	; () banked
  6681  003D84  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6682  003D86  0E01               	movlw	high _CCP1_Obj
  6683  003D88  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6684  003D8A  0E5F               	movlw	95
  6685  003D8C  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6686  003D8E  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6687  003D92                     
  6688                           ;Robot/Navigation/robot_navigation.c: 102:       CCP_PWM_Set_Duty(&CCP2_Obj , 95);
  6689  003D92  0E35               	movlw	low _CCP2_Obj
  6690  003D94  0101               	movlb	1	; () banked
  6691  003D96  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  6692  003D98  0E01               	movlw	high _CCP2_Obj
  6693  003D9A  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  6694  003D9C  0E5F               	movlw	95
  6695  003D9E  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  6696  003DA0  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  6697  003DA4  0012               	return		;funcret
  6698  003DA6                     __end_of_Robot_Move_Backward:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _Servo_SetAngle *****************
  6702 ;; Defined at:
  6703 ;;		line 43 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  i2c_obj         2   12[BANK1 ] PTR const struct .
  6706 ;;		 -> i2c_obj(7), 
  6707 ;;  servo_driver    2   14[BANK1 ] PTR const struct .
  6708 ;;		 -> servo_driver_obj(4), 
  6709 ;;  servo_no        1   16[BANK1 ] const enum E3294
  6710 ;;  angle           1   17[BANK1 ] const unsigned char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  angle_in_reg    2   18[BANK1 ] unsigned short 
  6713 ;;  reg_addrees     1   20[BANK1 ] unsigned char 
  6714 ;;  ERRORSTATUS     1    0        unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      unsigned char 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6724 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;Total ram usage:        9 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; Hardware stack levels required when called: 10
  6731 ;; This function calls:
  6732 ;;		_PCA_Write_Reg
  6733 ;;		___fladd
  6734 ;;		___flmul
  6735 ;;		___fltol
  6736 ;;		___xxtofl
  6737 ;; This function is called by:
  6738 ;;		_Robot_Move_Forward
  6739 ;;		_Robot_Move_Backward
  6740 ;;		_Robot_Steer_Right_Forward
  6741 ;;		_Robot_Steer_Left_Forward
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text37
  6747  003728                     __ptext37:
  6748                           	callstack 0
  6749  003728                     _Servo_SetAngle:
  6750                           	callstack 20
  6751  003728                     
  6752                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 46:     if (((void*)0)==i2c_obj)
  6753  003728  0101               	movlb	1	; () banked
  6754  00372A  5159               	movf	Servo_SetAngle@i2c_obj& (0+255),w,b
  6755  00372C  115A               	iorwf	(Servo_SetAngle@i2c_obj+1)& (0+255),w,b
  6756  00372E  A4D8               	btfss	status,2,c
  6757  003730  EF9C  F01B         	goto	u11931
  6758  003734  EF9E  F01B         	goto	u11930
  6759  003738                     u11931:
  6760  003738  EFA0  F01B         	goto	l11026
  6761  00373C                     u11930:
  6762  00373C                     
  6763                           ; BSR set to: 1
  6764                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 49:     }
  6765  00373C  EF07  F01C         	goto	l310
  6766  003740                     l11026:
  6767                           
  6768                           ; BSR set to: 1
  6769                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 51:     {;ECU/SERVO_MOTOR_CONTROL
      +                          _BY_I2C/ecu_servo_motor_i2c.c: 52:         uint8 reg_addrees=6+(servo_no*4)+2;
  6770  003740  515D               	movf	Servo_SetAngle@servo_no& (0+255),w,b
  6771  003742  0D04               	mullw	4
  6772  003744  50F3               	movf	243,w,c
  6773  003746  0F08               	addlw	8
  6774  003748  6F61               	movwf	Servo_SetAngle@reg_addrees& (0+255),b
  6775  00374A                     
  6776                           ; BSR set to: 1
  6777                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 54:          uint16 angle_in_reg=
      +                          (uint16)(angle*1.138+204);
  6778  00374A  0E00               	movlw	0
  6779  00374C  0100               	movlb	0	; () banked
  6780  00374E  6FA0               	movwf	___fladd@a& (0+255),b
  6781  003750  0E00               	movlw	0
  6782  003752  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  6783  003754  0E4C               	movlw	76
  6784  003756  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  6785  003758  0E43               	movlw	67
  6786  00375A  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  6787  00375C  0EFC               	movlw	252
  6788  00375E  6F87               	movwf	___flmul@a& (0+255),b
  6789  003760  0EA9               	movlw	169
  6790  003762  6F88               	movwf	(___flmul@a+1)& (0+255),b
  6791  003764  0E91               	movlw	145
  6792  003766  6F89               	movwf	(___flmul@a+2)& (0+255),b
  6793  003768  0E3F               	movlw	63
  6794  00376A  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  6795  00376C  0101               	movlb	1	; () banked
  6796  00376E  515E               	movf	Servo_SetAngle@angle& (0+255),w,b
  6797  003770  6E1E               	movwf	___xxtofl@val^0,c
  6798  003772  6A1F               	clrf	(___xxtofl@val+1)^0,c
  6799  003774  6A20               	clrf	(___xxtofl@val+2)^0,c
  6800  003776  6A21               	clrf	(___xxtofl@val+3)^0,c
  6801  003778  0E01               	movlw	1
  6802  00377A  EC04  F014         	call	___xxtofl
  6803  00377E  C01E  F083         	movff	?___xxtofl,___flmul@b
  6804  003782  C01F  F084         	movff	?___xxtofl+1,___flmul@b+1
  6805  003786  C020  F085         	movff	?___xxtofl+2,___flmul@b+2
  6806  00378A  C021  F086         	movff	?___xxtofl+3,___flmul@b+3
  6807  00378E  ECC1  F00A         	call	___flmul	;wreg free
  6808  003792  C083  F09C         	movff	?___flmul,___fladd@b
  6809  003796  C084  F09D         	movff	?___flmul+1,___fladd@b+1
  6810  00379A  C085  F09E         	movff	?___flmul+2,___fladd@b+2
  6811  00379E  C086  F09F         	movff	?___flmul+3,___fladd@b+3
  6812  0037A2  EC24  F008         	call	___fladd	;wreg free
  6813  0037A6  C09C  F151         	movff	?___fladd,___fltol@f1
  6814  0037AA  C09D  F152         	movff	?___fladd+1,___fltol@f1+1
  6815  0037AE  C09E  F153         	movff	?___fladd+2,___fltol@f1+2
  6816  0037B2  C09F  F154         	movff	?___fladd+3,___fltol@f1+3
  6817  0037B6  EC12  F01A         	call	___fltol	;wreg free
  6818  0037BA  C151  F15F         	movff	?___fltol,Servo_SetAngle@angle_in_reg
  6819  0037BE  C152  F160         	movff	?___fltol+1,Servo_SetAngle@angle_in_reg+1
  6820  0037C2                     
  6821                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 61:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)angle_in_reg));
  6822  0037C2  C159  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  6823  0037C6  C15A  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  6824  0037CA  C15B  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  6825  0037CE  C15C  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  6826  0037D2  50DF               	movf	indf2,w,c
  6827  0037D4  0100               	movlb	0	; () banked
  6828  0037D6  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  6829  0037D8  C161  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  6830  0037DC  C15F  F064         	movff	Servo_SetAngle@angle_in_reg,PCA_Write_Reg@data
  6831  0037E0  EC3F  F025         	call	_PCA_Write_Reg	;wreg free
  6832  0037E4                     
  6833                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 62:         reg_addrees++;
  6834  0037E4  0101               	movlb	1	; () banked
  6835  0037E6  2B61               	incf	Servo_SetAngle@reg_addrees& (0+255),f,b
  6836  0037E8                     
  6837                           ; BSR set to: 1
  6838                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 63:         PCA_Write_Reg(i2c_obj
      +                          ,servo_driver_obj->slave_address,reg_addrees,((uint8)(angle_in_reg>>8)));
  6839  0037E8  C159  F060         	movff	Servo_SetAngle@i2c_obj,PCA_Write_Reg@i2c_obj
  6840  0037EC  C15A  F061         	movff	Servo_SetAngle@i2c_obj+1,PCA_Write_Reg@i2c_obj+1
  6841  0037F0  C15B  FFD9         	movff	Servo_SetAngle@servo_driver_obj,fsr2l
  6842  0037F4  C15C  FFDA         	movff	Servo_SetAngle@servo_driver_obj+1,fsr2h
  6843  0037F8  50DF               	movf	indf2,w,c
  6844  0037FA  0100               	movlb	0	; () banked
  6845  0037FC  6F62               	movwf	PCA_Write_Reg@slave_address& (0+255),b
  6846  0037FE  C161  F063         	movff	Servo_SetAngle@reg_addrees,PCA_Write_Reg@reg_address
  6847  003802  0101               	movlb	1	; () banked
  6848  003804  5160               	movf	(Servo_SetAngle@angle_in_reg+1)& (0+255),w,b
  6849  003806  0100               	movlb	0	; () banked
  6850  003808  6F64               	movwf	PCA_Write_Reg@data& (0+255),b
  6851  00380A  EC3F  F025         	call	_PCA_Write_Reg	;wreg free
  6852  00380E                     l310:
  6853  00380E  0012               	return		;funcret
  6854  003810                     __end_of_Servo_SetAngle:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function ___fladd *****************
  6858 ;; Defined at:
  6859 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  b               4   60[BANK0 ] unsigned char 
  6862 ;;  a               4   64[BANK0 ] unsigned char 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;  grs             1    3[BANK1 ] unsigned char 
  6865 ;;  bexp            1    2[BANK1 ] unsigned char 
  6866 ;;  aexp            1    1[BANK1 ] unsigned char 
  6867 ;;  signs           1    0[BANK1 ] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  4   60[BANK0 ] unsigned char 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6877 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;Total ram usage:       16 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 8
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_Servo_SetAngle
  6888 ;;		_async_config_baud_rate_gen
  6889 ;;		_I2C_Master_Mode_Clock_Configurations
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text38
  6894  001048                     __ptext38:
  6895                           	callstack 0
  6896  001048                     ___fladd:
  6897                           	callstack 17
  6898  001048  0100               	movlb	0	; () banked
  6899  00104A  519F               	movf	(___fladd@b+3)& (0+255),w,b
  6900  00104C  0B80               	andlw	128
  6901  00104E  0101               	movlb	1	; () banked
  6902  001050  6F4D               	movwf	___fladd@signs& (0+255),b
  6903  001052  0100               	movlb	0	; () banked
  6904  001054  519F               	movf	(___fladd@b+3)& (0+255),w,b
  6905  001056  259F               	addwf	(___fladd@b+3)& (0+255),w,b
  6906  001058  0101               	movlb	1	; () banked
  6907  00105A  6F4F               	movwf	___fladd@bexp& (0+255),b
  6908  00105C                     
  6909                           ; BSR set to: 1
  6910  00105C  0100               	movlb	0	; () banked
  6911  00105E  AF9E               	btfss	(___fladd@b+2)& (0+255),7,b
  6912  001060  EF34  F008         	goto	u9811
  6913  001064  EF36  F008         	goto	u9810
  6914  001068                     u9811:
  6915  001068  EF38  F008         	goto	l9694
  6916  00106C                     u9810:
  6917  00106C                     
  6918                           ; BSR set to: 0
  6919  00106C  0101               	movlb	1	; () banked
  6920  00106E  814F               	bsf	___fladd@bexp& (0+255),0,b
  6921  001070                     l9694:
  6922  001070  0101               	movlb	1	; () banked
  6923  001072  514F               	movf	___fladd@bexp& (0+255),w,b
  6924  001074  B4D8               	btfsc	status,2,c
  6925  001076  EF3F  F008         	goto	u9821
  6926  00107A  EF41  F008         	goto	u9820
  6927  00107E                     u9821:
  6928  00107E  EF58  F008         	goto	l9704
  6929  001082                     u9820:
  6930  001082                     
  6931                           ; BSR set to: 1
  6932  001082  294F               	incf	___fladd@bexp& (0+255),w,b
  6933  001084  A4D8               	btfss	status,2,c
  6934  001086  EF47  F008         	goto	u9831
  6935  00108A  EF49  F008         	goto	u9830
  6936  00108E                     u9831:
  6937  00108E  EF52  F008         	goto	l9700
  6938  001092                     u9830:
  6939  001092                     
  6940                           ; BSR set to: 1
  6941  001092  0E00               	movlw	0
  6942  001094  0100               	movlb	0	; () banked
  6943  001096  6F9C               	movwf	___fladd@b& (0+255),b
  6944  001098  0E00               	movlw	0
  6945  00109A  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6946  00109C  0E00               	movlw	0
  6947  00109E  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6948  0010A0  0E00               	movlw	0
  6949  0010A2  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6950  0010A4                     l9700:
  6951  0010A4  0100               	movlb	0	; () banked
  6952  0010A6  8F9E               	bsf	(___fladd@b+2)& (0+255),7,b
  6953  0010A8                     
  6954                           ; BSR set to: 0
  6955  0010A8  0E00               	movlw	0
  6956  0010AA  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6957  0010AC  EF61  F008         	goto	l9706
  6958  0010B0                     l9704:
  6959                           
  6960                           ; BSR set to: 1
  6961  0010B0  0E00               	movlw	0
  6962  0010B2  0100               	movlb	0	; () banked
  6963  0010B4  6F9C               	movwf	___fladd@b& (0+255),b
  6964  0010B6  0E00               	movlw	0
  6965  0010B8  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  6966  0010BA  0E00               	movlw	0
  6967  0010BC  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  6968  0010BE  0E00               	movlw	0
  6969  0010C0  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  6970  0010C2                     l9706:
  6971                           
  6972                           ; BSR set to: 0
  6973  0010C2  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6974  0010C4  0B80               	andlw	128
  6975  0010C6  0101               	movlb	1	; () banked
  6976  0010C8  6F4E               	movwf	___fladd@aexp& (0+255),b
  6977  0010CA                     
  6978                           ; BSR set to: 1
  6979  0010CA  514D               	movf	___fladd@signs& (0+255),w,b
  6980  0010CC  194E               	xorwf	___fladd@aexp& (0+255),w,b
  6981  0010CE  B4D8               	btfsc	status,2,c
  6982  0010D0  EF6C  F008         	goto	u9841
  6983  0010D4  EF6E  F008         	goto	u9840
  6984  0010D8                     u9841:
  6985  0010D8  EF6F  F008         	goto	l9712
  6986  0010DC                     u9840:
  6987  0010DC                     
  6988                           ; BSR set to: 1
  6989  0010DC  8D4D               	bsf	___fladd@signs& (0+255),6,b
  6990  0010DE                     l9712:
  6991                           
  6992                           ; BSR set to: 1
  6993  0010DE  0100               	movlb	0	; () banked
  6994  0010E0  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  6995  0010E2  25A3               	addwf	(___fladd@a+3)& (0+255),w,b
  6996  0010E4  0101               	movlb	1	; () banked
  6997  0010E6  6F4E               	movwf	___fladd@aexp& (0+255),b
  6998  0010E8                     
  6999                           ; BSR set to: 1
  7000  0010E8  0100               	movlb	0	; () banked
  7001  0010EA  AFA2               	btfss	(___fladd@a+2)& (0+255),7,b
  7002  0010EC  EF7A  F008         	goto	u9851
  7003  0010F0  EF7C  F008         	goto	u9850
  7004  0010F4                     u9851:
  7005  0010F4  EF7E  F008         	goto	l9718
  7006  0010F8                     u9850:
  7007  0010F8                     
  7008                           ; BSR set to: 0
  7009  0010F8  0101               	movlb	1	; () banked
  7010  0010FA  814E               	bsf	___fladd@aexp& (0+255),0,b
  7011  0010FC                     l9718:
  7012  0010FC  0101               	movlb	1	; () banked
  7013  0010FE  514E               	movf	___fladd@aexp& (0+255),w,b
  7014  001100  B4D8               	btfsc	status,2,c
  7015  001102  EF85  F008         	goto	u9861
  7016  001106  EF87  F008         	goto	u9860
  7017  00110A                     u9861:
  7018  00110A  EF9E  F008         	goto	l9728
  7019  00110E                     u9860:
  7020  00110E                     
  7021                           ; BSR set to: 1
  7022  00110E  294E               	incf	___fladd@aexp& (0+255),w,b
  7023  001110  A4D8               	btfss	status,2,c
  7024  001112  EF8D  F008         	goto	u9871
  7025  001116  EF8F  F008         	goto	u9870
  7026  00111A                     u9871:
  7027  00111A  EF98  F008         	goto	l9724
  7028  00111E                     u9870:
  7029  00111E                     
  7030                           ; BSR set to: 1
  7031  00111E  0E00               	movlw	0
  7032  001120  0100               	movlb	0	; () banked
  7033  001122  6FA0               	movwf	___fladd@a& (0+255),b
  7034  001124  0E00               	movlw	0
  7035  001126  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  7036  001128  0E00               	movlw	0
  7037  00112A  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  7038  00112C  0E00               	movlw	0
  7039  00112E  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  7040  001130                     l9724:
  7041  001130  0100               	movlb	0	; () banked
  7042  001132  8FA2               	bsf	(___fladd@a+2)& (0+255),7,b
  7043  001134                     
  7044                           ; BSR set to: 0
  7045  001134  0E00               	movlw	0
  7046  001136  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  7047  001138  EFA7  F008         	goto	l9730
  7048  00113C                     l9728:
  7049                           
  7050                           ; BSR set to: 1
  7051  00113C  0E00               	movlw	0
  7052  00113E  0100               	movlb	0	; () banked
  7053  001140  6FA0               	movwf	___fladd@a& (0+255),b
  7054  001142  0E00               	movlw	0
  7055  001144  6FA1               	movwf	(___fladd@a+1)& (0+255),b
  7056  001146  0E00               	movlw	0
  7057  001148  6FA2               	movwf	(___fladd@a+2)& (0+255),b
  7058  00114A  0E00               	movlw	0
  7059  00114C  6FA3               	movwf	(___fladd@a+3)& (0+255),b
  7060  00114E                     l9730:
  7061                           
  7062                           ; BSR set to: 0
  7063  00114E  0101               	movlb	1	; () banked
  7064  001150  514F               	movf	___fladd@bexp& (0+255),w,b
  7065  001152  5D4E               	subwf	___fladd@aexp& (0+255),w,b
  7066  001154  B0D8               	btfsc	status,0,c
  7067  001156  EFAF  F008         	goto	u9881
  7068  00115A  EFB1  F008         	goto	u9880
  7069  00115E                     u9881:
  7070  00115E  EFD8  F008         	goto	l9766
  7071  001162                     u9880:
  7072  001162                     
  7073                           ; BSR set to: 1
  7074  001162  AD4D               	btfss	___fladd@signs& (0+255),6,b
  7075  001164  EFB6  F008         	goto	u9891
  7076  001168  EFB8  F008         	goto	u9890
  7077  00116C                     u9891:
  7078  00116C  EFBA  F008         	goto	l9736
  7079  001170                     u9890:
  7080  001170                     
  7081                           ; BSR set to: 1
  7082  001170  0E80               	movlw	128
  7083  001172  1B4D               	xorwf	___fladd@signs& (0+255),f,b
  7084  001174                     l9736:
  7085                           
  7086                           ; BSR set to: 1
  7087  001174  C14F  F150         	movff	___fladd@bexp,___fladd@grs
  7088  001178                     
  7089                           ; BSR set to: 1
  7090  001178  C14E  F14F         	movff	___fladd@aexp,___fladd@bexp
  7091  00117C                     
  7092                           ; BSR set to: 1
  7093  00117C  C150  F14E         	movff	___fladd@grs,___fladd@aexp
  7094  001180                     
  7095                           ; BSR set to: 1
  7096  001180  C09C  F150         	movff	___fladd@b,___fladd@grs
  7097  001184                     
  7098                           ; BSR set to: 1
  7099  001184  C0A0  F09C         	movff	___fladd@a,___fladd@b
  7100  001188                     
  7101                           ; BSR set to: 1
  7102  001188  C150  F0A0         	movff	___fladd@grs,___fladd@a
  7103  00118C                     
  7104                           ; BSR set to: 1
  7105  00118C  C09D  F150         	movff	___fladd@b+1,___fladd@grs
  7106  001190                     
  7107                           ; BSR set to: 1
  7108  001190  C0A1  F09D         	movff	___fladd@a+1,___fladd@b+1
  7109  001194                     
  7110                           ; BSR set to: 1
  7111  001194  C150  F0A1         	movff	___fladd@grs,___fladd@a+1
  7112  001198                     
  7113                           ; BSR set to: 1
  7114  001198  C09E  F150         	movff	___fladd@b+2,___fladd@grs
  7115  00119C                     
  7116                           ; BSR set to: 1
  7117  00119C  C0A2  F09E         	movff	___fladd@a+2,___fladd@b+2
  7118  0011A0                     
  7119                           ; BSR set to: 1
  7120  0011A0  C150  F0A2         	movff	___fladd@grs,___fladd@a+2
  7121  0011A4                     
  7122                           ; BSR set to: 1
  7123  0011A4  C09F  F150         	movff	___fladd@b+3,___fladd@grs
  7124  0011A8                     
  7125                           ; BSR set to: 1
  7126  0011A8  C0A3  F09F         	movff	___fladd@a+3,___fladd@b+3
  7127  0011AC                     
  7128                           ; BSR set to: 1
  7129  0011AC  C150  F0A3         	movff	___fladd@grs,___fladd@a+3
  7130  0011B0                     l9766:
  7131                           
  7132                           ; BSR set to: 1
  7133  0011B0  0E00               	movlw	0
  7134  0011B2  6F50               	movwf	___fladd@grs& (0+255),b
  7135  0011B4                     
  7136                           ; BSR set to: 1
  7137  0011B4  514F               	movf	___fladd@bexp& (0+255),w,b
  7138  0011B6  C14E  F0A4         	movff	___fladd@aexp,??___fladd
  7139  0011BA  0100               	movlb	0	; () banked
  7140  0011BC  6BA5               	clrf	(??___fladd+1)& (0+255),b
  7141  0011BE  5FA4               	subwf	??___fladd& (0+255),f,b
  7142  0011C0  0E00               	movlw	0
  7143  0011C2  5BA5               	subwfb	(??___fladd+1)& (0+255),f,b
  7144  0011C4  BFA5               	btfsc	(??___fladd+1)& (0+255),7,b
  7145  0011C6  EFEE  F008         	goto	u9901
  7146  0011CA  51A5               	movf	(??___fladd+1)& (0+255),w,b
  7147  0011CC  E109               	bnz	u9900
  7148  0011CE  0E1A               	movlw	26
  7149  0011D0  5DA4               	subwf	??___fladd& (0+255),w,b
  7150  0011D2  A0D8               	btfss	status,0,c
  7151  0011D4  EFEE  F008         	goto	u9901
  7152  0011D8  EFF0  F008         	goto	u9900
  7153  0011DC                     u9901:
  7154  0011DC  EF2D  F009         	goto	l2521
  7155  0011E0                     u9900:
  7156  0011E0                     
  7157                           ; BSR set to: 0
  7158  0011E0  519C               	movf	___fladd@b& (0+255),w,b
  7159  0011E2  119D               	iorwf	(___fladd@b+1)& (0+255),w,b
  7160  0011E4  119E               	iorwf	(___fladd@b+2)& (0+255),w,b
  7161  0011E6  119F               	iorwf	(___fladd@b+3)& (0+255),w,b
  7162  0011E8  A4D8               	btfss	status,2,c
  7163  0011EA  EFF9  F008         	goto	u9911
  7164  0011EE  EFFC  F008         	goto	u9910
  7165  0011F2                     u9911:
  7166  0011F2  0E01               	movlw	1
  7167  0011F4  EFFD  F008         	goto	u9920
  7168  0011F8                     u9910:
  7169  0011F8  0E00               	movlw	0
  7170  0011FA                     u9920:
  7171  0011FA  0101               	movlb	1	; () banked
  7172  0011FC  6F50               	movwf	___fladd@grs& (0+255),b
  7173  0011FE                     
  7174                           ; BSR set to: 1
  7175  0011FE  0E00               	movlw	0
  7176  001200  0100               	movlb	0	; () banked
  7177  001202  6F9C               	movwf	___fladd@b& (0+255),b
  7178  001204  0E00               	movlw	0
  7179  001206  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  7180  001208  0E00               	movlw	0
  7181  00120A  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  7182  00120C  0E00               	movlw	0
  7183  00120E  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  7184  001210                     
  7185                           ; BSR set to: 0
  7186  001210  C14E  F14F         	movff	___fladd@aexp,___fladd@bexp
  7187  001214  EF37  F009         	goto	l2520
  7188  001218                     l2522:
  7189                           
  7190                           ; BSR set to: 1
  7191  001218  A150               	btfss	___fladd@grs& (0+255),0,b
  7192  00121A  EF11  F009         	goto	u9931
  7193  00121E  EF13  F009         	goto	u9930
  7194  001222                     u9931:
  7195  001222  EF19  F009         	goto	l9778
  7196  001226                     u9930:
  7197  001226                     
  7198                           ; BSR set to: 1
  7199  001226  90D8               	bcf	status,0,c
  7200  001228  3150               	rrcf	___fladd@grs& (0+255),w,b
  7201  00122A  0901               	iorlw	1
  7202  00122C  6F50               	movwf	___fladd@grs& (0+255),b
  7203  00122E  EF1B  F009         	goto	l9780
  7204  001232                     l9778:
  7205                           
  7206                           ; BSR set to: 1
  7207  001232  90D8               	bcf	status,0,c
  7208  001234  3350               	rrcf	___fladd@grs& (0+255),f,b
  7209  001236                     l9780:
  7210                           
  7211                           ; BSR set to: 1
  7212  001236  0100               	movlb	0	; () banked
  7213  001238  A19C               	btfss	___fladd@b& (0+255),0,b
  7214  00123A  EF21  F009         	goto	u9941
  7215  00123E  EF23  F009         	goto	u9940
  7216  001242                     u9941:
  7217  001242  EF25  F009         	goto	l9784
  7218  001246                     u9940:
  7219  001246                     
  7220                           ; BSR set to: 0
  7221  001246  0101               	movlb	1	; () banked
  7222  001248  8F50               	bsf	___fladd@grs& (0+255),7,b
  7223  00124A                     l9784:
  7224  00124A  0100               	movlb	0	; () banked
  7225  00124C  359F               	rlcf	(___fladd@b+3)& (0+255),w,b
  7226  00124E  339F               	rrcf	(___fladd@b+3)& (0+255),f,b
  7227  001250  339E               	rrcf	(___fladd@b+2)& (0+255),f,b
  7228  001252  339D               	rrcf	(___fladd@b+1)& (0+255),f,b
  7229  001254  339C               	rrcf	___fladd@b& (0+255),f,b
  7230  001256                     
  7231                           ; BSR set to: 0
  7232  001256  0101               	movlb	1	; () banked
  7233  001258  2B4F               	incf	___fladd@bexp& (0+255),f,b
  7234  00125A                     l2521:
  7235  00125A  0101               	movlb	1	; () banked
  7236  00125C  514E               	movf	___fladd@aexp& (0+255),w,b
  7237  00125E  5D4F               	subwf	___fladd@bexp& (0+255),w,b
  7238  001260  A0D8               	btfss	status,0,c
  7239  001262  EF35  F009         	goto	u9951
  7240  001266  EF37  F009         	goto	u9950
  7241  00126A                     u9951:
  7242  00126A  EF0C  F009         	goto	l2522
  7243  00126E                     u9950:
  7244  00126E                     l2520:
  7245  00126E  0101               	movlb	1	; () banked
  7246  001270  BD4D               	btfsc	___fladd@signs& (0+255),6,b
  7247  001272  EF3D  F009         	goto	u9961
  7248  001276  EF3F  F009         	goto	u9960
  7249  00127A                     u9961:
  7250  00127A  EF86  F009         	goto	l9812
  7251  00127E                     u9960:
  7252  00127E                     
  7253                           ; BSR set to: 1
  7254  00127E  514F               	movf	___fladd@bexp& (0+255),w,b
  7255  001280  A4D8               	btfss	status,2,c
  7256  001282  EF45  F009         	goto	u9971
  7257  001286  EF47  F009         	goto	u9970
  7258  00128A                     u9971:
  7259  00128A  EF52  F009         	goto	l9794
  7260  00128E                     u9970:
  7261  00128E                     
  7262                           ; BSR set to: 1
  7263  00128E  0E00               	movlw	0
  7264  001290  0100               	movlb	0	; () banked
  7265  001292  6F9C               	movwf	?___fladd& (0+255),b
  7266  001294  0E00               	movlw	0
  7267  001296  6F9D               	movwf	(?___fladd+1)& (0+255),b
  7268  001298  0E00               	movlw	0
  7269  00129A  6F9E               	movwf	(?___fladd+2)& (0+255),b
  7270  00129C  0E00               	movlw	0
  7271  00129E  6F9F               	movwf	(?___fladd+3)& (0+255),b
  7272  0012A0  EFC0  F00A         	goto	l2529
  7273  0012A4                     l9794:
  7274                           
  7275                           ; BSR set to: 1
  7276  0012A4  0100               	movlb	0	; () banked
  7277  0012A6  51A0               	movf	___fladd@a& (0+255),w,b
  7278  0012A8  279C               	addwf	___fladd@b& (0+255),f,b
  7279  0012AA  51A1               	movf	(___fladd@a+1)& (0+255),w,b
  7280  0012AC  239D               	addwfc	(___fladd@b+1)& (0+255),f,b
  7281  0012AE  51A2               	movf	(___fladd@a+2)& (0+255),w,b
  7282  0012B0  239E               	addwfc	(___fladd@b+2)& (0+255),f,b
  7283  0012B2  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  7284  0012B4  239F               	addwfc	(___fladd@b+3)& (0+255),f,b
  7285  0012B6                     
  7286                           ; BSR set to: 0
  7287  0012B6  A19F               	btfss	(___fladd@b+3)& (0+255),0,b
  7288  0012B8  EF60  F009         	goto	u9981
  7289  0012BC  EF62  F009         	goto	u9980
  7290  0012C0                     u9981:
  7291  0012C0  EF1D  F00A         	goto	l9848
  7292  0012C4                     u9980:
  7293  0012C4                     
  7294                           ; BSR set to: 0
  7295  0012C4  0101               	movlb	1	; () banked
  7296  0012C6  A150               	btfss	___fladd@grs& (0+255),0,b
  7297  0012C8  EF68  F009         	goto	u9991
  7298  0012CC  EF6A  F009         	goto	u9990
  7299  0012D0                     u9991:
  7300  0012D0  EF70  F009         	goto	l9802
  7301  0012D4                     u9990:
  7302  0012D4                     
  7303                           ; BSR set to: 1
  7304  0012D4  90D8               	bcf	status,0,c
  7305  0012D6  3150               	rrcf	___fladd@grs& (0+255),w,b
  7306  0012D8  0901               	iorlw	1
  7307  0012DA  6F50               	movwf	___fladd@grs& (0+255),b
  7308  0012DC  EF72  F009         	goto	l9804
  7309  0012E0                     l9802:
  7310                           
  7311                           ; BSR set to: 1
  7312  0012E0  90D8               	bcf	status,0,c
  7313  0012E2  3350               	rrcf	___fladd@grs& (0+255),f,b
  7314  0012E4                     l9804:
  7315                           
  7316                           ; BSR set to: 1
  7317  0012E4  0100               	movlb	0	; () banked
  7318  0012E6  A19C               	btfss	___fladd@b& (0+255),0,b
  7319  0012E8  EF78  F009         	goto	u10001
  7320  0012EC  EF7A  F009         	goto	u10000
  7321  0012F0                     u10001:
  7322  0012F0  EF7C  F009         	goto	l9808
  7323  0012F4                     u10000:
  7324  0012F4                     
  7325                           ; BSR set to: 0
  7326  0012F4  0101               	movlb	1	; () banked
  7327  0012F6  8F50               	bsf	___fladd@grs& (0+255),7,b
  7328  0012F8                     l9808:
  7329  0012F8  0100               	movlb	0	; () banked
  7330  0012FA  359F               	rlcf	(___fladd@b+3)& (0+255),w,b
  7331  0012FC  339F               	rrcf	(___fladd@b+3)& (0+255),f,b
  7332  0012FE  339E               	rrcf	(___fladd@b+2)& (0+255),f,b
  7333  001300  339D               	rrcf	(___fladd@b+1)& (0+255),f,b
  7334  001302  339C               	rrcf	___fladd@b& (0+255),f,b
  7335  001304                     
  7336                           ; BSR set to: 0
  7337  001304  0101               	movlb	1	; () banked
  7338  001306  2B4F               	incf	___fladd@bexp& (0+255),f,b
  7339  001308  EF1D  F00A         	goto	l9848
  7340  00130C                     l9812:
  7341                           
  7342                           ; BSR set to: 1
  7343  00130C  0100               	movlb	0	; () banked
  7344  00130E  51A0               	movf	___fladd@a& (0+255),w,b
  7345  001310  5D9C               	subwf	___fladd@b& (0+255),w,b
  7346  001312  51A1               	movf	(___fladd@a+1)& (0+255),w,b
  7347  001314  599D               	subwfb	(___fladd@b+1)& (0+255),w,b
  7348  001316  51A2               	movf	(___fladd@a+2)& (0+255),w,b
  7349  001318  599E               	subwfb	(___fladd@b+2)& (0+255),w,b
  7350  00131A  519F               	movf	(___fladd@b+3)& (0+255),w,b
  7351  00131C  0A80               	xorlw	128
  7352  00131E  6FA4               	movwf	??___fladd& (0+255),b
  7353  001320  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  7354  001322  0A80               	xorlw	128
  7355  001324  59A4               	subwfb	??___fladd& (0+255),w,b
  7356  001326  B0D8               	btfsc	status,0,c
  7357  001328  EF98  F009         	goto	u10011
  7358  00132C  EF9A  F009         	goto	u10010
  7359  001330                     u10011:
  7360  001330  EFC7  F009         	goto	l9822
  7361  001334                     u10010:
  7362  001334                     
  7363                           ; BSR set to: 0
  7364  001334  519C               	movf	___fladd@b& (0+255),w,b
  7365  001336  5DA0               	subwf	___fladd@a& (0+255),w,b
  7366  001338  6FA4               	movwf	??___fladd& (0+255),b
  7367  00133A  519D               	movf	(___fladd@b+1)& (0+255),w,b
  7368  00133C  59A1               	subwfb	(___fladd@a+1)& (0+255),w,b
  7369  00133E  6FA5               	movwf	(??___fladd+1)& (0+255),b
  7370  001340  519E               	movf	(___fladd@b+2)& (0+255),w,b
  7371  001342  59A2               	subwfb	(___fladd@a+2)& (0+255),w,b
  7372  001344  6FA6               	movwf	(??___fladd+2)& (0+255),b
  7373  001346  519F               	movf	(___fladd@b+3)& (0+255),w,b
  7374  001348  59A3               	subwfb	(___fladd@a+3)& (0+255),w,b
  7375  00134A  6FA7               	movwf	(??___fladd+3)& (0+255),b
  7376  00134C  0EFF               	movlw	255
  7377  00134E  25A4               	addwf	??___fladd& (0+255),w,b
  7378  001350  6F9C               	movwf	___fladd@b& (0+255),b
  7379  001352  0EFF               	movlw	255
  7380  001354  21A5               	addwfc	(??___fladd+1)& (0+255),w,b
  7381  001356  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  7382  001358  0EFF               	movlw	255
  7383  00135A  21A6               	addwfc	(??___fladd+2)& (0+255),w,b
  7384  00135C  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  7385  00135E  0EFF               	movlw	255
  7386  001360  21A7               	addwfc	(??___fladd+3)& (0+255),w,b
  7387  001362  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  7388  001364  0E80               	movlw	128
  7389  001366  0101               	movlb	1	; () banked
  7390  001368  1B4D               	xorwf	___fladd@signs& (0+255),f,b
  7391  00136A                     
  7392                           ; BSR set to: 1
  7393  00136A  6D50               	negf	___fladd@grs& (0+255),b
  7394  00136C                     
  7395                           ; BSR set to: 1
  7396  00136C  5150               	movf	___fladd@grs& (0+255),w,b
  7397  00136E  A4D8               	btfss	status,2,c
  7398  001370  EFBC  F009         	goto	u10021
  7399  001374  EFBE  F009         	goto	u10020
  7400  001378                     u10021:
  7401  001378  EFCF  F009         	goto	l2537
  7402  00137C                     u10020:
  7403  00137C                     
  7404                           ; BSR set to: 1
  7405  00137C  0E01               	movlw	1
  7406  00137E  0100               	movlb	0	; () banked
  7407  001380  279C               	addwf	___fladd@b& (0+255),f,b
  7408  001382  0E00               	movlw	0
  7409  001384  239D               	addwfc	(___fladd@b+1)& (0+255),f,b
  7410  001386  239E               	addwfc	(___fladd@b+2)& (0+255),f,b
  7411  001388  239F               	addwfc	(___fladd@b+3)& (0+255),f,b
  7412  00138A  EFCF  F009         	goto	l2537
  7413  00138E                     l9822:
  7414                           
  7415                           ; BSR set to: 0
  7416  00138E  51A0               	movf	___fladd@a& (0+255),w,b
  7417  001390  5F9C               	subwf	___fladd@b& (0+255),f,b
  7418  001392  51A1               	movf	(___fladd@a+1)& (0+255),w,b
  7419  001394  5B9D               	subwfb	(___fladd@b+1)& (0+255),f,b
  7420  001396  51A2               	movf	(___fladd@a+2)& (0+255),w,b
  7421  001398  5B9E               	subwfb	(___fladd@b+2)& (0+255),f,b
  7422  00139A  51A3               	movf	(___fladd@a+3)& (0+255),w,b
  7423  00139C  5B9F               	subwfb	(___fladd@b+3)& (0+255),f,b
  7424  00139E                     l2537:
  7425  00139E  0100               	movlb	0	; () banked
  7426  0013A0  519C               	movf	___fladd@b& (0+255),w,b
  7427  0013A2  119D               	iorwf	(___fladd@b+1)& (0+255),w,b
  7428  0013A4  119E               	iorwf	(___fladd@b+2)& (0+255),w,b
  7429  0013A6  119F               	iorwf	(___fladd@b+3)& (0+255),w,b
  7430  0013A8  A4D8               	btfss	status,2,c
  7431  0013AA  EFD9  F009         	goto	u10031
  7432  0013AE  EFDB  F009         	goto	u10030
  7433  0013B2                     u10031:
  7434  0013B2  EF15  F00A         	goto	l9846
  7435  0013B6                     u10030:
  7436  0013B6                     
  7437                           ; BSR set to: 0
  7438  0013B6  0101               	movlb	1	; () banked
  7439  0013B8  5150               	movf	___fladd@grs& (0+255),w,b
  7440  0013BA  A4D8               	btfss	status,2,c
  7441  0013BC  EFE2  F009         	goto	u10041
  7442  0013C0  EFE4  F009         	goto	u10040
  7443  0013C4                     u10041:
  7444  0013C4  EF15  F00A         	goto	l9846
  7445  0013C8                     u10040:
  7446  0013C8                     
  7447                           ; BSR set to: 1
  7448  0013C8  0E00               	movlw	0
  7449  0013CA  0100               	movlb	0	; () banked
  7450  0013CC  6F9C               	movwf	?___fladd& (0+255),b
  7451  0013CE  0E00               	movlw	0
  7452  0013D0  6F9D               	movwf	(?___fladd+1)& (0+255),b
  7453  0013D2  0E00               	movlw	0
  7454  0013D4  6F9E               	movwf	(?___fladd+2)& (0+255),b
  7455  0013D6  0E00               	movlw	0
  7456  0013D8  6F9F               	movwf	(?___fladd+3)& (0+255),b
  7457  0013DA  EFC0  F00A         	goto	l2529
  7458  0013DE                     l9830:
  7459                           
  7460                           ; BSR set to: 0
  7461  0013DE  90D8               	bcf	status,0,c
  7462  0013E0  379C               	rlcf	___fladd@b& (0+255),f,b
  7463  0013E2  379D               	rlcf	(___fladd@b+1)& (0+255),f,b
  7464  0013E4  379E               	rlcf	(___fladd@b+2)& (0+255),f,b
  7465  0013E6  379F               	rlcf	(___fladd@b+3)& (0+255),f,b
  7466  0013E8                     
  7467                           ; BSR set to: 0
  7468  0013E8  0101               	movlb	1	; () banked
  7469  0013EA  AF50               	btfss	___fladd@grs& (0+255),7,b
  7470  0013EC  EFFA  F009         	goto	u10051
  7471  0013F0  EFFC  F009         	goto	u10050
  7472  0013F4                     u10051:
  7473  0013F4  EFFE  F009         	goto	l9836
  7474  0013F8                     u10050:
  7475  0013F8                     
  7476                           ; BSR set to: 1
  7477  0013F8  0100               	movlb	0	; () banked
  7478  0013FA  819C               	bsf	___fladd@b& (0+255),0,b
  7479  0013FC                     l9836:
  7480  0013FC  0101               	movlb	1	; () banked
  7481  0013FE  A150               	btfss	___fladd@grs& (0+255),0,b
  7482  001400  EF04  F00A         	goto	u10061
  7483  001404  EF06  F00A         	goto	u10060
  7484  001408                     u10061:
  7485  001408  EF0A  F00A         	goto	l9840
  7486  00140C                     u10060:
  7487  00140C                     
  7488                           ; BSR set to: 1
  7489  00140C  80D8               	bsf	status,0,c
  7490  00140E  3750               	rlcf	___fladd@grs& (0+255),f,b
  7491  001410  EF0C  F00A         	goto	l9842
  7492  001414                     l9840:
  7493                           
  7494                           ; BSR set to: 1
  7495  001414  90D8               	bcf	status,0,c
  7496  001416  3750               	rlcf	___fladd@grs& (0+255),f,b
  7497  001418                     l9842:
  7498                           
  7499                           ; BSR set to: 1
  7500  001418  514F               	movf	___fladd@bexp& (0+255),w,b
  7501  00141A  B4D8               	btfsc	status,2,c
  7502  00141C  EF12  F00A         	goto	u10071
  7503  001420  EF14  F00A         	goto	u10070
  7504  001424                     u10071:
  7505  001424  EF15  F00A         	goto	l9846
  7506  001428                     u10070:
  7507  001428                     
  7508                           ; BSR set to: 1
  7509  001428  074F               	decf	___fladd@bexp& (0+255),f,b
  7510  00142A                     l9846:
  7511  00142A  0100               	movlb	0	; () banked
  7512  00142C  AF9E               	btfss	(___fladd@b+2)& (0+255),7,b
  7513  00142E  EF1B  F00A         	goto	u10081
  7514  001432  EF1D  F00A         	goto	u10080
  7515  001436                     u10081:
  7516  001436  EFEF  F009         	goto	l9830
  7517  00143A                     u10080:
  7518  00143A                     l9848:
  7519  00143A  0E00               	movlw	0
  7520  00143C  0101               	movlb	1	; () banked
  7521  00143E  6F4E               	movwf	___fladd@aexp& (0+255),b
  7522  001440                     
  7523                           ; BSR set to: 1
  7524  001440  AF50               	btfss	___fladd@grs& (0+255),7,b
  7525  001442  EF25  F00A         	goto	u10091
  7526  001446  EF27  F00A         	goto	u10090
  7527  00144A                     u10091:
  7528  00144A  EF41  F00A         	goto	l2546
  7529  00144E                     u10090:
  7530  00144E                     
  7531                           ; BSR set to: 1
  7532  00144E  C150  F0A4         	movff	___fladd@grs,??___fladd
  7533  001452  0E7F               	movlw	127
  7534  001454  0100               	movlb	0	; () banked
  7535  001456  17A4               	andwf	??___fladd& (0+255),f,b
  7536  001458  B4D8               	btfsc	status,2,c
  7537  00145A  EF31  F00A         	goto	u10101
  7538  00145E  EF33  F00A         	goto	u10100
  7539  001462                     u10101:
  7540  001462  EF38  F00A         	goto	l2547
  7541  001466                     u10100:
  7542  001466                     l9854:
  7543                           
  7544                           ; BSR set to: 0
  7545  001466  0E01               	movlw	1
  7546  001468  0101               	movlb	1	; () banked
  7547  00146A  6F4E               	movwf	___fladd@aexp& (0+255),b
  7548  00146C  EF41  F00A         	goto	l2546
  7549  001470                     l2547:
  7550                           
  7551                           ; BSR set to: 0
  7552  001470  A19C               	btfss	___fladd@b& (0+255),0,b
  7553  001472  EF3D  F00A         	goto	u10111
  7554  001476  EF3F  F00A         	goto	u10110
  7555  00147A                     u10111:
  7556  00147A  EF41  F00A         	goto	l2546
  7557  00147E                     u10110:
  7558  00147E  EF33  F00A         	goto	l9854
  7559  001482                     l2546:
  7560  001482  0101               	movlb	1	; () banked
  7561  001484  514E               	movf	___fladd@aexp& (0+255),w,b
  7562  001486  B4D8               	btfsc	status,2,c
  7563  001488  EF48  F00A         	goto	u10121
  7564  00148C  EF4A  F00A         	goto	u10120
  7565  001490                     u10121:
  7566  001490  EF77  F00A         	goto	l9866
  7567  001494                     u10120:
  7568  001494                     
  7569                           ; BSR set to: 1
  7570  001494  0E01               	movlw	1
  7571  001496  0100               	movlb	0	; () banked
  7572  001498  279C               	addwf	___fladd@b& (0+255),f,b
  7573  00149A  0E00               	movlw	0
  7574  00149C  239D               	addwfc	(___fladd@b+1)& (0+255),f,b
  7575  00149E  239E               	addwfc	(___fladd@b+2)& (0+255),f,b
  7576  0014A0  239F               	addwfc	(___fladd@b+3)& (0+255),f,b
  7577  0014A2                     
  7578                           ; BSR set to: 0
  7579  0014A2  A19F               	btfss	(___fladd@b+3)& (0+255),0,b
  7580  0014A4  EF56  F00A         	goto	u10131
  7581  0014A8  EF58  F00A         	goto	u10130
  7582  0014AC                     u10131:
  7583  0014AC  EF77  F00A         	goto	l9866
  7584  0014B0                     u10130:
  7585  0014B0                     
  7586                           ; BSR set to: 0
  7587  0014B0  C09C  F0A4         	movff	___fladd@b,??___fladd
  7588  0014B4  C09D  F0A5         	movff	___fladd@b+1,??___fladd+1
  7589  0014B8  C09E  F0A6         	movff	___fladd@b+2,??___fladd+2
  7590  0014BC  C09F  F0A7         	movff	___fladd@b+3,??___fladd+3
  7591  0014C0  35A7               	rlcf	(??___fladd+3)& (0+255),w,b
  7592  0014C2  33A7               	rrcf	(??___fladd+3)& (0+255),f,b
  7593  0014C4  33A6               	rrcf	(??___fladd+2)& (0+255),f,b
  7594  0014C6  33A5               	rrcf	(??___fladd+1)& (0+255),f,b
  7595  0014C8  33A4               	rrcf	??___fladd& (0+255),f,b
  7596  0014CA  C0A4  F09C         	movff	??___fladd,___fladd@b
  7597  0014CE  C0A5  F09D         	movff	??___fladd+1,___fladd@b+1
  7598  0014D2  C0A6  F09E         	movff	??___fladd+2,___fladd@b+2
  7599  0014D6  C0A7  F09F         	movff	??___fladd+3,___fladd@b+3
  7600  0014DA  0101               	movlb	1	; () banked
  7601  0014DC  294F               	incf	___fladd@bexp& (0+255),w,b
  7602  0014DE  B4D8               	btfsc	status,2,c
  7603  0014E0  EF74  F00A         	goto	u10141
  7604  0014E4  EF76  F00A         	goto	u10140
  7605  0014E8                     u10141:
  7606  0014E8  EF77  F00A         	goto	l9866
  7607  0014EC                     u10140:
  7608  0014EC                     
  7609                           ; BSR set to: 1
  7610  0014EC  2B4F               	incf	___fladd@bexp& (0+255),f,b
  7611  0014EE                     l9866:
  7612  0014EE  0101               	movlb	1	; () banked
  7613  0014F0  294F               	incf	___fladd@bexp& (0+255),w,b
  7614  0014F2  B4D8               	btfsc	status,2,c
  7615  0014F4  EF7E  F00A         	goto	u10151
  7616  0014F8  EF80  F00A         	goto	u10150
  7617  0014FC                     u10151:
  7618  0014FC  EF88  F00A         	goto	l9870
  7619  001500                     u10150:
  7620  001500                     
  7621                           ; BSR set to: 1
  7622  001500  514F               	movf	___fladd@bexp& (0+255),w,b
  7623  001502  A4D8               	btfss	status,2,c
  7624  001504  EF86  F00A         	goto	u10161
  7625  001508  EF88  F00A         	goto	u10160
  7626  00150C                     u10161:
  7627  00150C  EF9C  F00A         	goto	l9874
  7628  001510                     u10160:
  7629  001510                     l9870:
  7630                           
  7631                           ; BSR set to: 1
  7632  001510  0E00               	movlw	0
  7633  001512  0100               	movlb	0	; () banked
  7634  001514  6F9C               	movwf	___fladd@b& (0+255),b
  7635  001516  0E00               	movlw	0
  7636  001518  6F9D               	movwf	(___fladd@b+1)& (0+255),b
  7637  00151A  0E00               	movlw	0
  7638  00151C  6F9E               	movwf	(___fladd@b+2)& (0+255),b
  7639  00151E  0E00               	movlw	0
  7640  001520  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  7641  001522  0101               	movlb	1	; () banked
  7642  001524  514F               	movf	___fladd@bexp& (0+255),w,b
  7643  001526  A4D8               	btfss	status,2,c
  7644  001528  EF98  F00A         	goto	u10171
  7645  00152C  EF9A  F00A         	goto	u10170
  7646  001530                     u10171:
  7647  001530  EF9C  F00A         	goto	l9874
  7648  001534                     u10170:
  7649  001534                     
  7650                           ; BSR set to: 1
  7651  001534  0E00               	movlw	0
  7652  001536  6F4D               	movwf	___fladd@signs& (0+255),b
  7653  001538                     l9874:
  7654                           
  7655                           ; BSR set to: 1
  7656  001538  A14F               	btfss	___fladd@bexp& (0+255),0,b
  7657  00153A  EFA1  F00A         	goto	u10181
  7658  00153E  EFA3  F00A         	goto	u10180
  7659  001542                     u10181:
  7660  001542  EFA7  F00A         	goto	l9878
  7661  001546                     u10180:
  7662  001546                     
  7663                           ; BSR set to: 1
  7664  001546  0100               	movlb	0	; () banked
  7665  001548  8F9E               	bsf	(___fladd@b+2)& (0+255),7,b
  7666  00154A  EFA9  F00A         	goto	l9880
  7667  00154E                     l9878:
  7668                           
  7669                           ; BSR set to: 1
  7670  00154E  0100               	movlb	0	; () banked
  7671  001550  9F9E               	bcf	(___fladd@b+2)& (0+255),7,b
  7672  001552                     l9880:
  7673                           
  7674                           ; BSR set to: 0
  7675  001552  0101               	movlb	1	; () banked
  7676  001554  90D8               	bcf	status,0,c
  7677  001556  314F               	rrcf	___fladd@bexp& (0+255),w,b
  7678  001558  0100               	movlb	0	; () banked
  7679  00155A  6F9F               	movwf	(___fladd@b+3)& (0+255),b
  7680  00155C                     
  7681                           ; BSR set to: 0
  7682  00155C  0101               	movlb	1	; () banked
  7683  00155E  AF4D               	btfss	___fladd@signs& (0+255),7,b
  7684  001560  EFB4  F00A         	goto	u10191
  7685  001564  EFB6  F00A         	goto	u10190
  7686  001568                     u10191:
  7687  001568  EFB8  F00A         	goto	l9886
  7688  00156C                     u10190:
  7689  00156C                     
  7690                           ; BSR set to: 1
  7691  00156C  0100               	movlb	0	; () banked
  7692  00156E  8F9F               	bsf	(___fladd@b+3)& (0+255),7,b
  7693  001570                     l9886:
  7694  001570  C09C  F09C         	movff	___fladd@b,?___fladd
  7695  001574  C09D  F09D         	movff	___fladd@b+1,?___fladd+1
  7696  001578  C09E  F09E         	movff	___fladd@b+2,?___fladd+2
  7697  00157C  C09F  F09F         	movff	___fladd@b+3,?___fladd+3
  7698  001580                     l2529:
  7699  001580  0012               	return		;funcret
  7700  001582                     __end_of___fladd:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function _PCA_Write_Reg *****************
  7704 ;; Defined at:
  7705 ;;		line 68 in file "ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  i2c_obj         2    0[BANK0 ] PTR const struct .
  7708 ;;		 -> i2c_obj(7), 
  7709 ;;  slave_addres    1    2[BANK0 ] unsigned char 
  7710 ;;  reg_address     1    3[BANK0 ] unsigned char 
  7711 ;;  data            1    4[BANK0 ] unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  ack             1   34[COMRAM] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7723 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;Total ram usage:        6 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 9
  7730 ;; This function calls:
  7731 ;;		_MSSP_I2C_Master_Send_Start
  7732 ;;		_MSSP_I2C_Master_Send_Stop
  7733 ;;		_MSSP_I2C_Master_Write_Blocking
  7734 ;; This function is called by:
  7735 ;;		_ServoDriver_Init
  7736 ;;		_Servo_SetAngle
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           	psect	text39
  7741  004A7E                     __ptext39:
  7742                           	callstack 0
  7743  004A7E                     _PCA_Write_Reg:
  7744                           	callstack 18
  7745  004A7E                     
  7746                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 68: static void PCA_Write_Reg(con
      +                          st mssp_i2c_st *i2c_obj,uint8 slave_address,uint8 reg_address,uint8 data);ECU/SERVO_MOTO
      +                          R_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 69: {;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_m
      +                          otor_i2c.c: 70:     uint8 ack=6;
  7747  004A7E  0E06               	movlw	6
  7748  004A80  6E23               	movwf	PCA_Write_Reg@ack^0,c
  7749  004A82                     
  7750                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 72:     MSSP_I2C_Master_Send_Star
      +                          t(i2c_obj);
  7751  004A82  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  7752  004A86  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  7753  004A8A  EC61  F026         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  7754  004A8E                     
  7755                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 74:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,slave_address,&ack);
  7756  004A8E  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  7757  004A92  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  7758  004A96  C062  F020         	movff	PCA_Write_Reg@slave_address,MSSP_I2C_Master_Write_Blocking@i2c_data
  7759  004A9A  0E23               	movlw	low PCA_Write_Reg@ack
  7760  004A9C  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  7761  004A9E  0E00               	movlw	high PCA_Write_Reg@ack
  7762  004AA0  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  7763  004AA2  ECD5  F023         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  7764  004AA6                     
  7765                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 76:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,reg_address,&ack);
  7766  004AA6  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  7767  004AAA  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  7768  004AAE  C063  F020         	movff	PCA_Write_Reg@reg_address,MSSP_I2C_Master_Write_Blocking@i2c_data
  7769  004AB2  0E23               	movlw	low PCA_Write_Reg@ack
  7770  004AB4  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  7771  004AB6  0E00               	movlw	high PCA_Write_Reg@ack
  7772  004AB8  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  7773  004ABA  ECD5  F023         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  7774  004ABE                     
  7775                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 78:     MSSP_I2C_Master_Write_Blo
      +                          cking(i2c_obj,data,&ack);
  7776  004ABE  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
  7777  004AC2  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
  7778  004AC6  C064  F020         	movff	PCA_Write_Reg@data,MSSP_I2C_Master_Write_Blocking@i2c_data
  7779  004ACA  0E23               	movlw	low PCA_Write_Reg@ack
  7780  004ACC  6E21               	movwf	MSSP_I2C_Master_Write_Blocking@_ack^0,c
  7781  004ACE  0E00               	movlw	high PCA_Write_Reg@ack
  7782  004AD0  6E22               	movwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,c
  7783  004AD2  ECD5  F023         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  7784  004AD6                     
  7785                           ;ECU/SERVO_MOTOR_CONTROL_BY_I2C/ecu_servo_motor_i2c.c: 80:     MSSP_I2C_Master_Send_Stop
      +                          (i2c_obj);
  7786  004AD6  C060  F01E         	movff	PCA_Write_Reg@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  7787  004ADA  C061  F01F         	movff	PCA_Write_Reg@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  7788  004ADE  EC45  F026         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  7789  004AE2  0012               	return		;funcret
  7790  004AE4                     __end_of_PCA_Write_Reg:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
  7794 ;; Defined at:
  7795 ;;		line 196 in file "MCAL/I2C/mcal_i2c.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  7798 ;;		 -> i2c_obj(7), 
  7799 ;;  i2c_data        1   31[COMRAM] unsigned char 
  7800 ;;  _ack            2   32[COMRAM] PTR unsigned char 
  7801 ;;		 -> PCA_Write_Reg@ack(1), 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  ERRORSTATUS     1    0        unsigned char 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      unsigned char 
  7806 ;; Registers used:
  7807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7813 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7817 ;;Total ram usage:        5 bytes
  7818 ;; Hardware stack levels used: 1
  7819 ;; Hardware stack levels required when called: 8
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_PCA_Write_Reg
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text40
  7828  0047AA                     __ptext40:
  7829                           	callstack 0
  7830  0047AA                     _MSSP_I2C_Master_Write_Blocking:
  7831                           	callstack 18
  7832  0047AA                     
  7833                           ;MCAL/I2C/mcal_i2c.c: 199:     if (((void*)0)==i2c_obj||((void*)0)==_ack)
  7834  0047AA  501E               	movf	MSSP_I2C_Master_Write_Blocking@i2c_obj^0,w,c
  7835  0047AC  101F               	iorwf	(MSSP_I2C_Master_Write_Blocking@i2c_obj+1)^0,w,c
  7836  0047AE  B4D8               	btfsc	status,2,c
  7837  0047B0  EFDC  F023         	goto	u10671
  7838  0047B4  EFDE  F023         	goto	u10670
  7839  0047B8                     u10671:
  7840  0047B8  EFE7  F023         	goto	l10160
  7841  0047BC                     u10670:
  7842  0047BC  5021               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
  7843  0047BE  1022               	iorwf	(MSSP_I2C_Master_Write_Blocking@_ack+1)^0,w,c
  7844  0047C0  A4D8               	btfss	status,2,c
  7845  0047C2  EFE5  F023         	goto	u10681
  7846  0047C6  EFE7  F023         	goto	u10680
  7847  0047CA                     u10681:
  7848  0047CA  EFE9  F023         	goto	l1038
  7849  0047CE                     u10680:
  7850  0047CE                     l10160:
  7851                           
  7852                           ;MCAL/I2C/mcal_i2c.c: 202:     }
  7853  0047CE  EF08  F024         	goto	l1047
  7854  0047D2                     l1038:
  7855                           
  7856                           ;MCAL/I2C/mcal_i2c.c: 204:     {;MCAL/I2C/mcal_i2c.c: 206:         SSPBUF=i2c_data;
  7857  0047D2  C020  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@i2c_data,4041	;volatile
  7858  0047D6                     l1042:
  7859  0047D6  B0C7               	btfsc	199,0,c	;volatile
  7860  0047D8  EFF0  F023         	goto	u10691
  7861  0047DC  EFF2  F023         	goto	u10690
  7862  0047E0                     u10691:
  7863  0047E0  EFEB  F023         	goto	l1042
  7864  0047E4                     u10690:
  7865  0047E4                     
  7866                           ;MCAL/I2C/mcal_i2c.c: 210:         PIR1bits.SSPIF = 0;
  7867  0047E4  969E               	bcf	158,3,c	;volatile
  7868                           
  7869                           ;MCAL/I2C/mcal_i2c.c: 212:         if(0 == SSPCON2bits.ACKSTAT)
  7870  0047E6  BCC5               	btfsc	197,6,c	;volatile
  7871  0047E8  EFF8  F023         	goto	u10701
  7872  0047EC  EFFA  F023         	goto	u10700
  7873  0047F0                     u10701:
  7874  0047F0  EF02  F024         	goto	l10164
  7875  0047F4                     u10700:
  7876  0047F4                     
  7877                           ;MCAL/I2C/mcal_i2c.c: 213:         {;MCAL/I2C/mcal_i2c.c: 214:             *_ack = 0;
  7878  0047F4  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
  7879  0047F8  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
  7880  0047FC  0E00               	movlw	0
  7881  0047FE  6EDF               	movwf	indf2,c
  7882                           
  7883                           ;MCAL/I2C/mcal_i2c.c: 215:         }
  7884  004800  EF08  F024         	goto	l1047
  7885  004804                     l10164:
  7886                           
  7887                           ;MCAL/I2C/mcal_i2c.c: 217:         {;MCAL/I2C/mcal_i2c.c: 218:             *_ack = 1;
  7888  004804  C021  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@_ack,fsr2l
  7889  004808  C022  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@_ack+1,fsr2h
  7890  00480C  0E01               	movlw	1
  7891  00480E  6EDF               	movwf	indf2,c
  7892  004810                     l1047:
  7893  004810  0012               	return		;funcret
  7894  004812                     __end_of_MSSP_I2C_Master_Write_Blocking:
  7895                           	callstack 0
  7896                           
  7897 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
  7898 ;; Defined at:
  7899 ;;		line 166 in file "MCAL/I2C/mcal_i2c.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  7902 ;;		 -> i2c_obj(7), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  ERRORSTATUS     1    0        unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      unsigned char 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;Total ram usage:        2 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 8
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_PCA_Write_Reg
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text41
  7929  004C8A                     __ptext41:
  7930                           	callstack 0
  7931  004C8A                     _MSSP_I2C_Master_Send_Stop:
  7932                           	callstack 18
  7933  004C8A                     
  7934                           ;MCAL/I2C/mcal_i2c.c: 169:     if (((void*)0)==i2c_obj)
  7935  004C8A  501E               	movf	MSSP_I2C_Master_Send_Stop@i2c_obj^0,w,c
  7936  004C8C  101F               	iorwf	(MSSP_I2C_Master_Send_Stop@i2c_obj+1)^0,w,c
  7937  004C8E  A4D8               	btfss	status,2,c
  7938  004C90  EF4C  F026         	goto	u10711
  7939  004C94  EF4E  F026         	goto	u10710
  7940  004C98                     u10711:
  7941  004C98  EF50  F026         	goto	l1028
  7942  004C9C                     u10710:
  7943  004C9C                     l10172:
  7944                           
  7945                           ;MCAL/I2C/mcal_i2c.c: 172:     }
  7946  004C9C  EF60  F026         	goto	l1035
  7947  004CA0                     l1028:
  7948                           
  7949                           ;MCAL/I2C/mcal_i2c.c: 174:     {;MCAL/I2C/mcal_i2c.c: 176:         SSPCON2bits.PEN = 1;
  7950  004CA0  84C5               	bsf	197,2,c	;volatile
  7951  004CA2                     l1030:
  7952  004CA2  B4C5               	btfsc	197,2,c	;volatile
  7953  004CA4  EF56  F026         	goto	u10721
  7954  004CA8  EF58  F026         	goto	u10720
  7955  004CAC                     u10721:
  7956  004CAC  EF51  F026         	goto	l1030
  7957  004CB0                     u10720:
  7958  004CB0                     
  7959                           ;MCAL/I2C/mcal_i2c.c: 180:         PIR1bits.SSPIF = 0;
  7960  004CB0  969E               	bcf	158,3,c	;volatile
  7961                           
  7962                           ;MCAL/I2C/mcal_i2c.c: 182:         if(1 == SSPSTATbits.P)
  7963  004CB2  A8C7               	btfss	199,4,c	;volatile
  7964  004CB4  EF5E  F026         	goto	u10731
  7965  004CB8  EF60  F026         	goto	u10730
  7966  004CBC                     u10731:
  7967  004CBC  EF4E  F026         	goto	l10172
  7968  004CC0                     u10730:
  7969  004CC0                     l1035:
  7970  004CC0  0012               	return		;funcret
  7971  004CC2                     __end_of_MSSP_I2C_Master_Send_Stop:
  7972                           	callstack 0
  7973                           
  7974 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
  7975 ;; Defined at:
  7976 ;;		line 116 in file "MCAL/I2C/mcal_i2c.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  i2c_obj         2   29[COMRAM] PTR const struct .
  7979 ;;		 -> i2c_obj(7), 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  ERRORSTATUS     1    0        unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      unsigned char 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;Total ram usage:        2 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; Hardware stack levels required when called: 8
  7998 ;; This function calls:
  7999 ;;		Nothing
  8000 ;; This function is called by:
  8001 ;;		_PCA_Write_Reg
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text42
  8006  004CC2                     __ptext42:
  8007                           	callstack 0
  8008  004CC2                     _MSSP_I2C_Master_Send_Start:
  8009                           	callstack 18
  8010  004CC2                     
  8011                           ;MCAL/I2C/mcal_i2c.c: 119:     if (((void*)0)==i2c_obj)
  8012  004CC2  501E               	movf	MSSP_I2C_Master_Send_Start@i2c_obj^0,w,c
  8013  004CC4  101F               	iorwf	(MSSP_I2C_Master_Send_Start@i2c_obj+1)^0,w,c
  8014  004CC6  A4D8               	btfss	status,2,c
  8015  004CC8  EF68  F026         	goto	u10641
  8016  004CCC  EF6A  F026         	goto	u10640
  8017  004CD0                     u10641:
  8018  004CD0  EF6C  F026         	goto	l1010
  8019  004CD4                     u10640:
  8020  004CD4                     l10146:
  8021                           
  8022                           ;MCAL/I2C/mcal_i2c.c: 122:     }
  8023  004CD4  EF7C  F026         	goto	l1017
  8024  004CD8                     l1010:
  8025                           
  8026                           ;MCAL/I2C/mcal_i2c.c: 124:     {;MCAL/I2C/mcal_i2c.c: 126:         SSPCON2bits.SEN = 1;
  8027  004CD8  80C5               	bsf	197,0,c	;volatile
  8028  004CDA                     l1012:
  8029  004CDA  B0C5               	btfsc	197,0,c	;volatile
  8030  004CDC  EF72  F026         	goto	u10651
  8031  004CE0  EF74  F026         	goto	u10650
  8032  004CE4                     u10651:
  8033  004CE4  EF6D  F026         	goto	l1012
  8034  004CE8                     u10650:
  8035  004CE8                     
  8036                           ;MCAL/I2C/mcal_i2c.c: 130:         PIR1bits.SSPIF = 0;
  8037  004CE8  969E               	bcf	158,3,c	;volatile
  8038                           
  8039                           ;MCAL/I2C/mcal_i2c.c: 132:         if(1 == SSPSTATbits.S)
  8040  004CEA  A6C7               	btfss	199,3,c	;volatile
  8041  004CEC  EF7A  F026         	goto	u10661
  8042  004CF0  EF7C  F026         	goto	u10660
  8043  004CF4                     u10661:
  8044  004CF4  EF6A  F026         	goto	l10146
  8045  004CF8                     u10660:
  8046  004CF8                     l1017:
  8047  004CF8  0012               	return		;funcret
  8048  004CFA                     __end_of_MSSP_I2C_Master_Send_Start:
  8049                           	callstack 0
  8050                           
  8051 ;; *************** function _Robot_Steer_Stop *****************
  8052 ;; Defined at:
  8053 ;;		line 159 in file "Robot/Navigation/robot_navigation.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;		None
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  ret_val         1    0        unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      unsigned char 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;Total ram usage:        0 bytes
  8072 ;; Hardware stack levels used: 1
  8073 ;; Hardware stack levels required when called: 10
  8074 ;; This function calls:
  8075 ;;		_CCP_PWM_Set_Duty
  8076 ;; This function is called by:
  8077 ;;		_Robot_Move_Forward
  8078 ;;		_Robot_Move_Backward
  8079 ;;		_Robot_Steer_Right_Forward
  8080 ;;		_Robot_Steer_Left_Forward
  8081 ;;		_main
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text43
  8086  004EDA                     __ptext43:
  8087                           	callstack 0
  8088  004EDA                     _Robot_Steer_Stop:
  8089                           	callstack 20
  8090  004EDA                     
  8091                           ;Robot/Navigation/robot_navigation.c: 162:             CCP_PWM_Set_Duty(&CCP1_Obj , 0);
  8092  004EDA  0E41               	movlw	low _CCP1_Obj
  8093  004EDC  0101               	movlb	1	; () banked
  8094  004EDE  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8095  004EE0  0E01               	movlw	high _CCP1_Obj
  8096  004EE2  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8097  004EE4  0E00               	movlw	0
  8098  004EE6  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8099  004EE8  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  8100  004EEC                     
  8101                           ;Robot/Navigation/robot_navigation.c: 163:             CCP_PWM_Set_Duty(&CCP2_Obj , 0);
  8102  004EEC  0E35               	movlw	low _CCP2_Obj
  8103  004EEE  0101               	movlb	1	; () banked
  8104  004EF0  6F59               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  8105  004EF2  0E01               	movlw	high _CCP2_Obj
  8106  004EF4  6F5A               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  8107  004EF6  0E00               	movlw	0
  8108  004EF8  6F5B               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  8109  004EFA  ECE0  F014         	call	_CCP_PWM_Set_Duty	;wreg free
  8110  004EFE  0012               	return		;funcret
  8111  004F00                     __end_of_Robot_Steer_Stop:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _CCP_PWM_Set_Duty *****************
  8115 ;; Defined at:
  8116 ;;		line 176 in file "MCAL/CCP/hal_ccp.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  _ccp_obj        2   12[BANK1 ] PTR const struct .
  8119 ;;		 -> CCP2_Obj(12), CCP1_Obj(12), 
  8120 ;;  _duty           1   14[BANK1 ] const unsigned char 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  l_duty_temp     2   21[BANK1 ] unsigned short 
  8123 ;;  ret             1    0        unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      unsigned char 
  8126 ;; Registers used:
  8127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8133 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;Total ram usage:       11 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; Hardware stack levels required when called: 9
  8140 ;; This function calls:
  8141 ;;		___fldiv
  8142 ;;		___flmul
  8143 ;;		___fltol
  8144 ;;		___xxtofl
  8145 ;; This function is called by:
  8146 ;;		_Robot_Nav_Init
  8147 ;;		_Robot_Move_Forward
  8148 ;;		_Robot_Move_Backward
  8149 ;;		_Robot_Steer_Right_Forward
  8150 ;;		_Robot_Steer_Left_Forward
  8151 ;;		_Robot_Steer_Stop
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text44
  8156  0029C0                     __ptext44:
  8157                           	callstack 0
  8158  0029C0                     _CCP_PWM_Set_Duty:
  8159                           	callstack 19
  8160  0029C0                     
  8161                           ;MCAL/CCP/hal_ccp.c: 178:     uint16 l_duty_temp = 0;
  8162  0029C0  0E00               	movlw	0
  8163  0029C2  0101               	movlb	1	; () banked
  8164  0029C4  6F63               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)& (0+255),b
  8165  0029C6  0E00               	movlw	0
  8166  0029C8  6F62               	movwf	CCP_PWM_Set_Duty@l_duty_temp& (0+255),b
  8167  0029CA                     
  8168                           ; BSR set to: 1
  8169                           ;MCAL/CCP/hal_ccp.c: 180:     if(((void*)0) == _ccp_obj){
  8170  0029CA  5159               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  8171  0029CC  115A               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  8172  0029CE  A4D8               	btfss	status,2,c
  8173  0029D0  EFEC  F014         	goto	u11531
  8174  0029D4  EFEE  F014         	goto	u11530
  8175  0029D8                     u11531:
  8176  0029D8  EFF0  F014         	goto	l10738
  8177  0029DC                     u11530:
  8178  0029DC                     
  8179                           ; BSR set to: 1
  8180                           ;MCAL/CCP/hal_ccp.c: 182:     }
  8181  0029DC  EFA3  F015         	goto	l534
  8182  0029E0                     l10738:
  8183                           
  8184                           ; BSR set to: 1
  8185                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
  8186  0029E0  0E00               	movlw	0
  8187  0029E2  0100               	movlb	0	; () banked
  8188  0029E4  6F6E               	movwf	___fldiv@a& (0+255),b
  8189  0029E6  0E00               	movlw	0
  8190  0029E8  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  8191  0029EA  0EC8               	movlw	200
  8192  0029EC  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  8193  0029EE  0E42               	movlw	66
  8194  0029F0  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  8195  0029F2  0101               	movlb	1	; () banked
  8196  0029F4  515B               	movf	CCP_PWM_Set_Duty@_duty& (0+255),w,b
  8197  0029F6  6E1E               	movwf	___xxtofl@val^0,c
  8198  0029F8  6A1F               	clrf	(___xxtofl@val+1)^0,c
  8199  0029FA  6A20               	clrf	(___xxtofl@val+2)^0,c
  8200  0029FC  6A21               	clrf	(___xxtofl@val+3)^0,c
  8201  0029FE  0E01               	movlw	1
  8202  002A00  EC04  F014         	call	___xxtofl
  8203  002A04  C01E  F06A         	movff	?___xxtofl,___fldiv@b
  8204  002A08  C01F  F06B         	movff	?___xxtofl+1,___fldiv@b+1
  8205  002A0C  C020  F06C         	movff	?___xxtofl+2,___fldiv@b+2
  8206  002A10  C021  F06D         	movff	?___xxtofl+3,___fldiv@b+3
  8207  002A14  ECB3  F00E         	call	___fldiv	;wreg free
  8208  002A18  C06A  F087         	movff	?___fldiv,___flmul@a
  8209  002A1C  C06B  F088         	movff	?___fldiv+1,___flmul@a+1
  8210  002A20  C06C  F089         	movff	?___fldiv+2,___flmul@a+2
  8211  002A24  C06D  F08A         	movff	?___fldiv+3,___flmul@a+3
  8212  002A28  50CB               	movf	203,w,c	;volatile
  8213  002A2A  0101               	movlb	1	; () banked
  8214  002A2C  6F5C               	movwf	??_CCP_PWM_Set_Duty& (0+255),b
  8215  002A2E  6B5D               	clrf	(??_CCP_PWM_Set_Duty+1)& (0+255),b
  8216  002A30  0E01               	movlw	1
  8217  002A32  275C               	addwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8218  002A34  0E00               	movlw	0
  8219  002A36  235D               	addwfc	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8220  002A38  C15C  F01E         	movff	??_CCP_PWM_Set_Duty,___xxtofl@val
  8221  002A3C  C15D  F01F         	movff	??_CCP_PWM_Set_Duty+1,___xxtofl@val+1
  8222  002A40  0E00               	movlw	0
  8223  002A42  BE1F               	btfsc	(___xxtofl@val+1)^0,7,c
  8224  002A44  0EFF               	movlw	-1
  8225  002A46  6E20               	movwf	(___xxtofl@val+2)^0,c
  8226  002A48  6E21               	movwf	(___xxtofl@val+3)^0,c
  8227  002A4A  0E01               	movlw	1
  8228  002A4C  EC04  F014         	call	___xxtofl
  8229  002A50  C01E  F083         	movff	?___xxtofl,___flmul@b
  8230  002A54  C01F  F084         	movff	?___xxtofl+1,___flmul@b+1
  8231  002A58  C020  F085         	movff	?___xxtofl+2,___flmul@b+2
  8232  002A5C  C021  F086         	movff	?___xxtofl+3,___flmul@b+3
  8233  002A60  ECC1  F00A         	call	___flmul	;wreg free
  8234  002A64  C083  F15E         	movff	?___flmul,_CCP_PWM_Set_Duty$5750
  8235  002A68  C084  F15F         	movff	?___flmul+1,_CCP_PWM_Set_Duty$5750+1
  8236  002A6C  C085  F160         	movff	?___flmul+2,_CCP_PWM_Set_Duty$5750+2
  8237  002A70  C086  F161         	movff	?___flmul+3,_CCP_PWM_Set_Duty$5750+3
  8238                           
  8239                           ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)((PR2+1)*(_duty/100.0)*4);
  8240  002A74  0E00               	movlw	0
  8241  002A76  0100               	movlb	0	; () banked
  8242  002A78  6F87               	movwf	___flmul@a& (0+255),b
  8243  002A7A  0E00               	movlw	0
  8244  002A7C  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8245  002A7E  0E80               	movlw	128
  8246  002A80  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8247  002A82  0E40               	movlw	64
  8248  002A84  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8249  002A86  C15E  F083         	movff	_CCP_PWM_Set_Duty$5750,___flmul@b
  8250  002A8A  C15F  F084         	movff	_CCP_PWM_Set_Duty$5750+1,___flmul@b+1
  8251  002A8E  C160  F085         	movff	_CCP_PWM_Set_Duty$5750+2,___flmul@b+2
  8252  002A92  C161  F086         	movff	_CCP_PWM_Set_Duty$5750+3,___flmul@b+3
  8253  002A96  ECC1  F00A         	call	___flmul	;wreg free
  8254  002A9A  C083  F151         	movff	?___flmul,___fltol@f1
  8255  002A9E  C084  F152         	movff	?___flmul+1,___fltol@f1+1
  8256  002AA2  C085  F153         	movff	?___flmul+2,___fltol@f1+2
  8257  002AA6  C086  F154         	movff	?___flmul+3,___fltol@f1+3
  8258  002AAA  EC12  F01A         	call	___fltol	;wreg free
  8259  002AAE  C151  F162         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
  8260  002AB2  C152  F163         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
  8261  002AB6                     
  8262                           ;MCAL/CCP/hal_ccp.c: 186:         if(CCP1_INST == _ccp_obj->ccp_inst){
  8263  002AB6  C159  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  8264  002ABA  C15A  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  8265  002ABE  50DF               	movf	indf2,w,c
  8266  002AC0  A4D8               	btfss	status,2,c
  8267  002AC2  EF65  F015         	goto	u11541
  8268  002AC6  EF67  F015         	goto	u11540
  8269  002ACA                     u11541:
  8270  002ACA  EF80  F015         	goto	l10744
  8271  002ACE                     u11540:
  8272  002ACE                     
  8273                           ;MCAL/CCP/hal_ccp.c: 187:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
  8274  002ACE  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8275  002AD2  0E03               	movlw	3
  8276  002AD4  0101               	movlb	1	; () banked
  8277  002AD6  175C               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8278  002AD8  3B5C               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8279  002ADA  50BD               	movf	189,w,c	;volatile
  8280  002ADC  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8281  002ADE  0BCF               	andlw	-49
  8282  002AE0  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8283  002AE2  6EBD               	movwf	189,c	;volatile
  8284                           
  8285                           ;MCAL/CCP/hal_ccp.c: 188:             CCPR1L = (uint8)(l_duty_temp >> 2);
  8286  002AE4  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8287  002AE8  C163  F15D         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  8288  002AEC  90D8               	bcf	status,0,c
  8289  002AEE  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8290  002AF0  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8291  002AF2  90D8               	bcf	status,0,c
  8292  002AF4  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8293  002AF6  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8294  002AF8  515C               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8295  002AFA  6EBE               	movwf	190,c	;volatile
  8296                           
  8297                           ;MCAL/CCP/hal_ccp.c: 189:         }
  8298  002AFC  EFA3  F015         	goto	l10748
  8299  002B00                     l10744:
  8300  002B00  C159  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  8301  002B04  C15A  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  8302  002B08  04DE               	decf	postinc2,w,c
  8303  002B0A  A4D8               	btfss	status,2,c
  8304  002B0C  EF8A  F015         	goto	u11551
  8305  002B10  EF8C  F015         	goto	u11550
  8306  002B14                     u11551:
  8307  002B14  EFA3  F015         	goto	l10748
  8308  002B18                     u11550:
  8309  002B18                     
  8310                           ;MCAL/CCP/hal_ccp.c: 191:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003);
  8311  002B18  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8312  002B1C  0E03               	movlw	3
  8313  002B1E  0101               	movlb	1	; () banked
  8314  002B20  175C               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8315  002B22  3B5C               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8316  002B24  50BA               	movf	186,w,c	;volatile
  8317  002B26  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8318  002B28  0BCF               	andlw	-49
  8319  002B2A  195C               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8320  002B2C  6EBA               	movwf	186,c	;volatile
  8321                           
  8322                           ;MCAL/CCP/hal_ccp.c: 192:             CCPR2L = (uint8)(l_duty_temp >> 2);
  8323  002B2E  C162  F15C         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8324  002B32  C163  F15D         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  8325  002B36  90D8               	bcf	status,0,c
  8326  002B38  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8327  002B3A  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8328  002B3C  90D8               	bcf	status,0,c
  8329  002B3E  335D               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8330  002B40  335C               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8331  002B42  515C               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8332  002B44  6EBB               	movwf	187,c	;volatile
  8333  002B46                     l10748:
  8334  002B46                     l534:
  8335  002B46  0012               	return		;funcret
  8336  002B48                     __end_of_CCP_PWM_Set_Duty:
  8337                           	callstack 0
  8338                           
  8339 ;; *************** function ___fltol *****************
  8340 ;; Defined at:
  8341 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  f1              4    4[BANK1 ] unsigned char 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  exp1            1   34[COMRAM] unsigned char 
  8346 ;;  sign1           1   33[COMRAM] unsigned char 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  4    4[BANK1 ] long 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8356 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8358 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Totals:         2       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;Total ram usage:       10 bytes
  8361 ;; Hardware stack levels used: 1
  8362 ;; Hardware stack levels required when called: 8
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_Servo_SetAngle
  8367 ;;		_CCP_PWM_Set_Duty
  8368 ;;		_async_config_baud_rate_gen
  8369 ;;		_I2C_Master_Mode_Clock_Configurations
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text45
  8374  003424                     __ptext45:
  8375                           	callstack 0
  8376  003424                     ___fltol:
  8377                           	callstack 17
  8378  003424  0101               	movlb	1	; () banked
  8379  003426  3553               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8380  003428  3554               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8381  00342A  6E23               	movwf	___fltol@exp1^0,c
  8382  00342C  5023               	movf	___fltol@exp1^0,w,c
  8383  00342E  A4D8               	btfss	status,2,c
  8384  003430  EF1C  F01A         	goto	u10431
  8385  003434  EF1E  F01A         	goto	u10430
  8386  003438                     u10431:
  8387  003438  EF28  F01A         	goto	l10034
  8388  00343C                     u10430:
  8389  00343C                     l10030:
  8390                           
  8391                           ; BSR set to: 1
  8392  00343C  0E00               	movlw	0
  8393  00343E  6F51               	movwf	?___fltol& (0+255),b
  8394  003440  0E00               	movlw	0
  8395  003442  6F52               	movwf	(?___fltol+1)& (0+255),b
  8396  003444  0E00               	movlw	0
  8397  003446  6F53               	movwf	(?___fltol+2)& (0+255),b
  8398  003448  0E00               	movlw	0
  8399  00344A  6F54               	movwf	(?___fltol+3)& (0+255),b
  8400  00344C  EF95  F01A         	goto	l2289
  8401  003450                     l10034:
  8402                           
  8403                           ; BSR set to: 1
  8404  003450  C151  F155         	movff	___fltol@f1,??___fltol
  8405  003454  C152  F156         	movff	___fltol@f1+1,??___fltol+1
  8406  003458  C153  F157         	movff	___fltol@f1+2,??___fltol+2
  8407  00345C  C154  F158         	movff	___fltol@f1+3,??___fltol+3
  8408  003460  0E20               	movlw	32
  8409  003462  EF38  F01A         	goto	u10440
  8410  003466                     u10445:
  8411  003466  90D8               	bcf	status,0,c
  8412  003468  3358               	rrcf	(??___fltol+3)& (0+255),f,b
  8413  00346A  3357               	rrcf	(??___fltol+2)& (0+255),f,b
  8414  00346C  3356               	rrcf	(??___fltol+1)& (0+255),f,b
  8415  00346E  3355               	rrcf	??___fltol& (0+255),f,b
  8416  003470                     u10440:
  8417  003470  2EE8               	decfsz	wreg,f,c
  8418  003472  EF33  F01A         	goto	u10445
  8419  003476  5155               	movf	??___fltol& (0+255),w,b
  8420  003478  6E22               	movwf	___fltol@sign1^0,c
  8421  00347A                     
  8422                           ; BSR set to: 1
  8423  00347A  8F53               	bsf	(___fltol@f1+2)& (0+255),7,b
  8424  00347C                     
  8425                           ; BSR set to: 1
  8426  00347C  0EFF               	movlw	255
  8427  00347E  1751               	andwf	___fltol@f1& (0+255),f,b
  8428  003480  0EFF               	movlw	255
  8429  003482  1752               	andwf	(___fltol@f1+1)& (0+255),f,b
  8430  003484  0EFF               	movlw	255
  8431  003486  1753               	andwf	(___fltol@f1+2)& (0+255),f,b
  8432  003488  0E00               	movlw	0
  8433  00348A  1754               	andwf	(___fltol@f1+3)& (0+255),f,b
  8434  00348C                     
  8435                           ; BSR set to: 1
  8436  00348C  0E96               	movlw	150
  8437  00348E  5E23               	subwf	___fltol@exp1^0,f,c
  8438  003490                     
  8439                           ; BSR set to: 1
  8440  003490  BE23               	btfsc	___fltol@exp1^0,7,c
  8441  003492  EF4F  F01A         	goto	u10450
  8442  003496  EF4D  F01A         	goto	u10451
  8443  00349A                     u10451:
  8444  00349A  EF65  F01A         	goto	l10054
  8445  00349E                     u10450:
  8446  00349E                     
  8447                           ; BSR set to: 1
  8448  00349E  5023               	movf	___fltol@exp1^0,w,c
  8449  0034A0  0A80               	xorlw	128
  8450  0034A2  0F97               	addlw	151
  8451  0034A4  B0D8               	btfsc	status,0,c
  8452  0034A6  EF57  F01A         	goto	u10461
  8453  0034AA  EF59  F01A         	goto	u10460
  8454  0034AE                     u10461:
  8455  0034AE  EF5B  F01A         	goto	l10050
  8456  0034B2                     u10460:
  8457  0034B2  EF1E  F01A         	goto	l10030
  8458  0034B6                     l10050:
  8459                           
  8460                           ; BSR set to: 1
  8461  0034B6  90D8               	bcf	status,0,c
  8462  0034B8  3354               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8463  0034BA  3353               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8464  0034BC  3352               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8465  0034BE  3351               	rrcf	___fltol@f1& (0+255),f,b
  8466  0034C0                     
  8467                           ; BSR set to: 1
  8468  0034C0  3E23               	incfsz	___fltol@exp1^0,f,c
  8469  0034C2  EF5B  F01A         	goto	l10050
  8470  0034C6  EF7D  F01A         	goto	l10064
  8471  0034CA                     l10054:
  8472                           
  8473                           ; BSR set to: 1
  8474  0034CA  0E1F               	movlw	31
  8475  0034CC  6423               	cpfsgt	___fltol@exp1^0,c
  8476  0034CE  EF6B  F01A         	goto	u10471
  8477  0034D2  EF6D  F01A         	goto	u10470
  8478  0034D6                     u10471:
  8479  0034D6  EF75  F01A         	goto	l10062
  8480  0034DA                     u10470:
  8481  0034DA  EF1E  F01A         	goto	l10030
  8482  0034DE                     l10060:
  8483                           
  8484                           ; BSR set to: 1
  8485  0034DE  90D8               	bcf	status,0,c
  8486  0034E0  3751               	rlcf	___fltol@f1& (0+255),f,b
  8487  0034E2  3752               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8488  0034E4  3753               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8489  0034E6  3754               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8490  0034E8  0623               	decf	___fltol@exp1^0,f,c
  8491  0034EA                     l10062:
  8492                           
  8493                           ; BSR set to: 1
  8494  0034EA  5023               	movf	___fltol@exp1^0,w,c
  8495  0034EC  A4D8               	btfss	status,2,c
  8496  0034EE  EF7B  F01A         	goto	u10481
  8497  0034F2  EF7D  F01A         	goto	u10480
  8498  0034F6                     u10481:
  8499  0034F6  EF6F  F01A         	goto	l10060
  8500  0034FA                     u10480:
  8501  0034FA                     l10064:
  8502                           
  8503                           ; BSR set to: 1
  8504  0034FA  5022               	movf	___fltol@sign1^0,w,c
  8505  0034FC  B4D8               	btfsc	status,2,c
  8506  0034FE  EF83  F01A         	goto	u10491
  8507  003502  EF85  F01A         	goto	u10490
  8508  003506                     u10491:
  8509  003506  EF8D  F01A         	goto	l10068
  8510  00350A                     u10490:
  8511  00350A                     
  8512                           ; BSR set to: 1
  8513  00350A  1F54               	comf	(___fltol@f1+3)& (0+255),f,b
  8514  00350C  1F53               	comf	(___fltol@f1+2)& (0+255),f,b
  8515  00350E  1F52               	comf	(___fltol@f1+1)& (0+255),f,b
  8516  003510  6D51               	negf	___fltol@f1& (0+255),b
  8517  003512  0E00               	movlw	0
  8518  003514  2352               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8519  003516  2353               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8520  003518  2354               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8521  00351A                     l10068:
  8522                           
  8523                           ; BSR set to: 1
  8524  00351A  C151  F151         	movff	___fltol@f1,?___fltol
  8525  00351E  C152  F152         	movff	___fltol@f1+1,?___fltol+1
  8526  003522  C153  F153         	movff	___fltol@f1+2,?___fltol+2
  8527  003526  C154  F154         	movff	___fltol@f1+3,?___fltol+3
  8528  00352A                     l2289:
  8529                           
  8530                           ; BSR set to: 1
  8531  00352A  0012               	return		;funcret
  8532  00352C                     __end_of___fltol:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function ___flmul *****************
  8536 ;; Defined at:
  8537 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  b               4   35[BANK0 ] long 
  8540 ;;  a               4   39[BANK0 ] long 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  prod            4   54[BANK0 ] struct .
  8543 ;;  grs             4   49[BANK0 ] unsigned long 
  8544 ;;  temp            2   58[BANK0 ] struct .
  8545 ;;  bexp            1   53[BANK0 ] unsigned char 
  8546 ;;  aexp            1   48[BANK0 ] unsigned char 
  8547 ;;  sign            1   47[BANK0 ] unsigned char 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  4   35[BANK0 ] unsigned char 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0, prodl, prodh
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8557 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;Total ram usage:       25 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; Hardware stack levels required when called: 8
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_Servo_SetAngle
  8568 ;;		_CCP_PWM_Set_Duty
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text46
  8573  001582                     __ptext46:
  8574                           	callstack 0
  8575  001582                     ___flmul:
  8576                           	callstack 19
  8577  001582  0100               	movlb	0	; () banked
  8578  001584  5186               	movf	(___flmul@b+3)& (0+255),w,b
  8579  001586  0B80               	andlw	128
  8580  001588  6F8F               	movwf	___flmul@sign& (0+255),b
  8581  00158A  5186               	movf	(___flmul@b+3)& (0+255),w,b
  8582  00158C  2586               	addwf	(___flmul@b+3)& (0+255),w,b
  8583  00158E  6F95               	movwf	___flmul@bexp& (0+255),b
  8584  001590                     
  8585                           ; BSR set to: 0
  8586  001590  AF85               	btfss	(___flmul@b+2)& (0+255),7,b
  8587  001592  EFCD  F00A         	goto	u11101
  8588  001596  EFCF  F00A         	goto	u11100
  8589  00159A                     u11101:
  8590  00159A  EFD0  F00A         	goto	l10492
  8591  00159E                     u11100:
  8592  00159E                     
  8593                           ; BSR set to: 0
  8594  00159E  8195               	bsf	___flmul@bexp& (0+255),0,b
  8595  0015A0                     l10492:
  8596                           
  8597                           ; BSR set to: 0
  8598  0015A0  5195               	movf	___flmul@bexp& (0+255),w,b
  8599  0015A2  B4D8               	btfsc	status,2,c
  8600  0015A4  EFD6  F00A         	goto	u11111
  8601  0015A8  EFD8  F00A         	goto	u11110
  8602  0015AC                     u11111:
  8603  0015AC  EFEB  F00A         	goto	l10500
  8604  0015B0                     u11110:
  8605  0015B0                     
  8606                           ; BSR set to: 0
  8607  0015B0  2995               	incf	___flmul@bexp& (0+255),w,b
  8608  0015B2  A4D8               	btfss	status,2,c
  8609  0015B4  EFDE  F00A         	goto	u11121
  8610  0015B8  EFE0  F00A         	goto	u11120
  8611  0015BC                     u11121:
  8612  0015BC  EFE8  F00A         	goto	l10498
  8613  0015C0                     u11120:
  8614  0015C0                     
  8615                           ; BSR set to: 0
  8616  0015C0  0E00               	movlw	0
  8617  0015C2  6F83               	movwf	___flmul@b& (0+255),b
  8618  0015C4  0E00               	movlw	0
  8619  0015C6  6F84               	movwf	(___flmul@b+1)& (0+255),b
  8620  0015C8  0E00               	movlw	0
  8621  0015CA  6F85               	movwf	(___flmul@b+2)& (0+255),b
  8622  0015CC  0E00               	movlw	0
  8623  0015CE  6F86               	movwf	(___flmul@b+3)& (0+255),b
  8624  0015D0                     l10498:
  8625                           
  8626                           ; BSR set to: 0
  8627  0015D0  8F85               	bsf	(___flmul@b+2)& (0+255),7,b
  8628  0015D2  EFF3  F00A         	goto	l10502
  8629  0015D6                     l10500:
  8630                           
  8631                           ; BSR set to: 0
  8632  0015D6  0E00               	movlw	0
  8633  0015D8  6F83               	movwf	___flmul@b& (0+255),b
  8634  0015DA  0E00               	movlw	0
  8635  0015DC  6F84               	movwf	(___flmul@b+1)& (0+255),b
  8636  0015DE  0E00               	movlw	0
  8637  0015E0  6F85               	movwf	(___flmul@b+2)& (0+255),b
  8638  0015E2  0E00               	movlw	0
  8639  0015E4  6F86               	movwf	(___flmul@b+3)& (0+255),b
  8640  0015E6                     l10502:
  8641                           
  8642                           ; BSR set to: 0
  8643  0015E6  518A               	movf	(___flmul@a+3)& (0+255),w,b
  8644  0015E8  0B80               	andlw	128
  8645  0015EA  1B8F               	xorwf	___flmul@sign& (0+255),f,b
  8646  0015EC                     
  8647                           ; BSR set to: 0
  8648  0015EC  518A               	movf	(___flmul@a+3)& (0+255),w,b
  8649  0015EE  258A               	addwf	(___flmul@a+3)& (0+255),w,b
  8650  0015F0  6F90               	movwf	___flmul@aexp& (0+255),b
  8651  0015F2                     
  8652                           ; BSR set to: 0
  8653  0015F2  AF89               	btfss	(___flmul@a+2)& (0+255),7,b
  8654  0015F4  EFFE  F00A         	goto	u11131
  8655  0015F8  EF00  F00B         	goto	u11130
  8656  0015FC                     u11131:
  8657  0015FC  EF01  F00B         	goto	l10510
  8658  001600                     u11130:
  8659  001600                     
  8660                           ; BSR set to: 0
  8661  001600  8190               	bsf	___flmul@aexp& (0+255),0,b
  8662  001602                     l10510:
  8663                           
  8664                           ; BSR set to: 0
  8665  001602  5190               	movf	___flmul@aexp& (0+255),w,b
  8666  001604  B4D8               	btfsc	status,2,c
  8667  001606  EF07  F00B         	goto	u11141
  8668  00160A  EF09  F00B         	goto	u11140
  8669  00160E                     u11141:
  8670  00160E  EF1C  F00B         	goto	l10518
  8671  001612                     u11140:
  8672  001612                     
  8673                           ; BSR set to: 0
  8674  001612  2990               	incf	___flmul@aexp& (0+255),w,b
  8675  001614  A4D8               	btfss	status,2,c
  8676  001616  EF0F  F00B         	goto	u11151
  8677  00161A  EF11  F00B         	goto	u11150
  8678  00161E                     u11151:
  8679  00161E  EF19  F00B         	goto	l10516
  8680  001622                     u11150:
  8681  001622                     
  8682                           ; BSR set to: 0
  8683  001622  0E00               	movlw	0
  8684  001624  6F87               	movwf	___flmul@a& (0+255),b
  8685  001626  0E00               	movlw	0
  8686  001628  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8687  00162A  0E00               	movlw	0
  8688  00162C  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8689  00162E  0E00               	movlw	0
  8690  001630  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8691  001632                     l10516:
  8692                           
  8693                           ; BSR set to: 0
  8694  001632  8F89               	bsf	(___flmul@a+2)& (0+255),7,b
  8695  001634  EF24  F00B         	goto	l2606
  8696  001638                     l10518:
  8697                           
  8698                           ; BSR set to: 0
  8699  001638  0E00               	movlw	0
  8700  00163A  6F87               	movwf	___flmul@a& (0+255),b
  8701  00163C  0E00               	movlw	0
  8702  00163E  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8703  001640  0E00               	movlw	0
  8704  001642  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8705  001644  0E00               	movlw	0
  8706  001646  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8707  001648                     l2606:
  8708                           
  8709                           ; BSR set to: 0
  8710  001648  5190               	movf	___flmul@aexp& (0+255),w,b
  8711  00164A  B4D8               	btfsc	status,2,c
  8712  00164C  EF2A  F00B         	goto	u11161
  8713  001650  EF2C  F00B         	goto	u11160
  8714  001654                     u11161:
  8715  001654  EF34  F00B         	goto	l10522
  8716  001658                     u11160:
  8717  001658                     
  8718                           ; BSR set to: 0
  8719  001658  5195               	movf	___flmul@bexp& (0+255),w,b
  8720  00165A  A4D8               	btfss	status,2,c
  8721  00165C  EF32  F00B         	goto	u11171
  8722  001660  EF34  F00B         	goto	u11170
  8723  001664                     u11171:
  8724  001664  EF3E  F00B         	goto	l10526
  8725  001668                     u11170:
  8726  001668                     l10522:
  8727                           
  8728                           ; BSR set to: 0
  8729  001668  0E00               	movlw	0
  8730  00166A  6F83               	movwf	?___flmul& (0+255),b
  8731  00166C  0E00               	movlw	0
  8732  00166E  6F84               	movwf	(?___flmul+1)& (0+255),b
  8733  001670  0E00               	movlw	0
  8734  001672  6F85               	movwf	(?___flmul+2)& (0+255),b
  8735  001674  0E00               	movlw	0
  8736  001676  6F86               	movwf	(?___flmul+3)& (0+255),b
  8737  001678  EFD6  F00C         	goto	l2610
  8738  00167C                     l10526:
  8739                           
  8740                           ; BSR set to: 0
  8741  00167C  5189               	movf	(___flmul@a+2)& (0+255),w,b
  8742  00167E  0383               	mulwf	___flmul@b& (0+255),b
  8743  001680  CFF3 F09A          	movff	prodl,___flmul@temp
  8744  001684  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8745  001688                     
  8746                           ; BSR set to: 0
  8747  001688  519A               	movf	___flmul@temp& (0+255),w,b
  8748  00168A  6F91               	movwf	___flmul@grs& (0+255),b
  8749  00168C  6B92               	clrf	(___flmul@grs+1)& (0+255),b
  8750  00168E  6B93               	clrf	(___flmul@grs+2)& (0+255),b
  8751  001690  6B94               	clrf	(___flmul@grs+3)& (0+255),b
  8752  001692                     
  8753                           ; BSR set to: 0
  8754  001692  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8755  001694  6F96               	movwf	___flmul@prod& (0+255),b
  8756  001696  6B97               	clrf	(___flmul@prod+1)& (0+255),b
  8757  001698  6B98               	clrf	(___flmul@prod+2)& (0+255),b
  8758  00169A  6B99               	clrf	(___flmul@prod+3)& (0+255),b
  8759  00169C  5188               	movf	(___flmul@a+1)& (0+255),w,b
  8760  00169E  0384               	mulwf	(___flmul@b+1)& (0+255),b
  8761  0016A0  CFF3 F09A          	movff	prodl,___flmul@temp
  8762  0016A4  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8763  0016A8                     
  8764                           ; BSR set to: 0
  8765  0016A8  519A               	movf	___flmul@temp& (0+255),w,b
  8766  0016AA  2791               	addwf	___flmul@grs& (0+255),f,b
  8767  0016AC  0E00               	movlw	0
  8768  0016AE  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8769  0016B0  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8770  0016B2  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8771  0016B4                     
  8772                           ; BSR set to: 0
  8773  0016B4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8774  0016B6  2796               	addwf	___flmul@prod& (0+255),f,b
  8775  0016B8  0E00               	movlw	0
  8776  0016BA  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8777  0016BC  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8778  0016BE  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8779  0016C0  5187               	movf	___flmul@a& (0+255),w,b
  8780  0016C2  0385               	mulwf	(___flmul@b+2)& (0+255),b
  8781  0016C4  CFF3 F09A          	movff	prodl,___flmul@temp
  8782  0016C8  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8783  0016CC                     
  8784                           ; BSR set to: 0
  8785  0016CC  519A               	movf	___flmul@temp& (0+255),w,b
  8786  0016CE  2791               	addwf	___flmul@grs& (0+255),f,b
  8787  0016D0  0E00               	movlw	0
  8788  0016D2  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8789  0016D4  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8790  0016D6  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8791  0016D8                     
  8792                           ; BSR set to: 0
  8793  0016D8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8794  0016DA  2796               	addwf	___flmul@prod& (0+255),f,b
  8795  0016DC  0E00               	movlw	0
  8796  0016DE  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8797  0016E0  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8798  0016E2  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8799  0016E4                     
  8800                           ; BSR set to: 0
  8801  0016E4  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  8802  0016E8  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  8803  0016EC  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  8804  0016F0  6B91               	clrf	___flmul@grs& (0+255),b
  8805  0016F2                     
  8806                           ; BSR set to: 0
  8807  0016F2  5187               	movf	___flmul@a& (0+255),w,b
  8808  0016F4  0384               	mulwf	(___flmul@b+1)& (0+255),b
  8809  0016F6  CFF3 F09A          	movff	prodl,___flmul@temp
  8810  0016FA  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8811  0016FE                     
  8812                           ; BSR set to: 0
  8813  0016FE  519A               	movf	___flmul@temp& (0+255),w,b
  8814  001700  2791               	addwf	___flmul@grs& (0+255),f,b
  8815  001702  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8816  001704  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8817  001706  0E00               	movlw	0
  8818  001708  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8819  00170A  0E00               	movlw	0
  8820  00170C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8821  00170E                     
  8822                           ; BSR set to: 0
  8823  00170E  5188               	movf	(___flmul@a+1)& (0+255),w,b
  8824  001710  0383               	mulwf	___flmul@b& (0+255),b
  8825  001712  CFF3 F09A          	movff	prodl,___flmul@temp
  8826  001716  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8827  00171A                     
  8828                           ; BSR set to: 0
  8829  00171A  519A               	movf	___flmul@temp& (0+255),w,b
  8830  00171C  2791               	addwf	___flmul@grs& (0+255),f,b
  8831  00171E  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8832  001720  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8833  001722  0E00               	movlw	0
  8834  001724  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8835  001726  0E00               	movlw	0
  8836  001728  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8837  00172A                     
  8838                           ; BSR set to: 0
  8839  00172A  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  8840  00172E  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  8841  001732  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  8842  001736  6B91               	clrf	___flmul@grs& (0+255),b
  8843  001738  5187               	movf	___flmul@a& (0+255),w,b
  8844  00173A  0383               	mulwf	___flmul@b& (0+255),b
  8845  00173C  CFF3 F09A          	movff	prodl,___flmul@temp
  8846  001740  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8847  001744                     
  8848                           ; BSR set to: 0
  8849  001744  519A               	movf	___flmul@temp& (0+255),w,b
  8850  001746  2791               	addwf	___flmul@grs& (0+255),f,b
  8851  001748  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8852  00174A  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8853  00174C  0E00               	movlw	0
  8854  00174E  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8855  001750  0E00               	movlw	0
  8856  001752  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8857  001754                     
  8858                           ; BSR set to: 0
  8859  001754  5189               	movf	(___flmul@a+2)& (0+255),w,b
  8860  001756  0384               	mulwf	(___flmul@b+1)& (0+255),b
  8861  001758  CFF3 F09A          	movff	prodl,___flmul@temp
  8862  00175C  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8863  001760  519A               	movf	___flmul@temp& (0+255),w,b
  8864  001762  2796               	addwf	___flmul@prod& (0+255),f,b
  8865  001764  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8866  001766  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8867  001768  0E00               	movlw	0
  8868  00176A  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8869  00176C  0E00               	movlw	0
  8870  00176E  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8871  001770                     
  8872                           ; BSR set to: 0
  8873  001770  5188               	movf	(___flmul@a+1)& (0+255),w,b
  8874  001772  0385               	mulwf	(___flmul@b+2)& (0+255),b
  8875  001774  CFF3 F09A          	movff	prodl,___flmul@temp
  8876  001778  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8877  00177C                     
  8878                           ; BSR set to: 0
  8879  00177C  519A               	movf	___flmul@temp& (0+255),w,b
  8880  00177E  2796               	addwf	___flmul@prod& (0+255),f,b
  8881  001780  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8882  001782  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8883  001784  0E00               	movlw	0
  8884  001786  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8885  001788  0E00               	movlw	0
  8886  00178A  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8887  00178C  5189               	movf	(___flmul@a+2)& (0+255),w,b
  8888  00178E  0385               	mulwf	(___flmul@b+2)& (0+255),b
  8889  001790  CFF3 F09A          	movff	prodl,___flmul@temp
  8890  001794  CFF4 F09B          	movff	prodh,___flmul@temp+1
  8891  001798                     
  8892                           ; BSR set to: 0
  8893  001798  519A               	movf	___flmul@temp& (0+255),w,b
  8894  00179A  6F8B               	movwf	??___flmul& (0+255),b
  8895  00179C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  8896  00179E  6F8C               	movwf	(??___flmul+1)& (0+255),b
  8897  0017A0  6B8D               	clrf	(??___flmul+2)& (0+255),b
  8898  0017A2  6B8E               	clrf	(??___flmul+3)& (0+255),b
  8899  0017A4  C08D  F08E         	movff	??___flmul+2,??___flmul+3
  8900  0017A8  C08C  F08D         	movff	??___flmul+1,??___flmul+2
  8901  0017AC  C08B  F08C         	movff	??___flmul,??___flmul+1
  8902  0017B0  6B8B               	clrf	??___flmul& (0+255),b
  8903  0017B2  518B               	movf	??___flmul& (0+255),w,b
  8904  0017B4  2796               	addwf	___flmul@prod& (0+255),f,b
  8905  0017B6  518C               	movf	(??___flmul+1)& (0+255),w,b
  8906  0017B8  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8907  0017BA  518D               	movf	(??___flmul+2)& (0+255),w,b
  8908  0017BC  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8909  0017BE  518E               	movf	(??___flmul+3)& (0+255),w,b
  8910  0017C0  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8911  0017C2                     
  8912                           ; BSR set to: 0
  8913  0017C2  C091  F08B         	movff	___flmul@grs,??___flmul
  8914  0017C6  C092  F08C         	movff	___flmul@grs+1,??___flmul+1
  8915  0017CA  C093  F08D         	movff	___flmul@grs+2,??___flmul+2
  8916  0017CE  C094  F08E         	movff	___flmul@grs+3,??___flmul+3
  8917  0017D2  0E19               	movlw	25
  8918  0017D4  EFF1  F00B         	goto	u11180
  8919  0017D8                     u11185:
  8920  0017D8  90D8               	bcf	status,0,c
  8921  0017DA  338E               	rrcf	(??___flmul+3)& (0+255),f,b
  8922  0017DC  338D               	rrcf	(??___flmul+2)& (0+255),f,b
  8923  0017DE  338C               	rrcf	(??___flmul+1)& (0+255),f,b
  8924  0017E0  338B               	rrcf	??___flmul& (0+255),f,b
  8925  0017E2                     u11180:
  8926  0017E2  2EE8               	decfsz	wreg,f,c
  8927  0017E4  EFEC  F00B         	goto	u11185
  8928  0017E8  518B               	movf	??___flmul& (0+255),w,b
  8929  0017EA  2796               	addwf	___flmul@prod& (0+255),f,b
  8930  0017EC  518C               	movf	(??___flmul+1)& (0+255),w,b
  8931  0017EE  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8932  0017F0  518D               	movf	(??___flmul+2)& (0+255),w,b
  8933  0017F2  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8934  0017F4  518E               	movf	(??___flmul+3)& (0+255),w,b
  8935  0017F6  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8936  0017F8                     
  8937                           ; BSR set to: 0
  8938  0017F8  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  8939  0017FC  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  8940  001800  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  8941  001804  6B91               	clrf	___flmul@grs& (0+255),b
  8942  001806                     
  8943                           ; BSR set to: 0
  8944  001806  5190               	movf	___flmul@aexp& (0+255),w,b
  8945  001808  C095  F08B         	movff	___flmul@bexp,??___flmul
  8946  00180C  6B8C               	clrf	(??___flmul+1)& (0+255),b
  8947  00180E  278B               	addwf	??___flmul& (0+255),f,b
  8948  001810  0E00               	movlw	0
  8949  001812  238C               	addwfc	(??___flmul+1)& (0+255),f,b
  8950  001814  0E82               	movlw	130
  8951  001816  258B               	addwf	??___flmul& (0+255),w,b
  8952  001818  6F9A               	movwf	___flmul@temp& (0+255),b
  8953  00181A  0EFF               	movlw	255
  8954  00181C  218C               	addwfc	(??___flmul+1)& (0+255),w,b
  8955  00181E  6F9B               	movwf	(___flmul@temp+1)& (0+255),b
  8956  001820  EF27  F00C         	goto	l10574
  8957  001824                     l10568:
  8958                           
  8959                           ; BSR set to: 0
  8960  001824  90D8               	bcf	status,0,c
  8961  001826  3796               	rlcf	___flmul@prod& (0+255),f,b
  8962  001828  3797               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8963  00182A  3798               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8964  00182C  3799               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8965  00182E                     
  8966                           ; BSR set to: 0
  8967  00182E  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  8968  001830  EF1C  F00C         	goto	u11191
  8969  001834  EF1E  F00C         	goto	u11190
  8970  001838                     u11191:
  8971  001838  EF1F  F00C         	goto	l2613
  8972  00183C                     u11190:
  8973  00183C                     
  8974                           ; BSR set to: 0
  8975  00183C  8196               	bsf	___flmul@prod& (0+255),0,b
  8976  00183E                     l2613:
  8977                           
  8978                           ; BSR set to: 0
  8979  00183E  90D8               	bcf	status,0,c
  8980  001840  3791               	rlcf	___flmul@grs& (0+255),f,b
  8981  001842  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8982  001844  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8983  001846  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8984  001848  079A               	decf	___flmul@temp& (0+255),f,b
  8985  00184A  A0D8               	btfss	status,0,c
  8986  00184C  079B               	decf	(___flmul@temp+1)& (0+255),f,b
  8987  00184E                     l10574:
  8988                           
  8989                           ; BSR set to: 0
  8990  00184E  AF98               	btfss	(___flmul@prod+2)& (0+255),7,b
  8991  001850  EF2C  F00C         	goto	u11201
  8992  001854  EF2E  F00C         	goto	u11200
  8993  001858                     u11201:
  8994  001858  EF12  F00C         	goto	l10568
  8995  00185C                     u11200:
  8996  00185C                     
  8997                           ; BSR set to: 0
  8998  00185C  0E00               	movlw	0
  8999  00185E  6F90               	movwf	___flmul@aexp& (0+255),b
  9000  001860                     
  9001                           ; BSR set to: 0
  9002  001860  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  9003  001862  EF35  F00C         	goto	u11211
  9004  001866  EF37  F00C         	goto	u11210
  9005  00186A                     u11211:
  9006  00186A  EF5B  F00C         	goto	l2615
  9007  00186E                     u11210:
  9008  00186E                     
  9009                           ; BSR set to: 0
  9010  00186E  0EFF               	movlw	255
  9011  001870  1591               	andwf	___flmul@grs& (0+255),w,b
  9012  001872  6F8B               	movwf	??___flmul& (0+255),b
  9013  001874  0EFF               	movlw	255
  9014  001876  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
  9015  001878  6F8C               	movwf	(??___flmul+1)& (0+255),b
  9016  00187A  0EFF               	movlw	255
  9017  00187C  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
  9018  00187E  6F8D               	movwf	(??___flmul+2)& (0+255),b
  9019  001880  0E7F               	movlw	127
  9020  001882  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
  9021  001884  6F8E               	movwf	(??___flmul+3)& (0+255),b
  9022  001886  518B               	movf	??___flmul& (0+255),w,b
  9023  001888  118C               	iorwf	(??___flmul+1)& (0+255),w,b
  9024  00188A  118D               	iorwf	(??___flmul+2)& (0+255),w,b
  9025  00188C  118E               	iorwf	(??___flmul+3)& (0+255),w,b
  9026  00188E  B4D8               	btfsc	status,2,c
  9027  001890  EF4C  F00C         	goto	u11221
  9028  001894  EF4E  F00C         	goto	u11220
  9029  001898                     u11221:
  9030  001898  EF52  F00C         	goto	l2616
  9031  00189C                     u11220:
  9032  00189C                     l10582:
  9033                           
  9034                           ; BSR set to: 0
  9035  00189C  0E01               	movlw	1
  9036  00189E  6F90               	movwf	___flmul@aexp& (0+255),b
  9037  0018A0  EF5B  F00C         	goto	l2615
  9038  0018A4                     l2616:
  9039                           
  9040                           ; BSR set to: 0
  9041  0018A4  A196               	btfss	___flmul@prod& (0+255),0,b
  9042  0018A6  EF57  F00C         	goto	u11231
  9043  0018AA  EF59  F00C         	goto	u11230
  9044  0018AE                     u11231:
  9045  0018AE  EF5B  F00C         	goto	l2615
  9046  0018B2                     u11230:
  9047  0018B2  EF4E  F00C         	goto	l10582
  9048  0018B6                     l2615:
  9049                           
  9050                           ; BSR set to: 0
  9051  0018B6  5190               	movf	___flmul@aexp& (0+255),w,b
  9052  0018B8  B4D8               	btfsc	status,2,c
  9053  0018BA  EF61  F00C         	goto	u11241
  9054  0018BE  EF63  F00C         	goto	u11240
  9055  0018C2                     u11241:
  9056  0018C2  EF87  F00C         	goto	l10594
  9057  0018C6                     u11240:
  9058  0018C6                     
  9059                           ; BSR set to: 0
  9060  0018C6  0E01               	movlw	1
  9061  0018C8  2796               	addwf	___flmul@prod& (0+255),f,b
  9062  0018CA  0E00               	movlw	0
  9063  0018CC  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9064  0018CE  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9065  0018D0  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9066  0018D2                     
  9067                           ; BSR set to: 0
  9068  0018D2  A199               	btfss	(___flmul@prod+3)& (0+255),0,b
  9069  0018D4  EF6E  F00C         	goto	u11251
  9070  0018D8  EF70  F00C         	goto	u11250
  9071  0018DC                     u11251:
  9072  0018DC  EF87  F00C         	goto	l10594
  9073  0018E0                     u11250:
  9074  0018E0                     
  9075                           ; BSR set to: 0
  9076  0018E0  C096  F08B         	movff	___flmul@prod,??___flmul
  9077  0018E4  C097  F08C         	movff	___flmul@prod+1,??___flmul+1
  9078  0018E8  C098  F08D         	movff	___flmul@prod+2,??___flmul+2
  9079  0018EC  C099  F08E         	movff	___flmul@prod+3,??___flmul+3
  9080  0018F0  358E               	rlcf	(??___flmul+3)& (0+255),w,b
  9081  0018F2  338E               	rrcf	(??___flmul+3)& (0+255),f,b
  9082  0018F4  338D               	rrcf	(??___flmul+2)& (0+255),f,b
  9083  0018F6  338C               	rrcf	(??___flmul+1)& (0+255),f,b
  9084  0018F8  338B               	rrcf	??___flmul& (0+255),f,b
  9085  0018FA  C08B  F096         	movff	??___flmul,___flmul@prod
  9086  0018FE  C08C  F097         	movff	??___flmul+1,___flmul@prod+1
  9087  001902  C08D  F098         	movff	??___flmul+2,___flmul@prod+2
  9088  001906  C08E  F099         	movff	??___flmul+3,___flmul@prod+3
  9089  00190A                     
  9090                           ; BSR set to: 0
  9091  00190A  4B9A               	infsnz	___flmul@temp& (0+255),f,b
  9092  00190C  2B9B               	incf	(___flmul@temp+1)& (0+255),f,b
  9093  00190E                     l10594:
  9094                           
  9095                           ; BSR set to: 0
  9096  00190E  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9097  001910  EF92  F00C         	goto	u11261
  9098  001914  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  9099  001916  E108               	bnz	u11260
  9100  001918  299A               	incf	___flmul@temp& (0+255),w,b
  9101  00191A  A0D8               	btfss	status,0,c
  9102  00191C  EF92  F00C         	goto	u11261
  9103  001920  EF94  F00C         	goto	u11260
  9104  001924                     u11261:
  9105  001924  EF9E  F00C         	goto	l10598
  9106  001928                     u11260:
  9107  001928                     
  9108                           ; BSR set to: 0
  9109  001928  0E00               	movlw	0
  9110  00192A  6F96               	movwf	___flmul@prod& (0+255),b
  9111  00192C  0E00               	movlw	0
  9112  00192E  6F97               	movwf	(___flmul@prod+1)& (0+255),b
  9113  001930  0E80               	movlw	128
  9114  001932  6F98               	movwf	(___flmul@prod+2)& (0+255),b
  9115  001934  0E7F               	movlw	127
  9116  001936  6F99               	movwf	(___flmul@prod+3)& (0+255),b
  9117  001938  EFCC  F00C         	goto	l10610
  9118  00193C                     l10598:
  9119                           
  9120                           ; BSR set to: 0
  9121  00193C  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9122  00193E  EFAB  F00C         	goto	u11270
  9123  001942  519B               	movf	(___flmul@temp+1)& (0+255),w,b
  9124  001944  E106               	bnz	u11271
  9125  001946  059A               	decf	___flmul@temp& (0+255),w,b
  9126  001948  B0D8               	btfsc	status,0,c
  9127  00194A  EFA9  F00C         	goto	u11271
  9128  00194E  EFAB  F00C         	goto	u11270
  9129  001952                     u11271:
  9130  001952  EFB7  F00C         	goto	l2623
  9131  001956                     u11270:
  9132  001956                     
  9133                           ; BSR set to: 0
  9134  001956  0E00               	movlw	0
  9135  001958  6F96               	movwf	___flmul@prod& (0+255),b
  9136  00195A  0E00               	movlw	0
  9137  00195C  6F97               	movwf	(___flmul@prod+1)& (0+255),b
  9138  00195E  0E00               	movlw	0
  9139  001960  6F98               	movwf	(___flmul@prod+2)& (0+255),b
  9140  001962  0E00               	movlw	0
  9141  001964  6F99               	movwf	(___flmul@prod+3)& (0+255),b
  9142  001966  0E00               	movlw	0
  9143  001968  6F8F               	movwf	___flmul@sign& (0+255),b
  9144  00196A  EFCC  F00C         	goto	l10610
  9145  00196E                     l2623:
  9146                           
  9147                           ; BSR set to: 0
  9148  00196E  C09A  F095         	movff	___flmul@temp,___flmul@bexp
  9149  001972                     
  9150                           ; BSR set to: 0
  9151  001972  0EFF               	movlw	255
  9152  001974  1796               	andwf	___flmul@prod& (0+255),f,b
  9153  001976  0EFF               	movlw	255
  9154  001978  1797               	andwf	(___flmul@prod+1)& (0+255),f,b
  9155  00197A  0E7F               	movlw	127
  9156  00197C  1798               	andwf	(___flmul@prod+2)& (0+255),f,b
  9157  00197E  0E00               	movlw	0
  9158  001980  1799               	andwf	(___flmul@prod+3)& (0+255),f,b
  9159  001982                     
  9160                           ; BSR set to: 0
  9161  001982  A195               	btfss	___flmul@bexp& (0+255),0,b
  9162  001984  EFC6  F00C         	goto	u11281
  9163  001988  EFC8  F00C         	goto	u11280
  9164  00198C                     u11281:
  9165  00198C  EFC9  F00C         	goto	l10608
  9166  001990                     u11280:
  9167  001990                     
  9168                           ; BSR set to: 0
  9169  001990  8F98               	bsf	(___flmul@prod+2)& (0+255),7,b
  9170  001992                     l10608:
  9171                           
  9172                           ; BSR set to: 0
  9173  001992  90D8               	bcf	status,0,c
  9174  001994  3195               	rrcf	___flmul@bexp& (0+255),w,b
  9175  001996  6F99               	movwf	(___flmul@prod+3)& (0+255),b
  9176  001998                     l10610:
  9177                           
  9178                           ; BSR set to: 0
  9179  001998  518F               	movf	___flmul@sign& (0+255),w,b
  9180  00199A  1399               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9181  00199C                     
  9182                           ; BSR set to: 0
  9183  00199C  C096  F083         	movff	___flmul@prod,?___flmul
  9184  0019A0  C097  F084         	movff	___flmul@prod+1,?___flmul+1
  9185  0019A4  C098  F085         	movff	___flmul@prod+2,?___flmul+2
  9186  0019A8  C099  F086         	movff	___flmul@prod+3,?___flmul+3
  9187  0019AC                     l2610:
  9188                           
  9189                           ; BSR set to: 0
  9190  0019AC  0012               	return		;funcret
  9191  0019AE                     __end_of___flmul:
  9192                           	callstack 0
  9193                           
  9194 ;; *************** function _ECU_DC_Motor_Run_Left *****************
  9195 ;; Defined at:
  9196 ;;		line 39 in file "ECU/DC_Motor/ecu_dc_motor.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  dc_motor        2   33[COMRAM] PTR const struct .
  9199 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  ret_value       1    0        unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      unsigned char 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;Total ram usage:        2 bytes
  9216 ;; Hardware stack levels used: 1
  9217 ;; Hardware stack levels required when called: 9
  9218 ;; This function calls:
  9219 ;;		_GPIO_Pin_Write_Logic
  9220 ;; This function is called by:
  9221 ;;		_Robot_Move_Backward
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text47
  9226  004E8C                     __ptext47:
  9227                           	callstack 0
  9228  004E8C                     _ECU_DC_Motor_Run_Left:
  9229                           	callstack 20
  9230  004E8C                     
  9231                           ;ECU/DC_Motor/ecu_dc_motor.c: 42:     if(((void*)0) == dc_motor)
  9232  004E8C  5022               	movf	ECU_DC_Motor_Run_Left@dc_motor^0,w,c
  9233  004E8E  1023               	iorwf	(ECU_DC_Motor_Run_Left@dc_motor+1)^0,w,c
  9234  004E90  A4D8               	btfss	status,2,c
  9235  004E92  EF4D  F027         	goto	u11801
  9236  004E96  EF4F  F027         	goto	u11800
  9237  004E9A                     u11801:
  9238  004E9A  EF51  F027         	goto	l10918
  9239  004E9E                     u11800:
  9240  004E9E                     
  9241                           ;ECU/DC_Motor/ecu_dc_motor.c: 45:     }
  9242  004E9E  EF59  F027         	goto	l60
  9243  004EA2                     l10918:
  9244                           
  9245                           ;ECU/DC_Motor/ecu_dc_motor.c: 47:     {;ECU/DC_Motor/ecu_dc_motor.c: 48:         GPIO_Pi
      +                          n_Write_Logic(&(dc_motor->dc_motor), GPIO_HIGH );
  9246  004EA2  C022  F01E         	movff	ECU_DC_Motor_Run_Left@dc_motor,GPIO_Pin_Write_Logic@_pin_config
  9247  004EA6  C023  F01F         	movff	ECU_DC_Motor_Run_Left@dc_motor+1,GPIO_Pin_Write_Logic@_pin_config+1
  9248  004EAA  0E01               	movlw	1
  9249  004EAC  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9250  004EAE  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  9251  004EB2                     l60:
  9252  004EB2  0012               	return		;funcret
  9253  004EB4                     __end_of_ECU_DC_Motor_Run_Left:
  9254                           	callstack 0
  9255                           
  9256 ;; *************** function _Get_Temp_HUM *****************
  9257 ;; Defined at:
  9258 ;;		line 13 in file "Robot/sensors/DHT11/DHT.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  RH_Decimal      2    0[BANK0 ] PTR unsigned char 
  9261 ;;		 -> RH_Decimal(1), 
  9262 ;;  RH_Integral     2    2[BANK0 ] PTR unsigned char 
  9263 ;;		 -> RH_Integral(1), 
  9264 ;;  T_Decimal       2    4[BANK0 ] PTR unsigned char 
  9265 ;;		 -> T_Decimal(1), 
  9266 ;;  T_Integral      2    6[BANK0 ] PTR unsigned char 
  9267 ;;		 -> T_Integral(1), 
  9268 ;;  Checksum        2    8[BANK0 ] PTR unsigned char 
  9269 ;;		 -> Checksum(1), 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  ERRORSTATUS     1    0        unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      unsigned char 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9281 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;Total ram usage:       10 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 9
  9288 ;; This function calls:
  9289 ;;		_DHT11_Check_Response
  9290 ;;		_DHT11_Read_Data
  9291 ;;		_DHT11_Start
  9292 ;; This function is called by:
  9293 ;;		_main
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text48
  9298  00406E                     __ptext48:
  9299                           	callstack 0
  9300  00406E                     _Get_Temp_HUM:
  9301                           	callstack 21
  9302  00406E                     
  9303                           ;Robot/sensors/DHT11/DHT.c: 16:     if ( ((void*)0)==RH_Decimal||((void*)0)==RH_Integral
      +                          ||((void*)0)==T_Decimal||((void*)0)==T_Integral||((void*)0)==Checksum)
  9304  00406E  0100               	movlb	0	; () banked
  9305  004070  5160               	movf	Get_Temp_HUM@RH_Decimal& (0+255),w,b
  9306  004072  1161               	iorwf	(Get_Temp_HUM@RH_Decimal+1)& (0+255),w,b
  9307  004074  B4D8               	btfsc	status,2,c
  9308  004076  EF3F  F020         	goto	u12151
  9309  00407A  EF41  F020         	goto	u12150
  9310  00407E                     u12151:
  9311  00407E  EF65  F020         	goto	l11350
  9312  004082                     u12150:
  9313  004082                     
  9314                           ; BSR set to: 0
  9315  004082  5162               	movf	Get_Temp_HUM@RH_Integral& (0+255),w,b
  9316  004084  1163               	iorwf	(Get_Temp_HUM@RH_Integral+1)& (0+255),w,b
  9317  004086  B4D8               	btfsc	status,2,c
  9318  004088  EF48  F020         	goto	u12161
  9319  00408C  EF4A  F020         	goto	u12160
  9320  004090                     u12161:
  9321  004090  EF65  F020         	goto	l11350
  9322  004094                     u12160:
  9323  004094                     
  9324                           ; BSR set to: 0
  9325  004094  5164               	movf	Get_Temp_HUM@T_Decimal& (0+255),w,b
  9326  004096  1165               	iorwf	(Get_Temp_HUM@T_Decimal+1)& (0+255),w,b
  9327  004098  B4D8               	btfsc	status,2,c
  9328  00409A  EF51  F020         	goto	u12171
  9329  00409E  EF53  F020         	goto	u12170
  9330  0040A2                     u12171:
  9331  0040A2  EF65  F020         	goto	l11350
  9332  0040A6                     u12170:
  9333  0040A6                     
  9334                           ; BSR set to: 0
  9335  0040A6  5166               	movf	Get_Temp_HUM@T_Integral& (0+255),w,b
  9336  0040A8  1167               	iorwf	(Get_Temp_HUM@T_Integral+1)& (0+255),w,b
  9337  0040AA  B4D8               	btfsc	status,2,c
  9338  0040AC  EF5A  F020         	goto	u12181
  9339  0040B0  EF5C  F020         	goto	u12180
  9340  0040B4                     u12181:
  9341  0040B4  EF65  F020         	goto	l11350
  9342  0040B8                     u12180:
  9343  0040B8                     
  9344                           ; BSR set to: 0
  9345  0040B8  5168               	movf	Get_Temp_HUM@Checksum& (0+255),w,b
  9346  0040BA  1169               	iorwf	(Get_Temp_HUM@Checksum+1)& (0+255),w,b
  9347  0040BC  A4D8               	btfss	status,2,c
  9348  0040BE  EF63  F020         	goto	u12191
  9349  0040C2  EF65  F020         	goto	u12190
  9350  0040C6                     u12191:
  9351  0040C6  EF67  F020         	goto	l11352
  9352  0040CA                     u12190:
  9353  0040CA                     l11350:
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;Robot/sensors/DHT11/DHT.c: 19:     }
  9357  0040CA  EF89  F020         	goto	l1708
  9358  0040CE                     l11352:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;Robot/sensors/DHT11/DHT.c: 21:     {;Robot/sensors/DHT11/DHT.c: 22:        DHT11_Start(
      +                          );
  9362  0040CE  EC92  F027         	call	_DHT11_Start	;wreg free
  9363  0040D2                     
  9364                           ;Robot/sensors/DHT11/DHT.c: 23:        DHT11_Check_Response();
  9365  0040D2  ECC6  F026         	call	_DHT11_Check_Response	;wreg free
  9366  0040D6                     
  9367                           ;Robot/sensors/DHT11/DHT.c: 24:        DHT11_Read_Data(RH_Decimal);
  9368  0040D6  C060  F01E         	movff	Get_Temp_HUM@RH_Decimal,DHT11_Read_Data@data
  9369  0040DA  C061  F01F         	movff	Get_Temp_HUM@RH_Decimal+1,DHT11_Read_Data@data+1
  9370  0040DE  EC74  F021         	call	_DHT11_Read_Data	;wreg free
  9371  0040E2                     
  9372                           ;Robot/sensors/DHT11/DHT.c: 25:        DHT11_Read_Data(RH_Integral);
  9373  0040E2  C062  F01E         	movff	Get_Temp_HUM@RH_Integral,DHT11_Read_Data@data
  9374  0040E6  C063  F01F         	movff	Get_Temp_HUM@RH_Integral+1,DHT11_Read_Data@data+1
  9375  0040EA  EC74  F021         	call	_DHT11_Read_Data	;wreg free
  9376  0040EE                     
  9377                           ;Robot/sensors/DHT11/DHT.c: 26:        DHT11_Read_Data(T_Decimal);
  9378  0040EE  C064  F01E         	movff	Get_Temp_HUM@T_Decimal,DHT11_Read_Data@data
  9379  0040F2  C065  F01F         	movff	Get_Temp_HUM@T_Decimal+1,DHT11_Read_Data@data+1
  9380  0040F6  EC74  F021         	call	_DHT11_Read_Data	;wreg free
  9381  0040FA                     
  9382                           ;Robot/sensors/DHT11/DHT.c: 27:        DHT11_Read_Data(T_Integral);
  9383  0040FA  C066  F01E         	movff	Get_Temp_HUM@T_Integral,DHT11_Read_Data@data
  9384  0040FE  C067  F01F         	movff	Get_Temp_HUM@T_Integral+1,DHT11_Read_Data@data+1
  9385  004102  EC74  F021         	call	_DHT11_Read_Data	;wreg free
  9386  004106                     
  9387                           ;Robot/sensors/DHT11/DHT.c: 28:        DHT11_Read_Data(Checksum);
  9388  004106  C068  F01E         	movff	Get_Temp_HUM@Checksum,DHT11_Read_Data@data
  9389  00410A  C069  F01F         	movff	Get_Temp_HUM@Checksum+1,DHT11_Read_Data@data+1
  9390  00410E  EC74  F021         	call	_DHT11_Read_Data	;wreg free
  9391  004112                     l1708:
  9392  004112  0012               	return		;funcret
  9393  004114                     __end_of_Get_Temp_HUM:
  9394                           	callstack 0
  9395                           
  9396 ;; *************** function _DHT11_Start *****************
  9397 ;; Defined at:
  9398 ;;		line 32 in file "Robot/sensors/DHT11/DHT.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;		None
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;		None
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;Total ram usage:        1 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; Hardware stack levels required when called: 8
  9419 ;; This function calls:
  9420 ;;		Nothing
  9421 ;; This function is called by:
  9422 ;;		_Get_Temp_HUM
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text49
  9427  004F24                     __ptext49:
  9428                           	callstack 0
  9429  004F24                     _DHT11_Start:
  9430                           	callstack 21
  9431  004F24                     
  9432                           ;Robot/sensors/DHT11/DHT.c: 34:     TRISDbits.TRISD7=GPIO_DIRECTION_OUTPUT;
  9433  004F24  9E95               	bcf	149,7,c	;volatile
  9434                           
  9435                           ;Robot/sensors/DHT11/DHT.c: 35:     LATDbits.LATD7=GPIO_LOW;
  9436  004F26  9E8C               	bcf	140,7,c	;volatile
  9437  004F28                     
  9438                           ;Robot/sensors/DHT11/DHT.c: 36:     _delay((unsigned long)((18)*(8000000/4000.0)));
  9439  004F28  0E2F               	movlw	47
  9440  004F2A  6E1E               	movwf	??_DHT11_Start^0,c
  9441  004F2C  0EC0               	movlw	192
  9442  004F2E                     u12697:
  9443  004F2E  2EE8               	decfsz	wreg,f,c
  9444  004F30  D7FE               	bra	u12697
  9445  004F32  2E1E               	decfsz	??_DHT11_Start^0,f,c
  9446  004F34  D7FC               	bra	u12697
  9447  004F36                     
  9448                           ;Robot/sensors/DHT11/DHT.c: 37:     LATDbits.LATD7=GPIO_HIGH;
  9449  004F36  8E8C               	bsf	140,7,c	;volatile
  9450                           
  9451                           ;Robot/sensors/DHT11/DHT.c: 38:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  9452  004F38  0E14               	movlw	20
  9453  004F3A                     u12707:
  9454  004F3A  2EE8               	decfsz	wreg,f,c
  9455  004F3C  D7FE               	bra	u12707
  9456  004F3E                     
  9457                           ;Robot/sensors/DHT11/DHT.c: 39:     TRISDbits.TRISD7=GPIO_DIRECTION_INPUT;
  9458  004F3E  8E95               	bsf	149,7,c	;volatile
  9459  004F40  0012               	return		;funcret
  9460  004F42                     __end_of_DHT11_Start:
  9461                           	callstack 0
  9462                           
  9463 ;; *************** function _DHT11_Read_Data *****************
  9464 ;; Defined at:
  9465 ;;		line 47 in file "Robot/sensors/DHT11/DHT.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  data            2   29[COMRAM] PTR unsigned char 
  9468 ;;		 -> Checksum(1), T_Integral(1), T_Decimal(1), RH_Integral(1), 
  9469 ;;		 -> RH_Decimal(1), 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  i               1   32[COMRAM] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      void 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;Total ram usage:        4 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; Hardware stack levels required when called: 8
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_Get_Temp_HUM
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text50
  9496  0042E8                     __ptext50:
  9497                           	callstack 0
  9498  0042E8                     _DHT11_Read_Data:
  9499                           	callstack 21
  9500  0042E8                     
  9501                           ;Robot/sensors/DHT11/DHT.c: 47: static void DHT11_Read_Data(uint8* data);Robot/sensors/D
      +                          HT11/DHT.c: 48: {;Robot/sensors/DHT11/DHT.c: 49:   uint8 i;;Robot/sensors/DHT11/DHT.c: 5
      +                          0:   *data = 0;
  9502  0042E8  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9503  0042EC  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9504  0042F0  0E00               	movlw	0
  9505  0042F2  6EDF               	movwf	indf2,c
  9506  0042F4                     
  9507                           ;Robot/sensors/DHT11/DHT.c: 51:     for(i=0;i<8;i++)
  9508  0042F4  0E00               	movlw	0
  9509  0042F6  6E21               	movwf	DHT11_Read_Data@i^0,c
  9510  0042F8                     l1728:
  9511  0042F8  AE83               	btfss	131,7,c	;volatile
  9512  0042FA  EF81  F021         	goto	u8001
  9513  0042FE  EF83  F021         	goto	u8000
  9514  004302                     u8001:
  9515  004302  EF7C  F021         	goto	l1728
  9516  004306                     u8000:
  9517  004306                     
  9518                           ;Robot/sensors/DHT11/DHT.c: 54:         _delay((unsigned long)((40)*(8000000/4000000.0))
      +                          );
  9519  004306  0E1A               	movlw	26
  9520  004308                     u12717:
  9521  004308  2EE8               	decfsz	wreg,f,c
  9522  00430A  D7FE               	bra	u12717
  9523  00430C  F000 F000          	nop2	
  9524  004310                     
  9525                           ;Robot/sensors/DHT11/DHT.c: 55:         if(PORTDbits.RD7 & 1)
  9526  004310  AE83               	btfss	131,7,c	;volatile
  9527  004312  EF8D  F021         	goto	u8011
  9528  004316  EF8F  F021         	goto	u8010
  9529  00431A                     u8011:
  9530  00431A  EF9E  F021         	goto	l8142
  9531  00431E                     u8010:
  9532  00431E                     
  9533                           ;Robot/sensors/DHT11/DHT.c: 56:         {;Robot/sensors/DHT11/DHT.c: 57:             *da
      +                          ta = (((*data)<<1)|1);
  9534  00431E  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9535  004322  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9536  004326  50DF               	movf	indf2,w,c
  9537  004328  6E20               	movwf	??_DHT11_Read_Data^0,c
  9538  00432A  80D8               	bsf	status,0,c
  9539  00432C  3420               	rlcf	??_DHT11_Read_Data^0,w,c
  9540  00432E  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9541  004332  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9542  004336  6EDF               	movwf	indf2,c
  9543                           
  9544                           ;Robot/sensors/DHT11/DHT.c: 59:         }
  9545  004338  EFAB  F021         	goto	l1733
  9546  00433C                     l8142:
  9547                           
  9548                           ;Robot/sensors/DHT11/DHT.c: 61:         {;Robot/sensors/DHT11/DHT.c: 62:             *da
      +                          ta = ((*data)<<1);
  9549  00433C  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9550  004340  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9551  004344  50DF               	movf	indf2,w,c
  9552  004346  6E20               	movwf	??_DHT11_Read_Data^0,c
  9553  004348  90D8               	bcf	status,0,c
  9554  00434A  3420               	rlcf	??_DHT11_Read_Data^0,w,c
  9555  00434C  C01E  FFD9         	movff	DHT11_Read_Data@data,fsr2l
  9556  004350  C01F  FFDA         	movff	DHT11_Read_Data@data+1,fsr2h
  9557  004354  6EDF               	movwf	indf2,c
  9558  004356                     l1733:
  9559  004356  BE83               	btfsc	131,7,c	;volatile
  9560  004358  EFB0  F021         	goto	u8021
  9561  00435C  EFB2  F021         	goto	u8020
  9562  004360                     u8021:
  9563  004360  EFAB  F021         	goto	l1733
  9564  004364                     u8020:
  9565  004364                     
  9566                           ;Robot/sensors/DHT11/DHT.c: 66:     }
  9567  004364  2A21               	incf	DHT11_Read_Data@i^0,f,c
  9568  004366  0E07               	movlw	7
  9569  004368  6421               	cpfsgt	DHT11_Read_Data@i^0,c
  9570  00436A  EFB9  F021         	goto	u8031
  9571  00436E  EFBB  F021         	goto	u8030
  9572  004372                     u8031:
  9573  004372  EF7C  F021         	goto	l1728
  9574  004376                     u8030:
  9575  004376  0012               	return		;funcret
  9576  004378                     __end_of_DHT11_Read_Data:
  9577                           	callstack 0
  9578                           
  9579 ;; *************** function _DHT11_Check_Response *****************
  9580 ;; Defined at:
  9581 ;;		line 41 in file "Robot/sensors/DHT11/DHT.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;		None
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;		None
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      void 
  9588 ;; Registers used:
  9589 ;;		None
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;Total ram usage:        0 bytes
  9600 ;; Hardware stack levels used: 1
  9601 ;; Hardware stack levels required when called: 8
  9602 ;; This function calls:
  9603 ;;		Nothing
  9604 ;; This function is called by:
  9605 ;;		_Get_Temp_HUM
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text51
  9610  004D8C                     __ptext51:
  9611                           	callstack 0
  9612  004D8C                     _DHT11_Check_Response:
  9613                           	callstack 21
  9614  004D8C                     l1714:
  9615  004D8C  BE83               	btfsc	131,7,c	;volatile
  9616  004D8E  EFCB  F026         	goto	u7971
  9617  004D92  EFCD  F026         	goto	u7970
  9618  004D96                     u7971:
  9619  004D96  EFC6  F026         	goto	l1714
  9620  004D9A                     u7970:
  9621  004D9A                     l1717:
  9622  004D9A  AE83               	btfss	131,7,c	;volatile
  9623  004D9C  EFD2  F026         	goto	u7981
  9624  004DA0  EFD4  F026         	goto	u7980
  9625  004DA4                     u7981:
  9626  004DA4  EFCD  F026         	goto	l1717
  9627  004DA8                     u7980:
  9628  004DA8                     l1720:
  9629  004DA8  BE83               	btfsc	131,7,c	;volatile
  9630  004DAA  EFD9  F026         	goto	u7991
  9631  004DAE  EFDB  F026         	goto	u7990
  9632  004DB2                     u7991:
  9633  004DB2  EFD4  F026         	goto	l1720
  9634  004DB6                     u7990:
  9635  004DB6  0012               	return		;funcret
  9636  004DB8                     __end_of_DHT11_Check_Response:
  9637                           	callstack 0
  9638                           
  9639 ;; *************** function _Get_Distance *****************
  9640 ;; Defined at:
  9641 ;;		line 25 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  ultrasonic_o    2   35[BANK0 ] PTR const struct .
  9644 ;;		 -> ultrasonic(2), 
  9645 ;;  _tmr0_config    2   37[BANK0 ] PTR const struct .
  9646 ;;		 -> timer0(4), 
  9647 ;;  distance        2   39[BANK0 ] PTR float 
  9648 ;;		 -> distance(4), 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  timer_val       2   41[BANK0 ] unsigned short 
  9651 ;;  logic           1   43[BANK0 ] enum E3185
  9652 ;;  ERRORSTATUS     1    0        unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      unsigned char 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9662 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;Total ram usage:        9 bytes
  9667 ;; Hardware stack levels used: 1
  9668 ;; Hardware stack levels required when called: 10
  9669 ;; This function calls:
  9670 ;;		_GPIO_Pin_Read_Logic
  9671 ;;		_HAL_Timer0_Read_Val
  9672 ;;		_HAL_Timer0_Write_Val
  9673 ;;		___fldiv
  9674 ;;		___xxtofl
  9675 ;;		_send_trig_pulse
  9676 ;; This function is called by:
  9677 ;;		_main
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text52
  9682  003316                     __ptext52:
  9683                           	callstack 0
  9684  003316                     _Get_Distance:
  9685                           	callstack 20
  9686  003316                     
  9687                           ;Robot/sensors/ultrasonic/ultrasonic.c: 25: Std_ReturnType Get_Distance(const ultrasonic
      +                          _config_st* ultrasonic_object,const timer0_config_st *_tmr0_config,float32* distance);Ro
      +                          bot/sensors/ultrasonic/ultrasonic.c: 26: {;Robot/sensors/ultrasonic/ultrasonic.c: 27:   
      +                            logic_et logic=0;
  9688  003316  0E00               	movlw	0
  9689  003318  0100               	movlb	0	; () banked
  9690  00331A  6F8B               	movwf	Get_Distance@logic& (0+255),b
  9691                           
  9692                           ;Robot/sensors/ultrasonic/ultrasonic.c: 28:     uint16 timer_val=0;
  9693  00331C  0E00               	movlw	0
  9694  00331E  6F8A               	movwf	(Get_Distance@timer_val+1)& (0+255),b
  9695  003320  0E00               	movlw	0
  9696  003322  6F89               	movwf	Get_Distance@timer_val& (0+255),b
  9697  003324                     
  9698                           ; BSR set to: 0
  9699                           ;Robot/sensors/ultrasonic/ultrasonic.c: 30:     if ( ((void*)0)==distance)
  9700  003324  5187               	movf	Get_Distance@distance& (0+255),w,b
  9701  003326  1188               	iorwf	(Get_Distance@distance+1)& (0+255),w,b
  9702  003328  A4D8               	btfss	status,2,c
  9703  00332A  EF99  F019         	goto	u12201
  9704  00332E  EF9B  F019         	goto	u12200
  9705  003332                     u12201:
  9706  003332  EF9D  F019         	goto	l1764
  9707  003336                     u12200:
  9708  003336                     
  9709                           ; BSR set to: 0
  9710                           ;Robot/sensors/ultrasonic/ultrasonic.c: 34:     }
  9711  003336  EF11  F01A         	goto	l1772
  9712  00333A                     l1764:
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;Robot/sensors/ultrasonic/ultrasonic.c: 36:     {;Robot/sensors/ultrasonic/ultrasonic.c:
      +                           37:         (T0CONbits.TMR0ON = 0 );
  9716  00333A  9ED5               	bcf	213,7,c	;volatile
  9717  00333C                     
  9718                           ; BSR set to: 0
  9719                           ;Robot/sensors/ultrasonic/ultrasonic.c: 38:         HAL_Timer0_Write_Val(_tmr0_config ,0
      +                          );
  9720  00333C  C085  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Write_Val@_tmr0_config
  9721  003340  C086  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Write_Val@_tmr0_config+1
  9722  003344  0E00               	movlw	0
  9723  003346  6E21               	movwf	(HAL_Timer0_Write_Val@val+1)^0,c
  9724  003348  0E00               	movlw	0
  9725  00334A  6E20               	movwf	HAL_Timer0_Write_Val@val^0,c
  9726  00334C  EC08  F027         	call	_HAL_Timer0_Write_Val	;wreg free
  9727  003350                     
  9728                           ;Robot/sensors/ultrasonic/ultrasonic.c: 39:         send_trig_pulse(ultrasonic_object);
  9729  003350  C083  F022         	movff	Get_Distance@ultrasonic_object,send_trig_pulse@ultrasonic_object
  9730  003354  C084  F023         	movff	Get_Distance@ultrasonic_object+1,send_trig_pulse@ultrasonic_object+1
  9731  003358  ECDC  F026         	call	_send_trig_pulse	;wreg free
  9732                           
  9733                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
  9734  00335C  EFBC  F019         	goto	l11380
  9735  003360                     l11378:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;Robot/sensors/ultrasonic/ultrasonic.c: 41:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 42:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
  9739  003360  0E01               	movlw	1
  9740  003362  2583               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
  9741  003364  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
  9742  003366  0E00               	movlw	0
  9743  003368  2184               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
  9744  00336A  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
  9745  00336C  0E8B               	movlw	low Get_Distance@logic
  9746  00336E  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
  9747  003370  0E00               	movlw	high Get_Distance@logic
  9748  003372  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
  9749  003374  ECE0  F01F         	call	_GPIO_Pin_Read_Logic	;wreg free
  9750  003378                     l11380:
  9751                           
  9752                           ;Robot/sensors/ultrasonic/ultrasonic.c: 40:         while(!logic)
  9753  003378  0100               	movlb	0	; () banked
  9754  00337A  518B               	movf	Get_Distance@logic& (0+255),w,b
  9755  00337C  B4D8               	btfsc	status,2,c
  9756  00337E  EFC3  F019         	goto	u12211
  9757  003382  EFC5  F019         	goto	u12210
  9758  003386                     u12211:
  9759  003386  EFB0  F019         	goto	l11378
  9760  00338A                     u12210:
  9761  00338A                     
  9762                           ; BSR set to: 0
  9763                           ;Robot/sensors/ultrasonic/ultrasonic.c: 44:         (T0CONbits.TMR0ON = 1 );
  9764  00338A  8ED5               	bsf	213,7,c	;volatile
  9765                           
  9766                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
  9767  00338C  EFD4  F019         	goto	l11384
  9768  003390                     l11382:
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;Robot/sensors/ultrasonic/ultrasonic.c: 46:         {;Robot/sensors/ultrasonic/ultrasoni
      +                          c.c: 47:            GPIO_Pin_Read_Logic(&(ultrasonic_object->echo_pin),&logic);
  9772  003390  0E01               	movlw	1
  9773  003392  2583               	addwf	Get_Distance@ultrasonic_object& (0+255),w,b
  9774  003394  6E1E               	movwf	GPIO_Pin_Read_Logic@_pin_config^0,c
  9775  003396  0E00               	movlw	0
  9776  003398  2184               	addwfc	(Get_Distance@ultrasonic_object+1)& (0+255),w,b
  9777  00339A  6E1F               	movwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,c
  9778  00339C  0E8B               	movlw	low Get_Distance@logic
  9779  00339E  6E20               	movwf	GPIO_Pin_Read_Logic@logic^0,c
  9780  0033A0  0E00               	movlw	high Get_Distance@logic
  9781  0033A2  6E21               	movwf	(GPIO_Pin_Read_Logic@logic+1)^0,c
  9782  0033A4  ECE0  F01F         	call	_GPIO_Pin_Read_Logic	;wreg free
  9783  0033A8                     l11384:
  9784                           
  9785                           ;Robot/sensors/ultrasonic/ultrasonic.c: 45:         while(logic)
  9786  0033A8  0100               	movlb	0	; () banked
  9787  0033AA  518B               	movf	Get_Distance@logic& (0+255),w,b
  9788  0033AC  A4D8               	btfss	status,2,c
  9789  0033AE  EFDB  F019         	goto	u12221
  9790  0033B2  EFDD  F019         	goto	u12220
  9791  0033B6                     u12221:
  9792  0033B6  EFC8  F019         	goto	l11382
  9793  0033BA                     u12220:
  9794  0033BA                     
  9795                           ; BSR set to: 0
  9796                           ;Robot/sensors/ultrasonic/ultrasonic.c: 49:         (T0CONbits.TMR0ON = 0 );
  9797  0033BA  9ED5               	bcf	213,7,c	;volatile
  9798  0033BC                     
  9799                           ; BSR set to: 0
  9800                           ;Robot/sensors/ultrasonic/ultrasonic.c: 50:         HAL_Timer0_Read_Val(_tmr0_config ,&t
      +                          imer_val);
  9801  0033BC  C085  F01E         	movff	Get_Distance@_tmr0_config,HAL_Timer0_Read_Val@_tmr0_config
  9802  0033C0  C086  F01F         	movff	Get_Distance@_tmr0_config+1,HAL_Timer0_Read_Val@_tmr0_config+1
  9803  0033C4  0E89               	movlw	low Get_Distance@timer_val
  9804  0033C6  6E20               	movwf	HAL_Timer0_Read_Val@result^0,c
  9805  0033C8  0E00               	movlw	high Get_Distance@timer_val
  9806  0033CA  6E21               	movwf	(HAL_Timer0_Read_Val@result+1)^0,c
  9807  0033CC  EC2F  F01F         	call	_HAL_Timer0_Read_Val	;wreg free
  9808                           
  9809                           ;Robot/sensors/ultrasonic/ultrasonic.c: 52:         *distance=timer_val/(float32)58.8;
  9810  0033D0  C089  F01E         	movff	Get_Distance@timer_val,___xxtofl@val
  9811  0033D4  C08A  F01F         	movff	Get_Distance@timer_val+1,___xxtofl@val+1
  9812  0033D8  6A20               	clrf	(___xxtofl@val+2)^0,c
  9813  0033DA  6A21               	clrf	(___xxtofl@val+3)^0,c
  9814  0033DC  0E00               	movlw	0
  9815  0033DE  EC04  F014         	call	___xxtofl
  9816  0033E2  C01E  F06A         	movff	?___xxtofl,___fldiv@b
  9817  0033E6  C01F  F06B         	movff	?___xxtofl+1,___fldiv@b+1
  9818  0033EA  C020  F06C         	movff	?___xxtofl+2,___fldiv@b+2
  9819  0033EE  C021  F06D         	movff	?___xxtofl+3,___fldiv@b+3
  9820  0033F2  0E33               	movlw	51
  9821  0033F4  0100               	movlb	0	; () banked
  9822  0033F6  6F6E               	movwf	___fldiv@a& (0+255),b
  9823  0033F8  0E33               	movlw	51
  9824  0033FA  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  9825  0033FC  0E6B               	movlw	107
  9826  0033FE  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  9827  003400  0E42               	movlw	66
  9828  003402  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  9829  003404  ECB3  F00E         	call	___fldiv	;wreg free
  9830  003408  C087  FFD9         	movff	Get_Distance@distance,fsr2l
  9831  00340C  C088  FFDA         	movff	Get_Distance@distance+1,fsr2h
  9832  003410  0100               	movlb	0	; () banked
  9833  003412  C06A  FFDE         	movff	?___fldiv,postinc2
  9834  003416  C06B  FFDE         	movff	?___fldiv+1,postinc2
  9835  00341A  C06C  FFDE         	movff	?___fldiv+2,postinc2
  9836  00341E  C06D  FFDE         	movff	?___fldiv+3,postinc2
  9837  003422                     l1772:
  9838                           
  9839                           ; BSR set to: 0
  9840  003422  0012               	return		;funcret
  9841  003424                     __end_of_Get_Distance:
  9842                           	callstack 0
  9843                           
  9844 ;; *************** function _send_trig_pulse *****************
  9845 ;; Defined at:
  9846 ;;		line 57 in file "Robot/sensors/ultrasonic/ultrasonic.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  ultrasonic_o    2   33[COMRAM] PTR const struct .
  9849 ;;		 -> ultrasonic(2), 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9865 ;;Total ram usage:        2 bytes
  9866 ;; Hardware stack levels used: 1
  9867 ;; Hardware stack levels required when called: 9
  9868 ;; This function calls:
  9869 ;;		_GPIO_Pin_Write_Logic
  9870 ;; This function is called by:
  9871 ;;		_Get_Distance
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text53
  9876  004DB8                     __ptext53:
  9877                           	callstack 0
  9878  004DB8                     _send_trig_pulse:
  9879                           	callstack 20
  9880  004DB8                     
  9881                           ;Robot/sensors/ultrasonic/ultrasonic.c: 57: static void send_trig_pulse(const ultrasonic
      +                          _config_st* ultrasonic_object);Robot/sensors/ultrasonic/ultrasonic.c: 58: {;Robot/sensor
      +                          s/ultrasonic/ultrasonic.c: 59:     GPIO_Pin_Write_Logic(&(ultrasonic_object->trig_pin),G
      +                          PIO_HIGH);
  9882  004DB8  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
  9883  004DBC  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
  9884  004DC0  0E01               	movlw	1
  9885  004DC2  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9886  004DC4  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  9887  004DC8                     
  9888                           ;Robot/sensors/ultrasonic/ultrasonic.c: 60:     _delay((unsigned long)((10)*(8000000/400
      +                          0000.0)));
  9889  004DC8  0E06               	movlw	6
  9890  004DCA                     u12727:
  9891  004DCA  2EE8               	decfsz	wreg,f,c
  9892  004DCC  D7FE               	bra	u12727
  9893  004DCE  F000 F000          	nop2	
  9894  004DD2                     
  9895                           ;Robot/sensors/ultrasonic/ultrasonic.c: 61:     GPIO_Pin_Write_Logic(&(ultrasonic_object
      +                          ->trig_pin),GPIO_LOW);
  9896  004DD2  C022  F01E         	movff	send_trig_pulse@ultrasonic_object,GPIO_Pin_Write_Logic@_pin_config
  9897  004DD6  C023  F01F         	movff	send_trig_pulse@ultrasonic_object+1,GPIO_Pin_Write_Logic@_pin_config+1
  9898  004DDA  0E00               	movlw	0
  9899  004DDC  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
  9900  004DDE  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
  9901  004DE2  0012               	return		;funcret
  9902  004DE4                     __end_of_send_trig_pulse:
  9903                           	callstack 0
  9904                           
  9905 ;; *************** function ___xxtofl *****************
  9906 ;; Defined at:
  9907 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  sign            1    wreg     unsigned char 
  9910 ;;  val             4   29[COMRAM] long 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  sign            1    4[BANK0 ] unsigned char 
  9913 ;;  arg             4    6[BANK0 ] unsigned long 
  9914 ;;  exp             1    5[BANK0 ] unsigned char 
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  4   29[COMRAM] unsigned char 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;Total ram usage:       14 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; Hardware stack levels required when called: 8
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_Servo_SetAngle
  9935 ;;		_CCP_PWM_Set_Duty
  9936 ;;		_async_config_baud_rate_gen
  9937 ;;		_I2C_Master_Mode_Clock_Configurations
  9938 ;;		_Get_Distance
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           	psect	text54
  9943  002808                     __ptext54:
  9944                           	callstack 0
  9945  002808                     ___xxtofl:
  9946                           	callstack 17
  9947                           
  9948                           ;incstack = 0
  9949                           ;___xxtofl@sign stored from wreg
  9950  002808  0100               	movlb	0	; () banked
  9951  00280A  6F64               	movwf	___xxtofl@sign& (0+255),b
  9952  00280C  0100               	movlb	0	; () banked
  9953  00280E  5164               	movf	___xxtofl@sign& (0+255),w,b
  9954  002810  B4D8               	btfsc	status,2,c
  9955  002812  EF0D  F014         	goto	u10501
  9956  002816  EF0F  F014         	goto	u10500
  9957  00281A                     u10501:
  9958  00281A  EF31  F014         	goto	l2647
  9959  00281E                     u10500:
  9960  00281E                     
  9961                           ; BSR set to: 0
  9962  00281E  BE21               	btfsc	(___xxtofl@val+3)^0,7,c
  9963  002820  EF16  F014         	goto	u10510
  9964  002824  EF14  F014         	goto	u10511
  9965  002828                     u10511:
  9966  002828  EF31  F014         	goto	l2647
  9967  00282C                     u10510:
  9968  00282C                     
  9969                           ; BSR set to: 0
  9970  00282C  C01E  F060         	movff	___xxtofl@val,??___xxtofl
  9971  002830  C01F  F061         	movff	___xxtofl@val+1,??___xxtofl+1
  9972  002834  C020  F062         	movff	___xxtofl@val+2,??___xxtofl+2
  9973  002838  C021  F063         	movff	___xxtofl@val+3,??___xxtofl+3
  9974  00283C  1F60               	comf	??___xxtofl& (0+255),f,b
  9975  00283E  1F61               	comf	(??___xxtofl+1)& (0+255),f,b
  9976  002840  1F62               	comf	(??___xxtofl+2)& (0+255),f,b
  9977  002842  1F63               	comf	(??___xxtofl+3)& (0+255),f,b
  9978  002844  2B60               	incf	??___xxtofl& (0+255),f,b
  9979  002846  0E00               	movlw	0
  9980  002848  2361               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9981  00284A  2362               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9982  00284C  2363               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9983  00284E  C060  F066         	movff	??___xxtofl,___xxtofl@arg
  9984  002852  C061  F067         	movff	??___xxtofl+1,___xxtofl@arg+1
  9985  002856  C062  F068         	movff	??___xxtofl+2,___xxtofl@arg+2
  9986  00285A  C063  F069         	movff	??___xxtofl+3,___xxtofl@arg+3
  9987  00285E  EF39  F014         	goto	l10078
  9988  002862                     l2647:
  9989                           
  9990                           ; BSR set to: 0
  9991  002862  C01E  F066         	movff	___xxtofl@val,___xxtofl@arg
  9992  002866  C01F  F067         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9993  00286A  C020  F068         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9994  00286E  C021  F069         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9995  002872                     l10078:
  9996                           
  9997                           ; BSR set to: 0
  9998  002872  501E               	movf	___xxtofl@val^0,w,c
  9999  002874  101F               	iorwf	(___xxtofl@val+1)^0,w,c
 10000  002876  1020               	iorwf	(___xxtofl@val+2)^0,w,c
 10001  002878  1021               	iorwf	(___xxtofl@val+3)^0,w,c
 10002  00287A  A4D8               	btfss	status,2,c
 10003  00287C  EF42  F014         	goto	u10521
 10004  002880  EF44  F014         	goto	u10520
 10005  002884                     u10521:
 10006  002884  EF4E  F014         	goto	l10084
 10007  002888                     u10520:
 10008  002888                     
 10009                           ; BSR set to: 0
 10010  002888  0E00               	movlw	0
 10011  00288A  6E1E               	movwf	?___xxtofl^0,c
 10012  00288C  0E00               	movlw	0
 10013  00288E  6E1F               	movwf	(?___xxtofl+1)^0,c
 10014  002890  0E00               	movlw	0
 10015  002892  6E20               	movwf	(?___xxtofl+2)^0,c
 10016  002894  0E00               	movlw	0
 10017  002896  6E21               	movwf	(?___xxtofl+3)^0,c
 10018  002898  EFDF  F014         	goto	l2650
 10019  00289C                     l10084:
 10020                           
 10021                           ; BSR set to: 0
 10022  00289C  0E96               	movlw	150
 10023  00289E  6F65               	movwf	___xxtofl@exp& (0+255),b
 10024  0028A0  EF58  F014         	goto	l10088
 10025  0028A4                     l10086:
 10026                           
 10027                           ; BSR set to: 0
 10028  0028A4  2B65               	incf	___xxtofl@exp& (0+255),f,b
 10029  0028A6  90D8               	bcf	status,0,c
 10030  0028A8  3369               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10031  0028AA  3368               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10032  0028AC  3367               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10033  0028AE  3366               	rrcf	___xxtofl@arg& (0+255),f,b
 10034  0028B0                     l10088:
 10035                           
 10036                           ; BSR set to: 0
 10037  0028B0  0E00               	movlw	0
 10038  0028B2  1566               	andwf	___xxtofl@arg& (0+255),w,b
 10039  0028B4  6F60               	movwf	??___xxtofl& (0+255),b
 10040  0028B6  0E00               	movlw	0
 10041  0028B8  1567               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10042  0028BA  6F61               	movwf	(??___xxtofl+1)& (0+255),b
 10043  0028BC  0E00               	movlw	0
 10044  0028BE  1568               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10045  0028C0  6F62               	movwf	(??___xxtofl+2)& (0+255),b
 10046  0028C2  0EFE               	movlw	254
 10047  0028C4  1569               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10048  0028C6  6F63               	movwf	(??___xxtofl+3)& (0+255),b
 10049  0028C8  5160               	movf	??___xxtofl& (0+255),w,b
 10050  0028CA  1161               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10051  0028CC  1162               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10052  0028CE  1163               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10053  0028D0  A4D8               	btfss	status,2,c
 10054  0028D2  EF6D  F014         	goto	u10531
 10055  0028D6  EF6F  F014         	goto	u10530
 10056  0028DA                     u10531:
 10057  0028DA  EF52  F014         	goto	l10086
 10058  0028DE                     u10530:
 10059  0028DE  EF7D  F014         	goto	l2654
 10060  0028E2                     l10090:
 10061                           
 10062                           ; BSR set to: 0
 10063  0028E2  2B65               	incf	___xxtofl@exp& (0+255),f,b
 10064  0028E4                     
 10065                           ; BSR set to: 0
 10066  0028E4  0E01               	movlw	1
 10067  0028E6  2766               	addwf	___xxtofl@arg& (0+255),f,b
 10068  0028E8  0E00               	movlw	0
 10069  0028EA  2367               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10070  0028EC  2368               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10071  0028EE  2369               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10072  0028F0                     
 10073                           ; BSR set to: 0
 10074  0028F0  90D8               	bcf	status,0,c
 10075  0028F2  3369               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10076  0028F4  3368               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10077  0028F6  3367               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10078  0028F8  3366               	rrcf	___xxtofl@arg& (0+255),f,b
 10079  0028FA                     l2654:
 10080                           
 10081                           ; BSR set to: 0
 10082  0028FA  0E00               	movlw	0
 10083  0028FC  1566               	andwf	___xxtofl@arg& (0+255),w,b
 10084  0028FE  6F60               	movwf	??___xxtofl& (0+255),b
 10085  002900  0E00               	movlw	0
 10086  002902  1567               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10087  002904  6F61               	movwf	(??___xxtofl+1)& (0+255),b
 10088  002906  0E00               	movlw	0
 10089  002908  1568               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10090  00290A  6F62               	movwf	(??___xxtofl+2)& (0+255),b
 10091  00290C  0EFF               	movlw	255
 10092  00290E  1569               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10093  002910  6F63               	movwf	(??___xxtofl+3)& (0+255),b
 10094  002912  5160               	movf	??___xxtofl& (0+255),w,b
 10095  002914  1161               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10096  002916  1162               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10097  002918  1163               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10098  00291A  A4D8               	btfss	status,2,c
 10099  00291C  EF92  F014         	goto	u10541
 10100  002920  EF94  F014         	goto	u10540
 10101  002924                     u10541:
 10102  002924  EF71  F014         	goto	l10090
 10103  002928                     u10540:
 10104  002928  EF9C  F014         	goto	l10098
 10105  00292C                     l10096:
 10106                           
 10107                           ; BSR set to: 0
 10108  00292C  0765               	decf	___xxtofl@exp& (0+255),f,b
 10109  00292E  90D8               	bcf	status,0,c
 10110  002930  3766               	rlcf	___xxtofl@arg& (0+255),f,b
 10111  002932  3767               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10112  002934  3768               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10113  002936  3769               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10114  002938                     l10098:
 10115                           
 10116                           ; BSR set to: 0
 10117  002938  BF68               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10118  00293A  EFA1  F014         	goto	u10551
 10119  00293E  EFA3  F014         	goto	u10550
 10120  002942                     u10551:
 10121  002942  EFAB  F014         	goto	l2661
 10122  002946                     u10550:
 10123  002946                     
 10124                           ; BSR set to: 0
 10125  002946  0E02               	movlw	2
 10126  002948  6165               	cpfslt	___xxtofl@exp& (0+255),b
 10127  00294A  EFA9  F014         	goto	u10561
 10128  00294E  EFAB  F014         	goto	u10560
 10129  002952                     u10561:
 10130  002952  EF96  F014         	goto	l10096
 10131  002956                     u10560:
 10132  002956                     l2661:
 10133                           
 10134                           ; BSR set to: 0
 10135  002956  B165               	btfsc	___xxtofl@exp& (0+255),0,b
 10136  002958  EFB0  F014         	goto	u10571
 10137  00295C  EFB2  F014         	goto	u10570
 10138  002960                     u10571:
 10139  002960  EFB3  F014         	goto	l10104
 10140  002964                     u10570:
 10141  002964                     
 10142                           ; BSR set to: 0
 10143  002964  9F68               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 10144  002966                     l10104:
 10145                           
 10146                           ; BSR set to: 0
 10147  002966  90D8               	bcf	status,0,c
 10148  002968  3365               	rrcf	___xxtofl@exp& (0+255),f,b
 10149  00296A                     
 10150                           ; BSR set to: 0
 10151  00296A  C065  F060         	movff	___xxtofl@exp,??___xxtofl
 10152  00296E  6B61               	clrf	(??___xxtofl+1)& (0+255),b
 10153  002970  6B62               	clrf	(??___xxtofl+2)& (0+255),b
 10154  002972  6B63               	clrf	(??___xxtofl+3)& (0+255),b
 10155  002974  C060  F063         	movff	??___xxtofl,??___xxtofl+3
 10156  002978  6B62               	clrf	(??___xxtofl+2)& (0+255),b
 10157  00297A  6B61               	clrf	(??___xxtofl+1)& (0+255),b
 10158  00297C  6B60               	clrf	??___xxtofl& (0+255),b
 10159  00297E  5160               	movf	??___xxtofl& (0+255),w,b
 10160  002980  1366               	iorwf	___xxtofl@arg& (0+255),f,b
 10161  002982  5161               	movf	(??___xxtofl+1)& (0+255),w,b
 10162  002984  1367               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10163  002986  5162               	movf	(??___xxtofl+2)& (0+255),w,b
 10164  002988  1368               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10165  00298A  5163               	movf	(??___xxtofl+3)& (0+255),w,b
 10166  00298C  1369               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10167  00298E                     
 10168                           ; BSR set to: 0
 10169  00298E  5164               	movf	___xxtofl@sign& (0+255),w,b
 10170  002990  B4D8               	btfsc	status,2,c
 10171  002992  EFCD  F014         	goto	u10581
 10172  002996  EFCF  F014         	goto	u10580
 10173  00299A                     u10581:
 10174  00299A  EFD7  F014         	goto	l10114
 10175  00299E                     u10580:
 10176  00299E                     
 10177                           ; BSR set to: 0
 10178  00299E  BE21               	btfsc	(___xxtofl@val+3)^0,7,c
 10179  0029A0  EFD6  F014         	goto	u10590
 10180  0029A4  EFD4  F014         	goto	u10591
 10181  0029A8                     u10591:
 10182  0029A8  EFD7  F014         	goto	l10114
 10183  0029AC                     u10590:
 10184  0029AC                     
 10185                           ; BSR set to: 0
 10186  0029AC  8F69               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10187  0029AE                     l10114:
 10188                           
 10189                           ; BSR set to: 0
 10190  0029AE  C066  F01E         	movff	___xxtofl@arg,?___xxtofl
 10191  0029B2  C067  F01F         	movff	___xxtofl@arg+1,?___xxtofl+1
 10192  0029B6  C068  F020         	movff	___xxtofl@arg+2,?___xxtofl+2
 10193  0029BA  C069  F021         	movff	___xxtofl@arg+3,?___xxtofl+3
 10194  0029BE                     l2650:
 10195                           
 10196                           ; BSR set to: 0
 10197  0029BE  0012               	return		;funcret
 10198  0029C0                     __end_of___xxtofl:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function ___fldiv *****************
 10202 ;; Defined at:
 10203 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  b               4   10[BANK0 ] unsigned char 
 10206 ;;  a               4   14[BANK0 ] unsigned char 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  grs             4   29[BANK0 ] unsigned long 
 10209 ;;  rem             4   22[BANK0 ] unsigned long 
 10210 ;;  new_exp         2   27[BANK0 ] short 
 10211 ;;  aexp            1   34[BANK0 ] unsigned char 
 10212 ;;  bexp            1   33[BANK0 ] unsigned char 
 10213 ;;  sign            1   26[BANK0 ] unsigned char 
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  4   10[BANK0 ] unsigned char 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10223 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10227 ;;Total ram usage:       25 bytes
 10228 ;; Hardware stack levels used: 1
 10229 ;; Hardware stack levels required when called: 8
 10230 ;; This function calls:
 10231 ;;		Nothing
 10232 ;; This function is called by:
 10233 ;;		_CCP_PWM_Set_Duty
 10234 ;;		_async_config_baud_rate_gen
 10235 ;;		_I2C_Master_Mode_Clock_Configurations
 10236 ;;		_Get_Distance
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240                           	psect	text55
 10241  001D66                     __ptext55:
 10242                           	callstack 0
 10243  001D66                     ___fldiv:
 10244                           	callstack 17
 10245  001D66  0100               	movlb	0	; () banked
 10246  001D68  516D               	movf	(___fldiv@b+3)& (0+255),w,b
 10247  001D6A  0B80               	andlw	128
 10248  001D6C  6F7A               	movwf	___fldiv@sign& (0+255),b
 10249  001D6E  516D               	movf	(___fldiv@b+3)& (0+255),w,b
 10250  001D70  256D               	addwf	(___fldiv@b+3)& (0+255),w,b
 10251  001D72  6F81               	movwf	___fldiv@bexp& (0+255),b
 10252  001D74                     
 10253                           ; BSR set to: 0
 10254  001D74  AF6C               	btfss	(___fldiv@b+2)& (0+255),7,b
 10255  001D76  EFBF  F00E         	goto	u10201
 10256  001D7A  EFC1  F00E         	goto	u10200
 10257  001D7E                     u10201:
 10258  001D7E  EFC2  F00E         	goto	l9896
 10259  001D82                     u10200:
 10260  001D82                     
 10261                           ; BSR set to: 0
 10262  001D82  8181               	bsf	___fldiv@bexp& (0+255),0,b
 10263  001D84                     l9896:
 10264                           
 10265                           ; BSR set to: 0
 10266  001D84  5181               	movf	___fldiv@bexp& (0+255),w,b
 10267  001D86  B4D8               	btfsc	status,2,c
 10268  001D88  EFC8  F00E         	goto	u10211
 10269  001D8C  EFCA  F00E         	goto	u10210
 10270  001D90                     u10211:
 10271  001D90  EFDF  F00E         	goto	l9906
 10272  001D94                     u10210:
 10273  001D94                     
 10274                           ; BSR set to: 0
 10275  001D94  2981               	incf	___fldiv@bexp& (0+255),w,b
 10276  001D96  A4D8               	btfss	status,2,c
 10277  001D98  EFD0  F00E         	goto	u10221
 10278  001D9C  EFD2  F00E         	goto	u10220
 10279  001DA0                     u10221:
 10280  001DA0  EFDA  F00E         	goto	l9902
 10281  001DA4                     u10220:
 10282  001DA4                     
 10283                           ; BSR set to: 0
 10284  001DA4  0E00               	movlw	0
 10285  001DA6  6F6A               	movwf	___fldiv@b& (0+255),b
 10286  001DA8  0E00               	movlw	0
 10287  001DAA  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10288  001DAC  0E00               	movlw	0
 10289  001DAE  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10290  001DB0  0E00               	movlw	0
 10291  001DB2  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10292  001DB4                     l9902:
 10293                           
 10294                           ; BSR set to: 0
 10295  001DB4  8F6C               	bsf	(___fldiv@b+2)& (0+255),7,b
 10296  001DB6                     
 10297                           ; BSR set to: 0
 10298  001DB6  0E00               	movlw	0
 10299  001DB8  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10300  001DBA  EFE7  F00E         	goto	l9908
 10301  001DBE                     l9906:
 10302                           
 10303                           ; BSR set to: 0
 10304  001DBE  0E00               	movlw	0
 10305  001DC0  6F6A               	movwf	___fldiv@b& (0+255),b
 10306  001DC2  0E00               	movlw	0
 10307  001DC4  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10308  001DC6  0E00               	movlw	0
 10309  001DC8  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10310  001DCA  0E00               	movlw	0
 10311  001DCC  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10312  001DCE                     l9908:
 10313                           
 10314                           ; BSR set to: 0
 10315  001DCE  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 10316  001DD0  0B80               	andlw	128
 10317  001DD2  1B7A               	xorwf	___fldiv@sign& (0+255),f,b
 10318  001DD4                     
 10319                           ; BSR set to: 0
 10320  001DD4  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 10321  001DD6  2571               	addwf	(___fldiv@a+3)& (0+255),w,b
 10322  001DD8  6F82               	movwf	___fldiv@aexp& (0+255),b
 10323  001DDA                     
 10324                           ; BSR set to: 0
 10325  001DDA  AF70               	btfss	(___fldiv@a+2)& (0+255),7,b
 10326  001DDC  EFF2  F00E         	goto	u10231
 10327  001DE0  EFF4  F00E         	goto	u10230
 10328  001DE4                     u10231:
 10329  001DE4  EFF5  F00E         	goto	l9916
 10330  001DE8                     u10230:
 10331  001DE8                     
 10332                           ; BSR set to: 0
 10333  001DE8  8182               	bsf	___fldiv@aexp& (0+255),0,b
 10334  001DEA                     l9916:
 10335                           
 10336                           ; BSR set to: 0
 10337  001DEA  5182               	movf	___fldiv@aexp& (0+255),w,b
 10338  001DEC  B4D8               	btfsc	status,2,c
 10339  001DEE  EFFB  F00E         	goto	u10241
 10340  001DF2  EFFD  F00E         	goto	u10240
 10341  001DF6                     u10241:
 10342  001DF6  EF12  F00F         	goto	l9926
 10343  001DFA                     u10240:
 10344  001DFA                     
 10345                           ; BSR set to: 0
 10346  001DFA  2982               	incf	___fldiv@aexp& (0+255),w,b
 10347  001DFC  A4D8               	btfss	status,2,c
 10348  001DFE  EF03  F00F         	goto	u10251
 10349  001E02  EF05  F00F         	goto	u10250
 10350  001E06                     u10251:
 10351  001E06  EF0D  F00F         	goto	l9922
 10352  001E0A                     u10250:
 10353  001E0A                     
 10354                           ; BSR set to: 0
 10355  001E0A  0E00               	movlw	0
 10356  001E0C  6F6E               	movwf	___fldiv@a& (0+255),b
 10357  001E0E  0E00               	movlw	0
 10358  001E10  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
 10359  001E12  0E00               	movlw	0
 10360  001E14  6F70               	movwf	(___fldiv@a+2)& (0+255),b
 10361  001E16  0E00               	movlw	0
 10362  001E18  6F71               	movwf	(___fldiv@a+3)& (0+255),b
 10363  001E1A                     l9922:
 10364                           
 10365                           ; BSR set to: 0
 10366  001E1A  8F70               	bsf	(___fldiv@a+2)& (0+255),7,b
 10367  001E1C                     
 10368                           ; BSR set to: 0
 10369  001E1C  0E00               	movlw	0
 10370  001E1E  6F71               	movwf	(___fldiv@a+3)& (0+255),b
 10371  001E20  EF1A  F00F         	goto	l9928
 10372  001E24                     l9926:
 10373                           
 10374                           ; BSR set to: 0
 10375  001E24  0E00               	movlw	0
 10376  001E26  6F6E               	movwf	___fldiv@a& (0+255),b
 10377  001E28  0E00               	movlw	0
 10378  001E2A  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
 10379  001E2C  0E00               	movlw	0
 10380  001E2E  6F70               	movwf	(___fldiv@a+2)& (0+255),b
 10381  001E30  0E00               	movlw	0
 10382  001E32  6F71               	movwf	(___fldiv@a+3)& (0+255),b
 10383  001E34                     l9928:
 10384                           
 10385                           ; BSR set to: 0
 10386  001E34  516E               	movf	___fldiv@a& (0+255),w,b
 10387  001E36  116F               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10388  001E38  1170               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10389  001E3A  1171               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10390  001E3C  A4D8               	btfss	status,2,c
 10391  001E3E  EF23  F00F         	goto	u10261
 10392  001E42  EF25  F00F         	goto	u10260
 10393  001E46                     u10261:
 10394  001E46  EF3D  F00F         	goto	l9940
 10395  001E4A                     u10260:
 10396  001E4A                     
 10397                           ; BSR set to: 0
 10398  001E4A  0E00               	movlw	0
 10399  001E4C  6F6A               	movwf	___fldiv@b& (0+255),b
 10400  001E4E  0E00               	movlw	0
 10401  001E50  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10402  001E52  0E00               	movlw	0
 10403  001E54  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10404  001E56  0E00               	movlw	0
 10405  001E58  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10406  001E5A                     
 10407                           ; BSR set to: 0
 10408  001E5A  0E80               	movlw	128
 10409  001E5C  136C               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10410  001E5E  0E7F               	movlw	127
 10411  001E60  136D               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10412  001E62                     l9934:
 10413                           
 10414                           ; BSR set to: 0
 10415  001E62  517A               	movf	___fldiv@sign& (0+255),w,b
 10416  001E64  136D               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10417  001E66                     
 10418                           ; BSR set to: 0
 10419  001E66  C06A  F06A         	movff	___fldiv@b,?___fldiv
 10420  001E6A  C06B  F06B         	movff	___fldiv@b+1,?___fldiv+1
 10421  001E6E  C06C  F06C         	movff	___fldiv@b+2,?___fldiv+2
 10422  001E72  C06D  F06D         	movff	___fldiv@b+3,?___fldiv+3
 10423  001E76  EF80  F010         	goto	l2574
 10424  001E7A                     l9940:
 10425                           
 10426                           ; BSR set to: 0
 10427  001E7A  5181               	movf	___fldiv@bexp& (0+255),w,b
 10428  001E7C  A4D8               	btfss	status,2,c
 10429  001E7E  EF43  F00F         	goto	u10271
 10430  001E82  EF45  F00F         	goto	u10270
 10431  001E86                     u10271:
 10432  001E86  EF4F  F00F         	goto	l9948
 10433  001E8A                     u10270:
 10434  001E8A                     
 10435                           ; BSR set to: 0
 10436  001E8A  0E00               	movlw	0
 10437  001E8C  6F6A               	movwf	?___fldiv& (0+255),b
 10438  001E8E  0E00               	movlw	0
 10439  001E90  6F6B               	movwf	(?___fldiv+1)& (0+255),b
 10440  001E92  0E00               	movlw	0
 10441  001E94  6F6C               	movwf	(?___fldiv+2)& (0+255),b
 10442  001E96  0E00               	movlw	0
 10443  001E98  6F6D               	movwf	(?___fldiv+3)& (0+255),b
 10444  001E9A  EF80  F010         	goto	l2574
 10445  001E9E                     l9948:
 10446                           
 10447                           ; BSR set to: 0
 10448  001E9E  5182               	movf	___fldiv@aexp& (0+255),w,b
 10449  001EA0  C081  F072         	movff	___fldiv@bexp,??___fldiv
 10450  001EA4  6B73               	clrf	(??___fldiv+1)& (0+255),b
 10451  001EA6  5F72               	subwf	??___fldiv& (0+255),f,b
 10452  001EA8  0E00               	movlw	0
 10453  001EAA  5B73               	subwfb	(??___fldiv+1)& (0+255),f,b
 10454  001EAC  0E7F               	movlw	127
 10455  001EAE  2572               	addwf	??___fldiv& (0+255),w,b
 10456  001EB0  6F7B               	movwf	___fldiv@new_exp& (0+255),b
 10457  001EB2  0E00               	movlw	0
 10458  001EB4  2173               	addwfc	(??___fldiv+1)& (0+255),w,b
 10459  001EB6  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10460  001EB8                     
 10461                           ; BSR set to: 0
 10462  001EB8  C06A  F076         	movff	___fldiv@b,___fldiv@rem
 10463  001EBC  C06B  F077         	movff	___fldiv@b+1,___fldiv@rem+1
 10464  001EC0  C06C  F078         	movff	___fldiv@b+2,___fldiv@rem+2
 10465  001EC4  C06D  F079         	movff	___fldiv@b+3,___fldiv@rem+3
 10466  001EC8                     
 10467                           ; BSR set to: 0
 10468  001EC8  0E00               	movlw	0
 10469  001ECA  6F6A               	movwf	___fldiv@b& (0+255),b
 10470  001ECC  0E00               	movlw	0
 10471  001ECE  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10472  001ED0  0E00               	movlw	0
 10473  001ED2  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10474  001ED4  0E00               	movlw	0
 10475  001ED6  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10476  001ED8                     
 10477                           ; BSR set to: 0
 10478  001ED8  0E00               	movlw	0
 10479  001EDA  6F7D               	movwf	___fldiv@grs& (0+255),b
 10480  001EDC  0E00               	movlw	0
 10481  001EDE  6F7E               	movwf	(___fldiv@grs+1)& (0+255),b
 10482  001EE0  0E00               	movlw	0
 10483  001EE2  6F7F               	movwf	(___fldiv@grs+2)& (0+255),b
 10484  001EE4  0E00               	movlw	0
 10485  001EE6  6F80               	movwf	(___fldiv@grs+3)& (0+255),b
 10486  001EE8                     
 10487                           ; BSR set to: 0
 10488  001EE8  0E00               	movlw	0
 10489  001EEA  6F82               	movwf	___fldiv@aexp& (0+255),b
 10490  001EEC  EFB0  F00F         	goto	l2576
 10491  001EF0                     l9958:
 10492                           
 10493                           ; BSR set to: 0
 10494  001EF0  5182               	movf	___fldiv@aexp& (0+255),w,b
 10495  001EF2  B4D8               	btfsc	status,2,c
 10496  001EF4  EF7E  F00F         	goto	u10281
 10497  001EF8  EF80  F00F         	goto	u10280
 10498  001EFC                     u10281:
 10499  001EFC  EF97  F00F         	goto	l9966
 10500  001F00                     u10280:
 10501  001F00                     
 10502                           ; BSR set to: 0
 10503  001F00  90D8               	bcf	status,0,c
 10504  001F02  3776               	rlcf	___fldiv@rem& (0+255),f,b
 10505  001F04  3777               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10506  001F06  3778               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10507  001F08  3779               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10508  001F0A  90D8               	bcf	status,0,c
 10509  001F0C  376A               	rlcf	___fldiv@b& (0+255),f,b
 10510  001F0E  376B               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10511  001F10  376C               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10512  001F12  376D               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10513  001F14                     
 10514                           ; BSR set to: 0
 10515  001F14  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10516  001F16  EF8F  F00F         	goto	u10291
 10517  001F1A  EF91  F00F         	goto	u10290
 10518  001F1E                     u10291:
 10519  001F1E  EF92  F00F         	goto	l2579
 10520  001F22                     u10290:
 10521  001F22                     
 10522                           ; BSR set to: 0
 10523  001F22  816A               	bsf	___fldiv@b& (0+255),0,b
 10524  001F24                     l2579:
 10525                           
 10526                           ; BSR set to: 0
 10527  001F24  90D8               	bcf	status,0,c
 10528  001F26  377D               	rlcf	___fldiv@grs& (0+255),f,b
 10529  001F28  377E               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10530  001F2A  377F               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10531  001F2C  3780               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10532  001F2E                     l9966:
 10533                           
 10534                           ; BSR set to: 0
 10535  001F2E  516E               	movf	___fldiv@a& (0+255),w,b
 10536  001F30  5D76               	subwf	___fldiv@rem& (0+255),w,b
 10537  001F32  516F               	movf	(___fldiv@a+1)& (0+255),w,b
 10538  001F34  5977               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10539  001F36  5170               	movf	(___fldiv@a+2)& (0+255),w,b
 10540  001F38  5978               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10541  001F3A  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 10542  001F3C  5979               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10543  001F3E  A0D8               	btfss	status,0,c
 10544  001F40  EFA4  F00F         	goto	u10301
 10545  001F44  EFA6  F00F         	goto	u10300
 10546  001F48                     u10301:
 10547  001F48  EFAF  F00F         	goto	l9972
 10548  001F4C                     u10300:
 10549  001F4C                     
 10550                           ; BSR set to: 0
 10551  001F4C  8D80               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10552  001F4E                     
 10553                           ; BSR set to: 0
 10554  001F4E  516E               	movf	___fldiv@a& (0+255),w,b
 10555  001F50  5F76               	subwf	___fldiv@rem& (0+255),f,b
 10556  001F52  516F               	movf	(___fldiv@a+1)& (0+255),w,b
 10557  001F54  5B77               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10558  001F56  5170               	movf	(___fldiv@a+2)& (0+255),w,b
 10559  001F58  5B78               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10560  001F5A  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 10561  001F5C  5B79               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10562  001F5E                     l9972:
 10563                           
 10564                           ; BSR set to: 0
 10565  001F5E  2B82               	incf	___fldiv@aexp& (0+255),f,b
 10566  001F60                     l2576:
 10567                           
 10568                           ; BSR set to: 0
 10569  001F60  0E19               	movlw	25
 10570  001F62  6582               	cpfsgt	___fldiv@aexp& (0+255),b
 10571  001F64  EFB6  F00F         	goto	u10311
 10572  001F68  EFB8  F00F         	goto	u10310
 10573  001F6C                     u10311:
 10574  001F6C  EF78  F00F         	goto	l9958
 10575  001F70                     u10310:
 10576  001F70                     
 10577                           ; BSR set to: 0
 10578  001F70  5176               	movf	___fldiv@rem& (0+255),w,b
 10579  001F72  1177               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10580  001F74  1178               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10581  001F76  1179               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10582  001F78  B4D8               	btfsc	status,2,c
 10583  001F7A  EFC1  F00F         	goto	u10321
 10584  001F7E  EFC3  F00F         	goto	u10320
 10585  001F82                     u10321:
 10586  001F82  EFDB  F00F         	goto	l9984
 10587  001F86                     u10320:
 10588  001F86                     
 10589                           ; BSR set to: 0
 10590  001F86  817D               	bsf	___fldiv@grs& (0+255),0,b
 10591  001F88  EFDB  F00F         	goto	l9984
 10592  001F8C                     l9978:
 10593                           
 10594                           ; BSR set to: 0
 10595  001F8C  90D8               	bcf	status,0,c
 10596  001F8E  376A               	rlcf	___fldiv@b& (0+255),f,b
 10597  001F90  376B               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10598  001F92  376C               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10599  001F94  376D               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10600  001F96                     
 10601                           ; BSR set to: 0
 10602  001F96  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10603  001F98  EFD0  F00F         	goto	u10331
 10604  001F9C  EFD2  F00F         	goto	u10330
 10605  001FA0                     u10331:
 10606  001FA0  EFD3  F00F         	goto	l2585
 10607  001FA4                     u10330:
 10608  001FA4                     
 10609                           ; BSR set to: 0
 10610  001FA4  816A               	bsf	___fldiv@b& (0+255),0,b
 10611  001FA6                     l2585:
 10612                           
 10613                           ; BSR set to: 0
 10614  001FA6  90D8               	bcf	status,0,c
 10615  001FA8  377D               	rlcf	___fldiv@grs& (0+255),f,b
 10616  001FAA  377E               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10617  001FAC  377F               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10618  001FAE  3780               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10619  001FB0  077B               	decf	___fldiv@new_exp& (0+255),f,b
 10620  001FB2  A0D8               	btfss	status,0,c
 10621  001FB4  077C               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10622  001FB6                     l9984:
 10623                           
 10624                           ; BSR set to: 0
 10625  001FB6  AF6C               	btfss	(___fldiv@b+2)& (0+255),7,b
 10626  001FB8  EFE0  F00F         	goto	u10341
 10627  001FBC  EFE2  F00F         	goto	u10340
 10628  001FC0                     u10341:
 10629  001FC0  EFC6  F00F         	goto	l9978
 10630  001FC4                     u10340:
 10631  001FC4                     
 10632                           ; BSR set to: 0
 10633  001FC4  0E00               	movlw	0
 10634  001FC6  6F82               	movwf	___fldiv@aexp& (0+255),b
 10635  001FC8                     
 10636                           ; BSR set to: 0
 10637  001FC8  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10638  001FCA  EFE9  F00F         	goto	u10351
 10639  001FCE  EFEB  F00F         	goto	u10350
 10640  001FD2                     u10351:
 10641  001FD2  EF0F  F010         	goto	l2587
 10642  001FD6                     u10350:
 10643  001FD6                     
 10644                           ; BSR set to: 0
 10645  001FD6  0EFF               	movlw	255
 10646  001FD8  157D               	andwf	___fldiv@grs& (0+255),w,b
 10647  001FDA  6F72               	movwf	??___fldiv& (0+255),b
 10648  001FDC  0EFF               	movlw	255
 10649  001FDE  157E               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10650  001FE0  6F73               	movwf	(??___fldiv+1)& (0+255),b
 10651  001FE2  0EFF               	movlw	255
 10652  001FE4  157F               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10653  001FE6  6F74               	movwf	(??___fldiv+2)& (0+255),b
 10654  001FE8  0E7F               	movlw	127
 10655  001FEA  1580               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10656  001FEC  6F75               	movwf	(??___fldiv+3)& (0+255),b
 10657  001FEE  5172               	movf	??___fldiv& (0+255),w,b
 10658  001FF0  1173               	iorwf	(??___fldiv+1)& (0+255),w,b
 10659  001FF2  1174               	iorwf	(??___fldiv+2)& (0+255),w,b
 10660  001FF4  1175               	iorwf	(??___fldiv+3)& (0+255),w,b
 10661  001FF6  B4D8               	btfsc	status,2,c
 10662  001FF8  EF00  F010         	goto	u10361
 10663  001FFC  EF02  F010         	goto	u10360
 10664  002000                     u10361:
 10665  002000  EF06  F010         	goto	l2588
 10666  002004                     u10360:
 10667  002004                     l9992:
 10668                           
 10669                           ; BSR set to: 0
 10670  002004  0E01               	movlw	1
 10671  002006  6F82               	movwf	___fldiv@aexp& (0+255),b
 10672  002008  EF0F  F010         	goto	l2587
 10673  00200C                     l2588:
 10674                           
 10675                           ; BSR set to: 0
 10676  00200C  A16A               	btfss	___fldiv@b& (0+255),0,b
 10677  00200E  EF0B  F010         	goto	u10371
 10678  002012  EF0D  F010         	goto	u10370
 10679  002016                     u10371:
 10680  002016  EF0F  F010         	goto	l2587
 10681  00201A                     u10370:
 10682  00201A  EF02  F010         	goto	l9992
 10683  00201E                     l2587:
 10684                           
 10685                           ; BSR set to: 0
 10686  00201E  5182               	movf	___fldiv@aexp& (0+255),w,b
 10687  002020  B4D8               	btfsc	status,2,c
 10688  002022  EF15  F010         	goto	u10381
 10689  002026  EF17  F010         	goto	u10380
 10690  00202A                     u10381:
 10691  00202A  EF3B  F010         	goto	l10004
 10692  00202E                     u10380:
 10693  00202E                     
 10694                           ; BSR set to: 0
 10695  00202E  0E01               	movlw	1
 10696  002030  276A               	addwf	___fldiv@b& (0+255),f,b
 10697  002032  0E00               	movlw	0
 10698  002034  236B               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10699  002036  236C               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10700  002038  236D               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10701  00203A                     
 10702                           ; BSR set to: 0
 10703  00203A  A16D               	btfss	(___fldiv@b+3)& (0+255),0,b
 10704  00203C  EF22  F010         	goto	u10391
 10705  002040  EF24  F010         	goto	u10390
 10706  002044                     u10391:
 10707  002044  EF3B  F010         	goto	l10004
 10708  002048                     u10390:
 10709  002048                     
 10710                           ; BSR set to: 0
 10711  002048  C06A  F072         	movff	___fldiv@b,??___fldiv
 10712  00204C  C06B  F073         	movff	___fldiv@b+1,??___fldiv+1
 10713  002050  C06C  F074         	movff	___fldiv@b+2,??___fldiv+2
 10714  002054  C06D  F075         	movff	___fldiv@b+3,??___fldiv+3
 10715  002058  3575               	rlcf	(??___fldiv+3)& (0+255),w,b
 10716  00205A  3375               	rrcf	(??___fldiv+3)& (0+255),f,b
 10717  00205C  3374               	rrcf	(??___fldiv+2)& (0+255),f,b
 10718  00205E  3373               	rrcf	(??___fldiv+1)& (0+255),f,b
 10719  002060  3372               	rrcf	??___fldiv& (0+255),f,b
 10720  002062  C072  F06A         	movff	??___fldiv,___fldiv@b
 10721  002066  C073  F06B         	movff	??___fldiv+1,___fldiv@b+1
 10722  00206A  C074  F06C         	movff	??___fldiv+2,___fldiv@b+2
 10723  00206E  C075  F06D         	movff	??___fldiv+3,___fldiv@b+3
 10724  002072                     
 10725                           ; BSR set to: 0
 10726  002072  4B7B               	infsnz	___fldiv@new_exp& (0+255),f,b
 10727  002074  2B7C               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10728  002076                     l10004:
 10729                           
 10730                           ; BSR set to: 0
 10731  002076  BF7C               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10732  002078  EF46  F010         	goto	u10401
 10733  00207C  517C               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10734  00207E  E108               	bnz	u10400
 10735  002080  297B               	incf	___fldiv@new_exp& (0+255),w,b
 10736  002082  A0D8               	btfss	status,0,c
 10737  002084  EF46  F010         	goto	u10401
 10738  002088  EF48  F010         	goto	u10400
 10739  00208C                     u10401:
 10740  00208C  EF53  F010         	goto	l10008
 10741  002090                     u10400:
 10742  002090                     
 10743                           ; BSR set to: 0
 10744  002090  0E00               	movlw	0
 10745  002092  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10746  002094  697B               	setf	___fldiv@new_exp& (0+255),b
 10747  002096  0E00               	movlw	0
 10748  002098  6F6A               	movwf	___fldiv@b& (0+255),b
 10749  00209A  0E00               	movlw	0
 10750  00209C  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10751  00209E  0E00               	movlw	0
 10752  0020A0  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10753  0020A2  0E00               	movlw	0
 10754  0020A4  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10755  0020A6                     l10008:
 10756                           
 10757                           ; BSR set to: 0
 10758  0020A6  BF7C               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10759  0020A8  EF60  F010         	goto	u10410
 10760  0020AC  517C               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10761  0020AE  E106               	bnz	u10411
 10762  0020B0  057B               	decf	___fldiv@new_exp& (0+255),w,b
 10763  0020B2  B0D8               	btfsc	status,0,c
 10764  0020B4  EF5E  F010         	goto	u10411
 10765  0020B8  EF60  F010         	goto	u10410
 10766  0020BC                     u10411:
 10767  0020BC  EF6E  F010         	goto	l10012
 10768  0020C0                     u10410:
 10769  0020C0                     
 10770                           ; BSR set to: 0
 10771  0020C0  0E00               	movlw	0
 10772  0020C2  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10773  0020C4  0E00               	movlw	0
 10774  0020C6  6F7B               	movwf	___fldiv@new_exp& (0+255),b
 10775  0020C8  0E00               	movlw	0
 10776  0020CA  6F6A               	movwf	___fldiv@b& (0+255),b
 10777  0020CC  0E00               	movlw	0
 10778  0020CE  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10779  0020D0  0E00               	movlw	0
 10780  0020D2  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10781  0020D4  0E00               	movlw	0
 10782  0020D6  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10783  0020D8  0E00               	movlw	0
 10784  0020DA  6F7A               	movwf	___fldiv@sign& (0+255),b
 10785  0020DC                     l10012:
 10786                           
 10787                           ; BSR set to: 0
 10788  0020DC  C07B  F081         	movff	___fldiv@new_exp,___fldiv@bexp
 10789  0020E0                     
 10790                           ; BSR set to: 0
 10791  0020E0  A181               	btfss	___fldiv@bexp& (0+255),0,b
 10792  0020E2  EF75  F010         	goto	u10421
 10793  0020E6  EF77  F010         	goto	u10420
 10794  0020EA                     u10421:
 10795  0020EA  EF7A  F010         	goto	l10018
 10796  0020EE                     u10420:
 10797  0020EE                     
 10798                           ; BSR set to: 0
 10799  0020EE  8F6C               	bsf	(___fldiv@b+2)& (0+255),7,b
 10800  0020F0  EF7B  F010         	goto	l10020
 10801  0020F4                     l10018:
 10802                           
 10803                           ; BSR set to: 0
 10804  0020F4  9F6C               	bcf	(___fldiv@b+2)& (0+255),7,b
 10805  0020F6                     l10020:
 10806                           
 10807                           ; BSR set to: 0
 10808  0020F6  90D8               	bcf	status,0,c
 10809  0020F8  3181               	rrcf	___fldiv@bexp& (0+255),w,b
 10810  0020FA  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10811  0020FC  EF31  F00F         	goto	l9934
 10812  002100                     l2574:
 10813                           
 10814                           ; BSR set to: 0
 10815  002100  0012               	return		;funcret
 10816  002102                     __end_of___fldiv:
 10817                           	callstack 0
 10818                           
 10819 ;; *************** function _HAL_Timer0_Write_Val *****************
 10820 ;; Defined at:
 10821 ;;		line 179 in file "MCAL/Timer0/hal_timer0.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 10824 ;;		 -> timer0(4), 
 10825 ;;  val             2   31[COMRAM] unsigned short 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  ret_value       1   33[COMRAM] unsigned char 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      unsigned char 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;Total ram usage:        5 bytes
 10842 ;; Hardware stack levels used: 1
 10843 ;; Hardware stack levels required when called: 8
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_HAL_Timer0_Init
 10848 ;;		_Get_Distance
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text56
 10853  004E10                     __ptext56:
 10854                           	callstack 0
 10855  004E10                     _HAL_Timer0_Write_Val:
 10856                           	callstack 19
 10857  004E10                     
 10858                           ;MCAL/Timer0/hal_timer0.c: 179: Std_ReturnType HAL_Timer0_Write_Val(const timer0_config_
      +                          st *_tmr0_config ,;MCAL/Timer0/hal_timer0.c: 180:         uint16_t val);MCAL/Timer0/hal_
      +                          timer0.c: 181: {;MCAL/Timer0/hal_timer0.c: 182:     Std_ReturnType ret_value = (Std_Retu
      +                          rnType) 0x01 ;
 10859  004E10  0E01               	movlw	1
 10860  004E12  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 10861  004E14                     
 10862                           ;MCAL/Timer0/hal_timer0.c: 184:     if(((void*)0) == _tmr0_config)
 10863  004E14  501E               	movf	HAL_Timer0_Write_Val@_tmr0_config^0,w,c
 10864  004E16  101F               	iorwf	(HAL_Timer0_Write_Val@_tmr0_config+1)^0,w,c
 10865  004E18  A4D8               	btfss	status,2,c
 10866  004E1A  EF11  F027         	goto	u11091
 10867  004E1E  EF13  F027         	goto	u11090
 10868  004E22                     u11091:
 10869  004E22  EF17  F027         	goto	l10480
 10870  004E26                     u11090:
 10871  004E26                     
 10872                           ;MCAL/Timer0/hal_timer0.c: 185:     {;MCAL/Timer0/hal_timer0.c: 186:         ret_value =
      +                           (Std_ReturnType) 0x00 ;
 10873  004E26  0E00               	movlw	0
 10874  004E28  6E22               	movwf	HAL_Timer0_Write_Val@ret_value^0,c
 10875                           
 10876                           ;MCAL/Timer0/hal_timer0.c: 187:     }
 10877  004E2A  EF1B  F027         	goto	l1537
 10878  004E2E                     l10480:
 10879                           
 10880                           ;MCAL/Timer0/hal_timer0.c: 189:     {;MCAL/Timer0/hal_timer0.c: 190:        TMR0H=(val)>
      +                          >8;
 10881  004E2E  5021               	movf	(HAL_Timer0_Write_Val@val+1)^0,w,c
 10882  004E30  6ED7               	movwf	215,c	;volatile
 10883  004E32                     
 10884                           ;MCAL/Timer0/hal_timer0.c: 191:        TMR0L=(uint8)(val);
 10885  004E32  C020  FFD6         	movff	HAL_Timer0_Write_Val@val,4054	;volatile
 10886  004E36                     l1537:
 10887                           
 10888                           ;MCAL/Timer0/hal_timer0.c: 212:     return ret_value ;
 10889  004E36  5022               	movf	HAL_Timer0_Write_Val@ret_value^0,w,c
 10890  004E38  0012               	return		;funcret
 10891  004E3A                     __end_of_HAL_Timer0_Write_Val:
 10892                           	callstack 0
 10893                           
 10894 ;; *************** function _HAL_Timer0_Read_Val *****************
 10895 ;; Defined at:
 10896 ;;		line 141 in file "MCAL/Timer0/hal_timer0.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;  _tmr0_config    2   29[COMRAM] PTR const struct .
 10899 ;;		 -> timer0(4), 
 10900 ;;  result          2   31[COMRAM] PTR unsigned short 
 10901 ;;		 -> Get_Distance@timer_val(2), 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  l_low_byte      1   34[COMRAM] unsigned char 
 10904 ;;  l_high_byte     1   33[COMRAM] unsigned char 
 10905 ;;  ret_value       1    0        unsigned char 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      unsigned char 
 10908 ;; Registers used:
 10909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10918 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10919 ;;Total ram usage:       10 bytes
 10920 ;; Hardware stack levels used: 1
 10921 ;; Hardware stack levels required when called: 8
 10922 ;; This function calls:
 10923 ;;		Nothing
 10924 ;; This function is called by:
 10925 ;;		_Get_Distance
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text57
 10930  003E5E                     __ptext57:
 10931                           	callstack 0
 10932  003E5E                     _HAL_Timer0_Read_Val:
 10933                           	callstack 21
 10934  003E5E                     
 10935                           ;MCAL/Timer0/hal_timer0.c: 145:     uint8_t l_low_byte = 0;
 10936  003E5E  0E00               	movlw	0
 10937  003E60  6E23               	movwf	HAL_Timer0_Read_Val@l_low_byte^0,c
 10938                           
 10939                           ;MCAL/Timer0/hal_timer0.c: 146:     uint8_t l_high_byte = 0;
 10940  003E62  0E00               	movlw	0
 10941  003E64  6E22               	movwf	HAL_Timer0_Read_Val@l_high_byte^0,c
 10942  003E66                     
 10943                           ;MCAL/Timer0/hal_timer0.c: 148:     if((((void*)0) == _tmr0_config) || (((void*)0) == re
      +                          sult))
 10944  003E66  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 10945  003E68  101F               	iorwf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 10946  003E6A  B4D8               	btfsc	status,2,c
 10947  003E6C  EF3A  F01F         	goto	u11961
 10948  003E70  EF3C  F01F         	goto	u11960
 10949  003E74                     u11961:
 10950  003E74  EF45  F01F         	goto	l11068
 10951  003E78                     u11960:
 10952  003E78  5020               	movf	HAL_Timer0_Read_Val@result^0,w,c
 10953  003E7A  1021               	iorwf	(HAL_Timer0_Read_Val@result+1)^0,w,c
 10954  003E7C  A4D8               	btfss	status,2,c
 10955  003E7E  EF43  F01F         	goto	u11971
 10956  003E82  EF45  F01F         	goto	u11970
 10957  003E86                     u11971:
 10958  003E86  EF47  F01F         	goto	l11070
 10959  003E8A                     u11970:
 10960  003E8A                     l11068:
 10961                           
 10962                           ;MCAL/Timer0/hal_timer0.c: 151:     }
 10963  003E8A  EF88  F01F         	goto	l1533
 10964  003E8E                     l11070:
 10965                           
 10966                           ;MCAL/Timer0/hal_timer0.c: 153:     {;MCAL/Timer0/hal_timer0.c: 154:         if( 0x00U =
      +                          = _tmr0_config->reg_bit_size)
 10967  003E8E  EE20 F003          	lfsr	2,3
 10968  003E92  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 10969  003E94  26D9               	addwf	fsr2l,f,c
 10970  003E96  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 10971  003E98  22DA               	addwfc	fsr2h,f,c
 10972  003E9A  B2DF               	btfsc	indf2,1,c
 10973  003E9C  EF52  F01F         	goto	u11981
 10974  003EA0  EF54  F01F         	goto	u11980
 10975  003EA4                     u11981:
 10976  003EA4  EF6D  F01F         	goto	l11076
 10977  003EA8                     u11980:
 10978  003EA8                     
 10979                           ;MCAL/Timer0/hal_timer0.c: 155:         {;MCAL/Timer0/hal_timer0.c: 156:             l_l
      +                          ow_byte = TMR0L ;
 10980  003EA8  CFD6 F023          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 10981                           
 10982                           ;MCAL/Timer0/hal_timer0.c: 157:             l_high_byte = TMR0H ;
 10983  003EAC  CFD7 F022          	movff	4055,HAL_Timer0_Read_Val@l_high_byte	;volatile
 10984  003EB0                     
 10985                           ;MCAL/Timer0/hal_timer0.c: 158:             *result = (uint16_t) (l_low_byte + (l_high_b
      +                          yte << 8));
 10986  003EB0  5022               	movf	HAL_Timer0_Read_Val@l_high_byte^0,w,c
 10987  003EB2  0100               	movlb	0	; () banked
 10988  003EB4  6F61               	movwf	(??_HAL_Timer0_Read_Val+1)& (0+255),b
 10989  003EB6  6B60               	clrf	??_HAL_Timer0_Read_Val& (0+255),b
 10990  003EB8  5023               	movf	HAL_Timer0_Read_Val@l_low_byte^0,w,c
 10991  003EBA  6F62               	movwf	(??_HAL_Timer0_Read_Val+2)& (0+255),b
 10992  003EBC  6B63               	clrf	(??_HAL_Timer0_Read_Val+3)& (0+255),b
 10993  003EBE  5160               	movf	??_HAL_Timer0_Read_Val& (0+255),w,b
 10994  003EC0  2762               	addwf	(??_HAL_Timer0_Read_Val+2)& (0+255),f,b
 10995  003EC2  5161               	movf	(??_HAL_Timer0_Read_Val+1)& (0+255),w,b
 10996  003EC4  2363               	addwfc	(??_HAL_Timer0_Read_Val+3)& (0+255),f,b
 10997  003EC6  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 10998  003ECA  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 10999  003ECE  C062  FFDE         	movff	??_HAL_Timer0_Read_Val+2,postinc2
 11000  003ED2  C063  FFDD         	movff	??_HAL_Timer0_Read_Val+3,postdec2
 11001                           
 11002                           ;MCAL/Timer0/hal_timer0.c: 159:         }
 11003  003ED6  EF88  F01F         	goto	l1533
 11004  003EDA                     l11076:
 11005  003EDA  EE20 F003          	lfsr	2,3
 11006  003EDE  501E               	movf	HAL_Timer0_Read_Val@_tmr0_config^0,w,c
 11007  003EE0  26D9               	addwf	fsr2l,f,c
 11008  003EE2  501F               	movf	(HAL_Timer0_Read_Val@_tmr0_config+1)^0,w,c
 11009  003EE4  22DA               	addwfc	fsr2h,f,c
 11010  003EE6  A2DF               	btfss	indf2,1,c
 11011  003EE8  EF78  F01F         	goto	u11991
 11012  003EEC  EF7A  F01F         	goto	u11990
 11013  003EF0                     u11991:
 11014  003EF0  EF45  F01F         	goto	l11068
 11015  003EF4                     u11990:
 11016  003EF4                     
 11017                           ;MCAL/Timer0/hal_timer0.c: 161:         {;MCAL/Timer0/hal_timer0.c: 162:             l_l
      +                          ow_byte = TMR0L ;
 11018  003EF4  CFD6 F023          	movff	4054,HAL_Timer0_Read_Val@l_low_byte	;volatile
 11019  003EF8                     
 11020                           ;MCAL/Timer0/hal_timer0.c: 163:             *result = (uint16_t) (l_low_byte);
 11021  003EF8  5023               	movf	HAL_Timer0_Read_Val@l_low_byte^0,w,c
 11022  003EFA  0100               	movlb	0	; () banked
 11023  003EFC  6F60               	movwf	??_HAL_Timer0_Read_Val& (0+255),b
 11024  003EFE  6B61               	clrf	(??_HAL_Timer0_Read_Val+1)& (0+255),b
 11025  003F00  C020  FFD9         	movff	HAL_Timer0_Read_Val@result,fsr2l
 11026  003F04  C021  FFDA         	movff	HAL_Timer0_Read_Val@result+1,fsr2h
 11027  003F08  C060  FFDE         	movff	??_HAL_Timer0_Read_Val,postinc2
 11028  003F0C  C061  FFDD         	movff	??_HAL_Timer0_Read_Val+1,postdec2
 11029  003F10                     l1533:
 11030  003F10  0012               	return		;funcret
 11031  003F12                     __end_of_HAL_Timer0_Read_Val:
 11032                           	callstack 0
 11033                           
 11034 ;; *************** function _GPIO_Pin_Read_Logic *****************
 11035 ;; Defined at:
 11036 ;;		line 114 in file "MCAL/GPIO/hal_gpio.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 11039 ;;		 -> ultrasonic(2), 
 11040 ;;  logic           2   31[COMRAM] PTR enum E3185
 11041 ;;		 -> Get_Distance@logic(1), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  ERRORSTATUS     1    0        unsigned char 
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      unsigned char 
 11046 ;; Registers used:
 11047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;Total ram usage:        9 bytes
 11058 ;; Hardware stack levels used: 1
 11059 ;; Hardware stack levels required when called: 8
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_Get_Distance
 11064 ;;		_IR_Sensor_Detect
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text58
 11069  003FC0                     __ptext58:
 11070                           	callstack 0
 11071  003FC0                     _GPIO_Pin_Read_Logic:
 11072                           	callstack 21
 11073  003FC0                     
 11074                           ;MCAL/GPIO/hal_gpio.c: 117:           if ( ((void*)0)==_pin_config||((void*)0)==logic||_
      +                          pin_config->pin> 8 -1)
 11075  003FC0  501E               	movf	GPIO_Pin_Read_Logic@_pin_config^0,w,c
 11076  003FC2  101F               	iorwf	(GPIO_Pin_Read_Logic@_pin_config+1)^0,w,c
 11077  003FC4  B4D8               	btfsc	status,2,c
 11078  003FC6  EFE7  F01F         	goto	u11821
 11079  003FCA  EFE9  F01F         	goto	u11820
 11080  003FCE                     u11821:
 11081  003FCE  EF02  F020         	goto	l10940
 11082  003FD2                     u11820:
 11083  003FD2  5020               	movf	GPIO_Pin_Read_Logic@logic^0,w,c
 11084  003FD4  1021               	iorwf	(GPIO_Pin_Read_Logic@logic+1)^0,w,c
 11085  003FD6  B4D8               	btfsc	status,2,c
 11086  003FD8  EFF0  F01F         	goto	u11831
 11087  003FDC  EFF2  F01F         	goto	u11830
 11088  003FE0                     u11831:
 11089  003FE0  EF02  F020         	goto	l10940
 11090  003FE4                     u11830:
 11091  003FE4  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 11092  003FE8  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 11093  003FEC  50DF               	movf	223,w,c
 11094  003FEE  0B07               	andlw	7
 11095  003FF0  0100               	movlb	0	; () banked
 11096  003FF2  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 11097  003FF4  0E07               	movlw	7
 11098  003FF6  6560               	cpfsgt	??_GPIO_Pin_Read_Logic& (0+255),b
 11099  003FF8  EF00  F020         	goto	u11841
 11100  003FFC  EF02  F020         	goto	u11840
 11101  004000                     u11841:
 11102  004000  EF04  F020         	goto	l10942
 11103  004004                     u11840:
 11104  004004                     l10940:
 11105                           
 11106                           ;MCAL/GPIO/hal_gpio.c: 120:     }
 11107  004004  EF36  F020         	goto	l916
 11108  004008                     l10942:
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;MCAL/GPIO/hal_gpio.c: 122:     {;MCAL/GPIO/hal_gpio.c: 123:          *logic= (( *port_r
      +                          egisters[_pin_config->port]>>_pin_config->pin )&(uint8)1);
 11112  004008  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 11113  00400C  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 11114  004010  50DF               	movf	223,w,c
 11115  004012  0B07               	andlw	7
 11116  004014  6F60               	movwf	??_GPIO_Pin_Read_Logic& (0+255),b
 11117  004016  C01E  FFD9         	movff	GPIO_Pin_Read_Logic@_pin_config,fsr2l
 11118  00401A  C01F  FFDA         	movff	GPIO_Pin_Read_Logic@_pin_config+1,fsr2h
 11119  00401E  30DF               	rrcf	223,w,c
 11120  004020  32E8               	rrcf	wreg,f,c
 11121  004022  32E8               	rrcf	wreg,f,c
 11122  004024  0B07               	andlw	7
 11123  004026  6F61               	movwf	(??_GPIO_Pin_Read_Logic+1)& (0+255),b
 11124  004028  5161               	movf	(??_GPIO_Pin_Read_Logic+1)& (0+255),w,b
 11125  00402A  0D02               	mullw	2
 11126  00402C  0EA8               	movlw	low _port_registers
 11127  00402E  24F3               	addwf	243,w,c
 11128  004030  6ED9               	movwf	fsr2l,c
 11129  004032  0E00               	movlw	high _port_registers
 11130  004034  20F4               	addwfc	prodh,w,c
 11131  004036  6EDA               	movwf	fsr2h,c
 11132  004038  CFDE F062          	movff	postinc2,??_GPIO_Pin_Read_Logic+2
 11133  00403C  CFDD F063          	movff	postdec2,??_GPIO_Pin_Read_Logic+3
 11134  004040  C062  FFD9         	movff	??_GPIO_Pin_Read_Logic+2,fsr2l
 11135  004044  C063  FFDA         	movff	??_GPIO_Pin_Read_Logic+3,fsr2h
 11136  004048  50DF               	movf	indf2,w,c
 11137  00404A  6F64               	movwf	(??_GPIO_Pin_Read_Logic+4)& (0+255),b
 11138  00404C  2B60               	incf	??_GPIO_Pin_Read_Logic& (0+255),f,b
 11139  00404E  EF2B  F020         	goto	u11854
 11140  004052                     u11855:
 11141  004052  90D8               	bcf	status,0,c
 11142  004054  3364               	rrcf	(??_GPIO_Pin_Read_Logic+4)& (0+255),f,b
 11143  004056                     u11854:
 11144  004056  2F60               	decfsz	??_GPIO_Pin_Read_Logic& (0+255),f,b
 11145  004058  EF29  F020         	goto	u11855
 11146  00405C  0100               	movlb	0	; () banked
 11147  00405E  5164               	movf	(??_GPIO_Pin_Read_Logic+4)& (0+255),w,b
 11148  004060  0B01               	andlw	1
 11149  004062  C020  FFD9         	movff	GPIO_Pin_Read_Logic@logic,fsr2l
 11150  004066  C021  FFDA         	movff	GPIO_Pin_Read_Logic@logic+1,fsr2h
 11151  00406A  6EDF               	movwf	indf2,c
 11152  00406C                     l916:
 11153  00406C  0012               	return		;funcret
 11154  00406E                     __end_of_GPIO_Pin_Read_Logic:
 11155                           	callstack 0
 11156                           
 11157 ;; *************** function _GPS_Service *****************
 11158 ;; Defined at:
 11159 ;;		line 388 in file "application.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;		None
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  key             1   18[BANK0 ] unsigned char 
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      void 
 11166 ;; Registers used:
 11167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;Total ram usage:        3 bytes
 11178 ;; Hardware stack levels used: 1
 11179 ;; Hardware stack levels required when called: 11
 11180 ;; This function calls:
 11181 ;;		_EUSART_Async_Read_Data_Blocking
 11182 ;;		_GPIO_Pin_Write_Logic
 11183 ;; This function is called by:
 11184 ;;		_main
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text59
 11189  002CB4                     __ptext59:
 11190                           	callstack 0
 11191  002CB4                     _GPS_Service:
 11192                           	callstack 19
 11193  002CB4                     
 11194                           ;application.c: 390:     uint8 key=1;
 11195  002CB4  0E01               	movlw	1
 11196  002CB6  0100               	movlb	0	; () banked
 11197  002CB8  6F72               	movwf	GPS_Service@key& (0+255),b
 11198  002CBA                     
 11199                           ; BSR set to: 0
 11200                           ;application.c: 391:     (PIE1bits.RCIE = 0);
 11201  002CBA  9A9D               	bcf	157,5,c	;volatile
 11202  002CBC                     
 11203                           ; BSR set to: 0
 11204                           ;application.c: 392:     GPIO_Pin_Write_Logic(&selector,GPIO_HIGH);
 11205  002CBC  0E40               	movlw	low _selector
 11206  002CBE  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 11207  002CC0  0E00               	movlw	high _selector
 11208  002CC2  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 11209  002CC4  0E01               	movlw	1
 11210  002CC6  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11211  002CC8  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
 11212                           
 11213                           ;application.c: 394:     while (key)
 11214  002CCC  EFF0  F016         	goto	l11436
 11215  002CD0                     l11400:
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;application.c: 395:     {;application.c: 396:         EUSART_Async_Read_Data_Blocking(&
      +                          _uart_obj,&gpstemp);
 11219  002CD0  0E29               	movlw	low __uart_obj
 11220  002CD2  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11221  002CD4  0E01               	movlw	high __uart_obj
 11222  002CD6  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11223  002CD8  0E39               	movlw	low _gpstemp
 11224  002CDA  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11225  002CDC  0E00               	movlw	high _gpstemp
 11226  002CDE  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11227  002CE0  EC9E  F023         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11228  002CE4                     
 11229                           ;application.c: 397:         if ('$'==gpstemp)
 11230  002CE4  0E24               	movlw	36
 11231  002CE6  1839               	xorwf	_gpstemp^0,w,c
 11232  002CE8  A4D8               	btfss	status,2,c
 11233  002CEA  EF79  F016         	goto	u12231
 11234  002CEE  EF7B  F016         	goto	u12230
 11235  002CF2                     u12231:
 11236  002CF2  EFF0  F016         	goto	l11436
 11237  002CF6                     u12230:
 11238  002CF6  EFE7  F016         	goto	l1946
 11239  002CFA                     l11406:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;application.c: 400:             {;application.c: 401:                     EUSART_Async_
      +                          Read_Data_Blocking(&_uart_obj,&gpstemp);
 11243  002CFA  0E29               	movlw	low __uart_obj
 11244  002CFC  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11245  002CFE  0E01               	movlw	high __uart_obj
 11246  002D00  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11247  002D02  0E39               	movlw	low _gpstemp
 11248  002D04  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11249  002D06  0E00               	movlw	high _gpstemp
 11250  002D08  6F6F               	movwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11251  002D0A  EC9E  F023         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11252  002D0E                     
 11253                           ;application.c: 402:                     if (','==gpstemp)
 11254  002D0E  0E2C               	movlw	44
 11255  002D10  1839               	xorwf	_gpstemp^0,w,c
 11256  002D12  A4D8               	btfss	status,2,c
 11257  002D14  EF8E  F016         	goto	u12241
 11258  002D18  EF90  F016         	goto	u12240
 11259  002D1C                     u12241:
 11260  002D1C  EFE7  F016         	goto	l1946
 11261  002D20                     u12240:
 11262  002D20                     
 11263                           ;application.c: 403:                     {;application.c: 404:                         c
      +                          ounter++;
 11264  002D20  2A2D               	incf	_counter^0,f,c
 11265  002D22                     
 11266                           ;application.c: 405:                         if (3==counter)
 11267  002D22  0E03               	movlw	3
 11268  002D24  182D               	xorwf	_counter^0,w,c
 11269  002D26  A4D8               	btfss	status,2,c
 11270  002D28  EF98  F016         	goto	u12251
 11271  002D2C  EF9A  F016         	goto	u12250
 11272  002D30                     u12251:
 11273  002D30  EFBC  F016         	goto	l11424
 11274  002D34                     u12250:
 11275  002D34                     
 11276                           ;application.c: 406:                         {;application.c: 407:                      
      +                                 i=0;
 11277  002D34  0E00               	movlw	0
 11278  002D36  6E2C               	movwf	_i^0,c
 11279  002D38                     l11416:
 11280                           
 11281                           ;application.c: 410:                             {;application.c: 411:                  
      +                                         EUSART_Async_Read_Data_Blocking(&_uart_obj,(latitude+i));
 11282  002D38  0E29               	movlw	low __uart_obj
 11283  002D3A  0100               	movlb	0	; () banked
 11284  002D3C  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11285  002D3E  0E01               	movlw	high __uart_obj
 11286  002D40  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11287  002D42  0E1C               	movlw	low _latitude
 11288  002D44  242C               	addwf	_i^0,w,c
 11289  002D46  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11290  002D48  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11291  002D4A  0E01               	movlw	high _latitude
 11292  002D4C  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 11293  002D4E  EC9E  F023         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11294  002D52                     
 11295                           ;application.c: 412:                                 i++;
 11296  002D52  2A2C               	incf	_i^0,f,c
 11297  002D54                     
 11298                           ;application.c: 413:                             }while(','!=(latitude[i-1]));
 11299  002D54  0E1B               	movlw	low (_latitude+65535)
 11300  002D56  242C               	addwf	_i^0,w,c
 11301  002D58  6ED9               	movwf	fsr2l,c
 11302  002D5A  6ADA               	clrf	fsr2h,c
 11303  002D5C  0E01               	movlw	high (_latitude+65535)
 11304  002D5E  22DA               	addwfc	fsr2h,f,c
 11305  002D60  0E2C               	movlw	44
 11306  002D62  18DE               	xorwf	postinc2,w,c
 11307  002D64  A4D8               	btfss	status,2,c
 11308  002D66  EFB7  F016         	goto	u12261
 11309  002D6A  EFB9  F016         	goto	u12260
 11310  002D6E                     u12261:
 11311  002D6E  EF9C  F016         	goto	l11416
 11312  002D72                     u12260:
 11313  002D72                     
 11314                           ;application.c: 414:                             counter++;
 11315  002D72  2A2D               	incf	_counter^0,f,c
 11316                           
 11317                           ;application.c: 416:                         }
 11318  002D74  EFE7  F016         	goto	l1946
 11319  002D78                     l11424:
 11320  002D78  0E05               	movlw	5
 11321  002D7A  182D               	xorwf	_counter^0,w,c
 11322  002D7C  A4D8               	btfss	status,2,c
 11323  002D7E  EFC3  F016         	goto	u12271
 11324  002D82  EFC5  F016         	goto	u12270
 11325  002D86                     u12271:
 11326  002D86  EFE7  F016         	goto	l1946
 11327  002D8A                     u12270:
 11328  002D8A                     
 11329                           ;application.c: 418:                         {;application.c: 419:                      
      +                                 i=0;
 11330  002D8A  0E00               	movlw	0
 11331  002D8C  6E2C               	movwf	_i^0,c
 11332  002D8E                     l11428:
 11333                           
 11334                           ;application.c: 422:                                 EUSART_Async_Read_Data_Blocking(&_u
      +                          art_obj,(longtude+i));
 11335  002D8E  0E29               	movlw	low __uart_obj
 11336  002D90  0100               	movlb	0	; () banked
 11337  002D92  6F6C               	movwf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),b
 11338  002D94  0E01               	movlw	high __uart_obj
 11339  002D96  6F6D               	movwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),b
 11340  002D98  0E0F               	movlw	low _longtude
 11341  002D9A  242C               	addwf	_i^0,w,c
 11342  002D9C  6F6E               	movwf	EUSART_Async_Read_Data_Blocking@data& (0+255),b
 11343  002D9E  6B6F               	clrf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),b
 11344  002DA0  0E01               	movlw	high _longtude
 11345  002DA2  236F               	addwfc	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),f,b
 11346  002DA4  EC9E  F023         	call	_EUSART_Async_Read_Data_Blocking	;wreg free
 11347  002DA8                     
 11348                           ;application.c: 423:                                 i++;
 11349  002DA8  2A2C               	incf	_i^0,f,c
 11350  002DAA                     
 11351                           ;application.c: 424:                             }while(','!=(longtude[i-1]));
 11352  002DAA  0E0E               	movlw	low (_longtude+65535)
 11353  002DAC  242C               	addwf	_i^0,w,c
 11354  002DAE  6ED9               	movwf	fsr2l,c
 11355  002DB0  6ADA               	clrf	fsr2h,c
 11356  002DB2  0E01               	movlw	high (_longtude+65535)
 11357  002DB4  22DA               	addwfc	fsr2h,f,c
 11358  002DB6  0E2C               	movlw	44
 11359  002DB8  18DE               	xorwf	postinc2,w,c
 11360  002DBA  A4D8               	btfss	status,2,c
 11361  002DBC  EFE2  F016         	goto	u12281
 11362  002DC0  EFE4  F016         	goto	u12280
 11363  002DC4                     u12281:
 11364  002DC4  EFC7  F016         	goto	l11428
 11365  002DC8                     u12280:
 11366  002DC8                     
 11367                           ;application.c: 425:                             key=0;
 11368  002DC8  0E00               	movlw	0
 11369  002DCA  0100               	movlb	0	; () banked
 11370  002DCC  6F72               	movwf	GPS_Service@key& (0+255),b
 11371  002DCE                     l1946:
 11372                           
 11373                           ;application.c: 399:             while (key)
 11374  002DCE  0100               	movlb	0	; () banked
 11375  002DD0  5172               	movf	GPS_Service@key& (0+255),w,b
 11376  002DD2  A4D8               	btfss	status,2,c
 11377  002DD4  EFEE  F016         	goto	u12291
 11378  002DD8  EFF0  F016         	goto	u12290
 11379  002DDC                     u12291:
 11380  002DDC  EF7D  F016         	goto	l11406
 11381  002DE0                     u12290:
 11382  002DE0                     l11436:
 11383                           
 11384                           ;application.c: 394:     while (key)
 11385  002DE0  0100               	movlb	0	; () banked
 11386  002DE2  5172               	movf	GPS_Service@key& (0+255),w,b
 11387  002DE4  A4D8               	btfss	status,2,c
 11388  002DE6  EFF7  F016         	goto	u12301
 11389  002DEA  EFF9  F016         	goto	u12300
 11390  002DEE                     u12301:
 11391  002DEE  EF68  F016         	goto	l11400
 11392  002DF2                     u12300:
 11393  002DF2                     
 11394                           ; BSR set to: 0
 11395                           ;application.c: 431:       _delay((unsigned long)((2000)*(8000000/4000.0)));
 11396  002DF2  0E15               	movlw	21
 11397  002DF4  0100               	movlb	0	; () banked
 11398  002DF6  6F71               	movwf	(??_GPS_Service+1)& (0+255),b
 11399  002DF8  0E4B               	movlw	75
 11400  002DFA  6F70               	movwf	??_GPS_Service& (0+255),b
 11401  002DFC  0EBE               	movlw	190
 11402  002DFE                     u12737:
 11403  002DFE  2EE8               	decfsz	wreg,f,c
 11404  002E00  D7FE               	bra	u12737
 11405  002E02  2F70               	decfsz	??_GPS_Service& (0+255),f,b
 11406  002E04  D7FC               	bra	u12737
 11407  002E06  2F71               	decfsz	(??_GPS_Service+1)& (0+255),f,b
 11408  002E08  D7FA               	bra	u12737
 11409  002E0A  F000               	nop	
 11410  002E0C                     
 11411                           ;application.c: 432:     GPIO_Pin_Write_Logic(&selector,GPIO_LOW);
 11412  002E0C  0E40               	movlw	low _selector
 11413  002E0E  6E1E               	movwf	GPIO_Pin_Write_Logic@_pin_config^0,c
 11414  002E10  0E00               	movlw	high _selector
 11415  002E12  6E1F               	movwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,c
 11416  002E14  0E00               	movlw	0
 11417  002E16  6E20               	movwf	GPIO_Pin_Write_Logic@logic^0,c
 11418  002E18  ECF4  F018         	call	_GPIO_Pin_Write_Logic	;wreg free
 11419  002E1C                     
 11420                           ;application.c: 433:     (PIE1bits.RCIE = 1) ;
 11421  002E1C  8A9D               	bsf	157,5,c	;volatile
 11422  002E1E  0012               	return		;funcret
 11423  002E20                     __end_of_GPS_Service:
 11424                           	callstack 0
 11425                           
 11426 ;; *************** function _GPIO_Pin_Write_Logic *****************
 11427 ;; Defined at:
 11428 ;;		line 82 in file "MCAL/GPIO/hal_gpio.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 11431 ;;		 -> selector(1), TEST_PIN(1), ultrasonic(2), stepper_base.dir_pin(1), 
 11432 ;;		 -> stepper_base.step_pin(1), stepper_base(2), CCP2_Obj(12), CCP1_Obj(12), 
 11433 ;;		 -> W2_W4_W6_Motor_Control(1), W1_W3_W5_Motor_Control(1), 
 11434 ;;  logic           1   31[COMRAM] enum E3185
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  ERRORSTATUS     1   32[COMRAM] unsigned char 
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      unsigned char 
 11439 ;; Registers used:
 11440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;Total ram usage:       10 bytes
 11451 ;; Hardware stack levels used: 1
 11452 ;; Hardware stack levels required when called: 8
 11453 ;; This function calls:
 11454 ;;		Nothing
 11455 ;; This function is called by:
 11456 ;;		_ECU_DC_Motor_Run_Left
 11457 ;;		_ECU_DC_Motor_Run_Right
 11458 ;;		_Ecu_Stepper_Init
 11459 ;;		_Ecu_Stepper_Step
 11460 ;;		_stepper_move_one_deg_cw
 11461 ;;		_stepper_move_one_deg_ccw
 11462 ;;		_GPIO_Pin_Initialize
 11463 ;;		_send_trig_pulse
 11464 ;;		_GPS_Service
 11465 ;;		_lcd_4bit_send_command
 11466 ;;		_lcd_4bit_send_char_data
 11467 ;;		_lcd_8bit_send_command
 11468 ;;		_lcd_8bit_send_char_data
 11469 ;;		_lcd_4bits_send_enable_signal
 11470 ;;		_lcd_send_4bits
 11471 ;;		_lcd_8bits_send_enable_signal
 11472 ;;		_Ecu_Stepper_Change_Direction
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text60
 11477  0031E8                     __ptext60:
 11478                           	callstack 0
 11479  0031E8                     _GPIO_Pin_Write_Logic:
 11480                           	callstack 21
 11481  0031E8                     
 11482                           ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _p
      +                          in_config, logic_et logic);MCAL/GPIO/hal_gpio.c: 83: {;MCAL/GPIO/hal_gpio.c: 84:       S
      +                          td_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
 11483  0031E8  0E01               	movlw	1
 11484  0031EA  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 11485  0031EC                     
 11486                           ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
 11487  0031EC  501E               	movf	GPIO_Pin_Write_Logic@_pin_config^0,w,c
 11488  0031EE  101F               	iorwf	(GPIO_Pin_Write_Logic@_pin_config+1)^0,w,c
 11489  0031F0  B4D8               	btfsc	status,2,c
 11490  0031F2  EFFD  F018         	goto	u10601
 11491  0031F6  EFFF  F018         	goto	u10600
 11492  0031FA                     u10601:
 11493  0031FA  EF0F  F019         	goto	l10124
 11494  0031FE                     u10600:
 11495  0031FE  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11496  003202  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11497  003206  50DF               	movf	223,w,c
 11498  003208  0B07               	andlw	7
 11499  00320A  0100               	movlb	0	; () banked
 11500  00320C  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11501  00320E  0E07               	movlw	7
 11502  003210  6560               	cpfsgt	??_GPIO_Pin_Write_Logic& (0+255),b
 11503  003212  EF0D  F019         	goto	u10611
 11504  003216  EF0F  F019         	goto	u10610
 11505  00321A                     u10611:
 11506  00321A  EF74  F019         	goto	l10132
 11507  00321E                     u10610:
 11508  00321E                     l10124:
 11509                           
 11510                           ;MCAL/GPIO/hal_gpio.c: 86:     {;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_Re
      +                          turnType) 0x00;
 11511  00321E  0E00               	movlw	0
 11512  003220  6E21               	movwf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,c
 11513                           
 11514                           ;MCAL/GPIO/hal_gpio.c: 88:     }
 11515  003222  EF89  F019         	goto	l10134
 11516  003226                     l10126:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pi
      +                          n_config->pin ));
 11520  003226  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11521  00322A  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11522  00322E  50DF               	movf	223,w,c
 11523  003230  0B07               	andlw	7
 11524  003232  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11525  003234  0E01               	movlw	1
 11526  003236  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 11527  003238  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11528  00323A  EF21  F019         	goto	u10624
 11529  00323E                     u10625:
 11530  00323E  90D8               	bcf	status,0,c
 11531  003240  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 11532  003242                     u10624:
 11533  003242  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11534  003244  EF1F  F019         	goto	u10625
 11535  003248  0100               	movlb	0	; () banked
 11536  00324A  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 11537  00324C  0AFF               	xorlw	255
 11538  00324E  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 11539  003250  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11540  003254  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11541  003258  30DF               	rrcf	223,w,c
 11542  00325A  32E8               	rrcf	wreg,f,c
 11543  00325C  32E8               	rrcf	wreg,f,c
 11544  00325E  0B07               	andlw	7
 11545  003260  6F63               	movwf	(??_GPIO_Pin_Write_Logic+3)& (0+255),b
 11546  003262  5163               	movf	(??_GPIO_Pin_Write_Logic+3)& (0+255),w,b
 11547  003264  0D02               	mullw	2
 11548  003266  0EB2               	movlw	low _lat_registers
 11549  003268  24F3               	addwf	243,w,c
 11550  00326A  6ED9               	movwf	fsr2l,c
 11551  00326C  0E00               	movlw	high _lat_registers
 11552  00326E  20F4               	addwfc	prodh,w,c
 11553  003270  6EDA               	movwf	fsr2h,c
 11554  003272  CFDE F064          	movff	postinc2,??_GPIO_Pin_Write_Logic+4
 11555  003276  CFDD F065          	movff	postdec2,??_GPIO_Pin_Write_Logic+5
 11556  00327A  C064  FFD9         	movff	??_GPIO_Pin_Write_Logic+4,fsr2l
 11557  00327E  C065  FFDA         	movff	??_GPIO_Pin_Write_Logic+5,fsr2h
 11558  003282  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 11559  003284  16DF               	andwf	indf2,f,c
 11560                           
 11561                           ;MCAL/GPIO/hal_gpio.c: 95:             break;
 11562  003286  EF89  F019         	goto	l10134
 11563  00328A                     l10128:
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pi
      +                          n_config->pin ));
 11567  00328A  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11568  00328E  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11569  003292  50DF               	movf	223,w,c
 11570  003294  0B07               	andlw	7
 11571  003296  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11572  003298  0E01               	movlw	1
 11573  00329A  6F61               	movwf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 11574  00329C  2B60               	incf	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11575  00329E  EF53  F019         	goto	u10634
 11576  0032A2                     u10635:
 11577  0032A2  90D8               	bcf	status,0,c
 11578  0032A4  3761               	rlcf	(??_GPIO_Pin_Write_Logic+1)& (0+255),f,b
 11579  0032A6                     u10634:
 11580  0032A6  2F60               	decfsz	??_GPIO_Pin_Write_Logic& (0+255),f,b
 11581  0032A8  EF51  F019         	goto	u10635
 11582  0032AC  C01E  FFD9         	movff	GPIO_Pin_Write_Logic@_pin_config,fsr2l
 11583  0032B0  C01F  FFDA         	movff	GPIO_Pin_Write_Logic@_pin_config+1,fsr2h
 11584  0032B4  30DF               	rrcf	223,w,c
 11585  0032B6  32E8               	rrcf	wreg,f,c
 11586  0032B8  32E8               	rrcf	wreg,f,c
 11587  0032BA  0B07               	andlw	7
 11588  0032BC  0100               	movlb	0	; () banked
 11589  0032BE  6F62               	movwf	(??_GPIO_Pin_Write_Logic+2)& (0+255),b
 11590  0032C0  5162               	movf	(??_GPIO_Pin_Write_Logic+2)& (0+255),w,b
 11591  0032C2  0D02               	mullw	2
 11592  0032C4  0EB2               	movlw	low _lat_registers
 11593  0032C6  24F3               	addwf	243,w,c
 11594  0032C8  6ED9               	movwf	fsr2l,c
 11595  0032CA  0E00               	movlw	high _lat_registers
 11596  0032CC  20F4               	addwfc	prodh,w,c
 11597  0032CE  6EDA               	movwf	fsr2h,c
 11598  0032D0  CFDE F063          	movff	postinc2,??_GPIO_Pin_Write_Logic+3
 11599  0032D4  CFDD F064          	movff	postdec2,??_GPIO_Pin_Write_Logic+4
 11600  0032D8  C063  FFD9         	movff	??_GPIO_Pin_Write_Logic+3,fsr2l
 11601  0032DC  C064  FFDA         	movff	??_GPIO_Pin_Write_Logic+4,fsr2h
 11602  0032E0  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 11603  0032E2  12DF               	iorwf	indf2,f,c
 11604                           
 11605                           ;MCAL/GPIO/hal_gpio.c: 98:             break;
 11606  0032E4  EF89  F019         	goto	l10134
 11607  0032E8                     l10132:
 11608                           
 11609                           ; BSR set to: 0
 11610  0032E8  5020               	movf	GPIO_Pin_Write_Logic@logic^0,w,c
 11611  0032EA  6F60               	movwf	??_GPIO_Pin_Write_Logic& (0+255),b
 11612  0032EC  6B61               	clrf	(??_GPIO_Pin_Write_Logic+1)& (0+255),b
 11613                           
 11614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11615                           ; Switch size 1, requested type "simple"
 11616                           ; Number of cases is 1, Range of values is 0 to 0
 11617                           ; switch strategies available:
 11618                           ; Name         Instructions Cycles
 11619                           ; simple_byte            4     3 (average)
 11620                           ;	Chosen strategy is simple_byte
 11621  0032EE  5161               	movf	(??_GPIO_Pin_Write_Logic+1)& (0+255),w,b
 11622  0032F0  0A00               	xorlw	0	; case 0
 11623  0032F2  B4D8               	btfsc	status,2,c
 11624  0032F4  EF7E  F019         	goto	l12108
 11625  0032F8  EF0F  F019         	goto	l10124
 11626  0032FC                     l12108:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ; Switch size 1, requested type "simple"
 11630                           ; Number of cases is 2, Range of values is 0 to 1
 11631                           ; switch strategies available:
 11632                           ; Name         Instructions Cycles
 11633                           ; simple_byte            7     4 (average)
 11634                           ;	Chosen strategy is simple_byte
 11635  0032FC  5160               	movf	??_GPIO_Pin_Write_Logic& (0+255),w,b
 11636  0032FE  0A00               	xorlw	0	; case 0
 11637  003300  B4D8               	btfsc	status,2,c
 11638  003302  EF13  F019         	goto	l10126
 11639  003306  0A01               	xorlw	1	; case 1
 11640  003308  B4D8               	btfsc	status,2,c
 11641  00330A  EF45  F019         	goto	l10128
 11642  00330E  EF0F  F019         	goto	l10124
 11643  003312                     l10134:
 11644                           
 11645                           ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
 11646  003312  5021               	movf	GPIO_Pin_Write_Logic@ERRORSTATUS^0,w,c
 11647  003314  0012               	return		;funcret
 11648  003316                     __end_of_GPIO_Pin_Write_Logic:
 11649                           	callstack 0
 11650                           
 11651 ;; *************** function _EUSART_Async_Read_Data_Blocking *****************
 11652 ;; Defined at:
 11653 ;;		line 337 in file "MCAL/EUSART/mcal_EUSART.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;  _eusart_obj     2   12[BANK0 ] PTR const struct .
 11656 ;;		 -> _uart_obj(12), 
 11657 ;;  data            2   14[BANK0 ] PTR unsigned short 
 11658 ;;		 -> longtude(13), latitude(13), gpstemp(1), 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  ret_val         1    0        unsigned char 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      unsigned char 
 11663 ;; Registers used:
 11664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11670 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11673 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11674 ;;Total ram usage:        4 bytes
 11675 ;; Hardware stack levels used: 1
 11676 ;; Hardware stack levels required when called: 10
 11677 ;; This function calls:
 11678 ;;		_EUSART_Async_Read_Data
 11679 ;; This function is called by:
 11680 ;;		_GPS_Service
 11681 ;;		_Bluetooth_Recieve_Data_Blocking
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text61
 11686  00473C                     __ptext61:
 11687                           	callstack 0
 11688  00473C                     _EUSART_Async_Read_Data_Blocking:
 11689                           	callstack 19
 11690  00473C                     
 11691                           ;MCAL/EUSART/mcal_EUSART.c: 341:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 11692  00473C  0100               	movlb	0	; () banked
 11693  00473E  516C               	movf	EUSART_Async_Read_Data_Blocking@_eusart_obj& (0+255),w,b
 11694  004740  116D               	iorwf	(EUSART_Async_Read_Data_Blocking@_eusart_obj+1)& (0+255),w,b
 11695  004742  B4D8               	btfsc	status,2,c
 11696  004744  EFA6  F023         	goto	u11751
 11697  004748  EFA8  F023         	goto	u11750
 11698  00474C                     u11751:
 11699  00474C  EFB1  F023         	goto	l10904
 11700  004750                     u11750:
 11701  004750                     
 11702                           ; BSR set to: 0
 11703  004750  516E               	movf	EUSART_Async_Read_Data_Blocking@data& (0+255),w,b
 11704  004752  116F               	iorwf	(EUSART_Async_Read_Data_Blocking@data+1)& (0+255),w,b
 11705  004754  A4D8               	btfss	status,2,c
 11706  004756  EFAF  F023         	goto	u11761
 11707  00475A  EFB1  F023         	goto	u11760
 11708  00475E                     u11761:
 11709  00475E  EFB3  F023         	goto	l753
 11710  004762                     u11760:
 11711  004762                     l10904:
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;MCAL/EUSART/mcal_EUSART.c: 344:     }
 11715  004762  EFC4  F023         	goto	l10908
 11716  004766                     l753:
 11717  004766  AA9E               	btfss	158,5,c	;volatile
 11718  004768  EFB8  F023         	goto	u11771
 11719  00476C  EFBA  F023         	goto	u11770
 11720  004770                     u11771:
 11721  004770  EFB3  F023         	goto	l753
 11722  004774                     u11770:
 11723  004774                     
 11724                           ;MCAL/EUSART/mcal_EUSART.c: 348:         EUSART_Async_Read_Data(_eusart_obj , data);
 11725  004774  C06C  F060         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj,EUSART_Async_Read_Data@_eusart_obj
 11726  004778  C06D  F061         	movff	EUSART_Async_Read_Data_Blocking@_eusart_obj+1,EUSART_Async_Read_Data@_eusart_obj+
      +                          1
 11727  00477C  C06E  F062         	movff	EUSART_Async_Read_Data_Blocking@data,EUSART_Async_Read_Data@data
 11728  004780  C06F  F063         	movff	EUSART_Async_Read_Data_Blocking@data+1,EUSART_Async_Read_Data@data+1
 11729  004784  ECF7  F011         	call	_EUSART_Async_Read_Data	;wreg free
 11730  004788                     l10908:
 11731                           
 11732                           ;MCAL/EUSART/mcal_EUSART.c: 351:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 11733  004788  B2AB               	btfsc	171,1,c	;volatile
 11734  00478A  EFC9  F023         	goto	u11781
 11735  00478E  EFCB  F023         	goto	u11780
 11736  004792                     u11781:
 11737  004792  EFD2  F023         	goto	l758
 11738  004796                     u11780:
 11739  004796  A4AB               	btfss	171,2,c	;volatile
 11740  004798  EFD0  F023         	goto	u11791
 11741  00479C  EFD2  F023         	goto	u11790
 11742  0047A0                     u11791:
 11743  0047A0  EFD4  F023         	goto	l759
 11744  0047A4                     u11790:
 11745  0047A4                     l758:
 11746                           
 11747                           ;MCAL/EUSART/mcal_EUSART.c: 352:     {;MCAL/EUSART/mcal_EUSART.c: 354:         RCSTA1bit
      +                          s.CREN=0;
 11748  0047A4  98AB               	bcf	171,4,c	;volatile
 11749                           
 11750                           ;MCAL/EUSART/mcal_EUSART.c: 355:         RCSTA1bits.CREN=1;
 11751  0047A6  88AB               	bsf	171,4,c	;volatile
 11752  0047A8                     l759:
 11753  0047A8  0012               	return		;funcret
 11754  0047AA                     __end_of_EUSART_Async_Read_Data_Blocking:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function _EUSART_Async_Read_Data *****************
 11758 ;; Defined at:
 11759 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  _eusart_obj     2    0[BANK0 ] PTR const struct .
 11762 ;;		 -> _uart_obj(12), 
 11763 ;;  data            2    2[BANK0 ] PTR unsigned short 
 11764 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
 11765 ;; Auto vars:     Size  Location     Type
 11766 ;;  l_temp_data     2   10[BANK0 ] unsigned short 
 11767 ;;  ret_val         1    0        unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      unsigned char 
 11770 ;; Registers used:
 11771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;Total ram usage:       14 bytes
 11782 ;; Hardware stack levels used: 1
 11783 ;; Hardware stack levels required when called: 9
 11784 ;; This function calls:
 11785 ;;		_calc_parity_even
 11786 ;;		_calc_parity_odd
 11787 ;; This function is called by:
 11788 ;;		_EUSART_Async_Read_Data_Blocking
 11789 ;;		_Bluetooth_Recieve_Data_Non_Blocking
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text62
 11794  0023EE                     __ptext62:
 11795                           	callstack 0
 11796  0023EE                     _EUSART_Async_Read_Data:
 11797                           	callstack 19
 11798  0023EE                     
 11799                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 11800  0023EE  0E00               	movlw	0
 11801  0023F0  0100               	movlb	0	; () banked
 11802  0023F2  6F6B               	movwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11803  0023F4  0E00               	movlw	0
 11804  0023F6  6F6A               	movwf	EUSART_Async_Read_Data@l_temp_data& (0+255),b
 11805  0023F8                     
 11806                           ; BSR set to: 0
 11807                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 11808  0023F8  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11809  0023FA  1161               	iorwf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11810  0023FC  B4D8               	btfsc	status,2,c
 11811  0023FE  EF03  F012         	goto	u11291
 11812  002402  EF05  F012         	goto	u11290
 11813  002406                     u11291:
 11814  002406  EF0E  F012         	goto	l10622
 11815  00240A                     u11290:
 11816  00240A                     
 11817                           ; BSR set to: 0
 11818  00240A  5162               	movf	EUSART_Async_Read_Data@data& (0+255),w,b
 11819  00240C  1163               	iorwf	(EUSART_Async_Read_Data@data+1)& (0+255),w,b
 11820  00240E  A4D8               	btfss	status,2,c
 11821  002410  EF0C  F012         	goto	u11301
 11822  002414  EF0E  F012         	goto	u11300
 11823  002418                     u11301:
 11824  002418  EF10  F012         	goto	l693
 11825  00241C                     u11300:
 11826  00241C                     l10622:
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 11830  00241C  EFEE  F012         	goto	l10672
 11831  002420                     l693:
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 11835  002420  AA9E               	btfss	158,5,c	;volatile
 11836  002422  EF15  F012         	goto	u11311
 11837  002426  EF17  F012         	goto	u11310
 11838  00242A                     u11311:
 11839  00242A  EF0E  F012         	goto	l10622
 11840  00242E                     u11310:
 11841  00242E                     
 11842                           ; BSR set to: 0
 11843                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 11844  00242E  EE20 F009          	lfsr	2,9
 11845  002432  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11846  002434  26D9               	addwf	fsr2l,f,c
 11847  002436  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11848  002438  22DA               	addwfc	fsr2h,f,c
 11849  00243A  B8DF               	btfsc	indf2,4,c
 11850  00243C  EF22  F012         	goto	u11321
 11851  002440  EF24  F012         	goto	u11320
 11852  002444                     u11321:
 11853  002444  EF31  F012         	goto	l10628
 11854  002448                     u11320:
 11855  002448                     
 11856                           ; BSR set to: 0
 11857                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 11858  002448  50AE               	movf	174,w,c	;volatile
 11859  00244A  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 11860  00244C  6A24               	clrf	(??_EUSART_Async_Read_Data+1)^0,c
 11861  00244E  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 11862  002452  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 11863  002456  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 11864  00245A  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 11865                           
 11866                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 11867  00245E  EFEE  F012         	goto	l10672
 11868  002462                     l10628:
 11869                           
 11870                           ; BSR set to: 0
 11871  002462  EE20 F009          	lfsr	2,9
 11872  002466  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11873  002468  26D9               	addwf	fsr2l,f,c
 11874  00246A  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11875  00246C  22DA               	addwfc	fsr2h,f,c
 11876  00246E  A8DF               	btfss	indf2,4,c
 11877  002470  EF3C  F012         	goto	u11331
 11878  002474  EF3E  F012         	goto	u11330
 11879  002478                     u11331:
 11880  002478  EFEE  F012         	goto	l706
 11881  00247C                     u11330:
 11882  00247C                     
 11883                           ; BSR set to: 0
 11884                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 11885  00247C  EE20 F009          	lfsr	2,9
 11886  002480  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11887  002482  26D9               	addwf	fsr2l,f,c
 11888  002484  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11889  002486  22DA               	addwfc	fsr2h,f,c
 11890  002488  30DF               	rrcf	223,w,c
 11891  00248A  0B03               	andlw	3
 11892  00248C  0900               	iorlw	0
 11893  00248E  A4D8               	btfss	status,2,c
 11894  002490  EF4C  F012         	goto	u11341
 11895  002494  EF4E  F012         	goto	u11340
 11896  002498                     u11341:
 11897  002498  EF70  F012         	goto	l10642
 11898  00249C                     u11340:
 11899  00249C                     
 11900                           ; BSR set to: 0
 11901                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 11902  00249C  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 11903  0024A0  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11904                           
 11905                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 11906  0024A2  B0AB               	btfsc	4011,0,c	;volatile
 11907  0024A4  EF56  F012         	goto	u11351
 11908  0024A8  EF58  F012         	goto	u11350
 11909  0024AC                     u11351:
 11910  0024AC  EF5E  F012         	goto	l10636
 11911  0024B0                     u11350:
 11912  0024B0                     
 11913                           ; BSR set to: 0
 11914  0024B0  0E00               	movlw	0
 11915  0024B2  6F65               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 11916  0024B4  0E00               	movlw	0
 11917  0024B6  6F64               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 11918  0024B8  EF62  F012         	goto	l10638
 11919  0024BC                     l10636:
 11920                           
 11921                           ; BSR set to: 0
 11922  0024BC  0E01               	movlw	1
 11923  0024BE  6F65               	movwf	(_EUSART_Async_Read_Data$2031+1)& (0+255),b
 11924  0024C0  0E00               	movlw	0
 11925  0024C2  6F64               	movwf	_EUSART_Async_Read_Data$2031& (0+255),b
 11926  0024C4                     l10638:
 11927                           
 11928                           ; BSR set to: 0
 11929  0024C4  5164               	movf	_EUSART_Async_Read_Data$2031& (0+255),w,b
 11930  0024C6  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 11931  0024C8  5165               	movf	(_EUSART_Async_Read_Data$2031+1)& (0+255),w,b
 11932  0024CA  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 11933  0024CC                     
 11934                           ; BSR set to: 0
 11935                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 11936  0024CC  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 11937  0024D0  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 11938  0024D4  C06A  FFDE         	movff	EUSART_Async_Read_Data@l_temp_data,postinc2
 11939  0024D8  C06B  FFDD         	movff	EUSART_Async_Read_Data@l_temp_data+1,postdec2
 11940                           
 11941                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 11942  0024DC  EFEE  F012         	goto	l10672
 11943  0024E0                     l10642:
 11944                           
 11945                           ; BSR set to: 0
 11946  0024E0  EE20 F009          	lfsr	2,9
 11947  0024E4  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 11948  0024E6  26D9               	addwf	fsr2l,f,c
 11949  0024E8  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 11950  0024EA  22DA               	addwfc	fsr2h,f,c
 11951  0024EC  30DF               	rrcf	223,w,c
 11952  0024EE  0B03               	andlw	3
 11953  0024F0  06E8               	decf	wreg,f,c
 11954  0024F2  A4D8               	btfss	status,2,c
 11955  0024F4  EF7E  F012         	goto	u11361
 11956  0024F8  EF80  F012         	goto	u11360
 11957  0024FC                     u11361:
 11958  0024FC  EFB6  F012         	goto	l10656
 11959  002500                     u11360:
 11960  002500                     
 11961                           ; BSR set to: 0
 11962                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 11963  002500  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 11964  002504  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 11965                           
 11966                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 11967  002506  B0AB               	btfsc	171,0,c	;volatile
 11968  002508  EF88  F012         	goto	u11371
 11969  00250C  EF8A  F012         	goto	u11370
 11970  002510                     u11371:
 11971  002510  EF90  F012         	goto	l10648
 11972  002514                     u11370:
 11973  002514                     
 11974                           ; BSR set to: 0
 11975  002514  0E00               	movlw	0
 11976  002516  6F67               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 11977  002518  0E00               	movlw	0
 11978  00251A  6F66               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 11979  00251C  EF94  F012         	goto	l10650
 11980  002520                     l10648:
 11981                           
 11982                           ; BSR set to: 0
 11983  002520  0E01               	movlw	1
 11984  002522  6F67               	movwf	(_EUSART_Async_Read_Data$2032+1)& (0+255),b
 11985  002524  0E00               	movlw	0
 11986  002526  6F66               	movwf	_EUSART_Async_Read_Data$2032& (0+255),b
 11987  002528                     l10650:
 11988                           
 11989                           ; BSR set to: 0
 11990  002528  5166               	movf	_EUSART_Async_Read_Data$2032& (0+255),w,b
 11991  00252A  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 11992  00252C  5167               	movf	(_EUSART_Async_Read_Data$2032+1)& (0+255),w,b
 11993  00252E  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 11994  002530                     
 11995                           ; BSR set to: 0
 11996                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 11997  002530  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 11998  002532  EC3D  F024         	call	_calc_parity_even
 11999  002536  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12000  002538  0100               	movlb	0	; () banked
 12001  00253A  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 12002  00253C  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 12003  00253E  A4D8               	btfss	status,2,c
 12004  002540  EFA4  F012         	goto	u11381
 12005  002544  EFA6  F012         	goto	u11380
 12006  002548                     u11381:
 12007  002548  EFEE  F012         	goto	l706
 12008  00254C                     u11380:
 12009  00254C                     l10654:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 12013  00254C  0EFF               	movlw	255
 12014  00254E  156A               	andwf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 12015  002550  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12016  002552  0E00               	movlw	0
 12017  002554  156B               	andwf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 12018  002556  6E24               	movwf	(??_EUSART_Async_Read_Data+1)^0,c
 12019  002558  C062  FFD9         	movff	EUSART_Async_Read_Data@data,fsr2l
 12020  00255C  C063  FFDA         	movff	EUSART_Async_Read_Data@data+1,fsr2h
 12021  002560  C023  FFDE         	movff	??_EUSART_Async_Read_Data,postinc2
 12022  002564  C024  FFDD         	movff	??_EUSART_Async_Read_Data+1,postdec2
 12023                           
 12024                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 12025  002568  EFEE  F012         	goto	l10672
 12026  00256C                     l10656:
 12027                           
 12028                           ; BSR set to: 0
 12029  00256C  EE20 F009          	lfsr	2,9
 12030  002570  5160               	movf	EUSART_Async_Read_Data@_eusart_obj& (0+255),w,b
 12031  002572  26D9               	addwf	fsr2l,f,c
 12032  002574  5161               	movf	(EUSART_Async_Read_Data@_eusart_obj+1)& (0+255),w,b
 12033  002576  22DA               	addwfc	fsr2h,f,c
 12034  002578  30DF               	rrcf	223,w,c
 12035  00257A  0B03               	andlw	3
 12036  00257C  0A02               	xorlw	2
 12037  00257E  A4D8               	btfss	status,2,c
 12038  002580  EFC4  F012         	goto	u11391
 12039  002584  EFC6  F012         	goto	u11390
 12040  002588                     u11391:
 12041  002588  EFEE  F012         	goto	l706
 12042  00258C                     u11390:
 12043  00258C                     
 12044                           ; BSR set to: 0
 12045                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 12046  00258C  CFAE F06A          	movff	4014,EUSART_Async_Read_Data@l_temp_data	;volatile
 12047  002590  6B6B               	clrf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),b
 12048                           
 12049                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 12050  002592  B0AB               	btfsc	171,0,c	;volatile
 12051  002594  EFCE  F012         	goto	u11401
 12052  002598  EFD0  F012         	goto	u11400
 12053  00259C                     u11401:
 12054  00259C  EFD6  F012         	goto	l10662
 12055  0025A0                     u11400:
 12056  0025A0                     
 12057                           ; BSR set to: 0
 12058  0025A0  0E00               	movlw	0
 12059  0025A2  6F69               	movwf	(_EUSART_Async_Read_Data$2033+1)& (0+255),b
 12060  0025A4  0E00               	movlw	0
 12061  0025A6  6F68               	movwf	_EUSART_Async_Read_Data$2033& (0+255),b
 12062  0025A8  EFDA  F012         	goto	l10664
 12063  0025AC                     l10662:
 12064                           
 12065                           ; BSR set to: 0
 12066  0025AC  0E01               	movlw	1
 12067  0025AE  6F69               	movwf	(_EUSART_Async_Read_Data$2033+1)& (0+255),b
 12068  0025B0  0E00               	movlw	0
 12069  0025B2  6F68               	movwf	_EUSART_Async_Read_Data$2033& (0+255),b
 12070  0025B4                     l10664:
 12071                           
 12072                           ; BSR set to: 0
 12073  0025B4  5168               	movf	_EUSART_Async_Read_Data$2033& (0+255),w,b
 12074  0025B6  276A               	addwf	EUSART_Async_Read_Data@l_temp_data& (0+255),f,b
 12075  0025B8  5169               	movf	(_EUSART_Async_Read_Data$2033+1)& (0+255),w,b
 12076  0025BA  236B               	addwfc	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),f,b
 12077  0025BC                     
 12078                           ; BSR set to: 0
 12079                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 12080  0025BC  516A               	movf	EUSART_Async_Read_Data@l_temp_data& (0+255),w,b
 12081  0025BE  EC09  F024         	call	_calc_parity_odd
 12082  0025C2  6E23               	movwf	??_EUSART_Async_Read_Data^0,c
 12083  0025C4  0100               	movlb	0	; () banked
 12084  0025C6  516B               	movf	(EUSART_Async_Read_Data@l_temp_data+1)& (0+255),w,b
 12085  0025C8  1823               	xorwf	??_EUSART_Async_Read_Data^0,w,c
 12086  0025CA  A4D8               	btfss	status,2,c
 12087  0025CC  EFEA  F012         	goto	u11411
 12088  0025D0  EFEC  F012         	goto	u11410
 12089  0025D4                     u11411:
 12090  0025D4  EFEE  F012         	goto	l706
 12091  0025D8                     u11410:
 12092  0025D8  EFA6  F012         	goto	l10654
 12093  0025DC                     l706:
 12094  0025DC                     l10672:
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 12098  0025DC  B2AB               	btfsc	171,1,c	;volatile
 12099  0025DE  EFF3  F012         	goto	u11421
 12100  0025E2  EFF5  F012         	goto	u11420
 12101  0025E6                     u11421:
 12102  0025E6  EFFC  F012         	goto	l727
 12103  0025EA                     u11420:
 12104  0025EA                     
 12105                           ; BSR set to: 0
 12106  0025EA  A4AB               	btfss	171,2,c	;volatile
 12107  0025EC  EFFA  F012         	goto	u11431
 12108  0025F0  EFFC  F012         	goto	u11430
 12109  0025F4                     u11431:
 12110  0025F4  EFFE  F012         	goto	l728
 12111  0025F8                     u11430:
 12112  0025F8                     l727:
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 12116  0025F8  98AB               	bcf	171,4,c	;volatile
 12117                           
 12118                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 12119  0025FA  88AB               	bsf	171,4,c	;volatile
 12120  0025FC                     l728:
 12121                           
 12122                           ; BSR set to: 0
 12123  0025FC  0012               	return		;funcret
 12124  0025FE                     __end_of_EUSART_Async_Read_Data:
 12125                           	callstack 0
 12126                           
 12127 ;; *************** function _calc_parity_odd *****************
 12128 ;; Defined at:
 12129 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  data            1    wreg     unsigned char 
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;  data            1   31[COMRAM] unsigned char 
 12134 ;;  l_counter       1   33[COMRAM] unsigned char 
 12135 ;;  number_of_on    1   32[COMRAM] unsigned char 
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      unsigned char 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12146 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;Total ram usage:        5 bytes
 12150 ;; Hardware stack levels used: 1
 12151 ;; Hardware stack levels required when called: 8
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_EUSART_Async_Read_Data
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text63
 12160  004812                     __ptext63:
 12161                           	callstack 0
 12162  004812                     _calc_parity_odd:
 12163                           	callstack 19
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;incstack = 0
 12167                           ;calc_parity_odd@data stored from wreg
 12168  004812  6E20               	movwf	calc_parity_odd@data^0,c
 12169  004814                     
 12170                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 12171  004814  0E00               	movlw	0
 12172  004816  6E21               	movwf	calc_parity_odd@number_of_ones^0,c
 12173                           
 12174                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 12175  004818  0E00               	movlw	0
 12176  00481A  6E22               	movwf	calc_parity_odd@l_counter^0,c
 12177                           
 12178                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 12179  00481C  0E00               	movlw	0
 12180  00481E  6E22               	movwf	calc_parity_odd@l_counter^0,c
 12181  004820                     l10430:
 12182                           
 12183                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 12184  004820  C022  F01E         	movff	calc_parity_odd@l_counter,??_calc_parity_odd
 12185  004824  0E01               	movlw	1
 12186  004826  6E1F               	movwf	(??_calc_parity_odd+1)^0,c
 12187  004828  2A1E               	incf	??_calc_parity_odd^0,f,c
 12188  00482A  EF19  F024         	goto	u11024
 12189  00482E                     u11025:
 12190  00482E  90D8               	bcf	status,0,c
 12191  004830  361F               	rlcf	(??_calc_parity_odd+1)^0,f,c
 12192  004832                     u11024:
 12193  004832  2E1E               	decfsz	??_calc_parity_odd^0,f,c
 12194  004834  EF17  F024         	goto	u11025
 12195  004838  501F               	movf	(??_calc_parity_odd+1)^0,w,c
 12196  00483A  1420               	andwf	calc_parity_odd@data^0,w,c
 12197  00483C  0900               	iorlw	0
 12198  00483E  B4D8               	btfsc	status,2,c
 12199  004840  EF24  F024         	goto	u11031
 12200  004844  EF26  F024         	goto	u11030
 12201  004848                     u11031:
 12202  004848  EF27  F024         	goto	l826
 12203  00484C                     u11030:
 12204  00484C                     
 12205                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 12206  00484C  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 12207  00484E                     l826:
 12208                           
 12209                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 12210  00484E  2A22               	incf	calc_parity_odd@l_counter^0,f,c
 12211  004850  0E07               	movlw	7
 12212  004852  6422               	cpfsgt	calc_parity_odd@l_counter^0,c
 12213  004854  EF2E  F024         	goto	u11041
 12214  004858  EF30  F024         	goto	u11040
 12215  00485C                     u11041:
 12216  00485C  EF10  F024         	goto	l10430
 12217  004860                     u11040:
 12218  004860                     
 12219                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 12220  004860  2A21               	incf	calc_parity_odd@number_of_ones^0,f,c
 12221  004862                     
 12222                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 12223  004862  B021               	btfsc	calc_parity_odd@number_of_ones^0,0,c
 12224  004864  EF36  F024         	goto	u11051
 12225  004868  EF38  F024         	goto	u11050
 12226  00486C                     u11051:
 12227  00486C  EF3B  F024         	goto	l10444
 12228  004870                     u11050:
 12229  004870                     
 12230                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 12231  004870  0E01               	movlw	1
 12232  004872  EF3C  F024         	goto	l828
 12233  004876                     l10444:
 12234                           
 12235                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 12236  004876  0E00               	movlw	0
 12237  004878                     l828:
 12238  004878  0012               	return		;funcret
 12239  00487A                     __end_of_calc_parity_odd:
 12240                           	callstack 0
 12241                           
 12242 ;; *************** function _calc_parity_even *****************
 12243 ;; Defined at:
 12244 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;  data            1    wreg     unsigned char 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  data            1   31[COMRAM] unsigned char 
 12249 ;;  l_counter       1   33[COMRAM] unsigned char 
 12250 ;;  number_of_on    1   32[COMRAM] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      unsigned char 
 12253 ;; Registers used:
 12254 ;;		wreg, status,2, status,0
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12264 ;;Total ram usage:        5 bytes
 12265 ;; Hardware stack levels used: 1
 12266 ;; Hardware stack levels required when called: 8
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		_EUSART_Async_Read_Data
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           	psect	text64
 12275  00487A                     __ptext64:
 12276                           	callstack 0
 12277  00487A                     _calc_parity_even:
 12278                           	callstack 19
 12279                           
 12280                           ;incstack = 0
 12281                           ;calc_parity_even@data stored from wreg
 12282  00487A  6E20               	movwf	calc_parity_even@data^0,c
 12283  00487C                     
 12284                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 12285  00487C  0E00               	movlw	0
 12286  00487E  6E21               	movwf	calc_parity_even@number_of_ones^0,c
 12287                           
 12288                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 12289  004880  0E00               	movlw	0
 12290  004882  6E22               	movwf	calc_parity_even@l_counter^0,c
 12291                           
 12292                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 12293  004884  0E00               	movlw	0
 12294  004886  6E22               	movwf	calc_parity_even@l_counter^0,c
 12295  004888                     l10406:
 12296                           
 12297                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 12298  004888  C022  F01E         	movff	calc_parity_even@l_counter,??_calc_parity_even
 12299  00488C  0E01               	movlw	1
 12300  00488E  6E1F               	movwf	(??_calc_parity_even+1)^0,c
 12301  004890  2A1E               	incf	??_calc_parity_even^0,f,c
 12302  004892  EF4D  F024         	goto	u10984
 12303  004896                     u10985:
 12304  004896  90D8               	bcf	status,0,c
 12305  004898  361F               	rlcf	(??_calc_parity_even+1)^0,f,c
 12306  00489A                     u10984:
 12307  00489A  2E1E               	decfsz	??_calc_parity_even^0,f,c
 12308  00489C  EF4B  F024         	goto	u10985
 12309  0048A0  501F               	movf	(??_calc_parity_even+1)^0,w,c
 12310  0048A2  1420               	andwf	calc_parity_even@data^0,w,c
 12311  0048A4  0900               	iorlw	0
 12312  0048A6  B4D8               	btfsc	status,2,c
 12313  0048A8  EF58  F024         	goto	u10991
 12314  0048AC  EF5A  F024         	goto	u10990
 12315  0048B0                     u10991:
 12316  0048B0  EF5B  F024         	goto	l833
 12317  0048B4                     u10990:
 12318  0048B4                     
 12319                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 12320  0048B4  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 12321  0048B6                     l833:
 12322                           
 12323                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 12324  0048B6  2A22               	incf	calc_parity_even@l_counter^0,f,c
 12325  0048B8  0E07               	movlw	7
 12326  0048BA  6422               	cpfsgt	calc_parity_even@l_counter^0,c
 12327  0048BC  EF62  F024         	goto	u11001
 12328  0048C0  EF64  F024         	goto	u11000
 12329  0048C4                     u11001:
 12330  0048C4  EF44  F024         	goto	l10406
 12331  0048C8                     u11000:
 12332  0048C8                     
 12333                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 12334  0048C8  2A21               	incf	calc_parity_even@number_of_ones^0,f,c
 12335  0048CA                     
 12336                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 12337  0048CA  A021               	btfss	calc_parity_even@number_of_ones^0,0,c
 12338  0048CC  EF6A  F024         	goto	u11011
 12339  0048D0  EF6C  F024         	goto	u11010
 12340  0048D4                     u11011:
 12341  0048D4  EF6F  F024         	goto	l10420
 12342  0048D8                     u11010:
 12343  0048D8                     
 12344                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 12345  0048D8  0E01               	movlw	1
 12346  0048DA  EF70  F024         	goto	l835
 12347  0048DE                     l10420:
 12348                           
 12349                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 12350  0048DE  0E00               	movlw	0
 12351  0048E0                     l835:
 12352  0048E0  0012               	return		;funcret
 12353  0048E2                     __end_of_calc_parity_even:
 12354                           	callstack 0
 12355                           
 12356 ;; *************** function _GPIO_Pin_Toggle_Logic *****************
 12357 ;; Defined at:
 12358 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  _pin_config     2   29[COMRAM] PTR const struct .
 12361 ;;		 -> TEST_PIN(1), 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  ERRORSTATUS     1    0        unsigned char 
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      unsigned char 
 12366 ;; Registers used:
 12367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12377 ;;Total ram usage:        7 bytes
 12378 ;; Hardware stack levels used: 1
 12379 ;; Hardware stack levels required when called: 8
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_main
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text65
 12388  0045EE                     __ptext65:
 12389                           	callstack 0
 12390  0045EE                     _GPIO_Pin_Toggle_Logic:
 12391                           	callstack 22
 12392  0045EE                     
 12393                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 12394  0045EE  501E               	movf	GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 12395  0045F0  101F               	iorwf	(GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 12396  0045F2  A4D8               	btfss	status,2,c
 12397  0045F4  EFFE  F022         	goto	u8231
 12398  0045F8  EF00  F023         	goto	u8230
 12399  0045FC                     u8231:
 12400  0045FC  EF02  F023         	goto	l8306
 12401  004600                     u8230:
 12402  004600                     
 12403                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 12404  004600  EF2E  F023         	goto	l921
 12405  004604                     l8306:
 12406                           
 12407                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 12408  004604  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 12409  004608  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 12410  00460C  50DF               	movf	223,w,c
 12411  00460E  0B07               	andlw	7
 12412  004610  6E20               	movwf	??_GPIO_Pin_Toggle_Logic^0,c
 12413  004612  0E01               	movlw	1
 12414  004614  6E21               	movwf	(??_GPIO_Pin_Toggle_Logic+1)^0,c
 12415  004616  2A20               	incf	??_GPIO_Pin_Toggle_Logic^0,f,c
 12416  004618  EF10  F023         	goto	u8244
 12417  00461C                     u8245:
 12418  00461C  90D8               	bcf	status,0,c
 12419  00461E  3621               	rlcf	(??_GPIO_Pin_Toggle_Logic+1)^0,f,c
 12420  004620                     u8244:
 12421  004620  2E20               	decfsz	??_GPIO_Pin_Toggle_Logic^0,f,c
 12422  004622  EF0E  F023         	goto	u8245
 12423  004626  C01E  FFD9         	movff	GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 12424  00462A  C01F  FFDA         	movff	GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 12425  00462E  30DF               	rrcf	223,w,c
 12426  004630  32E8               	rrcf	wreg,f,c
 12427  004632  32E8               	rrcf	wreg,f,c
 12428  004634  0B07               	andlw	7
 12429  004636  6E22               	movwf	(??_GPIO_Pin_Toggle_Logic+2)^0,c
 12430  004638  5022               	movf	(??_GPIO_Pin_Toggle_Logic+2)^0,w,c
 12431  00463A  0D02               	mullw	2
 12432  00463C  0EB2               	movlw	low _lat_registers
 12433  00463E  24F3               	addwf	243,w,c
 12434  004640  6ED9               	movwf	fsr2l,c
 12435  004642  0E00               	movlw	high _lat_registers
 12436  004644  20F4               	addwfc	prodh,w,c
 12437  004646  6EDA               	movwf	fsr2h,c
 12438  004648  CFDE F023          	movff	postinc2,??_GPIO_Pin_Toggle_Logic+3
 12439  00464C  CFDD F024          	movff	postdec2,??_GPIO_Pin_Toggle_Logic+4
 12440  004650  C023  FFD9         	movff	??_GPIO_Pin_Toggle_Logic+3,fsr2l
 12441  004654  C024  FFDA         	movff	??_GPIO_Pin_Toggle_Logic+4,fsr2h
 12442  004658  5021               	movf	(??_GPIO_Pin_Toggle_Logic+1)^0,w,c
 12443  00465A  1ADF               	xorwf	indf2,f,c
 12444  00465C                     l921:
 12445  00465C  0012               	return		;funcret
 12446  00465E                     __end_of_GPIO_Pin_Toggle_Logic:
 12447                           	callstack 0
 12448                           
 12449 ;; *************** function _InterruptManagerLow *****************
 12450 ;; Defined at:
 12451 ;;		line 101 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;		None
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;		None
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      void 
 12458 ;; Registers used:
 12459 ;;		wreg, status,2, cstack
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12467 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12469 ;;Total ram usage:        3 bytes
 12470 ;; Hardware stack levels used: 1
 12471 ;; Hardware stack levels required when called: 7
 12472 ;; This function calls:
 12473 ;;		_ADC_ISR
 12474 ;;		_INT1_ISR
 12475 ;;		_RB4_ISR
 12476 ;;		_RB5_ISR
 12477 ;;		_RB6_ISR
 12478 ;;		_RB7_ISR
 12479 ;; This function is called by:
 12480 ;;		Interrupt level 1
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           	psect	intcodelo
 12485  000018                     __pintcodelo:
 12486                           	callstack 0
 12487  000018                     _InterruptManagerLow:
 12488                           	callstack 17
 12489                           
 12490                           ;incstack = 0
 12491  000018  8042               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12492  00001A  CFD8 F01B          	movff	status,??_InterruptManagerLow
 12493  00001E  CFE8 F01C          	movff	wreg,??_InterruptManagerLow+1
 12494  000022  CFE0 F01D          	movff	bsr,??_InterruptManagerLow+2
 12495  000026                     
 12496                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 103:     if( (1 == INTCON3bits.INT1IE) && (1 
      +                          == INTCON3bits.INT1IF) )
 12497  000026  A6F0               	btfss	240,3,c	;volatile
 12498  000028  EF18  F000         	goto	i1u922_21
 12499  00002C  EF1A  F000         	goto	i1u922_20
 12500  000030                     i1u922_21:
 12501  000030  EF23  F000         	goto	i1l1164
 12502  000034                     i1u922_20:
 12503  000034  A0F0               	btfss	240,0,c	;volatile
 12504  000036  EF1F  F000         	goto	i1u923_21
 12505  00003A  EF21  F000         	goto	i1u923_20
 12506  00003E                     i1u923_21:
 12507  00003E  EF23  F000         	goto	i1l1164
 12508  000042                     i1u923_20:
 12509  000042                     
 12510                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 104:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 105:         INT1_ISR();
 12511  000042  ECDC  F027         	call	_INT1_ISR	;wreg free
 12512  000046                     i1l1164:
 12513                           
 12514                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 111:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12515  000046  A6F2               	btfss	242,3,c	;volatile
 12516  000048  EF28  F000         	goto	i1u924_21
 12517  00004C  EF2A  F000         	goto	i1u924_20
 12518  000050                     i1u924_21:
 12519  000050  EF43  F000         	goto	i1l1166
 12520  000054                     i1u924_20:
 12521  000054  A0F2               	btfss	242,0,c	;volatile
 12522  000056  EF2F  F000         	goto	i1u925_21
 12523  00005A  EF31  F000         	goto	i1u925_20
 12524  00005E                     i1u925_21:
 12525  00005E  EF43  F000         	goto	i1l1166
 12526  000062                     i1u925_20:
 12527  000062  A881               	btfss	129,4,c	;volatile
 12528  000064  EF36  F000         	goto	i1u926_21
 12529  000068  EF38  F000         	goto	i1u926_20
 12530  00006C                     i1u926_21:
 12531  00006C  EF43  F000         	goto	i1l1166
 12532  000070                     i1u926_20:
 12533  000070  A03D               	btfss	_flags^0,0,c	;volatile
 12534  000072  EF3D  F000         	goto	i1u927_21
 12535  000076  EF3F  F000         	goto	i1u927_20
 12536  00007A                     i1u927_21:
 12537  00007A  EF43  F000         	goto	i1l1166
 12538  00007E                     i1u927_20:
 12539  00007E                     
 12540                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 113:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 114:         flags.rb4_flag = 0x00 ;
 12541  00007E  903D               	bcf	_flags^0,0,c	;volatile
 12542  000080                     
 12543                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 115:         RB4_ISR(0x01);
 12544  000080  0E01               	movlw	1
 12545  000082  ECC8  F027         	call	_RB4_ISR
 12546  000086                     i1l1166:
 12547                           
 12548                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 119:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12549  000086  A6F2               	btfss	242,3,c	;volatile
 12550  000088  EF48  F000         	goto	i1u928_21
 12551  00008C  EF4A  F000         	goto	i1u928_20
 12552  000090                     i1u928_21:
 12553  000090  EF63  F000         	goto	i1l1168
 12554  000094                     i1u928_20:
 12555  000094  A0F2               	btfss	242,0,c	;volatile
 12556  000096  EF4F  F000         	goto	i1u929_21
 12557  00009A  EF51  F000         	goto	i1u929_20
 12558  00009E                     i1u929_21:
 12559  00009E  EF63  F000         	goto	i1l1168
 12560  0000A2                     i1u929_20:
 12561  0000A2  B881               	btfsc	129,4,c	;volatile
 12562  0000A4  EF56  F000         	goto	i1u930_21
 12563  0000A8  EF58  F000         	goto	i1u930_20
 12564  0000AC                     i1u930_21:
 12565  0000AC  EF63  F000         	goto	i1l1168
 12566  0000B0                     i1u930_20:
 12567  0000B0  B03D               	btfsc	_flags^0,0,c	;volatile
 12568  0000B2  EF5D  F000         	goto	i1u931_21
 12569  0000B6  EF5F  F000         	goto	i1u931_20
 12570  0000BA                     i1u931_21:
 12571  0000BA  EF63  F000         	goto	i1l1168
 12572  0000BE                     i1u931_20:
 12573  0000BE                     
 12574                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 121:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 122:         flags.rb4_flag = 0x01 ;
 12575  0000BE  803D               	bsf	_flags^0,0,c	;volatile
 12576  0000C0                     
 12577                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 123:         RB4_ISR(0x00);
 12578  0000C0  0E00               	movlw	0
 12579  0000C2  ECC8  F027         	call	_RB4_ISR
 12580  0000C6                     i1l1168:
 12581                           
 12582                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 128:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12583  0000C6  A6F2               	btfss	242,3,c	;volatile
 12584  0000C8  EF68  F000         	goto	i1u932_21
 12585  0000CC  EF6A  F000         	goto	i1u932_20
 12586  0000D0                     i1u932_21:
 12587  0000D0  EF83  F000         	goto	i1l1170
 12588  0000D4                     i1u932_20:
 12589  0000D4  A0F2               	btfss	242,0,c	;volatile
 12590  0000D6  EF6F  F000         	goto	i1u933_21
 12591  0000DA  EF71  F000         	goto	i1u933_20
 12592  0000DE                     i1u933_21:
 12593  0000DE  EF83  F000         	goto	i1l1170
 12594  0000E2                     i1u933_20:
 12595  0000E2  AA81               	btfss	129,5,c	;volatile
 12596  0000E4  EF76  F000         	goto	i1u934_21
 12597  0000E8  EF78  F000         	goto	i1u934_20
 12598  0000EC                     i1u934_21:
 12599  0000EC  EF83  F000         	goto	i1l1170
 12600  0000F0                     i1u934_20:
 12601  0000F0  A23D               	btfss	_flags^0,1,c	;volatile
 12602  0000F2  EF7D  F000         	goto	i1u935_21
 12603  0000F6  EF7F  F000         	goto	i1u935_20
 12604  0000FA                     i1u935_21:
 12605  0000FA  EF83  F000         	goto	i1l1170
 12606  0000FE                     i1u935_20:
 12607  0000FE                     
 12608                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 130:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 131:         flags.rb5_flag = 0x00 ;
 12609  0000FE  923D               	bcf	_flags^0,1,c	;volatile
 12610  000100                     
 12611                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 132:         RB5_ISR(0x01);
 12612  000100  0E01               	movlw	1
 12613  000102  ECBB  F027         	call	_RB5_ISR
 12614  000106                     i1l1170:
 12615                           
 12616                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 136:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12617  000106  A6F2               	btfss	242,3,c	;volatile
 12618  000108  EF88  F000         	goto	i1u936_21
 12619  00010C  EF8A  F000         	goto	i1u936_20
 12620  000110                     i1u936_21:
 12621  000110  EFA3  F000         	goto	i1l1172
 12622  000114                     i1u936_20:
 12623  000114  A0F2               	btfss	242,0,c	;volatile
 12624  000116  EF8F  F000         	goto	i1u937_21
 12625  00011A  EF91  F000         	goto	i1u937_20
 12626  00011E                     i1u937_21:
 12627  00011E  EFA3  F000         	goto	i1l1172
 12628  000122                     i1u937_20:
 12629  000122  BA81               	btfsc	129,5,c	;volatile
 12630  000124  EF96  F000         	goto	i1u938_21
 12631  000128  EF98  F000         	goto	i1u938_20
 12632  00012C                     i1u938_21:
 12633  00012C  EFA3  F000         	goto	i1l1172
 12634  000130                     i1u938_20:
 12635  000130  B23D               	btfsc	_flags^0,1,c	;volatile
 12636  000132  EF9D  F000         	goto	i1u939_21
 12637  000136  EF9F  F000         	goto	i1u939_20
 12638  00013A                     i1u939_21:
 12639  00013A  EFA3  F000         	goto	i1l1172
 12640  00013E                     i1u939_20:
 12641  00013E                     
 12642                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 138:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 139:         flags.rb5_flag = 0x01 ;
 12643  00013E  823D               	bsf	_flags^0,1,c	;volatile
 12644  000140                     
 12645                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 140:         RB5_ISR(0x00);
 12646  000140  0E00               	movlw	0
 12647  000142  ECBB  F027         	call	_RB5_ISR
 12648  000146                     i1l1172:
 12649                           
 12650                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 145:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12651  000146  A6F2               	btfss	242,3,c	;volatile
 12652  000148  EFA8  F000         	goto	i1u940_21
 12653  00014C  EFAA  F000         	goto	i1u940_20
 12654  000150                     i1u940_21:
 12655  000150  EFC3  F000         	goto	i1l1174
 12656  000154                     i1u940_20:
 12657  000154  A0F2               	btfss	242,0,c	;volatile
 12658  000156  EFAF  F000         	goto	i1u941_21
 12659  00015A  EFB1  F000         	goto	i1u941_20
 12660  00015E                     i1u941_21:
 12661  00015E  EFC3  F000         	goto	i1l1174
 12662  000162                     i1u941_20:
 12663  000162  AC81               	btfss	129,6,c	;volatile
 12664  000164  EFB6  F000         	goto	i1u942_21
 12665  000168  EFB8  F000         	goto	i1u942_20
 12666  00016C                     i1u942_21:
 12667  00016C  EFC3  F000         	goto	i1l1174
 12668  000170                     i1u942_20:
 12669  000170  A43D               	btfss	_flags^0,2,c	;volatile
 12670  000172  EFBD  F000         	goto	i1u943_21
 12671  000176  EFBF  F000         	goto	i1u943_20
 12672  00017A                     i1u943_21:
 12673  00017A  EFC3  F000         	goto	i1l1174
 12674  00017E                     i1u943_20:
 12675  00017E                     
 12676                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 147:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 148:         flags.rb6_flag = 0x00 ;
 12677  00017E  943D               	bcf	_flags^0,2,c	;volatile
 12678  000180                     
 12679                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 149:         RB6_ISR(0x01);
 12680  000180  0E01               	movlw	1
 12681  000182  ECAE  F027         	call	_RB6_ISR
 12682  000186                     i1l1174:
 12683                           
 12684                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 153:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12685  000186  A6F2               	btfss	242,3,c	;volatile
 12686  000188  EFC8  F000         	goto	i1u944_21
 12687  00018C  EFCA  F000         	goto	i1u944_20
 12688  000190                     i1u944_21:
 12689  000190  EFE3  F000         	goto	i1l1176
 12690  000194                     i1u944_20:
 12691  000194  A0F2               	btfss	242,0,c	;volatile
 12692  000196  EFCF  F000         	goto	i1u945_21
 12693  00019A  EFD1  F000         	goto	i1u945_20
 12694  00019E                     i1u945_21:
 12695  00019E  EFE3  F000         	goto	i1l1176
 12696  0001A2                     i1u945_20:
 12697  0001A2  BC81               	btfsc	129,6,c	;volatile
 12698  0001A4  EFD6  F000         	goto	i1u946_21
 12699  0001A8  EFD8  F000         	goto	i1u946_20
 12700  0001AC                     i1u946_21:
 12701  0001AC  EFE3  F000         	goto	i1l1176
 12702  0001B0                     i1u946_20:
 12703  0001B0  B43D               	btfsc	_flags^0,2,c	;volatile
 12704  0001B2  EFDD  F000         	goto	i1u947_21
 12705  0001B6  EFDF  F000         	goto	i1u947_20
 12706  0001BA                     i1u947_21:
 12707  0001BA  EFE3  F000         	goto	i1l1176
 12708  0001BE                     i1u947_20:
 12709  0001BE                     
 12710                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 155:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 156:         flags.rb6_flag = 0x01 ;
 12711  0001BE  843D               	bsf	_flags^0,2,c	;volatile
 12712  0001C0                     
 12713                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 157:         RB6_ISR(0x00);
 12714  0001C0  0E00               	movlw	0
 12715  0001C2  ECAE  F027         	call	_RB6_ISR
 12716  0001C6                     i1l1176:
 12717                           
 12718                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 162:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12719  0001C6  A6F2               	btfss	242,3,c	;volatile
 12720  0001C8  EFE8  F000         	goto	i1u948_21
 12721  0001CC  EFEA  F000         	goto	i1u948_20
 12722  0001D0                     i1u948_21:
 12723  0001D0  EF03  F001         	goto	i1l1178
 12724  0001D4                     i1u948_20:
 12725  0001D4  A0F2               	btfss	242,0,c	;volatile
 12726  0001D6  EFEF  F000         	goto	i1u949_21
 12727  0001DA  EFF1  F000         	goto	i1u949_20
 12728  0001DE                     i1u949_21:
 12729  0001DE  EF03  F001         	goto	i1l1178
 12730  0001E2                     i1u949_20:
 12731  0001E2  AE81               	btfss	129,7,c	;volatile
 12732  0001E4  EFF6  F000         	goto	i1u950_21
 12733  0001E8  EFF8  F000         	goto	i1u950_20
 12734  0001EC                     i1u950_21:
 12735  0001EC  EF03  F001         	goto	i1l1178
 12736  0001F0                     i1u950_20:
 12737  0001F0  A63D               	btfss	_flags^0,3,c	;volatile
 12738  0001F2  EFFD  F000         	goto	i1u951_21
 12739  0001F6  EFFF  F000         	goto	i1u951_20
 12740  0001FA                     i1u951_21:
 12741  0001FA  EF03  F001         	goto	i1l1178
 12742  0001FE                     i1u951_20:
 12743  0001FE                     
 12744                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 164:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 165:         flags.rb7_flag = 0x00 ;
 12745  0001FE  963D               	bcf	_flags^0,3,c	;volatile
 12746  000200                     
 12747                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 166:         RB7_ISR(0x01);
 12748  000200  0E01               	movlw	1
 12749  000202  ECA1  F027         	call	_RB7_ISR
 12750  000206                     i1l1178:
 12751                           
 12752                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 170:     if( (1 == INTCONbits.RBIE) && (1 == 
      +                          INTCONbits.RBIF) &&
 12753  000206  A6F2               	btfss	242,3,c	;volatile
 12754  000208  EF08  F001         	goto	i1u952_21
 12755  00020C  EF0A  F001         	goto	i1u952_20
 12756  000210                     i1u952_21:
 12757  000210  EF23  F001         	goto	i1l1180
 12758  000214                     i1u952_20:
 12759  000214  A0F2               	btfss	242,0,c	;volatile
 12760  000216  EF0F  F001         	goto	i1u953_21
 12761  00021A  EF11  F001         	goto	i1u953_20
 12762  00021E                     i1u953_21:
 12763  00021E  EF23  F001         	goto	i1l1180
 12764  000222                     i1u953_20:
 12765  000222  BE81               	btfsc	129,7,c	;volatile
 12766  000224  EF16  F001         	goto	i1u954_21
 12767  000228  EF18  F001         	goto	i1u954_20
 12768  00022C                     i1u954_21:
 12769  00022C  EF23  F001         	goto	i1l1180
 12770  000230                     i1u954_20:
 12771  000230  B63D               	btfsc	_flags^0,3,c	;volatile
 12772  000232  EF1D  F001         	goto	i1u955_21
 12773  000236  EF1F  F001         	goto	i1u955_20
 12774  00023A                     i1u955_21:
 12775  00023A  EF23  F001         	goto	i1l1180
 12776  00023E                     i1u955_20:
 12777  00023E                     
 12778                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 172:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 173:         flags.rb7_flag = 0x01 ;
 12779  00023E  863D               	bsf	_flags^0,3,c	;volatile
 12780  000240                     
 12781                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 174:         RB7_ISR(0x00);
 12782  000240  0E00               	movlw	0
 12783  000242  ECA1  F027         	call	_RB7_ISR
 12784  000246                     i1l1180:
 12785                           
 12786                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 181:     if( (1 == PIE1bits.ADIE) && (1 == PI
      +                          R1bits.ADIF) )
 12787  000246  AC9D               	btfss	157,6,c	;volatile
 12788  000248  EF28  F001         	goto	i1u956_21
 12789  00024C  EF2A  F001         	goto	i1u956_20
 12790  000250                     i1u956_21:
 12791  000250  EF33  F001         	goto	i1l1182
 12792  000254                     i1u956_20:
 12793  000254  AC9E               	btfss	158,6,c	;volatile
 12794  000256  EF2F  F001         	goto	i1u957_21
 12795  00025A  EF31  F001         	goto	i1u957_20
 12796  00025E                     i1u957_21:
 12797  00025E  EF33  F001         	goto	i1l1182
 12798  000262                     i1u957_20:
 12799  000262                     
 12800                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 182:     {;MCAL/Interrupts/mcal_interrupt_man
      +                          ager.c: 183:         ADC_ISR();
 12801  000262  ECE1  F027         	call	_ADC_ISR	;wreg free
 12802  000266                     i1l1182:
 12803                           
 12804                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 187:     if( (1 == PIE1bits.TMR1IE) && (1 == 
      +                          PIR1bits.TMR1IF) )
 12805  000266  A09D               	btfss	157,0,c	;volatile
 12806  000268  EF38  F001         	goto	i1u958_21
 12807  00026C  EF3A  F001         	goto	i1u958_20
 12808  000270                     i1u958_21:
 12809  000270  EF3B  F001         	goto	i1l1185
 12810  000274                     i1u958_20:
 12811  000274  509E               	movf	158,w,c	;volatile
 12812  000276                     i1l1185:
 12813  000276  C01D  FFE0         	movff	??_InterruptManagerLow+2,bsr
 12814  00027A  C01C  FFE8         	movff	??_InterruptManagerLow+1,wreg
 12815  00027E  C01B  FFD8         	movff	??_InterruptManagerLow,status
 12816  000282  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12817  000284  0010               	retfie	
 12818  000286                     __end_of_InterruptManagerLow:
 12819                           	callstack 0
 12820                           
 12821 ;; *************** function _RB7_ISR *****************
 12822 ;; Defined at:
 12823 ;;		line 175 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;  Handler_Sele    1    wreg     unsigned char 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  1    wreg      void 
 12830 ;; Registers used:
 12831 ;;		wreg, status,2
 12832 ;; Tracked objects:
 12833 ;;		On entry : 0/0
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12841 ;;Total ram usage:        1 bytes
 12842 ;; Hardware stack levels used: 1
 12843 ;; Hardware stack levels required when called: 6
 12844 ;; This function calls:
 12845 ;;		Nothing
 12846 ;; This function is called by:
 12847 ;;		_InterruptManagerLow
 12848 ;; This function uses a non-reentrant model
 12849 ;;
 12850                           
 12851                           	psect	text67
 12852  004F42                     __ptext67:
 12853                           	callstack 0
 12854  004F42                     _RB7_ISR:
 12855                           	callstack 17
 12856                           
 12857                           ;incstack = 0
 12858                           ;RB7_ISR@Handler_Select stored from wreg
 12859  004F42  6E1A               	movwf	RB7_ISR@Handler_Select^0,c
 12860  004F44                     
 12861                           ;MCAL/Interrupts/mcal_external_interrupt.c: 175: void RB7_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 176: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 178:     (INTCONbits.RBIF = 0 );
 12862  004F44  90F2               	bcf	242,0,c	;volatile
 12863  004F46                     
 12864                           ;MCAL/Interrupts/mcal_external_interrupt.c: 182:     if(Handler_Select)
 12865  004F46  501A               	movf	RB7_ISR@Handler_Select^0,w,c
 12866  004F48  B4D8               	btfsc	status,2,c
 12867  004F4A  EFA9  F027         	goto	i1u828_21
 12868  004F4E  EFAB  F027         	goto	i1u828_20
 12869  004F52                     i1u828_21:
 12870  004F52  EFAD  F027         	goto	i1l8346
 12871  004F56                     i1u828_20:
 12872  004F56  EFAD  F027         	goto	i1l1291
 12873  004F5A                     i1l8346:
 12874  004F5A                     i1l1291:
 12875  004F5A  0012               	return		;funcret
 12876  004F5C                     __end_of_RB7_ISR:
 12877                           	callstack 0
 12878                           
 12879 ;; *************** function _RB6_ISR *****************
 12880 ;; Defined at:
 12881 ;;		line 150 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  Handler_Sele    1    wreg     unsigned char 
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		wreg, status,2
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;Total ram usage:        1 bytes
 12900 ;; Hardware stack levels used: 1
 12901 ;; Hardware stack levels required when called: 6
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_InterruptManagerLow
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           	psect	text68
 12910  004F5C                     __ptext68:
 12911                           	callstack 0
 12912  004F5C                     _RB6_ISR:
 12913                           	callstack 17
 12914                           
 12915                           ;incstack = 0
 12916                           ;RB6_ISR@Handler_Select stored from wreg
 12917  004F5C  6E1A               	movwf	RB6_ISR@Handler_Select^0,c
 12918  004F5E                     
 12919                           ;MCAL/Interrupts/mcal_external_interrupt.c: 150: void RB6_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 151: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 153:     (INTCONbits.RBIF = 0 );
 12920  004F5E  90F2               	bcf	242,0,c	;volatile
 12921  004F60                     
 12922                           ;MCAL/Interrupts/mcal_external_interrupt.c: 157:     if(Handler_Select)
 12923  004F60  501A               	movf	RB6_ISR@Handler_Select^0,w,c
 12924  004F62  B4D8               	btfsc	status,2,c
 12925  004F64  EFB6  F027         	goto	i1u827_21
 12926  004F68  EFB8  F027         	goto	i1u827_20
 12927  004F6C                     i1u827_21:
 12928  004F6C  EFBA  F027         	goto	i1l8336
 12929  004F70                     i1u827_20:
 12930  004F70  EFBA  F027         	goto	i1l1282
 12931  004F74                     i1l8336:
 12932  004F74                     i1l1282:
 12933  004F74  0012               	return		;funcret
 12934  004F76                     __end_of_RB6_ISR:
 12935                           	callstack 0
 12936                           
 12937 ;; *************** function _RB5_ISR *****************
 12938 ;; Defined at:
 12939 ;;		line 125 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  Handler_Sele    1    wreg     unsigned char 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      void 
 12946 ;; Registers used:
 12947 ;;		wreg, status,2
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12957 ;;Total ram usage:        1 bytes
 12958 ;; Hardware stack levels used: 1
 12959 ;; Hardware stack levels required when called: 6
 12960 ;; This function calls:
 12961 ;;		Nothing
 12962 ;; This function is called by:
 12963 ;;		_InterruptManagerLow
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text69
 12968  004F76                     __ptext69:
 12969                           	callstack 0
 12970  004F76                     _RB5_ISR:
 12971                           	callstack 17
 12972                           
 12973                           ;incstack = 0
 12974                           ;RB5_ISR@Handler_Select stored from wreg
 12975  004F76  6E1A               	movwf	RB5_ISR@Handler_Select^0,c
 12976  004F78                     
 12977                           ;MCAL/Interrupts/mcal_external_interrupt.c: 125: void RB5_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 126: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 128:     (INTCONbits.RBIF = 0 );
 12978  004F78  90F2               	bcf	242,0,c	;volatile
 12979  004F7A                     
 12980                           ;MCAL/Interrupts/mcal_external_interrupt.c: 132:     if(Handler_Select)
 12981  004F7A  501A               	movf	RB5_ISR@Handler_Select^0,w,c
 12982  004F7C  B4D8               	btfsc	status,2,c
 12983  004F7E  EFC3  F027         	goto	i1u826_21
 12984  004F82  EFC5  F027         	goto	i1u826_20
 12985  004F86                     i1u826_21:
 12986  004F86  EFC7  F027         	goto	i1l8326
 12987  004F8A                     i1u826_20:
 12988  004F8A  EFC7  F027         	goto	i1l1273
 12989  004F8E                     i1l8326:
 12990  004F8E                     i1l1273:
 12991  004F8E  0012               	return		;funcret
 12992  004F90                     __end_of_RB5_ISR:
 12993                           	callstack 0
 12994                           
 12995 ;; *************** function _RB4_ISR *****************
 12996 ;; Defined at:
 12997 ;;		line 101 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;  Handler_Sele    1    wreg     unsigned char 
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;  Handler_Sele    1   25[COMRAM] unsigned char 
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		wreg, status,2
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13015 ;;Total ram usage:        1 bytes
 13016 ;; Hardware stack levels used: 1
 13017 ;; Hardware stack levels required when called: 6
 13018 ;; This function calls:
 13019 ;;		Nothing
 13020 ;; This function is called by:
 13021 ;;		_InterruptManagerLow
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text70
 13026  004F90                     __ptext70:
 13027                           	callstack 0
 13028  004F90                     _RB4_ISR:
 13029                           	callstack 17
 13030                           
 13031                           ;incstack = 0
 13032                           ;RB4_ISR@Handler_Select stored from wreg
 13033  004F90  6E1A               	movwf	RB4_ISR@Handler_Select^0,c
 13034  004F92                     
 13035                           ;MCAL/Interrupts/mcal_external_interrupt.c: 101: void RB4_ISR(uint8_t Handler_Select);MC
      +                          AL/Interrupts/mcal_external_interrupt.c: 102: {;MCAL/Interrupts/mcal_external_interrupt.
      +                          c: 104:     (INTCONbits.RBIF = 0 );
 13036  004F92  90F2               	bcf	242,0,c	;volatile
 13037  004F94                     
 13038                           ;MCAL/Interrupts/mcal_external_interrupt.c: 108:     if(Handler_Select)
 13039  004F94  501A               	movf	RB4_ISR@Handler_Select^0,w,c
 13040  004F96  B4D8               	btfsc	status,2,c
 13041  004F98  EFD0  F027         	goto	i1u825_21
 13042  004F9C  EFD2  F027         	goto	i1u825_20
 13043  004FA0                     i1u825_21:
 13044  004FA0  EFD4  F027         	goto	i1l8316
 13045  004FA4                     i1u825_20:
 13046  004FA4  EFD4  F027         	goto	i1l1264
 13047  004FA8                     i1l8316:
 13048  004FA8                     i1l1264:
 13049  004FA8  0012               	return		;funcret
 13050  004FAA                     __end_of_RB4_ISR:
 13051                           	callstack 0
 13052                           
 13053 ;; *************** function _INT1_ISR *****************
 13054 ;; Defined at:
 13055 ;;		line 73 in file "MCAL/Interrupts/mcal_external_interrupt.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;		None
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;		None
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      void 
 13062 ;; Registers used:
 13063 ;;		None
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13073 ;;Total ram usage:        0 bytes
 13074 ;; Hardware stack levels used: 1
 13075 ;; Hardware stack levels required when called: 6
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_InterruptManagerLow
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text71
 13084  004FB8                     __ptext71:
 13085                           	callstack 0
 13086  004FB8                     _INT1_ISR:
 13087                           	callstack 17
 13088  004FB8                     
 13089                           ;MCAL/Interrupts/mcal_external_interrupt.c: 76:     (INTCON3bits.INT1IF = 0 );
 13090  004FB8  90F0               	bcf	240,0,c	;volatile
 13091  004FBA  0012               	return		;funcret
 13092  004FBC                     __end_of_INT1_ISR:
 13093                           	callstack 0
 13094                           
 13095 ;; *************** function _ADC_ISR *****************
 13096 ;; Defined at:
 13097 ;;		line 341 in file "MCAL/ADC/mcal_adc.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;		None
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;		None
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      void 
 13104 ;; Registers used:
 13105 ;;		None
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;Total ram usage:        0 bytes
 13116 ;; Hardware stack levels used: 1
 13117 ;; Hardware stack levels required when called: 6
 13118 ;; This function calls:
 13119 ;;		Nothing
 13120 ;; This function is called by:
 13121 ;;		_InterruptManagerLow
 13122 ;; This function uses a non-reentrant model
 13123 ;;
 13124                           
 13125                           	psect	text72
 13126  004FC2                     __ptext72:
 13127                           	callstack 0
 13128  004FC2                     _ADC_ISR:
 13129                           	callstack 17
 13130  004FC2  0012               	return		;funcret
 13131  004FC4                     __end_of_ADC_ISR:
 13132                           	callstack 0
 13133                           
 13134 ;; *************** function _InterruptManagerHigh *****************
 13135 ;; Defined at:
 13136 ;;		line 33 in file "MCAL/Interrupts/mcal_interrupt_manager.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;		None
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;		None
 13141 ;; Return value:  Size  Location     Type
 13142 ;;                  1    wreg      void 
 13143 ;; Registers used:
 13144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13145 ;; Tracked objects:
 13146 ;;		On entry : 0/0
 13147 ;;		On exit  : 0/0
 13148 ;;		Unchanged: 0/0
 13149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13154 ;;Total ram usage:        6 bytes
 13155 ;; Hardware stack levels used: 1
 13156 ;; Hardware stack levels required when called: 5
 13157 ;; This function calls:
 13158 ;;		_EUSART_Rx_ISR
 13159 ;;		_EUSART_Tx_ISR
 13160 ;;		_TMR0_ISR
 13161 ;; This function is called by:
 13162 ;;		Interrupt level 2
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	intcode
 13167  000008                     __pintcode:
 13168                           	callstack 0
 13169  000008                     _InterruptManagerHigh:
 13170                           	callstack 17
 13171                           
 13172                           ;incstack = 0
 13173  000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13174  00000A  EF08  F01C         	goto	int_func
 13175                           
 13176                           	psect	intcode_body
 13177  003810                     __pintcode_body:
 13178                           	callstack 17
 13179  003810                     int_func:
 13180                           	callstack 17
 13181  003810  CFFA F014          	movff	pclath,??_InterruptManagerHigh
 13182  003814  CFFB F015          	movff	pclatu,??_InterruptManagerHigh+1
 13183  003818  CFD9 F016          	movff	fsr2l,??_InterruptManagerHigh+2
 13184  00381C  CFDA F017          	movff	fsr2h,??_InterruptManagerHigh+3
 13185  003820  CFF3 F018          	movff	prodl,??_InterruptManagerHigh+4
 13186  003824  CFF4 F019          	movff	prodh,??_InterruptManagerHigh+5
 13187  003828                     
 13188                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 49:     if( (1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF) )
 13189  003828  AAF2               	btfss	242,5,c	;volatile
 13190  00382A  EF19  F01C         	goto	i2u911_41
 13191  00382E  EF1B  F01C         	goto	i2u911_40
 13192  003832                     i2u911_41:
 13193  003832  EF24  F01C         	goto	i2l1143
 13194  003836                     i2u911_40:
 13195  003836  A4F2               	btfss	242,2,c	;volatile
 13196  003838  EF20  F01C         	goto	i2u912_41
 13197  00383C  EF22  F01C         	goto	i2u912_40
 13198  003840                     i2u912_41:
 13199  003840  EF24  F01C         	goto	i2l1143
 13200  003844                     i2u912_40:
 13201  003844                     
 13202                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 50:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 51:         TMR0_ISR();
 13203  003844  ECE2  F027         	call	_TMR0_ISR	;wreg free
 13204  003848                     i2l1143:
 13205                           
 13206                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 55:     if( (1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF) )
 13207  003848  A29D               	btfss	157,1,c	;volatile
 13208  00384A  EF29  F01C         	goto	i2u913_41
 13209  00384E  EF2B  F01C         	goto	i2u913_40
 13210  003852                     i2u913_41:
 13211  003852  EF2C  F01C         	goto	i2l1145
 13212  003856                     i2u913_40:
 13213  003856  509E               	movf	158,w,c	;volatile
 13214  003858                     i2l1145:
 13215                           
 13216                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 62:     if( (1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF) )
 13217  003858  A2A0               	btfss	160,1,c	;volatile
 13218  00385A  EF31  F01C         	goto	i2u914_41
 13219  00385E  EF33  F01C         	goto	i2u914_40
 13220  003862                     i2u914_41:
 13221  003862  EF34  F01C         	goto	i2l1147
 13222  003866                     i2u914_40:
 13223  003866  50A1               	movf	161,w,c	;volatile
 13224  003868                     i2l1147:
 13225                           
 13226                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 68:     if( (1 == PIE2bits.CCP2IE) && (1 == P
      +                          IR2bits.CCP2IF) )
 13227  003868  A0A0               	btfss	160,0,c	;volatile
 13228  00386A  EF39  F01C         	goto	i2u915_41
 13229  00386E  EF3B  F01C         	goto	i2u915_40
 13230  003872                     i2u915_41:
 13231  003872  EF3C  F01C         	goto	i2l1149
 13232  003876                     i2u915_40:
 13233  003876  50A1               	movf	161,w,c	;volatile
 13234  003878                     i2l1149:
 13235                           
 13236                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 74:     if( (1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF) )
 13237  003878  AA9D               	btfss	157,5,c	;volatile
 13238  00387A  EF41  F01C         	goto	i2u916_41
 13239  00387E  EF43  F01C         	goto	i2u916_40
 13240  003882                     i2u916_41:
 13241  003882  EF4C  F01C         	goto	i2l1151
 13242  003886                     i2u916_40:
 13243  003886  AA9E               	btfss	158,5,c	;volatile
 13244  003888  EF48  F01C         	goto	i2u917_41
 13245  00388C  EF4A  F01C         	goto	i2u917_40
 13246  003890                     i2u917_41:
 13247  003890  EF4C  F01C         	goto	i2l1151
 13248  003894                     i2u917_40:
 13249  003894                     
 13250                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 75:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 76:         EUSART_Rx_ISR();
 13251  003894  ECF2  F026         	call	_EUSART_Rx_ISR	;wreg free
 13252  003898                     i2l1151:
 13253                           
 13254                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 80:     if( (1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF) )
 13255  003898  A89D               	btfss	157,4,c	;volatile
 13256  00389A  EF51  F01C         	goto	i2u918_41
 13257  00389E  EF53  F01C         	goto	i2u918_40
 13258  0038A2                     i2u918_41:
 13259  0038A2  EF5C  F01C         	goto	i2l1153
 13260  0038A6                     i2u918_40:
 13261  0038A6  A89E               	btfss	158,4,c	;volatile
 13262  0038A8  EF58  F01C         	goto	i2u919_41
 13263  0038AC  EF5A  F01C         	goto	i2u919_40
 13264  0038B0                     i2u919_41:
 13265  0038B0  EF5C  F01C         	goto	i2l1153
 13266  0038B4                     i2u919_40:
 13267  0038B4                     
 13268                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 81:     {;MCAL/Interrupts/mcal_interrupt_mana
      +                          ger.c: 82:         EUSART_Tx_ISR();
 13269  0038B4  ECE3  F027         	call	_EUSART_Tx_ISR	;wreg free
 13270  0038B8                     i2l1153:
 13271                           
 13272                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 86:     if( (1 == PIE2bits.BCLIE) && (1 == PI
      +                          R2bits.BCLIF) )
 13273  0038B8  A6A0               	btfss	160,3,c	;volatile
 13274  0038BA  EF61  F01C         	goto	i2u920_41
 13275  0038BE  EF63  F01C         	goto	i2u920_40
 13276  0038C2                     i2u920_41:
 13277  0038C2  EF64  F01C         	goto	i2l1155
 13278  0038C6                     i2u920_40:
 13279  0038C6  50A1               	movf	161,w,c	;volatile
 13280  0038C8                     i2l1155:
 13281                           
 13282                           ;MCAL/Interrupts/mcal_interrupt_manager.c: 92:     if( (1 == PIE1bits.SSPIE) && (1 == PI
      +                          R1bits.SSPIF) )
 13283  0038C8  A69D               	btfss	157,3,c	;volatile
 13284  0038CA  EF69  F01C         	goto	i2u921_41
 13285  0038CE  EF6B  F01C         	goto	i2u921_40
 13286  0038D2                     i2u921_41:
 13287  0038D2  EF6C  F01C         	goto	i2l1158
 13288  0038D6                     i2u921_40:
 13289  0038D6  509E               	movf	158,w,c	;volatile
 13290  0038D8                     i2l1158:
 13291  0038D8  C019  FFF4         	movff	??_InterruptManagerHigh+5,prodh
 13292  0038DC  C018  FFF3         	movff	??_InterruptManagerHigh+4,prodl
 13293  0038E0  C017  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 13294  0038E4  C016  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 13295  0038E8  C015  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 13296  0038EC  C014  FFFA         	movff	??_InterruptManagerHigh,pclath
 13297  0038F0  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13298  0038F2  0011               	retfie		f
 13299  0038F4                     __end_of_InterruptManagerHigh:
 13300                           	callstack 0
 13301                           
 13302 ;; *************** function _TMR0_ISR *****************
 13303 ;; Defined at:
 13304 ;;		line 216 in file "MCAL/Timer0/hal_timer0.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;		None
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;		None
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      void 
 13311 ;; Registers used:
 13312 ;;		None
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;Total ram usage:        0 bytes
 13323 ;; Hardware stack levels used: 1
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_InterruptManagerHigh
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text74
 13332  004FC4                     __ptext74:
 13333                           	callstack 0
 13334  004FC4                     _TMR0_ISR:
 13335                           	callstack 21
 13336  004FC4  0012               	return		;funcret
 13337  004FC6                     __end_of_TMR0_ISR:
 13338                           	callstack 0
 13339                           
 13340 ;; *************** function _EUSART_Tx_ISR *****************
 13341 ;; Defined at:
 13342 ;;		line 685 in file "MCAL/EUSART/mcal_EUSART.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;		None
 13345 ;; Auto vars:     Size  Location     Type
 13346 ;;		None
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  1    wreg      void 
 13349 ;; Registers used:
 13350 ;;		None
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13360 ;;Total ram usage:        0 bytes
 13361 ;; Hardware stack levels used: 1
 13362 ;; This function calls:
 13363 ;;		Nothing
 13364 ;; This function is called by:
 13365 ;;		_InterruptManagerHigh
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text75
 13370  004FC6                     __ptext75:
 13371                           	callstack 0
 13372  004FC6                     _EUSART_Tx_ISR:
 13373                           	callstack 21
 13374  004FC6  0012               	return		;funcret
 13375  004FC8                     __end_of_EUSART_Tx_ISR:
 13376                           	callstack 0
 13377                           
 13378 ;; *************** function _EUSART_Rx_ISR *****************
 13379 ;; Defined at:
 13380 ;;		line 703 in file "MCAL/EUSART/mcal_EUSART.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;		None
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;		None
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  1    wreg      void 
 13387 ;; Registers used:
 13388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;Total ram usage:        0 bytes
 13399 ;; Hardware stack levels used: 1
 13400 ;; Hardware stack levels required when called: 4
 13401 ;; This function calls:
 13402 ;;		Absolute function
 13403 ;;		_usart_isr
 13404 ;; This function is called by:
 13405 ;;		_InterruptManagerHigh
 13406 ;; This function uses a non-reentrant model
 13407 ;;
 13408                           
 13409                           	psect	text76
 13410  004DE4                     __ptext76:
 13411                           	callstack 0
 13412  004DE4                     _EUSART_Rx_ISR:
 13413                           	callstack 17
 13414  004DE4                     
 13415                           ;MCAL/EUSART/mcal_EUSART.c: 708:     if(eusart_Rx_InterruptHandler)
 13416  004DE4  5029               	movf	_eusart_Rx_InterruptHandler^0,w,c
 13417  004DE6  102A               	iorwf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 13418  004DE8  B4D8               	btfsc	status,2,c
 13419  004DEA  EFF9  F026         	goto	i2u821_41
 13420  004DEE  EFFB  F026         	goto	i2u821_40
 13421  004DF2                     i2u821_41:
 13422  004DF2  EF07  F027         	goto	i2l842
 13423  004DF6                     i2u821_40:
 13424  004DF6                     
 13425                           ;MCAL/EUSART/mcal_EUSART.c: 709:     {;MCAL/EUSART/mcal_EUSART.c: 710:         eusart_Rx
      +                          _InterruptHandler();
 13426  004DF6  D802               	call	i2u822_48
 13427  004DF8  EF07  F027         	goto	i2u822_49
 13428  004DFC                     i2u822_48:
 13429  004DFC  0005               	push	
 13430  004DFE  6EFA               	movwf	pclath,c
 13431  004E00  5029               	movf	_eusart_Rx_InterruptHandler^0,w,c
 13432  004E02  6EFD               	movwf	tosl,c
 13433  004E04  502A               	movf	(_eusart_Rx_InterruptHandler+1)^0,w,c
 13434  004E06  6EFE               	movwf	tosh,c
 13435  004E08  6AFF               	clrf	tosu,c
 13436  004E0A  50FA               	movf	pclath,w,c
 13437  004E0C  0012               	return		;indir
 13438  004E0E                     i2u822_49:
 13439  004E0E                     i2l842:
 13440  004E0E  0012               	return		;funcret
 13441  004E10                     __end_of_EUSART_Rx_ISR:
 13442                           	callstack 0
 13443                           
 13444 ;; *************** function _usart_isr *****************
 13445 ;; Defined at:
 13446 ;;		line 382 in file "application.c"
 13447 ;; Parameters:    Size  Location     Type
 13448 ;;		None
 13449 ;; Auto vars:     Size  Location     Type
 13450 ;;		None
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  1    wreg      void 
 13453 ;; Registers used:
 13454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13455 ;; Tracked objects:
 13456 ;;		On entry : 0/0
 13457 ;;		On exit  : 0/0
 13458 ;;		Unchanged: 0/0
 13459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;Total ram usage:        0 bytes
 13465 ;; Hardware stack levels used: 1
 13466 ;; Hardware stack levels required when called: 3
 13467 ;; This function calls:
 13468 ;;		_Bluetooth_Send_Data_Non_Blocking
 13469 ;;		i2_EUSART_Async_Read_Data
 13470 ;;		i2_GPIO_Pin_Toggle_Logic
 13471 ;; This function is called by:
 13472 ;;		_EUSART_Rx_ISR
 13473 ;; This function uses a non-reentrant model
 13474 ;;
 13475                           
 13476                           	psect	text77
 13477  004D2C                     __ptext77:
 13478                           	callstack 0
 13479  004D2C                     _usart_isr:
 13480                           	callstack 17
 13481  004D2C                     
 13482                           ;application.c: 384:     EUSART_Async_Read_Data(&_uart_obj,&datarecive);
 13483  004D2C  0E29               	movlw	low __uart_obj
 13484  004D2E  6E06               	movwf	i2EUSART_Async_Read_Data@_eusart_obj^0,c
 13485  004D30  0E01               	movlw	high __uart_obj
 13486  004D32  6E07               	movwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,c
 13487  004D34  0E38               	movlw	low _datarecive
 13488  004D36  6E08               	movwf	i2EUSART_Async_Read_Data@data^0,c
 13489  004D38  0E00               	movlw	high _datarecive
 13490  004D3A  6E09               	movwf	(i2EUSART_Async_Read_Data@data+1)^0,c
 13491  004D3C  ECFF  F012         	call	i2_EUSART_Async_Read_Data	;wreg free
 13492                           
 13493                           ;application.c: 385:     Bluetooth_Send_Data_Non_Blocking(&_uart_obj,datasend);
 13494  004D40  0E29               	movlw	low __uart_obj
 13495  004D42  6E0C               	movwf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,c
 13496  004D44  0E01               	movlw	high __uart_obj
 13497  004D46  6E0D               	movwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,c
 13498  004D48  C03A  F00E         	movff	_datasend,Bluetooth_Send_Data_Non_Blocking@data
 13499  004D4C  EC1D  F027         	call	_Bluetooth_Send_Data_Non_Blocking	;wreg free
 13500  004D50                     
 13501                           ;application.c: 386:     GPIO_Pin_Toggle_Logic(&TEST_PIN);
 13502  004D50  0E41               	movlw	low _TEST_PIN
 13503  004D52  6E01               	movwf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,c
 13504  004D54  0E00               	movlw	high _TEST_PIN
 13505  004D56  6E02               	movwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,c
 13506  004D58  EC2F  F023         	call	i2_GPIO_Pin_Toggle_Logic	;wreg free
 13507  004D5C  0012               	return		;funcret
 13508  004D5E                     __end_of_usart_isr:
 13509                           	callstack 0
 13510                           
 13511 ;; *************** function i2_GPIO_Pin_Toggle_Logic *****************
 13512 ;; Defined at:
 13513 ;;		line 135 in file "MCAL/GPIO/hal_gpio.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 13516 ;;		 -> TEST_PIN(1), 
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;  ERRORSTATUS     1    0        unsigned char 
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      unsigned char 
 13521 ;; Registers used:
 13522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13530 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13532 ;;Total ram usage:        7 bytes
 13533 ;; Hardware stack levels used: 1
 13534 ;; This function calls:
 13535 ;;		Nothing
 13536 ;; This function is called by:
 13537 ;;		_usart_isr
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text78
 13542  00465E                     __ptext78:
 13543                           	callstack 0
 13544  00465E                     i2_GPIO_Pin_Toggle_Logic:
 13545                           	callstack 19
 13546  00465E                     
 13547                           ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
 13548  00465E  5001               	movf	i2GPIO_Pin_Toggle_Logic@_pin_config^0,w,c
 13549  004660  1002               	iorwf	(i2GPIO_Pin_Toggle_Logic@_pin_config+1)^0,w,c
 13550  004662  A4D8               	btfss	status,2,c
 13551  004664  EF36  F023         	goto	i2u769_41
 13552  004668  EF38  F023         	goto	i2u769_40
 13553  00466C                     i2u769_41:
 13554  00466C  EF3A  F023         	goto	i2l7878
 13555  004670                     i2u769_40:
 13556  004670                     
 13557                           ;MCAL/GPIO/hal_gpio.c: 141:     }
 13558  004670  EF66  F023         	goto	i2l921
 13559  004674                     i2l7878:
 13560                           
 13561                           ;MCAL/GPIO/hal_gpio.c: 143:     {;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_
      +                          config->port]^=( (uint8)1<<_pin_config->pin ));
 13562  004674  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 13563  004678  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 13564  00467C  50DF               	movf	223,w,c
 13565  00467E  0B07               	andlw	7
 13566  004680  6E03               	movwf	??i2_GPIO_Pin_Toggle_Logic^0,c
 13567  004682  0E01               	movlw	1
 13568  004684  6E04               	movwf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,c
 13569  004686  2A03               	incf	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 13570  004688  EF48  F023         	goto	i2u770_44
 13571  00468C                     i2u770_45:
 13572  00468C  90D8               	bcf	status,0,c
 13573  00468E  3604               	rlcf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,f,c
 13574  004690                     i2u770_44:
 13575  004690  2E03               	decfsz	??i2_GPIO_Pin_Toggle_Logic^0,f,c
 13576  004692  EF46  F023         	goto	i2u770_45
 13577  004696  C001  FFD9         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config,fsr2l
 13578  00469A  C002  FFDA         	movff	i2GPIO_Pin_Toggle_Logic@_pin_config+1,fsr2h
 13579  00469E  30DF               	rrcf	223,w,c
 13580  0046A0  32E8               	rrcf	wreg,f,c
 13581  0046A2  32E8               	rrcf	wreg,f,c
 13582  0046A4  0B07               	andlw	7
 13583  0046A6  6E05               	movwf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,c
 13584  0046A8  5005               	movf	(??i2_GPIO_Pin_Toggle_Logic+2)^0,w,c
 13585  0046AA  0D02               	mullw	2
 13586  0046AC  0EB2               	movlw	low _lat_registers
 13587  0046AE  24F3               	addwf	243,w,c
 13588  0046B0  6ED9               	movwf	fsr2l,c
 13589  0046B2  0E00               	movlw	high _lat_registers
 13590  0046B4  20F4               	addwfc	prodh,w,c
 13591  0046B6  6EDA               	movwf	fsr2h,c
 13592  0046B8  CFDE F006          	movff	postinc2,??i2_GPIO_Pin_Toggle_Logic+3
 13593  0046BC  CFDD F007          	movff	postdec2,??i2_GPIO_Pin_Toggle_Logic+4
 13594  0046C0  C006  FFD9         	movff	??i2_GPIO_Pin_Toggle_Logic+3,fsr2l
 13595  0046C4  C007  FFDA         	movff	??i2_GPIO_Pin_Toggle_Logic+4,fsr2h
 13596  0046C8  5004               	movf	(??i2_GPIO_Pin_Toggle_Logic+1)^0,w,c
 13597  0046CA  1ADF               	xorwf	indf2,f,c
 13598  0046CC                     i2l921:
 13599  0046CC  0012               	return		;funcret
 13600  0046CE                     __end_ofi2_GPIO_Pin_Toggle_Logic:
 13601                           	callstack 0
 13602                           
 13603 ;; *************** function i2_EUSART_Async_Read_Data *****************
 13604 ;; Defined at:
 13605 ;;		line 181 in file "MCAL/EUSART/mcal_EUSART.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 13608 ;;		 -> _uart_obj(12), 
 13609 ;;  data            2    7[COMRAM] PTR unsigned short 
 13610 ;;		 -> longtude(13), latitude(13), gpstemp(1), datarecive(1), 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;  l_temp_data     2   17[COMRAM] unsigned short 
 13613 ;;  ret_val         1    0        unsigned char 
 13614 ;; Return value:  Size  Location     Type
 13615 ;;                  1    wreg      unsigned char 
 13616 ;; Registers used:
 13617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13618 ;; Tracked objects:
 13619 ;;		On entry : 0/0
 13620 ;;		On exit  : 0/0
 13621 ;;		Unchanged: 0/0
 13622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13624 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13626 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13627 ;;Total ram usage:       14 bytes
 13628 ;; Hardware stack levels used: 1
 13629 ;; Hardware stack levels required when called: 1
 13630 ;; This function calls:
 13631 ;;		i2_calc_parity_even
 13632 ;;		i2_calc_parity_odd
 13633 ;; This function is called by:
 13634 ;;		_usart_isr
 13635 ;; This function uses a non-reentrant model
 13636 ;;
 13637                           
 13638                           	psect	text79
 13639  0025FE                     __ptext79:
 13640                           	callstack 0
 13641  0025FE                     i2_EUSART_Async_Read_Data:
 13642                           	callstack 18
 13643  0025FE                     
 13644                           ;MCAL/EUSART/mcal_EUSART.c: 184:     uint16_t l_temp_data = 0;
 13645  0025FE  0E00               	movlw	0
 13646  002600  6E13               	movwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13647  002602  0E00               	movlw	0
 13648  002604  6E12               	movwf	i2EUSART_Async_Read_Data@l_temp_data^0,c
 13649  002606                     
 13650                           ;MCAL/EUSART/mcal_EUSART.c: 186:     if((((void*)0) == _eusart_obj) || (((void*)0) == da
      +                          ta))
 13651  002606  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13652  002608  1007               	iorwf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13653  00260A  B4D8               	btfsc	status,2,c
 13654  00260C  EF0A  F013         	goto	i2u754_41
 13655  002610  EF0C  F013         	goto	i2u754_40
 13656  002614                     i2u754_41:
 13657  002614  EF15  F013         	goto	i2l7818
 13658  002618                     i2u754_40:
 13659  002618  5008               	movf	i2EUSART_Async_Read_Data@data^0,w,c
 13660  00261A  1009               	iorwf	(i2EUSART_Async_Read_Data@data+1)^0,w,c
 13661  00261C  A4D8               	btfss	status,2,c
 13662  00261E  EF13  F013         	goto	i2u755_41
 13663  002622  EF15  F013         	goto	i2u755_40
 13664  002626                     i2u755_41:
 13665  002626  EF17  F013         	goto	i2l693
 13666  00262A                     i2u755_40:
 13667  00262A                     i2l7818:
 13668                           
 13669                           ;MCAL/EUSART/mcal_EUSART.c: 189:     }
 13670  00262A  EFF3  F013         	goto	i2l7868
 13671  00262E                     i2l693:
 13672                           
 13673                           ;MCAL/EUSART/mcal_EUSART.c: 191:     {;MCAL/EUSART/mcal_EUSART.c: 192:         if(1 == P
      +                          IR1bits.RCIF)
 13674  00262E  AA9E               	btfss	158,5,c	;volatile
 13675  002630  EF1C  F013         	goto	i2u756_41
 13676  002634  EF1E  F013         	goto	i2u756_40
 13677  002638                     i2u756_41:
 13678  002638  EF15  F013         	goto	i2l7818
 13679  00263C                     i2u756_40:
 13680  00263C                     
 13681                           ;MCAL/EUSART/mcal_EUSART.c: 193:         {;MCAL/EUSART/mcal_EUSART.c: 194:             i
      +                          f(0 == _eusart_obj->rx_config.rx_9th_bit_en)
 13682  00263C  EE20 F009          	lfsr	2,9
 13683  002640  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13684  002642  26D9               	addwf	fsr2l,f,c
 13685  002644  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13686  002646  22DA               	addwfc	fsr2h,f,c
 13687  002648  B8DF               	btfsc	indf2,4,c
 13688  00264A  EF29  F013         	goto	i2u757_41
 13689  00264E  EF2B  F013         	goto	i2u757_40
 13690  002652                     i2u757_41:
 13691  002652  EF38  F013         	goto	i2l7824
 13692  002656                     i2u757_40:
 13693  002656                     
 13694                           ;MCAL/EUSART/mcal_EUSART.c: 195:             {;MCAL/EUSART/mcal_EUSART.c: 196:          
      +                                 *data = RCREG ;
 13695  002656  50AE               	movf	174,w,c	;volatile
 13696  002658  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13697  00265A  6A0B               	clrf	(??i2_EUSART_Async_Read_Data+1)^0,c
 13698  00265C  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 13699  002660  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 13700  002664  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 13701  002668  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 13702                           
 13703                           ;MCAL/EUSART/mcal_EUSART.c: 197:             }
 13704  00266C  EFF3  F013         	goto	i2l7868
 13705  002670                     i2l7824:
 13706  002670  EE20 F009          	lfsr	2,9
 13707  002674  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13708  002676  26D9               	addwf	fsr2l,f,c
 13709  002678  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13710  00267A  22DA               	addwfc	fsr2h,f,c
 13711  00267C  A8DF               	btfss	indf2,4,c
 13712  00267E  EF43  F013         	goto	i2u758_41
 13713  002682  EF45  F013         	goto	i2u758_40
 13714  002686                     i2u758_41:
 13715  002686  EFF3  F013         	goto	i2l706
 13716  00268A                     i2u758_40:
 13717  00268A                     
 13718                           ;MCAL/EUSART/mcal_EUSART.c: 199:             {;MCAL/EUSART/mcal_EUSART.c: 201:          
      +                                 if(0 == _eusart_obj->rx_config.uart_rx_9th_bit_role)
 13719  00268A  EE20 F009          	lfsr	2,9
 13720  00268E  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13721  002690  26D9               	addwf	fsr2l,f,c
 13722  002692  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13723  002694  22DA               	addwfc	fsr2h,f,c
 13724  002696  30DF               	rrcf	223,w,c
 13725  002698  0B03               	andlw	3
 13726  00269A  0900               	iorlw	0
 13727  00269C  A4D8               	btfss	status,2,c
 13728  00269E  EF53  F013         	goto	i2u759_41
 13729  0026A2  EF55  F013         	goto	i2u759_40
 13730  0026A6                     i2u759_41:
 13731  0026A6  EF77  F013         	goto	i2l7838
 13732  0026AA                     i2u759_40:
 13733  0026AA                     
 13734                           ;MCAL/EUSART/mcal_EUSART.c: 202:                 {;MCAL/EUSART/mcal_EUSART.c: 204:      
      +                                     l_temp_data = RCREG ;
 13735  0026AA  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 13736  0026AE  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13737                           
 13738                           ;MCAL/EUSART/mcal_EUSART.c: 205:                 l_temp_data += ((RX9D == GPIO_HIGH) ? (
      +                          0x0001 << 8) : 0x0000) ;
 13739  0026B0  B0AB               	btfsc	4011,0,c	;volatile
 13740  0026B2  EF5D  F013         	goto	i2u760_41
 13741  0026B6  EF5F  F013         	goto	i2u760_40
 13742  0026BA                     i2u760_41:
 13743  0026BA  EF65  F013         	goto	i2l7832
 13744  0026BE                     i2u760_40:
 13745  0026BE  0E00               	movlw	0
 13746  0026C0  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 13747  0026C2  0E00               	movlw	0
 13748  0026C4  6E0C               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 13749  0026C6  EF69  F013         	goto	i2l7834
 13750  0026CA                     i2l7832:
 13751  0026CA  0E01               	movlw	1
 13752  0026CC  6E0D               	movwf	(i2_EUSART_Async_Read_Data$2031+1)^0,c
 13753  0026CE  0E00               	movlw	0
 13754  0026D0  6E0C               	movwf	i2_EUSART_Async_Read_Data$2031^0,c
 13755  0026D2                     i2l7834:
 13756  0026D2  500C               	movf	i2_EUSART_Async_Read_Data$2031^0,w,c
 13757  0026D4  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 13758  0026D6  500D               	movf	(i2_EUSART_Async_Read_Data$2031+1)^0,w,c
 13759  0026D8  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 13760  0026DA                     
 13761                           ;MCAL/EUSART/mcal_EUSART.c: 207:                 *data = l_temp_data ;
 13762  0026DA  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 13763  0026DE  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 13764  0026E2  C012  FFDE         	movff	i2EUSART_Async_Read_Data@l_temp_data,postinc2
 13765  0026E6  C013  FFDD         	movff	i2EUSART_Async_Read_Data@l_temp_data+1,postdec2
 13766                           
 13767                           ;MCAL/EUSART/mcal_EUSART.c: 209:                 }
 13768  0026EA  EFF3  F013         	goto	i2l7868
 13769  0026EE                     i2l7838:
 13770  0026EE  EE20 F009          	lfsr	2,9
 13771  0026F2  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13772  0026F4  26D9               	addwf	fsr2l,f,c
 13773  0026F6  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13774  0026F8  22DA               	addwfc	fsr2h,f,c
 13775  0026FA  30DF               	rrcf	223,w,c
 13776  0026FC  0B03               	andlw	3
 13777  0026FE  06E8               	decf	wreg,f,c
 13778  002700  A4D8               	btfss	status,2,c
 13779  002702  EF85  F013         	goto	i2u761_41
 13780  002706  EF87  F013         	goto	i2u761_40
 13781  00270A                     i2u761_41:
 13782  00270A  EFBC  F013         	goto	i2l7852
 13783  00270E                     i2u761_40:
 13784  00270E                     
 13785                           ;MCAL/EUSART/mcal_EUSART.c: 211:                 {;MCAL/EUSART/mcal_EUSART.c: 214:      
      +                                         l_temp_data = RCREG ;
 13786  00270E  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 13787  002712  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13788                           
 13789                           ;MCAL/EUSART/mcal_EUSART.c: 216:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 13790  002714  B0AB               	btfsc	171,0,c	;volatile
 13791  002716  EF8F  F013         	goto	i2u762_41
 13792  00271A  EF91  F013         	goto	i2u762_40
 13793  00271E                     i2u762_41:
 13794  00271E  EF97  F013         	goto	i2l7844
 13795  002722                     i2u762_40:
 13796  002722  0E00               	movlw	0
 13797  002724  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 13798  002726  0E00               	movlw	0
 13799  002728  6E0E               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 13800  00272A  EF9B  F013         	goto	i2l7846
 13801  00272E                     i2l7844:
 13802  00272E  0E01               	movlw	1
 13803  002730  6E0F               	movwf	(i2_EUSART_Async_Read_Data$2032+1)^0,c
 13804  002732  0E00               	movlw	0
 13805  002734  6E0E               	movwf	i2_EUSART_Async_Read_Data$2032^0,c
 13806  002736                     i2l7846:
 13807  002736  500E               	movf	i2_EUSART_Async_Read_Data$2032^0,w,c
 13808  002738  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 13809  00273A  500F               	movf	(i2_EUSART_Async_Read_Data$2032+1)^0,w,c
 13810  00273C  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 13811  00273E                     
 13812                           ;MCAL/EUSART/mcal_EUSART.c: 219:                     if( calc_parity_even( (uint8_t) l_t
      +                          emp_data) == (l_temp_data >> 8))
 13813  00273E  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 13814  002740  ECA5  F024         	call	i2_calc_parity_even
 13815  002744  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13816  002746  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 13817  002748  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 13818  00274A  A4D8               	btfss	status,2,c
 13819  00274C  EFAA  F013         	goto	i2u763_41
 13820  002750  EFAC  F013         	goto	i2u763_40
 13821  002754                     i2u763_41:
 13822  002754  EFF3  F013         	goto	i2l706
 13823  002758                     i2u763_40:
 13824  002758                     i2l7850:
 13825                           
 13826                           ;MCAL/EUSART/mcal_EUSART.c: 220:                     {;MCAL/EUSART/mcal_EUSART.c: 222:  
      +                                                 *data = (l_temp_data & 0x00FF) ;
 13827  002758  0EFF               	movlw	255
 13828  00275A  1412               	andwf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 13829  00275C  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13830  00275E  0E00               	movlw	0
 13831  002760  1413               	andwf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 13832  002762  6E0B               	movwf	(??i2_EUSART_Async_Read_Data+1)^0,c
 13833  002764  C008  FFD9         	movff	i2EUSART_Async_Read_Data@data,fsr2l
 13834  002768  C009  FFDA         	movff	i2EUSART_Async_Read_Data@data+1,fsr2h
 13835  00276C  C00A  FFDE         	movff	??i2_EUSART_Async_Read_Data,postinc2
 13836  002770  C00B  FFDD         	movff	??i2_EUSART_Async_Read_Data+1,postdec2
 13837                           
 13838                           ;MCAL/EUSART/mcal_EUSART.c: 224:                     }
 13839  002774  EFF3  F013         	goto	i2l7868
 13840  002778                     i2l7852:
 13841  002778  EE20 F009          	lfsr	2,9
 13842  00277C  5006               	movf	i2EUSART_Async_Read_Data@_eusart_obj^0,w,c
 13843  00277E  26D9               	addwf	fsr2l,f,c
 13844  002780  5007               	movf	(i2EUSART_Async_Read_Data@_eusart_obj+1)^0,w,c
 13845  002782  22DA               	addwfc	fsr2h,f,c
 13846  002784  30DF               	rrcf	223,w,c
 13847  002786  0B03               	andlw	3
 13848  002788  0A02               	xorlw	2
 13849  00278A  A4D8               	btfss	status,2,c
 13850  00278C  EFCA  F013         	goto	i2u764_41
 13851  002790  EFCC  F013         	goto	i2u764_40
 13852  002794                     i2u764_41:
 13853  002794  EFF3  F013         	goto	i2l706
 13854  002798                     i2u764_40:
 13855  002798                     
 13856                           ;MCAL/EUSART/mcal_EUSART.c: 235:                 {;MCAL/EUSART/mcal_EUSART.c: 238:      
      +                                         l_temp_data = RCREG ;
 13857  002798  CFAE F012          	movff	4014,i2EUSART_Async_Read_Data@l_temp_data	;volatile
 13858  00279C  6A13               	clrf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,c
 13859                           
 13860                           ;MCAL/EUSART/mcal_EUSART.c: 240:                     l_temp_data += ((RCSTAbits.RX9D == 
      +                          GPIO_HIGH) ? (0x0001 << 8) : 0x0000) ;
 13861  00279E  B0AB               	btfsc	171,0,c	;volatile
 13862  0027A0  EFD4  F013         	goto	i2u765_41
 13863  0027A4  EFD6  F013         	goto	i2u765_40
 13864  0027A8                     i2u765_41:
 13865  0027A8  EFDC  F013         	goto	i2l7858
 13866  0027AC                     i2u765_40:
 13867  0027AC  0E00               	movlw	0
 13868  0027AE  6E11               	movwf	(i2_EUSART_Async_Read_Data$2033+1)^0,c
 13869  0027B0  0E00               	movlw	0
 13870  0027B2  6E10               	movwf	i2_EUSART_Async_Read_Data$2033^0,c
 13871  0027B4  EFE0  F013         	goto	i2l7860
 13872  0027B8                     i2l7858:
 13873  0027B8  0E01               	movlw	1
 13874  0027BA  6E11               	movwf	(i2_EUSART_Async_Read_Data$2033+1)^0,c
 13875  0027BC  0E00               	movlw	0
 13876  0027BE  6E10               	movwf	i2_EUSART_Async_Read_Data$2033^0,c
 13877  0027C0                     i2l7860:
 13878  0027C0  5010               	movf	i2_EUSART_Async_Read_Data$2033^0,w,c
 13879  0027C2  2612               	addwf	i2EUSART_Async_Read_Data@l_temp_data^0,f,c
 13880  0027C4  5011               	movf	(i2_EUSART_Async_Read_Data$2033+1)^0,w,c
 13881  0027C6  2213               	addwfc	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,f,c
 13882  0027C8                     
 13883                           ;MCAL/EUSART/mcal_EUSART.c: 245:                     if( calc_parity_odd( (uint8_t) l_te
      +                          mp_data) == (l_temp_data >> 8) )
 13884  0027C8  5012               	movf	i2EUSART_Async_Read_Data@l_temp_data^0,w,c
 13885  0027CA  EC71  F024         	call	i2_calc_parity_odd
 13886  0027CE  6E0A               	movwf	??i2_EUSART_Async_Read_Data^0,c
 13887  0027D0  5013               	movf	(i2EUSART_Async_Read_Data@l_temp_data+1)^0,w,c
 13888  0027D2  180A               	xorwf	??i2_EUSART_Async_Read_Data^0,w,c
 13889  0027D4  A4D8               	btfss	status,2,c
 13890  0027D6  EFEF  F013         	goto	i2u766_41
 13891  0027DA  EFF1  F013         	goto	i2u766_40
 13892  0027DE                     i2u766_41:
 13893  0027DE  EFF3  F013         	goto	i2l706
 13894  0027E2                     i2u766_40:
 13895  0027E2  EFAC  F013         	goto	i2l7850
 13896  0027E6                     i2l706:
 13897  0027E6                     i2l7868:
 13898                           
 13899                           ;MCAL/EUSART/mcal_EUSART.c: 270:     if ((1==RCSTA1bits.OERR)||(1==RCSTA1bits.FERR))
 13900  0027E6  B2AB               	btfsc	171,1,c	;volatile
 13901  0027E8  EFF8  F013         	goto	i2u767_41
 13902  0027EC  EFFA  F013         	goto	i2u767_40
 13903  0027F0                     i2u767_41:
 13904  0027F0  EF01  F014         	goto	i2l727
 13905  0027F4                     i2u767_40:
 13906  0027F4  A4AB               	btfss	171,2,c	;volatile
 13907  0027F6  EFFF  F013         	goto	i2u768_41
 13908  0027FA  EF01  F014         	goto	i2u768_40
 13909  0027FE                     i2u768_41:
 13910  0027FE  EF03  F014         	goto	i2l728
 13911  002802                     i2u768_40:
 13912  002802                     i2l727:
 13913                           
 13914                           ;MCAL/EUSART/mcal_EUSART.c: 271:     {;MCAL/EUSART/mcal_EUSART.c: 273:         RCSTA1bit
      +                          s.CREN=0;
 13915  002802  98AB               	bcf	171,4,c	;volatile
 13916                           
 13917                           ;MCAL/EUSART/mcal_EUSART.c: 274:         RCSTA1bits.CREN=1;
 13918  002804  88AB               	bsf	171,4,c	;volatile
 13919  002806                     i2l728:
 13920  002806  0012               	return		;funcret
 13921  002808                     __end_ofi2_EUSART_Async_Read_Data:
 13922                           	callstack 0
 13923                           
 13924 ;; *************** function _Bluetooth_Send_Data_Non_Blocking *****************
 13925 ;; Defined at:
 13926 ;;		line 71 in file "ECU/Bluetooth/Bluetooth.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;  _uart_obj       2   11[COMRAM] PTR const struct .
 13929 ;;		 -> _uart_obj(12), 
 13930 ;;  data            1   13[COMRAM] unsigned char 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  ret_val         1    0        unsigned char 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      unsigned char 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13942 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13946 ;;Total ram usage:        3 bytes
 13947 ;; Hardware stack levels used: 1
 13948 ;; Hardware stack levels required when called: 2
 13949 ;; This function calls:
 13950 ;;		_EUSART_Async_Transmit_Data
 13951 ;; This function is called by:
 13952 ;;		_usart_isr
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           	psect	text80
 13957  004E3A                     __ptext80:
 13958                           	callstack 0
 13959  004E3A                     _Bluetooth_Send_Data_Non_Blocking:
 13960                           	callstack 17
 13961  004E3A                     
 13962                           ;ECU/Bluetooth/Bluetooth.c: 76:     if((((void*)0) ==_uart_obj ) )
 13963  004E3A  500C               	movf	Bluetooth_Send_Data_Non_Blocking@_uart_obj^0,w,c
 13964  004E3C  100D               	iorwf	(Bluetooth_Send_Data_Non_Blocking@_uart_obj+1)^0,w,c
 13965  004E3E  A4D8               	btfss	status,2,c
 13966  004E40  EF24  F027         	goto	i2u705_41
 13967  004E44  EF26  F027         	goto	i2u705_40
 13968  004E48                     i2u705_41:
 13969  004E48  EF28  F027         	goto	i2l7526
 13970  004E4C                     i2u705_40:
 13971  004E4C                     
 13972                           ;ECU/Bluetooth/Bluetooth.c: 79:     }
 13973  004E4C  EF31  F027         	goto	i2l32
 13974  004E50                     i2l7526:
 13975                           
 13976                           ;ECU/Bluetooth/Bluetooth.c: 81:     {;ECU/Bluetooth/Bluetooth.c: 82:         EUSART_Asyn
      +                          c_Transmit_Data(_uart_obj , data);
 13977  004E50  C00C  F006         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj,EUSART_Async_Transmit_Data@_eusart_obj
 13978  004E54  C00D  F007         	movff	Bluetooth_Send_Data_Non_Blocking@_uart_obj+1,EUSART_Async_Transmit_Data@_eusart_o
      +                          bj+1
 13979  004E58  C00E  F008         	movff	Bluetooth_Send_Data_Non_Blocking@data,EUSART_Async_Transmit_Data@data
 13980  004E5C  6A09               	clrf	(EUSART_Async_Transmit_Data@data+1)^0,c
 13981  004E5E  EC7A  F01C         	call	_EUSART_Async_Transmit_Data	;wreg free
 13982  004E62                     i2l32:
 13983  004E62  0012               	return		;funcret
 13984  004E64                     __end_of_Bluetooth_Send_Data_Non_Blocking:
 13985                           	callstack 0
 13986                           
 13987 ;; *************** function _EUSART_Async_Transmit_Data *****************
 13988 ;; Defined at:
 13989 ;;		line 124 in file "MCAL/EUSART/mcal_EUSART.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;  _eusart_obj     2    5[COMRAM] PTR const struct .
 13992 ;;		 -> _uart_obj(12), 
 13993 ;;  data            2    7[COMRAM] unsigned short 
 13994 ;; Auto vars:     Size  Location     Type
 13995 ;;  ret_val         1    0        unsigned char 
 13996 ;; Return value:  Size  Location     Type
 13997 ;;                  1    wreg      unsigned char 
 13998 ;; Registers used:
 13999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14000 ;; Tracked objects:
 14001 ;;		On entry : 0/0
 14002 ;;		On exit  : 0/0
 14003 ;;		Unchanged: 0/0
 14004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;Total ram usage:        6 bytes
 14010 ;; Hardware stack levels used: 1
 14011 ;; Hardware stack levels required when called: 1
 14012 ;; This function calls:
 14013 ;;		i2_calc_parity_even
 14014 ;;		i2_calc_parity_odd
 14015 ;; This function is called by:
 14016 ;;		_Bluetooth_Send_Data_Non_Blocking
 14017 ;;		_EUSART_Async_Transmit_Data_Blocking
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text81
 14022  0038F4                     __ptext81:
 14023                           	callstack 0
 14024  0038F4                     _EUSART_Async_Transmit_Data:
 14025                           	callstack 17
 14026  0038F4                     
 14027                           ;MCAL/EUSART/mcal_EUSART.c: 128:     if(((void*)0) == _eusart_obj)
 14028  0038F4  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14029  0038F6  1007               	iorwf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14030  0038F8  A4D8               	btfss	status,2,c
 14031  0038FA  EF81  F01C         	goto	i2u648_41
 14032  0038FE  EF83  F01C         	goto	i2u648_40
 14033  003902                     i2u648_41:
 14034  003902  EF85  F01C         	goto	i2l7104
 14035  003906                     i2u648_40:
 14036  003906                     
 14037                           ;MCAL/EUSART/mcal_EUSART.c: 131:     }
 14038  003906  EFEB  F01C         	goto	i2l690
 14039  00390A                     i2l7104:
 14040                           
 14041                           ;MCAL/EUSART/mcal_EUSART.c: 133:     {;MCAL/EUSART/mcal_EUSART.c: 135:         if(1 == _
      +                          eusart_obj->tx_config.tx_9th_bit_en)
 14042  00390A  EE20 F002          	lfsr	2,2
 14043  00390E  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14044  003910  26D9               	addwf	fsr2l,f,c
 14045  003912  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14046  003914  22DA               	addwfc	fsr2h,f,c
 14047  003916  A6DF               	btfss	indf2,3,c
 14048  003918  EF90  F01C         	goto	i2u649_41
 14049  00391C  EF92  F01C         	goto	i2u649_40
 14050  003920                     i2u649_41:
 14051  003920  EFE9  F01C         	goto	i2l7118
 14052  003924                     i2u649_40:
 14053  003924                     
 14054                           ;MCAL/EUSART/mcal_EUSART.c: 136:         {;MCAL/EUSART/mcal_EUSART.c: 139:             i
      +                          f(0 == _eusart_obj->tx_config.uart_tx_9th_bit_role)
 14055  003924  EE20 F002          	lfsr	2,2
 14056  003928  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14057  00392A  26D9               	addwf	fsr2l,f,c
 14058  00392C  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14059  00392E  22DA               	addwfc	fsr2h,f,c
 14060  003930  50DF               	movf	223,w,c
 14061  003932  0B03               	andlw	3
 14062  003934  0900               	iorlw	0
 14063  003936  A4D8               	btfss	status,2,c
 14064  003938  EFA0  F01C         	goto	i2u650_41
 14065  00393C  EFA2  F01C         	goto	i2u650_40
 14066  003940                     i2u650_41:
 14067  003940  EFB1  F01C         	goto	i2l7110
 14068  003944                     i2u650_40:
 14069  003944                     
 14070                           ;MCAL/EUSART/mcal_EUSART.c: 140:             {;MCAL/EUSART/mcal_EUSART.c: 142:          
      +                                 TXSTAbits.TX9D = (__bit) (data >> 8);
 14071  003944  C008  F00A         	movff	EUSART_Async_Transmit_Data@data,??_EUSART_Async_Transmit_Data
 14072  003948  C009  F00B         	movff	EUSART_Async_Transmit_Data@data+1,??_EUSART_Async_Transmit_Data+1
 14073  00394C  C00B  F00A         	movff	??_EUSART_Async_Transmit_Data+1,??_EUSART_Async_Transmit_Data
 14074  003950  6A0B               	clrf	(??_EUSART_Async_Transmit_Data+1)^0,c
 14075  003952  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14076  003954  A0D8               	btfss	status,0,c
 14077  003956  D002               	bra	i2u651_45
 14078  003958  80AC               	bsf	172,0,c	;volatile
 14079  00395A  D001               	bra	i2u651_47
 14080  00395C                     i2u651_45:
 14081  00395C  90AC               	bcf	172,0,c	;volatile
 14082  00395E                     i2u651_47:
 14083                           
 14084                           ;MCAL/EUSART/mcal_EUSART.c: 144:             }
 14085  00395E  EFE9  F01C         	goto	i2l7118
 14086  003962                     i2l7110:
 14087  003962  EE20 F002          	lfsr	2,2
 14088  003966  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14089  003968  26D9               	addwf	fsr2l,f,c
 14090  00396A  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14091  00396C  22DA               	addwfc	fsr2h,f,c
 14092  00396E  50DF               	movf	223,w,c
 14093  003970  0B03               	andlw	3
 14094  003972  06E8               	decf	wreg,f,c
 14095  003974  A4D8               	btfss	status,2,c
 14096  003976  EFBF  F01C         	goto	i2u652_41
 14097  00397A  EFC1  F01C         	goto	i2u652_40
 14098  00397E                     i2u652_41:
 14099  00397E  EFCD  F01C         	goto	i2l7114
 14100  003982                     i2u652_40:
 14101  003982                     
 14102                           ;MCAL/EUSART/mcal_EUSART.c: 146:             {;MCAL/EUSART/mcal_EUSART.c: 148:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_even( (uint8_t) data);
 14103  003982  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 14104  003984  ECA5  F024         	call	i2_calc_parity_even
 14105  003988  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 14106  00398A  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14107  00398C  A0D8               	btfss	status,0,c
 14108  00398E  D002               	bra	i2u653_45
 14109  003990  80AC               	bsf	172,0,c	;volatile
 14110  003992  D001               	bra	i2u653_47
 14111  003994                     i2u653_45:
 14112  003994  90AC               	bcf	172,0,c	;volatile
 14113  003996                     i2u653_47:
 14114                           
 14115                           ;MCAL/EUSART/mcal_EUSART.c: 150:             }
 14116  003996  EFE9  F01C         	goto	i2l7118
 14117  00399A                     i2l7114:
 14118  00399A  EE20 F002          	lfsr	2,2
 14119  00399E  5006               	movf	EUSART_Async_Transmit_Data@_eusart_obj^0,w,c
 14120  0039A0  26D9               	addwf	fsr2l,f,c
 14121  0039A2  5007               	movf	(EUSART_Async_Transmit_Data@_eusart_obj+1)^0,w,c
 14122  0039A4  22DA               	addwfc	fsr2h,f,c
 14123  0039A6  50DF               	movf	223,w,c
 14124  0039A8  0B03               	andlw	3
 14125  0039AA  0A02               	xorlw	2
 14126  0039AC  A4D8               	btfss	status,2,c
 14127  0039AE  EFDB  F01C         	goto	i2u654_41
 14128  0039B2  EFDD  F01C         	goto	i2u654_40
 14129  0039B6                     i2u654_41:
 14130  0039B6  EFE9  F01C         	goto	i2l686
 14131  0039BA                     i2u654_40:
 14132  0039BA                     
 14133                           ;MCAL/EUSART/mcal_EUSART.c: 152:             {;MCAL/EUSART/mcal_EUSART.c: 154:          
      +                                 TXSTAbits.TX9D = (__bit) calc_parity_odd( (uint8_t) data);
 14134  0039BA  5008               	movf	EUSART_Async_Transmit_Data@data^0,w,c
 14135  0039BC  EC71  F024         	call	i2_calc_parity_odd
 14136  0039C0  6E0A               	movwf	??_EUSART_Async_Transmit_Data^0,c
 14137  0039C2  300A               	rrcf	??_EUSART_Async_Transmit_Data^0,w,c
 14138  0039C4  A0D8               	btfss	status,0,c
 14139  0039C6  D002               	bra	i2u655_45
 14140  0039C8  80AC               	bsf	172,0,c	;volatile
 14141  0039CA  D001               	bra	i2u655_47
 14142  0039CC                     i2u655_45:
 14143  0039CC  90AC               	bcf	172,0,c	;volatile
 14144  0039CE                     i2u655_47:
 14145  0039CE  EFE9  F01C         	goto	i2l7118
 14146  0039D2                     i2l686:
 14147  0039D2                     i2l7118:
 14148                           
 14149                           ;MCAL/EUSART/mcal_EUSART.c: 160:         TXREG = (uint8)data;
 14150  0039D2  C008  FFAD         	movff	EUSART_Async_Transmit_Data@data,4013	;volatile
 14151  0039D6                     i2l690:
 14152  0039D6  0012               	return		;funcret
 14153  0039D8                     __end_of_EUSART_Async_Transmit_Data:
 14154                           	callstack 0
 14155                           
 14156 ;; *************** function i2_calc_parity_odd *****************
 14157 ;; Defined at:
 14158 ;;		line 612 in file "MCAL/EUSART/mcal_EUSART.c"
 14159 ;; Parameters:    Size  Location     Type
 14160 ;;  data            1    wreg     unsigned char 
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;  data            1    2[COMRAM] unsigned char 
 14163 ;;  l_counter       1    4[COMRAM] unsigned char 
 14164 ;;  number_of_on    1    3[COMRAM] unsigned char 
 14165 ;; Return value:  Size  Location     Type
 14166 ;;                  1    wreg      unsigned char 
 14167 ;; Registers used:
 14168 ;;		wreg, status,2, status,0
 14169 ;; Tracked objects:
 14170 ;;		On entry : 0/0
 14171 ;;		On exit  : 0/0
 14172 ;;		Unchanged: 0/0
 14173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14178 ;;Total ram usage:        5 bytes
 14179 ;; Hardware stack levels used: 1
 14180 ;; This function calls:
 14181 ;;		Nothing
 14182 ;; This function is called by:
 14183 ;;		_EUSART_Async_Transmit_Data
 14184 ;;		i2_EUSART_Async_Read_Data
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188                           	psect	text82
 14189  0048E2                     __ptext82:
 14190                           	callstack 0
 14191  0048E2                     i2_calc_parity_odd:
 14192                           	callstack 18
 14193                           
 14194                           ;incstack = 0
 14195                           ;i2calc_parity_odd@data stored from wreg
 14196  0048E2  6E03               	movwf	i2calc_parity_odd@data^0,c
 14197  0048E4                     
 14198                           ;MCAL/EUSART/mcal_EUSART.c: 612: static __attribute__((inline)) uint8_t calc_parity_odd(
      +                          uint8_t data);MCAL/EUSART/mcal_EUSART.c: 613: {;MCAL/EUSART/mcal_EUSART.c: 616:     uint
      +                          8_t number_of_ones = 0 ;
 14199  0048E4  0E00               	movlw	0
 14200  0048E6  6E04               	movwf	i2calc_parity_odd@number_of_ones^0,c
 14201                           
 14202                           ;MCAL/EUSART/mcal_EUSART.c: 617:     uint8_t l_counter = 0 ;
 14203  0048E8  0E00               	movlw	0
 14204  0048EA  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 14205                           
 14206                           ;MCAL/EUSART/mcal_EUSART.c: 633:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 14207  0048EC  0E00               	movlw	0
 14208  0048EE  6E05               	movwf	i2calc_parity_odd@l_counter^0,c
 14209  0048F0                     i2l7056:
 14210                           
 14211                           ;MCAL/EUSART/mcal_EUSART.c: 634:     {;MCAL/EUSART/mcal_EUSART.c: 635:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 14212  0048F0  C005  F001         	movff	i2calc_parity_odd@l_counter,??i2_calc_parity_odd
 14213  0048F4  0E01               	movlw	1
 14214  0048F6  6E02               	movwf	(??i2_calc_parity_odd+1)^0,c
 14215  0048F8  2A01               	incf	??i2_calc_parity_odd^0,f,c
 14216  0048FA  EF81  F024         	goto	i2u640_44
 14217  0048FE                     i2u640_45:
 14218  0048FE  90D8               	bcf	status,0,c
 14219  004900  3602               	rlcf	(??i2_calc_parity_odd+1)^0,f,c
 14220  004902                     i2u640_44:
 14221  004902  2E01               	decfsz	??i2_calc_parity_odd^0,f,c
 14222  004904  EF7F  F024         	goto	i2u640_45
 14223  004908  5002               	movf	(??i2_calc_parity_odd+1)^0,w,c
 14224  00490A  1403               	andwf	i2calc_parity_odd@data^0,w,c
 14225  00490C  0900               	iorlw	0
 14226  00490E  B4D8               	btfsc	status,2,c
 14227  004910  EF8C  F024         	goto	i2u641_41
 14228  004914  EF8E  F024         	goto	i2u641_40
 14229  004918                     i2u641_41:
 14230  004918  EF8F  F024         	goto	i2l826
 14231  00491C                     i2u641_40:
 14232  00491C                     
 14233                           ;MCAL/EUSART/mcal_EUSART.c: 636:         {;MCAL/EUSART/mcal_EUSART.c: 637:             n
      +                          umber_of_ones++ ;
 14234  00491C  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 14235  00491E                     i2l826:
 14236                           
 14237                           ;MCAL/EUSART/mcal_EUSART.c: 639:     }
 14238  00491E  2A05               	incf	i2calc_parity_odd@l_counter^0,f,c
 14239  004920  0E07               	movlw	7
 14240  004922  6405               	cpfsgt	i2calc_parity_odd@l_counter^0,c
 14241  004924  EF96  F024         	goto	i2u642_41
 14242  004928  EF98  F024         	goto	i2u642_40
 14243  00492C                     i2u642_41:
 14244  00492C  EF78  F024         	goto	i2l7056
 14245  004930                     i2u642_40:
 14246  004930                     
 14247                           ;MCAL/EUSART/mcal_EUSART.c: 642:     number_of_ones++ ;
 14248  004930  2A04               	incf	i2calc_parity_odd@number_of_ones^0,f,c
 14249  004932                     
 14250                           ;MCAL/EUSART/mcal_EUSART.c: 644:     if((number_of_ones % 2) == 0)
 14251  004932  B004               	btfsc	i2calc_parity_odd@number_of_ones^0,0,c
 14252  004934  EF9E  F024         	goto	i2u643_41
 14253  004938  EFA0  F024         	goto	i2u643_40
 14254  00493C                     i2u643_41:
 14255  00493C  EFA3  F024         	goto	i2l7070
 14256  004940                     i2u643_40:
 14257  004940                     
 14258                           ;MCAL/EUSART/mcal_EUSART.c: 645:     {;MCAL/EUSART/mcal_EUSART.c: 646:         return 1 
      +                          ;
 14259  004940  0E01               	movlw	1
 14260  004942  EFA4  F024         	goto	i2l828
 14261  004946                     i2l7070:
 14262                           
 14263                           ;MCAL/EUSART/mcal_EUSART.c: 648:     return 0 ;
 14264  004946  0E00               	movlw	0
 14265  004948                     i2l828:
 14266  004948  0012               	return		;funcret
 14267  00494A                     __end_ofi2_calc_parity_odd:
 14268                           	callstack 0
 14269                           
 14270 ;; *************** function i2_calc_parity_even *****************
 14271 ;; Defined at:
 14272 ;;		line 650 in file "MCAL/EUSART/mcal_EUSART.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;  data            1    wreg     unsigned char 
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  data            1    2[COMRAM] unsigned char 
 14277 ;;  l_counter       1    4[COMRAM] unsigned char 
 14278 ;;  number_of_on    1    3[COMRAM] unsigned char 
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  1    wreg      unsigned char 
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14289 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14291 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14292 ;;Total ram usage:        5 bytes
 14293 ;; Hardware stack levels used: 1
 14294 ;; This function calls:
 14295 ;;		Nothing
 14296 ;; This function is called by:
 14297 ;;		_EUSART_Async_Transmit_Data
 14298 ;;		i2_EUSART_Async_Read_Data
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text83
 14303  00494A                     __ptext83:
 14304                           	callstack 0
 14305  00494A                     i2_calc_parity_even:
 14306                           	callstack 18
 14307                           
 14308                           ;incstack = 0
 14309                           ;i2calc_parity_even@data stored from wreg
 14310  00494A  6E03               	movwf	i2calc_parity_even@data^0,c
 14311  00494C                     
 14312                           ;MCAL/EUSART/mcal_EUSART.c: 650: static __attribute__((inline)) uint8_t calc_parity_even
      +                          (uint8_t data);MCAL/EUSART/mcal_EUSART.c: 651: {;MCAL/EUSART/mcal_EUSART.c: 653:     uin
      +                          t8_t number_of_ones = 0 ;
 14313  00494C  0E00               	movlw	0
 14314  00494E  6E04               	movwf	i2calc_parity_even@number_of_ones^0,c
 14315                           
 14316                           ;MCAL/EUSART/mcal_EUSART.c: 654:     uint8_t l_counter = 0 ;
 14317  004950  0E00               	movlw	0
 14318  004952  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 14319                           
 14320                           ;MCAL/EUSART/mcal_EUSART.c: 667:     for(l_counter = 0 ; l_counter < 8 ; l_counter++ )
 14321  004954  0E00               	movlw	0
 14322  004956  6E05               	movwf	i2calc_parity_even@l_counter^0,c
 14323  004958                     i2l7080:
 14324                           
 14325                           ;MCAL/EUSART/mcal_EUSART.c: 668:     {;MCAL/EUSART/mcal_EUSART.c: 669:         if( (data
      +                           & 0x01 << l_counter) != 0 )
 14326  004958  C005  F001         	movff	i2calc_parity_even@l_counter,??i2_calc_parity_even
 14327  00495C  0E01               	movlw	1
 14328  00495E  6E02               	movwf	(??i2_calc_parity_even+1)^0,c
 14329  004960  2A01               	incf	??i2_calc_parity_even^0,f,c
 14330  004962  EFB5  F024         	goto	i2u644_44
 14331  004966                     i2u644_45:
 14332  004966  90D8               	bcf	status,0,c
 14333  004968  3602               	rlcf	(??i2_calc_parity_even+1)^0,f,c
 14334  00496A                     i2u644_44:
 14335  00496A  2E01               	decfsz	??i2_calc_parity_even^0,f,c
 14336  00496C  EFB3  F024         	goto	i2u644_45
 14337  004970  5002               	movf	(??i2_calc_parity_even+1)^0,w,c
 14338  004972  1403               	andwf	i2calc_parity_even@data^0,w,c
 14339  004974  0900               	iorlw	0
 14340  004976  B4D8               	btfsc	status,2,c
 14341  004978  EFC0  F024         	goto	i2u645_41
 14342  00497C  EFC2  F024         	goto	i2u645_40
 14343  004980                     i2u645_41:
 14344  004980  EFC3  F024         	goto	i2l833
 14345  004984                     i2u645_40:
 14346  004984                     
 14347                           ;MCAL/EUSART/mcal_EUSART.c: 670:         {;MCAL/EUSART/mcal_EUSART.c: 671:             n
      +                          umber_of_ones++ ;
 14348  004984  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 14349  004986                     i2l833:
 14350                           
 14351                           ;MCAL/EUSART/mcal_EUSART.c: 673:     }
 14352  004986  2A05               	incf	i2calc_parity_even@l_counter^0,f,c
 14353  004988  0E07               	movlw	7
 14354  00498A  6405               	cpfsgt	i2calc_parity_even@l_counter^0,c
 14355  00498C  EFCA  F024         	goto	i2u646_41
 14356  004990  EFCC  F024         	goto	i2u646_40
 14357  004994                     i2u646_41:
 14358  004994  EFAC  F024         	goto	i2l7080
 14359  004998                     i2u646_40:
 14360  004998                     
 14361                           ;MCAL/EUSART/mcal_EUSART.c: 676:     number_of_ones++ ;
 14362  004998  2A04               	incf	i2calc_parity_even@number_of_ones^0,f,c
 14363  00499A                     
 14364                           ;MCAL/EUSART/mcal_EUSART.c: 678:     if((number_of_ones % 2) != 0)
 14365  00499A  A004               	btfss	i2calc_parity_even@number_of_ones^0,0,c
 14366  00499C  EFD2  F024         	goto	i2u647_41
 14367  0049A0  EFD4  F024         	goto	i2u647_40
 14368  0049A4                     i2u647_41:
 14369  0049A4  EFD7  F024         	goto	i2l7094
 14370  0049A8                     i2u647_40:
 14371  0049A8                     
 14372                           ;MCAL/EUSART/mcal_EUSART.c: 679:     {;MCAL/EUSART/mcal_EUSART.c: 680:         return 1 
      +                          ;
 14373  0049A8  0E01               	movlw	1
 14374  0049AA  EFD8  F024         	goto	i2l835
 14375  0049AE                     i2l7094:
 14376                           
 14377                           ;MCAL/EUSART/mcal_EUSART.c: 682:     return 0 ;
 14378  0049AE  0E00               	movlw	0
 14379  0049B0                     i2l835:
 14380  0049B0  0012               	return		;funcret
 14381  0049B2                     __end_ofi2_calc_parity_even:
 14382                           	callstack 0
 14383                           
 14384                           	psect	text84
 14385  000000                     __ptext84:
 14386                           	callstack 0
 14387  000000                     
 14388                           	psect	rparam
 14389  0000                     
 14390                           	psect	temp
 14391  000042                     btemp:
 14392                           	callstack 0
 14393  000042                     	ds	1
 14394  0000                     int$flags	set	btemp
 14395  0000                     wtemp8	set	btemp+1
 14396  0000                     ttemp5	set	btemp+1
 14397  0000                     ttemp6	set	btemp+4
 14398  0000                     ttemp7	set	btemp+8
 14399                           
 14400                           	psect	idloc
 14401                           
 14402                           ;Config register IDLOC0 @ 0x200000
 14403                           ;	unspecified, using default values
 14404  200000                     	org	2097152
 14405  200000  FF                 	db	255
 14406                           
 14407                           ;Config register IDLOC1 @ 0x200001
 14408                           ;	unspecified, using default values
 14409  200001                     	org	2097153
 14410  200001  FF                 	db	255
 14411                           
 14412                           ;Config register IDLOC2 @ 0x200002
 14413                           ;	unspecified, using default values
 14414  200002                     	org	2097154
 14415  200002  FF                 	db	255
 14416                           
 14417                           ;Config register IDLOC3 @ 0x200003
 14418                           ;	unspecified, using default values
 14419  200003                     	org	2097155
 14420  200003  FF                 	db	255
 14421                           
 14422                           ;Config register IDLOC4 @ 0x200004
 14423                           ;	unspecified, using default values
 14424  200004                     	org	2097156
 14425  200004  FF                 	db	255
 14426                           
 14427                           ;Config register IDLOC5 @ 0x200005
 14428                           ;	unspecified, using default values
 14429  200005                     	org	2097157
 14430  200005  FF                 	db	255
 14431                           
 14432                           ;Config register IDLOC6 @ 0x200006
 14433                           ;	unspecified, using default values
 14434  200006                     	org	2097158
 14435  200006  FF                 	db	255
 14436                           
 14437                           ;Config register IDLOC7 @ 0x200007
 14438                           ;	unspecified, using default values
 14439  200007                     	org	2097159
 14440  200007  FF                 	db	255
 14441                           
 14442                           	psect	config
 14443                           
 14444                           ; Padding undefined space
 14445  300000                     	org	3145728
 14446  300000  FF                 	db	255
 14447                           
 14448                           ;Config register CONFIG1H @ 0x300001
 14449                           ;	Oscillator Selection bits
 14450                           ;	FOSC = HS, HS oscillator
 14451                           ;	Fail-Safe Clock Monitor Enable bit
 14452                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14453                           ;	Internal/External Oscillator Switchover bit
 14454                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14455  300001                     	org	3145729
 14456  300001  02                 	db	2
 14457                           
 14458                           ;Config register CONFIG2L @ 0x300002
 14459                           ;	Power-up Timer Enable bit
 14460                           ;	PWRT = OFF, PWRT disabled
 14461                           ;	Brown-out Reset Enable bits
 14462                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 14463                           ;	Brown Out Reset Voltage bits
 14464                           ;	BORV = 18, VBOR set to 1.8 V nominal
 14465  300002                     	org	3145730
 14466  300002  19                 	db	25
 14467                           
 14468                           ;Config register CONFIG2H @ 0x300003
 14469                           ;	Watchdog Timer Enable bit
 14470                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 14471                           ;	Watchdog Timer Postscale Select bits
 14472                           ;	WDTPS = 32768, 1:32768
 14473  300003                     	org	3145731
 14474  300003  1E                 	db	30
 14475                           
 14476                           ; Padding undefined space
 14477  300004                     	org	3145732
 14478  300004  FF                 	db	255
 14479                           
 14480                           ;Config register CONFIG3H @ 0x300005
 14481                           ;	CCP2 MUX bit
 14482                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14483                           ;	PORTB A/D Enable bit
 14484                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14485                           ;	Low-Power Timer1 Oscillator Enable bit
 14486                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14487                           ;	HFINTOSC Fast Start-up
 14488                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
 14489                           ;	MCLR Pin Enable bit
 14490                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14491  300005                     	org	3145733
 14492  300005  81                 	db	129
 14493                           
 14494                           ;Config register CONFIG4L @ 0x300006
 14495                           ;	Stack Full/Underflow Reset Enable bit
 14496                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14497                           ;	Single-Supply ICSP Enable bit
 14498                           ;	LVP = OFF, Single-Supply ICSP disabled
 14499                           ;	Extended Instruction Set Enable bit
 14500                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14501                           ;	Background Debugger Enable bit
 14502                           ;	DEBUG = 0x1, unprogrammed default
 14503  300006                     	org	3145734
 14504  300006  81                 	db	129
 14505                           
 14506                           ; Padding undefined space
 14507  300007                     	org	3145735
 14508  300007  FF                 	db	255
 14509                           
 14510                           ;Config register CONFIG5L @ 0x300008
 14511                           ;	Code Protection Block 0
 14512                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14513                           ;	Code Protection Block 1
 14514                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14515                           ;	Code Protection Block 2
 14516                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14517                           ;	Code Protection Block 3
 14518                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14519  300008                     	org	3145736
 14520  300008  0F                 	db	15
 14521                           
 14522                           ;Config register CONFIG5H @ 0x300009
 14523                           ;	Boot Block Code Protection bit
 14524                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14525                           ;	Data EEPROM Code Protection bit
 14526                           ;	CPD = OFF, Data EEPROM not code-protected
 14527  300009                     	org	3145737
 14528  300009  C0                 	db	192
 14529                           
 14530                           ;Config register CONFIG6L @ 0x30000A
 14531                           ;	Write Protection Block 0
 14532                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14533                           ;	Write Protection Block 1
 14534                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14535                           ;	Write Protection Block 2
 14536                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14537                           ;	Write Protection Block 3
 14538                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 14539  30000A                     	org	3145738
 14540  30000A  0F                 	db	15
 14541                           
 14542                           ;Config register CONFIG6H @ 0x30000B
 14543                           ;	Configuration Register Write Protection bit
 14544                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14545                           ;	Boot Block Write Protection bit
 14546                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14547                           ;	Data EEPROM Write Protection bit
 14548                           ;	WRTD = OFF, Data EEPROM not write-protected
 14549  30000B                     	org	3145739
 14550  30000B  E0                 	db	224
 14551                           
 14552                           ;Config register CONFIG7L @ 0x30000C
 14553                           ;	Table Read Protection Block 0
 14554                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14555                           ;	Table Read Protection Block 1
 14556                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14557                           ;	Table Read Protection Block 2
 14558                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14559                           ;	Table Read Protection Block 3
 14560                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14561  30000C                     	org	3145740
 14562  30000C  0F                 	db	15
 14563                           
 14564                           ;Config register CONFIG7H @ 0x30000D
 14565                           ;	Boot Block Table Read Protection bit
 14566                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14567  30000D                     	org	3145741
 14568  30000D  40                 	db	64
 14569                           tosu	equ	0xFFF
 14570                           tosh	equ	0xFFE
 14571                           tosl	equ	0xFFD
 14572                           stkptr	equ	0xFFC
 14573                           pclatu	equ	0xFFB
 14574                           pclath	equ	0xFFA
 14575                           pcl	equ	0xFF9
 14576                           tblptru	equ	0xFF8
 14577                           tblptrh	equ	0xFF7
 14578                           tblptrl	equ	0xFF6
 14579                           tablat	equ	0xFF5
 14580                           prodh	equ	0xFF4
 14581                           prodl	equ	0xFF3
 14582                           indf0	equ	0xFEF
 14583                           postinc0	equ	0xFEE
 14584                           postdec0	equ	0xFED
 14585                           preinc0	equ	0xFEC
 14586                           plusw0	equ	0xFEB
 14587                           fsr0h	equ	0xFEA
 14588                           fsr0l	equ	0xFE9
 14589                           wreg	equ	0xFE8
 14590                           indf1	equ	0xFE7
 14591                           postinc1	equ	0xFE6
 14592                           postdec1	equ	0xFE5
 14593                           preinc1	equ	0xFE4
 14594                           plusw1	equ	0xFE3
 14595                           fsr1h	equ	0xFE2
 14596                           fsr1l	equ	0xFE1
 14597                           bsr	equ	0xFE0
 14598                           indf2	equ	0xFDF
 14599                           postinc2	equ	0xFDE
 14600                           postdec2	equ	0xFDD
 14601                           preinc2	equ	0xFDC
 14602                           plusw2	equ	0xFDB
 14603                           fsr2h	equ	0xFDA
 14604                           fsr2l	equ	0xFD9
 14605                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        89
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160     72     160
    BANK1           256     29     106
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    _uart_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    _uart_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> usart_isr(), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    CCP_Interrupt_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S5258$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5258$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Timer2_Init@_timer2	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    _uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    send_trig_pulse@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    Get_Distance@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Get_Distance@distance	PTR float  size(2) Largest target is 4
		 -> distance(BANK0[4]), 

    Ultra_Sonic_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    Ultra_Sonic_Init@ultrasonic_object	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    DHT11_Read_Data@data	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), T_Integral(COMRAM[1]), T_Decimal(COMRAM[1]), RH_Integral(COMRAM[1]), 
		 -> RH_Decimal(COMRAM[1]), 

    Get_Temp_HUM@Checksum	PTR unsigned char  size(2) Largest target is 1
		 -> Checksum(COMRAM[1]), 

    Get_Temp_HUM@T_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> T_Integral(COMRAM[1]), 

    Get_Temp_HUM@T_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> T_Decimal(COMRAM[1]), 

    Get_Temp_HUM@RH_Integral	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Integral(COMRAM[1]), 

    Get_Temp_HUM@RH_Decimal	PTR unsigned char  size(2) Largest target is 1
		 -> RH_Decimal(COMRAM[1]), 

    Timer1_Preload_Value@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_RW_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Prescaler_Config@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3609$Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer1.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    HAL_Timer0_Write_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Read_Val@result	PTR unsigned short  size(2) Largest target is 2
		 -> Get_Distance@timer_val(BANK0[2]), 

    HAL_Timer0_Read_Val@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    HAL_Timer0_Init@_tmr0_config	PTR const struct . size(2) Largest target is 4
		 -> timer0(BANK0[4]), 

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_callback@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_set_priority@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_disable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    S3104$Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 0

    S3104$Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj.Ext_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_callback@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_clear_flag@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_priority@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_set_edge@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S3057$Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@int_obj.Ext_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Slave_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Write_Blocking@_ack	PTR unsigned char  size(2) Largest target is 1
		 -> PCA_Write_Reg@ack(COMRAM[1]), 

    MSSP_I2C_Master_Write_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Stop@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Master_Send_Start@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    GPIO_Pin_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Toggle_Logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> TEST_PIN(COMRAM[1]), 

    GPIO_Pin_Read_Logic@logic	PTR enum E3185 size(2) Largest target is 1
		 -> Get_Distance@logic(BANK0[1]), 

    GPIO_Pin_Read_Logic@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> ultrasonic(BANK0[2]), 

    GPIO_Pin_Write_Logic@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    GPIO_Pin_Direction_Initialize@_pin_config	PTR const struct . size(2) Largest target is 12
		 -> selector(COMRAM[1]), TEST_PIN(COMRAM[1]), ultrasonic(BANK0[2]), stepper_base.dir_pin(COMRAM[1]), 
		 -> stepper_base.step_pin(COMRAM[1]), stepper_base(COMRAM[2]), CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllh[1]), PORTD(BITBIGSFRllllh[1]), PORTC(BITBIGSFRllllh[1]), PORTB(BITBIGSFRllllh[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(SFR[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_config_baud_rate_gen@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_config_baud_rate_gen@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    Rx_config_interrupt@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rx_config_interrupt@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    eusart_Rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), Absolute function(), 

    Rx_config_interrupt@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Rx_config@_rx_obj.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    async_Rx_config@_rx_obj.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    async_Rx_config@_rx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    async_Tx_config@_tx_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Read_Data_Blocking@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), 

    EUSART_Async_Read_Data_Blocking@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    eusart_frameerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_overrunerr_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Read_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Read_Data@data	PTR unsigned short  size(2) Largest target is 13
		 -> longtude(BANK1[13]), latitude(BANK1[13]), gpstemp(COMRAM[1]), datarecive(COMRAM[1]), 

    EUSART_Async_Read_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Transmit_Data@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Transmit_Data@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    EUSART_Async_Init@_eusart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_Async_Init@_eusart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    EUSART_Async_Init@_eusart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    CCP_Compare_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Capture_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Mode_Timer_Select@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Start@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 12
		 -> CCP2_Obj(BANK1[12]), CCP1_Obj(BANK1[12]), 

    stepper_move_one_deg_ccw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    stepper_move_one_deg_cw@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    Ecu_Stepper_Step@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    Ecu_Stepper_Init@stepper	PTR struct . size(2) Largest target is 2
		 -> stepper_base(COMRAM[2]), 

    PCA_Write_Reg@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    Servo_SetAngle@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    Servo_SetAngle@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    ServoDriver_Init@servo_driver_obj	PTR const struct . size(2) Largest target is 4
		 -> servo_driver_obj(BANK0[4]), 

    ServoDriver_Init@i2c_obj	PTR const struct . size(2) Largest target is 7
		 -> i2c_obj(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 0

    ECU_DC_Motor_Run_Right@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Run_Left@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    ECU_DC_Motor_Init@dc_motor	PTR const struct . size(2) Largest target is 1
		 -> W2_W4_W6_Motor_Control(BANK0[1]), W1_W3_W5_Motor_Control(BANK0[1]), 

    Bluetooth_Send_Data_Non_Blocking@_uart_obj	PTR const struct . size(2) Largest target is 12
		 -> _uart_obj(BANK1[12]), 

    S32$ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.ferr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Bluetooth_Init@_uart_obj.rx_config.oerr_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S32$rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 

    Bluetooth_Init@_uart_obj.rx_config.rx_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> usart_isr(), 


Critical Paths under _main in COMRAM

    _main->_GPIO_Pin_Toggle_Logic
    _stepper_move_one_deg_cw->_Ecu_Stepper_Step
    _stepper_move_one_deg_ccw->_Ecu_Stepper_Step
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _application_intialize->_EUSART_Async_Init
    _application_intialize->_GPIO_Pin_Initialize
    _Ultra_Sonic_Init->_GPIO_Pin_Initialize
    _Ultra_Sonic_Init->_HAL_Timer0_Init
    _HAL_Timer0_Init->_HAL_Timer0_Write_Val
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _ECU_DC_Motor_Init->_GPIO_Pin_Initialize
    _CCP_Init->_CCP_Capture_Mode_Config
    _CCP_Init->_CCP_Compare_Mode_Config
    _CCP_Init->_GPIO_Pin_Initialize
    _CCP_PWM_Mode_Config->_Timer2_Init
    _CCP_Compare_Mode_Config->_CCP_Mode_Timer_Select
    _CCP_Capture_Mode_Config->_CCP_Mode_Timer_Select
    _Ecu_Stepper_Init->_GPIO_Pin_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _EUSART_Async_Init->_async_Rx_config
    _async_config_baud_rate_gen->___fltol
    _async_Rx_config->_Rx_config_interrupt
    _Robot_Steer_Right_Forward->_ECU_DC_Motor_Run_Right
    _Robot_Steer_Left_Forward->_ECU_DC_Motor_Run_Right
    _Robot_Move_Forward->_ECU_DC_Motor_Run_Right
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Robot_Move_Backward->_ECU_DC_Motor_Run_Left
    _Servo_SetAngle->_PCA_Write_Reg
    _Servo_SetAngle->___fltol
    ___fladd->___xxtofl
    _PCA_Write_Reg->_MSSP_I2C_Master_Write_Blocking
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Temp_HUM->_DHT11_Read_Data
    _Get_Distance->_HAL_Timer0_Read_Val
    _Get_Distance->_send_trig_pulse
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data
    _EUSART_Async_Read_Data->_calc_parity_even
    _EUSART_Async_Read_Data->_calc_parity_odd

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB4_ISR
    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _usart_isr->i2_EUSART_Async_Read_Data
    i2_EUSART_Async_Read_Data->i2_calc_parity_even
    i2_EUSART_Async_Read_Data->i2_calc_parity_odd
    _Bluetooth_Send_Data_Non_Blocking->_EUSART_Async_Transmit_Data
    _EUSART_Async_Transmit_Data->i2_calc_parity_even
    _EUSART_Async_Transmit_Data->i2_calc_parity_odd

Critical Paths under _main in BANK0

    _stepper_move_one_deg_cw->_Ecu_Stepper_Step
    _stepper_move_one_deg_ccw->_Ecu_Stepper_Step
    _Ecu_Stepper_Step->_GPIO_Pin_Write_Logic
    _I2C_Master_Mode_Clock_Configurations->___fladd
    _Ecu_Stepper_Init->_GPIO_Pin_Direction_Initialize
    _Ecu_Stepper_Init->_GPIO_Pin_Write_Logic
    _GPIO_Pin_Initialize->_GPIO_Pin_Direction_Initialize
    _GPIO_Pin_Initialize->_GPIO_Pin_Write_Logic
    _async_config_baud_rate_gen->___fladd
    _ECU_DC_Motor_Run_Right->_GPIO_Pin_Write_Logic
    _Servo_SetAngle->___fladd
    ___fladd->___flmul
    ___fltol->___fladd
    ___flmul->___fldiv
    _ECU_DC_Motor_Run_Left->_GPIO_Pin_Write_Logic
    _Get_Distance->___fldiv
    _send_trig_pulse->_GPIO_Pin_Write_Logic
    ___fldiv->___xxtofl
    _GPS_Service->_EUSART_Async_Read_Data_Blocking
    _EUSART_Async_Read_Data_Blocking->_EUSART_Async_Read_Data

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _application_intialize->_EUSART_Async_Init
    _Robot_Nav_Init->_CCP_PWM_Set_Duty
    _ServoDriver_Init->_MSSP_I2C_Init
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _EUSART_Async_Init->_async_config_baud_rate_gen
    _async_config_baud_rate_gen->___fltol
    _Robot_Steer_Right_Forward->_CCP_PWM_Set_Duty
    _Robot_Steer_Left_Forward->_CCP_PWM_Set_Duty
    _Robot_Move_Forward->_CCP_PWM_Set_Duty
    _Robot_Move_Backward->_CCP_PWM_Set_Duty
    _Servo_SetAngle->___fltol
    _Robot_Steer_Stop->_CCP_PWM_Set_Duty
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->___fladd

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  353289
                                             27 BANK1      2     2      0
              _GPIO_Pin_Toggle_Logic
                        _GPS_Service
                       _Get_Distance
                       _Get_Temp_HUM
                _Robot_Move_Backward
                 _Robot_Move_Forward
          _Robot_Steer_Left_Backward
           _Robot_Steer_Left_Forward
         _Robot_Steer_Right_Backward
          _Robot_Steer_Right_Forward
                   _Robot_Steer_Stop
                     _Servo_SetAngle
              _application_intialize
           _stepper_move_one_deg_ccw
            _stepper_move_one_deg_cw
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_cw                              4     2      2   11478
                                              8 BANK0      4     2      2
                   _Ecu_Stepper_Step
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _stepper_move_one_deg_ccw                             4     2      2   11478
                                              8 BANK0      4     2      2
                   _Ecu_Stepper_Step
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Step                                     4     2      2    5750
                                             33 COMRAM     2     0      2
                                              6 BANK0      2     2      0
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   83803
                  _EUSART_Async_Init
                   _Ecu_Stepper_Init
                _GPIO_Pin_Initialize
                     _Robot_Nav_Init
                   _Ultra_Sonic_Init
 ---------------------------------------------------------------------------------
 (2) _Ultra_Sonic_Init                                     5     1      4    8896
                                              6 BANK0      4     0      4
                _GPIO_Pin_Initialize
                    _HAL_Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _HAL_Timer0_Init                                      4     2      2     937
                                             34 COMRAM     2     0      2
                                              0 BANK0      1     1      0
               _HAL_Timer0_Write_Val
 ---------------------------------------------------------------------------------
 (2) _Robot_Nav_Init                                       1     1      0   42270
                           _CCP_Init
                   _CCP_PWM_Set_Duty
                      _CCP_PWM_Start
                  _ECU_DC_Motor_Init
                   _ServoDriver_Init
 ---------------------------------------------------------------------------------
 (3) _ServoDriver_Init                                     5     1      4   13923
                                             16 BANK1      4     0      4
                      _MSSP_I2C_Init
                      _PCA_Write_Reg
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_Init                                        3     1      2    9944
                                             14 BANK1      2     0      2
_I2C_Master_Mode_Clock_Configuration
             _I2C_Pin_Configurations
_I2C_Slave_Mode_Clock_Configurations
 ---------------------------------------------------------------------------------
 (5) _I2C_Slave_Mode_Clock_Configurations                  4     2      2     122
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Pin_Configurations                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Mode_Clock_Configurations                 4     2      2    9347
                                             35 COMRAM     1     1      0
                                             12 BANK1      2     0      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _ECU_DC_Motor_Init                                    3     1      2    7866
                                              6 BANK0      2     0      2
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Start                                        4     2      2     227
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Init                                             4     2      2    9751
                                              6 BANK0      3     1      2
            _CCP_Capture_Mode_Config
            _CCP_Compare_Mode_Config
               _CCP_Interrupt_Config
                _CCP_PWM_Mode_Config
                _GPIO_Pin_Initialize
 ---------------------------------------------------------------------------------
 (4) _CCP_PWM_Mode_Config                                  3     1      2     402
                                             32 COMRAM     3     1      2
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (5) _Timer2_Init                                          4     2      2     194
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Interrupt_Config                                 2     0      2      76
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Compare_Mode_Config                              5     3      2     558
                                             32 COMRAM     4     2      2
                                              0 BANK0      1     1      0
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (4) _CCP_Capture_Mode_Config                              5     3      2     558
                                             32 COMRAM     4     2      2
                                              0 BANK0      1     1      0
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (5) _CCP_Mode_Timer_Select                                3     1      2     273
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Ecu_Stepper_Init                                     2     0      2   14012
                                              6 BANK0      2     0      2
      _GPIO_Pin_Direction_Initialize
                _GPIO_Pin_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_Pin_Initialize                                  3     1      2    7611
                                             33 COMRAM     3     1      2
      _GPIO_Pin_Direction_Initialize
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (4) _GPIO_Pin_Direction_Initialize                        9     7      2     617
                                             29 COMRAM     3     1      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Init                                    3     1      2   11014
                                             35 COMRAM     1     1      0
                                             25 BANK1      2     0      2
                    _async_Rx_config
                    _async_Tx_config
         _async_config_baud_rate_gen
 ---------------------------------------------------------------------------------
 (3) _async_config_baud_rate_gen                          13    11      2    9687
                                             12 BANK1     13    11      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _async_Tx_config                                      3     1      2     282
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _async_Rx_config                                      3     1      2     629
                                             32 COMRAM     3     1      2
                _Rx_config_interrupt
 ---------------------------------------------------------------------------------
 (4) _Rx_config_interrupt                                  3     1      2     313
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Forward                            1     1      0   48283
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Right_Backward                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Forward                             1     1      0   48283
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Left_Backward                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Forward                                   1     1      0   48283
                   _CCP_PWM_Set_Duty
             _ECU_DC_Motor_Run_Right
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Right                               3     1      2    6092
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Robot_Move_Backward                                  1     1      0   47923
                   _CCP_PWM_Set_Duty
              _ECU_DC_Motor_Run_Left
                   _Robot_Steer_Stop
                     _Servo_SetAngle
 ---------------------------------------------------------------------------------
 (1) _Servo_SetAngle                                      10     4      6   21185
                                             12 BANK1      9     3      6
                      _PCA_Write_Reg
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4002
                                             60 BANK0     12     4      8
                                              0 BANK1      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PCA_Write_Reg                                        6     1      5    3414
                                             34 COMRAM     1     1      0
                                              0 BANK0      5     0      5
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_Master_Write_Blocking                       6     1      5     978
                                             29 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_Master_Send_Stop                            3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_Master_Send_Start                           3     1      2     140
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Robot_Steer_Stop                                     1     1      0   10503
                   _CCP_PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Set_Duty                                    12     9      3   10493
                                             12 BANK1     11     8      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     757
                                             33 COMRAM     2     2      0
                                              4 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2873
                                             35 BANK0     25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_Run_Left                                3     1      2    5732
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _Get_Temp_HUM                                        11     1     10    1309
                                              0 BANK0     10     0     10
               _DHT11_Check_Response
                    _DHT11_Read_Data
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read_Data                                      4     2      2     536
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Check_Response                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Distance                                        10     4      6   12457
                                             35 BANK0      9     3      6
                _GPIO_Pin_Read_Logic
                _HAL_Timer0_Read_Val
               _HAL_Timer0_Write_Val
                            ___fldiv
                           ___xxtofl
                    _send_trig_pulse
 ---------------------------------------------------------------------------------
 (2) _send_trig_pulse                                      2     0      2    5629
                                             33 COMRAM     2     0      2
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1136
                                             29 COMRAM     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             10 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _HAL_Timer0_Write_Val                                 5     1      4     490
                                             29 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _HAL_Timer0_Read_Val                                 11     7      4     490
                                             29 COMRAM     6     2      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Read_Logic                                 10     6      4     739
                                             29 COMRAM     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Service                                          3     3      0    8104
                                             16 BANK0      3     3      0
    _EUSART_Async_Read_Data_Blocking
               _GPIO_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_Pin_Write_Logic                                10     7      3    5477
                                             29 COMRAM     4     1      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Async_Read_Data_Blocking                      5     1      4    2559
                                             12 BANK0      4     0      4
             _EUSART_Async_Read_Data
 ---------------------------------------------------------------------------------
 (3) _EUSART_Async_Read_Data                              15    11      4    1522
                                             34 COMRAM     2     2      0
                                              0 BANK0     12     8      4
                   _calc_parity_even
                    _calc_parity_odd
 ---------------------------------------------------------------------------------
 (4) _calc_parity_odd                                      5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _calc_parity_even                                     5     5      0     173
                                             29 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Pin_Toggle_Logic                                8     6      2     200
                                             29 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  3     3      0     176
                                             26 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 6     6      0    1836
                                             19 COMRAM     6     6      0
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Rx_ISR                                       0     0      0    1836
                   Absolute function *
                          _usart_isr *
 ---------------------------------------------------------------------------------
 (11) _usart_isr                                           0     0      0    1836
   _Bluetooth_Send_Data_Non_Blocking
           i2_EUSART_Async_Read_Data
            i2_GPIO_Pin_Toggle_Logic
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_Pin_Toggle_Logic                             8     6      2     100
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Async_Read_Data                           15    11      4     768
                                              5 COMRAM    14    10      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (12) _Bluetooth_Send_Data_Non_Blocking                    4     1      3     968
                                             11 COMRAM     3     0      3
         _EUSART_Async_Transmit_Data
 ---------------------------------------------------------------------------------
 (13) _EUSART_Async_Transmit_Data                          7     3      4     742
                                              5 COMRAM     6     2      4
                 i2_calc_parity_even
                  i2_calc_parity_odd
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_odd                                   5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (13) i2_calc_parity_even                                  5     5      0     116
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Pin_Toggle_Logic
   _GPS_Service
     _EUSART_Async_Read_Data_Blocking
       _EUSART_Async_Read_Data
         _calc_parity_even
         _calc_parity_odd
     _GPIO_Pin_Write_Logic
   _Get_Distance
     _GPIO_Pin_Read_Logic
     _HAL_Timer0_Read_Val
     _HAL_Timer0_Write_Val
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _send_trig_pulse
       _GPIO_Pin_Write_Logic
   _Get_Temp_HUM
     _DHT11_Check_Response
     _DHT11_Read_Data
     _DHT11_Start
   _Robot_Move_Backward
     _CCP_PWM_Set_Duty
       ___fldiv
       ___flmul
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _ECU_DC_Motor_Run_Left
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
       _CCP_PWM_Set_Duty
     _Servo_SetAngle
       _PCA_Write_Reg
         _MSSP_I2C_Master_Send_Start
         _MSSP_I2C_Master_Send_Stop
         _MSSP_I2C_Master_Write_Blocking
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
   _Robot_Move_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
       _GPIO_Pin_Write_Logic
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Left_Backward
   _Robot_Steer_Left_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Right_Backward
   _Robot_Steer_Right_Forward
     _CCP_PWM_Set_Duty
     _ECU_DC_Motor_Run_Right
     _Robot_Steer_Stop
     _Servo_SetAngle
   _Robot_Steer_Stop
   _Servo_SetAngle
   _application_intialize
     _EUSART_Async_Init
       _async_Rx_config
         _Rx_config_interrupt
       _async_Tx_config
       _async_config_baud_rate_gen
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
     _Ecu_Stepper_Init
       _GPIO_Pin_Direction_Initialize
       _GPIO_Pin_Initialize
         _GPIO_Pin_Direction_Initialize
         _GPIO_Pin_Write_Logic
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Initialize
     _Robot_Nav_Init
       _CCP_Init
         _CCP_Capture_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Compare_Mode_Config
           _CCP_Mode_Timer_Select
         _CCP_Interrupt_Config
         _CCP_PWM_Mode_Config
           _Timer2_Init
         _GPIO_Pin_Initialize
       _CCP_PWM_Set_Duty
       _CCP_PWM_Start
       _ECU_DC_Motor_Init
         _GPIO_Pin_Initialize
       _ServoDriver_Init
         _MSSP_I2C_Init
           _I2C_Master_Mode_Clock_Configurations
             ___fladd
             ___fldiv
             ___fltol
             ___xxtofl
           _I2C_Pin_Configurations
           _I2C_Slave_Mode_Clock_Configurations
         _PCA_Write_Reg
     _Ultra_Sonic_Init
       _GPIO_Pin_Initialize
       _HAL_Timer0_Init
         _HAL_Timer0_Write_Val
   _stepper_move_one_deg_ccw
     _Ecu_Stepper_Step
       _GPIO_Pin_Write_Logic
     _GPIO_Pin_Write_Logic
   _stepper_move_one_deg_cw
     _Ecu_Stepper_Step
     _GPIO_Pin_Write_Logic

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _EUSART_Rx_ISR
     Absolute function(Fake) *
     _usart_isr *
       _Bluetooth_Send_Data_Non_Blocking
         _EUSART_Async_Transmit_Data
           i2_calc_parity_even
           i2_calc_parity_odd
       i2_EUSART_Async_Read_Data
         i2_calc_parity_even
         i2_calc_parity_odd
       i2_GPIO_Pin_Toggle_Logic
   _EUSART_Tx_ISR
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      6A       7       41.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      41       1       69.1%
BITBIGSFRlllll      20      0       0      48        0.0%
BITBIGSFRhhhhll     18      0       0      38        0.0%
BITBIGSFRhhhhh       D      0       0      37        0.0%
BITBIGSFRllhhll      9      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      43        0.0%
BITBIGSFRllhhll      6      0       0      45        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRlllh        4      0       0      46        0.0%
BITBIGSFRhhhhll      3      0       0      39        0.0%
BITBIGSFRllhhll      1      0       0      42        0.0%
BITBIGSFRllhhlh      1      0       0      41        0.0%
BITBIGSFRllhhh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14B      12        0.0%
DATA                 0      0     14B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 26 01:22:53 2023

                                 _RH_Integral 0036                     ?_stepper_move_one_deg_ccw 0068  
                                ___fldiv@aexp 0082                                  ___fldiv@bexp 0081  
                                           _i 002C                                  ___fldiv@sign 007A  
                                 _SSPSTATbits 000FC7                                            l60 4EB2  
                                          l55 4ED8                                            l65 4E8A  
                                          bsr 000FE0                         ??_InterruptManagerLow 001B  
              ECU_DC_Motor_Run_Right@dc_motor 0022            __end_of_async_config_baud_rate_gen 1D66  
                  _async_config_baud_rate_gen 19AE                                           l300 3AA4  
                                         l310 380E                                           l313 4AE2  
                                         l330 457C                                           l325 450C  
                                         l342 4A16                                           l513 3708  
                                         l516 3726                                           l349 4A7C  
                                         l534 2B46                                           l543 4B3E  
                                         l706 25DC                                           l803 41D4  
                                         l619 2CB2                                           l563 41B4  
                                         l572 45EC                                           l821 1D64  
                                         l806 4252                                           l566 4FBC  
                                         l727 25F8                                           l815 19E2  
                                         l575 45EC                                           l728 25FC  
                                         l672 4B58                                           l921 465C  
                                         l833 48B6                                           l753 4766  
                                         l809 4256                                           l817 1A9E  
                                         l826 484E                                           l818 1B5A  
                                         l674 4B98                                           l835 48E0  
                                         l819 1C16                                           l828 4878  
                                         l916 406C                                           l596 30A8  
                                         l693 2420                                           l909 3314  
                                         l758 47A4                                           l782 42E6  
                                         l926 4C88                                           l759 47A8  
                                         l792 3FBC                                           l776 42C2  
                                         l890 2F64                                           l795 3FBE  
                                         l779 42E4                                           l789 3F96  
                                         l990 3144                                           l984 30C2  
                                         l999 31E4                                           _PR2 000FCB  
                            _calc_parity_even 487A                        ??_InterruptManagerHigh 0014  
                                         _gps 003C                     _RB5_InterruptHandler_HIGH 00E3  
                             __end_of_ADC_ISR 4FC4      GPIO_Pin_Direction_Initialize@ERRORSTATUS 0020  
                                         prod 000FF3                                           tosl 000FFD  
                                         wreg 000FE8                                    _TXSTA1bits 000FAC  
                                ___flmul@aexp 0090                                  ___flmul@bexp 0095  
                                ___flmul@sign 008F                                  ___flmul@temp 009A  
                                ___flmul@prod 0096                        ??_GPIO_Pin_Write_Logic 0060  
                                 _stepper_pos 002E                        ??_HAL_Timer0_Write_Val 0022  
                             __end_of_RB4_ISR 4FAA                               __end_of_RB5_ISR 4F90  
                             __end_of_RB6_ISR 4F76                               __end_of_RB7_ISR 4F5C  
                                ___fltol@exp1 0023                                          l1010 4CD8  
                                        l1002 31E6                                          l1012 4CDA  
                                        l1100 4FB6                                          l1014 4CE8  
                                        l1030 4CA2                                          l1032 4CB0  
                                        l1017 4CF8                                          l1042 47D6  
                                        l1035 4CC0                                          l1028 4CA0  
                                        l1044 47E4                                          l1038 47D2  
                                        l1047 4810                                          l1092 3E5C  
                                        l1510 3542                                          l1097 4D2A  
                                        l1533 3F10                                          l1517 362C  
                                        l1711 4F40                                          l1720 4DA8  
                                        l2520 126E                                          l1537 4E36  
                                        l2521 125A                                          l1538 4E38  
                                        l1714 4D8C                                          l2610 19AC  
                                        l2522 1218                                          l1723 4DB6  
                                        l1708 4112                                          l1717 4D9A  
                                        l1733 4356                                          l2613 183E  
                                        l2606 1648                                          l2623 196E  
                                        l2615 18B6                                          l1736 4376  
                                        l1728 42F8                                          l2616 18A4  
                                        l1672 3DA4                                          l2289 352A  
                                        l2537 139E                                          l2529 1580  
                                        l1681 4FBE                                          l1761 4BEE  
                                        l2650 29BE                                          l2546 1482  
                                        l1666 4490                                          l1771 33BA  
                                        l2547 1470                                          l1675 3B64  
                                        l1772 3422                                          l1764 333A  
                                        l1684 4FC0                                          l2661 2956  
                                        l1669 3CE4                                          l2574 2100  
                                        l2654 28FA                                          l1678 3C24  
                                        l2647 2862                                          l1775 4DE2  
                                        l1687 4EFE                                          l2576 1F60  
                                        l1768 338A                                          l2585 1FA6  
                                        l1937 4C3E                                          l1946 2DCE  
                                        l7010 4720                                          l7002 46CE  
                                        l2587 201E                                          l2579 1F24  
                                        l2588 200C                                          l7012 472C  
                                        l7004 46CE                                          l1958 2E1E  
                                        l7014 4738                                          l7006 46E0  
                                        l1967 46E4                                          l7008 46E6  
                                        l7040 4CFA                                          l1969 473A  
                                        l1897 230E                                          l7042 4CFA  
                                        l7300 418E                                          l7044 4D0C  
                                        l7302 41AC                                          l7046 4D10  
                                        l8120 4F28                                          l7048 4FB2  
                                        l8130 42F4                                          l8122 4F36  
                                        l8300 45EE                                          l8140 431E  
                                        l8124 4F3E                                          l8302 45EE  
                                        l8126 4D8C                                          l8142 433C  
                                        l8118 4F24                                          l8304 4600  
                                        l8144 4364                                          l8136 4306  
                                        l8128 42E8                                          l8306 4604  
                                        l8146 4366                                          l8138 4310  
                                        l7290 4124                                          l7292 4134  
                                        l7294 414C                                          l7296 416A  
                                        l7288 4114                                          l7298 4176  
                                        l7670 4AF6                                          l7680 4B3E  
                                        l7672 4AFA                                          l7674 4B12  
                                        l7666 4AE4                                          l9700 10A4  
                                        l7676 4B1E                                          l7668 4AE4  
                                        l9710 10DC                                          l9702 10A8  
                                        l7678 4B36                                          l9800 12D4  
                                        l9720 110E                                          l9712 10DE  
                                        l9704 10B0                                          l9810 1304  
                                        l9802 12E0                                          l9730 114E  
                                        l9722 111E                                          l9714 10E8  
                                        l9706 10C2                                          l9900 1DA4  
                                        l9820 137C                                          l9804 12E4  
                                        l9812 130C                                          l9740 117C  
                                        l9732 1162                                          l9724 1130  
                                        l9716 10F8                                          l9708 10CA  
                                        l9910 1DD4                                          l9902 1DB4  
                                        l9830 13DE                                          l9814 1334  
                                        l9822 138E                                          l9806 12F4  
                                        l9750 1190                                          l9742 1180  
                                        l9734 1170                                          l9726 1134  
                                        l9718 10FC                                          l9920 1E0A  
                                        l9912 1DDA                                          l9904 1DB6  
                                        l9840 1414                                          l9832 13E8  
                                        l9824 13B6                                          l9816 136A  
                                        l9808 12F8                                          l9760 11A4  
                                        l9752 1194                                          l9744 1184  
                                        l9736 1174                                          l9728 113C  
                                        l9930 1E4A                                          l9922 1E1A  
                                        l9914 1DE8                                          l9906 1DBE  
                                        l9850 1440                                          l9842 1418  
                                        l9834 13F8                                          l9826 13C8  
                                        l9818 136C                                          l9770 11E0  
                                        l9762 11A8                                          l9754 1198  
                                        l9746 1188                                          l9738 1178  
                                        l9690 105C                                          l9932 1E5A  
                                        l9940 1E7A                                          l9924 1E1C  
                                        l9916 1DEA                                          l9908 1DCE  
                                        l9860 14A2                                          l9852 144E  
                                        l9844 1428                                          l9836 13FC  
                                        l9780 1236                                          l9772 11FE  
                                        l9764 11AC                                          l9756 119C  
                                        l9748 118C                                          l9692 106C  
                                        l9950 1EB8                                          l9942 1E8A  
                                        l9934 1E62                                          l9918 1DFA  
                                        l9926 1E24                                          l9870 1510  
                                        l9862 14B0                                          l9854 1466  
                                        l9838 140C                                          l9846 142A  
                                        l9790 128E                                          l9782 1246  
                                        l9774 1210                                          l9758 11A0  
                                        l9766 11B0                                          l9694 1070  
                                        STR_1 1014                                          l9960 1F00  
                                        l9952 1EC8                                          l9944 1E8A  
                                        l9936 1E66                                          l9928 1E34  
                                        l9880 1552                                          l9872 1534  
                                        l9864 14EC                                          l9848 143A  
                                        l9784 124A                                          l9776 1226  
                                        l9768 11B4                                          l9696 1082  
                                        l9688 1048                                          STR_2 1034  
                                        STR_3 1025                                          l9970 1F4E  
                                        l9962 1F14                                          l9954 1ED8  
                                        l9890 1D66                                          l9882 155C  
                                        l9874 1538                                          l9858 1494  
                                        l9866 14EE                                          l9794 12A4  
                                        l9786 1256                                          l9778 1232  
                                        l9698 1092                                          STR_4 1001  
                                        STR_5 1043                                          l9980 1F96  
                                        l9972 1F5E                                          l9964 1F22  
                                        l9956 1EE8                                          l9948 1E9E  
                                        l9892 1D74                                          l9884 156C  
                                        l9876 1546                                          l9868 1500  
                                        l9796 12B6                                          l9788 127E  
                                        l9990 1FD6                                          l9982 1FA4  
                                        l9974 1F70                                          l9966 1F2E  
                                        l9958 1EF0                                          l9894 1D82  
                                        l9886 1570                                          l9878 154E  
                                        l9798 12C4                                          STR_9 1040  
                                        l9992 2004                                          l9976 1F86  
                                        l9984 1FB6                                          l9968 1F4C  
                                        l9896 1D84                                          l9986 1FC4  
                                        l9978 1F8C                                          l9898 1D94  
                                        l9996 202E                                          l9988 1FC8  
                                        l9998 203A                                          _LATA 000F89  
                                        _LATB 000F8A                                          _LATC 000F8B  
                                        _LATD 000F8C                                          _LATE 000F8D  
                                        u8000 4306                                          u8001 4302  
                                        u8010 431E                                          u8011 431A  
                                        u8020 4364                                          u6340 46E0  
                                        u8021 4360                                          u6341 46DC  
                                        u8030 4376                                          u8031 4372  
                                        i2l32 4E62                                          u7330 4AF6  
                                        u7331 4AF2                                          u6700 414C  
                                        u7340 4B12                                          u6701 4148  
                                        u7341 4B0E                                          u8230 4600  
                                        u6710 416A                                          u7350 4B36  
                                        u6390 4D0C                                          u8231 45FC  
                                        u6711 4166                                          u7351 4B32  
                                        u6391 4D08                                          u6720 418E  
                                        u6721 418A                                          u6730 41AC  
                                        u6731 41A8                                          u8244 4620  
                                        u8245 461C                                          u7970 4D9A  
                                        u9810 106C                                          u7971 4D96  
                                        u9811 1068                                          u7980 4DA8  
                                        u9900 11E0                                          u9820 1082  
                                        u7981 4DA4                                          u9901 11DC  
                                        u9821 107E                                          u7990 4DB6  
                                        u9910 11F8                                          u9830 1092  
                                        u7991 4DB2                                          u9911 11F2  
                                        u9831 108E                                          u9920 11FA  
                                        u9840 10DC                                          u9841 10D8  
                                        u9930 1226                                          u9850 10F8  
                                        u9931 1222                                          u9851 10F4  
                                        u9940 1246                                          u9860 110E  
                                        u9941 1242                                          u9861 110A  
                                        u9950 126E                                          u9870 111E  
                                        _RX9D 007D58                                          u9951 126A  
                                        u9871 111A                                          u9960 127E  
                                        u9880 1162                                          u9961 127A  
                                        u9881 115E                                          u9970 128E  
                                        u9890 1170                                          _TMR2 000FCC  
                                        u9971 128A                                          u9891 116C  
                                        u9980 12C4                                          u9981 12C0  
                                        u9990 12D4                                          u9991 12D0  
                       ??_CCP_PWM_Mode_Config 0023                       ??_application_intialize 0025  
            __end_ofi2_EUSART_Async_Read_Data 2808                      _RB4_InterruptHandler_LOW 00E5  
                   ??_CCP_Capture_Mode_Config 0023                                          _blue 003B  
                                        _main 2102                      _RB7_InterruptHandler_LOW 00D9  
                                        fsr2h 000FDA                                          indf2 000FDF  
                                        fsr1l 000FE1                                          fsr2l 000FD9  
                                        btemp 0042                                          prodh 000FF4  
                                        prodl 000FF3                                          start 0286  
             __end_of_CCP_Compare_Mode_Config 2CB4              GPIO_Pin_Toggle_Logic@_pin_config 001E  
          i2GPIO_Pin_Toggle_Logic@_pin_config 0001                             ??_HAL_Timer0_Init 0060  
                             ___fldiv@new_exp 007B                         __end_of_CCP_PWM_Start 4B40  
                     ?_EUSART_Async_Read_Data 0060          Bluetooth_Send_Data_Non_Blocking@data 000E  
                       _CCP_PWM_Set_Duty$5750 015E                              __end_of_CCP_Init 3728  
                        __end_of_Get_Distance 3424                                  ___param_bank 000000  
                                fp__usart_isr 0000                                  _stepper_base 003E  
                            __end_of_INT1_ISR 4FBC                    __end_ofi2_calc_parity_even 49B2  
                                       l10000 2048                                         l10010 20C0  
                                       l10002 2072                                         l10020 20F6  
                                       l10012 20DC                                         l10004 2076  
                                       l10100 2946                                         l10014 20E0  
                                       l10006 2090                                         l10110 299E  
                                       l10102 2964                                         l10030 343C  
                                       l10120 31EC                                         l10016 20EE  
                                       l10008 20A6                                         l10112 29AC  
                                       l10104 2966                                         l10040 348C  
                                       l10122 31FE                                         l10018 20F4  
                                       l10114 29AE                                         l10106 296A  
                                       l10050 34B6                                         l10042 3490  
                                       l10034 3450                                         l10210 45BE  
                                       l10132 32E8                                         l10124 321E  
                                       l10108 298E                                         l10060 34DE  
                                       l10052 34C0                                         l10044 349E  
                                       l10036 347A                                         l10028 3424  
                                       l11020 3728                                         l10212 45C6  
                                       l10204 457E                                         l10300 2F94  
                                       l10220 3DBA                                         l11100 4462  
                                       l10126 3226                                         l10134 3312  
                                       l10118 31E8                                         l10062 34EA  
                                       l10054 34CA                                         l10038 347C  
                                       l11110 4EDA                                         l10142 4CC2  
                                       l11030 37C2                                         l11022 3728  
                                       l10230 4C52                                         l10214 45E4  
                                       l10206 459A                                         l10302 2FA0  
                                       l10310 3006                                         l10222 3DBE  
                                       l11102 446E                                         l10400 487C  
                                       l10128 328A                                         l10080 2888  
                                       l10072 280C                                         l10064 34FA  
                                       l11112 4EEC                                         l10144 4CC2  
                                       l10160 47CE                                         l11032 37E4  
                                       l11024 373C                                         l10232 4C5A  
                                       l10208 45A2                                         l10320 3046  
                                       l10304 2FAC                                         l10224 3DD8  
                                       l10216 3DA6                                         l10240 30AA  
                                       l11104 447A                                         l11120 4BAE  
                                       l10410 48B8                                         l10090 28E2  
                                       l10074 281E                                         l11130 4DB8  
                                       l10066 350A                                         l10146 4CD4  
                                       l10170 4C8A                                         l10162 47F4  
                                       l10154 47AA                                         l11034 37E8  
                                       l11026 3740                                         l10234 4C86  
                                       l10226 4C40                                         l10314 3022  
                                       l10306 2FB8                                         l10218 3DA6  
                                       l10250 3108                                         l10242 30BE  
                                       l11122 4BC0                                         l11210 49B2  
                                       l10420 48DE                                         l10412 48C8  
                                       l10092 28E4                                         l10084 289C  
                                       l10076 282C                                         l11132 4DC8  
                                       l10500 15D6                                         l10068 351A  
                                       l11108 4EDA                                         l10148 4CF8  
                                       l10172 4C9C                                         l10164 4804  
                                       l10156 47AA                                         l11028 374A  
                                       l11300 3ACE                                         l10180 2E20  
                                       l10228 4C40                                         l11044 44AA  
                                       l10316 302E                                         l10324 3052  
                                       l12100 2FE0                                         l10308 2FC0  
                                       l10260 315A                                         l10252 3122  
                                       l10244 30C4                                         l11124 4BC4  
                                       l11116 4B9A                                         l10414 48CA  
                                       l10406 4888                                         l10430 4820  
                                       l11070 3E8E                                         l11062 3E5E  
                                       l10094 28F0                                         l10086 28A4  
                                       l10078 2872                                         l11134 4DD2  
                                       l10510 1602                                         l10502 15E6  
                                       l10174 4CC0                                         l10158 47BC  
                                       l11310 3B40                                         l11302 3AEC  
                                       l10190 2EC2                                         l10182 2E24  
                                       l11038 4492                                         l12102 3072  
                                       l10318 303A                                         l10326 3098  
                                       l10350 2B6A                                         l10270 31A6  
                                       l10254 3128                                         l10262 3166  
                                       l10246 30DE                                         l10238 30AA  
                                       l11126 4BE2                                         l11118 4B9A  
                                       l11054 4524                                         l11230 4A18  
                                       l10416 48D8                                         l10408 48B4  
                                       l10440 4870                                         l10432 484C  
                                       l10424 4814                                         l11400 2CD0  
                                       l11080 3EF8                                         l11072 3EA8  
                                       l11064 3E66                                         l10096 292C  
                                       l10088 28B0                                         l10600 1956  
                                       l10520 1658                                         l10512 1612  
                                       l10504 15EC                                         l10168 4C8A  
                                       l10280 4A7E                                         l11320 3B70  
                                       l11312 3B52                                         l11304 3B0A  
                                       l12104 2F4C                                         l10184 2E36  
                                       l10328 30A4                                         l10360 2BA6  
                                       l10352 2B76                                         l10344 2B48  
                                       l10272 31A8                                         l10264 316A  
                                       l10256 3142                                         l10248 30EE  
                                       l11056 4534                                         l11048 450E  
                                       l11224 49E8                                         l11216 49CA  
                                       l10434 4850                                         l11410 2D20  
                                       l11402 2CE4                                         l11074 3EB0  
                                       l11066 3E78                                         l10098 2938  
                                       l10602 1972                                         l10610 1998  
                                       l10530 1692                                         l10522 1668  
                                       l10514 1622                                         l10506 15F2  
                                       l10290 4AD6                                         l10282 4A82  
                                       l11250 3C26                                         l11330 3BF4  
                                       l11322 3B8E                                         l11306 3B28  
                                       l10450 41BA                                         l12106 1CFA  
                                       l10194 2F20                                         l10186 2E56  
                                       l10370 2C24                                         l10354 2B82  
                                       l10362 2BAE                                         l10346 2B4E  
                                       l10274 31C2                                         l10266 3186  
                                       l10258 314A                                         l11090 4414  
                                       l11058 4550                                         l11226 49F4  
                                       l11218 49DE                                         l10444 4876  
                                       l10436 4860                                         l10620 240A  
                                       l12108 32FC                                         l11420 2D54  
                                       l11412 2D22                                         l11076 3EDA  
                                       l11068 3E8A                                         l11340 406E  
                                       l10612 199C                                         l10604 1982  
                                       l10540 16E4                                         l10532 16A8  
                                       l10516 1632                                         l10508 1600  
                                       l10284 4A8E                                         l11260 3C8A  
                                       l11252 3C2C                                         l11332 3C00  
                                       l11324 3BAC                                         l11316 3B66  
                                       l11308 3B34                                         l10460 420E  
                                       l10452 41CC                                         l10188 2E5E  
                                       l10196 2F62                                         l10292 2F66  
                                       l10372 2C30                                         l10380 2C54  
                                       l10356 2B8E                                         l10364 2BFC  
                                       l10700 362E                                         l10276 31C8  
                                       l10268 318C                                         l11092 4422  
                                       l11244 4A4E                                         l11236 4A30  
                                       l11228 49FA                                         l10438 4862  
                                       l10630 247C                                         l10622 241C  
                                       l11430 2DA8                                         l11422 2D72  
                                       l11414 2D34                                         l11406 2CFA  
                                       l11078 3EF4                                         l11342 4082  
                                       l11350 40CA                                         l10606 1990  
                                       l10550 172A                                         l10542 16F2  
                                       l10534 16B4                                         l10526 167C  
                                       l10518 1638                                         l10286 4AA6  
                                       l11262 3CA8                                         l11254 3C30  
                                       l11334 3C12                                         l11326 3BCA  
                                       l11318 3B6C                                         l10462 4210  
                                       l10454 41D6                                         l10470 4254  
                                       l10294 2F6C                                         l10374 2C3C  
                                       l10358 2B9A                                         l10382 2CA2  
                                       l10710 367E                                         l10702 3642  
                                       l10278 31E2                                         l11094 4430  
                                       l11086 4406                                         l11246 4A5A  
                                       l11238 4A44                                         l10640 24CC  
                                       l10632 249C                                         l10624 242E  
                                       l10616 23EE                                         l11440 2E0C  
                                       l11432 2DAA                                         l11416 2D38  
                                       l11424 2D78                                         l11408 2D0E  
                                       l10480 4E2E                                         l11360 40EE  
                                       l11352 40CE                                         l11344 4094  
                                       l10608 1992                                         l10560 1798  
                                       l10552 1744                                         l10544 16FE  
                                       l10536 16CC                                         l10528 1688  
                                       l10288 4ABE                                         l11280 3D2C  
                                       l11272 3CE6                                         l11264 3CB4  
                                       l11256 3C4E                                         l11328 3BE8  
                                       l10464 422A                                         l10456 41E6  
                                       l10448 41B6                                         l10800 4276  
                                       l10384 2CAE                                         l10376 2C48  
                                       l10368 2C18                                         l10720 36DA  
                                       l10712 3682                                         l10704 3646  
                                       l11096 443E                                         l11088 4406  
                                       l11248 4A60                                         l10650 2528  
                                       l10634 24B0                                         l10642 24E0  
                                       l10626 2448                                         l10618 23F8  
                                       l11442 2E1C                                         l11434 2DC8  
                                       l11426 2D8A                                         l11418 2D52  
                                       l10482 4E32                                         l10474 4E10  
                                       l11370 3324                                         l11362 40FA  
                                       l11354 40D2                                         l11346 40A6  
                                       l11338 406E                                         l10570 182E  
                                       l10562 17C2                                         l10554 1754  
                                       l10546 170E                                         l10538 16D8  
                                       l10490 159E                                         l11290 3D92  
                                       l11282 3D4A                                         l11274 3CEC  
                                       l11266 3CC0                                         l11258 3C6C  
                                       l10466 4232                                         l10458 41FA  
                                       l10810 42C0                                         l10802 428C  
                                       l10298 2F88                                         l10722 36F8  
                                       l10714 369E                                         l10706 365E  
                                       l11098 4450                                         l10660 25A0  
                                       l10652 2530                                         l10644 2500  
                                       l10636 24BC                                         l10628 2462  
                                       l10900 473C                                         l11428 2D8E  
                                       l11436 2DE0                                         l10476 4E14  
                                       l11380 3378                                         l11372 3336  
                                       l11364 4106                                         l11356 40D6  
                                       l11348 40B8                                         l10580 186E  
                                       l10572 183C                                         l10564 17F8  
                                       l10556 1770                                         l10548 171A  
                                       l10492 15A0                                         l10740 2AB6  
                                       l10732 29C0                                         l11284 3D68  
                                       l11276 3CF0                                         l11268 3CD2  
                                       l10468 424C                                         l10820 3F12  
                                       l10804 428E                                         l10812 42C8  
                                       l10724 3708                                         l10716 36AE  
                                       l10708 3666                                         l10662 25AC  
                                       l10654 254C                                         l10646 2514  
                                       l10638 24C4                                         l10910 4796  
                                       l10902 4750                                         l11438 2DF2  
                                       l10478 4E26                                         l11382 3390  
                                       l11374 333C                                         l11358 40E2  
                                       l10590 18E0                                         l10582 189C  
                                       l10574 184E                                         l10566 1806  
                                       l10558 177C                                         l10494 15B0  
                                       l10486 1582                                         l10742 2ACE  
                                       l10734 29CA                                         l11286 3D74  
                                       l11278 3D0E                                         l11294 3AA6  
                                       l10830 3F4C                                         l10822 3F16  
                                       l10814 42DE                                         l10806 42A4  
                                       l10726 371A                                         l10718 36CA  
                                       l11390 4BF0                                         l12094 2324  
                                       l10664 25B4                                         l10648 2520  
                                       l10656 256C                                         l10672 25DC  
                                       l10904 4762                                         l11384 33A8  
                                       l11376 3350                                         l11368 3316  
                                       l10912 4E8C                                         l10592 190A  
                                       l10576 185C                                         l10568 1824  
                                       l10496 15C0                                         l10488 1590  
                                       l10744 2B00                                         l10736 29DC  
                                       l11288 3D80                                         l11296 3AAC  
                                       l10832 3F5A                                         l10840 3F9C  
                                       l10824 3F28                                         l10808 42AA  
                                       l10816 42E4                                         l10760 19E6  
                                       l10752 19AE                                         l12096 2BCE  
                                       l10728 3726                                         l10680 4EC8  
                                       l11392 4C30                                         l11800 2188  
                                       l10674 25EA                                         l10666 25BC  
                                       l10658 258C                                         l10906 4774  
                                       l11394 2CB4                                         l11386 33BC  
                                       l11378 3360                                         l10914 4E8C  
                                       l10586 18C6                                         l10594 190E  
                                       l10578 1860                                         l10498 15D0  
                                       l10746 2B18                                         l10738 29E0  
                                       l10922 4E64                                         l11298 3AB0  
                                       l10842 3FB6                                         l10834 3F74  
                                       l10826 3F30                                         l10770 1BB6  
                                       l10762 1A3E                                         l10754 19B4  
                                       l12098 2C74                                         l10682 4ECC  
                                       l10690 39EC                                         l10850 352C  
                                       l11810 21C2                                         l11802 21A8  
                                       l10908 4788                                         l11396 2CBA  
                                       l10940 4004                                         l10932 3FC0  
                                       l10916 4E9E                                         l10596 1928  
                                       l10588 18D2                                         l10748 2B46  
                                       l10924 4E64                                         l10836 3F7A  
                                       l10828 3F4A                                         l10844 3FBC  
                                       l10772 1C1A                                         l10764 1AA2  
                                       l10780 1CDA                                         l10756 19C6  
                                       l10676 4EB4                                         l10692 39FE  
                                       l10860 3592                                         l10852 353E  
                                       l11820 21FA                                         l11812 21C4  
                                       l11804 21AA                                         l11398 2CBC  
                                       l10942 4008                                         l10934 3FC0  
                                       l10918 4EA2                                         l10598 193C  
                                       l10926 4E76                                         l10838 3F94  
                                       l10774 1C72                                         l10766 1AFA  
                                       l10782 1D20                                         l10758 19CE  
                                       l10678 4EB4                                         l10694 3A02  
                                       l10686 39D8                                         l10870 35E0  
                                       l10862 35AC                                         l10854 3544  
                                       l11830 2224                                         l11822 220A  
                                       l11814 21D4                                         l11806 21BA  
                                       l10936 3FD2                                         l10928 4E7A  
                                       l10776 1CD2                                         l10768 1B5E  
                                       l10784 1D62                                         l10880 4B40  
                                       l10688 39D8                                         l10872 35F6  
                                       l10864 35AE                                         l10856 3574  
                                       l10848 352C                                         l11832 2228  
                                       l11816 21D8                                         l10938 3FE4  
                                       l10794 4258                                         l10890 4B6A  
                                       l10882 4B40                                         l10698 362E  
                                       l10874 3616                                         l10866 35C8  
                                       l10858 358C                                         l11850 2298  
                                       l11842 2262                                         l11834 2248  
                                       l11826 2212                                         l11818 21F8  
                                       l10796 425C                                         l10892 4B80  
                                       l10884 4B54                                         l10876 362A  
                                       l10868 35DE                                         l11860 22E4  
                                       l11852 229A                                         l11844 2264  
                                       l11836 224A                                         l11828 2214  
                                       l11780 2126                                         l10798 426E  
                                       l10894 4B96                                         l10886 4B5A  
                                       l11862 2306                                         l11854 22AA  
                                       l11846 2274                                         l11838 225A  
                                       l11790 214E                                         l11782 212E  
                                       l11774 2102                                         l10888 4B68  
                                       l11848 2278                                         l11792 2160  
                                       l11784 2136                                         l11776 2116  
                                       l10898 473C                                         l11858 22B2  
                                       l11794 2172                                         l11786 213E  
                                       l11778 211E                                         l11866 230E  
                                       l11796 2174                                         l11788 2146  
                                       l11798 2184                                 ___fltol@sign1 0022  
                             __end_of___fladd 1582                                         ?_main 0001  
                      Servo_SetAngle@servo_no 015D                               __end_of___fldiv 2102  
                             __end_of___flmul 19AE                               __end_of___fltol 352C  
                                       u10000 12F4                                         u10001 12F0  
                                       u10010 1334                                         u10011 1330  
                                       u10100 1466                                         u10020 137C  
                                       u10101 1462                                         u10021 1378  
                                       u10110 147E                                         u10030 13B6  
                                       u10111 147A                                         u10031 13B2  
                                       u11000 48C8                                         u10200 1D82  
                                       u10120 1494                                         u10040 13C8  
                                       u11001 48C4                                         u10201 1D7E  
                                       u10121 1490                                         u10041 13C4  
                                       u11010 48D8                                         u10210 1D94  
                                       u10130 14B0                                         u10050 13F8  
                                       u11011 48D4                                         u10211 1D90  
                                       u10131 14AC                                         u10051 13F4  
                                       u10300 1F4C                                         u10220 1DA4  
                                       u11100 159E                                         u10140 14EC  
                                       u10060 140C                                         u10301 1F48  
                                       u10221 1DA0                                         u11101 159A  
                                       u10141 14E8                                         u10061 1408  
                                       u11030 484C                                         u10310 1F70  
                                       u10230 1DE8                                         u11110 15B0  
                                       u10150 1500                                         u10070 1428  
                                       u11031 4848                                         u10311 1F6C  
                                       u10231 1DE4                                         u11111 15AC  
                                       u10151 14FC                                         u10071 1424  
                                       u11040 4860                                         u11024 4832  
                                       u10400 2090                                         u10320 1F86  
                                       u10240 1DFA                                         u11200 185C  
                                       u11120 15C0                                         u10160 1510  
                                       u10080 143A                                         u12000 4BAE  
                                       u11041 485C                                         u11025 482E  
                                       u10401 208C                                         u10321 1F82  
                                       u10241 1DF6                                         u11201 1858  
                                       u11121 15BC                                         u10161 150C  
                                       u10081 1436                                         u12001 4BAA  
                                       u11050 4870                                         u10410 20C0  
                                       u10330 1FA4                                         u10250 1E0A  
                                       u11210 186E                                         u11130 1600  
                                       u10170 1534                                         u10090 144E  
                                       u12010 4BC0                                         u11051 486C  
                                       u10411 20BC                                         u10331 1FA0  
                                       u10251 1E06                                         u11211 186A  
                                       u11131 15FC                                         u10171 1530  
                                       u10091 144A                                         u12011 4BBC  
                                       u11300 241C                                         u10420 20EE  
                                       u10340 1FC4                                         u10260 1E4A  
                                       u10500 281E                                         u11220 189C  
                                       u11140 1612                                         u10180 1546  
                                       u11060 41CC                                         u11301 2418  
                                       u10421 20EA                                         u10341 1FC0  
                                       u10261 1E46                                         u10501 281A  
                                       u11221 1898                                         u11141 160E  
                                       u10181 1542                                         u11061 41C8  
                                       u11310 242E                                         u10350 1FD6  
                                       u10270 1E8A                                         u10510 282C  
                                       u11230 18B2                                         u11150 1622  
                                       u10430 343C                                         u10190 156C  
                                       u11070 422A                                         u12110 49C6  
                                       u11311 242A                                         u10351 1FD2  
                                       u10271 1E86                                         u10511 2828  
                                       u11231 18AE                                         u11151 161E  
                                       u10431 3438                                         u10191 1568  
                                       u11071 4226                                         u12111 49C2  
                 ??_MSSP_I2C_Master_Send_Stop 0020                                         u11400 25A0  
                                       u11320 2448                                         u10600 31FE  
                                       u10360 2004                                         u10280 1F00  
                                       u10520 2888                                         u12200 3336  
                                       u11240 18C6                                         u11160 1658  
                                       u10440 3470                                         u11080 424C  
                                       u12120 4A16                                         u11401 259C  
                                       u11321 2444                                         u10601 31FA  
                                       u10361 2000                                         u10281 1EFC  
                                       u10521 2884                                         u12201 3332  
                                       u11241 18C2                                         u11161 1654  
                                       u11081 4248                                         u12121 4A12  
                                       u11410 25D8                                         u11330 247C  
                                       u10610 321E                                         u11090 4E26  
                                       u10370 201A                                         u10290 1F22  
                                       u10530 28DE                                         u12210 338A  
                                       u11250 18E0                                         u11170 1668  
                                       u10450 349E                                         u12130 4A2C  
                                       u11411 25D4                                         u11331 2478  
                                       u10611 321A                                         u11091 4E22  
                                       u10371 2016                                         u10291 1F1E  
                                       u10531 28DA                                         u12211 3386  
                                       u11251 18DC                                         u11171 1664  
                                       u10451 349A                                         u12131 4A28  
                                       u11420 25EA                                         u11340 249C  
                                       u12300 2DF2                                         u10380 202E  
                                       u10540 2928                                         u12220 33BA  
                                       u11260 1928                                         u11180 17E2  
                                       u10460 34B2                                         u10700 47F4  
                                       u11500 369E                                         u12140 4A7C  
                                       u11421 25E6                                         u11341 2498  
                                       u12301 2DEE                                         u10381 202A  
                                       u10541 2924                                         u12221 33B6  
                                       u11261 1924                                         u10461 34AE  
                                       u10445 3466                                         u10701 47F0  
                                       u11501 369A                                         u12141 4A78  
                                       u11430 25F8                                         u11350 24B0  
                                       u12230 2CF6                                         u10390 2048  
                                       u10550 2946                                         u12150 4082  
                                       u11270 1956                                         u11190 183C  
                                       u10470 34DA                                         u10710 4C9C  
                                       u11510 36CA                                         u11431 25F4  
                                       u11351 24AC                                         u12231 2CF2  
                                       u10391 2044                                         u10551 2942  
                                       u12151 407E                                         u11271 1952  
                                       u11191 1838                                         u10471 34D6  
                                       u10711 4C98                                         u11511 36C6  
                                       u11360 2500                                         u10624 3242  
                                       u12240 2D20                                         u10560 2956  
                                       u12160 4094                                         u11280 1990  
                                       u10480 34FA                                         u10640 4CD4  
                                       u10720 4CB0                                         u11600 42C0  
                                       u10800 459A                                         u11520 36F8  
                                       u11440 4EC8                                         u11361 24FC  
                                       u10625 323E                                         u12241 2D1C  
                                       u10561 2952                                         u12161 4090  
                                       u11281 198C                                         u11185 17D8  
                                       u10481 34F6                                         u10641 4CD0  
                                       u10721 4CAC                                         u11601 42BC  
                                       u10801 4596                                         u11521 36F4  
                                       u11441 4EC4                                         u11370 2514  
                                       u11290 240A                                         u10634 32A6  
                                       u12250 2D34                                         u10570 2964  
                                       u12170 40A6                                         u10490 350A  
                                       u11530 29DC                                         u10650 4CE8  
                                       u10730 4CC0                                         u11610 42DE  
                                       u10810 45BE                                         u11450 39EC  
                                       u11371 2510                                         u11291 2406  
                                       u10635 32A2                                         u12251 2D30  
                                       u10571 2960                                         u12171 40A2  
                                       u10491 3506                                         u11531 29D8  
                                       u10651 4CE4                                         u10731 4CBC  
                                       u11611 42DA                                         u10811 45BA  
                                       u11451 39E8                                         u11380 254C  
                                       u12260 2D72                                         u10580 299E  
                                       u12180 40B8                                         u11540 2ACE  
                                       u10660 4CF8                                         u11620 3F28  
                                       u10740 2E36                                         u10820 45E4  
                                       u10900 3186                                         u11460 39FE  
                                       u11700 35AC                                         u11381 2548  
                                       u12261 2D6E                                         u10581 299A  
                                       u12181 40B4                                         u11541 2ACA  
                                       u10661 4CF4                                         u11621 3F24  
                                       u10741 2E32                                         u10821 45E0  
                                       u10901 3182                                         u11461 39FA  
                                       u11701 35A8                                         u11390 258C  
                                       u12270 2D8A                                         u10590 29AC  
                                       u12190 40CA                                         u11550 2B18  
                                       u10670 47BC                                         u11630 3F4A  
                                       u10750 2E56                                         u11470 3642  
                                       u10830 3DBA                                         u10910 31A6  
                                       u11710 35C8                                         u11391 2588  
                                       u12271 2D86                                         u10591 29A8  
                                       u12191 40C6                                         u11551 2B14  
                                       u10671 47B8                                         u11631 3F46  
                                       u10751 2E52                                         u11471 363E  
                                       u10831 3DB6                                         u10911 31A2  
                                       u11711 35C4                                         u12280 2DC8  
                                       u11800 4E9E                                         u10680 47CE  
                                       u11640 3F74                                         u11560 19C6  
                                       u10840 4C52                                         u11480 365E  
                                       u10920 31C2                                         u12600 21BA  
                                       u12281 2DC4                                         u11801 4E9A  
                                       u10681 47CA                                         u11641 3F70  
                                       u11561 19C2                                         u10841 4C4E  
                                       u11481 365A                                         u10921 31BE  
                                       u12601 21B6                                         u12290 2DE0  
                                       u10690 47E4                                         u11810 4E76  
                                       u11650 3F94                                         u11570 426E  
                                       u11490 367E                                         u10930 31E2  
                                       u10850 30BE                                         u12610 21D4  
                                       u12291 2DDC                                         u10691 47E0  
                                       u11811 4E72                                         u11651 3F90  
                                       u11571 426A                                         u11491 367A  
                                       u10931 31DE                                         u10851 30BA  
                                       u12611 21D0                                         u11820 3FD2  
                                       u11660 3FB6                                         u11580 428C  
                                       u11740 4B54                                         u10780 2F38  
                                       u10764 2E7A                                         u10940 2F84  
                                       u10860 30DE                                         u12620 220A  
                                       u11821 3FCE                                         u11661 3FB2  
                                       u11581 4288                                         u11741 4B50  
                                       u10781 2F32                                         u10765 2E76  
                                       u10941 2F80                                         u10861 30DA  
                                       u11725 35DC                                         u12621 2206  
                                       u11750 4750                                         u11830 3FE4  
                                       u11590 42A4                                         u10790 2F3A  
                                       u10774 2EDE                                         u10950 301E  
                                       u10870 3108                                         u11670 353E  
                                       u12630 2224                                         u11751 474C  
                                       u11831 3FE0                                         u11591 42A0  
                                       u10775 2EDA                                         u10951 301A  
                                       u10871 3104                                         u11735 35F4  
                                       u11727 35DE                                         u11671 353A  
                                       u12631 2220                                         u11760 4762  
                                       u11840 4004                                         u10960 2B66  
                                       u10880 3122                                         u12640 225A  
                                       u11761 475E                                         u11841 4000  
                                       u10961 2B62                                         u10881 311E  
                                       u11737 35F6                                         u12641 2256  
                                       u11770 4774                                         u11930 373C  
                                       u10970 2C14                                         u10890 3142  
                                       u11690 3574                                         u12650 2274  
                                       u11771 4770                                         u12707 4F3A  
                                       u11931 3738                                         u10971 2C10  
                                       u10891 313E                                         u11691 3570  
                                       u12651 2270                                         u11780 4796  
                                       u11940 44A6                                         u12660 22AA  
                                       u11781 4792                                         u12717 4308  
                        __end_of_Get_Temp_HUM 4114                                         u11941 44A2  
                                       u11685 3558                                         u12661 22A6  
                                       u10990 48B4                                         u11790 47A4  
                                       u11854 4056                                         u11950 4520  
                                       u12590 2184                                         u10991 48B0  
                                       u11791 47A0                                         u11855 4052  
                                       u12727 4DCA                                         u11687 355A  
                                       u11951 451C                                         u12591 2180  
                                       u10984 489A                                         u11960 3E78  
                                       u10985 4896                                         u12737 2DFE  
                                       u11961 3E74                                         u11970 3E8A  
                                       u11971 3E86                                         u11980 3EA8  
                                       u11981 3EA4                                         u12677 4540  
                                       u11990 3EF4                                         u11991 3EF0  
                                       u12687 456C                                         u12697 4F2E  
                      _ECU_DC_Motor_Run_Right 4E64                                         i1l477 4FC2  
                                       i2l706 27E6                                         i2l727 2802  
                                       i2l728 2806                                         i2l833 4986  
                                       i2l921 46CC                                         i2l826 491E  
                                       i2l690 39D6                                         i2l842 4E0E  
                                       i2l835 49B0                                         i2l828 4948  
                                       i2l693 262E                                         i2l686 39D2  
                                       i2l838 4FC6                                         _RCREG 000FAE  
                                       _TMR0H 000FD7                                         _TMR1H 000FCF  
                                       _TMR0L 000FD6                                         _TMR1L 000FCE  
                       Get_Distance@timer_val 0089                                         _SPBRG 000FAF  
                                       _PORTA 000F80                                         _PORTB 000F81  
                                       _PORTC 000F82                                         _PORTD 000F83  
                                       _PORTE 000F84                                 _EUSART_Rx_ISR 4DE4  
                                       _TRISA 000F92                                         _TRISB 000F93  
                                       _TRISC 000F94                                         _TRISD 000F95  
                                       _TRISE 000F96                                 _EUSART_Tx_ISR 4FC6  
                                       _TXREG 000FAD                              __end_of_TMR0_ISR 4FC6  
     async_config_baud_rate_gen@Baudrate_temp 015E                                GPS_Service@key 0072  
                                       _flags 003D                                    _T_Integral 0034  
                  ?_Robot_Steer_Right_Forward 0001                                         pclath 000FFA  
                                       pclatu 000FFB                                  ?_GPS_Service 0001  
                                       tablat 000FF5               CCP_Capture_Mode_Config@_ccp_obj 0021  
                 HAL_Timer0_Init@_tmr0_config 0023                          PCA_Write_Reg@i2c_obj 0060  
                                       ttemp5 0043                                         ttemp6 0046  
                                       ttemp7 004A                                         status 000FD8  
                                       wtemp8 0043                __end_of_EUSART_Async_Read_Data 25FE  
                    Get_Distance@_tmr0_config 0085                       HAL_Timer0_Write_Val@val 0020  
            ServoDriver_Init@servo_driver_obj 015F                             ??_DHT11_Read_Data 0020  
       async_config_baud_rate_gen@_eusart_obj 0159                   _I2C_DefaultInterruptHandler 00F1  
                             __initialization 4378        MSSP_I2C_Master_Write_Blocking@i2c_data 0020  
                         _Rx_config_interrupt 41B6                                  __end_of_main 23EE  
                  _eusart_Rx_InterruptHandler 0029                         CCP_PWM_Start@_ccp_obj 001E  
               __end_of_GPIO_Pin_Toggle_Logic 465E                                     ??_ADC_ISR 001A  
                            _servo_driver_obj 00CD                         _CCP_Mode_Timer_Select 457E  
                               _lat_registers 00B2                              _Ultra_Sonic_Init 4B9A  
                                      ??_main 0168                     Servo_SetAngle@reg_addrees 0161  
                               __activetblptr 000003                                ?_EUSART_Rx_ISR 0001  
                         DHT11_Read_Data@data 001E                                ?_EUSART_Tx_ISR 0001  
                                   ??_RB4_ISR 001A                       ?_I2C_Pin_Configurations 0001  
                                   ??_RB5_ISR 001A                                     ??_RB6_ISR 001A  
                                   ??_RB7_ISR 001A                         Get_Temp_HUM@T_Decimal 0064  
              GPIO_Pin_Read_Logic@_pin_config 001E                         RB5_ISR@Handler_Select 001A  
                        ?_Rx_config_interrupt 001E                  Ultra_Sonic_Init@_tmr0_config 0068  
                                      _ADRESH 000FC4                                        _ADRESL 000FC3  
                                      _CCPR1L 000FBE                                        _CCPR2L 000FBB  
                    __end_of_Ecu_Stepper_Init 450E                  ??_MSSP_I2C_Master_Send_Start 0020  
                    __end_of_Ecu_Stepper_Step 457E                                        i1l1170 0106  
                                      i1l1251 4FBA                                        i1l1180 0246  
                                      i1l1172 0146                                        i1l1164 0046  
                                      i1l1182 0266                                        i1l1174 0186  
                                      i1l1166 0086                                        i1l1264 4FA8  
                                      i1l1176 01C6                                        i1l1168 00C6  
                                      i1l1273 4F8E                                        i1l1185 0276  
                                      i1l1282 4F74                                        i1l1178 0206  
                                      i1l1291 4F5A                                        i2l1151 3898  
                                      i2l1143 3848                                        i2l1153 38B8  
                                      i2l1145 3858                                        i2l1155 38C8  
                                      i2l1147 3868                                        i2l1149 3878  
                                      i2l1158 38D8                                        i1l4556 4FB8  
                                      i2l1541 4FC4                                        i1l8310 4F92  
                                      i1l8312 4F94                                        i1l8320 4F78  
                                      i1l9200 0122                                        i1l8322 4F7A  
                                      i1l8330 4F5E                                        i1l9210 0162  
                                      i1l9202 0130                                        i2l1940 4D5C  
                                      i1l8316 4FA8                                        i1l8332 4F60  
                                      i1l8340 4F44                                        i1l9220 01A2  
                                      i1l9212 0170                                        i1l9204 013E  
                                      i1l8326 4F8E                                        i1l8342 4F46  
                                      i1l9230 01E2                                        i1l9222 01B0  
                                      i1l9214 017E                                        i1l9206 0140  
                                      i1l8336 4F74                                        i1l9240 0222  
                                      i1l9232 01F0                                        i1l9224 01BE  
                                      i1l9216 0180                                        i1l9208 0154  
                                      i1l8346 4F5A                                        i1l9250 0262  
                                      i1l9242 0230                                        i1l9234 01FE  
                                      i1l9226 01C0                                        i1l9218 0194  
                                      i1l9170 0062                                        i1l9162 0026  
                                      i2l7100 38F4                                        i1l9252 0274  
                                      i1l9244 023E                                        i1l9236 0200  
                                      i1l9228 01D4                                        i1l9180 00A2  
                                      i1l9172 0070                                        i1l9164 0034  
                                      i2l7110 3962                                        i2l7102 3906  
                                      i1l9246 0240                                        i1l9238 0214  
                                      i1l9190 00E2                                        i1l9182 00B0  
                                      i1l9174 007E                                        i1l9166 0042  
                                      i2l7112 3982                                        i2l7104 390A  
                                      i1l9248 0254                                        i1l9192 00F0  
                                      i1l9184 00BE                                        i1l9176 0080  
                                      i1l9168 0054                                        i2l7050 48E4  
                                      i2l7114 399A                                        i2l7106 3924  
                                      i1l9194 00FE                                        i1l9186 00C0  
                                      i1l9178 0094                                        i2l7060 4920  
                                      i2l7116 39BA                                        i2l7108 3944  
                                      i1l9196 0100                                        i1l9188 00D4  
                                      i2l7070 4946                                        i2l7062 4930  
                                      i2l7118 39D2                                        i1l9198 0114  
                                      i2l7080 4958                                        i2l7064 4932  
                                      i2l7056 48F0                                        i2l7090 49A8  
                                      i2l7082 4984                                        i2l7074 494C  
                                      i2l7066 4940                                        i2l7058 491C  
                                      i2l7084 4988                                        i2l7094 49AE  
                                      i2l7086 4998                                        i2l7088 499A  
                                      i2l7520 4E3A                                        i2l7098 38F4  
                                      i2l7522 4E3A                                        i2l8170 4D50  
                                      i2l9130 3836                                        i2l7524 4E4C  
                                      i2l9132 3844                                        i2l7526 4E50  
                                      i2l9150 38A6                                        i2l9142 3876  
                                      i2l9134 3856                                        i2l8168 4D2C  
                                      i2l9152 38B4                                        i2l9128 3828  
                                      i2l9154 38C6                                        i2l9146 3886  
                                      i2l9138 3866                                        i2l7820 263C  
                                      i2l7812 25FE                                        i2l9148 3894  
                                      i2l7830 26BE                                        i2l7822 2656  
                                      i2l7814 2606                                        i2l9158 38D6  
                                      i2l7840 270E                                        i2l7832 26CA  
                                      i2l7824 2670                                        i2l7816 2618  
                                      i2l8296 4DE4                                        i2l7850 2758  
                                      i2l7842 2722                                        i2l7834 26D2  
                                      i2l7826 268A                                        i2l7818 262A  
                                      i2l8298 4DF6                                        i2l7860 27C0  
                                      i2l7844 272E                                        i2l7852 2778  
                                      i2l7836 26DA                                        i2l7828 26AA  
                                      i2l7870 27F4                                        i2l7862 27C8  
                                      i2l7854 2798                                        i2l7846 2736  
                                      i2l7838 26EE                                        i2l7856 27AC  
                                      i2l7848 273E                                        i2l7872 465E  
                                      i2l7858 27B8                                        i2l7874 465E  
                                      i2l7868 27E6                                        i2l7876 4670  
                                      i2l7878 4674             __end_of_Robot_Steer_Right_Forward 3B66  
                __end_of_DHT11_Check_Response 4DB8                                _Movement_State 00F7  
                                      _SPBRGH 000FB0                     _MSSP_I2C_Master_Send_Stop 4C8A  
                                      _SSPADD 000FC8                                        _SSPBUF 000FC9  
                           i2_calc_parity_odd 48E2                      calc_parity_odd@l_counter 0022  
                            __end_of___xxtofl 29C0                        _W1_W3_W5_Motor_Control 00D4  
                    ?i2_GPIO_Pin_Toggle_Logic 0001                   ?_Robot_Steer_Right_Backward 0001  
                       __end_of_MSSP_I2C_Init 31E8                            ?i2_calc_parity_odd 0001  
                               ??_Timer2_Init 0020                      i2_EUSART_Async_Read_Data 25FE  
__end_of_I2C_Master_Mode_Clock_Configurations 3E5E        ??_I2C_Master_Mode_Clock_Configurations 0024  
       ?_I2C_Master_Mode_Clock_Configurations 0159          _I2C_Master_Mode_Clock_Configurations 3DA6  
                          _Robot_Move_Forward 3C26                   __end_of_GPIO_Pin_Read_Logic 406E  
             ??_GPIO_Pin_Direction_Initialize 0060                 __end_of_ECU_DC_Motor_Run_Left 4EB4  
                                   ??___fladd 00A4                                     ??___fldiv 0072  
                    ?_stepper_move_one_deg_cw 0068                                     ??___flmul 008B  
                                   ??___fltol 0155                   __end_of_GPIO_Pin_Initialize 4C8A  
                         ??i2_calc_parity_odd 0001                                        clear_0 43DE  
                                      clear_1 43EA                                        clear_2 43F6  
                         ?_Robot_Move_Forward 0001                   ?_EUSART_Async_Transmit_Data 0006  
                                      _timer0 00F8                                        isa$std 000001  
              __end_of_I2C_Pin_Configurations 4FB8                stepper_move_one_deg_cw@stepper 0068  
                                __pdataCOMRAM 003A                                  __mediumconst 0000  
       EUSART_Async_Transmit_Data@_eusart_obj 0006                                        tblptrh 000FF7  
                       ??_Rx_config_interrupt 0020                                        tblptrl 000FF6  
                                      tblptru 000FF8                                     ?_CCP_Init 0066  
                      Get_Temp_HUM@RH_Decimal 0060                   CCP_PWM_Mode_Config@_ccp_obj 0021  
                   __end_ofi2_calc_parity_odd 494A                          ??_Robot_Move_Forward 0024  
                                ___xxtofl@arg 0066                                  ___xxtofl@exp 0065  
                                ___xxtofl@val 001E                                    __accesstop 0060  
                     __end_of__initialization 43FC      __end_of_Bluetooth_Send_Data_Non_Blocking 4E64  
          ??_Bluetooth_Send_Data_Non_Blocking 000F             ?_Bluetooth_Send_Data_Non_Blocking 000C  
            _Bluetooth_Send_Data_Non_Blocking 4E3A                                     ?_INT1_ISR 0001  
                            _CCP_PWM_Set_Duty 29C0                                 ___rparam_used 000001  
                    __end_of_calc_parity_even 48E2                                    ___fltol@f1 0151  
            ??_MSSP_I2C_Master_Write_Blocking 0023               ?_MSSP_I2C_Master_Write_Blocking 001E  
                CCP_Interrupt_Config@_ccp_obj 001E                    _I2C_Report_Write_Collision 00ED  
                           ??_calc_parity_odd 001E                                __pcstackCOMRAM 0001  
                           ??_async_Rx_config 0023            MSSP_I2C_Master_Write_Blocking@_ack 0021  
                                __pidataBANK0 4D5E                                  __pidataBANK1 4F00  
                                   ?_TMR0_ISR 0001         MSSP_I2C_Master_Write_Blocking@i2c_obj 001E  
                      ?_CCP_Mode_Timer_Select 001E                             ??_async_Tx_config 0020  
                   ?_Robot_Steer_Left_Forward 0001                           __end_of_Timer2_Init 473C  
                             ??_EUSART_Rx_ISR 0014    EUSART_Async_Read_Data_Blocking@_eusart_obj 006C  
                             ??_EUSART_Tx_ISR 0001                   ?_async_config_baud_rate_gen 0159  
                               _PCA_Write_Reg 4A7E                                  _Get_Distance 3316  
                   calc_parity_even@l_counter 0022                   __end_of_HAL_Timer0_Read_Val 3F12  
                             _HAL_Timer0_Init 352C                                    ??_CCP_Init 0068  
                              _Robot_Nav_Init 4406                         CCP_PWM_Set_Duty@_duty 015B  
             __end_ofi2_GPIO_Pin_Toggle_Logic 46CE                                    __pbssBANK0 00D5  
                                  __pbssBANK1 0100                         _INT0_InterruptHandler 00EB  
                                  ??_INT1_ISR 001A                 __end_of_application_intialize 4C40  
                                _Get_Temp_HUM 406E                      _eusart_frameerr_CallBack 00F3  
                                  _datarecive 0038                   __end_of_InterruptManagerLow 0286  
                        calc_parity_even@data 0020                                    ??_TMR0_ISR 0001  
                 CCP_PWM_Set_Duty@l_duty_temp 0162                       ?_ECU_DC_Motor_Run_Right 0022  
                                     _ADC_ISR 4FC2                              _Robot_Steer_Stop 4EDA  
       __end_of_GPIO_Pin_Direction_Initialize 2F66                 _GPIO_Pin_Direction_Initialize 2E20  
           Ultra_Sonic_Init@ultrasonic_object 0066                                ?_PCA_Write_Reg 0060  
               HAL_Timer0_Read_Val@l_low_byte 0023                          _DHT11_Check_Response 4D8C  
                                     _RB4_ISR 4F90                                       _RB5_ISR 4F76  
                                     _RB6_ISR 4F5C                        Get_Temp_HUM@T_Integral 0066  
                                     _RB7_ISR 4F42                                     ?___xxtofl 001E  
                   _RB6_InterruptHandler_HIGH 00DF                           _Robot_Move_Backward 3CE6  
                 __end_of_CCP_PWM_Mode_Config 41B6                    PCA_Write_Reg@slave_address 0062  
                      __end_of_Robot_Nav_Init 4492                               _DHT11_Read_Data 42E8  
          __end_of_MSSP_I2C_Master_Send_Start 4CFA                    _MSSP_I2C_Master_Send_Start 4CC2  
                          i2_calc_parity_even 494A                EUSART_Async_Transmit_Data@data 0008  
                 ??_Robot_Steer_Right_Forward 0024                                _tris_registers 00BC  
                    __end_of_Ultra_Sonic_Init 4BF0                                 ??_DHT11_Start 001E  
                           ??_send_trig_pulse 0024                      _RB6_InterruptHandler_LOW 00DD  
                         ?i2_calc_parity_even 0001                                       _i2c_obj 00C6  
                    _stepper_move_one_deg_ccw 4A18                                       __Hparam 0000  
                              _Servo_SetAngle 3728                          ?_Robot_Move_Backward 0001  
                  _eusart_overrunerr_CallBack 00F5                                   _Timer2_Init 46CE  
                                     __Lparam 0000                  __end_of_CCP_Interrupt_Config 4FBE  
             stepper_move_one_deg_ccw@stepper 0068                __end_of_ECU_DC_Motor_Run_Right 4E8C  
                                     ___fladd 1048                                       ___fldiv 1D66  
                   stepper_move_one_deg_ccw@i 006A                                       ___flmul 1582  
             CCP_Compare_Mode_Config@_ccp_obj 0021                                       ___fltol 3424  
                                __psmallconst 1000                  _Timer1_PreLoaded_Value_Store 0025  
                                     __pcinit 4378                                       __ramtop 1000  
                       ?_DHT11_Check_Response 0001                                       __ptext0 2102  
                                     __ptext1 49B2                                       __ptext2 4A18  
                                     __ptext3 450E                                       __ptext4 4BF0  
                                     __ptext5 4B9A                                       __ptext6 352C  
                                     __ptext7 4406                                       __ptext8 39D8  
                                     __ptext9 30AA                                     _T0CONbits 000FD5  
                        ??i2_calc_parity_even 0001                       __end_of_HAL_Timer0_Init 362E  
                                   _T1CONbits 000FCD                                       _counter 002D  
                                   _T2CONbits 000FCA                     ECU_DC_Motor_Init@dc_motor 0066  
                                  ??___xxtofl 0060                                     _T3CONbits 000FB1  
                                     _gpstemp 0039                       _CCP_Compare_Mode_Config 2B48  
                           _EUSART_Async_Init 4B40                               ?_Robot_Nav_Init 0001  
                    ?_CCP_Capture_Mode_Config 0021              MSSP_I2C_Master_Send_Stop@i2c_obj 001E  
                          ?_EUSART_Async_Init 0166                    ??i2_EUSART_Async_Read_Data 000A  
                              __pintcode_body 3810                          end_of_initialization 43FC  
                           ?_Ecu_Stepper_Init 0066                      GPIO_Pin_Read_Logic@logic 0020  
                            _ServoDriver_Init 39D8                             ?_Ecu_Stepper_Step 0022  
                    PCA_Write_Reg@reg_address 0063                calc_parity_even@number_of_ones 0021  
            i2calc_parity_even@number_of_ones 0004                                       int_func 3810  
                          ??_Ecu_Stepper_Init 0025                        __end_of_Servo_SetAngle 3810  
                          ??_Ecu_Stepper_Step 0066                           ??_EUSART_Async_Init 0024  
           async_config_baud_rate_gen@ret_val 015D                            Timer2_Init@_timer2 001E  
                       i2calc_parity_odd@data 0003                  i2EUSART_Async_Read_Data@data 0008  
                       ??_Robot_Move_Backward 0024                      CCP_PWM_Set_Duty@_ccp_obj 0159  
                                   _RCSTAbits 000FAB                           __end_of_DHT11_Start 4F42  
                                     postdec1 000FE5                                       postdec2 000FDD  
                                     postinc0 000FEE                                       postinc2 000FDE  
                             ??_PCA_Write_Reg 0023                     _Robot_Steer_Right_Forward 3AA6  
                           __end_of_usart_isr 4D5E                         _INT1_InterruptHandler 0027  
                                   _PORTBbits 000F81                         _GPIO_Pin_Toggle_Logic 45EE  
                                   _PORTDbits 000F83                      __end_of_CCP_PWM_Set_Duty 2B48  
                     __end_of_DHT11_Read_Data 4378                     __end_of_EUSART_Async_Init 4B9A  
                                 ___fladd@grs 0150                ?_GPIO_Pin_Direction_Initialize 001E  
                               ___xxtofl@sign 0064                         Servo_SetAngle@i2c_obj 0159  
                                   _TRISBbits 000F93                                     _TRISCbits 000F94  
                                   _TRISDbits 000F95                         RB4_ISR@Handler_Select 001A  
                       RB7_ISR@Handler_Select 001A                                   ___fldiv@grs 007D  
                                 ___fldiv@rem 0076                       Get_Temp_HUM@RH_Integral 0062  
                     Ecu_Stepper_Init@stepper 0066           EUSART_Async_Read_Data_Blocking@data 006E  
                             _calc_parity_odd 4812                               _async_Rx_config 3F12  
                                 ___flmul@grs 0091                             PCA_Write_Reg@data 0064  
                        Get_Distance@distance 0087              __end_of_Robot_Steer_Left_Forward 3C26  
                                 _CCP1CONbits 000FBD                               _async_Tx_config 4258  
                            CCP_Init@_ccp_obj 0066                               ?_Servo_SetAngle 0159  
                                 _CCP2CONbits 000FBA                                     _TXSTAbits 000FAC  
                  ?_Robot_Steer_Left_Backward 0001                             ?_calc_parity_even 0001  
                     ??_CCP_Mode_Timer_Select 0020                                    _ultrasonic 00D1  
                  CCP_Capture_Mode_Config@ret 0060                                 _CCP_PWM_Start 4AE4  
                  EUSART_Async_Read_Data@data 0062                            ??_calc_parity_even 001E  
                                   _T_Decimal 0035                        async_Rx_config@_rx_obj 0021  
                  CCP_Compare_Mode_Config@ret 0060                 convert_uint16_to_string@F3421 0109  
                       _ECU_DC_Motor_Run_Left 4E8C                        ??_DHT11_Check_Response 001E  
                                 _BAUDCONbits 000FB8                                 __pidataCOMRAM 4FAA  
                 __end_of_Rx_config_interrupt 4258              send_trig_pulse@ultrasonic_object 0022  
                   ??_CCP_Compare_Mode_Config 0023                        async_Rx_config@ret_val 0023  
                            ?_HAL_Timer0_Init 0023               __end_of_CCP_Capture_Mode_Config 30AA  
                    EUSART_Async_Init@ret_val 0024                           start_initialization 4378  
         i2EUSART_Async_Read_Data@_eusart_obj 0006             EUSART_Async_Read_Data@_eusart_obj 0060  
             GPIO_Pin_Write_Logic@_pin_config 001E                          _CCP_Interrupt_Config 4FBC  
                    ??_EUSART_Async_Read_Data 0023                          Get_Temp_HUM@Checksum 0068  
                    __end_of_Robot_Steer_Stop 4F00                                   _DHT11_Start 4F24  
           __end_of_Robot_Steer_Left_Backward 4FC2                                ?_CCP_PWM_Start 001E  
              GPIO_Pin_Initialize@_pin_config 0022                                   __pdataBANK0 00A8  
                                 __pdataBANK1 0129                                      ?_ADC_ISR 0001  
                      ?_GPIO_Pin_Toggle_Logic 001E                         __end_of_EUSART_Rx_ISR 4E10  
                                   ___fladd@a 00A0                                     ___fladd@b 009C  
                            ?_DHT11_Read_Data 001E                         __end_of_EUSART_Tx_ISR 4FC8  
                        MSSP_I2C_Init@i2c_obj 015B                                     ___fldiv@a 006E  
                                   ___fldiv@b 006A                                      ?_RB4_ISR 0001  
                                    ?_RB5_ISR 0001                                      ?_RB6_ISR 0001  
                                    ?_RB7_ISR 0001                                     ___flmul@a 0087  
                                   ___flmul@b 0083                                   __pbssCOMRAM 0025  
                     __end_of_calc_parity_odd 487A                       __end_of_async_Rx_config 3FC0  
                             _send_trig_pulse 4DB8                           Servo_SetAngle@angle 015E  
                               __pcstackBANK0 0060                                 __pcstackBANK1 014D  
               i2_EUSART_Async_Read_Data$2031 000C                 i2_EUSART_Async_Read_Data$2032 000E  
               i2_EUSART_Async_Read_Data$2033 0010                         ?_CCP_Interrupt_Config 001E  
                  ??_stepper_move_one_deg_ccw 0024                       __end_of_async_Tx_config 42E8  
                 ?_MSSP_I2C_Master_Send_Start 001E                              DHT11_Read_Data@i 0021  
                               ??_GPS_Service 0070                         _INT2_InterruptHandler 00E9  
                           ?_Ultra_Sonic_Init 0066                           calc_parity_odd@data 0020  
              HAL_Timer0_Read_Val@l_high_byte 0022                            ??_Ultra_Sonic_Init 0025  
                __end_of_InterruptManagerHigh 38F4                                  ?_Timer2_Init 001E  
                               _MSSP_I2C_Init 30AA                         _application_intialize 4BF0  
                    _Robot_Steer_Left_Forward 3B66                                     __pintcode 0008  
                    ??_I2C_Pin_Configurations 001E                        ?_ECU_DC_Motor_Run_Left 0022  
                __end_of_GPIO_Pin_Write_Logic 3316                                      ?___fladd 009C  
                                    ?___fldiv 006A                                     __uart_obj 0129  
                                    ?___flmul 0083               GPIO_Pin_Write_Logic@ERRORSTATUS 0021  
                                    ?___fltol 0151                  __end_of_HAL_Timer0_Write_Val 4E3A  
                  Rx_config_interrupt@_rx_obj 001E                       i2_GPIO_Pin_Toggle_Logic 465E  
                    __end_of_ServoDriver_Init 3AA6                                   __pintcodelo 0018  
               HAL_Timer0_Write_Val@ret_value 0022                              ??_Robot_Nav_Init 0025  
                                 __smallconst 1000                     _RB4_InterruptHandler_HIGH 00E7  
                           Get_Distance@logic 008B                    Rx_config_interrupt@ret_val 0020  
                                    _CCP1_Obj 0141                                      _CCP2_Obj 0135  
                     _stepper_move_one_deg_cw 49B2                       ServoDriver_Init@i2c_obj 015D  
                   _RB7_InterruptHandler_HIGH 00DB                 CCP_Mode_Timer_Select@_ccp_obj 001E  
                                    _CCP_Init 362E           i2EUSART_Async_Read_Data@l_temp_data 0012  
           EUSART_Async_Read_Data@l_temp_data 006A                        async_Tx_config@_tx_obj 001E  
              GPIO_Pin_Initialize@ERRORSTATUS 0024   __end_of_I2C_Slave_Mode_Clock_Configurations 4D2C  
       ??_I2C_Slave_Mode_Clock_Configurations 0020          ?_I2C_Slave_Mode_Clock_Configurations 001E  
         _I2C_Slave_Mode_Clock_Configurations 4CFA                convert_float32_to_string@F3432 0100  
                    _RB5_InterruptHandler_LOW 00E1                                      _INT1_ISR 4FB8  
                      async_Tx_config@ret_val 0020                                      _LATDbits 000F8C  
            HAL_Timer0_Write_Val@_tmr0_config 001E                               ??_CCP_PWM_Start 0020  
                                    _IPR1bits 000F9F                                      _PIE1bits 000F9D  
                                    _PIE2bits 000FA0                                ?_MSSP_I2C_Init 015B  
                ??_Robot_Steer_Right_Backward 001E                           __end_of_GPS_Service 2E20  
                                    i1u825_20 4FA4                                      i1u825_21 4FA0  
                                    _PIR1bits 000F9E                                      i1u826_20 4F8A  
                                    i1u930_20 00B0                                      i1u922_20 0034  
                                    i1u826_21 4F86                                      i1u930_21 00AC  
                                    i1u922_21 0030                                      i1u827_20 4F70  
                                    i1u931_20 00BE                                      i1u923_20 0042  
                                    i1u827_21 4F6C                                      i1u931_21 00BA  
                                    i1u923_21 003E                                      _PIR2bits 000FA1  
                                    i1u828_20 4F56                                      i1u940_20 0154  
                                    i1u932_20 00D4                                      i1u924_20 0054  
                                    i1u828_21 4F52                                      i1u940_21 0150  
                                    i1u932_21 00D0                                      i1u924_21 0050  
                                    i1u941_20 0162                                      i1u933_20 00E2  
                                    i1u925_20 0062                                      i1u941_21 015E  
                                    i1u933_21 00DE                                      i1u925_21 005E  
                                    i1u950_20 01F0                                      i1u942_20 0170  
                                    i1u934_20 00F0                                      i1u926_20 0070  
                                    i1u950_21 01EC                                      i1u942_21 016C  
                                    i1u934_21 00EC                                      i1u926_21 006C  
                                    i1u951_20 01FE                                      i1u943_20 017E  
                                    i1u935_20 00FE                                      i1u927_20 007E  
                                    i1u951_21 01FA                                      i1u943_21 017A  
                                    i1u935_21 00FA                                      i1u927_21 007A  
                                    i1u952_20 0214                                      i1u944_20 0194  
                                    i1u936_20 0114                                      i1u928_20 0094  
                                    i1u952_21 0210                                      i1u944_21 0190  
                                    i1u936_21 0110                                      i1u928_21 0090  
                                    i2u640_44 4902                                      i1u953_20 0222  
                                    i1u945_20 01A2                                      i1u937_20 0122  
                                    i1u929_20 00A2                                      i2u640_45 48FE  
                                    i1u953_21 021E                                      i1u945_21 019E  
                                    i1u937_21 011E                                      i1u929_21 009E  
                                    i2u641_40 491C                                      i2u705_40 4E4C  
                                    i2u641_41 4918                                      i2u705_41 4E48  
                                    i1u954_20 0230                                      i1u946_20 01B0  
                                    i1u938_20 0130                                      i1u954_21 022C  
                                    i1u946_21 01AC                                      i1u938_21 012C  
                                    i2u642_40 4930                                      i2u650_40 3944  
                                    i2u642_41 492C                                      i2u650_41 3940  
                                    i1u955_20 023E                                      i1u947_20 01BE  
                                    i1u939_20 013E                                      i1u955_21 023A  
                                    i1u947_21 01BA                                      i1u939_21 013A  
                                    i2u643_40 4940                                      i2u643_41 493C  
                                    i1u956_20 0254                                      i1u948_20 01D4  
                                    i2u651_45 395C                                      i1u956_21 0250  
                                    i1u948_21 01D0                                      i2u651_47 395E  
                                    i2u652_40 3982                                      i2u652_41 397E  
                                    i2u644_44 496A                                      i1u957_20 0262  
                                    i1u949_20 01E2                                      i2u644_45 4966  
                                    i1u957_21 025E                                      i1u949_21 01DE  
                                    i2u645_40 4984                                      i2u821_40 4DF6  
                                    i2u645_41 4980                                      i2u821_41 4DF2  
                                    i1u958_20 0274                                      i2u653_45 3994  
                                    i1u958_21 0270                                      i2u653_47 3996  
                                    i2u646_40 4998                                      i2u654_40 39BA  
                                    i2u646_41 4994                                      i2u654_41 39B6  
                                    i2u647_40 49A8                                      i2u822_48 4DFC  
                                    i2u911_40 3836                                      i2u647_41 49A4  
                                    i2u822_49 4E0E                                      i2u911_41 3832  
                                    i2u655_45 39CC                                      i2u655_47 39CE  
                                    i2u648_40 3906                                      i2u760_40 26BE  
                                    i2u920_40 38C6                                      i2u912_40 3844  
                                    i2u648_41 3902                                      i2u760_41 26BA  
                                    i2u920_41 38C2                                      i2u912_41 3840  
                                    i2u649_40 3924                                      i2u761_40 270E  
                                    i2u921_40 38D6                                      i2u913_40 3856  
                                    i2u649_41 3920                                      i2u761_41 270A  
                                    i2u921_41 38D2                                      i2u913_41 3852  
                                    i2u762_40 2722                                      i2u754_40 2618  
                                    i2u914_40 3866                                      i2u762_41 271E  
                                    i2u754_41 2614                                      i2u914_41 3862  
                                    i2u770_44 4690                                      i2u770_45 468C  
                                    i2u763_40 2758                                      i2u755_40 262A  
                                    i2u915_40 3876                                      i2u763_41 2754  
                                    i2u755_41 2626                                      i2u915_41 3872  
                                    i2u764_40 2798                                      i2u756_40 263C  
                                    i2u916_40 3886                                      i2u764_41 2794  
                                    i2u756_41 2638                                      i2u916_41 3882  
                                    i2u765_40 27AC                                      i2u757_40 2656  
                                    i2u917_40 3894                                      i2u765_41 27A8  
                                    i2u757_41 2652                                      i2u917_41 3890  
                                    i2u766_40 27E2                                      i2u758_40 268A  
                                    i2u918_40 38A6                                      i2u766_41 27DE  
                                    i2u758_41 2686                                      i2u918_41 38A2  
                                    i2u767_40 27F4                                      i2u759_40 26AA  
                                    i2u919_40 38B4                                      i2u767_41 27F0  
                                    i2u759_41 26A6                                      i2u919_41 38B0  
                                    i2u768_40 2802                                      i2u768_41 27FE  
                                    i2u769_40 4670                                      i2u769_41 466C  
                                   _servo1Pos 0032                                     _servo2Pos 0031  
                                   _servo3Pos 0030                                      _RCONbits 000FD0  
                                   _servo4Pos 002F                                      _TMR0_ISR 4FC4  
                                    _TEST_PIN 0041                       __end_of_send_trig_pulse 4DE4  
                _Timer2_PreLoaded_Value_Store 002B                   _I2C_Report_Receive_Overflow 00EF  
                ??_EUSART_Async_Transmit_Data 000A                                    _ADCON0bits 000FC2  
                                  _ADCON1bits 000FC1                                    _ADCON2bits 000FC0  
                           ?_CCP_PWM_Set_Duty 0159                              PCA_Write_Reg@ack 0023  
                                    _Checksum 0033                                     _usart_isr 4D2C  
                            ?_calc_parity_odd 0001                            ??_CCP_PWM_Set_Duty 015C  
                            ?_async_Rx_config 0021                        ??_CCP_Interrupt_Config 0020  
                 i2calc_parity_even@l_counter 0005                     HAL_Timer0_Read_Val@result 0020  
                            ?_async_Tx_config 001E                              ??_Servo_SetAngle 0024  
                                 _INTCON2bits 000FF1                                   _INTCON3bits 000FF0  
                                   copy_data0 438C                                     copy_data1 43AC  
                                   copy_data2 43CC                   __end_of_Robot_Move_Backward 3DA6  
                 _EUSART_Async_Read_Data$2031 0064                   _EUSART_Async_Read_Data$2032 0066  
                 _EUSART_Async_Read_Data$2033 0068                           _GPIO_Pin_Read_Logic 3FC0  
             HAL_Timer0_Read_Val@_tmr0_config 001E                        ?_application_intialize 0001  
                 ??_Robot_Steer_Left_Backward 001E                           _GPIO_Pin_Initialize 4C40  
                                    __Hrparam 0000                                      __Lrparam 0000  
                   ??i2_GPIO_Pin_Toggle_Logic 0003                 __end_of_CCP_Mode_Timer_Select 45EE  
                   ?i2_EUSART_Async_Read_Data 0006                        _EUSART_Async_Read_Data 23EE  
                   GPIO_Pin_Write_Logic@logic 0020                         __end_of_PCA_Write_Reg 4AE4  
                        ?_GPIO_Pin_Read_Logic 001E                     ??_stepper_move_one_deg_cw 0024  
                               _preloaded_val 00D7                    ?_MSSP_I2C_Master_Send_Stop 001E  
                ??_async_config_baud_rate_gen 015B             MSSP_I2C_Master_Send_Start@i2c_obj 001E  
                        ?_GPIO_Pin_Initialize 0022                                      ___xxtofl 2808  
                                  ?_usart_isr 0001                                      _datasend 003A  
            __end_of_stepper_move_one_deg_ccw 4A7E                                 ?_Get_Distance 0083  
                       RB6_ISR@Handler_Select 001A                          _InterruptManagerHigh 0008  
             _async_config_baud_rate_gen$5751 0162                                      __ptext10 4CFA  
                                    __ptext11 4FB2                                      __ptext20 2F66  
                                    __ptext12 3DA6                                      __ptext21 457E  
                                    __ptext13 4EB4                                      __ptext30 3AA6  
                                    __ptext22 4492                                      __ptext14 4AE4  
                                    __ptext31 4FBE                                      __ptext23 4C40  
                                    __ptext15 362E                                      __ptext40 47AA  
                                    __ptext32 3B66                                      __ptext24 2E20  
                                    __ptext16 4114                                      __ptext41 4C8A  
                                    __ptext33 4FC0                                      __ptext25 4B40  
                                    __ptext17 46CE                                      __ptext50 42E8  
                                    __ptext42 4CC2                                      __ptext34 3C26  
                                    __ptext26 19AE                                      __ptext18 4FBC  
                                    __ptext51 4D8C                                      __ptext43 4EDA  
                                    __ptext35 4E64                                      __ptext27 4258  
                                    __ptext19 2B48                                      __ptext60 31E8  
                                    __ptext52 3316                                      __ptext44 29C0  
                                    __ptext36 3CE6                                      __ptext28 3F12  
                                    __ptext61 473C                                      __ptext53 4DB8  
                                    __ptext45 3424                                      __ptext37 3728  
                                    __ptext29 41B6                                      __ptext70 4F90  
                                    __ptext62 23EE                                      __ptext54 2808  
                                    __ptext46 1582                                      __ptext38 1048  
                                    __ptext71 4FB8                                      __ptext63 4812  
                                    __ptext55 1D66                                      __ptext47 4E8C  
                                    __ptext39 4A7E                                      __ptext80 4E3A  
                                    __ptext72 4FC2                                      __ptext64 487A  
                                    __ptext56 4E10                                      __ptext48 406E  
                                    __ptext81 38F4                                      __ptext65 45EE  
                                    __ptext57 3E5E                                      __ptext49 4F24  
                                    __ptext82 48E2                                      __ptext74 4FC4  
                                    __ptext58 3FC0                                      __ptext83 494A  
                                    __ptext75 4FC6                                      __ptext67 4F42  
                                    __ptext59 2CB4                                      __ptext84 0000  
                                    __ptext76 4DE4                                      __ptext68 4F5C  
                                    __ptext77 4D2C                                      __ptext69 4F76  
                                    __ptext78 465E                                      __ptext79 25FE  
   Bluetooth_Send_Data_Non_Blocking@_uart_obj 000C    I2C_Slave_Mode_Clock_Configurations@i2c_obj 001E  
 I2C_Master_Mode_Clock_Configurations@i2c_obj 0159                      _Timer1_Interrupt_Handler 00D5  
                                    _distance 00FC                          _GPIO_Pin_Write_Logic 31E8  
                           _ECU_DC_Motor_Init 4EB4                          _HAL_Timer0_Write_Val 4E10  
                                 _GPS_Service 2CB4                Servo_SetAngle@servo_driver_obj 015B  
                                    _latitude 011C                             ?_Robot_Steer_Stop 0001  
                          ?_ECU_DC_Motor_Init 0066                               ??_MSSP_I2C_Init 0025  
                                ?_DHT11_Start 0001                      ??_ECU_DC_Motor_Run_Right 0024  
                               ?_Get_Temp_HUM 0060                            ??_Robot_Steer_Stop 0024  
                                    _longtude 010F                                      _selector 0040  
     __end_of_EUSART_Async_Read_Data_Blocking 47AA             ??_EUSART_Async_Read_Data_Blocking 0025  
            ?_EUSART_Async_Read_Data_Blocking 006C               _EUSART_Async_Read_Data_Blocking 473C  
                         ??_ECU_DC_Motor_Init 0025                       ??_GPIO_Pin_Toggle_Logic 0020  
                                    isa$xinst 000000                                      int$flags 0042  
                       ??_GPIO_Pin_Read_Logic 0060                              ?_send_trig_pulse 0022  
                       ??_GPIO_Pin_Initialize 0024                           _HAL_Timer0_Read_Val 3E5E  
                   _Robot_Steer_Left_Backward 4FC0             __end_of_MSSP_I2C_Master_Send_Stop 4CC2  
                                  _INTCONbits 000FF2                 calc_parity_odd@number_of_ones 0021  
             i2calc_parity_odd@number_of_ones 0004                       Ecu_Stepper_Step@stepper 0022  
                              ??_Get_Distance 0024                         ?_InterruptManagerHigh 0001  
                   __end_of_ECU_DC_Motor_Init 4EDA                        _I2C_Pin_Configurations 4FB2  
                  __end_of_Robot_Move_Forward 3CE6                 ECU_DC_Motor_Run_Left@dc_motor 0022  
                       ?_GPIO_Pin_Write_Logic 001E                      stepper_move_one_deg_cw@i 006A  
                       ?_HAL_Timer0_Write_Val 001E                                      intlevel1 0000  
                                    intlevel2 0000                    ??_Robot_Steer_Left_Forward 0024  
             __end_of_stepper_move_one_deg_cw 4A18                           _InterruptManagerLow 0018  
                              ??_Get_Temp_HUM 0022                    i2calc_parity_odd@l_counter 0005  
                        ?_HAL_Timer0_Read_Val 001E            __end_of_Robot_Steer_Right_Backward 4FC0  
                  _Robot_Steer_Right_Backward 4FBE      GPIO_Pin_Direction_Initialize@_pin_config 001E  
                                  _RCSTA1bits 000FAB                       ??_ECU_DC_Motor_Run_Left 0024  
                     _CCP_Capture_Mode_Config 2F66                        i2calc_parity_even@data 0003  
                    ?_CCP_Compare_Mode_Config 0021                              _Ecu_Stepper_Init 4492  
                            _Ecu_Stepper_Step 450E            __end_of_EUSART_Async_Transmit_Data 39D8  
                  _EUSART_Async_Transmit_Data 38F4                    Servo_SetAngle@angle_in_reg 015F  
                        ?_InterruptManagerLow 0001                             ?_ServoDriver_Init 015D  
                         _CCP_PWM_Mode_Config 4114                            ??_ServoDriver_Init 0025  
                              _port_registers 00A8                        _W2_W4_W6_Motor_Control 00D3  
                                 ??_usart_isr 0014        __end_of_MSSP_I2C_Master_Write_Blocking 4812  
              _MSSP_I2C_Master_Write_Blocking 47AA                                   _SSPCON1bits 000FC6  
                                 _SSPCON2bits 000FC5                                    _WDTCONbits 000FD1  
                               ___fladd@signs 014D                 Get_Distance@ultrasonic_object 0083  
                        ?_CCP_PWM_Mode_Config 0021                                  ___fladd@aexp 014E  
                                ___fladd@bexp 014F                         ??_HAL_Timer0_Read_Val 0060  
                EUSART_Async_Init@_eusart_obj 0166                                    _RH_Decimal 0037  
