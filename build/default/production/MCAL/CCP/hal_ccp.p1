Version 4.0 HI-TECH Software Intermediate Code
"24 MCAL/CCP/hal_ccp.c
[; ;MCAL/CCP/hal_ccp.c: 24: Std_ReturnType CCP_Init(const ccp_st *_ccp_obj){
[c E3041 0 1 .. ]
[n E3041 . CCP1_INST CCP2_INST  ]
[c E3027 0 1 2 .. ]
[n E3027 . CCP_CAPTURE_MODE_SELECTED CCP_COMPARE_MODE_SELECTED CCP_PWM_MODE_SELECTED  ]
"73 MCAL/CCP/../GPIO/hal_gpio.h
[; ;MCAL/CCP/../GPIO/hal_gpio.h: 73: {
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . pin port direction logic ]
"24 MCAL/CCP/hal_ccp.c
[; ;MCAL/CCP/hal_ccp.c: 24: Std_ReturnType CCP_Init(const ccp_st *_ccp_obj){
[c E3045 0 1 2 .. ]
[n E3045 . CCP1_CCP2_TIMER3 CCP1_TIMER1_CCP2_TIMER3 CCP1_CCP2_TIMER1  ]
"108 MCAL/CCP/hal_ccp.h
[; ;MCAL/CCP/hal_ccp.h: 108: typedef struct{
[s S277 `E3041 1 `E3027 1 `uc 1 `S273 1 `E3045 1 `ul 1 :4 `uc 1 :2 `uc 1 ]
[n S277 . ccp_inst ccp_mode ccp_mode_variant ccp_pin ccp_capture_timer PWM_Frequency timer2_postscaler_value timer2_prescaler_value ]
"4262 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc/pic18f4620.h
[s S168 :4 `uc 1 :2 `uc 1 :2 `uc 1 ]
[n S168 . CCP1M DC1B P1M ]
"4267
[s S169 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S169 . CCP1M0 CCP1M1 CCP1M2 CCP1M3 CCP1Y CCP1X P1M0 P1M1 ]
"4277
[s S170 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S170 . . DC1B0 DC1B1 ]
"4261
[u S167 `S168 1 `S169 1 `S170 1 ]
[n S167 . . . . ]
"4283
[v _CCP1CONbits `VS167 ~T0 @X0 0 e@4029 ]
"4162
[s S164 :4 `uc 1 :2 `uc 1 ]
[n S164 . CCP2M DC2B ]
"4166
[s S165 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S165 . CCP2M0 CCP2M1 CCP2M2 CCP2M3 CCP2Y CCP2X ]
"4174
[s S166 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S166 . . DC2B0 DC2B1 ]
"4161
[u S163 `S164 1 `S165 1 `S166 1 ]
[n S163 . . . . ]
"4180
[v _CCP2CONbits `VS163 ~T0 @X0 0 e@4026 ]
"21 MCAL/CCP/hal_ccp.c
[; ;MCAL/CCP/hal_ccp.c: 21: static Std_ReturnType CCP_Capture_Mode_Config(const ccp_st *_ccp_obj);
[v _CCP_Capture_Mode_Config `(uc ~T0 @X0 0 sf1`*CS277 ]
"22
[; ;MCAL/CCP/hal_ccp.c: 22: static Std_ReturnType CCP_Compare_Mode_Config(const ccp_st *_ccp_obj);
[v _CCP_Compare_Mode_Config `(uc ~T0 @X0 0 sf1`*CS277 ]
"19
[; ;MCAL/CCP/hal_ccp.c: 19: static void CCP_PWM_Mode_Config(const ccp_st *_ccp_obj);
[v _CCP_PWM_Mode_Config `(v ~T0 @X0 0 sf1`*CS277 ]
"90 MCAL/CCP/../GPIO/hal_gpio.h
[; ;MCAL/CCP/../GPIO/hal_gpio.h: 90: Std_ReturnType GPIO_Pin_Initialize (const pin_config_st * _pin_config);
[v _GPIO_Pin_Initialize `(uc ~T0 @X0 0 ef1`*CS273 ]
"18 MCAL/CCP/hal_ccp.c
[; ;MCAL/CCP/hal_ccp.c: 18: static void CCP_Interrupt_Config(const ccp_st *_ccp_obj);
[v _CCP_Interrupt_Config `(v ~T0 @X0 0 sf1`*CS277 ]
"5108 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc/pic18f4620.h
[v _PR2 `Vuc ~T0 @X0 0 e@4043 ]
"4360
[v _CCPR1L `Vuc ~T0 @X0 0 e@4030 ]
"4242
[v _CCPR2L `Vuc ~T0 @X0 0 e@4027 ]
"3536
[s S136 :2 `uc 1 :1 `uc 1 ]
[n S136 . . NOT_T3SYNC ]
"3540
[s S137 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S137 . TMR3ON TMR3CS nT3SYNC T3CCP1 T3CKPS T3CCP2 RD16 ]
"3549
[s S138 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S138 . . T3SYNC . T3CKPS0 T3CKPS1 ]
"3556
[s S139 :3 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S139 . . SOSCEN3 . RD163 ]
"3562
[s S140 :7 `uc 1 :1 `uc 1 ]
[n S140 . . T3RD16 ]
"3535
[u S135 `S136 1 `S137 1 `S138 1 `S139 1 `S140 1 ]
[n S135 . . . . . . ]
"3567
[v _T3CONbits `VS135 ~T0 @X0 0 e@4017 ]
"55 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"24 MCAL/CCP/hal_ccp.c
[; ;MCAL/CCP/hal_ccp.c: 24: Std_ReturnType CCP_Init(const ccp_st *_ccp_obj){
[v _CCP_Init `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_Init ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"25
[; ;MCAL/CCP/hal_ccp.c: 25:     Std_ReturnType ret = (Std_ReturnType) 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"26
[; ;MCAL/CCP/hal_ccp.c: 26:     if(((void*)0) == _ccp_obj){
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 279  ]
{
"27
[; ;MCAL/CCP/hal_ccp.c: 27:         ret = (Std_ReturnType) 0x00;
[e = _ret -> -> 0 `i `uc ]
"28
[; ;MCAL/CCP/hal_ccp.c: 28:     }
}
[e $U 280  ]
"29
[; ;MCAL/CCP/hal_ccp.c: 29:     else{
[e :U 279 ]
{
"31
[; ;MCAL/CCP/hal_ccp.c: 31:         if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 281  ]
{
"32
[; ;MCAL/CCP/hal_ccp.c: 32:             (CCP1CONbits.CCP1M = ((uint8)0x00));
[e = . . _CCP1CONbits 0 0 -> -> 0 `i `uc ]
"33
[; ;MCAL/CCP/hal_ccp.c: 33:         }
}
[e $U 282  ]
"34
[; ;MCAL/CCP/hal_ccp.c: 34:         else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 281 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 283  ]
{
"35
[; ;MCAL/CCP/hal_ccp.c: 35:             (CCP2CONbits.CCP2M = ((uint8)0x00));
[e = . . _CCP2CONbits 0 0 -> -> 0 `i `uc ]
"36
[; ;MCAL/CCP/hal_ccp.c: 36:         }
}
[e $U 284  ]
"37
[; ;MCAL/CCP/hal_ccp.c: 37:         else { }
[e :U 283 ]
{
}
[e :U 284 ]
[e :U 282 ]
"40
[; ;MCAL/CCP/hal_ccp.c: 40:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mode){
[e $ ! == -> . `E3027 0 `ui -> . *U __ccp_obj 1 `ui 285  ]
{
"41
[; ;MCAL/CCP/hal_ccp.c: 41:             ret = CCP_Capture_Mode_Config(_ccp_obj);
[e = _ret ( _CCP_Capture_Mode_Config (1 __ccp_obj ]
"42
[; ;MCAL/CCP/hal_ccp.c: 42:         }
}
[e $U 286  ]
"44
[; ;MCAL/CCP/hal_ccp.c: 44:         else if(CCP_COMPARE_MODE_SELECTED == _ccp_obj->ccp_mode){
[e :U 285 ]
[e $ ! == -> . `E3027 1 `ui -> . *U __ccp_obj 1 `ui 287  ]
{
"45
[; ;MCAL/CCP/hal_ccp.c: 45:             ret = CCP_Compare_Mode_Config(_ccp_obj);
[e = _ret ( _CCP_Compare_Mode_Config (1 __ccp_obj ]
"46
[; ;MCAL/CCP/hal_ccp.c: 46:         }
}
[e $U 288  ]
"49
[; ;MCAL/CCP/hal_ccp.c: 49:         else if(CCP_PWM_MODE_SELECTED == _ccp_obj->ccp_mode){
[e :U 287 ]
[e $ ! == -> . `E3027 2 `ui -> . *U __ccp_obj 1 `ui 289  ]
{
"50
[; ;MCAL/CCP/hal_ccp.c: 50:             CCP_PWM_Mode_Config(_ccp_obj);
[e ( _CCP_PWM_Mode_Config (1 __ccp_obj ]
"51
[; ;MCAL/CCP/hal_ccp.c: 51:         }
}
[e $U 290  ]
"53
[; ;MCAL/CCP/hal_ccp.c: 53:         else { }
[e :U 289 ]
{
}
[e :U 290 ]
[e :U 288 ]
[e :U 286 ]
"56
[; ;MCAL/CCP/hal_ccp.c: 56:         ret = GPIO_Pin_Initialize(&(_ccp_obj->ccp_pin));
[e = _ret ( _GPIO_Pin_Initialize (1 &U . *U __ccp_obj 3 ]
"58
[; ;MCAL/CCP/hal_ccp.c: 58:         CCP_Interrupt_Config(_ccp_obj);
[e ( _CCP_Interrupt_Config (1 __ccp_obj ]
"60
[; ;MCAL/CCP/hal_ccp.c: 60:         ret = (Std_ReturnType) 0x01;
[e = _ret -> -> 1 `i `uc ]
"61
[; ;MCAL/CCP/hal_ccp.c: 61:     }
}
[e :U 280 ]
"62
[; ;MCAL/CCP/hal_ccp.c: 62:     return ret;
[e ) _ret ]
[e $UE 278  ]
"63
[; ;MCAL/CCP/hal_ccp.c: 63: }
[e :UE 278 ]
}
"65
[; ;MCAL/CCP/hal_ccp.c: 65: Std_ReturnType CCP_DeInit(const ccp_st *_ccp_obj){
[v _CCP_DeInit `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_DeInit ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"66
[; ;MCAL/CCP/hal_ccp.c: 66:     Std_ReturnType ret = (Std_ReturnType) 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"67
[; ;MCAL/CCP/hal_ccp.c: 67:     if(((void*)0) == _ccp_obj){
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 292  ]
{
"68
[; ;MCAL/CCP/hal_ccp.c: 68:         ret = (Std_ReturnType) 0x00;
[e = _ret -> -> 0 `i `uc ]
"69
[; ;MCAL/CCP/hal_ccp.c: 69:     }
}
[e $U 293  ]
"70
[; ;MCAL/CCP/hal_ccp.c: 70:     else{
[e :U 292 ]
{
"71
[; ;MCAL/CCP/hal_ccp.c: 71:         if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 294  ]
{
"72
[; ;MCAL/CCP/hal_ccp.c: 72:             (CCP1CONbits.CCP1M = ((uint8)0x00));
[e = . . _CCP1CONbits 0 0 -> -> 0 `i `uc ]
"77
[; ;MCAL/CCP/hal_ccp.c: 77:         }
}
[e $U 295  ]
"78
[; ;MCAL/CCP/hal_ccp.c: 78:         else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 294 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 296  ]
{
"79
[; ;MCAL/CCP/hal_ccp.c: 79:             (CCP2CONbits.CCP2M = ((uint8)0x00));
[e = . . _CCP2CONbits 0 0 -> -> 0 `i `uc ]
"83
[; ;MCAL/CCP/hal_ccp.c: 83:         }
}
[e $U 297  ]
"84
[; ;MCAL/CCP/hal_ccp.c: 84:         else { }
[e :U 296 ]
{
}
[e :U 297 ]
[e :U 295 ]
"86
[; ;MCAL/CCP/hal_ccp.c: 86:         ret = (Std_ReturnType) 0x01;
[e = _ret -> -> 1 `i `uc ]
"87
[; ;MCAL/CCP/hal_ccp.c: 87:     }
}
[e :U 293 ]
"88
[; ;MCAL/CCP/hal_ccp.c: 88:     return ret;
[e ) _ret ]
[e $UE 291  ]
"89
[; ;MCAL/CCP/hal_ccp.c: 89: }
[e :UE 291 ]
}
"176
[; ;MCAL/CCP/hal_ccp.c: 176: Std_ReturnType CCP_PWM_Set_Duty(const ccp_st *_ccp_obj, const uint8 _duty){
[v _CCP_PWM_Set_Duty `(uc ~T0 @X0 1 ef2`*CS277`Cuc ]
{
[e :U _CCP_PWM_Set_Duty ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[v __duty `Cuc ~T0 @X0 1 r2 ]
[f ]
"177
[; ;MCAL/CCP/hal_ccp.c: 177:     Std_ReturnType ret = (Std_ReturnType) 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"178
[; ;MCAL/CCP/hal_ccp.c: 178:     uint16 l_duty_temp = 0;
[v _l_duty_temp `us ~T0 @X0 1 a ]
[e = _l_duty_temp -> -> 0 `i `us ]
"180
[; ;MCAL/CCP/hal_ccp.c: 180:     if(((void*)0) == _ccp_obj){
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 299  ]
{
"181
[; ;MCAL/CCP/hal_ccp.c: 181:         ret = (Std_ReturnType) 0x00;
[e = _ret -> -> 0 `i `uc ]
"182
[; ;MCAL/CCP/hal_ccp.c: 182:     }
}
[e $U 300  ]
"183
[; ;MCAL/CCP/hal_ccp.c: 183:     else{
[e :U 299 ]
{
"184
[; ;MCAL/CCP/hal_ccp.c: 184:         l_duty_temp = (uint16)(4 * (PR2 + 1) * (_duty / 100.0));
[e = _l_duty_temp -> * -> * -> 4 `i + -> _PR2 `i -> 1 `i `d / -> -> __duty `i `d .100.0 `us ]
"186
[; ;MCAL/CCP/hal_ccp.c: 186:         if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 301  ]
{
"187
[; ;MCAL/CCP/hal_ccp.c: 187:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
[e = . . _CCP1CONbits 0 1 -> & -> _l_duty_temp `ui -> -> 3 `i `ui `uc ]
"188
[; ;MCAL/CCP/hal_ccp.c: 188:             CCPR1L = (uint8)(l_duty_temp >> 2);
[e = _CCPR1L -> >> -> _l_duty_temp `ui -> 2 `i `uc ]
"189
[; ;MCAL/CCP/hal_ccp.c: 189:         }
}
[e $U 302  ]
"190
[; ;MCAL/CCP/hal_ccp.c: 190:         else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 301 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 303  ]
{
"191
[; ;MCAL/CCP/hal_ccp.c: 191:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003);
[e = . . _CCP2CONbits 0 1 -> & -> _l_duty_temp `ui -> -> 3 `i `ui `uc ]
"192
[; ;MCAL/CCP/hal_ccp.c: 192:             CCPR2L = (uint8)(l_duty_temp >> 2);
[e = _CCPR2L -> >> -> _l_duty_temp `ui -> 2 `i `uc ]
"193
[; ;MCAL/CCP/hal_ccp.c: 193:         }
}
[e $U 304  ]
"194
[; ;MCAL/CCP/hal_ccp.c: 194:         else{ }
[e :U 303 ]
{
}
[e :U 304 ]
[e :U 302 ]
"196
[; ;MCAL/CCP/hal_ccp.c: 196:         ret = (Std_ReturnType) 0x01;
[e = _ret -> -> 1 `i `uc ]
"197
[; ;MCAL/CCP/hal_ccp.c: 197:     }
}
[e :U 300 ]
"199
[; ;MCAL/CCP/hal_ccp.c: 199:     return ret;
[e ) _ret ]
[e $UE 298  ]
"200
[; ;MCAL/CCP/hal_ccp.c: 200: }
[e :UE 298 ]
}
"202
[; ;MCAL/CCP/hal_ccp.c: 202: Std_ReturnType CCP_PWM_Start(const ccp_st *_ccp_obj){
[v _CCP_PWM_Start `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_PWM_Start ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"203
[; ;MCAL/CCP/hal_ccp.c: 203:     Std_ReturnType ret = (Std_ReturnType) 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"205
[; ;MCAL/CCP/hal_ccp.c: 205:     if(((void*)0) == _ccp_obj){
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 306  ]
{
"206
[; ;MCAL/CCP/hal_ccp.c: 206:         ret = (Std_ReturnType) 0x00;
[e = _ret -> -> 0 `i `uc ]
"207
[; ;MCAL/CCP/hal_ccp.c: 207:     }
}
[e $U 307  ]
"208
[; ;MCAL/CCP/hal_ccp.c: 208:     else{
[e :U 306 ]
{
"209
[; ;MCAL/CCP/hal_ccp.c: 209:         if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 308  ]
{
"210
[; ;MCAL/CCP/hal_ccp.c: 210:             CCP1CONbits.CCP1M = ((uint8)0x0C);
[e = . . _CCP1CONbits 0 0 -> -> 12 `i `uc ]
"211
[; ;MCAL/CCP/hal_ccp.c: 211:         }
}
[e $U 309  ]
"212
[; ;MCAL/CCP/hal_ccp.c: 212:         else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 308 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 310  ]
{
"213
[; ;MCAL/CCP/hal_ccp.c: 213:             CCP2CONbits.CCP2M = ((uint8)0x0C);
[e = . . _CCP2CONbits 0 0 -> -> 12 `i `uc ]
"214
[; ;MCAL/CCP/hal_ccp.c: 214:         }
}
[e $U 311  ]
"215
[; ;MCAL/CCP/hal_ccp.c: 215:         else{ }
[e :U 310 ]
{
}
[e :U 311 ]
[e :U 309 ]
"216
[; ;MCAL/CCP/hal_ccp.c: 216:         ret = (Std_ReturnType) 0x01;
[e = _ret -> -> 1 `i `uc ]
"217
[; ;MCAL/CCP/hal_ccp.c: 217:     }
}
[e :U 307 ]
"219
[; ;MCAL/CCP/hal_ccp.c: 219:     return ret;
[e ) _ret ]
[e $UE 305  ]
"220
[; ;MCAL/CCP/hal_ccp.c: 220: }
[e :UE 305 ]
}
"222
[; ;MCAL/CCP/hal_ccp.c: 222: Std_ReturnType CCP_PWM_Stop(const ccp_st *_ccp_obj){
[v _CCP_PWM_Stop `(uc ~T0 @X0 1 ef1`*CS277 ]
{
[e :U _CCP_PWM_Stop ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"223
[; ;MCAL/CCP/hal_ccp.c: 223:     Std_ReturnType ret = (Std_ReturnType) 0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"225
[; ;MCAL/CCP/hal_ccp.c: 225:     if(((void*)0) == _ccp_obj){
[e $ ! == -> -> -> 0 `i `*v `*CS277 __ccp_obj 313  ]
{
"226
[; ;MCAL/CCP/hal_ccp.c: 226:         ret = (Std_ReturnType) 0x00;
[e = _ret -> -> 0 `i `uc ]
"227
[; ;MCAL/CCP/hal_ccp.c: 227:     }
}
[e $U 314  ]
"228
[; ;MCAL/CCP/hal_ccp.c: 228:     else{
[e :U 313 ]
{
"229
[; ;MCAL/CCP/hal_ccp.c: 229:         if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 315  ]
{
"230
[; ;MCAL/CCP/hal_ccp.c: 230:             CCP1CONbits.CCP1M = ((uint8)0x00);
[e = . . _CCP1CONbits 0 0 -> -> 0 `i `uc ]
"231
[; ;MCAL/CCP/hal_ccp.c: 231:         }
}
[e $U 316  ]
"232
[; ;MCAL/CCP/hal_ccp.c: 232:         else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 315 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 317  ]
{
"233
[; ;MCAL/CCP/hal_ccp.c: 233:             CCP2CONbits.CCP2M = ((uint8)0x00);
[e = . . _CCP2CONbits 0 0 -> -> 0 `i `uc ]
"234
[; ;MCAL/CCP/hal_ccp.c: 234:         }
}
[e $U 318  ]
"235
[; ;MCAL/CCP/hal_ccp.c: 235:         else{ }
[e :U 317 ]
{
}
[e :U 318 ]
[e :U 316 ]
"236
[; ;MCAL/CCP/hal_ccp.c: 236:         ret = (Std_ReturnType) 0x01;
[e = _ret -> -> 1 `i `uc ]
"237
[; ;MCAL/CCP/hal_ccp.c: 237:     }
}
[e :U 314 ]
"239
[; ;MCAL/CCP/hal_ccp.c: 239:     return ret;
[e ) _ret ]
[e $UE 312  ]
"240
[; ;MCAL/CCP/hal_ccp.c: 240: }
[e :UE 312 ]
}
"264
[; ;MCAL/CCP/hal_ccp.c: 264: static void CCP_PWM_Mode_Config(const ccp_st *_ccp_obj){
[v _CCP_PWM_Mode_Config `(v ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_PWM_Mode_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"265
[; ;MCAL/CCP/hal_ccp.c: 265:     if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 320  ]
{
"266
[; ;MCAL/CCP/hal_ccp.c: 266:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
[e $ ! == -> -> -> 12 `i `uc `i -> . *U __ccp_obj 2 `i 321  ]
{
"267
[; ;MCAL/CCP/hal_ccp.c: 267:             (CCP1CONbits.CCP1M = ((uint8)0x0C));
[e = . . _CCP1CONbits 0 0 -> -> 12 `i `uc ]
"268
[; ;MCAL/CCP/hal_ccp.c: 268:         }
}
[e $U 322  ]
"269
[; ;MCAL/CCP/hal_ccp.c: 269:         else { }
[e :U 321 ]
{
}
[e :U 322 ]
"270
[; ;MCAL/CCP/hal_ccp.c: 270:     }
}
[e $U 323  ]
"271
[; ;MCAL/CCP/hal_ccp.c: 271:     else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 320 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 324  ]
{
"272
[; ;MCAL/CCP/hal_ccp.c: 272:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
[e $ ! == -> -> -> 12 `i `uc `i -> . *U __ccp_obj 2 `i 325  ]
{
"273
[; ;MCAL/CCP/hal_ccp.c: 273:             (CCP2CONbits.CCP2M = ((uint8)0x0C));
[e = . . _CCP2CONbits 0 0 -> -> 12 `i `uc ]
"274
[; ;MCAL/CCP/hal_ccp.c: 274:         }
}
[e $U 326  ]
"275
[; ;MCAL/CCP/hal_ccp.c: 275:         else { }
[e :U 325 ]
{
}
[e :U 326 ]
"276
[; ;MCAL/CCP/hal_ccp.c: 276:     }
}
[e $U 327  ]
"277
[; ;MCAL/CCP/hal_ccp.c: 277:     else{ }
[e :U 324 ]
{
}
[e :U 327 ]
[e :U 323 ]
"280
[; ;MCAL/CCP/hal_ccp.c: 280:     PR2 = (uint8)((8000000 / (_ccp_obj->PWM_Frequency * 4.0 * _ccp_obj->timer2_prescaler_value) - 1));
[e = _PR2 -> - / -> -> 8000000 `l `d * * -> . *U __ccp_obj 5 `d .4.0 -> -> . *U __ccp_obj 7 `i `d -> -> 1 `i `d `uc ]
"281
[; ;MCAL/CCP/hal_ccp.c: 281: }
[e :UE 319 ]
}
"284
[; ;MCAL/CCP/hal_ccp.c: 284: static void CCP_Interrupt_Config(const ccp_st *_ccp_obj){
[v _CCP_Interrupt_Config `(v ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Interrupt_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"334
[; ;MCAL/CCP/hal_ccp.c: 334: }
[e :UE 328 ]
}
"336
[; ;MCAL/CCP/hal_ccp.c: 336: static void CCP_Mode_Timer_Select(const ccp_st *_ccp_obj){
[v _CCP_Mode_Timer_Select `(v ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Mode_Timer_Select ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"337
[; ;MCAL/CCP/hal_ccp.c: 337:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
[e $ ! == -> . `E3045 0 `ui -> . *U __ccp_obj 4 `ui 330  ]
{
"339
[; ;MCAL/CCP/hal_ccp.c: 339:         T3CONbits.T3CCP1 = 0;
[e = . . _T3CONbits 1 3 -> -> 0 `i `uc ]
"340
[; ;MCAL/CCP/hal_ccp.c: 340:         T3CONbits.T3CCP2 = 1;
[e = . . _T3CONbits 1 5 -> -> 1 `i `uc ]
"341
[; ;MCAL/CCP/hal_ccp.c: 341:     }
}
[e $U 331  ]
"342
[; ;MCAL/CCP/hal_ccp.c: 342:     else if(CCP1_TIMER1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
[e :U 330 ]
[e $ ! == -> . `E3045 1 `ui -> . *U __ccp_obj 4 `ui 332  ]
{
"345
[; ;MCAL/CCP/hal_ccp.c: 345:         T3CONbits.T3CCP1 = 1;
[e = . . _T3CONbits 1 3 -> -> 1 `i `uc ]
"346
[; ;MCAL/CCP/hal_ccp.c: 346:         T3CONbits.T3CCP2 = 0;
[e = . . _T3CONbits 1 5 -> -> 0 `i `uc ]
"347
[; ;MCAL/CCP/hal_ccp.c: 347:     }
}
[e $U 333  ]
"348
[; ;MCAL/CCP/hal_ccp.c: 348:     else if(CCP1_CCP2_TIMER1 == _ccp_obj->ccp_capture_timer){
[e :U 332 ]
[e $ ! == -> . `E3045 2 `ui -> . *U __ccp_obj 4 `ui 334  ]
{
"350
[; ;MCAL/CCP/hal_ccp.c: 350:         T3CONbits.T3CCP1 = 0;
[e = . . _T3CONbits 1 3 -> -> 0 `i `uc ]
"351
[; ;MCAL/CCP/hal_ccp.c: 351:         T3CONbits.T3CCP2 = 0;
[e = . . _T3CONbits 1 5 -> -> 0 `i `uc ]
"352
[; ;MCAL/CCP/hal_ccp.c: 352:     }
}
[e $U 335  ]
"353
[; ;MCAL/CCP/hal_ccp.c: 353:     else{ }
[e :U 334 ]
{
}
[e :U 335 ]
[e :U 333 ]
[e :U 331 ]
"354
[; ;MCAL/CCP/hal_ccp.c: 354: }
[e :UE 329 ]
}
"356
[; ;MCAL/CCP/hal_ccp.c: 356: static Std_ReturnType CCP_Capture_Mode_Config(const ccp_st *_ccp_obj){
[v _CCP_Capture_Mode_Config `(uc ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Capture_Mode_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"357
[; ;MCAL/CCP/hal_ccp.c: 357:     Std_ReturnType ret = (Std_ReturnType) 0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"359
[; ;MCAL/CCP/hal_ccp.c: 359:     if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 337  ]
{
"361
[; ;MCAL/CCP/hal_ccp.c: 361:         switch(_ccp_obj->ccp_mode_variant){
[e $U 339  ]
{
"362
[; ;MCAL/CCP/hal_ccp.c: 362:             case ((uint8)0x04) :
[e :U 340 ]
"363
[; ;MCAL/CCP/hal_ccp.c: 363:                 (CCP1CONbits.CCP1M = ((uint8)0x04));
[e = . . _CCP1CONbits 0 0 -> -> 4 `i `uc ]
"364
[; ;MCAL/CCP/hal_ccp.c: 364:                 break;
[e $U 338  ]
"365
[; ;MCAL/CCP/hal_ccp.c: 365:             case ((uint8)0x05) :
[e :U 341 ]
"366
[; ;MCAL/CCP/hal_ccp.c: 366:                 (CCP1CONbits.CCP1M = ((uint8)0x05));
[e = . . _CCP1CONbits 0 0 -> -> 5 `i `uc ]
"367
[; ;MCAL/CCP/hal_ccp.c: 367:                 break;
[e $U 338  ]
"368
[; ;MCAL/CCP/hal_ccp.c: 368:             case ((uint8)0x06) :
[e :U 342 ]
"369
[; ;MCAL/CCP/hal_ccp.c: 369:                 (CCP1CONbits.CCP1M = ((uint8)0x06));
[e = . . _CCP1CONbits 0 0 -> -> 6 `i `uc ]
"370
[; ;MCAL/CCP/hal_ccp.c: 370:                 break;
[e $U 338  ]
"371
[; ;MCAL/CCP/hal_ccp.c: 371:             case ((uint8)0x07) :
[e :U 343 ]
"372
[; ;MCAL/CCP/hal_ccp.c: 372:                 (CCP1CONbits.CCP1M = ((uint8)0x07));
[e = . . _CCP1CONbits 0 0 -> -> 7 `i `uc ]
"373
[; ;MCAL/CCP/hal_ccp.c: 373:                 break;
[e $U 338  ]
"374
[; ;MCAL/CCP/hal_ccp.c: 374:             default : ret = (Std_ReturnType) 0x00;
[e :U 344 ]
[e = _ret -> -> 0 `i `uc ]
"375
[; ;MCAL/CCP/hal_ccp.c: 375:         }
}
[e $U 338  ]
[e :U 339 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 4 `i `uc `i 340
 , $ -> -> -> 5 `i `uc `i 341
 , $ -> -> -> 6 `i `uc `i 342
 , $ -> -> -> 7 `i `uc `i 343
 344 ]
[e :U 338 ]
"376
[; ;MCAL/CCP/hal_ccp.c: 376:     }
}
[e $U 345  ]
"377
[; ;MCAL/CCP/hal_ccp.c: 377:     else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 337 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 346  ]
{
"379
[; ;MCAL/CCP/hal_ccp.c: 379:         switch(_ccp_obj->ccp_mode_variant){
[e $U 348  ]
{
"380
[; ;MCAL/CCP/hal_ccp.c: 380:             case ((uint8)0x04) :
[e :U 349 ]
"381
[; ;MCAL/CCP/hal_ccp.c: 381:                 (CCP2CONbits.CCP2M = ((uint8)0x04));
[e = . . _CCP2CONbits 0 0 -> -> 4 `i `uc ]
"382
[; ;MCAL/CCP/hal_ccp.c: 382:             break;
[e $U 347  ]
"383
[; ;MCAL/CCP/hal_ccp.c: 383:             case ((uint8)0x05) :
[e :U 350 ]
"384
[; ;MCAL/CCP/hal_ccp.c: 384:                 (CCP2CONbits.CCP2M = ((uint8)0x05));
[e = . . _CCP2CONbits 0 0 -> -> 5 `i `uc ]
"385
[; ;MCAL/CCP/hal_ccp.c: 385:                 break;
[e $U 347  ]
"386
[; ;MCAL/CCP/hal_ccp.c: 386:             case ((uint8)0x06) :
[e :U 351 ]
"387
[; ;MCAL/CCP/hal_ccp.c: 387:                 (CCP2CONbits.CCP2M = ((uint8)0x06));
[e = . . _CCP2CONbits 0 0 -> -> 6 `i `uc ]
"388
[; ;MCAL/CCP/hal_ccp.c: 388:                 break;
[e $U 347  ]
"389
[; ;MCAL/CCP/hal_ccp.c: 389:             case ((uint8)0x07) :
[e :U 352 ]
"390
[; ;MCAL/CCP/hal_ccp.c: 390:                 (CCP2CONbits.CCP2M = ((uint8)0x07));
[e = . . _CCP2CONbits 0 0 -> -> 7 `i `uc ]
"391
[; ;MCAL/CCP/hal_ccp.c: 391:                 break;
[e $U 347  ]
"392
[; ;MCAL/CCP/hal_ccp.c: 392:             default :
[e :U 353 ]
"393
[; ;MCAL/CCP/hal_ccp.c: 393:                 ret = (Std_ReturnType) 0x00;
[e = _ret -> -> 0 `i `uc ]
"394
[; ;MCAL/CCP/hal_ccp.c: 394:         }
}
[e $U 347  ]
[e :U 348 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 4 `i `uc `i 349
 , $ -> -> -> 5 `i `uc `i 350
 , $ -> -> -> 6 `i `uc `i 351
 , $ -> -> -> 7 `i `uc `i 352
 353 ]
[e :U 347 ]
"395
[; ;MCAL/CCP/hal_ccp.c: 395:     }
}
[e $U 354  ]
"396
[; ;MCAL/CCP/hal_ccp.c: 396:     else{ }
[e :U 346 ]
{
}
[e :U 354 ]
[e :U 345 ]
"398
[; ;MCAL/CCP/hal_ccp.c: 398:     CCP_Mode_Timer_Select(_ccp_obj);
[e ( _CCP_Mode_Timer_Select (1 __ccp_obj ]
"400
[; ;MCAL/CCP/hal_ccp.c: 400:     return ret;
[e ) _ret ]
[e $UE 336  ]
"401
[; ;MCAL/CCP/hal_ccp.c: 401: }
[e :UE 336 ]
}
"403
[; ;MCAL/CCP/hal_ccp.c: 403: static Std_ReturnType CCP_Compare_Mode_Config(const ccp_st *_ccp_obj){
[v _CCP_Compare_Mode_Config `(uc ~T0 @X0 1 sf1`*CS277 ]
{
[e :U _CCP_Compare_Mode_Config ]
[v __ccp_obj `*CS277 ~T0 @X0 1 r1 ]
[f ]
"404
[; ;MCAL/CCP/hal_ccp.c: 404:     Std_ReturnType ret = (Std_ReturnType) 0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"406
[; ;MCAL/CCP/hal_ccp.c: 406:     if(CCP1_INST == _ccp_obj->ccp_inst){
[e $ ! == -> . `E3041 0 `ui -> . *U __ccp_obj 0 `ui 356  ]
{
"408
[; ;MCAL/CCP/hal_ccp.c: 408:         switch(_ccp_obj->ccp_mode_variant){
[e $U 358  ]
{
"409
[; ;MCAL/CCP/hal_ccp.c: 409:             case ((uint8)0x08) :
[e :U 359 ]
"410
[; ;MCAL/CCP/hal_ccp.c: 410:                 (CCP1CONbits.CCP1M = ((uint8)0x08));
[e = . . _CCP1CONbits 0 0 -> -> 8 `i `uc ]
"411
[; ;MCAL/CCP/hal_ccp.c: 411:                 break;
[e $U 357  ]
"412
[; ;MCAL/CCP/hal_ccp.c: 412:             case ((uint8)0x09) :
[e :U 360 ]
"413
[; ;MCAL/CCP/hal_ccp.c: 413:                 (CCP1CONbits.CCP1M = ((uint8)0x09));
[e = . . _CCP1CONbits 0 0 -> -> 9 `i `uc ]
"414
[; ;MCAL/CCP/hal_ccp.c: 414:                 break;
[e $U 357  ]
"415
[; ;MCAL/CCP/hal_ccp.c: 415:             case ((uint8)0x02) :
[e :U 361 ]
"416
[; ;MCAL/CCP/hal_ccp.c: 416:                 (CCP1CONbits.CCP1M = ((uint8)0x02));
[e = . . _CCP1CONbits 0 0 -> -> 2 `i `uc ]
"417
[; ;MCAL/CCP/hal_ccp.c: 417:                 break;
[e $U 357  ]
"418
[; ;MCAL/CCP/hal_ccp.c: 418:             case ((uint8)0x0A) :
[e :U 362 ]
"419
[; ;MCAL/CCP/hal_ccp.c: 419:                 (CCP1CONbits.CCP1M = ((uint8)0x0A));
[e = . . _CCP1CONbits 0 0 -> -> 10 `i `uc ]
"420
[; ;MCAL/CCP/hal_ccp.c: 420:                 break;
[e $U 357  ]
"421
[; ;MCAL/CCP/hal_ccp.c: 421:             case ((uint8)0x0B) :
[e :U 363 ]
"422
[; ;MCAL/CCP/hal_ccp.c: 422:                 (CCP1CONbits.CCP1M = ((uint8)0x0B));
[e = . . _CCP1CONbits 0 0 -> -> 11 `i `uc ]
"423
[; ;MCAL/CCP/hal_ccp.c: 423:                 break;
[e $U 357  ]
"424
[; ;MCAL/CCP/hal_ccp.c: 424:             default : ret = (Std_ReturnType) 0x00;
[e :U 364 ]
[e = _ret -> -> 0 `i `uc ]
"425
[; ;MCAL/CCP/hal_ccp.c: 425:         }
}
[e $U 357  ]
[e :U 358 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 8 `i `uc `i 359
 , $ -> -> -> 9 `i `uc `i 360
 , $ -> -> -> 2 `i `uc `i 361
 , $ -> -> -> 10 `i `uc `i 362
 , $ -> -> -> 11 `i `uc `i 363
 364 ]
[e :U 357 ]
"426
[; ;MCAL/CCP/hal_ccp.c: 426:     }
}
[e $U 365  ]
"427
[; ;MCAL/CCP/hal_ccp.c: 427:     else if(CCP2_INST == _ccp_obj->ccp_inst){
[e :U 356 ]
[e $ ! == -> . `E3041 1 `ui -> . *U __ccp_obj 0 `ui 366  ]
{
"429
[; ;MCAL/CCP/hal_ccp.c: 429:         switch(_ccp_obj->ccp_mode_variant){
[e $U 368  ]
{
"430
[; ;MCAL/CCP/hal_ccp.c: 430:             case ((uint8)0x08) :
[e :U 369 ]
"431
[; ;MCAL/CCP/hal_ccp.c: 431:                 (CCP2CONbits.CCP2M = ((uint8)0x08));
[e = . . _CCP2CONbits 0 0 -> -> 8 `i `uc ]
"432
[; ;MCAL/CCP/hal_ccp.c: 432:                 break;
[e $U 367  ]
"433
[; ;MCAL/CCP/hal_ccp.c: 433:             case ((uint8)0x09) :
[e :U 370 ]
"434
[; ;MCAL/CCP/hal_ccp.c: 434:                 (CCP2CONbits.CCP2M = ((uint8)0x09));
[e = . . _CCP2CONbits 0 0 -> -> 9 `i `uc ]
"435
[; ;MCAL/CCP/hal_ccp.c: 435:                 break;
[e $U 367  ]
"436
[; ;MCAL/CCP/hal_ccp.c: 436:             case ((uint8)0x02) :
[e :U 371 ]
"437
[; ;MCAL/CCP/hal_ccp.c: 437:                 (CCP2CONbits.CCP2M = ((uint8)0x02));
[e = . . _CCP2CONbits 0 0 -> -> 2 `i `uc ]
"438
[; ;MCAL/CCP/hal_ccp.c: 438:                 break;
[e $U 367  ]
"439
[; ;MCAL/CCP/hal_ccp.c: 439:             case ((uint8)0x0A) :
[e :U 372 ]
"440
[; ;MCAL/CCP/hal_ccp.c: 440:                 (CCP2CONbits.CCP2M = ((uint8)0x0A));
[e = . . _CCP2CONbits 0 0 -> -> 10 `i `uc ]
"441
[; ;MCAL/CCP/hal_ccp.c: 441:                 break;
[e $U 367  ]
"442
[; ;MCAL/CCP/hal_ccp.c: 442:             case ((uint8)0x0B) :
[e :U 373 ]
"443
[; ;MCAL/CCP/hal_ccp.c: 443:                 (CCP2CONbits.CCP2M = ((uint8)0x0B));
[e = . . _CCP2CONbits 0 0 -> -> 11 `i `uc ]
"444
[; ;MCAL/CCP/hal_ccp.c: 444:                 break;
[e $U 367  ]
"445
[; ;MCAL/CCP/hal_ccp.c: 445:             default : ret = (Std_ReturnType) 0x00;
[e :U 374 ]
[e = _ret -> -> 0 `i `uc ]
"446
[; ;MCAL/CCP/hal_ccp.c: 446:         }
}
[e $U 367  ]
[e :U 368 ]
[e [\ -> . *U __ccp_obj 2 `i , $ -> -> -> 8 `i `uc `i 369
 , $ -> -> -> 9 `i `uc `i 370
 , $ -> -> -> 2 `i `uc `i 371
 , $ -> -> -> 10 `i `uc `i 372
 , $ -> -> -> 11 `i `uc `i 373
 374 ]
[e :U 367 ]
"447
[; ;MCAL/CCP/hal_ccp.c: 447:     }
}
[e $U 375  ]
"448
[; ;MCAL/CCP/hal_ccp.c: 448:     else{ }
[e :U 366 ]
{
}
[e :U 375 ]
[e :U 365 ]
"450
[; ;MCAL/CCP/hal_ccp.c: 450:     CCP_Mode_Timer_Select(_ccp_obj);
[e ( _CCP_Mode_Timer_Select (1 __ccp_obj ]
"452
[; ;MCAL/CCP/hal_ccp.c: 452:     return ret;
[e ) _ret ]
[e $UE 355  ]
"453
[; ;MCAL/CCP/hal_ccp.c: 453: }
[e :UE 355 ]
}
