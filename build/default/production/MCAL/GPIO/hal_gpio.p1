Version 4.0 HI-TECH Software Intermediate Code
"1381 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1603
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1825
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2047
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2269
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"881
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"993
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1105
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1217
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1329
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"53
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"190
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"361
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"536
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"678
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"73 MCAL/GPIO/hal_gpio.h
[; ;MCAL/GPIO/hal_gpio.h: 73: {
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . pin port direction logic ]
"45 MCAL/GPIO/hal_gpio.c
[; ;MCAL/GPIO/hal_gpio.c: 45:     }
[c E2962 0 1 .. ]
[n E2962 . GPIO_DIRECTION_OUTPUT GPIO_DIRECTION_INPUT  ]
"82
[; ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _pin_config, logic_et logic)
[c E2958 0 1 .. ]
[n E2958 . GPIO_LOW GPIO_HIGH  ]
"187
[; ;MCAL/GPIO/hal_gpio.c: 187: Std_ReturnType GPIO_Port_Direction_Initialize(port_index_et port , uint8 direction)
[c E2976 0 1 2 3 4 .. ]
[n E2976 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"55 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"10 MCAL/GPIO/hal_gpio.c
[; ;MCAL/GPIO/hal_gpio.c: 10: volatile uint8 *tris_registers[]={&TRISA,&TRISB,&TRISC,&TRISD,&TRISE};
[v _tris_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_registers
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"12
[; ;MCAL/GPIO/hal_gpio.c: 12: volatile uint8 *lat_registers[]={&LATA,&LATB,&LATC,&LATD,&LATE};
[v _lat_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_registers
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"14
[; ;MCAL/GPIO/hal_gpio.c: 14: volatile uint8 *port_registers[]={&PORTA,&PORTB,&PORTC,&PORTD,&PORTE};
[v _port_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_registers
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"25
[; ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_config_st * _pin_config)
[v _GPIO_Pin_Direction_Initialize `(uc ~T0 @X0 1 ef1`*CS273 ]
"26
[; ;MCAL/GPIO/hal_gpio.c: 26: {
{
[e :U _GPIO_Pin_Direction_Initialize ]
"25
[; ;MCAL/GPIO/hal_gpio.c: 25: Std_ReturnType GPIO_Pin_Direction_Initialize (const pin_config_st * _pin_config)
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
"26
[; ;MCAL/GPIO/hal_gpio.c: 26: {
[f ]
"27
[; ;MCAL/GPIO/hal_gpio.c: 27:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"28
[; ;MCAL/GPIO/hal_gpio.c: 28:     if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 0 `i - -> 8 `i -> 1 `i 275  ]
"29
[; ;MCAL/GPIO/hal_gpio.c: 29:     {
{
"30
[; ;MCAL/GPIO/hal_gpio.c: 30:         ERRORSTATUS = (Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"31
[; ;MCAL/GPIO/hal_gpio.c: 31:     }
}
[e $U 276  ]
"32
[; ;MCAL/GPIO/hal_gpio.c: 32:     else
[e :U 275 ]
"33
[; ;MCAL/GPIO/hal_gpio.c: 33:     {
{
"34
[; ;MCAL/GPIO/hal_gpio.c: 34:     switch(_pin_config->direction)
[e $U 278  ]
"35
[; ;MCAL/GPIO/hal_gpio.c: 35:     {
{
"36
[; ;MCAL/GPIO/hal_gpio.c: 36:         case GPIO_DIRECTION_OUTPUT:
[e :U 279 ]
"37
[; ;MCAL/GPIO/hal_gpio.c: 37:          (*tris_registers[_pin_config->port]&=~( (uint8)1<<_pin_config->pin ));
[e =& *U *U + &U _tris_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _tris_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 0 `i `uc ]
"38
[; ;MCAL/GPIO/hal_gpio.c: 38:             break;
[e $U 277  ]
"39
[; ;MCAL/GPIO/hal_gpio.c: 39:         case GPIO_DIRECTION_INPUT:
[e :U 280 ]
"40
[; ;MCAL/GPIO/hal_gpio.c: 40:           (*tris_registers[_pin_config->port]|=( (uint8)1<<_pin_config->pin ));
[e =| *U *U + &U _tris_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _tris_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 0 `i `uc ]
"41
[; ;MCAL/GPIO/hal_gpio.c: 41:             break;
[e $U 277  ]
"43
[; ;MCAL/GPIO/hal_gpio.c: 43:         default:ERRORSTATUS=(Std_ReturnType) 0x00;
[e :U 281 ]
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"45
[; ;MCAL/GPIO/hal_gpio.c: 45:     }
}
[e $U 277  ]
[e :U 278 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2962 0 279
 , $ . `E2962 1 280
 281 ]
[e :U 277 ]
"46
[; ;MCAL/GPIO/hal_gpio.c: 46:      }
}
[e :U 276 ]
"47
[; ;MCAL/GPIO/hal_gpio.c: 47:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 274  ]
"48
[; ;MCAL/GPIO/hal_gpio.c: 48: }
[e :UE 274 ]
}
"58
[; ;MCAL/GPIO/hal_gpio.c: 58: Std_ReturnType GPIO_Pin_Get_Direction_Status (const pin_config_st * _pin_config, direction_et *direction_status)
[v _GPIO_Pin_Get_Direction_Status `(uc ~T0 @X0 1 ef2`*CS273`*E2962 ]
"59
[; ;MCAL/GPIO/hal_gpio.c: 59: {
{
[e :U _GPIO_Pin_Get_Direction_Status ]
"58
[; ;MCAL/GPIO/hal_gpio.c: 58: Std_ReturnType GPIO_Pin_Get_Direction_Status (const pin_config_st * _pin_config, direction_et *direction_status)
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _direction_status `*E2962 ~T0 @X0 1 r2 ]
"59
[; ;MCAL/GPIO/hal_gpio.c: 59: {
[f ]
"60
[; ;MCAL/GPIO/hal_gpio.c: 60:      Std_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"61
[; ;MCAL/GPIO/hal_gpio.c: 61:      if ( ((void*)0)==_pin_config||((void*)0)==direction_status||_pin_config->pin> 8 -1)
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 __pin_config == -> -> -> 0 `i `*v `*E2962 _direction_status > -> . *U __pin_config 0 `i - -> 8 `i -> 1 `i 283  ]
"62
[; ;MCAL/GPIO/hal_gpio.c: 62:     {
{
"63
[; ;MCAL/GPIO/hal_gpio.c: 63:         ERRORSTATUS = (Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"64
[; ;MCAL/GPIO/hal_gpio.c: 64:     }
}
[e $U 284  ]
"65
[; ;MCAL/GPIO/hal_gpio.c: 65:     else
[e :U 283 ]
"66
[; ;MCAL/GPIO/hal_gpio.c: 66:     {
{
"67
[; ;MCAL/GPIO/hal_gpio.c: 67:        *direction_status= (( *tris_registers[_pin_config->port]>>_pin_config->pin )&(uint8)1);
[e = *U _direction_status -> & >> -> *U *U + &U _tris_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _tris_registers `ui `ux `i -> . *U __pin_config 0 `i -> -> -> 1 `i `uc `i `E2962 ]
"69
[; ;MCAL/GPIO/hal_gpio.c: 69:     }
}
[e :U 284 ]
"70
[; ;MCAL/GPIO/hal_gpio.c: 70:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 282  ]
"72
[; ;MCAL/GPIO/hal_gpio.c: 72: }
[e :UE 282 ]
}
"82
[; ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _pin_config, logic_et logic)
[v _GPIO_Pin_Write_Logic `(uc ~T0 @X0 1 ef2`*CS273`E2958 ]
"83
[; ;MCAL/GPIO/hal_gpio.c: 83: {
{
[e :U _GPIO_Pin_Write_Logic ]
"82
[; ;MCAL/GPIO/hal_gpio.c: 82: Std_ReturnType GPIO_Pin_Write_Logic (const pin_config_st * _pin_config, logic_et logic)
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `E2958 ~T0 @X0 1 r2 ]
"83
[; ;MCAL/GPIO/hal_gpio.c: 83: {
[f ]
"84
[; ;MCAL/GPIO/hal_gpio.c: 84:       Std_ReturnType ERRORSTATUS = (Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"85
[; ;MCAL/GPIO/hal_gpio.c: 85:      if ( ((void*)0)==_pin_config||_pin_config->pin> 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 0 `i - -> 8 `i -> 1 `i 286  ]
"86
[; ;MCAL/GPIO/hal_gpio.c: 86:     {
{
"87
[; ;MCAL/GPIO/hal_gpio.c: 87:         ERRORSTATUS = (Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"88
[; ;MCAL/GPIO/hal_gpio.c: 88:     }
}
[e $U 287  ]
"89
[; ;MCAL/GPIO/hal_gpio.c: 89:     else
[e :U 286 ]
"90
[; ;MCAL/GPIO/hal_gpio.c: 90:     {
{
"91
[; ;MCAL/GPIO/hal_gpio.c: 91:          switch(logic)
[e $U 289  ]
"92
[; ;MCAL/GPIO/hal_gpio.c: 92:     {
{
"93
[; ;MCAL/GPIO/hal_gpio.c: 93:         case GPIO_LOW:
[e :U 290 ]
"94
[; ;MCAL/GPIO/hal_gpio.c: 94:          (*lat_registers[_pin_config->port]&=~( (uint8)1<<_pin_config->pin ));
[e =& *U *U + &U _lat_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _lat_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 0 `i `uc ]
"95
[; ;MCAL/GPIO/hal_gpio.c: 95:             break;
[e $U 288  ]
"96
[; ;MCAL/GPIO/hal_gpio.c: 96:         case GPIO_HIGH:
[e :U 291 ]
"97
[; ;MCAL/GPIO/hal_gpio.c: 97:           (*lat_registers[_pin_config->port]|=( (uint8)1<<_pin_config->pin ));
[e =| *U *U + &U _lat_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _lat_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 0 `i `uc ]
"98
[; ;MCAL/GPIO/hal_gpio.c: 98:             break;
[e $U 288  ]
"100
[; ;MCAL/GPIO/hal_gpio.c: 100:         default:ERRORSTATUS = (Std_ReturnType) 0x00;
[e :U 292 ]
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"101
[; ;MCAL/GPIO/hal_gpio.c: 101:      }
}
[e $U 288  ]
[e :U 289 ]
[e [\ -> _logic `ui , $ -> . `E2958 0 `ui 290
 , $ -> . `E2958 1 `ui 291
 292 ]
[e :U 288 ]
"103
[; ;MCAL/GPIO/hal_gpio.c: 103:     }
}
[e :U 287 ]
"104
[; ;MCAL/GPIO/hal_gpio.c: 104:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 285  ]
"105
[; ;MCAL/GPIO/hal_gpio.c: 105: }
[e :UE 285 ]
}
"114
[; ;MCAL/GPIO/hal_gpio.c: 114: Std_ReturnType GPIO_Pin_Read_Logic (const pin_config_st * _pin_config,logic_et *logic)
[v _GPIO_Pin_Read_Logic `(uc ~T0 @X0 1 ef2`*CS273`*E2958 ]
"115
[; ;MCAL/GPIO/hal_gpio.c: 115: {
{
[e :U _GPIO_Pin_Read_Logic ]
"114
[; ;MCAL/GPIO/hal_gpio.c: 114: Std_ReturnType GPIO_Pin_Read_Logic (const pin_config_st * _pin_config,logic_et *logic)
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `*E2958 ~T0 @X0 1 r2 ]
"115
[; ;MCAL/GPIO/hal_gpio.c: 115: {
[f ]
"116
[; ;MCAL/GPIO/hal_gpio.c: 116:       Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"117
[; ;MCAL/GPIO/hal_gpio.c: 117:           if ( ((void*)0)==_pin_config||((void*)0)==logic||_pin_config->pin> 8 -1)
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 __pin_config == -> -> -> 0 `i `*v `*E2958 _logic > -> . *U __pin_config 0 `i - -> 8 `i -> 1 `i 294  ]
"118
[; ;MCAL/GPIO/hal_gpio.c: 118:     {
{
"119
[; ;MCAL/GPIO/hal_gpio.c: 119:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"120
[; ;MCAL/GPIO/hal_gpio.c: 120:     }
}
[e $U 295  ]
"121
[; ;MCAL/GPIO/hal_gpio.c: 121:     else
[e :U 294 ]
"122
[; ;MCAL/GPIO/hal_gpio.c: 122:     {
{
"123
[; ;MCAL/GPIO/hal_gpio.c: 123:          *logic= (( *port_registers[_pin_config->port]>>_pin_config->pin )&(uint8)1);
[e = *U _logic -> & >> -> *U *U + &U _port_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _port_registers `ui `ux `i -> . *U __pin_config 0 `i -> -> -> 1 `i `uc `i `E2958 ]
"124
[; ;MCAL/GPIO/hal_gpio.c: 124:     }
}
[e :U 295 ]
"125
[; ;MCAL/GPIO/hal_gpio.c: 125:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 293  ]
"126
[; ;MCAL/GPIO/hal_gpio.c: 126: }
[e :UE 293 ]
}
"135
[; ;MCAL/GPIO/hal_gpio.c: 135: Std_ReturnType GPIO_Pin_Toggle_Logic (const pin_config_st * _pin_config)
[v _GPIO_Pin_Toggle_Logic `(uc ~T0 @X0 1 ef1`*CS273 ]
"136
[; ;MCAL/GPIO/hal_gpio.c: 136: {
{
[e :U _GPIO_Pin_Toggle_Logic ]
"135
[; ;MCAL/GPIO/hal_gpio.c: 135: Std_ReturnType GPIO_Pin_Toggle_Logic (const pin_config_st * _pin_config)
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
"136
[; ;MCAL/GPIO/hal_gpio.c: 136: {
[f ]
"137
[; ;MCAL/GPIO/hal_gpio.c: 137:      Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"138
[; ;MCAL/GPIO/hal_gpio.c: 138:           if ( ((void*)0)==_pin_config)
[e $ ! == -> -> -> 0 `i `*v `*CS273 __pin_config 297  ]
"139
[; ;MCAL/GPIO/hal_gpio.c: 139:     {
{
"140
[; ;MCAL/GPIO/hal_gpio.c: 140:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"141
[; ;MCAL/GPIO/hal_gpio.c: 141:     }
}
[e $U 298  ]
"142
[; ;MCAL/GPIO/hal_gpio.c: 142:     else
[e :U 297 ]
"143
[; ;MCAL/GPIO/hal_gpio.c: 143:     {
{
"144
[; ;MCAL/GPIO/hal_gpio.c: 144:       (*lat_registers[_pin_config->port]^=( (uint8)1<<_pin_config->pin ));
[e =^ *U *U + &U _lat_registers * -> . *U __pin_config 1 `ux -> -> # *U &U _lat_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 0 `i `uc ]
"145
[; ;MCAL/GPIO/hal_gpio.c: 145:     }
}
[e :U 298 ]
"146
[; ;MCAL/GPIO/hal_gpio.c: 146:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 296  ]
"147
[; ;MCAL/GPIO/hal_gpio.c: 147: }
[e :UE 296 ]
}
"158
[; ;MCAL/GPIO/hal_gpio.c: 158: Std_ReturnType GPIO_Pin_Initialize(const pin_config_st * _pin_config)
[v _GPIO_Pin_Initialize `(uc ~T0 @X0 1 ef1`*CS273 ]
"159
[; ;MCAL/GPIO/hal_gpio.c: 159: {
{
[e :U _GPIO_Pin_Initialize ]
"158
[; ;MCAL/GPIO/hal_gpio.c: 158: Std_ReturnType GPIO_Pin_Initialize(const pin_config_st * _pin_config)
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
"159
[; ;MCAL/GPIO/hal_gpio.c: 159: {
[f ]
"160
[; ;MCAL/GPIO/hal_gpio.c: 160:      Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"161
[; ;MCAL/GPIO/hal_gpio.c: 161:           if ( ((void*)0)==_pin_config)
[e $ ! == -> -> -> 0 `i `*v `*CS273 __pin_config 300  ]
"162
[; ;MCAL/GPIO/hal_gpio.c: 162:     {
{
"163
[; ;MCAL/GPIO/hal_gpio.c: 163:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"164
[; ;MCAL/GPIO/hal_gpio.c: 164:     }
}
[e $U 301  ]
"165
[; ;MCAL/GPIO/hal_gpio.c: 165:     else
[e :U 300 ]
"166
[; ;MCAL/GPIO/hal_gpio.c: 166:     {
{
"167
[; ;MCAL/GPIO/hal_gpio.c: 167:          ERRORSTATUS=GPIO_Pin_Direction_Initialize(_pin_config);
[e = _ERRORSTATUS ( _GPIO_Pin_Direction_Initialize (1 __pin_config ]
"168
[; ;MCAL/GPIO/hal_gpio.c: 168:          ERRORSTATUS=GPIO_Pin_Write_Logic(_pin_config,_pin_config->logic);
[e = _ERRORSTATUS ( _GPIO_Pin_Write_Logic (2 , __pin_config -> . *U __pin_config 3 `E2958 ]
"170
[; ;MCAL/GPIO/hal_gpio.c: 170:     }
}
[e :U 301 ]
"171
[; ;MCAL/GPIO/hal_gpio.c: 171:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 299  ]
"172
[; ;MCAL/GPIO/hal_gpio.c: 172: }
[e :UE 299 ]
}
"187
[; ;MCAL/GPIO/hal_gpio.c: 187: Std_ReturnType GPIO_Port_Direction_Initialize(port_index_et port , uint8 direction)
[v _GPIO_Port_Direction_Initialize `(uc ~T0 @X0 1 ef2`E2976`uc ]
"188
[; ;MCAL/GPIO/hal_gpio.c: 188: {
{
[e :U _GPIO_Port_Direction_Initialize ]
"187
[; ;MCAL/GPIO/hal_gpio.c: 187: Std_ReturnType GPIO_Port_Direction_Initialize(port_index_et port , uint8 direction)
[v _port `E2976 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
"188
[; ;MCAL/GPIO/hal_gpio.c: 188: {
[f ]
"189
[; ;MCAL/GPIO/hal_gpio.c: 189:      Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"190
[; ;MCAL/GPIO/hal_gpio.c: 190:      if ( 5 -1<port)
[e $ ! < -> - -> 5 `i -> 1 `i `ui -> _port `ui 303  ]
"191
[; ;MCAL/GPIO/hal_gpio.c: 191:     {
{
"192
[; ;MCAL/GPIO/hal_gpio.c: 192:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"193
[; ;MCAL/GPIO/hal_gpio.c: 193:     }
}
[e $U 304  ]
"194
[; ;MCAL/GPIO/hal_gpio.c: 194:      else
[e :U 303 ]
"195
[; ;MCAL/GPIO/hal_gpio.c: 195:      {
{
"196
[; ;MCAL/GPIO/hal_gpio.c: 196:          *tris_registers[port]=direction;
[e = *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux _direction ]
"197
[; ;MCAL/GPIO/hal_gpio.c: 197:      }
}
[e :U 304 ]
"198
[; ;MCAL/GPIO/hal_gpio.c: 198:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 302  ]
"199
[; ;MCAL/GPIO/hal_gpio.c: 199: }
[e :UE 302 ]
}
"209
[; ;MCAL/GPIO/hal_gpio.c: 209: Std_ReturnType GPIO_Port_Get_Direction_Status (port_index_et port, uint8 *direction_status)
[v _GPIO_Port_Get_Direction_Status `(uc ~T0 @X0 1 ef2`E2976`*uc ]
"210
[; ;MCAL/GPIO/hal_gpio.c: 210: {
{
[e :U _GPIO_Port_Get_Direction_Status ]
"209
[; ;MCAL/GPIO/hal_gpio.c: 209: Std_ReturnType GPIO_Port_Get_Direction_Status (port_index_et port, uint8 *direction_status)
[v _port `E2976 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
"210
[; ;MCAL/GPIO/hal_gpio.c: 210: {
[f ]
"211
[; ;MCAL/GPIO/hal_gpio.c: 211:      Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"212
[; ;MCAL/GPIO/hal_gpio.c: 212:           if ((5 -1<port)||( ((void*)0)==direction_status))
[e $ ! || < -> - -> 5 `i -> 1 `i `ui -> _port `ui == -> -> -> 0 `i `*v `*uc _direction_status 306  ]
"213
[; ;MCAL/GPIO/hal_gpio.c: 213:     {
{
"214
[; ;MCAL/GPIO/hal_gpio.c: 214:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"215
[; ;MCAL/GPIO/hal_gpio.c: 215:     }
}
[e $U 307  ]
"216
[; ;MCAL/GPIO/hal_gpio.c: 216:     else
[e :U 306 ]
"217
[; ;MCAL/GPIO/hal_gpio.c: 217:     {
{
"218
[; ;MCAL/GPIO/hal_gpio.c: 218:        *direction_status=*tris_registers[port];
[e = *U _direction_status *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux ]
"219
[; ;MCAL/GPIO/hal_gpio.c: 219:     }
}
[e :U 307 ]
"221
[; ;MCAL/GPIO/hal_gpio.c: 221:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 305  ]
"222
[; ;MCAL/GPIO/hal_gpio.c: 222: }
[e :UE 305 ]
}
"232
[; ;MCAL/GPIO/hal_gpio.c: 232: Std_ReturnType GPIO_Port_Write_Logic (port_index_et port,uint8 logic)
[v _GPIO_Port_Write_Logic `(uc ~T0 @X0 1 ef2`E2976`uc ]
"233
[; ;MCAL/GPIO/hal_gpio.c: 233: {
{
[e :U _GPIO_Port_Write_Logic ]
"232
[; ;MCAL/GPIO/hal_gpio.c: 232: Std_ReturnType GPIO_Port_Write_Logic (port_index_et port,uint8 logic)
[v _port `E2976 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
"233
[; ;MCAL/GPIO/hal_gpio.c: 233: {
[f ]
"234
[; ;MCAL/GPIO/hal_gpio.c: 234:        Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"235
[; ;MCAL/GPIO/hal_gpio.c: 235:           if ((5 -1<port))
[e $ ! < -> - -> 5 `i -> 1 `i `ui -> _port `ui 309  ]
"236
[; ;MCAL/GPIO/hal_gpio.c: 236:          {
{
"237
[; ;MCAL/GPIO/hal_gpio.c: 237:               ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"238
[; ;MCAL/GPIO/hal_gpio.c: 238:          }
}
[e $U 310  ]
"239
[; ;MCAL/GPIO/hal_gpio.c: 239:           else
[e :U 309 ]
"240
[; ;MCAL/GPIO/hal_gpio.c: 240:           {
{
"241
[; ;MCAL/GPIO/hal_gpio.c: 241:               *lat_registers[port]=logic;
[e = *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux _logic ]
"242
[; ;MCAL/GPIO/hal_gpio.c: 242:           }
}
[e :U 310 ]
"243
[; ;MCAL/GPIO/hal_gpio.c: 243:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 308  ]
"244
[; ;MCAL/GPIO/hal_gpio.c: 244: }
[e :UE 308 ]
}
"254
[; ;MCAL/GPIO/hal_gpio.c: 254: Std_ReturnType GPIO_Port_Read_Logic (port_index_et port,uint8 *logic)
[v _GPIO_Port_Read_Logic `(uc ~T0 @X0 1 ef2`E2976`*uc ]
"255
[; ;MCAL/GPIO/hal_gpio.c: 255: {
{
[e :U _GPIO_Port_Read_Logic ]
"254
[; ;MCAL/GPIO/hal_gpio.c: 254: Std_ReturnType GPIO_Port_Read_Logic (port_index_et port,uint8 *logic)
[v _port `E2976 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
"255
[; ;MCAL/GPIO/hal_gpio.c: 255: {
[f ]
"256
[; ;MCAL/GPIO/hal_gpio.c: 256:      Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"257
[; ;MCAL/GPIO/hal_gpio.c: 257:           if (( ((void*)0)==logic)||(5 -1<port))
[e $ ! || == -> -> -> 0 `i `*v `*uc _logic < -> - -> 5 `i -> 1 `i `ui -> _port `ui 312  ]
"258
[; ;MCAL/GPIO/hal_gpio.c: 258:     {
{
"259
[; ;MCAL/GPIO/hal_gpio.c: 259:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"260
[; ;MCAL/GPIO/hal_gpio.c: 260:     }
}
[e $U 313  ]
"261
[; ;MCAL/GPIO/hal_gpio.c: 261:     else
[e :U 312 ]
"262
[; ;MCAL/GPIO/hal_gpio.c: 262:     {
{
"263
[; ;MCAL/GPIO/hal_gpio.c: 263:           *logic=*port_registers[port];
[e = *U _logic *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux ]
"264
[; ;MCAL/GPIO/hal_gpio.c: 264:     }
}
[e :U 313 ]
"265
[; ;MCAL/GPIO/hal_gpio.c: 265:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 311  ]
"266
[; ;MCAL/GPIO/hal_gpio.c: 266: }
[e :UE 311 ]
}
"275
[; ;MCAL/GPIO/hal_gpio.c: 275: Std_ReturnType GPIO_Port_Toggle_Logic (port_index_et port)
[v _GPIO_Port_Toggle_Logic `(uc ~T0 @X0 1 ef1`E2976 ]
"276
[; ;MCAL/GPIO/hal_gpio.c: 276: {
{
[e :U _GPIO_Port_Toggle_Logic ]
"275
[; ;MCAL/GPIO/hal_gpio.c: 275: Std_ReturnType GPIO_Port_Toggle_Logic (port_index_et port)
[v _port `E2976 ~T0 @X0 1 r1 ]
"276
[; ;MCAL/GPIO/hal_gpio.c: 276: {
[f ]
"277
[; ;MCAL/GPIO/hal_gpio.c: 277:        Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"278
[; ;MCAL/GPIO/hal_gpio.c: 278:           if (5 -1<port)
[e $ ! < -> - -> 5 `i -> 1 `i `ui -> _port `ui 315  ]
"279
[; ;MCAL/GPIO/hal_gpio.c: 279:     {
{
"280
[; ;MCAL/GPIO/hal_gpio.c: 280:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"281
[; ;MCAL/GPIO/hal_gpio.c: 281:     }
}
[e $U 316  ]
"282
[; ;MCAL/GPIO/hal_gpio.c: 282:     else
[e :U 315 ]
"283
[; ;MCAL/GPIO/hal_gpio.c: 283:     {
{
"284
[; ;MCAL/GPIO/hal_gpio.c: 284:           *lat_registers[port]^=(uint8)0xff;
[e =^ *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux -> -> -> 255 `i `uc `uc ]
"285
[; ;MCAL/GPIO/hal_gpio.c: 285:     }
}
[e :U 316 ]
"286
[; ;MCAL/GPIO/hal_gpio.c: 286:      return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 314  ]
"287
[; ;MCAL/GPIO/hal_gpio.c: 287: }
[e :UE 314 ]
}
