Version 4.0 HI-TECH Software Intermediate Code
"23 MCAL/ADC/mcal_adc.c
[; ;MCAL/ADC/mcal_adc.c: 23: Std_ReturnType ADC_Init(const adc_config_st* _adc)
[c E3027 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E3027 . ADC_CHANEL_AN0 ADC_CHANEL_AN1 ADC_CHANEL_AN2 ADC_CHANEL_AN3 ADC_CHANEL_AN4 ADC_CHANEL_AN5 ADC_CHANEL_AN6 ADC_CHANEL_AN7 ADC_CHANEL_AN8 ADC_CHANEL_AN9 ADC_CHANEL_AN10 ADC_CHANEL_AN11 ADC_CHANEL_AN12  ]
[c E3042 0 1 2 3 4 5 6 7 .. ]
[n E3042 . ADC_0_TAD ADC_2_TAD ADC_4_TAD ADC_6_TAD ADC_8_TAD ADC_12_TAD ADC_16_TAD ADC_20_TAD  ]
[c E3052 0 1 2 3 4 5 6 .. ]
[n E3052 . ADC_CONVERSION_CLOCK_FOSC_DIV_2 ADC_CONVERSION_CLOCK_FOSC_DIV_8 ADC_CONVERSION_CLOCK_FOSC_DIV_32 ADC_CONVERSION_CLOCK_FOSC_DIV_FRC ADC_CONVERSION_CLOCK_FOSC_DIV_4 ADC_CONVERSION_CLOCK_FOSC_DIV_16 ADC_CONVERSION_CLOCK_FOSC_DIV_64  ]
[c E3061 0 1 .. ]
[n E3061 . ADC_RESULT_LEFT ADC_RESULT_RIGHT  ]
[c E3065 0 1 .. ]
[n E3065 . ADC_VOLTAGE_REFERANCE_INTERNAL ADC_VOLTAGE_REFERANCE_EXTERNAL  ]
"150 MCAL/ADC/mcal_adc.h
[; ;MCAL/ADC/mcal_adc.h: 150: {
[s S274 `E3027 1 `E3042 1 `E3052 1 `E3061 1 `E3065 1 ]
[n S274 . adc_channel acquisition_time conversion_clock result_format voltage_referance ]
"4536 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[s S182 :1 `uc 1 :1 `uc 1 ]
[n S182 . . GO_NOT_DONE ]
"4540
[s S183 :1 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S183 . ADON GO_nDONE CHS ]
"4545
[s S184 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S184 . . GO CHS0 CHS1 CHS2 CHS3 ]
"4553
[s S185 :1 `uc 1 :1 `uc 1 ]
[n S185 . . DONE ]
"4557
[s S186 :1 `uc 1 :1 `uc 1 ]
[n S186 . . NOT_DONE ]
"4561
[s S187 :1 `uc 1 :1 `uc 1 ]
[n S187 . . nDONE ]
"4565
[s S188 :1 `uc 1 :1 `uc 1 ]
[n S188 . . GO_DONE ]
"4569
[s S189 :1 `uc 1 :1 `uc 1 ]
[n S189 . . GODONE ]
"4535
[u S181 `S182 1 `S183 1 `S184 1 `S185 1 `S186 1 `S187 1 `S188 1 `S189 1 ]
[n S181 . . . . . . . . . ]
"4574
[v _ADCON0bits `VS181 ~T0 @X0 0 e@4034 ]
"4380
[s S175 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S175 . ADCS ACQT . ADFM ]
"4386
[s S176 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S176 . ADCS0 ADCS1 ADCS2 ACQT0 ACQT1 ACQT2 ]
"4379
[u S174 `S175 1 `S176 1 ]
[n S174 . . . ]
"4395
[v _ADCON2bits `VS174 ~T0 @X0 0 e@4032 ]
"9 MCAL/ADC/mcal_adc.c
[; ;MCAL/ADC/mcal_adc.c: 9: static Std_ReturnType adc_channel_pin_config_as_input(const adc_channel_select_et _channel);
[v _adc_channel_pin_config_as_input `(uc ~T0 @X0 0 sf1`CE3027 ]
"10
[; ;MCAL/ADC/mcal_adc.c: 10: static Std_ReturnType adc_select_result_formate(const adc_config_st* _adc);
[v _adc_select_result_formate `(uc ~T0 @X0 0 sf1`*CS274 ]
"11
[; ;MCAL/ADC/mcal_adc.c: 11: static Std_ReturnType adc_select_voltage_reference(const adc_config_st* _adc);
[v _adc_select_voltage_reference `(uc ~T0 @X0 0 sf1`*CS274 ]
"168
[; ;MCAL/ADC/mcal_adc.c: 168: Std_ReturnType ADC_Is_Conversion_Done(const adc_config_st* _adc,adc_conversion_status_et*_status)
[c E3069 0 1 .. ]
[n E3069 . ADC_CONVERSION_STATUS_DONE ADC_CONVERSION_STATUS_INPROGRESS  ]
"4663 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[v _ADRESH `Vuc ~T0 @X0 0 e@4036 ]
"4656
[v _ADRESL `Vuc ~T0 @X0 0 e@4035 ]
[v F2926 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\builtins.h
[v __delay `JF2926 ~T0 @X0 0 e ]
[p i __delay ]
"1381 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"2269
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"1603
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"4451
[s S178 :4 `uc 1 :2 `uc 1 ]
[n S178 . PCFG VCFG ]
"4455
[s S179 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S179 . PCFG0 PCFG1 PCFG2 PCFG3 VCFG0 VCFG1 ]
"4463
[s S180 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S180 . . CHSN3 VCFG01 VCFG11 ]
"4450
[u S177 `S178 1 `S179 1 `S180 1 ]
[n S177 . . . . ]
"4470
[v _ADCON1bits `VS177 ~T0 @X0 0 e@4033 ]
"55 C:/Users/ahmed radwan/.mchp_packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"23 MCAL/ADC/mcal_adc.c
[; ;MCAL/ADC/mcal_adc.c: 23: Std_ReturnType ADC_Init(const adc_config_st* _adc)
[v _ADC_Init `(uc ~T0 @X0 1 ef1`*CS274 ]
"24
[; ;MCAL/ADC/mcal_adc.c: 24: {
{
[e :U _ADC_Init ]
"23
[; ;MCAL/ADC/mcal_adc.c: 23: Std_ReturnType ADC_Init(const adc_config_st* _adc)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
"24
[; ;MCAL/ADC/mcal_adc.c: 24: {
[f ]
"25
[; ;MCAL/ADC/mcal_adc.c: 25:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"26
[; ;MCAL/ADC/mcal_adc.c: 26:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 276  ]
"27
[; ;MCAL/ADC/mcal_adc.c: 27:     {
{
"28
[; ;MCAL/ADC/mcal_adc.c: 28:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"29
[; ;MCAL/ADC/mcal_adc.c: 29:     }
}
[e $U 277  ]
"30
[; ;MCAL/ADC/mcal_adc.c: 30:     else
[e :U 276 ]
"31
[; ;MCAL/ADC/mcal_adc.c: 31:     {
{
"33
[; ;MCAL/ADC/mcal_adc.c: 33:           (ADCON0bits.ADON=0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"39
[; ;MCAL/ADC/mcal_adc.c: 39:          ADCON2bits.ACQT=_adc->acquisition_time;
[e = . . _ADCON2bits 0 1 -> . *U __adc 1 `uc ]
"42
[; ;MCAL/ADC/mcal_adc.c: 42:          ADCON2bits.ADCS=_adc->conversion_clock;
[e = . . _ADCON2bits 0 0 -> . *U __adc 2 `uc ]
"45
[; ;MCAL/ADC/mcal_adc.c: 45:          ADCON0bits.CHS=_adc->adc_channel;
[e = . . _ADCON0bits 1 2 -> . *U __adc 0 `uc ]
"48
[; ;MCAL/ADC/mcal_adc.c: 48:         adc_channel_pin_config_as_input(_adc->adc_channel);
[e ( _adc_channel_pin_config_as_input (1 . *U __adc 0 ]
"51
[; ;MCAL/ADC/mcal_adc.c: 51:          adc_select_result_formate(_adc);
[e ( _adc_select_result_formate (1 __adc ]
"54
[; ;MCAL/ADC/mcal_adc.c: 54:          adc_select_voltage_reference(_adc);
[e ( _adc_select_voltage_reference (1 __adc ]
"83
[; ;MCAL/ADC/mcal_adc.c: 83:          (ADCON0bits.ADON=1);
[e = . . _ADCON0bits 1 0 -> -> 1 `i `uc ]
"84
[; ;MCAL/ADC/mcal_adc.c: 84:     }
}
[e :U 277 ]
"85
[; ;MCAL/ADC/mcal_adc.c: 85:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 275  ]
"86
[; ;MCAL/ADC/mcal_adc.c: 86: }
[e :UE 275 ]
}
"94
[; ;MCAL/ADC/mcal_adc.c: 94: Std_ReturnType ADC_DeInit(const adc_config_st* _adc)
[v _ADC_DeInit `(uc ~T0 @X0 1 ef1`*CS274 ]
"95
[; ;MCAL/ADC/mcal_adc.c: 95: {
{
[e :U _ADC_DeInit ]
"94
[; ;MCAL/ADC/mcal_adc.c: 94: Std_ReturnType ADC_DeInit(const adc_config_st* _adc)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
"95
[; ;MCAL/ADC/mcal_adc.c: 95: {
[f ]
"96
[; ;MCAL/ADC/mcal_adc.c: 96:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"97
[; ;MCAL/ADC/mcal_adc.c: 97:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 279  ]
"98
[; ;MCAL/ADC/mcal_adc.c: 98:     {
{
"99
[; ;MCAL/ADC/mcal_adc.c: 99:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"100
[; ;MCAL/ADC/mcal_adc.c: 100:     }
}
[e $U 280  ]
"101
[; ;MCAL/ADC/mcal_adc.c: 101:     else
[e :U 279 ]
"102
[; ;MCAL/ADC/mcal_adc.c: 102:     {
{
"104
[; ;MCAL/ADC/mcal_adc.c: 104:         (ADCON0bits.ADON=0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"110
[; ;MCAL/ADC/mcal_adc.c: 110:     }
}
[e :U 280 ]
"111
[; ;MCAL/ADC/mcal_adc.c: 111:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 278  ]
"112
[; ;MCAL/ADC/mcal_adc.c: 112: }
[e :UE 278 ]
}
"121
[; ;MCAL/ADC/mcal_adc.c: 121: Std_ReturnType ADC_select_channel(const adc_config_st* _adc,adc_channel_select_et _channel)
[v _ADC_select_channel `(uc ~T0 @X0 1 ef2`*CS274`E3027 ]
"122
[; ;MCAL/ADC/mcal_adc.c: 122: {
{
[e :U _ADC_select_channel ]
"121
[; ;MCAL/ADC/mcal_adc.c: 121: Std_ReturnType ADC_select_channel(const adc_config_st* _adc,adc_channel_select_et _channel)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v __channel `E3027 ~T0 @X0 1 r2 ]
"122
[; ;MCAL/ADC/mcal_adc.c: 122: {
[f ]
"123
[; ;MCAL/ADC/mcal_adc.c: 123:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"124
[; ;MCAL/ADC/mcal_adc.c: 124:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 282  ]
"125
[; ;MCAL/ADC/mcal_adc.c: 125:     {
{
"126
[; ;MCAL/ADC/mcal_adc.c: 126:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"127
[; ;MCAL/ADC/mcal_adc.c: 127:     }
}
[e $U 283  ]
"128
[; ;MCAL/ADC/mcal_adc.c: 128:     else
[e :U 282 ]
"129
[; ;MCAL/ADC/mcal_adc.c: 129:     {
{
"131
[; ;MCAL/ADC/mcal_adc.c: 131:        ADCON0bits.CHS=_channel;
[e = . . _ADCON0bits 1 2 -> __channel `uc ]
"134
[; ;MCAL/ADC/mcal_adc.c: 134:        adc_channel_pin_config_as_input(_channel);
[e ( _adc_channel_pin_config_as_input (1 __channel ]
"135
[; ;MCAL/ADC/mcal_adc.c: 135:     }
}
[e :U 283 ]
"136
[; ;MCAL/ADC/mcal_adc.c: 136:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 281  ]
"137
[; ;MCAL/ADC/mcal_adc.c: 137: }
[e :UE 281 ]
}
"145
[; ;MCAL/ADC/mcal_adc.c: 145: Std_ReturnType ADC_Start_Conversion(const adc_config_st* _adc)
[v _ADC_Start_Conversion `(uc ~T0 @X0 1 ef1`*CS274 ]
"146
[; ;MCAL/ADC/mcal_adc.c: 146: {
{
[e :U _ADC_Start_Conversion ]
"145
[; ;MCAL/ADC/mcal_adc.c: 145: Std_ReturnType ADC_Start_Conversion(const adc_config_st* _adc)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
"146
[; ;MCAL/ADC/mcal_adc.c: 146: {
[f ]
"147
[; ;MCAL/ADC/mcal_adc.c: 147:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"148
[; ;MCAL/ADC/mcal_adc.c: 148:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 285  ]
"149
[; ;MCAL/ADC/mcal_adc.c: 149:     {
{
"150
[; ;MCAL/ADC/mcal_adc.c: 150:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"151
[; ;MCAL/ADC/mcal_adc.c: 151:     }
}
[e $U 286  ]
"152
[; ;MCAL/ADC/mcal_adc.c: 152:     else
[e :U 285 ]
"153
[; ;MCAL/ADC/mcal_adc.c: 153:     {
{
"154
[; ;MCAL/ADC/mcal_adc.c: 154:         (ADCON0bits.GODONE=1);
[e = . . _ADCON0bits 7 1 -> -> 1 `i `uc ]
"155
[; ;MCAL/ADC/mcal_adc.c: 155:     }
}
[e :U 286 ]
"156
[; ;MCAL/ADC/mcal_adc.c: 156:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 284  ]
"157
[; ;MCAL/ADC/mcal_adc.c: 157: }
[e :UE 284 ]
}
"168
[; ;MCAL/ADC/mcal_adc.c: 168: Std_ReturnType ADC_Is_Conversion_Done(const adc_config_st* _adc,adc_conversion_status_et*_status)
[v _ADC_Is_Conversion_Done `(uc ~T0 @X0 1 ef2`*CS274`*E3069 ]
"169
[; ;MCAL/ADC/mcal_adc.c: 169: {
{
[e :U _ADC_Is_Conversion_Done ]
"168
[; ;MCAL/ADC/mcal_adc.c: 168: Std_ReturnType ADC_Is_Conversion_Done(const adc_config_st* _adc,adc_conversion_status_et*_status)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v __status `*E3069 ~T0 @X0 1 r2 ]
"169
[; ;MCAL/ADC/mcal_adc.c: 169: {
[f ]
"170
[; ;MCAL/ADC/mcal_adc.c: 170:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"171
[; ;MCAL/ADC/mcal_adc.c: 171:     if ((((void*)0)==_adc)||(((void*)0)==_status))
[e $ ! || == -> -> -> 0 `i `*v `*CS274 __adc == -> -> -> 0 `i `*v `*E3069 __status 288  ]
"172
[; ;MCAL/ADC/mcal_adc.c: 172:     {
{
"173
[; ;MCAL/ADC/mcal_adc.c: 173:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"174
[; ;MCAL/ADC/mcal_adc.c: 174:     }
}
[e $U 289  ]
"175
[; ;MCAL/ADC/mcal_adc.c: 175:     else
[e :U 288 ]
"176
[; ;MCAL/ADC/mcal_adc.c: 176:     {
{
"177
[; ;MCAL/ADC/mcal_adc.c: 177:       *_status=(uint8)!((ADCON0bits.GO_nDONE));
[e = *U __status -> -> -> ! != -> . . _ADCON0bits 1 1 `i -> 0 `i `i `uc `E3069 ]
"178
[; ;MCAL/ADC/mcal_adc.c: 178:     }
}
[e :U 289 ]
"179
[; ;MCAL/ADC/mcal_adc.c: 179:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 287  ]
"180
[; ;MCAL/ADC/mcal_adc.c: 180: }
[e :UE 287 ]
}
"189
[; ;MCAL/ADC/mcal_adc.c: 189: Std_ReturnType ADC_Get_Conversion_Results(const adc_config_st* _adc,adc_result_t*_result)
[v _ADC_Get_Conversion_Results `(uc ~T0 @X0 1 ef2`*CS274`*us ]
"190
[; ;MCAL/ADC/mcal_adc.c: 190: {
{
[e :U _ADC_Get_Conversion_Results ]
"189
[; ;MCAL/ADC/mcal_adc.c: 189: Std_ReturnType ADC_Get_Conversion_Results(const adc_config_st* _adc,adc_result_t*_result)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v __result `*us ~T0 @X0 1 r2 ]
"190
[; ;MCAL/ADC/mcal_adc.c: 190: {
[f ]
"191
[; ;MCAL/ADC/mcal_adc.c: 191:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"192
[; ;MCAL/ADC/mcal_adc.c: 192:     if ((((void*)0)==_adc)||(((void*)0)==_result))
[e $ ! || == -> -> -> 0 `i `*v `*CS274 __adc == -> -> -> 0 `i `*v `*us __result 291  ]
"193
[; ;MCAL/ADC/mcal_adc.c: 193:     {
{
"194
[; ;MCAL/ADC/mcal_adc.c: 194:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"195
[; ;MCAL/ADC/mcal_adc.c: 195:     }
}
[e $U 292  ]
"196
[; ;MCAL/ADC/mcal_adc.c: 196:     else
[e :U 291 ]
"197
[; ;MCAL/ADC/mcal_adc.c: 197:     {
{
"198
[; ;MCAL/ADC/mcal_adc.c: 198:         if(ADC_RESULT_LEFT==_adc->result_format)
[e $ ! == -> . `E3061 0 `ui -> . *U __adc 3 `ui 293  ]
"199
[; ;MCAL/ADC/mcal_adc.c: 199:          {
{
"200
[; ;MCAL/ADC/mcal_adc.c: 200:              *_result =(adc_result_t)(((ADRESH<<8)+(ADRESL<<6))>>6);
[e = *U __result -> >> + << -> _ADRESH `i -> 8 `i << -> _ADRESL `i -> 6 `i -> 6 `i `us ]
"201
[; ;MCAL/ADC/mcal_adc.c: 201:          }
}
[e $U 294  ]
"202
[; ;MCAL/ADC/mcal_adc.c: 202:          else if(ADC_RESULT_RIGHT==_adc->result_format)
[e :U 293 ]
[e $ ! == -> . `E3061 1 `ui -> . *U __adc 3 `ui 295  ]
"203
[; ;MCAL/ADC/mcal_adc.c: 203:          {
{
"204
[; ;MCAL/ADC/mcal_adc.c: 204:              *_result =(adc_result_t)((ADRESH<<8)+ADRESL);
[e = *U __result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"205
[; ;MCAL/ADC/mcal_adc.c: 205:          }
}
[e $U 296  ]
"206
[; ;MCAL/ADC/mcal_adc.c: 206:          else
[e :U 295 ]
"207
[; ;MCAL/ADC/mcal_adc.c: 207:          {
{
"208
[; ;MCAL/ADC/mcal_adc.c: 208:               *_result =(adc_result_t)((ADRESH<<8)+ADRESL);
[e = *U __result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"209
[; ;MCAL/ADC/mcal_adc.c: 209:          }
}
[e :U 296 ]
[e :U 294 ]
"211
[; ;MCAL/ADC/mcal_adc.c: 211:     }
}
[e :U 292 ]
"212
[; ;MCAL/ADC/mcal_adc.c: 212:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 290  ]
"213
[; ;MCAL/ADC/mcal_adc.c: 213: }
[e :UE 290 ]
}
"223
[; ;MCAL/ADC/mcal_adc.c: 223: Std_ReturnType ADC_Get_Conversion_Blocking(const adc_config_st* _adc,adc_channel_select_et _channel,adc_result_t*_result)
[v _ADC_Get_Conversion_Blocking `(uc ~T0 @X0 1 ef3`*CS274`E3027`*us ]
"224
[; ;MCAL/ADC/mcal_adc.c: 224: {
{
[e :U _ADC_Get_Conversion_Blocking ]
"223
[; ;MCAL/ADC/mcal_adc.c: 223: Std_ReturnType ADC_Get_Conversion_Blocking(const adc_config_st* _adc,adc_channel_select_et _channel,adc_result_t*_result)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v __channel `E3027 ~T0 @X0 1 r2 ]
[v __result `*us ~T0 @X0 1 r3 ]
"224
[; ;MCAL/ADC/mcal_adc.c: 224: {
[f ]
"225
[; ;MCAL/ADC/mcal_adc.c: 225:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"226
[; ;MCAL/ADC/mcal_adc.c: 226:     if ((((void*)0)==_adc)||(((void*)0)==_result))
[e $ ! || == -> -> -> 0 `i `*v `*CS274 __adc == -> -> -> 0 `i `*v `*us __result 298  ]
"227
[; ;MCAL/ADC/mcal_adc.c: 227:     {
{
"228
[; ;MCAL/ADC/mcal_adc.c: 228:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"229
[; ;MCAL/ADC/mcal_adc.c: 229:     }
}
[e $U 299  ]
"230
[; ;MCAL/ADC/mcal_adc.c: 230:     else
[e :U 298 ]
"231
[; ;MCAL/ADC/mcal_adc.c: 231:     {
{
"234
[; ;MCAL/ADC/mcal_adc.c: 234:           ERRORSTATUS= ADC_select_channel(_adc,_channel);
[e = _ERRORSTATUS ( _ADC_select_channel (2 , __adc __channel ]
"236
[; ;MCAL/ADC/mcal_adc.c: 236:           ERRORSTATUS= ADC_Start_Conversion(_adc);
[e = _ERRORSTATUS ( _ADC_Start_Conversion (1 __adc ]
"238
[; ;MCAL/ADC/mcal_adc.c: 238:           while((ADCON0bits.GO_nDONE))
[e $U 300  ]
[e :U 301 ]
"240
[; ;MCAL/ADC/mcal_adc.c: 240:          ERRORSTATUS= ADC_Get_Conversion_Results(_adc,_result);
[e = _ERRORSTATUS ( _ADC_Get_Conversion_Results (2 , __adc __result ]
[e :U 300 ]
"238
[; ;MCAL/ADC/mcal_adc.c: 238:           while((ADCON0bits.GO_nDONE))
[e $ != -> . . _ADCON0bits 1 1 `i -> 0 `i 301  ]
[e :U 302 ]
"241
[; ;MCAL/ADC/mcal_adc.c: 241:           _delay((unsigned long)((20)*(24000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 24000000 `l `d .4000.0 `ul ]
"242
[; ;MCAL/ADC/mcal_adc.c: 242:     }
}
[e :U 299 ]
"243
[; ;MCAL/ADC/mcal_adc.c: 243:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 297  ]
"244
[; ;MCAL/ADC/mcal_adc.c: 244: }
[e :UE 297 ]
}
"253
[; ;MCAL/ADC/mcal_adc.c: 253: Std_ReturnType ADC_Get_Conversion_Interrupt(const adc_config_st* _adc,adc_channel_select_et _channel)
[v _ADC_Get_Conversion_Interrupt `(uc ~T0 @X0 1 ef2`*CS274`E3027 ]
"254
[; ;MCAL/ADC/mcal_adc.c: 254: {
{
[e :U _ADC_Get_Conversion_Interrupt ]
"253
[; ;MCAL/ADC/mcal_adc.c: 253: Std_ReturnType ADC_Get_Conversion_Interrupt(const adc_config_st* _adc,adc_channel_select_et _channel)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
[v __channel `E3027 ~T0 @X0 1 r2 ]
"254
[; ;MCAL/ADC/mcal_adc.c: 254: {
[f ]
"255
[; ;MCAL/ADC/mcal_adc.c: 255:  Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"256
[; ;MCAL/ADC/mcal_adc.c: 256:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 304  ]
"257
[; ;MCAL/ADC/mcal_adc.c: 257:     {
{
"258
[; ;MCAL/ADC/mcal_adc.c: 258:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"259
[; ;MCAL/ADC/mcal_adc.c: 259:     }
}
[e $U 305  ]
"260
[; ;MCAL/ADC/mcal_adc.c: 260:     else
[e :U 304 ]
"261
[; ;MCAL/ADC/mcal_adc.c: 261:     {
{
"263
[; ;MCAL/ADC/mcal_adc.c: 263:           ERRORSTATUS= ADC_select_channel(_adc,_channel);
[e = _ERRORSTATUS ( _ADC_select_channel (2 , __adc __channel ]
"265
[; ;MCAL/ADC/mcal_adc.c: 265:           ERRORSTATUS= ADC_Start_Conversion(_adc);
[e = _ERRORSTATUS ( _ADC_Start_Conversion (1 __adc ]
"266
[; ;MCAL/ADC/mcal_adc.c: 266:     }
}
[e :U 305 ]
"267
[; ;MCAL/ADC/mcal_adc.c: 267:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 303  ]
"268
[; ;MCAL/ADC/mcal_adc.c: 268: }
[e :UE 303 ]
}
"269
[; ;MCAL/ADC/mcal_adc.c: 269: static Std_ReturnType adc_channel_pin_config_as_input(const adc_channel_select_et _channel)
[v _adc_channel_pin_config_as_input `(uc ~T0 @X0 1 sf1`CE3027 ]
"270
[; ;MCAL/ADC/mcal_adc.c: 270: {
{
[e :U _adc_channel_pin_config_as_input ]
"269
[; ;MCAL/ADC/mcal_adc.c: 269: static Std_ReturnType adc_channel_pin_config_as_input(const adc_channel_select_et _channel)
[v __channel `CE3027 ~T0 @X0 1 r1 ]
"270
[; ;MCAL/ADC/mcal_adc.c: 270: {
[f ]
"271
[; ;MCAL/ADC/mcal_adc.c: 271: Std_ReturnType ERRORSTATUS=(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"272
[; ;MCAL/ADC/mcal_adc.c: 272:        switch (_channel)
[e $U 308  ]
"273
[; ;MCAL/ADC/mcal_adc.c: 273:        {
{
"274
[; ;MCAL/ADC/mcal_adc.c: 274:            case ADC_CHANEL_AN0: (TRISA|=( (uint8)1<<0x0 )); break;
[e :U 309 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 307  ]
"275
[; ;MCAL/ADC/mcal_adc.c: 275:            case ADC_CHANEL_AN1: (TRISA|=( (uint8)1<<0x1 )); break;
[e :U 310 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 307  ]
"276
[; ;MCAL/ADC/mcal_adc.c: 276:            case ADC_CHANEL_AN2: (TRISA|=( (uint8)1<<0x2 )); break;
[e :U 311 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 307  ]
"277
[; ;MCAL/ADC/mcal_adc.c: 277:            case ADC_CHANEL_AN3: (TRISA|=( (uint8)1<<0x3 )); break;
[e :U 312 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
[e $U 307  ]
"278
[; ;MCAL/ADC/mcal_adc.c: 278:            case ADC_CHANEL_AN4: (TRISA|=( (uint8)1<<0x5 )); break;
[e :U 313 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 5 `i `Vuc ]
[e $U 307  ]
"279
[; ;MCAL/ADC/mcal_adc.c: 279:            case ADC_CHANEL_AN5: (TRISE|=( (uint8)1<<0x0 )); break;
[e :U 314 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 307  ]
"280
[; ;MCAL/ADC/mcal_adc.c: 280:            case ADC_CHANEL_AN6: (TRISE|=( (uint8)1<<0x1 )); break;
[e :U 315 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 307  ]
"281
[; ;MCAL/ADC/mcal_adc.c: 281:            case ADC_CHANEL_AN7: (TRISE|=( (uint8)1<<0x2 )); break;
[e :U 316 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 307  ]
"282
[; ;MCAL/ADC/mcal_adc.c: 282:            case ADC_CHANEL_AN8: (TRISB|=( (uint8)1<<0x2 )); break;
[e :U 317 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 307  ]
"283
[; ;MCAL/ADC/mcal_adc.c: 283:            case ADC_CHANEL_AN9: (TRISB|=( (uint8)1<<0x3 )); break;
[e :U 318 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
[e $U 307  ]
"284
[; ;MCAL/ADC/mcal_adc.c: 284:            case ADC_CHANEL_AN10: (TRISB|=( (uint8)1<<0x1 )); break;
[e :U 319 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 307  ]
"285
[; ;MCAL/ADC/mcal_adc.c: 285:            case ADC_CHANEL_AN11: (TRISB|=( (uint8)1<<0x4 )); break;
[e :U 320 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 4 `i `Vuc ]
[e $U 307  ]
"286
[; ;MCAL/ADC/mcal_adc.c: 286:            case ADC_CHANEL_AN12: (TRISB|=( (uint8)1<<0x0 )); break;
[e :U 321 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 307  ]
"287
[; ;MCAL/ADC/mcal_adc.c: 287:        }
}
[e $U 307  ]
[e :U 308 ]
[e [\ -> __channel `ui , $ -> . `E3027 0 `ui 309
 , $ -> . `E3027 1 `ui 310
 , $ -> . `E3027 2 `ui 311
 , $ -> . `E3027 3 `ui 312
 , $ -> . `E3027 4 `ui 313
 , $ -> . `E3027 5 `ui 314
 , $ -> . `E3027 6 `ui 315
 , $ -> . `E3027 7 `ui 316
 , $ -> . `E3027 8 `ui 317
 , $ -> . `E3027 9 `ui 318
 , $ -> . `E3027 10 `ui 319
 , $ -> . `E3027 11 `ui 320
 , $ -> . `E3027 12 `ui 321
 307 ]
[e :U 307 ]
"289
[; ;MCAL/ADC/mcal_adc.c: 289:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 306  ]
"290
[; ;MCAL/ADC/mcal_adc.c: 290: }
[e :UE 306 ]
}
"291
[; ;MCAL/ADC/mcal_adc.c: 291: static Std_ReturnType adc_select_result_formate(const adc_config_st* _adc)
[v _adc_select_result_formate `(uc ~T0 @X0 1 sf1`*CS274 ]
"292
[; ;MCAL/ADC/mcal_adc.c: 292: {
{
[e :U _adc_select_result_formate ]
"291
[; ;MCAL/ADC/mcal_adc.c: 291: static Std_ReturnType adc_select_result_formate(const adc_config_st* _adc)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
"292
[; ;MCAL/ADC/mcal_adc.c: 292: {
[f ]
"293
[; ;MCAL/ADC/mcal_adc.c: 293:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"294
[; ;MCAL/ADC/mcal_adc.c: 294:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 323  ]
"295
[; ;MCAL/ADC/mcal_adc.c: 295:     {
{
"296
[; ;MCAL/ADC/mcal_adc.c: 296:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"297
[; ;MCAL/ADC/mcal_adc.c: 297:     }
}
[e $U 324  ]
"298
[; ;MCAL/ADC/mcal_adc.c: 298:     else
[e :U 323 ]
"299
[; ;MCAL/ADC/mcal_adc.c: 299:     {
{
"300
[; ;MCAL/ADC/mcal_adc.c: 300:          if(ADC_RESULT_LEFT==_adc->result_format)
[e $ ! == -> . `E3061 0 `ui -> . *U __adc 3 `ui 325  ]
"301
[; ;MCAL/ADC/mcal_adc.c: 301:          {
{
"302
[; ;MCAL/ADC/mcal_adc.c: 302:              (ADCON2bits.ADFM=0);
[e = . . _ADCON2bits 0 3 -> -> 0 `i `uc ]
"303
[; ;MCAL/ADC/mcal_adc.c: 303:          }
}
[e $U 326  ]
"304
[; ;MCAL/ADC/mcal_adc.c: 304:          else if(ADC_RESULT_RIGHT==_adc->result_format)
[e :U 325 ]
[e $ ! == -> . `E3061 1 `ui -> . *U __adc 3 `ui 327  ]
"305
[; ;MCAL/ADC/mcal_adc.c: 305:          {
{
"306
[; ;MCAL/ADC/mcal_adc.c: 306:              (ADCON2bits.ADFM=1);
[e = . . _ADCON2bits 0 3 -> -> 1 `i `uc ]
"307
[; ;MCAL/ADC/mcal_adc.c: 307:          }
}
[e $U 328  ]
"308
[; ;MCAL/ADC/mcal_adc.c: 308:          else
[e :U 327 ]
"309
[; ;MCAL/ADC/mcal_adc.c: 309:          {
{
"310
[; ;MCAL/ADC/mcal_adc.c: 310:              (ADCON2bits.ADFM=1);
[e = . . _ADCON2bits 0 3 -> -> 1 `i `uc ]
"311
[; ;MCAL/ADC/mcal_adc.c: 311:          }
}
[e :U 328 ]
[e :U 326 ]
"312
[; ;MCAL/ADC/mcal_adc.c: 312:     }
}
[e :U 324 ]
"313
[; ;MCAL/ADC/mcal_adc.c: 313:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 322  ]
"314
[; ;MCAL/ADC/mcal_adc.c: 314: }
[e :UE 322 ]
}
"315
[; ;MCAL/ADC/mcal_adc.c: 315: static Std_ReturnType adc_select_voltage_reference(const adc_config_st* _adc)
[v _adc_select_voltage_reference `(uc ~T0 @X0 1 sf1`*CS274 ]
"316
[; ;MCAL/ADC/mcal_adc.c: 316: {
{
[e :U _adc_select_voltage_reference ]
"315
[; ;MCAL/ADC/mcal_adc.c: 315: static Std_ReturnType adc_select_voltage_reference(const adc_config_st* _adc)
[v __adc `*CS274 ~T0 @X0 1 r1 ]
"316
[; ;MCAL/ADC/mcal_adc.c: 316: {
[f ]
"317
[; ;MCAL/ADC/mcal_adc.c: 317:     Std_ReturnType ERRORSTATUS =(Std_ReturnType) 0x01;
[v _ERRORSTATUS `uc ~T0 @X0 1 a ]
[e = _ERRORSTATUS -> -> 1 `i `uc ]
"318
[; ;MCAL/ADC/mcal_adc.c: 318:     if (((void*)0)==_adc)
[e $ ! == -> -> -> 0 `i `*v `*CS274 __adc 330  ]
"319
[; ;MCAL/ADC/mcal_adc.c: 319:     {
{
"320
[; ;MCAL/ADC/mcal_adc.c: 320:         ERRORSTATUS=(Std_ReturnType) 0x00;
[e = _ERRORSTATUS -> -> 0 `i `uc ]
"321
[; ;MCAL/ADC/mcal_adc.c: 321:     }
}
[e $U 331  ]
"322
[; ;MCAL/ADC/mcal_adc.c: 322:     else
[e :U 330 ]
"323
[; ;MCAL/ADC/mcal_adc.c: 323:     {
{
"324
[; ;MCAL/ADC/mcal_adc.c: 324:          if(ADC_VOLTAGE_REFERANCE_INTERNAL==_adc->voltage_referance)
[e $ ! == -> . `E3065 0 `ui -> . *U __adc 4 `ui 332  ]
"325
[; ;MCAL/ADC/mcal_adc.c: 325:          {
{
"326
[; ;MCAL/ADC/mcal_adc.c: 326:             do{ADCON1bits.VCFG1=0; ADCON1bits.VCFG0=0; }while(0);
[e :U 335 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 334 ]
"327
[; ;MCAL/ADC/mcal_adc.c: 327:          }
}
[e $U 336  ]
"328
[; ;MCAL/ADC/mcal_adc.c: 328:          else if(ADC_VOLTAGE_REFERANCE_EXTERNAL==_adc->voltage_referance)
[e :U 332 ]
[e $ ! == -> . `E3065 1 `ui -> . *U __adc 4 `ui 337  ]
"329
[; ;MCAL/ADC/mcal_adc.c: 329:          {
{
"330
[; ;MCAL/ADC/mcal_adc.c: 330:              do{ADCON1bits.VCFG1=1; ADCON1bits.VCFG0=1; }while(0);
[e :U 340 ]
{
[e = . . _ADCON1bits 1 5 -> -> 1 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 1 `i `uc ]
}
[e :U 339 ]
"331
[; ;MCAL/ADC/mcal_adc.c: 331:          }
}
[e $U 341  ]
"332
[; ;MCAL/ADC/mcal_adc.c: 332:          else
[e :U 337 ]
"333
[; ;MCAL/ADC/mcal_adc.c: 333:          {
{
"334
[; ;MCAL/ADC/mcal_adc.c: 334:            do{ADCON1bits.VCFG1=0; ADCON1bits.VCFG0=0; }while(0);
[e :U 344 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 343 ]
"335
[; ;MCAL/ADC/mcal_adc.c: 335:          }
}
[e :U 341 ]
[e :U 336 ]
"336
[; ;MCAL/ADC/mcal_adc.c: 336:     }
}
[e :U 331 ]
"337
[; ;MCAL/ADC/mcal_adc.c: 337:     return ERRORSTATUS;
[e ) _ERRORSTATUS ]
[e $UE 329  ]
"338
[; ;MCAL/ADC/mcal_adc.c: 338: }
[e :UE 329 ]
}
"341
[; ;MCAL/ADC/mcal_adc.c: 341: void ADC_ISR(void)
[v _ADC_ISR `(v ~T0 @X0 1 ef ]
"342
[; ;MCAL/ADC/mcal_adc.c: 342: {
{
[e :U _ADC_ISR ]
[f ]
"347
[; ;MCAL/ADC/mcal_adc.c: 347: }
[e :UE 345 ]
}
